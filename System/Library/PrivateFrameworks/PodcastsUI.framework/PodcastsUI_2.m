uint64_t sub_1E3D585D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1E3E7C100();
  v5 = *(void *)(v4 - 8);
  v6 = MEMORY[0x1F4188790](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  v9 = sub_1E3E7C0D0();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v11) {
    v9 = 0;
  }
  v12 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  v13 = *(void *)(v2 + 16);
  if (!*(void *)(v13 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1E3C2EED8(v9, v11);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    swift_bridgeObjectRelease();
    return 0;
  }
  v22 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = sub_1E3D5A524(a1);
  v17 = v22;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v12;
  *v12 = 0x8000000000000000;
  sub_1E3E68128(v17, v9, v11, isUniquelyReferenced_nonNull_native);
  *v12 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v16;
}

uint64_t sub_1E3D587E8()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t DynamicImpressionsCalculator.__allocating_init(configuration:impressionsTracker:notificationCenter:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1E3D5B4C4(a1, a2, a3);
  swift_release();

  return v4;
}

void sub_1E3D58864(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v4 - 8);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver;
  if (!*(uint64_t *)((char *)v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver))
  {
    uint64_t v8 = sub_1E3E7D1E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    v10 = (void *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = a1;
    v10[5] = v9;
    v10[6] = v3;
    id v11 = a1;
    *(uint64_t *)((char *)v1 + v7) = sub_1E3C4CD5C((uint64_t)v6, (uint64_t)&unk_1EAE27DE8, (uint64_t)v10);
    swift_release();
  }
}

uint64_t DynamicImpressionsCalculator.deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver))
  {
    sub_1E3E775E0();
    sub_1E3E7D240();
    swift_release();
  }
  swift_release();
  swift_release();
  sub_1E3C10CE0(v0 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID, &qword_1EBFE4848);
  swift_release();
  swift_release();
  return v0;
}

uint64_t DynamicImpressionsCalculator.__deallocating_deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver))
  {
    sub_1E3E775E0();
    sub_1E3E7D240();
    swift_release();
  }
  swift_release();
  swift_release();
  sub_1E3C10CE0(v0 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID, &qword_1EBFE4848);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t DynamicImpressionsCalculator.isVisible.getter()
{
  return sub_1E3E7C3B0() & 1;
}

uint64_t DynamicImpressionsCalculator.isVisible.setter()
{
  return sub_1E3E7C3C0();
}

uint64_t (*DynamicImpressionsCalculator.isVisible.modify(uint64_t a1))()
{
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = sub_1E3E7C3B0() & 1;
  return sub_1E3D58C04;
}

uint64_t sub_1E3D58C04()
{
  return sub_1E3E7C3C0();
}

uint64_t DynamicImpressionsCalculator.viewBounds.getter()
{
  return sub_1E3E7C330();
}

uint64_t DynamicImpressionsCalculator.viewBounds.setter()
{
  return sub_1E3E7C340();
}

void (*DynamicImpressionsCalculator.viewBounds.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + 24);
  sub_1E3E7C330();
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  return sub_1E3D58CDC;
}

void sub_1E3D58CDC(void **a1)
{
  uint64_t v1 = *a1;
  sub_1E3E7C340();

  free(v1);
}

uint64_t DynamicImpressionsCalculator.addElement(_:in:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v2 = sub_1E3E77E20();
  uint64_t v18 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7C100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v17 - v10;
  sub_1E3E7C120();
  uint64_t v12 = sub_1E3D58168((uint64_t)v11);
  char v14 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  uint64_t v15 = v20;
  if ((v14 & 1) == 0 && v12 != v20)
  {
    sub_1E3E77E00();
    sub_1E3E7C5B0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v19);
  }
  sub_1E3E7C120();
  sub_1E3D58324(v15, 0, (uint64_t)v8);
  return sub_1E3E7C320();
}

uint64_t DynamicImpressionsCalculator.increaseImpressionableFrame(of:by:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7C100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7C120();
  sub_1E3D58168((uint64_t)v7);
  char v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v9) {
    DynamicImpressionsCalculator.addElement(_:in:at:)(a1, a2);
  }
  return sub_1E3E7C3A0();
}

uint64_t DynamicImpressionsCalculator.moveElement(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v2 = sub_1E3E77E20();
  uint64_t v18 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7C100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - v10;
  sub_1E3E7C120();
  uint64_t v12 = sub_1E3D58168((uint64_t)v11);
  char v14 = v13;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  uint64_t v16 = v20;
  if ((v14 & 1) == 0 && v12 != v20)
  {
    sub_1E3E7C120();
    sub_1E3D58324(v16, 0, (uint64_t)v8);
    sub_1E3E77E00();
    sub_1E3E7C5B0();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v4, v19);
  }
  return result;
}

uint64_t DynamicImpressionsCalculator.deleteElement(_:)()
{
  uint64_t v0 = sub_1E3E77E20();
  uint64_t v14 = *(void *)(v0 - 8);
  uint64_t v15 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E7C100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1E3E7C120();
  sub_1E3D58168((uint64_t)v9);
  char v11 = v10;
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t result = v12(v9, v3);
  if ((v11 & 1) == 0)
  {
    sub_1E3E7C120();
    sub_1E3D585D4((uint64_t)v6);
    v12(v6, v3);
    sub_1E3E7C370();
    sub_1E3E77E00();
    sub_1E3E7C5C0();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v2, v15);
  }
  return result;
}

uint64_t DynamicImpressionsCalculator.removeElement(_:)()
{
  uint64_t v0 = sub_1E3E7C100();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - v5;
  sub_1E3E7C120();
  sub_1E3D58168((uint64_t)v6);
  char v8 = v7;
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t result = v9(v6, v0);
  if ((v8 & 1) == 0)
  {
    sub_1E3E7C120();
    sub_1E3D585D4((uint64_t)v3);
    v9(v3, v0);
    return sub_1E3E7C370();
  }
  return result;
}

Swift::Void __swiftcall DynamicImpressionsCalculator.removeAllElements()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4848);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_elementPositions);
  sub_1E3D5B718(v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID, (uint64_t)v4);
  uint64_t v6 = sub_1E3E7C100();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1E3C10CE0((uint64_t)v4, &qword_1EBFE4848);
    swift_beginAccess();
    *(void *)(v5 + 16) = MEMORY[0x1E4FBC868];
  }
  else
  {
    uint64_t v8 = sub_1E3E7C0F0();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1E3D5A454(v8, v10);
    swift_endAccess();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  sub_1E3E7C380();
}

uint64_t DynamicImpressionsCalculator.childCalculator(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4848);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E7C310();
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = sub_1E3E7C100();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_elementPositions);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver) = 0;
  *(unsigned char *)(v13 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_wasVisibleBeforeGoingIntoBackground) = 2;
  *(void *)(v13 + 16) = v9;
  *(void *)(v13 + 24) = v8;
  sub_1E3D5B780((uint64_t)v6, v13 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID);
  *(void *)(v13 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_elementPositions) = v12;
  sub_1E3E775E0();
  sub_1E3E775E0();
  return v13;
}

uint64_t DynamicImpressionsCalculator.changeImpressionableBounds(for:to:)()
{
  return sub_1E3E7C390();
}

id sub_1E3D599D4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4C20);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1E3E86650;
  uint64_t v1 = (void *)*MEMORY[0x1E4FB2640];
  id v5 = (id)*MEMORY[0x1E4FB2730];
  uint64_t v2 = *MEMORY[0x1E4FB2730];
  *(void *)(v0 + 32) = *MEMORY[0x1E4FB2640];
  *(void *)(v0 + 40) = v2;
  qword_1EBFE3B10 = v0;
  id v3 = v1;

  return v5;
}

uint64_t sub_1E3D59A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x1F4188298](sub_1E3D59A74, 0, 0);
}

uint64_t sub_1E3D59A74()
{
  if (qword_1EBFE3B20 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBFE3B10;
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 56) = v2;
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_1E3E775E0();
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *id v3 = v0;
  v3[1] = sub_1E3D59BD8;
  return MEMORY[0x1F41459A8](v1, &unk_1EAE27DF8, v2);
}

uint64_t sub_1E3D59BD8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1E3D59CEC(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  sub_1E3E7BB40();
  v2[14] = swift_task_alloc();
  uint64_t v3 = sub_1E3E7CA90();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3D59DD8, 0, 0);
}

uint64_t sub_1E3D59DD8()
{
  uint64_t v1 = (void *)sub_1E3E779B0();
  uint64_t v2 = sub_1E3E7CD30();
  uint64_t v4 = v3;
  if (v2 == sub_1E3E7CD30() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      uint64_t v8 = sub_1E3E7CD30();
      uint64_t v10 = v9;
      if (v8 == sub_1E3E7CD30() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v13 = sub_1E3E7E150();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if ((v13 & 1) == 0)
        {
          if (qword_1EBFE2DB8 != -1) {
            swift_once();
          }
          uint64_t v15 = v0[16];
          uint64_t v14 = v0[17];
          uint64_t v16 = v0[15];
          uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EBFE49B8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
          sub_1E3E7BB60();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
          sub_1E3E7BB30();
          sub_1E3E7BB20();
          uint64_t v18 = sub_1E3E779B0();
          type metadata accessor for Name(0);
          v0[5] = v19;
          v0[2] = v18;
          sub_1E3E7BB00();
          sub_1E3C10CE0((uint64_t)(v0 + 2), &qword_1EBFE6190);
          sub_1E3E7BB20();
          sub_1E3E7BB50();
          sub_1E3E7C870();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
          goto LABEL_23;
        }
      }
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      v0[20] = Strong;
      if (Strong)
      {
        sub_1E3E7D1A0();
        v0[21] = sub_1E3E7D190();
        uint64_t v21 = sub_1E3E7D130();
        uint64_t v23 = v26;
        v24 = sub_1E3D5A2C8;
        goto LABEL_17;
      }
LABEL_23:
      swift_task_dealloc();
      swift_task_dealloc();
      v27 = (uint64_t (*)(void))v0[1];
      return v27();
    }
  }

  swift_beginAccess();
  uint64_t v20 = swift_weakLoadStrong();
  v0[18] = v20;
  if (!v20) {
    goto LABEL_23;
  }
  sub_1E3E7D1A0();
  v0[19] = sub_1E3E7D190();
  uint64_t v21 = sub_1E3E7D130();
  uint64_t v23 = v22;
  v24 = sub_1E3D5A228;
LABEL_17:
  return MEMORY[0x1F4188298](v24, v21, v23);
}

uint64_t sub_1E3D5A228()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_release();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_wasVisibleBeforeGoingIntoBackground) = sub_1E3E7C3B0() & 1;
  sub_1E3E7C3C0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3D5A2C8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_wasVisibleBeforeGoingIntoBackground) != 2) {
    sub_1E3E7C3C0();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

double sub_1E3D5A36C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1E3C2E448(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1E3D13114();
      uint64_t v9 = v11;
    }
    sub_1E3C1B480(*(void *)(v9 + 48) + 40 * v6);
    sub_1E3C1B524((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), v12);
    sub_1E3D5A778(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    sub_1E3C1B524(v12, a2);
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1E3D5A454(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1E3C2EED8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1E3D14144();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1E3D5AC3C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1E3D5A524(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1E3C2EF6C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1E3D142F8();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1E3E7C100();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1E3D5AE38(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1E3D5A628(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1E3C2E8CC(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v2;
      uint64_t v17 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1E3D14750();
        uint64_t v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = sub_1E3E7DF50();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1E3E7DD00();
  uint64_t v9 = sub_1E3DE2DB0(v5, v8);
  sub_1E3E775E0();
  a1 = sub_1E3C2E8CC((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_1E3D5B130(a1, v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1E3D5A778(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1E3E7DCD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1E3C30D7C(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_1E3E7DD40();
        double result = sub_1E3C1B480((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1E3D5A944(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77E50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_1E3E7DCD0();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      char v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1E3D156A8(&qword_1EBFE5E10, MEMORY[0x1E4F27990]);
        uint64_t v17 = sub_1E3E7CC20();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (void *)(v21 + 8 * a1);
            uint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              *uint64_t v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1E3D5AC3C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1E3E7DCD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 16 * v6 + 8);
        sub_1E3E7E270();
        sub_1E3E7E280();
        if (v9)
        {
          swift_bridgeObjectRetain();
          sub_1E3E7CE50();
        }
        uint64_t v10 = sub_1E3E7E2B0();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_13:
          uint64_t v12 = *(void *)(a2 + 48);
          char v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *char v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          int64_t v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
          {
            *int64_t v16 = *v17;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1E3D5AE38(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7C100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_1E3E7DCD0();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      char v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1E3D156A8(&qword_1EBFE4838, MEMORY[0x1E4F71380]);
        uint64_t v17 = sub_1E3E7CC20();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            BOOL v22 = (void *)(v21 + 8 * a1);
            uint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              *BOOL v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1E3D5B130(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1E3E7DCD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1E3E7DA70();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            int64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *int64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1E3D5B2E4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1E3E7DCD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1E3E7E270();
        swift_bridgeObjectRetain();
        sub_1E3E7CE50();
        uint64_t v12 = sub_1E3E7E2B0();
        double result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          int64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (long long *)(v17 + (v3 << 6));
          uint64_t v19 = (long long *)(v17 + (v6 << 6));
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 4))
          {
            long long v9 = *v19;
            long long v10 = v19[1];
            long long v11 = v19[3];
            v18[2] = v19[2];
            v18[3] = v11;
            *uint64_t v18 = v9;
            v18[1] = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1E3D5B4C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4848);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E7C350();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7C3D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  swift_retain_n();
  uint64_t v13 = sub_1E3E7C360();
  uint64_t v14 = sub_1E3E7C100();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  type metadata accessor for DynamicImpressionsCalculator.ElementPositionStore();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1E3C7FDE0(MEMORY[0x1E4FBC860]);
  type metadata accessor for DynamicImpressionsCalculator();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver) = 0;
  *(unsigned char *)(v16 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_wasVisibleBeforeGoingIntoBackground) = 2;
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = v13;
  sub_1E3D5B780((uint64_t)v8, v16 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID);
  *(void *)(v16 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_elementPositions) = v15;
  sub_1E3E775E0();
  sub_1E3D58864(a3);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v16;
}

uint64_t sub_1E3D5B718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3D5B780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3D5B7E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E3E7C3B0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1E3D5B81C()
{
  return sub_1E3E7C3C0();
}

uint64_t sub_1E3D5B848@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1E3E7C330();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_1E3D5B87C()
{
  return sub_1E3E7C340();
}

uint64_t sub_1E3D5B8AC()
{
  return type metadata accessor for DynamicImpressionsCalculator();
}

uint64_t type metadata accessor for DynamicImpressionsCalculator()
{
  uint64_t result = qword_1EBFE3B38;
  if (!qword_1EBFE3B38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3D5B900()
{
  sub_1E3D5B9CC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DynamicImpressionsCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DynamicImpressionsCalculator);
}

void sub_1E3D5B9CC()
{
  if (!qword_1EBFE4850)
  {
    sub_1E3E7C100();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE4850);
    }
  }
}

uint64_t type metadata accessor for DynamicImpressionsCalculator.ElementPositionStore()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1E3D5BAEC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1E3D5BB04(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering()
{
  return &type metadata for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering;
}

unint64_t sub_1E3D5BB38()
{
  unint64_t result = qword_1EBFE3A60;
  if (!qword_1EBFE3A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3A60);
  }
  return result;
}

uint64_t sub_1E3D5BB8C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3D5BBC4()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3D5BC0C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1E3C19DC4;
  *(_OWORD *)(v2 + 40) = v3;
  return MEMORY[0x1F4188298](sub_1E3D59A74, 0, 0);
}

uint64_t sub_1E3D5BCB8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1E3C19DC4;
  return sub_1E3D59CEC(a1, v1);
}

uint64_t dispatch thunk of SegmentedControl.selectedSegmentIndex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id FairPlayDebugHostingController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  v9[0] = 0;
  v9[1] = 0;
  v9[2] = sub_1E3C17F50;
  v9[3] = 0;
  char v10 = 0;
  uint64_t v2 = (void *)sub_1E3E7B140();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  id v4 = v2;
  uint64_t v5 = (void (*)(void *, void))sub_1E3E7B150();
  uint64_t v7 = *v6;
  uint64_t *v6 = (uint64_t)sub_1E3D5BF58;
  v6[1] = v3;
  sub_1E3C1A3C4(v7);
  v5(v9, 0);

  return v4;
}

id FairPlayDebugHostingController.init()()
{
  v7[0] = 0;
  v7[1] = 0;
  v7[2] = sub_1E3C17F50;
  v7[3] = 0;
  char v8 = 0;
  uint64_t v0 = (void *)sub_1E3E7B140();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  id v2 = v0;
  uint64_t v3 = (void (*)(void *, void))sub_1E3E7B150();
  uint64_t v5 = *v4;
  *id v4 = (uint64_t)sub_1E3D5C190;
  v4[1] = v1;
  sub_1E3C1A3C4(v5);
  v3(v7, 0);

  return v2;
}

uint64_t sub_1E3D5BF20()
{
  return swift_deallocObject();
}

id sub_1E3D5BF58()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1E3D5BF70()
{
}

void FairPlayDebugHostingController.__allocating_init(rootView:)()
{
}

void FairPlayDebugHostingController.init(rootView:)()
{
}

void FairPlayDebugHostingController.__allocating_init(coder:rootView:)()
{
}

void FairPlayDebugHostingController.init(coder:rootView:)()
{
}

id FairPlayDebugHostingController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FairPlayDebugHostingController()
{
  uint64_t result = qword_1EAE27E00;
  if (!qword_1EAE27E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3D5C110()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FairPlayDebugHostingController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FairPlayDebugHostingController);
}

uint64_t dispatch thunk of FairPlayDebugHostingController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for FairPlayDebugHostingController))();
}

uint64_t sub_1E3D5C184()
{
  return type metadata accessor for FairPlayDebugHostingController();
}

unint64_t static FetchPodcastForEpisodeIntent.kind.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t FetchPodcastForEpisodeIntent.episodeAdamID.getter()
{
  return *(void *)v0;
}

uint64_t FetchPodcastForEpisodeIntent.init(episodeAdamID:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1E3D5C1C0(void *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001E3E8F810;
}

ValueMetadata *type metadata accessor for FetchPodcastForEpisodeIntent()
{
  return &type metadata for FetchPodcastForEpisodeIntent;
}

uint64_t AddFavoriteCategoriesButtonTipProvider.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  AddFavoriteCategoriesButtonTipProvider.init(asPartOf:)(a1);
  return v2;
}

uint64_t AddFavoriteCategoriesButtonTipProvider.init(asPartOf:)(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5B48);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5AC8);
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5C98);
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v32 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5938);
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v33 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E3E7D560();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v14 + 104))(v17, *MEMORY[0x1E4F91E48], v13, v15);
  uint64_t v18 = (void *)sub_1E3C6EAEC((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D10);
  swift_allocObject();
  uint64_t v19 = sub_1E3E7A9C0();
  *(void *)(v42 + 16) = v19;
  uint64_t v43 = v19;
  sub_1E3C8E038();
  sub_1E3E775E0();
  id v45 = (id)sub_1E3E7D5F0();
  uint64_t v20 = sub_1E3E7D640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 1, 1, v20);
  sub_1E3C10DE8(&qword_1EBFE2ED0, &qword_1EBFE2D10);
  sub_1E3C32D34();
  sub_1E3E7AD10();
  sub_1E3CF1828((uint64_t)v3);

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v18;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1E3D5CA78;
  *(void *)(v22 + 24) = v21;
  id v23 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D00);
  sub_1E3C10DE8(&qword_1EBFE5B40, (uint64_t *)&unk_1EBFE5B48);
  uint64_t v24 = v35;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v24);
  uint64_t v25 = sub_1E3C10DE8(&qword_1EBFE5AC0, &qword_1EBFE5AC8);
  uint64_t v26 = v32;
  sub_1E3E7AB50();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  sub_1E3E775E0();
  uint64_t v43 = v8;
  uint64_t v44 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v38;
  BOOL v28 = v33;
  sub_1E3E7AB90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v27);
  sub_1E3C10DE8(&qword_1EBFE5930, &qword_1EBFE5938);
  uint64_t v29 = v39;
  uint64_t v30 = sub_1E3E7AB70();
  swift_release();

  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
  uint64_t result = v42;
  *(void *)(v42 + 24) = v30;
  return result;
}

unint64_t sub_1E3D5C8D4(void *a1)
{
  sub_1E3E7CE20();
  uint64_t v2 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  unsigned int v3 = objc_msgSend(a1, sel_BOOLForKey_, v2);

  if (v3
    || (sub_1E3E7CE10(),
        uint64_t v4 = (void *)sub_1E3E7CCF0(),
        swift_bridgeObjectRelease(),
        unsigned int v5 = objc_msgSend(a1, sel_BOOLForKey_, v4),
        v4,
        v5))
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    return sub_1E3C81150(v6);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DE0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
    *(unsigned char *)(inited + 32) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DE8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1E3E86660;
    *(void *)(v9 + 56) = &type metadata for AddFavoriteCategoriesButtonTip;
    *(void *)(v9 + 64) = sub_1E3D5CD14();
    *(void *)(inited + 40) = v9;
    unint64_t v10 = sub_1E3C81150(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57A0);
    swift_arrayDestroy();
    return v10;
  }
}

uint64_t sub_1E3D5CA40()
{
  return swift_deallocObject();
}

unint64_t sub_1E3D5CA78()
{
  return sub_1E3D5C8D4(*(void **)(v0 + 16));
}

uint64_t sub_1E3D5CA80()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3D5CAB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1E3D5CAE8()
{
  sub_1E3C10DE8(&qword_1EBFE5C20, &qword_1EBFE2D10);

  return sub_1E3E7AAA0();
}

uint64_t AddFavoriteCategoriesButtonTipProvider.tips.getter()
{
  return sub_1E3E775E0();
}

Swift::Void __swiftcall AddFavoriteCategoriesButtonTipProvider.requestRefresh()()
{
}

uint64_t AddFavoriteCategoriesButtonTipProvider.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t AddFavoriteCategoriesButtonTipProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1E3D5CC48()
{
  return sub_1E3E775E0();
}

uint64_t sub_1E3D5CC54()
{
  return sub_1E3E7AAA0();
}

uint64_t type metadata accessor for AddFavoriteCategoriesButtonTipProvider()
{
  return self;
}

uint64_t method lookup function for AddFavoriteCategoriesButtonTipProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AddFavoriteCategoriesButtonTipProvider);
}

uint64_t dispatch thunk of AddFavoriteCategoriesButtonTipProvider.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1E3D5CD14()
{
  unint64_t result = qword_1EBFE5648;
  if (!qword_1EBFE5648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE5648);
  }
  return result;
}

uint64_t StayUpToDateTipProvider.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  StayUpToDateTipProvider.init(asPartOf:)(a1);
  return v2;
}

uint64_t StayUpToDateTipProvider.init(asPartOf:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5B38);
  uint64_t v41 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CA0);
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v42 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5A48);
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  v46 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5950);
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  MEMORY[0x1F4188790](v11);
  v48 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4400);
  MEMORY[0x1F4188790](v13 - 8);
  double v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1E3E7D560();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_tipPublisher) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v20 = objc_msgSend(v53, sel_privateQueueContext);
  swift_unknownObjectRelease();
  *(void *)(v1 + 16) = v20;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4F91E48], v16);
  id v21 = v20;
  uint64_t v52 = a1;
  id v22 = v21;
  uint64_t v23 = sub_1E3C6EAEC((uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  *(void *)(v2 + 24) = v23;
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE0750);
  sub_1E3E7D8A0();
  sub_1E3CAC398((uint64_t)v15, v2 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_databasePublisher, (uint64_t *)&unk_1EBFE4400);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B30);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 24) = 0;
  *(void *)(v24 + 16) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_observerSubscription) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D10);
  swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_refreshSubject) = sub_1E3E7A9C0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5C10);
  swift_allocObject();
  uint64_t v25 = (void *)sub_1E3E7A9C0();
  *(void *)(v2 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_tipSubject) = v25;
  id v53 = v25;
  uint64_t v26 = qword_1EBFE4E78;
  sub_1E3E775E0();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)qword_1EBFE55B0;
  id v55 = (id)qword_1EBFE55B0;
  uint64_t v28 = sub_1E3E7D640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v6, 1, 1, v28);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3C10DE8(&qword_1EBFE5C08, (uint64_t *)&unk_1EBFE5C10);
  sub_1E3C32D34();
  id v29 = v27;
  sub_1E3E7AD10();
  sub_1E3C10CE0((uint64_t)v6, (uint64_t *)&unk_1EBFE27A0);

  uint64_t v30 = sub_1E3C10DE8((unint64_t *)&unk_1EBFE5B28, &qword_1EBFE5B38);
  v31 = v42;
  uint64_t v32 = (void *)v44;
  sub_1E3E7AB50();
  (*(void (**)(char *, void *))(v41 + 8))(v8, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D10);
  id v53 = v32;
  uint64_t v54 = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = v45;
  uint64_t v34 = v46;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v33);
  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A38, &qword_1EBFE5A48);
  sub_1E3E775E0();
  uint64_t v35 = v49;
  uint64_t v36 = v48;
  sub_1E3E7AB90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v35);
  swift_release();
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE5940, (uint64_t *)&unk_1EBFE5950);
  uint64_t v37 = v51;
  uint64_t v38 = sub_1E3E7AB70();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v37);
  *(void *)(v2 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_tipPublisher) = v38;
  swift_release();
  return v2;
}

uint64_t sub_1E3D5D5DC@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  int v3 = *a1;
  long long v14 = xmmword_1E3E86660;
  if (v3 == 1)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    memset(v15, 0, sizeof(v15));
  }
  else
  {
    uint64_t v4 = &type metadata for StayUpToDateTip;
    unint64_t v5 = sub_1E3D60394();
  }
  uint64_t v16 = v4;
  unint64_t v17 = v5;
  sub_1E3C34078((uint64_t)v15, (uint64_t)v13, &qword_1EBFE57B0);
  sub_1E3CAC398((uint64_t)v13, (uint64_t)&v10, &qword_1EBFE57B0);
  if (v11)
  {
    sub_1E3C1B644(&v10, (uint64_t)v12);
    sub_1E3C1B644(v12, (uint64_t)&v10);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1E3CB7364(0, v6[2] + 1, 1, v6);
    }
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_1E3CB7364((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    v6[2] = v8 + 1;
    sub_1E3C1B644(&v10, (uint64_t)&v6[5 * v8 + 4]);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v10, &qword_1EBFE57B0);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57B0);
  uint64_t result = swift_arrayDestroy();
  *a2 = v6;
  return result;
}

uint64_t sub_1E3D5D75C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_observerSubscription);
    uint64_t v2 = v1 + 4;
    int v3 = v1 + 6;
    os_unfair_lock_lock(v1 + 6);
    sub_1E3D601D8(v2);
    os_unfair_lock_unlock(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3D5D7E8()
{
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t result = sub_1E3E7D5F0();
  qword_1EBFE55B0 = result;
  return result;
}

uint64_t sub_1E3D5D82C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3D5D864()
{
  return sub_1E3D5D75C();
}

uint64_t sub_1E3D5D86C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE47A0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4400);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7A010();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C34078(v0 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_databasePublisher, (uint64_t)v7, (uint64_t *)&unk_1EBFE4400);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1E3C10CE0((uint64_t)v7, (uint64_t *)&unk_1EBFE4400);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E38);
    sub_1E3E7AA40();
    uint64_t v12 = sub_1E3D5E738((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v12 = sub_1E3D5DAD8((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v12;
}

uint64_t sub_1E3D5DAD8(uint64_t a1)
{
  uint64_t v62 = a1;
  uint64_t v67 = *v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v2 - 8);
  v79 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE59A0);
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  MEMORY[0x1F4188790](v4);
  v71 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5A68);
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  MEMORY[0x1F4188790](v6);
  v74 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5B60);
  uint64_t v78 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  v77 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1E3E7D680();
  uint64_t v9 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4670);
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE44C0);
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  double v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2EA0);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  unint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2EC0);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5A88);
  uint64_t v63 = *(void *)(v20 - 8);
  uint64_t v64 = v20;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5B00);
  uint64_t v69 = *(void *)(v23 - 8);
  uint64_t v70 = v23;
  MEMORY[0x1F4188790](v23);
  v68 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7D650();
  if (qword_1EBFE4E78 != -1) {
    swift_once();
  }
  id v82 = (id)qword_1EBFE55B0;
  sub_1E3E7A010();
  uint64_t v66 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3D60210();
  unint64_t v65 = sub_1E3C32D34();
  sub_1E3E7AD30();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4C10);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1E3E86660;
  *(void *)(v25 + 32) = MEMORY[0x1E4FBC860];
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE4660, &qword_1EBFE4670);
  uint64_t v26 = v55;
  sub_1E3E7AD00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v26);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE44B0, &qword_1EBFE44C0);
  uint64_t v27 = v57;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v27);
  uint64_t v28 = v81;
  id v82 = *(id *)(v81 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_refreshSubject);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D10);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE2E90, (uint64_t *)&unk_1EBFE2EA0);
  sub_1E3C10DE8(&qword_1EBFE2ED0, &qword_1EBFE2D10);
  uint64_t v29 = v59;
  sub_1E3E7AC60();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v17, v29);
  uint64_t v30 = *(void **)(v28 + 16);
  v31 = *(void **)(v28 + 24);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v31;
  v32[3] = v30;
  v32[4] = v67;
  id v33 = v30;
  id v34 = v31;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5BF8);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE2EB0, (uint64_t *)&unk_1EBFE2EC0);
  uint64_t v35 = v61;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v35);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A78, &qword_1EBFE5A88);
  sub_1E3C10DE8(&qword_1EBFE5BF0, (uint64_t *)&unk_1EBFE5BF8);
  uint64_t v36 = v68;
  uint64_t v37 = v64;
  sub_1E3E7ADA0();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v37);
  sub_1E3C10DE8(&qword_1EBFE5AF8, &qword_1EBFE5B00);
  sub_1E3D60274();
  uint64_t v39 = v70;
  uint64_t v38 = v71;
  sub_1E3E7AD40();
  *(void *)(swift_allocObject() + 16) = v34;
  id v40 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE54B0);
  sub_1E3C10DE8(&qword_1EBFE5998, &qword_1EBFE59A0);
  uint64_t v41 = v73;
  uint64_t v42 = v74;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v38, v41);
  uint64_t v43 = (void *)qword_1EBFE55B0;
  id v82 = (id)qword_1EBFE55B0;
  uint64_t v44 = sub_1E3E7D640();
  uint64_t v45 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v79, 1, 1, v44);
  sub_1E3C10DE8(&qword_1EBFE5A60, (uint64_t *)&unk_1EBFE5A68);
  id v46 = v43;
  uint64_t v48 = v76;
  uint64_t v47 = v77;
  sub_1E3E7AD10();
  sub_1E3C10CE0(v45, (uint64_t *)&unk_1EBFE27A0);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v48);
  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8(&qword_1EBFE5B58, (uint64_t *)&unk_1EBFE5B60);
  uint64_t v49 = v80;
  uint64_t v50 = sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v49);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v36, v39);
  return v50;
}

uint64_t sub_1E3D5E738(uint64_t a1)
{
  uint64_t v62 = a1;
  uint64_t v67 = *v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v2 - 8);
  v79 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E60);
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  MEMORY[0x1F4188790](v4);
  v71 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E68);
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  MEMORY[0x1F4188790](v6);
  v74 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E70);
  uint64_t v78 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  v77 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1E3E7D680();
  uint64_t v9 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E78);
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E80);
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  double v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E88);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  unint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E90);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E98);
  uint64_t v63 = *(void *)(v20 - 8);
  uint64_t v64 = v20;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE27EA0);
  uint64_t v69 = *(void *)(v23 - 8);
  uint64_t v70 = v23;
  MEMORY[0x1F4188790](v23);
  v68 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7D650();
  if (qword_1EBFE4E78 != -1) {
    swift_once();
  }
  id v82 = (id)qword_1EBFE55B0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE47A0);
  uint64_t v66 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3C10DE8((unint64_t *)&unk_1EAE29E30, &qword_1EBFE47A0);
  unint64_t v65 = sub_1E3C32D34();
  sub_1E3E7AD30();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4C10);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1E3E86660;
  *(void *)(v25 + 32) = MEMORY[0x1E4FBC860];
  sub_1E3C10DE8((unint64_t *)&unk_1EAE27EB0, &qword_1EAE27E78);
  uint64_t v26 = v55;
  sub_1E3E7AD00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v26);
  sub_1E3C10DE8((unint64_t *)&unk_1EAE29E40, &qword_1EAE27E80);
  uint64_t v27 = v57;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v27);
  uint64_t v28 = v81;
  id v82 = *(id *)(v81 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_refreshSubject);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D10);
  sub_1E3C10DE8(&qword_1EAE27EC0, &qword_1EAE27E88);
  sub_1E3C10DE8(&qword_1EBFE2ED0, &qword_1EBFE2D10);
  uint64_t v29 = v59;
  sub_1E3E7AC60();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v17, v29);
  uint64_t v30 = *(void **)(v28 + 16);
  v31 = *(void **)(v28 + 24);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v31;
  v32[3] = v30;
  v32[4] = v67;
  id v33 = v30;
  id v34 = v31;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5BF8);
  sub_1E3C10DE8(&qword_1EAE27EC8, &qword_1EAE27E90);
  uint64_t v35 = v61;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v35);
  sub_1E3C10DE8(&qword_1EAE27ED0, &qword_1EAE27E98);
  sub_1E3C10DE8(&qword_1EBFE5BF0, (uint64_t *)&unk_1EBFE5BF8);
  uint64_t v36 = v68;
  uint64_t v37 = v64;
  sub_1E3E7ADA0();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v37);
  sub_1E3C10DE8(&qword_1EAE27ED8, (uint64_t *)&unk_1EAE27EA0);
  sub_1E3D60274();
  uint64_t v39 = v70;
  uint64_t v38 = v71;
  sub_1E3E7AD40();
  *(void *)(swift_allocObject() + 16) = v34;
  id v40 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE54B0);
  sub_1E3C10DE8(&qword_1EAE27EE0, &qword_1EAE27E60);
  uint64_t v41 = v73;
  uint64_t v42 = v74;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v38, v41);
  uint64_t v43 = (void *)qword_1EBFE55B0;
  id v82 = (id)qword_1EBFE55B0;
  uint64_t v44 = sub_1E3E7D640();
  uint64_t v45 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v79, 1, 1, v44);
  sub_1E3C10DE8(&qword_1EAE27EE8, &qword_1EAE27E68);
  id v46 = v43;
  uint64_t v48 = v76;
  uint64_t v47 = v77;
  sub_1E3E7AD10();
  sub_1E3C10CE0(v45, (uint64_t *)&unk_1EBFE27A0);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v48);
  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8((unint64_t *)&unk_1EAE27EF0, &qword_1EAE27E70);
  uint64_t v49 = v80;
  uint64_t v50 = sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v49);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v36, v39);
  return v50;
}

uint64_t sub_1E3D5F3C0@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v20 = a2;
  id v22 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5970);
  uint64_t v21 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5C68);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7CE00();
  uint64_t v13 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  unsigned int v14 = objc_msgSend(a1, sel_BOOLForKey_, v13, v20);

  if (v14
    || (sub_1E3E7CDF0(),
        double v15 = (void *)sub_1E3E7CCF0(),
        swift_bridgeObjectRelease(),
        unsigned int v16 = objc_msgSend(a1, sel_BOOLForKey_, v15),
        v15,
        v16))
  {
    uint64_t v23 = 0;
    char v24 = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A80);
    sub_1E3E7AA30();
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5C58, &qword_1EBFE5C68);
    uint64_t v17 = sub_1E3E7AB70();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    *(void *)(swift_allocObject() + 16) = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A80);
    uint64_t v19 = sub_1E3E7D8C0();
    swift_release();
    uint64_t v25 = v19;
    uint64_t v23 = 0;
    char v24 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E40);
    sub_1E3C10DE8(&qword_1EAE27E48, &qword_1EAE27E40);
    sub_1E3E7ABA0();
    swift_release();
    sub_1E3C10DE8((unint64_t *)&unk_1EAE27E50, (uint64_t *)&unk_1EBFE5970);
    uint64_t v17 = sub_1E3E7AB70();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  }
  *id v22 = v17;
  return result;
}

uint64_t sub_1E3D5F714@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return sub_1E3E775E0();
}

void sub_1E3D5F720(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    BOOL v4 = 1;
  }
  else
  {
    uint64_t v6 = *(void *)a1;
    sub_1E3E7CDE0();
    uint64_t v7 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(a2, sel_integerForKey_, v7);

    BOOL v4 = (uint64_t)v8 < v6;
  }
  *a3 = v4;
}

uint64_t sub_1E3D5F7A8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3E775E0();
    swift_release();
    sub_1E3E7A9B0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3D5F830()
{
  uint64_t v0 = sub_1E3E77E20();
  __swift_allocate_value_buffer(v0, qword_1EAE27E18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE27E18);
  return sub_1E3E77D70();
}

void sub_1E3D5F884(void *a1@<X0>, uint64_t a2@<X8>)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE0750);
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  uint64_t v5 = self;
  if (qword_1EAE242B0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1E3E77E20();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EAE27E18);
  uint64_t v7 = (void *)sub_1E3E77DD0();
  id v8 = objc_msgSend(v5, sel_predicateForPodcastsFollowedSince_, v7);

  objc_msgSend(v4, sel_setPredicate_, v8);
  v11[0] = 0;
  id v9 = objc_msgSend(a1, sel_countForFetchRequest_error_, v4, v11);
  if (v11[0])
  {
    v11[0];
    swift_willThrow();
  }
  else
  {
    id v10 = v9;

    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = 0;
  }
}

void StayUpToDateTipProvider.tips.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5A10);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_tipPublisher))
  {
    v5[1] = *(void *)(v0 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_tipPublisher);
    sub_1E3E775E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D00);
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BC0, &qword_1EBFE5BD0);
    sub_1E3E7ABF0();
    swift_release();
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A00, &qword_1EBFE5A10);
    sub_1E3E7AB70();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E3D5FBC0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
  *(unsigned char *)(inited + 32) = 4;
  *(void *)(inited + 40) = v3;
  unint64_t v5 = sub_1E3C81150(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57A0);
  uint64_t result = swift_arrayDestroy();
  *a2 = v5;
  return result;
}

Swift::Void __swiftcall StayUpToDateTipProvider.requestRefresh()()
{
}

uint64_t StayUpToDateTipProvider.deinit()
{
  sub_1E3C10CE0(v0 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_databasePublisher, (uint64_t *)&unk_1EBFE4400);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t StayUpToDateTipProvider.__deallocating_deinit()
{
  sub_1E3C10CE0(v0 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_databasePublisher, (uint64_t *)&unk_1EBFE4400);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1E3D5FE18()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5A10);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*v0 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_tipPublisher))
  {
    v5[1] = *(void *)(*v0 + OBJC_IVAR____TtC10PodcastsUI23StayUpToDateTipProvider_tipPublisher);
    sub_1E3E775E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D00);
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BC0, &qword_1EBFE5BD0);
    sub_1E3E7ABF0();
    swift_release();
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A00, &qword_1EBFE5A10);
    sub_1E3E7AB70();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E3D5FFCC()
{
  return sub_1E3E7AAA0();
}

uint64_t sub_1E3D60044()
{
  return type metadata accessor for StayUpToDateTipProvider();
}

uint64_t type metadata accessor for StayUpToDateTipProvider()
{
  uint64_t result = qword_1EBFE55C0;
  if (!qword_1EBFE55C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3D60098()
{
  sub_1E3D60180();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for StayUpToDateTipProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StayUpToDateTipProvider);
}

uint64_t dispatch thunk of StayUpToDateTipProvider.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1E3D60180()
{
  if (!qword_1EBFE4410)
  {
    sub_1E3E7A010();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE4410);
    }
  }
}

void *sub_1E3D601D8(void *result)
{
  if (!*result)
  {
    uint64_t v1 = result;
    uint64_t result = (void *)sub_1E3D5D86C();
    void *v1 = result;
  }
  return result;
}

unint64_t sub_1E3D60210()
{
  unint64_t result = qword_1EBFE43F0;
  if (!qword_1EBFE43F0)
  {
    sub_1E3E7A010();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE43F0);
  }
  return result;
}

uint64_t sub_1E3D60268@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3D5F3C0(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

unint64_t sub_1E3D60274()
{
  unint64_t result = qword_1EBFE5D70;
  if (!qword_1EBFE5D70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBFE4A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE5D70);
  }
  return result;
}

void sub_1E3D602E0(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  sub_1E3D5F720(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1E3D602E8()
{
  return sub_1E3D5F7A8();
}

uint64_t sub_1E3D602F0()
{
  return swift_deallocObject();
}

void sub_1E3D60300(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1E3D6031C()
{
  return swift_deallocObject();
}

uint64_t sub_1E3D6035C()
{
  return swift_deallocObject();
}

unint64_t sub_1E3D60394()
{
  unint64_t result = qword_1EAE27F00;
  if (!qword_1EAE27F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE27F00);
  }
  return result;
}

uint64_t ArtworkTextColors.init(tryDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v26 = a3;
  uint64_t v4 = sub_1E3E7BBC0();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v5 = v27;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7BAD0();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1E3E7BAE0();
  id v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, a2, v4);
  sub_1E3D56A40();
  sub_1E3E7C080();
  uint64_t v25 = v35;
  int v24 = v36;
  sub_1E3E7BAE0();
  v9(v7, a2, v4);
  sub_1E3E7C080();
  uint64_t v23 = v33;
  int v22 = v34;
  sub_1E3E7BAE0();
  v9(v7, a2, v4);
  sub_1E3E7C080();
  uint64_t v21 = v31;
  v20[1] = v32;
  sub_1E3E7BAE0();
  v9(v7, a2, v4);
  sub_1E3E7C080();
  sub_1E3E793F0();
  uint64_t v10 = v37;
  uint64_t v11 = v38;
  uint64_t v12 = v39;
  uint64_t v13 = v40;
  uint64_t v14 = v41;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  char v17 = v44;
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(a2, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  uint64_t v19 = v26;
  *uint64_t v26 = v10;
  v19[1] = v11;
  v19[2] = v12;
  v19[3] = v13;
  v19[4] = v14;
  v19[5] = v15;
  v19[6] = v16;
  *((unsigned char *)v19 + 56) = v17;
  return result;
}

void sub_1E3D6079C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_1E3D607B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  ArtworkTextColors.init(tryDeserializing:using:)(a1, a2, v5);
  return sub_1E3D607F0((uint64_t)v5, a3);
}

uint64_t sub_1E3D607F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Glyph.Settings.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *Glyph.Settings.font.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void Glyph.Settings.font.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*Glyph.Settings.font.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.pointSize.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t Glyph.Settings.pointSize.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*Glyph.Settings.pointSize.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.weight.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t Glyph.Settings.weight.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*Glyph.Settings.weight.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.size.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t Glyph.Settings.size.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*Glyph.Settings.size.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.isCustomSymbol.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Glyph.Settings.isCustomSymbol.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*Glyph.Settings.isCustomSymbol.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.isMulticolorSymbol.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t Glyph.Settings.isMulticolorSymbol.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 57) = result;
  return result;
}

uint64_t (*Glyph.Settings.isMulticolorSymbol.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.isSPI.getter()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t Glyph.Settings.isSPI.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 58) = result;
  return result;
}

uint64_t (*Glyph.Settings.isSPI.modify())()
{
  return nullsub_1;
}

void *Glyph.Settings.symbolConfigurationOverride.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void Glyph.Settings.symbolConfigurationOverride.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
}

uint64_t (*Glyph.Settings.symbolConfigurationOverride.modify())()
{
  return nullsub_1;
}

id sub_1E3D60A9C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  if (v1)
  {
    id v2 = *(id *)(v0 + 64);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 48);
    if (v3)
    {
      id v5 = objc_msgSend(self, sel_configurationWithFont_scale_, v3, v4);
    }
    else
    {
      double v6 = *(double *)(v0 + 24);
      char v7 = *(unsigned char *)(v0 + 32);
      uint64_t v8 = *(void *)(v0 + 40);
      int v9 = *(unsigned __int8 *)(v0 + 57);
      uint64_t v10 = self;
      if (v7)
      {
        if (v9) {
          id v5 = objc_msgSend(v10, sel_configurationPreferringMulticolor);
        }
        else {
          id v5 = objc_msgSend(v10, sel_unspecifiedConfiguration);
        }
      }
      else
      {
        id v5 = objc_msgSend(v10, sel_configurationWithPointSize_weight_scale_, v8, v4, v6);
      }
    }
    id v2 = v5;
  }
  id v11 = v1;
  return v2;
}

void Glyph.Settings.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v3 = *(void **)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_1E3E7CE50();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1E3E7E290();
    id v4 = v1;
    sub_1E3E7DA90();

    if (v2)
    {
LABEL_3:
      sub_1E3E7E290();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1E3E7E290();
    if (v2) {
      goto LABEL_3;
    }
  }
  sub_1E3E7E290();
  sub_1E3E7E2A0();
LABEL_6:
  sub_1E3E7E280();
  sub_1E3E7E280();
  sub_1E3E7E290();
  sub_1E3E7E290();
  sub_1E3E7E290();
  if (v3)
  {
    sub_1E3E7E290();
    id v5 = v3;
    sub_1E3E7DA90();
  }
  else
  {
    sub_1E3E7E290();
  }
}

uint64_t Glyph.Settings.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3D60DA4()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3D60E2C()
{
  return sub_1E3E7E2B0();
}

void Glyph.Color.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void **)v1;
  if (!*(unsigned char *)(v1 + 8))
  {
    sub_1E3E7E280();
    id v7 = v3;
    sub_1E3E7DA90();
    id v5 = v3;
    unsigned __int8 v6 = 0;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v1 + 8) == 1)
  {
    sub_1E3E7E280();
    id v4 = v3;
    sub_1E3E7DA90();
    id v5 = v3;
    unsigned __int8 v6 = 1;
LABEL_5:
    sub_1E3D6A488(v5, v6);
    return;
  }
  sub_1E3E7E280();

  sub_1E3D6A00C(a1, (unint64_t)v3);
}

uint64_t Glyph.Color.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1E3E7E270();
  if (v2)
  {
    sub_1E3E7E280();
    if (v2 == 1)
    {
      id v3 = v1;
      sub_1E3E7DA90();
      sub_1E3D6A488(v1, 1u);
    }
    else
    {
      sub_1E3D6A00C((uint64_t)v6, (unint64_t)v1);
    }
  }
  else
  {
    sub_1E3E7E280();
    id v4 = v1;
    sub_1E3E7DA90();
    sub_1E3D6A488(v1, 0);
  }
  return sub_1E3E7E2B0();
}

void sub_1E3D61040(uint64_t a1)
{
  id v3 = *(void **)v1;
  if (!*(unsigned char *)(v1 + 8))
  {
    sub_1E3E7E280();
    id v7 = v3;
    sub_1E3E7DA90();
    id v5 = v3;
    unsigned __int8 v6 = 0;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v1 + 8) == 1)
  {
    sub_1E3E7E280();
    id v4 = v3;
    sub_1E3E7DA90();
    id v5 = v3;
    unsigned __int8 v6 = 1;
LABEL_5:
    sub_1E3D6A488(v5, v6);
    return;
  }
  sub_1E3E7E280();

  sub_1E3D6A00C(a1, (unint64_t)v3);
}

uint64_t sub_1E3D6110C()
{
  uint64_t v1 = *(void **)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1E3E7E270();
  if (v2)
  {
    sub_1E3E7E280();
    if (v2 == 1)
    {
      id v3 = v1;
      sub_1E3E7DA90();
      sub_1E3D6A488(v1, 1u);
    }
    else
    {
      sub_1E3D6A00C((uint64_t)v6, (unint64_t)v1);
    }
  }
  else
  {
    sub_1E3E7E280();
    id v4 = v1;
    sub_1E3E7DA90();
    sub_1E3D6A488(v1, 0);
  }
  return sub_1E3E7E2B0();
}

uint64_t Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  sub_1E3E7A480();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void Glyph.init(name:font:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(void *a1@<X2>, void *a2@<X8>)
{
  uint64_t v3 = qword_1EBFE0A60;
  id v4 = a1;
  id v5 = v4;
  if (v3 != -1) {
    id v4 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v4);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  *a2 = v6;
}

void Glyph.init(name:symbolConfiguration:)(void *a1@<X2>, void *a2@<X8>)
{
  uint64_t v3 = qword_1EBFE0A60;
  id v4 = a1;
  id v5 = v4;
  if (v3 != -1) {
    id v4 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v4);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  *a2 = v6;
}

id Glyph.image.getter()
{
  return sub_1E3D69F4C();
}

id sub_1E3D61558(uint64_t a1)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 == 255)
  {
    return sub_1E3D69F4C();
  }
  else
  {
    id v4 = *(void **)a1;
    sub_1E3E775E0();
    sub_1E3D6B038(v4, v3);
    sub_1E3E7A490();
    swift_release();
    id v5 = v25;
    if (v25)
    {
LABEL_3:
      sub_1E3D6B04C(v4, v3);
      return v5;
    }
    uint64_t v18 = *(void *)(v2 + 16);
    uint64_t v19 = *(void *)(v2 + 24);
    long long v20 = *(_OWORD *)(v2 + 32);
    LOBYTE(v21) = *(unsigned char *)(v2 + 48);
    long long v22 = *(_OWORD *)(v2 + 56);
    LOWORD(v23) = *(_WORD *)(v2 + 72);
    BYTE2(v23) = *(unsigned char *)(v2 + 74);
    uint64_t v24 = *(void *)(v2 + 80);
    id v7 = sub_1E3D60A9C();
    if (v3)
    {
      if (v3 == 1)
      {
        uint64_t v8 = self;
        sub_1E3D6A8A8(v4, 1u);
        id v9 = objc_msgSend(v8, sel_configurationWithHierarchicalColor_, v4, v18, v19, v20, v21, v22, v23, v24);
        id v10 = objc_msgSend(v7, sel_configurationByApplyingConfiguration_, v9);
        sub_1E3D6B04C(v4, 1u);
      }
      else
      {
        sub_1E3D6B038(v4, 2u);
        sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2C98);
        id v9 = v7;
        id v11 = (void *)sub_1E3E7D050();
        sub_1E3D6B04C(v4, 2u);
        id v12 = objc_msgSend(self, sel_configurationWithPaletteColors_, v11, v18, v19, v20, v21, v22, v23, v24);

        id v10 = objc_msgSend(v9, sel_configurationByApplyingConfiguration_, v12);
      }
    }
    else
    {
      id v9 = objc_msgSend(self, sel_configurationPreferringMonochrome, v18, v19, v20, v21, v22, v23, v24);
      id v10 = objc_msgSend(v7, sel_configurationByApplyingConfiguration_, v9);
    }

    swift_bridgeObjectRetain();
    id v13 = v10;
    uint64_t v14 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v14, v13);

    if (!v15)
    {
      id v5 = sub_1E3D69F4C();

      goto LABEL_3;
    }
    if (!v3)
    {
      sub_1E3D6A8A8(v4, 0);
      id v16 = objc_msgSend(v15, sel_imageWithTintColor_, v4);

      sub_1E3D6B04C(v4, 0);
      id v15 = v16;
    }
    sub_1E3D6B038(v4, v3);
    sub_1E3E775E0();
    id v17 = v15;
    sub_1E3E7A4A0();
    swift_release();

    sub_1E3D6B04C(v4, v3);
    return v17;
  }
}

id Glyph.image(color:)(uint64_t *a1)
{
  char v1 = *((unsigned char *)a1 + 8);
  uint64_t v3 = *a1;
  char v4 = v1;
  return sub_1E3D61558((uint64_t)&v3);
}

id Glyph.settings.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 24);
  char v4 = *(unsigned char *)(*v1 + 48);
  char v5 = *(unsigned char *)(*v1 + 72);
  char v6 = *(unsigned char *)(*v1 + 73);
  char v7 = *(unsigned char *)(*v1 + 74);
  uint64_t v8 = *(void **)(*v1 + 80);
  *(void *)a1 = *(void *)(*v1 + 16);
  *(void *)(a1 + 8) = v3;
  long long v9 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v2 + 56);
  *(unsigned char *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 57) = v6;
  *(unsigned char *)(a1 + 58) = v7;
  *(void *)(a1 + 64) = v8;
  id v12 = (id)v9;
  id v10 = v8;
  swift_bridgeObjectRetain();

  return v12;
}

BOOL static Glyph.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

void Glyph.hash(into:)()
{
}

uint64_t Glyph.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3D61ACC()
{
  return sub_1E3E7E2B0();
}

void sub_1E3D61B54()
{
}

uint64_t sub_1E3D61BC4()
{
  return sub_1E3E7E2B0();
}

uint64_t Glyph.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1E3E786D0();
  if (v4)
  {
    uint64_t v5 = sub_1E3E78740();
    if (qword_1EBFE0A60 != -1) {
      uint64_t v5 = swift_once();
    }
    MEMORY[0x1F4188790](v5);
    sub_1E3E7A480();
    swift_bridgeObjectRelease();
    uint64_t v6 = v8;
    uint64_t result = sub_1E3C2CBF8(a1);
  }
  else
  {
    uint64_t result = sub_1E3C2CBF8(a1);
    uint64_t v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1E3D61DAC(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE41B8 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.home.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE41C8, &qword_1EBFE41B8, a1);
}

uint64_t sub_1E3D61EE4(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE2B20 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.listenNow.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2B30, &qword_1EBFE2B20, a1);
}

uint64_t sub_1E3D6202C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE2B38 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.topCharts.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2B48, &qword_1EBFE2B38, a1);
}

uint64_t sub_1E3D62174(uint64_t a1)
{
  return sub_1E3D639E0(a1, (uint64_t)sub_1E3D6B0AC, &qword_1EAE27F18);
}

uint64_t static Glyph.Sidebar.search.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EAE242C0, &qword_1EAE27F18, a1);
}

uint64_t sub_1E3D621B8(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE2B08 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.browse.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2B18, &qword_1EBFE2B08, a1);
}

uint64_t sub_1E3D62304(uint64_t a1)
{
  strcpy(v3, "square.stack");
  v3[13] = 0;
  __int16 v4 = -5120;
  long long v5 = 0uLL;
  LOBYTE(v6[0]) = 1;
  *(_OWORD *)&v6[1] = xmmword_1E3E8F9F0;
  __int16 v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE2018 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.shows.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2020, &qword_1EBFE2018, a1);
}

uint64_t sub_1E3D6244C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE2AD8 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.recentlyUpdated.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2AE8, &qword_1EBFE2AD8, a1);
}

uint64_t sub_1E3D62590(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F20 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.episodes.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE242D0, &qword_1EAE27F20, a1);
}

uint64_t sub_1E3D626D4(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE1FD8 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.downloaded.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE1FE8, &qword_1EBFE1FD8, a1);
}

uint64_t sub_1E3D62818(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE2000 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.downloadedWithBadge.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2010, &qword_1EBFE2000, a1);
}

uint64_t sub_1E3D62960(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F28 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.station.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE242D8, &qword_1EAE27F28, a1);
}

uint64_t sub_1E3D62AA4(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE2040 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.bookmarks.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2050, &qword_1EBFE2040, a1);
}

uint64_t sub_1E3D62BE4(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE1FF0 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.latestEpisodes.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE1FF8, &qword_1EBFE1FF0, a1);
}

void sub_1E3D62D20()
{
  if (qword_1EBFE2B00 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE2AF0;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EBFE2AC8 = v3;
}

uint64_t static Glyph.Sidebar.newStation.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2AD0, &qword_1EBFE2AC8, a1);
}

uint64_t sub_1E3D62EC4(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE2028 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.channels.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE2038, &qword_1EBFE2028, a1);
}

uint64_t sub_1E3D63008(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE41A0 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.categories.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE41B0, &qword_1EBFE41A0, a1);
}

uint64_t sub_1E3D6314C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE6030 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.recentlyUnfollowed.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE6028, &qword_1EBFE6030, a1);
}

id sub_1E3D63288()
{
  id result = sub_1E3D632A8();
  qword_1EBFE2AF0 = (uint64_t)result;
  return result;
}

id sub_1E3D632A8()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v1, sel_scaledValueForValue_, 25.0);
  double v3 = v2;

  id v4 = objc_msgSend(v0, sel_systemFontOfSize_weight_, v3, *MEMORY[0x1E4FB09C8]);
  long long v5 = self;
  id v6 = objc_msgSend(v5, sel_configurationWithFont_scale_, v4, 3);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1E3E8FA00;
  char v8 = self;
  *(void *)(v7 + 32) = objc_msgSend(v8, sel_tintColor);
  *(void *)(v7 + 40) = objc_msgSend(v8, sel_clearColor);
  *(void *)(v7 + 48) = objc_msgSend(v8, sel_tertiarySystemFillColor);
  sub_1E3E7D080();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2C98);
  uint64_t v9 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v5, sel__configurationWithHierarchicalColors_, v9);

  id v11 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v10);
  return v11;
}

uint64_t sub_1E3D634B0(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFDF480 = v2;
  return result;
}

uint64_t static Glyph.TabBar.home.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EBFE0298, &qword_1EBFDF480, a1);
}

uint64_t sub_1E3D635F4(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE1FC8 = v2;
  return result;
}

uint64_t static Glyph.TabBar.listenNow.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE1FD0, &qword_1EBFE1FC8, a1);
}

uint64_t sub_1E3D63738(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE1F88 = v2;
  return result;
}

uint64_t static Glyph.TabBar.browse.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE1F98, &qword_1EBFE1F88, a1);
}

uint64_t sub_1E3D6387C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE1FB0 = v2;
  return result;
}

uint64_t static Glyph.TabBar.library.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE1FC0, &qword_1EBFE1FB0, a1);
}

uint64_t sub_1E3D639C0(uint64_t a1)
{
  return sub_1E3D639E0(a1, (uint64_t)sub_1E3D6B0AC, &qword_1EBFE1FA0);
}

uint64_t sub_1E3D639E0(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  *a3 = v5;
  return result;
}

uint64_t static Glyph.TabBar.search.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE1FA8, &qword_1EBFE1FA0, a1);
}

uint64_t sub_1E3D63B28(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFDEEB0 = v2;
  return result;
}

uint64_t static Glyph.PodcastLockup.contextActionGlyph.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE242E0, &qword_1EBFDEEB0, a1);
}

void sub_1E3D63C70()
{
  qword_1EAE27F30 = 0x403C000000000000;
}

double static Glyph.QuickPlay.pointSize.getter()
{
  return sub_1E3D65E8C(&qword_1EAE242E8, (uint64_t)&qword_1EAE27F30);
}

uint64_t sub_1E3D63CA4(uint64_t a1)
{
  if (qword_1EAE242E8 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F38 = v2;
  return result;
}

uint64_t static Glyph.QuickPlay.contextActionGlyph.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE242F0, &qword_1EAE27F38, a1);
}

uint64_t sub_1E3D63E20(uint64_t a1)
{
  if (qword_1EAE242E8 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F40 = v2;
  return result;
}

uint64_t static Glyph.QuickPlay.externalMediaGlyph.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE242F8, &qword_1EAE27F40, a1);
}

uint64_t sub_1E3D63FA4(uint64_t a1)
{
  if (qword_1EAE242E8 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F48 = v2;
  return result;
}

uint64_t static Glyph.QuickPlay.playGlyph.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24300, &qword_1EAE27F48, a1);
}

uint64_t sub_1E3D64120(uint64_t a1)
{
  if (qword_1EAE242E8 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F50 = v2;
  return result;
}

uint64_t static Glyph.QuickPlay.pauseGlyph.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24308, &qword_1EAE27F50, a1);
}

uint64_t sub_1E3D6429C@<X0>(uint64_t result@<X0>, void *a2@<X8>, double a3@<D0>)
{
  if (a3 == 0.0)
  {
    *a2 = 0;
  }
  else
  {
    if (round(a3) == 0.0)
    {
      if (qword_1EBFE0A60 != -1) {
        uint64_t result = swift_once();
      }
      MEMORY[0x1F4188790](result);
      sub_1E3E7A480();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v4 = v9;
    }
    else
    {
      uint64_t v5 = 3158318;
      double v6 = fabs(a3);
      if (v6 <= 10.0
        || (v6 >= 11.0 ? (BOOL v7 = v6 > 15.0) : (BOOL v7 = 1),
            !v7
         || v6 >= 16.0 && v6 <= 30.0
         || v6 >= 31.0 && v6 <= 45.0
         || v6 >= 46.0 && v6 <= 60.0
         || v6 >= 61.0 && v6 <= 75.0
         || v6 >= 76.0 && v6 <= 90.0))
      {
        uint64_t v5 = sub_1E3E7CEA0();
      }
      if (qword_1EBFE0A60 != -1) {
        uint64_t v5 = swift_once();
      }
      MEMORY[0x1F4188790](v5);
      sub_1E3E7A480();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v4 = v8;
    }
    *a2 = v4;
  }
  return result;
}

void sub_1E3D64614()
{
  qword_1EAE27F58 = 0x4034000000000000;
}

double static Glyph.NowPlaying.auxiliaryPointSize.getter()
{
  return sub_1E3D65E8C(&qword_1EAE24310, (uint64_t)&qword_1EAE27F58);
}

uint64_t static Glyph.NowPlaying.play(pointSize:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  *a2 = v4;
  return result;
}

uint64_t static Glyph.NowPlaying.pause(pointSize:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  *a2 = v4;
  return result;
}

uint64_t static Glyph.NowPlaying.stop(pointSize:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  *a2 = v4;
  return result;
}

uint64_t sub_1E3D649A8(uint64_t a1)
{
  if (qword_1EAE24310 != -1) {
    a1 = swift_once();
  }
  strcpy(v3, "airplayaudio");
  v3[13] = 0;
  __int16 v4 = -5120;
  uint64_t v5 = 0;
  uint64_t v6 = qword_1EAE27F58;
  LOBYTE(v7[0]) = 0;
  *(_OWORD *)&v7[1] = xmmword_1E3E8FA30;
  __int16 v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F60 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.route.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24318, &qword_1EAE27F60, a1);
}

uint64_t sub_1E3D64B28(uint64_t a1)
{
  if (qword_1EAE24310 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F68 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.context.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24320, &qword_1EAE27F68, a1);
}

uint64_t sub_1E3D64CA0(uint64_t a1)
{
  if (qword_1EAE24310 != -1) {
    a1 = swift_once();
  }
  strcpy(v3, "moon.zzz.fill");
  __int16 v4 = -4864;
  uint64_t v5 = 0;
  uint64_t v6 = qword_1EAE27F58;
  LOBYTE(v7[0]) = 0;
  *(_OWORD *)&v7[1] = xmmword_1E3E8FA30;
  __int16 v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F70 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.sleep.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24328, &qword_1EAE27F70, a1);
}

uint64_t sub_1E3D64E24(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F78 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.volumeMin.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24330, &qword_1EAE27F78, a1);
}

uint64_t sub_1E3D64F70(uint64_t a1)
{
  strcpy(v3, "volume.3.fill");
  __int16 v4 = -4864;
  long long v5 = xmmword_1E3E8FA40;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1E3E8F9F0;
  __int16 v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F80 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.volumeMax.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EAE24338, &qword_1EAE27F80, a1);
}

uint64_t static Glyph.NowPlaying.jump(interval:pointSize:)@<X0>(void *a1@<X8>, double a2@<D0>)
{
  return sub_1E3D6429C(4, a1, a2);
}

uint64_t sub_1E3D650CC(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE6158 = v2;
  return result;
}

uint64_t static Glyph.MiniPlayer.play.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE6280, &qword_1EBFE6158, a1);
}

uint64_t sub_1E3D65214(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F88 = v2;
  return result;
}

uint64_t static Glyph.MiniPlayer.pause.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24348, &qword_1EAE27F88, a1);
}

uint64_t sub_1E3D6535C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F90 = v2;
  return result;
}

uint64_t static Glyph.MiniPlayer.stop.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24350, &qword_1EAE27F90, a1);
}

uint64_t static Glyph.MiniPlayer.jump(interval:)@<X0>(void *a1@<X8>, double a2@<D0>)
{
  return sub_1E3D6429C(4, a1, a2);
}

uint64_t sub_1E3D654B4(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27F98 = v2;
  return result;
}

uint64_t static Glyph.FullWidthMiniPlayer.play.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24358, &qword_1EAE27F98, a1);
}

uint64_t sub_1E3D655FC(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FA0 = v2;
  return result;
}

uint64_t static Glyph.FullWidthMiniPlayer.pause.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24360, &qword_1EAE27FA0, a1);
}

uint64_t sub_1E3D65744(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FA8 = v2;
  return result;
}

uint64_t static Glyph.FullWidthMiniPlayer.stop.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24368, &qword_1EAE27FA8, a1);
}

uint64_t sub_1E3D6588C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FB0 = v2;
  return result;
}

uint64_t static Glyph.PlayerBar.play.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24370, &qword_1EAE27FB0, a1);
}

uint64_t sub_1E3D659D4(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FB8 = v2;
  return result;
}

uint64_t static Glyph.PlayerBar.pause.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24378, &qword_1EAE27FB8, a1);
}

uint64_t sub_1E3D65B1C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FC0 = v2;
  return result;
}

uint64_t static Glyph.PlayerBar.stop.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EAE24380, &qword_1EAE27FC0, a1);
}

uint64_t static Glyph.PlayerBar.jump(interval:)@<X0>(void *a1@<X8>, double a2@<D0>)
{
  return sub_1E3D6429C(5, a1, a2);
}

uint64_t static Glyph.PlayerBar.volume(value:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  sub_1E3E7A480();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_1E3D65E58()
{
  qword_1EBFE6260 = 0x4030000000000000;
}

double static Glyph.HeaderButtons.headerButtonsPointSize.getter()
{
  return sub_1E3D65E8C(&qword_1EBFE6298, (uint64_t)&qword_1EBFE6260);
}

double sub_1E3D65E8C(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

uint64_t sub_1E3D65EC8(uint64_t a1)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFDEFD0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.follow.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEFE0, &qword_1EBFDEFD0, a1);
}

uint64_t sub_1E3D66038(uint64_t a1)
{
  return sub_1E3D66218(a1, (uint64_t)sub_1E3D6B0AC, &qword_1EBFDF090);
}

uint64_t static Glyph.HeaderButtons.followed.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDF2F8, &qword_1EBFDF090, a1);
}

uint64_t sub_1E3D6607C(uint64_t a1)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE4CF8 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.download.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE4C90, &qword_1EBFE4CF8, a1);
}

uint64_t sub_1E3D661F8(uint64_t a1)
{
  return sub_1E3D66218(a1, (uint64_t)sub_1E3D6B0AC, &qword_1EBFE4CD0);
}

uint64_t sub_1E3D66218(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  *a3 = v5;
  return result;
}

uint64_t static Glyph.HeaderButtons.downloaded.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE4CD8, &qword_1EBFE4CD0, a1);
}

uint64_t sub_1E3D66390(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE4CE0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.bookmark.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE4CF0, &qword_1EBFE4CE0, a1);
}

uint64_t sub_1E3D664D4(uint64_t a1)
{
  strcpy(v3, "bookmark.fill");
  __int16 v4 = -4864;
  long long v5 = xmmword_1E3E8FAE0;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1E3E8FAF0;
  __int16 v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE4CC0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.bookmarked.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE4CC8, &qword_1EBFE4CC0, a1);
}

uint64_t sub_1E3D66624(uint64_t a1)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE62A0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.more.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EBFE61F0, &qword_1EBFE62A0, a1);
}

uint64_t sub_1E3D6679C(uint64_t a1)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFDEFC8 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.back.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEEF8, &qword_1EBFDEFC8, a1);
}

void sub_1E3D66918()
{
  if (qword_1EBFDEF28 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDEF20;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE27FC8 = v3;
}

uint64_t static Glyph.HeaderButtons.xmark.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24390, &qword_1EAE27FC8, a1);
}

void sub_1E3D66ABC()
{
  if (qword_1EBFDEF28 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDEF20;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE27FD0 = v3;
}

uint64_t static Glyph.HeaderButtons.xmarkiPadSheet.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24398, &qword_1EAE27FD0, a1);
}

void sub_1E3D66C60()
{
  if (qword_1EBFDF010 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDEF00;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE27FD8 = v3;
}

uint64_t static Glyph.HeaderButtons.xmarkMac.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE243A0, &qword_1EAE27FD8, a1);
}

uint64_t sub_1E3D66E04(uint64_t a1)
{
  strcpy(v3, "chevron.down");
  v3[13] = 0;
  __int16 v4 = -5120;
  long long v5 = xmmword_1E3E8FAE0;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1E3E8FB00;
  __int16 v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FE0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.chevron.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE243A8, &qword_1EAE27FE0, a1);
}

uint64_t sub_1E3D66F50(uint64_t a1)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FE8 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.pause.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EAE243B0, &qword_1EAE27FE8, a1);
}

uint64_t sub_1E3D670CC(uint64_t a1)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE4ED0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.favorite.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE5758, &qword_1EBFE4ED0, a1);
}

uint64_t sub_1E3D6723C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FF0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.favorited.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EAE243C0, &qword_1EAE27FF0, a1);
}

uint64_t sub_1E3D67384(uint64_t a1)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EBFE5740 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.suggestLess.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EBFE5748, &qword_1EBFE5740, a1);
}

uint64_t sub_1E3D67508(uint64_t a1)
{
  if (qword_1EBFE6298 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE27FF8 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.suggestedLess.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE243D0, &qword_1EAE27FF8, a1);
}

void sub_1E3D67684()
{
  qword_1EAE3BCC0 = 0x402A000000000000;
}

uint64_t sub_1E3D67694(uint64_t a1)
{
  return sub_1E3D67874(a1, (uint64_t)sub_1E3D6B0AC, &qword_1EAE28000);
}

uint64_t static Glyph.StandaloneHeaderButtons.followed.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE243E0, &qword_1EAE28000, a1);
}

uint64_t sub_1E3D676D8(uint64_t a1)
{
  if (qword_1EAE243D8 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE28008 = v2;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.download.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE243E8, &qword_1EAE28008, a1);
}

uint64_t sub_1E3D67854(uint64_t a1)
{
  return sub_1E3D67874(a1, (uint64_t)sub_1E3D6B0AC, &qword_1EAE28010);
}

uint64_t sub_1E3D67874(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1EAE243D8 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  *a3 = v5;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.downloaded.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE243F0, &qword_1EAE28010, a1);
}

uint64_t sub_1E3D679EC(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE28018 = v2;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.bookmark.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE243F8, &qword_1EAE28018, a1);
}

uint64_t sub_1E3D67B30(uint64_t a1)
{
  strcpy(v3, "bookmark.fill");
  __int16 v4 = -4864;
  long long v5 = xmmword_1E3E8FB30;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1E3E8FAA0;
  __int16 v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE28020 = v2;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.bookmarked.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24400, &qword_1EAE28020, a1);
}

uint64_t sub_1E3D67C80(uint64_t a1)
{
  if (qword_1EAE243D8 != -1) {
    a1 = swift_once();
  }
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE28028 = v2;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.more.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24408, &qword_1EAE28028, a1);
}

uint64_t sub_1E3D67DF8(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE28030 = v2;
  return result;
}

uint64_t static Glyph.SortMenuOptions.byPublishedDate.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24410, &qword_1EAE28030, a1);
}

uint64_t sub_1E3D67F3C(uint64_t a1)
{
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE28038 = v2;
  return result;
}

uint64_t static Glyph.SortMenuOptions.byBookmarkDate.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24418, &qword_1EAE28038, a1);
}

uint64_t sub_1E3D68080(uint64_t a1)
{
  strcpy(v3, "square.stack");
  v3[13] = 0;
  __int16 v4 = -5120;
  long long v5 = xmmword_1E3E8FB40;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1E3E8FA60;
  __int16 v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  if (qword_1EBFE0A60 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  uint64_t result = sub_1E3E7A480();
  qword_1EAE28040 = v2;
  return result;
}

uint64_t static Glyph.SortMenuOptions.byShow.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24420, &qword_1EAE28040, a1);
}

void sub_1E3D681CC(uint64_t a1)
{
}

uint64_t static Glyph.GenericContextMenuButton.more.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEFF8, qword_1EBFDEFE8, a1);
}

void sub_1E3D68210()
{
  if (qword_1EBFE6248 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE6238;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EBFE6288 = v3;
}

uint64_t static Glyph.PlayControls.play.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFE6290, &qword_1EBFE6288, a1);
}

void sub_1E3D683B4()
{
  if (qword_1EBFE6248 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE6238;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28048 = v3;
}

uint64_t static Glyph.PlayControls.pause.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24428, &qword_1EAE28048, a1);
}

void sub_1E3D68558()
{
  if (qword_1EBFE6248 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE6238;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28050 = v3;
}

uint64_t static Glyph.PlayControls.externalMedia.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24430, &qword_1EAE28050, a1);
}

void sub_1E3D686F0()
{
  if (qword_1EBFE62C8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE62C0;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EBFDEF50 = v3;
}

uint64_t static Glyph.PlayControls.playedCheckmark.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEF58, &qword_1EBFDEF50, a1);
}

void sub_1E3D68894()
{
  if (qword_1EBFE62B8 != -1) {
    swift_once();
  }
  strcpy(v4, "bookmark.fill");
  __int16 v5 = -4864;
  long long v6 = (unint64_t)qword_1EBFE60E0;
  LOBYTE(v7[0]) = 1;
  *(_OWORD *)&v7[1] = xmmword_1E3E8FA30;
  __int16 v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE60E0;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EBFDEF60 = v3;
}

uint64_t static Glyph.PlayControls.Medium.bookmarked.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEF70, &qword_1EBFDEF60, a1);
}

void sub_1E3D68A44()
{
  if (qword_1EBFE62B8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE60E0;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EBFDEF88 = v3;
}

uint64_t static Glyph.PlayControls.Medium.notBookmarked.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEF98, &qword_1EBFDEF88, a1);
}

void sub_1E3D68BDC()
{
  if (qword_1EBFE62B8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE60E0;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EBFDEF78 = v3;
}

uint64_t static Glyph.PlayControls.Medium.downloaded.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEF80, &qword_1EBFDEF78, a1);
}

void sub_1E3D68D80()
{
  if (qword_1EBFE62B8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFE60E0;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EBFDEFA0 = v3;
}

uint64_t static Glyph.PlayControls.Medium.notDownloaded.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEFA8, &qword_1EBFDEFA0, a1);
}

void sub_1E3D68F20(uint64_t a1)
{
}

uint64_t static Glyph.PlayControls.Medium.more.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EBFDEFC0, qword_1EBFDEFB0, a1);
}

void sub_1E3D68F64()
{
  if (qword_1EBFDF028 != -1) {
    swift_once();
  }
  strcpy(v4, "bookmark.fill");
  __int16 v5 = -4864;
  long long v6 = (unint64_t)qword_1EBFDF018;
  LOBYTE(v7[0]) = 1;
  *(_OWORD *)&v7[1] = xmmword_1E3E8FA20;
  __int16 v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDF018;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28058 = v3;
}

uint64_t static Glyph.PlayControls.Large.bookmarked.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24438, &qword_1EAE28058, a1);
}

void sub_1E3D69114()
{
  if (qword_1EBFDF028 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDF018;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28060 = v3;
}

uint64_t static Glyph.PlayControls.Large.notBookmarked.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24440, &qword_1EAE28060, a1);
}

void sub_1E3D692AC()
{
  if (qword_1EBFDF028 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDF018;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28068 = v3;
}

uint64_t static Glyph.PlayControls.Large.downloaded.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24448, &qword_1EAE28068, a1);
}

void sub_1E3D69450()
{
  if (qword_1EBFDF028 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDF018;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28070 = v3;
}

uint64_t static Glyph.PlayControls.Large.notDownloaded.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24450, &qword_1EAE28070, a1);
}

void sub_1E3D695F0(uint64_t a1)
{
}

void sub_1E3D69610(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1EBFDF028 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBFE0A60;
  id v5 = (id)qword_1EBFDF018;
  long long v6 = v5;
  if (v4 != -1) {
    id v5 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v5);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  *a3 = v7;
}

uint64_t static Glyph.PlayControls.Large.more.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24458, &qword_1EAE28078, a1);
}

void sub_1E3D697A4()
{
  if (qword_1EBFDF010 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDEF00;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28080 = v3;
}

uint64_t static Glyph.MacEpisodeCells.play.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24460, &qword_1EAE28080, a1);
}

void sub_1E3D69944()
{
  if (qword_1EBFDF010 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDEF00;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28088 = v3;
}

uint64_t static Glyph.MacEpisodeCells.pause.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24468, &qword_1EAE28088, a1);
}

void sub_1E3D69AE4()
{
  if (qword_1EBFDF010 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDEF00;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28090 = v3;
}

uint64_t static Glyph.MacEpisodeCells.document.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(&qword_1EAE24470, &qword_1EAE28090, a1);
}

void sub_1E3D69C7C()
{
  if (qword_1EBFDEF28 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBFE0A60;
  id v1 = (id)qword_1EBFDEF20;
  uint64_t v2 = v1;
  if (v0 != -1) {
    id v1 = (id)swift_once();
  }
  MEMORY[0x1F4188790](v1);
  sub_1E3E7A480();
  swift_bridgeObjectRelease();

  qword_1EAE28098 = v3;
}

uint64_t static Glyph.EpisodeHero.download.getter@<X0>(void *a1@<X8>)
{
  return sub_1E3D69E20(qword_1EAE24478, &qword_1EAE28098, a1);
}

uint64_t sub_1E3D69E20@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return sub_1E3E775E0();
}

uint64_t sub_1E3D69E74()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2148);
  swift_allocObject();
  uint64_t result = sub_1E3E7A470();
  qword_1EBFE0A50 = result;
  return result;
}

__n128 sub_1E3D69EBC@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for GlyphInternal();
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2140);
  swift_allocObject();
  sub_1E3D6B060(a1);
  *(void *)(v4 + 88) = sub_1E3E7A470();
  *(void *)(v4 + 96) = 0;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v5;
  *(void *)(v4 + 80) = *(void *)(a1 + 64);
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(__n128 *)(v4 + 32) = result;
  *a2 = v4;
  return result;
}

id sub_1E3D69F4C()
{
  id v1 = *(void **)(v0 + 96);
  if (v1)
  {
    id v2 = *(id *)(v0 + 96);
  }
  else
  {
    uint64_t v3 = (void *)sub_1E3D6AD04(v0);
    uint64_t v4 = *(void **)(v0 + 96);
    *(void *)(v0 + 96) = v3;
    id v2 = v3;

    id v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1E3D69FA8()
{
  id v1 = *(void **)(v0 + 32);
  id v2 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocClassInstance();
}

void sub_1E3D6A00C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    sub_1E3E7E280();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_1E3E7E280();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1E4E77720](i, a2);
      sub_1E3E7DA90();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = (void **)(a2 + 32);
    do
    {
      long long v6 = *v5++;
      id v7 = v6;
      sub_1E3E7DA90();

      --v3;
    }
    while (v3);
  }
}

uint64_t _s10PodcastsUI5GlyphV5ColorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  id v4 = *(id *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8))
    {
      sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF530);
      sub_1E3D6A8A8(v4, 0);
      sub_1E3D6A8A8(v2, 0);
      char v6 = sub_1E3E7DA80();
      LOBYTE(v3) = 0;
      LOBYTE(v5) = 0;
      goto LABEL_10;
    }
LABEL_9:
    sub_1E3D6A8A8(*(id *)a2, *(unsigned char *)(a2 + 8));
    sub_1E3D6A8A8(v2, v3);
    char v6 = 0;
    goto LABEL_10;
  }
  if (v3 != 1)
  {
    if (v5 == 2)
    {
      LOBYTE(v3) = 2;
      sub_1E3D6A8A8(*(id *)a2, 2u);
      sub_1E3D6A8A8(v2, 2u);
      char v6 = sub_1E3E493E8((uint64_t)v2, (uint64_t)v4);
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v5 != 1) {
    goto LABEL_9;
  }
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF530);
  LOBYTE(v3) = 1;
  sub_1E3D6A8A8(v4, 1u);
  sub_1E3D6A8A8(v2, 1u);
  char v6 = sub_1E3E7DA80();
  LOBYTE(v5) = 1;
LABEL_10:
  sub_1E3D6A488(v2, v3);
  sub_1E3D6A488(v4, v5);
  return v6 & 1;
}

uint64_t _s10PodcastsUI5GlyphV8SettingsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  int v6 = *(unsigned __int8 *)(a1 + 56);
  int v7 = *(unsigned __int8 *)(a1 + 57);
  int v8 = *(unsigned __int8 *)(a1 + 58);
  char v9 = *(void **)(a1 + 64);
  uint64_t v10 = *(void **)(a2 + 16);
  double v11 = *(double *)(a2 + 24);
  int v12 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v30 = *(void *)(a2 + 40);
  uint64_t v31 = *(void *)(a1 + 40);
  uint64_t v29 = *(void *)(a2 + 48);
  int v27 = *(unsigned __int8 *)(a2 + 57);
  int v28 = *(unsigned __int8 *)(a2 + 56);
  int v26 = *(unsigned __int8 *)(a2 + 58);
  id v13 = *(void **)(a2 + 64);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v14 = sub_1E3E7E150(), result = 0, (v14 & 1) != 0))
  {
    if (v2)
    {
      if (!v10) {
        return 0;
      }
      uint64_t v25 = v5;
      sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF068);
      id v16 = v10;
      id v17 = v2;
      char v18 = sub_1E3E7DA80();

      if ((v18 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v25 = v5;
      if (v10) {
        return 0;
      }
    }
    if (v4)
    {
      if (v31 == v30) {
        int v19 = v12;
      }
      else {
        int v19 = 0;
      }
      BOOL v20 = v19 == 1;
      uint64_t v21 = v25;
      if (!v20) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      uint64_t v21 = v25;
      if ((v12 & 1) != 0 || v3 != v11 || v31 != v30) {
        return result;
      }
    }
    uint64_t result = 0;
    if (v21 == v29 && ((v6 ^ v28) & 1) == 0 && ((v7 ^ v27) & 1) == 0 && ((v8 ^ v26) & 1) == 0)
    {
      if (v9)
      {
        if (v13)
        {
          sub_1E3C12B10(0, &qword_1EAE280A8);
          id v22 = v13;
          id v23 = v9;
          char v24 = sub_1E3E7DA80();

          if (v24) {
            return 1;
          }
        }
      }
      else if (!v13)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

void sub_1E3D6A488(id a1, unsigned __int8 a2)
{
  if (a2 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a2 <= 1u)
  {
  }
}

double sub_1E3D6A4AC@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1E3D69EBC(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_1E3D6A4B8()
{
  unint64_t result = qword_1EBFE2058;
  if (!qword_1EBFE2058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2058);
  }
  return result;
}

unint64_t sub_1E3D6A510()
{
  unint64_t result = qword_1EBFE1F80;
  if (!qword_1EBFE1F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE1F80);
  }
  return result;
}

unint64_t sub_1E3D6A568()
{
  unint64_t result = qword_1EBFE2B50;
  if (!qword_1EBFE2B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2B50);
  }
  return result;
}

ValueMetadata *type metadata accessor for Glyph()
{
  return &type metadata for Glyph;
}

void destroy for Glyph.Settings(uint64_t a1)
{
  swift_bridgeObjectRelease();

  id v2 = *(void **)(a1 + 64);
}

uint64_t initializeWithCopy for Glyph.Settings(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  int v6 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  id v7 = v5;
  id v8 = v6;
  return a1;
}

uint64_t assignWithCopy for Glyph.Settings(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  id v8 = *(void **)(a1 + 64);
  char v9 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v9;
  id v10 = v9;

  return a1;
}

uint64_t assignWithTake for Glyph.Settings(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for Glyph.Settings(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Glyph.Settings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Glyph.Settings()
{
  return &type metadata for Glyph.Settings;
}

uint64_t initializeBufferWithCopyOfBuffer for Glyph.Color(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1E3D6A8A8(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1E3D6A8A8(id result, unsigned __int8 a2)
{
  if (a2 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

void destroy for Glyph.Color(uint64_t a1)
{
}

uint64_t assignWithCopy for Glyph.Color(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1E3D6A8A8(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1E3D6A488(v5, v6);
  return a1;
}

uint64_t assignWithTake for Glyph.Color(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1E3D6A488(v4, v5);
  return a1;
}

uint64_t sub_1E3D6A970(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1E3D6A978(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Glyph.Color()
{
  return &type metadata for Glyph.Color;
}

ValueMetadata *type metadata accessor for Glyph.Sidebar()
{
  return &type metadata for Glyph.Sidebar;
}

ValueMetadata *type metadata accessor for Glyph.TabBar()
{
  return &type metadata for Glyph.TabBar;
}

ValueMetadata *type metadata accessor for Glyph.PodcastLockup()
{
  return &type metadata for Glyph.PodcastLockup;
}

ValueMetadata *type metadata accessor for Glyph.QuickPlay()
{
  return &type metadata for Glyph.QuickPlay;
}

ValueMetadata *type metadata accessor for Glyph.NowPlaying()
{
  return &type metadata for Glyph.NowPlaying;
}

ValueMetadata *type metadata accessor for Glyph.MiniPlayer()
{
  return &type metadata for Glyph.MiniPlayer;
}

ValueMetadata *type metadata accessor for Glyph.FullWidthMiniPlayer()
{
  return &type metadata for Glyph.FullWidthMiniPlayer;
}

ValueMetadata *type metadata accessor for Glyph.PlayerBar()
{
  return &type metadata for Glyph.PlayerBar;
}

ValueMetadata *type metadata accessor for Glyph.HeaderButtons()
{
  return &type metadata for Glyph.HeaderButtons;
}

ValueMetadata *type metadata accessor for Glyph.StandaloneHeaderButtons()
{
  return &type metadata for Glyph.StandaloneHeaderButtons;
}

ValueMetadata *type metadata accessor for Glyph.SortMenuOptions()
{
  return &type metadata for Glyph.SortMenuOptions;
}

ValueMetadata *type metadata accessor for Glyph.GenericContextMenuButton()
{
  return &type metadata for Glyph.GenericContextMenuButton;
}

ValueMetadata *type metadata accessor for Glyph.PlayControls()
{
  return &type metadata for Glyph.PlayControls;
}

ValueMetadata *type metadata accessor for Glyph.PlayControls.Medium()
{
  return &type metadata for Glyph.PlayControls.Medium;
}

ValueMetadata *type metadata accessor for Glyph.PlayControls.Large()
{
  return &type metadata for Glyph.PlayControls.Large;
}

ValueMetadata *type metadata accessor for Glyph.MacEpisodeCells()
{
  return &type metadata for Glyph.MacEpisodeCells;
}

ValueMetadata *type metadata accessor for Glyph.EpisodeHero()
{
  return &type metadata for Glyph.EpisodeHero;
}

uint64_t type metadata accessor for GlyphInternal()
{
  return self;
}

unint64_t sub_1E3D6AAC8()
{
  unint64_t result = qword_1EAE280A0;
  if (!qword_1EAE280A0)
  {
    type metadata accessor for GlyphInternal();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE280A0);
  }
  return result;
}

uint64_t sub_1E3D6AB20(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(void **)(a1 + 64);
  if (v1)
  {
    id v4 = objc_msgSend(self, sel_configurationWithFont_scale_, v1, v2);
  }
  else
  {
    double v5 = *(double *)(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 40);
    char v7 = *(unsigned char *)(a1 + 32);
    id v8 = self;
    if (v7) {
      id v4 = objc_msgSend(v8, sel_unspecifiedConfiguration);
    }
    else {
      id v4 = objc_msgSend(v8, sel_configurationWithPointSize_weight_scale_, v6, v2, v5);
    }
  }
  id v9 = v4;
  id v10 = (void *)sub_1E3E7CCF0();
  id v11 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v10, v9);

  if (v11)
  {

    return (uint64_t)v11;
  }
  else
  {
    id v13 = v3;
    swift_bridgeObjectRetain();
    id v14 = v1;
    sub_1E3E7DDD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1E3E7CEA0();
    swift_bridgeObjectRelease();
    sub_1E3E7CEA0();
    uint64_t result = sub_1E3E7DF80();
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D6AD04(uint64_t a1)
{
  uint64_t v2 = self;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  double v5 = (void *)sub_1E3E7CCF0();
  unsigned int v6 = objc_msgSend(v2, sel_needsLocaleAwareNumbersWorkaroundForSymbol_, v5);

  if (v6)
  {
    char v7 = (void *)sub_1E3E7CCF0();
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 40);
    char v10 = *(unsigned char *)(a1 + 48);
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v11 = *(void *)(a1 + 64);
    char v13 = *(unsigned char *)(a1 + 72);
    int v14 = *(unsigned __int8 *)(a1 + 73);
    char v15 = *(unsigned char *)(a1 + 74);
    uint64_t v16 = *(void *)(a1 + 80);
    uint64_t v34 = v3;
    uint64_t v35 = v4;
    uint64_t v32 = v16;
    uint64_t v33 = v8;
    uint64_t v36 = v8;
    uint64_t v37 = v9;
    uint64_t v31 = v9;
    char v30 = v10;
    char v38 = v10;
    uint64_t v39 = v12;
    uint64_t v40 = v11;
    char v41 = v13;
    char v42 = v14;
    char v43 = v15;
    uint64_t v44 = v16;
    id v17 = sub_1E3D60A9C();
    id v18 = objc_msgSend(v2, sel_systemImageNamedNumberAware_config_, v7, v17);
  }
  else
  {
    uint64_t v19 = *(void *)(a1 + 80);
    uint64_t v32 = v19;
    if (*(unsigned char *)(a1 + 72) == 1)
    {
      uint64_t v20 = *(void *)(a1 + 32);
      uint64_t v21 = *(void *)(a1 + 40);
      char v22 = *(unsigned char *)(a1 + 48);
      uint64_t v12 = *(void *)(a1 + 56);
      uint64_t v11 = *(void *)(a1 + 64);
      int v14 = *(unsigned __int8 *)(a1 + 73);
      char v15 = *(unsigned char *)(a1 + 74);
      uint64_t v34 = v3;
      uint64_t v35 = v4;
      uint64_t v33 = v20;
      uint64_t v36 = v20;
      uint64_t v37 = v21;
      uint64_t v31 = v21;
      char v30 = v22;
      char v38 = v22;
      uint64_t v39 = v12;
      uint64_t v40 = v11;
      char v13 = 1;
      char v41 = 1;
      char v42 = v14;
      char v43 = v15;
      uint64_t v44 = v19;
      swift_bridgeObjectRetain();
      id v17 = sub_1E3D60A9C();
      char v7 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
      id v18 = objc_msgSend(v2, sel_imageNamed_inBundle_withConfiguration_, v7, 0, v17);
    }
    else
    {
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      char v25 = *(unsigned char *)(a1 + 48);
      uint64_t v12 = *(void *)(a1 + 56);
      uint64_t v11 = *(void *)(a1 + 64);
      int v14 = *(unsigned __int8 *)(a1 + 73);
      uint64_t v33 = v23;
      uint64_t v31 = v24;
      char v30 = v25;
      if (*(unsigned char *)(a1 + 74) == 1)
      {
        uint64_t v34 = v3;
        uint64_t v35 = v4;
        uint64_t v36 = v23;
        uint64_t v37 = v24;
        char v38 = v25;
        uint64_t v39 = v12;
        uint64_t v40 = v11;
        char v41 = 0;
        char v42 = v14;
        char v15 = 1;
        char v43 = 1;
        uint64_t v44 = v19;
        swift_bridgeObjectRetain();
        id v17 = sub_1E3D60A9C();
        char v7 = (void *)sub_1E3E7CCF0();
        swift_bridgeObjectRelease();
        id v18 = objc_msgSend(v2, sel__systemImageNamed_withConfiguration_, v7, v17);
        char v13 = 0;
      }
      else
      {
        uint64_t v34 = v3;
        uint64_t v35 = v4;
        uint64_t v36 = v23;
        uint64_t v37 = v24;
        char v38 = v25;
        uint64_t v39 = v12;
        uint64_t v40 = v11;
        char v41 = 0;
        char v42 = v14;
        char v43 = 0;
        uint64_t v44 = v19;
        swift_bridgeObjectRetain();
        id v17 = sub_1E3D60A9C();
        char v7 = (void *)sub_1E3E7CCF0();
        swift_bridgeObjectRelease();
        id v18 = objc_msgSend(v2, sel_systemImageNamed_withConfiguration_, v7, v17);
        char v13 = 0;
        char v15 = 0;
      }
    }
  }
  id v26 = v18;

  if (v26)
  {
    if (v14) {
      uint64_t v27 = 1;
    }
    else {
      uint64_t v27 = 2;
    }
    id v28 = objc_msgSend(v26, sel_imageWithRenderingMode_, v27);

    return (uint64_t)v28;
  }
  else
  {
    uint64_t v34 = v3;
    uint64_t v35 = v4;
    uint64_t v36 = v33;
    uint64_t v37 = v31;
    char v38 = v30;
    uint64_t v39 = v12;
    uint64_t v40 = v11;
    char v41 = v13;
    char v42 = v14;
    char v43 = v15;
    uint64_t v44 = v32;
    return sub_1E3D6AB20((uint64_t)&v34);
  }
}

id sub_1E3D6B038(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    return sub_1E3D6A8A8(result, a2);
  }
  return result;
}

void sub_1E3D6B04C(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    sub_1E3D6A488(a1, a2);
  }
}

uint64_t sub_1E3D6B060(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  id v3 = *(id *)(a1 + 64);
  swift_bridgeObjectRetain();
  id v4 = v2;
  return a1;
}

unint64_t static PlayPreviousChapterIntent.kind.getter()
{
  return 0xD000000000000019;
}

void sub_1E3D6B0D0(void *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x80000001E3E8FE50;
}

ValueMetadata *type metadata accessor for PlayPreviousChapterIntent()
{
  return &type metadata for PlayPreviousChapterIntent;
}

uint64_t PodcastsIntentDispatcher.init(asPartOf:intentDispatcher:timeout:instrumentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1E3C1B2BC(a2, a5);
  uint64_t v9 = type metadata accessor for PodcastsIntentDispatcher();
  uint64_t v10 = a5 + *(int *)(v9 + 28);
  uint64_t v11 = sub_1E3E7C420();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a3, v11);
  uint64_t v13 = a5 + *(int *)(v9 + 32);
  uint64_t v14 = sub_1E3E7C5F0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, a4, v14);
  *(void *)(a5 + 48) = a1;
  sub_1E3E7C410();
  swift_retain_n();
  sub_1E3E7BE90();
  sub_1E3E7C3F0();
  swift_release();
  uint64_t v16 = sub_1E3E7C3E0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a4, v14);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a2);
  *(void *)(a5 + 40) = v16;
  return result;
}

uint64_t type metadata accessor for PodcastsIntentDispatcher()
{
  uint64_t result = qword_1EBFDFEE8;
  if (!qword_1EBFDFEE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PodcastsIntentDispatcher.init(asPartOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E7C5F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = sub_1E3E7C420();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  sub_1E3E7BE20();
  (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F71488], v8);
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F715B8], v4);
  sub_1E3C1B2BC((uint64_t)v16, a2);
  uint64_t v12 = type metadata accessor for PodcastsIntentDispatcher();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v9 + 16))(a2 + *(int *)(v12 + 28), v11, v8);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 16))(a2 + *(int *)(v12 + 32), v7, v4);
  *(void *)(a2 + 48) = a1;
  sub_1E3E7C410();
  swift_retain_n();
  sub_1E3E7BE90();
  sub_1E3E7C3F0();
  swift_release();
  uint64_t v13 = sub_1E3E7C3E0();
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  *(void *)(a2 + 40) = v13;
  return result;
}

uint64_t PodcastsIntentDispatcher.dispatch<A>(intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1E3D6B5D4, 0, 0);
}

uint64_t sub_1E3D6B5D4()
{
  uint64_t v1 = *(void *)(v0[6] + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3D5536C;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  return sub_1E3D6B67C(v6, v4, v1, v5, v3);
}

uint64_t sub_1E3D6B67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[31] = a5;
  v6[32] = v5;
  v6[29] = a3;
  v6[30] = a4;
  v6[27] = a1;
  v6[28] = a2;
  uint64_t v7 = sub_1E3E7A6E0();
  v6[33] = v7;
  v6[34] = *(void *)(v7 - 8);
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  uint64_t v8 = sub_1E3E7A640();
  v6[37] = v8;
  v6[38] = *(void *)(v8 - 8);
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  v6[41] = swift_task_alloc();
  v6[42] = swift_task_alloc();
  uint64_t v9 = sub_1E3E7A6D0();
  v6[43] = v9;
  v6[44] = *(void *)(v9 - 8);
  v6[45] = swift_task_alloc();
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  uint64_t v10 = sub_1E3E7A880();
  v6[48] = v10;
  v6[49] = *(void *)(v10 - 8);
  v6[50] = swift_task_alloc();
  v6[51] = swift_task_alloc();
  v6[52] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3D6B8C8, 0, 0);
}

uint64_t sub_1E3D6B8C8()
{
  char v38 = v0;
  sub_1E3E7A7A0();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D4D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v32 = v0[49];
    uint64_t v33 = v0[48];
    uint64_t v35 = v0[52];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v37 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_1E3E7BB70();
    v0[26] = sub_1E3C150B8(v0[7], v0[8], &v37);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Attempting to route intent: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v4, -1, -1);
    MEMORY[0x1E4E79510](v3, -1, -1);

    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v5(v35, v33);
  }
  else
  {
    uint64_t v6 = v0[52];
    uint64_t v7 = v0[48];
    uint64_t v8 = v0[49];

    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v5(v6, v7);
  }
  v0[53] = v5;
  sub_1E3E7A660();
  sub_1E3E7A630();
  uint64_t v9 = sub_1E3E7A6A0();
  os_signpost_type_t v10 = sub_1E3E7D760();
  if (sub_1E3E7DB50())
  {
    uint64_t v31 = v0[41];
    uint64_t v11 = v0[38];
    uint64_t v34 = v0[37];
    uint64_t v36 = *(void (**)(void))(v11 + 16);
    unint64_t v12 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v36();
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v37 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_1E3E7BB70();
    v0[24] = sub_1E3C150B8(v0[11], v0[12], &v37);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    os_signpost_id_t v15 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v9, v10, v15, "IntentDispatch", "[kind=%{name=kind}s]", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v14, -1, -1);
    MEMORY[0x1E4E79510](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v31, v34);
    uint64_t v16 = v36;
  }
  else
  {
    uint64_t v17 = v0[38];

    uint64_t v16 = *(void (**)(void))(v17 + 16);
    unint64_t v12 = (v17 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v18 = v0[47];
  uint64_t v19 = v0[43];
  uint64_t v20 = v0[44];
  uint64_t v21 = v0[41];
  uint64_t v22 = v0[42];
  uint64_t v23 = v0[37];
  uint64_t v24 = v0[38];
  char v25 = (void *)v0[32];
  v0[54] = v16;
  v0[55] = v12;
  ((void (*)(uint64_t, uint64_t, uint64_t))v16)(v21, v22, v23);
  sub_1E3E7A720();
  swift_allocObject();
  v0[56] = sub_1E3E7A710();
  id v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v0[57] = v26;
  v0[58] = (v24 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v26(v22, v23);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v0[59] = v27;
  v0[60] = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v27(v18, v19);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  id v28 = (void *)swift_task_alloc();
  v0[61] = v28;
  *id v28 = v0;
  v28[1] = sub_1E3D6BD4C;
  uint64_t v29 = v0[27];
  return MEMORY[0x1F41281F8](v29);
}

uint64_t sub_1E3D6BD4C()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1E3D6C388;
  }
  else {
    os_log_type_t v2 = sub_1E3D6BE60;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3D6BE60()
{
  uint64_t v38 = v0;
  sub_1E3E7A660();
  uint64_t v1 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  os_signpost_type_t v2 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    uint64_t v3 = *(void *)(v0 + 288);
    uint64_t v5 = *(void *)(v0 + 264);
    uint64_t v4 = *(void *)(v0 + 272);
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E4FBD340])
    {
      char v6 = 0;
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 264));
      uint64_t v7 = "[kind=%{name=kind}s], [outcome=%{name=outcome}s])";
      char v6 = 2;
    }
    format = (char *)v7;
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v33 = *(void *)(v0 + 368);
    uint64_t v32 = *(void *)(v0 + 344);
    uint64_t v14 = *(void *)(v0 + 328);
    uint64_t v30 = *(void *)(v0 + 320);
    uint64_t v15 = *(void *)(v0 + 296);
    (*(void (**)(uint64_t))(v0 + 432))(v14);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v37 = v17;
    *(unsigned char *)uint64_t v16 = v6;
    *(unsigned char *)(v16 + 1) = v6;
    *(_WORD *)(v16 + 2) = 2080;
    sub_1E3E7BB70();
    *(void *)(v0 + 168) = sub_1E3C150B8(*(void *)(v0 + 104), *(void *)(v0 + 112), &v37);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    *(void *)(v0 + 176) = sub_1E3C150B8(0x53534543435553, 0xE700000000000000, &v37);
    sub_1E3E7DBD0();
    os_signpost_id_t v18 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v1, v2, v18, "IntentDispatch", format, (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v17, -1, -1);
    MEMORY[0x1E4E79510](v16, -1, -1);

    v31(v30, v15);
    v35(v33, v32);
    v31(v14, v15);
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    uint64_t v12 = *(void *)(v0 + 320);
    uint64_t v13 = *(void *)(v0 + 296);

    v9(v12, v13);
    v8(v10, v11);
  }
  sub_1E3E7A7A0();
  uint64_t v19 = sub_1E3E7A860();
  os_log_type_t v20 = sub_1E3E7D4D0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  uint64_t v23 = *(void *)(v0 + 408);
  uint64_t v24 = *(void *)(v0 + 384);
  if (v21)
  {
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v34 = *(void *)(v0 + 384);
    char v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v37 = v26;
    *(_DWORD *)char v25 = 136315138;
    sub_1E3E7BB70();
    *(void *)(v0 + 152) = sub_1E3C150B8(*(void *)(v0 + 40), *(void *)(v0 + 48), &v37);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v19, v20, "Intent %s succeeded.", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v26, -1, -1);
    MEMORY[0x1E4E79510](v25, -1, -1);

    swift_release();
    v36(v23, v34);
  }
  else
  {
    swift_release();

    v22(v23, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1E3D6C388()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void **)(v0 + 496);
  sub_1E3E7A7A0();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = *(void **)(v0 + 496);
    uint64_t v41 = *(void *)(v0 + 400);
    char v42 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v40 = *(void *)(v0 + 384);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v43[0] = v38;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1E3E7BB70();
    *(void *)(v0 + 184) = sub_1E3C150B8(*(void *)(v0 + 72), *(void *)(v0 + 80), v43);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v8 = sub_1E3E7E210();
    *(void *)(v0 + 136) = sub_1E3C150B8(v8, v9, v43);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Failed to route intent: %s: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v38, -1, -1);
    MEMORY[0x1E4E79510](v7, -1, -1);

    v42(v41, v40);
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 496);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v12 = *(void *)(v0 + 400);
    uint64_t v13 = *(void *)(v0 + 384);

    v11(v12, v13);
  }
  sub_1E3E7A660();
  uint64_t v14 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  os_signpost_type_t v15 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    uint64_t v16 = *(void *)(v0 + 272);
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 264);
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 88))(v17, v18) == *MEMORY[0x1E4FBD340])
    {
      char v19 = 0;
      os_log_type_t v20 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
      os_log_type_t v20 = "[kind=%{name=kind}s], [outcome=%{name=outcome}s])";
      char v19 = 2;
    }
    format = (char *)v20;
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v35 = *(void *)(v0 + 344);
    uint64_t v36 = *(void *)(v0 + 360);
    uint64_t v33 = *(void *)(v0 + 312);
    uint64_t v34 = *(void *)(v0 + 296);
    (*(void (**)(void))(v0 + 432))(*(void *)(v0 + 328));
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v43[0] = v28;
    *(unsigned char *)uint64_t v27 = v19;
    *(unsigned char *)(v27 + 1) = v19;
    *(_WORD *)(v27 + 2) = 2080;
    sub_1E3E7BB70();
    *(void *)(v0 + 144) = sub_1E3C150B8(*(void *)(v0 + 120), *(void *)(v0 + 128), v43);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    *(void *)(v0 + 200) = sub_1E3C150B8(0x4552554C494146, 0xE700000000000000, v43);
    sub_1E3E7DBD0();
    BOOL v21 = (void *)(v0 + 328);
    os_signpost_id_t v29 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v14, v15, v29, "IntentDispatch", format, (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v28, -1, -1);
    MEMORY[0x1E4E79510](v27, -1, -1);

    v37(v33, v34);
    v39(v36, v35);
    uint64_t v26 = (void *)(v0 + 296);
    char v25 = (void (**)(void, void))(v0 + 456);
  }
  else
  {
    BOOL v21 = (void *)(v0 + 360);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v23 = *(void *)(v0 + 312);
    uint64_t v24 = *(void *)(v0 + 296);

    v22(v23, v24);
    char v25 = (void (**)(void, void))(v0 + 472);
    uint64_t v26 = (void *)(v0 + 344);
  }
  (*v25)(*v21, *v26);
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t PodcastsIntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  void v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1E3D6C9B0, 0, 0);
}

{
  uint64_t v5;
  void *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  void v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1E3D6CCC8, 0, 0);
}

uint64_t sub_1E3D6C9B0()
{
  sub_1E3E7C410();
  sub_1E3E775E0();
  sub_1E3E7BE90();
  type metadata accessor for PodcastsIntentDispatcher();
  sub_1E3E7C3F0();
  swift_release();
  uint64_t v1 = sub_1E3E7C3E0();
  v0[8] = v1;
  swift_release();
  id v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *id v2 = v0;
  v2[1] = sub_1E3D6CAC4;
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  return sub_1E3D6B67C(v5, v6, v1, v4, v3);
}

uint64_t sub_1E3D6CAC4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1E3D6CC3C;
  }
  else {
    id v2 = sub_1E3D6CBD8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3D6CBD8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3D6CC3C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3D6CCC8()
{
  uint64_t v1 = (void *)v0[7];
  sub_1E3E7C410();
  sub_1E3E775E0();
  sub_1E3E7BE90();
  type metadata accessor for PodcastsIntentDispatcher();
  sub_1E3E7C3F0();
  swift_release();
  v0[8] = sub_1E3E7C3E0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  id v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *id v2 = v0;
  v2[1] = sub_1E3D6CAC4;
  uint64_t v3 = v0[2];
  return MEMORY[0x1F41281F8](v3);
}

uint64_t sub_1E3D6CDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_1E3C19DC4;
  return MEMORY[0x1F4128200](a1, a2, a3, a7, a4, a5, a8, a6);
}

uint64_t sub_1E3D6CEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[6] = a5;
  v12[7] = v5;
  v12[4] = a3;
  v12[5] = a4;
  long long v12[2] = a1;
  v12[3] = a2;
  v12[1] = sub_1E3C50ED4;
  return MEMORY[0x1F4188298](sub_1E3D6CCC8, 0, 0);
}

uint64_t sub_1E3D6CFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x1F4128208](a1, a2, a5, a3, a6, a4);
}

void *initializeBufferWithCopyOfBuffer for PodcastsIntentDispatcher(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1E3E7C420();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_1E3E775E0();
    sub_1E3E775E0();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 32);
    os_signpost_type_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_1E3E7C5F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t destroy for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1E3E7C420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_1E3E7C5F0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1E3E7C420();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  sub_1E3E775E0();
  sub_1E3E775E0();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1E3E7C5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t *assignWithCopy for PodcastsIntentDispatcher(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  sub_1E3E775E0();
  swift_release();
  a1[6] = a2[6];
  sub_1E3E775E0();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E7C420();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1E3E7C5F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1E3E7C420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1E3E7C5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1E3E7C420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1E3E7C5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3D6D648);
}

uint64_t sub_1E3D6D648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E7C420();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1E3E7C5F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3D6D788);
}

uint64_t sub_1E3D6D788(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E7C420();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1E3E7C5F0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1E3D6D8B4()
{
  uint64_t result = sub_1E3E7C420();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E3E7C5F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t static MAPIIntentFetchError.== infix(_:_:)()
{
  return 1;
}

uint64_t MAPIIntentFetchError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t MAPIIntentFetchError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

unint64_t sub_1E3D6DA10()
{
  unint64_t result = qword_1EAE280E0;
  if (!qword_1EAE280E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE280E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MAPIIntentFetchError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3D6DB00);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MAPIIntentFetchError()
{
  return &type metadata for MAPIIntentFetchError;
}

uint64_t sub_1E3D6DB38()
{
  uint64_t result = sub_1E3E7E0E0();
  qword_1EAE280E8 = result;
  unk_1EAE280F0 = v1;
  return result;
}

uint64_t sub_1E3D6DB88()
{
  uint64_t result = sub_1E3E7E0E0();
  qword_1EAE280F8 = result;
  unk_1EAE28100 = v1;
  return result;
}

uint64_t WritingDirectionsCounts.natural.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
}

uint64_t WritingDirectionsCounts.leftToRight.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
}

uint64_t WritingDirectionsCounts.rightToLeft.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
}

uint64_t WritingDirectionsCounts.total.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_total);
}

uint64_t WritingDirectionsCounts.significantValues.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_significantValues);
}

uint64_t WritingDirectionsCounts.hasStronglyTypedCounts.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts);
}

uint64_t WritingDirectionsCounts.isRTLEnough.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough);
}

uint64_t WritingDirectionsCounts.isRTLMinimal.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_isRTLMinimal);
}

char *WritingDirectionsCounts.__allocating_init(natural:leftToRight:rightToLeft:)(char *a1, uint64_t a2, unint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(a1, a2, a3);
}

char *WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(char *result, uint64_t a2, unint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_natural] = result;
  *(void *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight] = a2;
  *(void *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft] = a3;
  unsigned int v4 = &result[a2];
  if (__CFADD__(result, a2))
  {
    __break(1u);
    goto LABEL_14;
  }
  BOOL v5 = __CFADD__(v4, a3);
  long long v6 = &v4[a3];
  if (v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(void *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_total] = v6;
  uint64_t v7 = result != 0;
  if (!a3)
  {
    if (a2) {
      ++v7;
    }
    *(void *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_significantValues] = v7;
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts] = a2 != 0;
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough] = 0;
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLMinimal] = 0;
    goto LABEL_12;
  }
  if (a2) {
    uint64_t v8 = 2;
  }
  else {
    uint64_t v8 = 1;
  }
  *(void *)&v3[OBJC_IVAR___AMPWritingDirectionsCounts_significantValues] = v8 + v7;
  v3[OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts] = 1;
  if (!__CFADD__(a3, a2))
  {
    float v9 = (float)a3 / (float)(a3 + a2);
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough] = v9 >= 0.4;
    v3[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLMinimal] = v9 >= 0.15;
LABEL_12:
    v10.receiver = v3;
    v10.super_class = (Class)type metadata accessor for WritingDirectionsCounts();
    return (char *)objc_msgSendSuper2(&v10, sel_init);
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WritingDirectionsCounts()
{
  return self;
}

char *WritingDirectionsCounts.__allocating_init(summing:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = 0;
  uint64_t v3 = 0;
  unsigned int v4 = 0;
  if (!v1)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    id v13 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    return WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v4, v3, v2);
  }
  BOOL v5 = (void **)(a1 + 32);
  while (1)
  {
    uint64_t v7 = *v5++;
    long long v6 = v7;
    if (!v7) {
      goto LABEL_3;
    }
    uint64_t result = (char *)objc_msgSend(v6, sel_writingDirectionsQuantities);
    uint64_t v9 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_natural];
    BOOL v10 = __CFADD__(v4, v9);
    v4 += v9;
    if (v10) {
      break;
    }
    uint64_t v11 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight];
    BOOL v10 = __CFADD__(v3, v11);
    v3 += v11;
    if (v10) {
      goto LABEL_12;
    }
    uint64_t v12 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];

    BOOL v10 = __CFADD__(v2, v12);
    v2 += v12;
    if (v10)
    {
      __break(1u);
      goto LABEL_10;
    }
LABEL_3:
    if (!--v1) {
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

void WritingDirectionsCounts.__allocating_init(counting:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
LABEL_14:
    unint64_t v2 = 0;
    uint64_t v3 = 0;
    unsigned int v4 = 0;
LABEL_15:
    swift_bridgeObjectRelease();
    id v11 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v4, v3, v2);
    return;
  }
  unint64_t v2 = 0;
  uint64_t v3 = 0;
  unsigned int v4 = 0;
  BOOL v5 = (void **)(a1 + 32);
  while (1)
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    if (!v8) {
      goto LABEL_4;
    }
    uint64_t v9 = objc_msgSend(v7, sel_writingDirectionsQuantities);
    if (v9[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough]) {
      break;
    }
    int v10 = v9[OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts];

    if (v10 == 1)
    {
      BOOL v6 = __CFADD__(v3++, 1);
      if (v6) {
        goto LABEL_17;
      }
    }
    else
    {
      BOOL v6 = __CFADD__(v4++, 1);
      if (v6)
      {
        __break(1u);
        goto LABEL_14;
      }
    }
LABEL_4:
    if (!--v1) {
      goto LABEL_15;
    }
  }

  BOOL v6 = __CFADD__(v2++, 1);
  if (!v6) {
    goto LABEL_4;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

BOOL sub_1E3D6E0BC(uint64_t a1)
{
  sub_1E3C2ABC0(a1, (uint64_t)v6);
  if (v7)
  {
    type metadata accessor for WritingDirectionsCounts();
    if (swift_dynamicCast())
    {
      if (*(void *)(v1 + OBJC_IVAR___AMPWritingDirectionsCounts_natural) == *(void *)&v5[OBJC_IVAR___AMPWritingDirectionsCounts_natural]
        && *(void *)(v1 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight) == *(void *)&v5[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight])
      {
        uint64_t v2 = *(void *)(v1 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
        uint64_t v3 = *(void *)&v5[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];

        return v2 == v3;
      }
    }
  }
  else
  {
    sub_1E3C2AC28((uint64_t)v6);
  }
  return 0;
}

BOOL == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + OBJC_IVAR___AMPWritingDirectionsCounts_natural) == *(void *)(a2
                                                                                       + OBJC_IVAR___AMPWritingDirectionsCounts_natural)
      && *(void *)(a1 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight) == *(void *)(a2
                                                                                           + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight)
      && *(void *)(a1 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft) == *(void *)(a2
                                                                                           + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
}

char *+ infix(_:_:)(char *result, uint64_t a2)
{
  uint64_t v2 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_natural];
  uint64_t v3 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
  unsigned int v4 = (char *)(v2 + v3);
  if (__CFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight];
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
  uint64_t v7 = v5 + v6;
  if (__CFADD__(v5, v6))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];
  uint64_t v9 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
  unint64_t v10 = v8 + v9;
  if (!__CFADD__(v8, v9))
  {
    id v11 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    return WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v4, v7, v10);
  }
LABEL_7:
  __break(1u);
  return result;
}

char *sub_1E3D6E34C()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
  uint64_t result = WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(0, 0, 0);
  qword_1EBFDEEA8 = (uint64_t)result;
  return result;
}

id static WritingDirectionsCounts.zero.getter()
{
  if (qword_1EAE24498 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EBFDEEA8;

  return v0;
}

uint64_t sub_1E3D6E4AC()
{
  strcpy((char *)v2, "Natural: ");
  sub_1E3E7E0E0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  strcpy((char *)v2, "{ Counts: { ");
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();
  sub_1E3E7E0E0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = v2[0];
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();
  sub_1E3E7E0E0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();
  v2[0] = 0x45204C5452207349;
  v2[1] = 0xEF28206867756F6ELL;
  if (qword_1EAE24488 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();
  v2[0] = 0xD000000000000010;
  v2[1] = 0x80000001E3EA1B60;
  if (qword_1EAE24490 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  return v0;
}

id WritingDirectionsCounts.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void WritingDirectionsCounts.init()()
{
}

id WritingDirectionsCounts.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WritingDirectionsCounts();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void += infix(_:_:)(void **a1, uint64_t a2)
{
  objc_super v2 = (char *)*a1;
  uint64_t v3 = *(void *)((char *)*a1 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
  uint64_t v4 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
  uint64_t v5 = (char *)(v3 + v4);
  if (__CFADD__(v3, v4))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)&v2[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight];
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
  uint64_t v9 = v7 + v8;
  if (__CFADD__(v7, v8))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)&v2[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];

  uint64_t v12 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
  unint64_t v13 = v11 + v12;
  if (!__CFADD__(v11, v12))
  {
    id v14 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    *a1 = WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v5, v9, v13);
    return;
  }
LABEL_7:
  __break(1u);
}

char *sub_1E3D6EB34(char *result, uint64_t a2)
{
  uint64_t v2 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_natural];
  uint64_t v3 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
  uint64_t v4 = (char *)(v2 + v3);
  if (__CFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight];
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
  uint64_t v7 = v5 + v6;
  if (__CFADD__(v5, v6))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];
  uint64_t v9 = *(void *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
  unint64_t v10 = v8 + v9;
  if (!__CFADD__(v8, v9))
  {
    id v11 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    return WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v4, v7, v10);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t method lookup function for WritingDirectionsCounts(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WritingDirectionsCounts);
}

uint64_t dispatch thunk of WritingDirectionsCounts.__allocating_init(natural:leftToRight:rightToLeft:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of static WritingDirectionsCounts.add(_:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t static ActionMetrics.dismiss(targetID:targetType:actionContext:actionURL:fields:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void *a9)
{
  uint64_t v14 = sub_1E3E7C050();
  MEMORY[0x1F4188790](v14 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE8);
  uint64_t v15 = *(void *)(sub_1E3E7BC20() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1E3E86660;
  uint64_t v18 = v17 + v16;
  uint64_t v19 = sub_1E3E794D0();
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(a1, a2, a3, a4, v19, v20, a5, a6, v18, 0, a7, a8, a9);
  swift_bridgeObjectRelease();
  sub_1E3E7C040();
  return sub_1E3E7BD20();
}

uint64_t static ActionMetrics.flowAction(targetID:targetType:actionContext:actionResult:actionURL:fields:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, void *a11)
{
  uint64_t v16 = sub_1E3E7C050();
  MEMORY[0x1F4188790](v16 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE8);
  uint64_t v17 = *(void *)(sub_1E3E7BC20() - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1E3E86660;
  uint64_t v20 = v19 + v18;
  uint64_t v21 = sub_1E3E794E0();
  *(void *)&long long v24 = a7;
  *((void *)&v24 + 1) = a8;
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(a1, a2, a3, a4, v21, v22, a5, a6, v20, v24, a9, a10, a11);
  swift_bridgeObjectRelease();
  sub_1E3E7C040();
  return sub_1E3E7BD20();
}

uint64_t static ActionMetrics.play(adamID:targetType:fields:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1E3E7C050();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1E3E7A520())
  {
    return sub_1E3E7BD10();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE8);
    uint64_t v17 = *(unsigned __int8 *)(*(void *)(sub_1E3E7BC20() - 8) + 80);
    uint64_t v29 = a3;
    uint64_t v18 = (v17 + 32) & ~v17;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1E3E86660;
    v28[0] = v19 + v18;
    uint64_t v30 = a1;
    sub_1E3C340DC();
    uint64_t v20 = sub_1E3E7DC90();
    uint64_t v22 = v21;
    uint64_t v23 = sub_1E3E794C0();
    v28[1] = a6;
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    uint64_t v27 = sub_1E3E77D00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 1, 1, v27);
    static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v20, v22, a2, v29, v24, v26, 0, 0, v28[0], 0, (uint64_t)v15, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1E3C13F0C((uint64_t)v15);
    sub_1E3E7C040();
    return sub_1E3E7BD20();
  }
}

uint64_t static ActionMetrics.play(adamID:targetType:fields:configuration:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  if (a2) {
    return sub_1E3E7BD10();
  }
  else {
    return static ActionMetrics.play(adamID:targetType:fields:configuration:)(a1, a3, a4, a5, a6, a7);
  }
}

uint64_t ThinClientLibraryEpisodeStateDataSource.init(asPartOf:)(uint64_t a1)
{
  return sub_1E3D6F22C(a1, &qword_1EAE24CA0, MEMORY[0x1E4F91D60]);
}

uint64_t ThinClientLibraryPodcastStateDataSource.init(asPartOf:)(uint64_t a1)
{
  return sub_1E3D6F22C(a1, &qword_1EAE24CA8, MEMORY[0x1E4F91D68]);
}

uint64_t sub_1E3D6F22C(uint64_t a1, uint64_t *a2, uint64_t (*a3)())
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1E3E7BE20();
  uint64_t v4 = a3();
  swift_release();
  return v4;
}

uint64_t ArtworkRequest.prepared.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E78E70();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ArtworkModel.joeColor(contrasting:using:selecting:)(uint64_t a1, void *a2, char *a3)
{
  char v5 = *a3;
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  char v9 = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v7 + 8))(v3, a1, &v9, v6, v7);
}

uint64_t UnownedImageIssueIdentifier.init(directory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E77D00();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t UnownedImageIssueIdentifier.startIdentifyingIssues(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnownedImageIssueIdentifier();
  uint64_t v86 = *(void *)(v2 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v99 = (uint64_t)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1E3E79860();
  uint64_t v4 = *(void *)(v68 - 8);
  uint64_t v72 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v68);
  v71 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E77D00();
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v10 = v80;
  uint64_t v97 = *(void *)(v80 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05B0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0500);
  uint64_t v70 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  unint64_t v65 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE04B8);
  uint64_t v81 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  v98 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4638);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v83 = v19;
  uint64_t v84 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v73 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D68);
  uint64_t v90 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v76 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4628);
  uint64_t v94 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  id v82 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4540);
  uint64_t v96 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  v87 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4550);
  uint64_t v95 = *(void *)(v92 - 8);
  double v25 = MEMORY[0x1F4188790](v92);
  v89 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v77 = v10 + 16;
  uint64_t v78 = v27;
  v74 = v12;
  uint64_t v75 = v9;
  ((void (*)(char *, uint64_t, uint64_t, double))v27)(v12, v100, v9, v25);
  sub_1E3E7AA30();
  uint64_t v64 = a1;
  id v101 = (id)sub_1E3E79850();
  uint64_t v28 = sub_1E3E7D640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v8, 1, 1, v28);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3C10DE8(&qword_1EBFE05A8, &qword_1EBFE05B0);
  sub_1E3C32D34();
  sub_1E3E7AD10();
  sub_1E3C10CE0((uint64_t)v8, (uint64_t *)&unk_1EBFE27A0);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v29 = v4;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v31 = v71;
  uint64_t v32 = v68;
  v30(v71, a1, v68);
  uint64_t v33 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v34 = swift_allocObject();
  uint64_t v66 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
  v66(v34 + ((v33 + 16) & ~v33), v31, v32);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6388);
  sub_1E3C10DE8(&qword_1EBFE04F8, &qword_1EBFE0500);
  uint64_t v35 = v69;
  uint64_t v36 = v65;
  sub_1E3E7ACB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v36, v35);
  uint64_t v37 = v99;
  sub_1E3D708D4(v100, v99);
  v30(v31, v64, v32);
  unint64_t v38 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  uint64_t v86 = v38 + v85;
  unint64_t v39 = (v38 + v85 + v33) & ~v33;
  uint64_t v40 = swift_allocObject();
  sub_1E3D72468(v37, v40 + v38, (uint64_t (*)(void))type metadata accessor for UnownedImageIssueIdentifier);
  v66(v40 + v39, v31, v32);
  sub_1E3E7A940();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE06C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4590);
  sub_1E3C10DE8(&qword_1EBFE04B0, &qword_1EBFE04B8);
  sub_1E3C10DE8(&qword_1EBFE4588, &qword_1EBFE4590);
  uint64_t v41 = v73;
  uint64_t v42 = v79;
  char v43 = v98;
  sub_1E3E7ACF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v43, v42);
  uint64_t v44 = v99;
  uint64_t v45 = v100;
  sub_1E3D708D4(v100, v99);
  uint64_t v46 = swift_allocObject();
  sub_1E3D72468(v44, v46 + v38, (uint64_t (*)(void))type metadata accessor for UnownedImageIssueIdentifier);
  sub_1E3C10DE8(&qword_1EBFE4630, (uint64_t *)&unk_1EBFE4638);
  uint64_t v47 = v76;
  uint64_t v48 = v83;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v41, v48);
  sub_1E3E7A940();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE04D8);
  sub_1E3C10DE8(&qword_1EBFE4558, &qword_1EBFE2D68);
  sub_1E3C10DE8(&qword_1EBFE04D0, &qword_1EBFE04D8);
  uint64_t v49 = v82;
  uint64_t v50 = v88;
  sub_1E3E7ACE0();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v47, v50);
  uint64_t v51 = v74;
  uint64_t v52 = v75;
  v78(v74, v45, v75);
  uint64_t v53 = v80;
  unint64_t v54 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v55 + v54, v51, v52);
  sub_1E3C10DE8(&qword_1EBFE4620, &qword_1EBFE4628);
  uint64_t v56 = v87;
  uint64_t v57 = v91;
  sub_1E3E7ABF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v49, v57);
  sub_1E3E79820();
  uint64_t v58 = v89;
  uint64_t v59 = v93;
  sub_1E3E7A8D0();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v56, v59);
  sub_1E3C10DE8(&qword_1EBFE4548, &qword_1EBFE4550);
  uint64_t v60 = v92;
  uint64_t v61 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v60);
  return v61;
}

uint64_t type metadata accessor for UnownedImageIssueIdentifier()
{
  uint64_t result = qword_1EBFDF3F0;
  if (!qword_1EBFDF3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3D701AC@<X0>(void *a1@<X8>)
{
  sub_1E3E79830();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_1E3E77CC0();
  uint64_t v3 = sub_1E3E78760();
  if (v1)
  {
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  else
  {
    uint64_t v5 = v3;
    uint64_t v15 = a1;
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      sub_1E3C10C8C();
      uint64_t v7 = (uint64_t *)(v5 + 40);
      uint64_t v8 = MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v9 = *(v7 - 1);
        uint64_t v10 = *v7;
        swift_bridgeObjectRetain();
        if (sub_1E3E7DC70())
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v17 = v8;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1E3CC7660(0, *(void *)(v8 + 16) + 1, 1);
            uint64_t v8 = v17;
          }
          unint64_t v13 = *(void *)(v8 + 16);
          unint64_t v12 = *(void *)(v8 + 24);
          if (v13 >= v12 >> 1)
          {
            sub_1E3CC7660(v12 > 1, v13 + 1, 1);
            uint64_t v8 = v17;
          }
          *(void *)(v8 + 16) = v13 + 1;
          uint64_t v14 = v8 + 16 * v13;
          *(void *)(v14 + 32) = v9;
          *(void *)(v14 + 40) = v10;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v7 += 2;
        --v6;
      }
      while (v6);
    }
    else
    {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    *uint64_t v15 = v8;
  }
  return result;
}

uint64_t sub_1E3D70380()
{
  return objectdestroyTm_9(MEMORY[0x1E4F91AD0]);
}

uint64_t sub_1E3D70398@<X0>(void *a1@<X8>)
{
  return sub_1E3D701AC(a1);
}

uint64_t sub_1E3D70414@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v29[1] = a2;
  uint64_t v38 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE05C8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v33 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE07E8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  uint64_t v37 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v32 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4538);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE45E0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4568);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v30 = v18;
  uint64_t v31 = v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  sub_1E3D70B80((uint64_t)v13);
  sub_1E3C10DE8(&qword_1EBFE4530, &qword_1EBFE4538);
  sub_1E3E7ACD0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE06C0);
  sub_1E3C10DE8(&qword_1EBFE45D8, &qword_1EBFE45E0);
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v39 = v22;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6388);
  uint64_t v23 = v33;
  sub_1E3E7AA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
  uint64_t v24 = v32;
  uint64_t v25 = v34;
  sub_1E3E7AA20();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v25);
  sub_1E3C10DE8(&qword_1EBFE4560, &qword_1EBFE4568);
  sub_1E3C10DE8(&qword_1EBFE07E0, &qword_1EBFE07E8);
  uint64_t v26 = v30;
  uint64_t v27 = v36;
  sub_1E3E7AC00();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v21, v26);
}

uint64_t sub_1E3D708D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnownedImageIssueIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3D70938()
{
  uint64_t v1 = *(void *)(type metadata accessor for UnownedImageIssueIdentifier() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_1E3E79860();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = sub_1E3E77D00();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2, v7);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);

  return swift_deallocObject();
}

uint64_t sub_1E3D70A9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for UnownedImageIssueIdentifier() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1E3E79860() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1E3D70414(a1, v9, a2);
}

uint64_t sub_1E3D70B80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE04F0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4490);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  uint64_t v38 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D70);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v39 = v12;
  uint64_t v40 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE0750);
  id v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  objc_msgSend(v16, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE07D0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1E3E8A200;
  uint64_t v18 = sub_1E3E7CD30();
  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 32) = v18;
  *(void *)(v17 + 40) = v20;
  uint64_t v21 = sub_1E3E7CD30();
  *(void *)(v17 + 88) = v19;
  *(void *)(v17 + 64) = v21;
  *(void *)(v17 + 72) = v22;
  uint64_t v23 = sub_1E3E7CD30();
  *(void *)(v17 + 120) = v19;
  *(void *)(v17 + 96) = v23;
  *(void *)(v17 + 104) = v24;
  uint64_t v25 = sub_1E3E7CD30();
  *(void *)(v17 + 152) = v19;
  *(void *)(v17 + 128) = v25;
  *(void *)(v17 + 136) = v26;
  uint64_t v27 = sub_1E3E7CD30();
  *(void *)(v17 + 184) = v19;
  *(void *)(v17 + 160) = v27;
  *(void *)(v17 + 168) = v28;
  uint64_t v29 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setPropertiesToFetch_, v29);

  sub_1E3E79840();
  __swift_project_boxed_opaque_existential_1(v44, v44[3]);
  uint64_t v43 = sub_1E3E79970();
  id v42 = (id)sub_1E3E79850();
  uint64_t v30 = sub_1E3E7D640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v3, 1, 1, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0560);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3C10DE8(&qword_1EBFE0558, (uint64_t *)&unk_1EBFE0560);
  sub_1E3C32D34();
  sub_1E3E7AD10();
  sub_1E3C10CE0((uint64_t)v3, (uint64_t *)&unk_1EBFE27A0);

  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A10);
  sub_1E3C10DE8(&qword_1EBFE04E8, &qword_1EBFE04F0);
  uint64_t v31 = v35;
  sub_1E3E7AB80();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v31);
  sub_1E3E7A940();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4658);
  sub_1E3C10DE8(&qword_1EBFE4488, &qword_1EBFE4490);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE4648, &qword_1EBFE4658);
  uint64_t v32 = v37;
  sub_1E3E7ACE0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v32);
  sub_1E3C10DE8(&qword_1EBFE4608, &qword_1EBFE2D70);
  uint64_t v33 = v39;
  sub_1E3E7ABF0();

  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v33);
}

uint64_t sub_1E3D71190@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1E3C504EC(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3D711D8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UnownedImageIssueIdentifier() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_deallocObject();
}

void *sub_1E3D712B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for UnownedImageIssueIdentifier();
  uint64_t result = sub_1E3D71324(*a1, a1[1]);
  *a2 = result;
  return result;
}

void *sub_1E3D71324(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t *)(a2 + 40);
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v8 = *(v5 - 1);
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1E3E78D60();
    uint64_t v11 = v10;
    sub_1E3C9BC44();
    if ((sub_1E3E7D3C0() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    char v12 = sub_1E3D34688(v9, v11, a1);
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_4;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1E3CB7240(0, v6[2] + 1, 1, v6);
    }
    unint64_t v14 = v6[2];
    unint64_t v13 = v6[3];
    if (v14 >= v13 >> 1) {
      uint64_t v6 = sub_1E3CB7240((void *)(v13 > 1), v14 + 1, 1, v6);
    }
    v6[2] = v14 + 1;
    uint64_t v15 = &v6[2 * v14];
    v15[4] = v8;
    v15[5] = v7;
LABEL_5:
    v5 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3D71498()
{
  return sub_1E3D71B98();
}

uint64_t sub_1E3D714A4()
{
  return objectdestroyTm_9(MEMORY[0x1E4F276F0]);
}

uint64_t sub_1E3D714BC()
{
  return sub_1E3E77C60();
}

uint64_t sub_1E3D71530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28148) + 48);
  uint64_t v5 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v4, a1, v5);
  sub_1E3E77E40();
  uint64_t v6 = *MEMORY[0x1E4F91AC8];
  uint64_t v7 = sub_1E3E79820();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(a2, v6, v7);
}

uint64_t sub_1E3D71608@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v37 = sub_1E3E7CD30();
  sub_1E3E7DD60();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1E3C2E448((uint64_t)v38), (v5 & 1) != 0))
  {
    sub_1E3C114A4(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v39);
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
  }
  sub_1E3C1B480((uint64_t)v38);
  if (!*((void *)&v40 + 1))
  {
    uint64_t result = sub_1E3C10CE0((uint64_t)&v39, &qword_1EBFE6190);
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    uint64_t v10 = 0;
    goto LABEL_53;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE07B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E87930;
  sub_1E3E7CD30();
  sub_1E3E7DD60();
  if (*(void *)(v3 + 16) && (unint64_t v8 = sub_1E3C2E448((uint64_t)v38), (v9 & 1) != 0))
  {
    sub_1E3C114A4(*(void *)(v3 + 56) + 32 * v8, (uint64_t)&v39);
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
  }
  sub_1E3C1B480((uint64_t)v38);
  if (*((void *)&v40 + 1))
  {
    if (swift_dynamicCast()) {
      goto LABEL_18;
    }
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v39, &qword_1EBFE6190);
  }
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
LABEL_18:
  sub_1E3E7CD30();
  sub_1E3E7DD60();
  if (*(void *)(v3 + 16) && (unint64_t v11 = sub_1E3C2E448((uint64_t)v38), (v12 & 1) != 0))
  {
    sub_1E3C114A4(*(void *)(v3 + 56) + 32 * v11, (uint64_t)&v39);
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
  }
  sub_1E3C1B480((uint64_t)v38);
  if (*((void *)&v40 + 1))
  {
    if (swift_dynamicCast()) {
      goto LABEL_27;
    }
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v39, &qword_1EBFE6190);
  }
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0;
LABEL_27:
  sub_1E3E7CD30();
  sub_1E3E7DD60();
  if (*(void *)(v3 + 16) && (unint64_t v13 = sub_1E3C2E448((uint64_t)v38), (v14 & 1) != 0))
  {
    sub_1E3C114A4(*(void *)(v3 + 56) + 32 * v13, (uint64_t)&v39);
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
  }
  sub_1E3C1B480((uint64_t)v38);
  if (*((void *)&v40 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v15 = *(void *)(inited + 40);
      if (v15) {
        goto LABEL_34;
      }
      goto LABEL_40;
    }
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v39, &qword_1EBFE6190);
  }
  *(void *)(inited + 64) = 0;
  *(void *)(inited + 72) = 0;
  uint64_t v15 = *(void *)(inited + 40);
  if (v15)
  {
LABEL_34:
    uint64_t v16 = *(void *)(inited + 32);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1E3CB7240(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    unint64_t v20 = v19 + 1;
    if (v19 >= v18 >> 1)
    {
      uint64_t v34 = sub_1E3CB7240((void *)(v18 > 1), v19 + 1, 1, v17);
      unint64_t v20 = v19 + 1;
      uint64_t v17 = v34;
    }
    v17[2] = v20;
    uint64_t v21 = &v17[2 * v19];
    v21[4] = v16;
    v21[5] = v15;
    uint64_t v22 = *(void *)(inited + 56);
    if (!v22) {
      goto LABEL_46;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(inited + 56);
  if (v22)
  {
LABEL_41:
    uint64_t v23 = *(void *)(inited + 48);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_1E3CB7240(0, v17[2] + 1, 1, v17);
    }
    unint64_t v25 = v17[2];
    unint64_t v24 = v17[3];
    unint64_t v26 = v25 + 1;
    if (v25 >= v24 >> 1)
    {
      uint64_t v35 = sub_1E3CB7240((void *)(v24 > 1), v25 + 1, 1, v17);
      unint64_t v26 = v25 + 1;
      uint64_t v17 = v35;
    }
    v17[2] = v26;
    uint64_t v27 = &v17[2 * v25];
    v27[4] = v23;
    v27[5] = v22;
  }
LABEL_46:
  uint64_t v28 = *(void *)(inited + 72);
  if (v28)
  {
    uint64_t v29 = *(void *)(inited + 64);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_1E3CB7240(0, v17[2] + 1, 1, v17);
    }
    unint64_t v31 = v17[2];
    unint64_t v30 = v17[3];
    unint64_t v32 = v31 + 1;
    if (v31 >= v30 >> 1)
    {
      uint64_t v36 = sub_1E3CB7240((void *)(v30 > 1), v31 + 1, 1, v17);
      unint64_t v32 = v31 + 1;
      uint64_t v17 = v36;
    }
    v17[2] = v32;
    uint64_t v33 = &v17[2 * v31];
    v33[4] = v29;
    v33[5] = v28;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1E3D7218C((uint64_t)v17, v37);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
LABEL_53:
  *a2 = v10;
  return result;
}

uint64_t sub_1E3D71B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  return sub_1E3E7CFA0();
}

uint64_t sub_1E3D71B8C()
{
  return sub_1E3D71B98();
}

uint64_t sub_1E3D71B98()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3D71C08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1E3E78E70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v14 - v7;
  ArtworkModel.preferredRequest.getter((uint64_t)&v14 - v7);
  sub_1E3E78DA0();
  char v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v8, v2);
  uint64_t v10 = sub_1E3E78D90();
  uint64_t v12 = v11;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v9)(v5, v2);
  *a1 = v10;
  a1[1] = v12;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77D00();
  char v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for UnownedImageIssueIdentifier(uint64_t a1)
{
  uint64_t v2 = sub_1E3E77D00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3D71FAC);
}

uint64_t sub_1E3D71FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77D00();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3D7202C);
}

uint64_t sub_1E3D7202C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77D00();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1E3D7209C()
{
  uint64_t result = sub_1E3E77D00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1E3D72128()
{
  return sub_1E3C10DE8(&qword_1EBFE06A8, &qword_1EBFE6388);
}

uint64_t sub_1E3D72164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3D71B0C(a1, a2, a3, &qword_1EBFE6388, &qword_1EBFE06A8);
}

uint64_t sub_1E3D7218C(uint64_t a1, uint64_t a2)
{
  v15[2] = a2;
  uint64_t v4 = sub_1E3E78630();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1E3E78740();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v15[1] = v2;
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1E3CC7748(0, v9, 0);
    uint64_t v10 = v16;
    long long v17 = xmmword_1E3E8CEA0;
    long long v18 = 0u;
    memset(v19, 0, sizeof(v19));
    uint64_t v11 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_1E3E78600();
      sub_1E3E78AC0();
      swift_bridgeObjectRetain();
      sub_1E3E78730();
      swift_bridgeObjectRelease();
      uint64_t v16 = v10;
      unint64_t v13 = *(void *)(v10 + 16);
      unint64_t v12 = *(void *)(v10 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1E3CC7748(v12 > 1, v13 + 1, 1);
        uint64_t v10 = v16;
      }
      v11 += 16;
      *(void *)(v10 + 16) = v13 + 1;
      sub_1E3D72468((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13, MEMORY[0x1E4F915F0]);
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1E3D72404()
{
  return sub_1E3C10DE8((unint64_t *)&unk_1EBFE4A20, (uint64_t *)&unk_1EBFE4A10);
}

uint64_t sub_1E3D72440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3D71B0C(a1, a2, a3, (uint64_t *)&unk_1EBFE4A10, (unint64_t *)&unk_1EBFE4A20);
}

uint64_t sub_1E3D72468(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double PageSize.width.getter()
{
  return *(double *)v0;
}

uint64_t PageSize.sizeClass.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

double PageSize.margins.getter()
{
  return *(double *)(v0 + 16);
}

double PageSize.gutters.getter()
{
  return *(double *)(v0 + 24);
}

double PageSize.peek.getter()
{
  return *(double *)(v0 + 32);
}

double PageSize.additionalTextMargin.getter()
{
  return *(double *)(v0 + 40);
}

double PageSize.init(width:additionalTextMargin:)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  char v6 = _s10PodcastsUI9SizeClassO5widthAC12CoreGraphics7CGFloatV_tcfC_0(a2);
  uint64_t v7 = 8 * v6;
  double result = *(double *)((char *)&unk_1E3E901F8 + v7);
  uint64_t v9 = *(void *)((char *)&unk_1E3E90238 + v7);
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v9;
  *(double *)(a1 + 24) = result;
  *(void *)(a1 + 32) = 0x4042000000000000;
  *(double *)(a1 + 40) = a3;
  return result;
}

double PageSize.widthWithoutMargins.getter()
{
  return *v0 - (v0[2] + v0[2]);
}

uint64_t *PageSize.columnInfo(grid:horizontal:)(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  long long v13 = *((_OWORD *)v2 + 1);
  uint64_t v5 = v2[4];
  uint64_t v6 = v2[5];
  PodcastsUI::SizeClass v7 = *((unsigned char *)v2 + 8);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v8, sel_scaledValueForValue_, 100.0);
  double v10 = v9;

  Grid.grid23Columns(for:horizontal:)(v7, a2);
  long long v11 = v15;
  *(void *)&long long v15 = v4;
  BYTE8(v15) = v7;
  long long v16 = v13;
  uint64_t v17 = v5;
  uint64_t v18 = v6;
  long long v14 = v11;
  return sub_1E3D726AC((uint64_t *)&v14, a2, (v10 / 100.0 + -1.0) * 0.7 + 1.0);
}

uint64_t *sub_1E3D726AC(uint64_t *result, char a2, double a3)
{
  double v5 = v3[2];
  double v4 = v3[3];
  double v6 = *v3 - (v5 + v5);
  double v7 = *v3 - v5 - v4 - v3[4];
  if ((a2 & 1) == 0) {
    double v7 = *v3 - (v5 + v5);
  }
  double v8 = ((double)result[1] + -1.0) * v4 + (v7 * a3 - ((double)*result + -1.0) * v4) / (double)*result * (double)result[1];
  if (v6 >= v8) {
    double v9 = v8;
  }
  else {
    double v9 = *v3 - (v5 + v5);
  }
  double v10 = (v4 + v6) / (v4 + v9);
  if (v10 <= 1.0) {
    double v10 = 1.0;
  }
  if (a2)
  {
    float v11 = floor(v10);
    return (uint64_t *)lrintf(v11);
  }
  double v12 = round(v10);
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v12 < 9.22337204e18) {
    return (uint64_t *)(uint64_t)v12;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t _s10PodcastsUI8PageSizeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2) {
    char v2 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)))), 0xFuLL))) & sub_1E3E51038(*(unsigned char *)(a1 + 8), *(unsigned char *)(a2 + 8));
  }
  else {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t getEnumTagSinglePayload for PageSize(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 8;
  int v5 = v3 - 8;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PageSize(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 7;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageSize()
{
  return &type metadata for PageSize;
}

uint64_t sub_1E3D728DC()
{
  uint64_t v0 = type metadata accessor for AssetCaches();
  __swift_allocate_value_buffer(v0, qword_1EBFE0838);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBFE0838);
  return AssetCaches.init()(v1);
}

uint64_t AssetCaches.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E3E78A70();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1E3E77D00();
  MEMORY[0x1F4188790](v3 - 8);
  double v12 = self;
  id v4 = objc_msgSend(v12, sel_artworkAssetURL);
  sub_1E3E77C90();

  sub_1E3E78A60();
  int v5 = self;
  id v6 = objc_msgSend(v5, sel_defaultCenter);
  sub_1E3E78E70();
  sub_1E3CA9500(&qword_1EBFE2838, &qword_1EBFE2830);
  sub_1E3E78690();
  id v7 = objc_msgSend(v12, sel_artworkAssetURL, a1);
  sub_1E3E77C90();

  sub_1E3E78A60();
  id v8 = objc_msgSend(v5, sel_defaultCenter);
  type metadata accessor for AssetCaches();
  type metadata accessor for PreparedArtworkRequest();
  sub_1E3D72CD0((unint64_t *)&qword_1EBFE6330);
  sub_1E3D72CD0(&qword_1EBFE00A8);
  sub_1E3CA9500(&qword_1EBFE2828, (unint64_t *)&qword_1EBFE63D0);
  sub_1E3E78690();
  id v9 = objc_msgSend(v12, sel_alignmentAssetURL);
  sub_1E3E77C90();

  sub_1E3E78A60();
  id v10 = objc_msgSend(v5, sel_defaultCenter);
  sub_1E3E792B0();
  return sub_1E3E78690();
}

uint64_t type metadata accessor for AssetCaches()
{
  uint64_t result = qword_1EBFDF500;
  if (!qword_1EBFDF500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3D72CD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PreparedArtworkRequest();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static AssetCaches.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBFE0850 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for AssetCaches();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBFE0838);

  return sub_1E3D72D8C(v3, a1);
}

uint64_t sub_1E3D72D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetCaches();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AssetCaches.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AssetCaches.preparedArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AssetCaches() + 20);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AssetCaches.alignments.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AssetCaches() + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t *initializeBufferWithCopyOfBuffer for AssetCaches(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    long long v13 = (char *)a1 + v12;
    long long v14 = (char *)a2 + v12;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for AssetCaches(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3D73618);
}

uint64_t sub_1E3D73618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3D73784);
}

uint64_t sub_1E3D73784(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1E3D738E8()
{
  sub_1E3D739EC();
  if (v0 <= 0x3F)
  {
    sub_1E3D73AA4();
    if (v1 <= 0x3F)
    {
      sub_1E3D73BD0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1E3D739EC()
{
  if (!qword_1EBFE4218)
  {
    sub_1E3E78E70();
    sub_1E3CA9500(&qword_1EBFE2838, &qword_1EBFE2830);
    unint64_t v0 = sub_1E3E786C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE4218);
    }
  }
}

void sub_1E3D73AA4()
{
  if (!qword_1EBFE4200)
  {
    type metadata accessor for PreparedArtworkRequest();
    sub_1E3D72CD0((unint64_t *)&qword_1EBFE6330);
    sub_1E3D72CD0(&qword_1EBFE00A8);
    sub_1E3CA9500(&qword_1EBFE2828, (unint64_t *)&qword_1EBFE63D0);
    sub_1E3CA9500(&qword_1EBFE2838, &qword_1EBFE2830);
    unint64_t v0 = sub_1E3E786C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE4200);
    }
  }
}

void sub_1E3D73BD0()
{
  if (!qword_1EBFE4228)
  {
    sub_1E3E792B0();
    unint64_t v0 = sub_1E3E786C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE4228);
    }
  }
}

uint64_t MetricsEngagementThresholdMet.init(from:)(int a1)
{
  return (3 - a1);
}

uint64_t sub_1E3D73C68()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = sub_1E3E778A0();
  __swift_allocate_value_buffer(v5, qword_1EAE28150);
  __swift_project_value_buffer(v5, (uint64_t)qword_1EAE28150);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t static ShowNoticeType.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE244A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E778A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE28150);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1E3D73E7C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F10);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v15 = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77B60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE281D8);
  uint64_t v7 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26078) - 8);
  uint64_t v8 = *(void *)v7;
  uint64_t v14 = *(void *)(*(void *)v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1E3E86650;
  v13[1] = v10 + v9 + v7[14];
  *(unsigned char *)(v10 + v9) = 0;
  sub_1E3E77B40();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v11(v4, 1, 1, v5);
  sub_1E3E77790();
  sub_1E3E777C0();
  *(unsigned char *)(v10 + v9 + v14) = 1;
  sub_1E3E77B40();
  v11(v4, 1, 1, v5);
  sub_1E3E77790();
  sub_1E3E777C0();
  unint64_t result = sub_1E3C80138(v10);
  qword_1EAE28168 = result;
  return result;
}

uint64_t static ShowNoticeType.caseDisplayRepresentations.getter()
{
  if (qword_1EAE244B0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

PodcastsUI::ShowNoticeType_optional __swiftcall ShowNoticeType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1E3E7E050();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static ShowNoticeType.allCases.getter()
{
  return &unk_1F3F47E20;
}

uint64_t ShowNoticeType.rawValue.getter()
{
  if (*v0) {
    return 0x776F6C6C6F666E75;
  }
  else {
    return 0x776F6C6C6F66;
  }
}

uint64_t sub_1E3D74294(char *a1, char *a2)
{
  return sub_1E3E517F4(*a1, *a2);
}

unint64_t sub_1E3D742A4()
{
  unint64_t result = qword_1EAE28170;
  if (!qword_1EAE28170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28170);
  }
  return result;
}

uint64_t sub_1E3D742F8()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3D74378()
{
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3D743E4()
{
  return sub_1E3E7E2B0();
}

PodcastsUI::ShowNoticeType_optional sub_1E3D74460(Swift::String *a1)
{
  return ShowNoticeType.init(rawValue:)(*a1);
}

void sub_1E3D7446C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x776F6C6C6F66;
  if (*v1) {
    uint64_t v2 = 0x776F6C6C6F666E75;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1E3D744AC()
{
  unint64_t result = qword_1EAE28178;
  if (!qword_1EAE28178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28178);
  }
  return result;
}

unint64_t sub_1E3D74504()
{
  unint64_t result = qword_1EAE28180;
  if (!qword_1EAE28180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28180);
  }
  return result;
}

unint64_t sub_1E3D7455C()
{
  unint64_t result = qword_1EAE28188;
  if (!qword_1EAE28188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28188);
  }
  return result;
}

unint64_t sub_1E3D745B4()
{
  unint64_t result = qword_1EAE28190;
  if (!qword_1EAE28190)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28190);
  }
  return result;
}

void sub_1E3D74610(void *a1@<X8>)
{
  *a1 = &unk_1F3F47D18;
}

unint64_t sub_1E3D74624()
{
  unint64_t result = qword_1EAE281A0;
  if (!qword_1EAE281A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE281A0);
  }
  return result;
}

unint64_t sub_1E3D7467C()
{
  unint64_t result = qword_1EAE281A8;
  if (!qword_1EAE281A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE281A8);
  }
  return result;
}

unint64_t sub_1E3D746D4()
{
  unint64_t result = qword_1EAE281B0;
  if (!qword_1EAE281B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE281B0);
  }
  return result;
}

unint64_t sub_1E3D7472C()
{
  unint64_t result = qword_1EAE281B8;
  if (!qword_1EAE281B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE281B8);
  }
  return result;
}

uint64_t sub_1E3D74780@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE244A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E778A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE28150);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3D74828()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3D74878(uint64_t a1)
{
  unint64_t v2 = sub_1E3D2727C();

  return MEMORY[0x1F40D3B98](a1, v2);
}

unint64_t sub_1E3D748C8()
{
  unint64_t result = qword_1EAE281C0;
  if (!qword_1EAE281C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE281C0);
  }
  return result;
}

unint64_t sub_1E3D74920()
{
  unint64_t result = qword_1EAE281C8;
  if (!qword_1EAE281C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE281C8);
  }
  return result;
}

unint64_t sub_1E3D74978()
{
  unint64_t result = qword_1EAE281D0;
  if (!qword_1EAE281D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE281D0);
  }
  return result;
}

uint64_t sub_1E3D749CC()
{
  if (qword_1EAE244B0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3D74A28(uint64_t a1)
{
  unint64_t v2 = sub_1E3D7472C();

  return MEMORY[0x1F40D47F0](a1, v2);
}

unsigned char *storeEnumTagSinglePayload for ShowNoticeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3D74B40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowNoticeType()
{
  return &type metadata for ShowNoticeType;
}

uint64_t *sub_1E3D74B78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v11 = sub_1E3E77E20();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1E3E77D00();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t sub_1E3D74E18(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1E3E77E20();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = sub_1E3E77D00();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_1E3D74FA0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = *(int *)(a3 + 28);
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_1E3E77E20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1E3E77D00();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

void *sub_1E3D751F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E77E20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1E3E77D00();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

_OWORD *sub_1E3D75518(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E77E20();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1E3E77D00();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

void *sub_1E3D75730(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1E3E77E20();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 32);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1E3E77D00();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1E3D75A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3D75A3C);
}

uint64_t sub_1E3D75A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1E3D75B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3D75B84);
}

uint64_t sub_1E3D75B84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for FairPlayKeyViewModel()
{
  uint64_t result = qword_1EAE281E0;
  if (!qword_1EAE281E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3D75D04()
{
  sub_1E3D75E1C(319, &qword_1EAE281F0, MEMORY[0x1E4F27928]);
  if (v0 <= 0x3F)
  {
    sub_1E3D75E1C(319, (unint64_t *)&qword_1EBFE0808, MEMORY[0x1E4F276F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1E3D75E1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E3E7DB90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E3D75E70()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E77E20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = type metadata accessor for FairPlayKeyViewModel();
  sub_1E3D76104(v0 + *(int *)(v11 + 28), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1E3D7616C((uint64_t)v3);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
    objc_msgSend(v13, sel_setUnitsStyle_, 1);
    objc_msgSend(v13, sel_setMaximumUnitCount_, 2);
    objc_msgSend(v13, sel_setIncludesTimeRemainingPhrase_, 1);
    sub_1E3E77E00();
    uint64_t v14 = (void *)sub_1E3E77DD0();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    uint64_t v16 = (void *)sub_1E3E77DD0();
    id v17 = objc_msgSend(v13, sel_stringFromDate_toDate_, v14, v16);

    if (v17)
    {
      uint64_t v12 = sub_1E3E7CD30();
    }
    else
    {

      uint64_t v12 = 0;
    }
    v15(v10, v4);
  }
  return v12;
}

uint64_t sub_1E3D76104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3D7616C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LegacyNowPlayingArtworkDataProvider.adamID.getter()
{
  id v1 = objc_msgSend(*v0, sel_identifiers);
  id v2 = objc_msgSend(v1, sel_universalStore);

  if (!v2) {
    return 0;
  }
  objc_msgSend(v2, sel_adamID);
  swift_unknownObjectRelease();
  return sub_1E3E7A530();
}

id LegacyNowPlayingArtworkDataProvider.isVideoEpisode.getter()
{
  id result = *(id *)(v0 + 8);
  if (result) {
    return objc_msgSend(result, sel_isVideo);
  }
  return result;
}

uint64_t LegacyNowPlayingArtworkDataProvider.showArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.showArtworkData.getter(a1);
}

uint64_t LegacyNowPlayingArtworkDataProvider.episodeArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.episodeArtworkData.getter(a1);
}

uint64_t LegacyNowPlayingArtworkDataProvider.showPageTallArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.showPageTallArtworkData.getter(a1);
}

uint64_t LegacyNowPlayingArtworkDataProvider.chapterArtworkData(at:)@<X0>(void *a1@<X8>, uint64_t a2@<D0>)
{
  if (*(void *)(v2 + 8)) {
    return IMPlayerItem.chapterArtworkData(at:)(a1, a2);
  }
  uint64_t v5 = type metadata accessor for NowPlayingArtwork.Data();
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(a1, 1, 1, v5);
}

uint64_t LegacyNowPlayingArtworkDataProvider.init(episode:legacyPlayerItem:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1E3D7637C()
{
  id v1 = objc_msgSend(*v0, sel_identifiers);
  id v2 = objc_msgSend(v1, sel_universalStore);

  if (!v2) {
    return 0;
  }
  objc_msgSend(v2, sel_adamID);
  swift_unknownObjectRelease();
  return sub_1E3E7A530();
}

id sub_1E3D76408()
{
  id result = *(id *)(v0 + 8);
  if (result) {
    return objc_msgSend(result, sel_isVideo);
  }
  return result;
}

uint64_t sub_1E3D76430@<X0>(void *a1@<X8>, uint64_t a2@<D0>)
{
  if (*(void *)(v2 + 8)) {
    return IMPlayerItem.chapterArtworkData(at:)(a1, a2);
  }
  uint64_t v5 = type metadata accessor for NowPlayingArtwork.Data();
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(a1, 1, 1, v5);
}

void *initializeBufferWithCopyOfBuffer for LegacyNowPlayingArtworkDataProvider(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for LegacyNowPlayingArtworkDataProvider(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for LegacyNowPlayingArtworkDataProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for LegacyNowPlayingArtworkDataProvider(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for LegacyNowPlayingArtworkDataProvider()
{
  return &type metadata for LegacyNowPlayingArtworkDataProvider;
}

uint64_t sub_1E3D765D4()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x1F4188298](sub_1E3D765F4, 0, 0);
}

uint64_t sub_1E3D765F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  id v1 = (id)v0[15];
  if (!v1) {
    id v1 = objc_msgSend(self, sel_systemRoute);
  }
  v0[17] = v1;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F31850]);
  int v3 = (void *)sub_1E3E7CCF0();
  id v4 = objc_msgSend(v2, sel_initWithName_, v3);
  v0[18] = v4;

  v0[2] = v0;
  v0[3] = sub_1E3D767C0;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1E3D76C48;
  v0[13] = &block_descriptor_0;
  v0[14] = v5;
  objc_msgSend(v4, sel_selectRoute_operation_completion_, v1, 0, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1E3D767C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    id v2 = sub_1E3D76B68;
  }
  else {
    id v2 = sub_1E3D768D0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3D768D0()
{
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v2);
  id v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 80) + **(int **)(v3 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1E3D769D4;
  return v6(v2, v3);
}

uint64_t sub_1E3D769D4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3D76BE0;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_1E3D76AFC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3D76AFC()
{
  uint64_t v1 = *(void **)(v0 + 136);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 176);
  return v2(v3);
}

uint64_t sub_1E3D76B68()
{
  swift_willThrow();
  uint64_t v1 = *(void **)(v0 + 136);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3D76BE0()
{
  uint64_t v1 = *(void **)(v0 + 136);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3D76C48(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return MEMORY[0x1F4188208](v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return MEMORY[0x1F4188200](v7);
  }
}

uint64_t PlaybackController.RouteController.deinit()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return v0;
}

uint64_t PlaybackController.RouteController.__deallocating_deinit()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlaybackController.RouteController()
{
  return self;
}

uint64_t method lookup function for PlaybackController.RouteController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlaybackController.RouteController);
}

uint64_t sub_1E3D76D9C(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 24))();
  if (!v5)
  {
    uint64_t result = sub_1E3D76ED4(a1, a2);
    if (v6) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1E3D76E08(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F91F70]), sel_init);
  uint64_t result = sub_1E3D76ED4(a1, a2);
  if ((v6 & 1) == 0)
  {
    if (result < 0)
    {
      __break(1u);
      return result;
    }
    objc_msgSend(v4, sel_setStoreTrackId_, result);
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  if (v7)
  {
    uint64_t v8 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  objc_msgSend(v4, sel_setUuid_, v8);

  return (uint64_t)v4;
}

uint64_t sub_1E3D76ED4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 16))();
  if (!v2) {
    return 0;
  }
  uint64_t result = sub_1E3E7A540();
  if (v4) {
    return 0;
  }
  return result;
}

BOOL MPCPlayerItemDurationSnapshot.isConsideredPlayed.getter()
{
  double v1 = *(double *)(v0 + 24);
  if (v1 <= 360.0) {
    double v2 = v1 * 0.9;
  }
  else {
    double v2 = v1 + -240.0;
  }
  return v2 <= *(double *)(v0 + 32);
}

BOOL static PageRenderResourceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PageRenderResourceError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t PageRenderResourceError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

unint64_t PageRenderResourceError.description.getter()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0xD00000000000001DLL;
  }
}

unint64_t sub_1E3D77028()
{
  unint64_t result = qword_1EAE28200;
  if (!qword_1EAE28200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28200);
  }
  return result;
}

unint64_t sub_1E3D7707C()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0xD00000000000001DLL;
  }
}

unsigned char *storeEnumTagSinglePayload for PageRenderResourceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3D77188);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageRenderResourceError()
{
  return &type metadata for PageRenderResourceError;
}

uint64_t sub_1E3D771C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1E3D77234()
{
  if (sub_1E3E7DA80()) {
    return sub_1E3E7DA80() & 1;
  }
  else {
    return 0;
  }
}

char *sub_1E3D772AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v91 = a3;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2468);
  uint64_t v98 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v94 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2240);
  uint64_t v99 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v95 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2160);
  uint64_t v105 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v100 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2270);
  uint64_t v106 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  id v101 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2198);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v107 = v13;
  uint64_t v108 = v14;
  MEMORY[0x1F4188790](v13);
  v102 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1E3E7D680();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v86 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1E3E7D780();
  uint64_t v79 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2188);
  uint64_t v84 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2280);
  uint64_t v87 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v81 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE22B0);
  uint64_t v89 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v83 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_routingController;
  id v23 = objc_allocWithZone(MEMORY[0x1E4F31820]);
  int v24 = v5;
  id v25 = objc_msgSend(v23, sel_init);
  id v26 = objc_allocWithZone(MEMORY[0x1E4F31850]);
  uint64_t v27 = (void *)sub_1E3E7CCF0();
  id v28 = objc_msgSend(v26, sel_initWithDataSource_name_, v25, v27);

  *(void *)&v5[v22] = v28;
  *(void *)&v24[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_subscriptions] = MEMORY[0x1E4FBC860];
  uint64_t v29 = &v24[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_playerID];
  *(void *)uint64_t v29 = a1;
  *((void *)v29 + 1) = a2;
  unint64_t v30 = (uint64_t *)&v24[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_bundleID];
  *unint64_t v30 = v91;
  v30[1] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v31 = (void *)sub_1E3E7CCF0();
  unint64_t v32 = (void *)sub_1E3E7CCF0();
  id v33 = objc_msgSend(self, sel_pathWithRoute_bundleID_playerID_, 0, v31, v32);

  id v34 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v110 = (uint64_t)v34;
  id v111 = v34;
  sub_1E3E7AAB0();
  swift_endAccess();

  uint64_t v35 = (objc_class *)_s21PlayerPathCoordinatorCMa();
  v109.receiver = v24;
  v109.super_class = v35;
  uint64_t v90 = (char *)objc_msgSendSuper2(&v109, sel_init);
  uint64_t v91 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_routingController;
  uint64_t v36 = *(void **)&v90[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController21PlayerPathCoordinator_routingController];
  uint64_t v78 = v90;
  objc_msgSend(v36, sel_setDiscoveryMode_, 2);
  id v76 = self;
  id v37 = objc_msgSend(v76, sel_defaultCenter);
  uint64_t v38 = v18;
  uint64_t v75 = v18;
  sub_1E3E7D790();

  sub_1E3D79054((unint64_t *)&qword_1EBFDF300, MEMORY[0x1E4F27FC8]);
  uint64_t v39 = v77;
  uint64_t v40 = sub_1E3E7AB30();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v79 + 8);
  v41(v38, v39);
  uint64_t v112 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28D0);
  uint64_t v42 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE07F8) - 8);
  unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1E3E86660;
  unint64_t v45 = v44 + v43;
  uint64_t v46 = sub_1E3E779C0();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2378);
  uint64_t v79 = MEMORY[0x1E4F1AAE8];
  sub_1E3C10DE8(&qword_1EBFE2370, &qword_1EBFE2378);
  uint64_t v47 = v80;
  sub_1E3E7AD00();
  swift_release();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v76, sel_defaultCenter);
  uint64_t v49 = v75;
  sub_1E3E7D790();

  uint64_t v50 = sub_1E3E7AB30();
  v41(v49, v39);
  uint64_t v112 = v50;
  sub_1E3C10DE8(&qword_1EBFE2180, &qword_1EBFE2188);
  uint64_t v51 = v81;
  uint64_t v52 = v82;
  sub_1E3E7AC60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v47, v52);
  uint64_t v53 = v86;
  sub_1E3E7D650();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  unint64_t v54 = (void *)sub_1E3E7D6A0();
  uint64_t v112 = (uint64_t)v54;
  sub_1E3C10DE8(&qword_1EBFE2278, (uint64_t *)&unk_1EBFE2280);
  sub_1E3C32D34();
  uint64_t v55 = v83;
  uint64_t v56 = v85;
  sub_1E3E7AD30();

  (*(void (**)(char *, uint64_t))(v92 + 8))(v53, v93);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v51, v56);
  uint64_t v57 = swift_allocObject();
  uint64_t v58 = v78;
  *(void *)(v57 + 16) = v78;
  sub_1E3C10DE8(&qword_1EBFE22A8, &qword_1EBFE22B0);
  uint64_t v59 = v58;
  uint64_t v60 = v88;
  sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v55, v60);
  swift_beginAccess();
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26E8);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE26F0, &qword_1EBFE26E8);
  sub_1E3E7A960();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE24D0);
  uint64_t v61 = v94;
  sub_1E3E7AAC0();
  swift_endAccess();
  sub_1E3C10DE8(&qword_1EBFE2460, (uint64_t *)&unk_1EBFE2468);
  uint64_t v63 = v95;
  uint64_t v62 = v96;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v61, v62);
  sub_1E3C10DE8(&qword_1EBFE2238, (uint64_t *)&unk_1EBFE2240);
  uint64_t v64 = v97;
  uint64_t v65 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v63, v64);
  uint64_t v112 = v65;
  uint64_t v110 = sub_1E3CDBFDC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2398);
  sub_1E3C10DE8(&qword_1EBFE2390, &qword_1EBFE2398);
  uint64_t v66 = v100;
  sub_1E3E7ABC0();
  swift_release();
  swift_release();
  sub_1E3C10DE8(&qword_1EBFE2158, (uint64_t *)&unk_1EBFE2160);
  uint64_t v67 = v101;
  uint64_t v68 = v103;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v66, v68);
  sub_1E3C10DE8(&qword_1EBFE2268, &qword_1EBFE2270);
  uint64_t v69 = v102;
  uint64_t v70 = v104;
  sub_1E3E7AD40();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v67, v70);
  v71 = *(void **)&v90[v91];
  *(void *)(swift_allocObject() + 16) = v71;
  sub_1E3C10DE8(&qword_1EBFE2190, &qword_1EBFE2198);
  id v72 = v71;
  uint64_t v73 = v107;
  sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v69, v73);
  swift_beginAccess();
  sub_1E3E7A960();
  swift_endAccess();
  swift_release();

  return v59;
}

uint64_t sub_1E3D78298(uint64_t a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = ObjectType;
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1E3D78FC0;
  *(void *)(v6 + 24) = v4;
  v10[4] = sub_1E3D79000;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1E3D78AC0;
  v10[3] = &block_descriptor_20;
  uint64_t v7 = _Block_copy(v10);
  id v8 = a2;
  sub_1E3E775E0();
  swift_release();
  objc_msgSend(v5, sel_getActiveRouteWithTimeout_completion_, v7, 1.0);
  _Block_release(v7);
  return swift_release();
}

unsigned char *sub_1E3D783D4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result[1] & ~*result & 1;
  return result;
}

void sub_1E3D783EC(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  id v3 = objc_msgSend(*(id *)(a1 + 8), sel_route);
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned __int8 v5 = objc_msgSend(v3, sel_isDeviceRoute);
  }
  else
  {
    unsigned __int8 v5 = 1;
  }
  *a2 = v5;
}

uint64_t sub_1E3D78454(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B770();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1E3E7B7C0();
  uint64_t v10 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v13 = (void *)sub_1E3E7D6A0();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a1;
  v14[4] = a3;
  aBlock[4] = sub_1E3D79048;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1E3CE65F8;
  aBlock[3] = &block_descriptor_31;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a2;
  id v17 = a1;
  swift_release();
  sub_1E3E7B7A0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1E3D79054((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
}

void sub_1E3D78744(void *a1, void *a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();

  id v4 = objc_msgSend(v20, sel_route);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();

  id v5 = objc_msgSend(v20, sel_route);
  if (v5 && (id v6 = objc_msgSend(v5, sel_connection), v5, v6))
  {
    unsigned __int8 v7 = objc_msgSend(v6, sel_isInvalidated);

    if (!v4) {
      goto LABEL_7;
    }
  }
  else
  {
    unsigned __int8 v7 = 0;
    if (!v4) {
      goto LABEL_7;
    }
  }
  sub_1E3C12B10(0, &qword_1EBFE2848);
  id v8 = a2;
  id v9 = v4;
  char v10 = sub_1E3E7DA80();

  if (!(v7 & 1 | ((v10 & 1) == 0)))
  {

    return;
  }
LABEL_7:
  id v11 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_pathWithRoute_bundleID_playerID_, v11, v12, v13);

  if (objc_msgSend(v11, sel_isDeviceRoute)) {
    id v16 = v15;
  }
  else {
    id v17 = objc_msgSend(v14, sel_pathWithRoute_bundleID_playerID_, v11, 0, 0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v18 = a1;
  sub_1E3E7AB00();
}

void sub_1E3D78A34(void *a1, void (*a2)(id))
{
  if (a1) {
    id v5 = a1;
  }
  else {
    id v5 = objc_msgSend(self, sel_systemRoute);
  }
  id v4 = a1;
  a2(v5);
}

void sub_1E3D78AC0(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  sub_1E3E775E0();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id sub_1E3D78B5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s21PlayerPathCoordinatorCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E3D78C50()
{
  return _s21PlayerPathCoordinatorCMa();
}

uint64_t _s21PlayerPathCoordinatorCMa()
{
  uint64_t result = qword_1EBFE13C8;
  if (!qword_1EBFE13C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3D78CA4()
{
  sub_1E3D78D5C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1E3D78D5C()
{
  if (!qword_1EBFE24D8)
  {
    unint64_t v0 = sub_1E3E7AB10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE24D8);
    }
  }
}

uint64_t _s21PlayerPathCoordinatorC14PlayerPathPairVwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  unsigned __int8 v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

ValueMetadata *_s21PlayerPathCoordinatorC14PlayerPathPairVMa()
{
  return &_s21PlayerPathCoordinatorC14PlayerPathPairVN;
}

double sub_1E3D78E1C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1E3D78EA0(uint64_t a1, void **a2)
{
  objc_super v2 = *(void **)a1;
  long long v3 = *(void **)(a1 + 8);
  id v4 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  return sub_1E3E7AB00();
}

uint64_t sub_1E3D78F24()
{
  return swift_deallocObject();
}

uint64_t sub_1E3D78F5C(uint64_t a1)
{
  return sub_1E3D78298(a1, *(void **)(v1 + 16));
}

id sub_1E3D78F64(unsigned char *a1)
{
  if (*a1) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = 0;
  }
  return objc_msgSend(*(id *)(v1 + 16), sel_setDiscoveryMode_, v2);
}

uint64_t sub_1E3D78F88()
{
  return swift_deallocObject();
}

uint64_t sub_1E3D78FC0(void *a1)
{
  return sub_1E3D78454(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1E3D78FC8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3D79000(void *a1)
{
  sub_1E3D78A34(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1E3D79008()
{
  return swift_deallocObject();
}

void sub_1E3D79048()
{
  sub_1E3D78744(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1E3D79054(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Void __swiftcall UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(UIView *_, Swift::Bool useLayoutMargins, NSDirectionalEdgeInsets insets)
{
  id v4 = v3;
  double trailing = insets.trailing;
  double bottom = insets.bottom;
  double leading = insets.leading;
  double top = insets.top;
  id v11 = [(UIView *)_ superview];
  if (!v11) {
    goto LABEL_3;
  }
  uint64_t v12 = v11;
  sub_1E3C12B10(0, qword_1EBFDF070);
  id v13 = v4;
  uint64_t v14 = v12;
  LOBYTE(v12) = sub_1E3E7DA80();

  if ((v12 & 1) == 0) {
LABEL_3:
  }
    objc_msgSend(v4, sel_addSubview_, _);
  [(UIView *)_ setTranslatesAutoresizingMaskIntoConstraints:0];
  if (useLayoutMargins) {
    UIView.layoutMarginsSubviewConstraints(_:insets:edges:)(_, 15, top, leading, bottom, trailing);
  }
  else {
    UIView.fullSizeSubviewConstraints(_:insets:)(_, top, leading, bottom, trailing);
  }
  id v15 = self;
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF000);
  id v16 = (id)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, v16);
}

uint64_t UIView.mt_viewController.getter()
{
  uint64_t v0 = swift_allocObject() + 16;
  swift_unknownObjectWeakInit();
  unint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v2 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v2 + 16) = MEMORY[0x1E4E79630](v0);
  long long v3 = (id *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDEEE8);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = sub_1E3D1CDF0;
  *(void *)(inited + 24) = v2;
  sub_1E3E775E0();
  swift_beginAccess();
  id v5 = *(void **)(v2 + 16);
  id v6 = v5;
  id v7 = objc_msgSend(v6, sel_nextResponder);
  id v8 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = v7;

  if (v5)
  {
    do
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1E4E76960]();
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E3E7D090();
        }
        sub_1E3E7D100();
        sub_1E3E7D080();
      }
      else
      {
      }
      id v9 = *v3;
      id v6 = *v3;
      id v10 = objc_msgSend(v6, sel_nextResponder);
      id v11 = *v3;
      *long long v3 = v10;
    }
    while (v9);
    unint64_t v1 = v16;
  }
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1E3E7DFC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_17;
  }
LABEL_12:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v13 = (id)MEMORY[0x1E4E77720](0, v1);
    goto LABEL_15;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v13 = *(id *)(v1 + 32);
LABEL_15:
    id v14 = v13;
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t UIView.superviewChain.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF320);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1E3D7A64C;
  *(void *)(result + 24) = v2;
  *a1 = result;
  return result;
}

uint64_t sub_1E3D7952C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1 + 16;
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v4 + 16) = MEMORY[0x1E4E79630](v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF318);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1E3D7A68C;
  *(void *)(result + 24) = v4;
  *a2 = result;
  return result;
}

void sub_1E3D795C8(uint64_t a1@<X0>, void *a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a1 + 16);
  id v5 = objc_msgSend(v4, sel_superview);
  swift_beginAccess();
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v5;

  *a2 = v4;
}

uint64_t UIView.firstCollectionViewCell.getter()
{
  uint64_t v0 = swift_allocObject() + 16;
  swift_unknownObjectWeakInit();
  unint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v2 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v2 + 16) = MEMORY[0x1E4E79630](v0);
  uint64_t v3 = (id *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF318);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = sub_1E3D7A68C;
  *(void *)(inited + 24) = v2;
  sub_1E3E775E0();
  swift_beginAccess();
  id v5 = *(void **)(v2 + 16);
  id v6 = v5;
  id v7 = objc_msgSend(v6, sel_superview);
  id v8 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = v7;

  if (v5)
  {
    do
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1E4E76960]();
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E3E7D090();
        }
        sub_1E3E7D100();
        sub_1E3E7D080();
      }
      else
      {
      }
      id v9 = *v3;
      id v6 = *v3;
      id v10 = objc_msgSend(v6, sel_superview);
      id v11 = *v3;
      *uint64_t v3 = v10;
    }
    while (v9);
    unint64_t v1 = v16;
  }
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1E3E7DFC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_17;
  }
LABEL_12:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v13 = (id)MEMORY[0x1E4E77720](0, v1);
    goto LABEL_15;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v13 = *(id *)(v1 + 32);
LABEL_15:
    id v14 = v13;
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t IndexPath.safeSection.getter()
{
  uint64_t v0 = sub_1E3E77FD0();
  if (v0 == 2) {
    return sub_1E3E77FC0();
  }
  if (v0 < 1) {
    return 0;
  }
  sub_1E3E77FE0();
  sub_1E3D7A694();
  sub_1E3E7D3B0();
  sub_1E3E7D3F0();
  uint64_t v1 = 0;
  if (v5[4] != v5[0])
  {
    uint64_t v2 = (void (*)(void *, void))sub_1E3E7D420();
    uint64_t v1 = *v3;
    v2(v5, 0);
  }
  return v1;
}

uint64_t UIView.fullSizeSubviewConstraints(_:insets:)(void *a1, double a2, double a3, double a4, double a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1E3E8E880;
  id v12 = objc_msgSend(a1, sel_trailingAnchor);
  id v13 = objc_msgSend(v5, sel_trailingAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, -a5);

  *(void *)(v11 + 32) = v14;
  id v15 = objc_msgSend(a1, sel_leadingAnchor);
  id v16 = objc_msgSend(v5, sel_leadingAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, a3);

  *(void *)(v11 + 40) = v17;
  id v18 = objc_msgSend(a1, sel_topAnchor);
  id v19 = objc_msgSend(v5, sel_topAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, a2);

  *(void *)(v11 + 48) = v20;
  id v21 = objc_msgSend(a1, sel_bottomAnchor);
  id v22 = objc_msgSend(v5, sel_bottomAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, -a4);

  *(void *)(v11 + 56) = v23;
  sub_1E3E7D080();
  return v11;
}

uint64_t UIView.layoutMarginsSubviewConstraints(_:insets:edges:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1E3E8E880;
  id v14 = objc_msgSend(a1, sel_trailingAnchor);
  if ((a2 & 8) != 0)
  {
    id v16 = objc_msgSend(v6, sel_layoutMarginsGuide);
    id v15 = objc_msgSend(v16, sel_trailingAnchor);
  }
  else
  {
    id v15 = objc_msgSend(v6, sel_trailingAnchor);
  }
  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, -a6);

  *(void *)(v13 + 32) = v17;
  id v18 = objc_msgSend(a1, sel_leadingAnchor);
  if ((a2 & 2) != 0)
  {
    id v20 = objc_msgSend(v6, sel_layoutMarginsGuide);
    id v19 = objc_msgSend(v20, sel_leadingAnchor);
  }
  else
  {
    id v19 = objc_msgSend(v6, sel_leadingAnchor);
  }
  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, a4);

  *(void *)(v13 + 40) = v21;
  id v22 = objc_msgSend(a1, sel_topAnchor);
  if (a2)
  {
    id v24 = objc_msgSend(v6, sel_layoutMarginsGuide);
    id v23 = objc_msgSend(v24, sel_topAnchor);
  }
  else
  {
    id v23 = objc_msgSend(v6, sel_topAnchor);
  }
  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, a3);

  *(void *)(v13 + 48) = v25;
  id v26 = objc_msgSend(a1, sel_bottomAnchor);
  if ((a2 & 4) != 0)
  {
    id v28 = objc_msgSend(v6, sel_layoutMarginsGuide);
    id v27 = objc_msgSend(v28, sel_bottomAnchor);
  }
  else
  {
    id v27 = objc_msgSend(v6, sel_bottomAnchor);
  }
  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, -a5);

  *(void *)(v13 + 56) = v29;
  sub_1E3E7D080();
  return v13;
}

uint64_t UIView.constrainSubview(_:insets:respectingSafeArea:respectingKeyboardSafeArea:)(void *a1, char a2, char a3, double a4, double a5, double a6, double a7)
{
  id v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1E3E8FA00;
  id v17 = objc_msgSend(a1, sel_topAnchor);
  if (a2)
  {
    id v18 = objc_msgSend(v8, sel_safeAreaLayoutGuide);
    id v19 = objc_msgSend(v18, sel_topAnchor);
  }
  else
  {
    id v19 = objc_msgSend(v8, sel_topAnchor);
  }
  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, a4);

  *(void *)(v16 + 32) = v20;
  id v21 = objc_msgSend(a1, sel_leadingAnchor);
  if (a2)
  {
    id v22 = objc_msgSend(v8, sel_safeAreaLayoutGuide);
    id v23 = objc_msgSend(v22, sel_leadingAnchor);
  }
  else
  {
    id v23 = objc_msgSend(v8, sel_leadingAnchor);
  }
  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, a5);

  *(void *)(v16 + 40) = v24;
  id v25 = objc_msgSend(a1, sel_trailingAnchor);
  if (a2)
  {
    id v26 = objc_msgSend(v8, sel_safeAreaLayoutGuide);
    id v27 = objc_msgSend(v26, sel_trailingAnchor);
  }
  else
  {
    id v27 = objc_msgSend(v8, sel_trailingAnchor);
  }
  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, a7);

  *(void *)(v16 + 48) = v28;
  uint64_t v38 = v16;
  sub_1E3E7D080();
  id v29 = objc_msgSend(a1, sel_bottomAnchor);
  if (a3)
  {
    id v30 = objc_msgSend(v8, sel_keyboardLayoutGuide);
    id v31 = objc_msgSend(v30, sel_topAnchor);
LABEL_14:
    id v32 = v31;

    goto LABEL_16;
  }
  if (a2)
  {
    id v30 = objc_msgSend(v8, sel_safeAreaLayoutGuide);
    id v31 = objc_msgSend(v30, sel_bottomAnchor);
    goto LABEL_14;
  }
  id v32 = objc_msgSend(v8, sel_bottomAnchor);
LABEL_16:
  id v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v32, a6);

  id v34 = v33;
  MEMORY[0x1E4E76960]();
  if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E3E7D090();
  }
  sub_1E3E7D100();
  sub_1E3E7D080();
  uint64_t v35 = self;
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF000);
  swift_bridgeObjectRetain();
  uint64_t v36 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_activateConstraints_, v36);

  return v38;
}

uint64_t (*sub_1E3D7A308(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  id v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1E3D7A48C(v6, a2, a3);
  return sub_1E3D7A370;
}

uint64_t (*sub_1E3D7A374(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  id v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1E3D7A50C(v6, a2, a3);
  return sub_1E3D7A370;
}

uint64_t (*sub_1E3D7A3DC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  id v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1E3D7A58C(v6, a2, a3);
  return sub_1E3D7A370;
}

void sub_1E3D7A444(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1E3D7A48C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E4E77720](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s10PodcastsUI32JoeColorClampBrightnessAlgorithmV9CandidateVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1E3D7A50C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1E4E77720](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = sub_1E3E775E0();
LABEL_5:
    *uint64_t v3 = v4;
    return destroy for WidgetImageProvider;
  }
  __break(1u);
  return result;
}

void (*sub_1E3D7A58C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E4E77720](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for JoeColorClampBrightnessAlgorithm.Candidate;
  }
  __break(1u);
  return result;
}

void destroy for JoeColorClampBrightnessAlgorithm.Candidate(id *a1)
{
}

uint64_t sub_1E3D7A614()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3D7A64C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3D7952C(v1, a1);
}

uint64_t sub_1E3D7A654()
{
  return swift_deallocObject();
}

void sub_1E3D7A68C(void *a1@<X8>)
{
  sub_1E3D795C8(v1, a1);
}

unint64_t sub_1E3D7A694()
{
  unint64_t result = qword_1EAE28208;
  if (!qword_1EAE28208)
  {
    sub_1E3E77FE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28208);
  }
  return result;
}

unint64_t sub_1E3D7A6F0()
{
  unint64_t result = qword_1EAE28210;
  if (!qword_1EAE28210)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28210);
  }
  return result;
}

uint64_t PodcastDonationModel.init(librarySnapshotFollowedShow:)(uint64_t a1)
{
  sub_1E3E7A1B0();
  sub_1E3E7A1A0();
  sub_1E3E7A190();
  sub_1E3E79A50();
  uint64_t v2 = sub_1E3E7A1C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

void sub_1E3D7A80C(uint64_t a1, void *a2)
{
}

void sub_1E3D7A824(uint64_t a1, void *a2)
{
}

unint64_t static LibrarySnapshotIntent.kind.getter()
{
  return 0xD000000000000015;
}

uint64_t static LibrarySnapshotIntent.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1E3D7A860()
{
  return 0;
}

uint64_t sub_1E3D7A86C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1E3D7A89C(uint64_t a1)
{
  unint64_t v2 = sub_1E3D7AA24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1E3D7A8D8(uint64_t a1)
{
  unint64_t v2 = sub_1E3D7AA24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LibrarySnapshotIntent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28220);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3D7AA24();
  sub_1E3E7E300();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1E3D7AA24()
{
  unint64_t result = qword_1EAE28228;
  if (!qword_1EAE28228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28228);
  }
  return result;
}

uint64_t LibrarySnapshotIntent.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

uint64_t sub_1E3D7AAA0(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

uint64_t sub_1E3D7AAC8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28220);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3D7AA24();
  sub_1E3E7E300();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1E3D7ABDC()
{
  unint64_t result = qword_1EAE28230;
  if (!qword_1EAE28230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28230);
  }
  return result;
}

unint64_t sub_1E3D7AC38()
{
  unint64_t result = qword_1EAE28238;
  if (!qword_1EAE28238)
  {
    sub_1E3E79090();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28238);
  }
  return result;
}

void sub_1E3D7AC90(void *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001E3E90860;
}

uint64_t sub_1E3D7ACB0()
{
  return sub_1E3E7C560();
}

ValueMetadata *type metadata accessor for LibrarySnapshotIntent()
{
  return &type metadata for LibrarySnapshotIntent;
}

ValueMetadata *type metadata accessor for LibrarySnapshotIntent.CodingKeys()
{
  return &type metadata for LibrarySnapshotIntent.CodingKeys;
}

unint64_t sub_1E3D7AD34()
{
  unint64_t result = qword_1EAE28240;
  if (!qword_1EAE28240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28240);
  }
  return result;
}

unint64_t sub_1E3D7AD8C()
{
  unint64_t result = qword_1EAE28248;
  if (!qword_1EAE28248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28248);
  }
  return result;
}

unint64_t sub_1E3D7ADE0()
{
  unint64_t result = qword_1EAE28250;
  if (!qword_1EAE28250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28250);
  }
  return result;
}

uint64_t ModalSheet.init(actions:)(unint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardEdgeSpacing] = 0x4034000000000000;
  *(void *)&v1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardControlSpacing] = 0x4020000000000000;
  uint64_t v3 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet_buttonToAction;
  uint64_t v4 = self;
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_mapTableWithKeyOptions_valueOptions_, 5, 5);
  *(void *)&v5[OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide] = 0;
  *(void *)&v5[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_actions] = a1;
  swift_bridgeObjectRetain();

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for ModalSheet();
  id v6 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v7 = v6;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    id v14 = v7;
    uint64_t v8 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v9 = v6;
  }
  swift_bridgeObjectRelease();
  if (v8 >= 1)
  {
    id v10 = objc_msgSend(v7, sel_view);
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = objc_msgSend(self, sel_systemBackgroundColor);
      objc_msgSend(v11, sel_setBackgroundColor_, v12);

      objc_msgSend(v7, sel_setModalPresentationStyle_, 1);
      return (uint64_t)v7;
    }
    __break(1u);
  }
  sub_1E3E7DDD0();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28280);
  sub_1E3E7CD90();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();

  uint64_t result = sub_1E3E7DF80();
  __break(1u);
  return result;
}

id sub_1E3D7B098()
{
  uint64_t v1 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide];
  }
  else
  {
    id v4 = sub_1E3D7B60C(v0);
    id v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1E3D7B0FC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide) = a1;
  return MEMORY[0x1F41817F8]();
}

void (*sub_1E3D7B110(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_1E3D7B098();
  return sub_1E3D7B158;
}

void sub_1E3D7B158(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide);
  *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide) = v2;
}

id sub_1E3D7B170()
{
  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1E3D7B188(uint64_t a1)
{
  sub_1E3C2ABC0(a1, (uint64_t)v6);
  if (v7)
  {
    sub_1E3C12B10(0, &qword_1EAE282B8);
    if (swift_dynamicCast())
    {
      uint64_t v2 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_buttonToAction], sel_objectForKey_, v5);
      if (v2)
      {
        id v3 = v2;
        if (v2[16] == 2) {
          objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
        }
        id v4 = (void (*)(char *))*((void *)v3 + 3);
        if (v4) {
          v4(v1);
        }
        swift_release();
      }
    }
  }
  else
  {
    sub_1E3C2AC28((uint64_t)v6);
  }
}

uint64_t sub_1E3D7B288()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet_actions);
  if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = (uint64_t)sub_1E3CC51FC(v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  uint64_t v4 = v2;
  sub_1E3D7CDDC(&v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t ModalSheet.Action.__allocating_init(title:type:handler:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = swift_allocObject();
  char v11 = *a3;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = a2;
  *(unsigned char *)(result + 16) = v11;
  *(void *)(result + 24) = a4;
  *(void *)(result + 32) = a5;
  return result;
}

uint64_t ModalSheetWrapper.__allocating_init(contentViewController:actions:height:)(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_minWidth] = 0x407C200000000000;
  *(void *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_maxSize] = 0x4085E00000000000;
  *(void *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_contentViewController] = a1;
  *(double *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_height] = a3;
  return ModalSheet.init(actions:)(a2);
}

id sub_1E3D7B478(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id (*static ModalSheet.dismissHandler.getter())(void *a1)
{
  return sub_1E3D7B478;
}

PodcastsUI::ModalSheet::Action::ActionType_optional __swiftcall ModalSheet.Action.ActionType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (PodcastsUI::ModalSheet::Action::ActionType_optional)rawValue;
}

uint64_t ModalSheet.Action.ActionType.rawValue.getter()
{
  return *v0;
}

PodcastsUI::ModalSheet::Action::ActionType_optional sub_1E3D7B4C4(Swift::Int *a1)
{
  return ModalSheet.Action.ActionType.init(rawValue:)(*a1);
}

void sub_1E3D7B4CC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t ModalSheet.Action.init(title:type:handler:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a2;
  *(unsigned char *)(v5 + 16) = v6;
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return v5;
}

uint64_t ModalSheet.Action.deinit()
{
  sub_1E3C1A3C4(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalSheet.Action.__deallocating_deinit()
{
  sub_1E3C1A3C4(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t ModalSheet.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModalSheet.__allocating_init(actions:)(unint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return ModalSheet.init(actions:)(a1);
}

id ModalSheet.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id sub_1E3D7B60C(char *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  objc_msgSend(result, sel_addLayoutGuide_, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E8FA00;
  id v6 = objc_msgSend(v2, sel_leadingAnchor);
  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = result;
  id v8 = objc_msgSend(result, sel_leadingAnchor);

  double v9 = *(double *)&a1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardEdgeSpacing];
  id v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, v9);

  *(void *)(v5 + 32) = v10;
  id v11 = objc_msgSend(v2, sel_trailingAnchor);
  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v12 = result;
  id v13 = objc_msgSend(result, sel_trailingAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, -v9);
  *(void *)(v5 + 40) = v14;
  id v15 = objc_msgSend(v2, sel_topAnchor);
  id result = objc_msgSend(a1, sel_view);
  if (result)
  {
    uint64_t v16 = result;
    id v17 = self;
    id v18 = objc_msgSend(v16, sel_topAnchor);

    id v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v18, v9);
    *(void *)(v5 + 48) = v19;
    sub_1E3E7D080();
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF000);
    id v20 = (void *)sub_1E3E7D050();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_activateConstraints_, v20);

    return v2;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1E3D7B8D8()
{
  unint64_t v1 = v0;
  v42.receiver = v0;
  v42.super_class = (Class)type metadata accessor for ModalSheet();
  objc_msgSendSuper2(&v42, sel_viewDidLoad);
  uint64_t v41 = MEMORY[0x1E4FBC860];
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
LABEL_26:
    __break(1u);
    return;
  }
  id v3 = v2;
  id v4 = objc_msgSend(v2, sel_trailingAnchor);

  double v5 = *(double *)&v1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardEdgeSpacing];
  unint64_t v6 = sub_1E3D7B288();
  unint64_t v7 = v6;
  if (v6 >> 62)
  {
LABEL_21:
    uint64_t v8 = sub_1E3E7DFC0();
    if (v8)
    {
LABEL_4:
      id v37 = self;
      unint64_t v38 = v7 & 0xC000000000000001;
      uint64_t v9 = 4;
      uint64_t v34 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet_buttonToAction;
      uint64_t v35 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardControlSpacing;
      id v10 = &selRef_setView_;
      double v11 = -v5;
      unint64_t v36 = v7;
      while (1)
      {
        uint64_t v12 = v9 - 4;
        if (v38)
        {
          uint64_t v13 = MEMORY[0x1E4E77720](v9 - 4, v7);
          uint64_t v14 = v9 - 3;
          if (__OFADD__(v12, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v13 = *(void *)(v7 + 8 * v9);
          sub_1E3E775E0();
          uint64_t v14 = v9 - 3;
          if (__OFADD__(v12, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v39 = v14;
        uint64_t v40 = v4;
        id v15 = objc_msgSend(v37, sel_buttonWithType_, 1);
        objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        swift_bridgeObjectRetain();
        uint64_t v16 = (void *)sub_1E3E7CCF0();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_setTitle_forState_, v16, 0);

        objc_msgSend(v15, sel_addTarget_action_forControlEvents_, v1, sel_handleButton_, 64);
        objc_msgSend(v15, sel_sizeToFit);
        id v17 = objc_msgSend(v1, sel_view);
        if (!v17) {
          break;
        }
        id v18 = v17;
        objc_msgSend(v17, sel_addSubview_, v15);

        id v19 = objc_msgSend(v15, sel_topAnchor);
        id v20 = sub_1E3D7B098();
        id v21 = [v20 v10[8]];

        id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, v5);
        MEMORY[0x1E4E76960]();
        if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E3E7D090();
        }
        sub_1E3E7D100();
        sub_1E3E7D080();
        id v23 = [v15 (SEL)v10 + 1573];
        id v24 = objc_msgSend(v1, sel_view);
        if (!v24) {
          goto LABEL_25;
        }
        id v25 = v24;
        id v26 = [v24 (SEL)v10 + 1573];

        id v27 = objc_msgSend(v23, (SEL)&selRef_deviceSubtype + 7, v26, -v5);
        MEMORY[0x1E4E76960]();
        if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E3E7D090();
        }
        sub_1E3E7D100();
        sub_1E3E7D080();
        id v28 = objc_msgSend(v15, sel_trailingAnchor);
        id v29 = objc_msgSend(v28, (SEL)&selRef_deviceSubtype + 7, v40, v11);

        MEMORY[0x1E4E76960]();
        if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E3E7D090();
        }
        sub_1E3E7D100();
        sub_1E3E7D080();
        id v30 = v15;
        id v31 = objc_msgSend(v30, sel_leadingAnchor);

        double v11 = -*(double *)&v1[v35];
        objc_msgSend(*(id *)&v1[v34], sel_setObject_forKey_, v13, v30);
        swift_release();

        ++v9;
        id v4 = v31;
        unint64_t v7 = v36;
        id v10 = &selRef_setView_;
        if (v39 == v8)
        {
          swift_bridgeObjectRelease();
          id v4 = v31;
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
LABEL_23:
  id v32 = self;
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF000);
  id v33 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v33);
}

id ModalSheet.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    unint64_t v6 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ModalSheet.init(nibName:bundle:)()
{
}

id ModalSheet.__deallocating_deinit()
{
  return sub_1E3D7CD2C(type metadata accessor for ModalSheet, (SEL *)&selRef_dealloc);
}

uint64_t ModalSheetWrapper.init(contentViewController:actions:height:)(uint64_t a1, unint64_t a2, double a3)
{
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_minWidth) = 0x407C200000000000;
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_maxSize) = 0x4085E00000000000;
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_contentViewController) = a1;
  *(double *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_height) = a3;
  return ModalSheet.init(actions:)(a2);
}

void sub_1E3D7C0D4()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_minWidth];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_height];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_maxSize];
  id v4 = (objc_class *)type metadata accessor for SheetView();
  double v5 = (char *)objc_allocWithZone(v4);
  unint64_t v6 = &v5[OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions];
  *(void *)unint64_t v6 = v1;
  *((void *)v6 + 1) = v2;
  *((void *)v6 + 2) = v3;
  *((void *)v6 + 3) = v2;
  v8.receiver = v5;
  v8.super_class = v4;
  id v7 = objc_msgSendSuper2(&v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setView_, v7);
}

void sub_1E3D7C308()
{
  v55.receiver = v0;
  v55.super_class = (Class)type metadata accessor for ModalSheetWrapper();
  objc_msgSendSuper2(&v55, sel_viewDidLoad);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_contentViewController];
  id v2 = objc_msgSend(v1, sel_view);
  if (!v2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v4 = objc_msgSend(v1, sel_view);
  if (!v4) {
    return;
  }
  double v5 = v4;
  objc_msgSend(v0, sel_addChildViewController_, v1);
  id v6 = objc_msgSend(v0, sel_view);
  if (!v6) {
    goto LABEL_22;
  }
  id v7 = v6;
  objc_msgSend(v6, sel_addSubview_, v5);

  id v8 = objc_msgSend(v0, sel_view);
  if (!v8)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = v8;
  id v10 = sub_1E3D7CA30();
  objc_msgSend(v9, sel_addSubview_, v10);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E8FA00;
  id v12 = sub_1E3D7CA30();
  id v13 = objc_msgSend(v12, sel_widthAnchor);

  id v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v15 = v14;
  id v16 = objc_msgSend(v14, sel_widthAnchor);

  id v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  unint64_t v54 = v17;
  *(void *)(inited + 32) = v17;
  id v18 = sub_1E3D7CA30();
  id v19 = objc_msgSend(v18, sel_topAnchor);

  id v20 = sub_1E3D7B098();
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, -1.0);
  *(void *)(inited + 40) = v22;
  id v23 = sub_1E3D7CA30();
  id v24 = objc_msgSend(v23, sel_heightAnchor);

  id v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 1.0);
  *(void *)(inited + 48) = v25;
  unint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1E3E8E880;
  id v27 = objc_msgSend(v5, sel_leadingAnchor);
  id v28 = objc_msgSend(v0, sel_view);
  if (!v28)
  {
LABEL_25:
    swift_setDeallocating();
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_26;
  }
  id v29 = v28;
  id v30 = objc_msgSend(v28, sel_leadingAnchor);

  id v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v30);
  *(void *)(v26 + 32) = v31;
  id v32 = objc_msgSend(v5, sel_trailingAnchor);
  id v33 = objc_msgSend(v0, (SEL)&selRef_statusCode);
  if (!v33)
  {
LABEL_26:
    swift_setDeallocating();
    swift_arrayDestroy();
    __break(1u);
    return;
  }
  uint64_t v34 = v33;
  id v35 = objc_msgSend(v33, sel_trailingAnchor);

  id v36 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v35);
  *(void *)(v26 + 40) = v36;
  id v37 = objc_msgSend(v5, sel_topAnchor);
  id v38 = sub_1E3D7B098();
  id v39 = objc_msgSend(v38, sel_topAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(void *)(v26 + 48) = v40;
  id v41 = objc_msgSend(v5, sel_bottomAnchor);
  id v42 = sub_1E3D7B098();
  id v43 = objc_msgSend(v42, sel_bottomAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(void *)(v26 + 56) = v44;
  sub_1E3E7D080();
  if (!(v26 >> 62))
  {
    uint64_t v45 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v46 = v45 + 3;
    if (!__OFADD__(v45, 3)) {
      goto LABEL_10;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1E3E7DFC0();
  BOOL v53 = __OFADD__(v52, 3);
  uint64_t v46 = v52 + 3;
  if (v53) {
    goto LABEL_19;
  }
LABEL_10:
  sub_1E3D7D934(v46, 1);
  sub_1E3E7D080();
  id v47 = v54;
  MEMORY[0x1E4E76960]();
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_20:
  }
    sub_1E3E7D090();
  sub_1E3E7D100();
  sub_1E3E7D080();
  id v48 = v22;
  MEMORY[0x1E4E76960]();
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E3E7D090();
  }
  sub_1E3E7D100();
  sub_1E3E7D080();
  id v49 = v25;
  MEMORY[0x1E4E76960]();
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E3E7D090();
  }
  uint64_t v50 = self;
  sub_1E3E7D100();
  sub_1E3E7D080();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF000);
  uint64_t v51 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, v51);
}

id sub_1E3D7CA30()
{
  uint64_t v1 = OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1E3D7CAF4()
{
  return sub_1E3D7CD2C(type metadata accessor for ModalSheetWrapper, (SEL *)&selRef_viewWillLayoutSubviews);
}

void sub_1E3D7CB54(char a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ModalSheetWrapper();
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v3, sel_setNavigationBarHidden_animated_, 1, 0);
  }
}

void ModalSheetWrapper.__allocating_init(actions:)()
{
}

void ModalSheetWrapper.init(actions:)()
{
}

void sub_1E3D7CCCC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView);
}

id ModalSheetWrapper.__deallocating_deinit()
{
  return sub_1E3D7CD2C(type metadata accessor for ModalSheetWrapper, (SEL *)&selRef_dealloc);
}

id sub_1E3D7CD2C(uint64_t (*a1)(void), SEL *a2)
{
  v5.receiver = v2;
  v5.super_class = (Class)a1();
  return objc_msgSendSuper2(&v5, *a2);
}

uint64_t type metadata accessor for ModalSheet()
{
  return self;
}

uint64_t sub_1E3D7CDDC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1E3DF0BD0();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1E3D7CE58(v6);
  return sub_1E3E7DE90();
}

uint64_t sub_1E3D7CE58(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1E3E7E0D0();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_157;
    }
    if (v4) {
      return sub_1E3D7D588(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_165;
  }
  uint64_t v7 = result;
  v102 = a1;
  if (v4 < 2)
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v108 = MEMORY[0x1E4FBC860];
    __dst = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_123:
      uint64_t v94 = v10;
      if (v13 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_152;
          }
          if (!v95) {
            goto LABEL_164;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v13 + 24];
          sub_1E3D7D660((char *)(v95 + 8 * v98), (char *)(v95 + 8 * *(void *)&v94[16 * v13 + 16]), v95 + 8 * v99, __dst);
          if (v2) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_153;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1E3DF0BBC((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_154;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v13 > v101) {
            goto LABEL_155;
          }
          memmove(&v97[16 * v13 + 16], &v97[16 * v13 + 32], 16 * (v101 - v13));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v13 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_120:
      swift_bridgeObjectRelease();
      *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1E3E7D080();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    type metadata accessor for ModalSheet.Action();
    uint64_t v9 = sub_1E3E7D0F0();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v108 = v9;
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v103 = v12 - 8;
  uint64_t v104 = v7;
  id v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v105 = v4;
  uint64_t v106 = v12;
  while (1)
  {
    uint64_t v14 = v11++;
    if (v11 >= v4) {
      goto LABEL_38;
    }
    uint64_t v15 = *(void *)(v12 + 8 * v11);
    uint64_t v16 = *(void *)(v12 + 8 * v14);
    unsigned int v17 = *(unsigned __int8 *)(v15 + 16);
    unsigned int v18 = *(unsigned __int8 *)(v16 + 16);
    if (v17 == v18) {
      break;
    }
    int v20 = v17 < v18;
LABEL_23:
    uint64_t v21 = v14 + 2;
    if (v14 + 2 < v4) {
      goto LABEL_29;
    }
LABEL_37:
    uint64_t v11 = v21;
    if (v20) {
      goto LABEL_41;
    }
LABEL_38:
    if (v11 < v4) {
      goto LABEL_49;
    }
LABEL_72:
    if (v11 < v14) {
      goto LABEL_151;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v10 = sub_1E3DF0694(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v44 = *((void *)v10 + 2);
    unint64_t v43 = *((void *)v10 + 3);
    unint64_t v13 = v44 + 1;
    if (v44 >= v43 >> 1) {
      id v10 = sub_1E3DF0694((char *)(v43 > 1), v44 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v13;
    uint64_t v45 = v10 + 32;
    uint64_t v46 = &v10[16 * v44 + 32];
    *(void *)uint64_t v46 = v14;
    *((void *)v46 + 1) = v11;
    if (v44)
    {
      uint64_t v12 = v106;
      while (1)
      {
        unint64_t v47 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v52 = &v45[16 * v13];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_140;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_141;
          }
          unint64_t v59 = v13 - 2;
          uint64_t v60 = &v45[16 * v13 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_143;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_146;
          }
          if (v64 >= v55)
          {
            uint64_t v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_150;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_110;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v76 = *((void *)v10 + 4);
            uint64_t v77 = *((void *)v10 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_104;
          }
          uint64_t v49 = *((void *)v10 + 4);
          uint64_t v48 = *((void *)v10 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_142;
        }
        unint64_t v59 = v13 - 2;
        uint64_t v65 = &v45[16 * v13 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_145;
        }
        v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_148;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_149;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_110:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_112;
        }
LABEL_104:
        if (v70) {
          goto LABEL_144;
        }
        uint64_t v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_147;
        }
        if (v81 < v69) {
          goto LABEL_14;
        }
LABEL_112:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (!v12) {
          goto LABEL_162;
        }
        uint64_t v87 = v10;
        uint64_t v88 = v12;
        uint64_t v89 = &v45[16 * v86];
        uint64_t v90 = *(void *)v89;
        uint64_t v91 = &v45[16 * v47];
        uint64_t v92 = *((void *)v91 + 1);
        sub_1E3D7D660((char *)(v88 + 8 * *(void *)v89), (char *)(v88 + 8 * *(void *)v91), v88 + 8 * v92, __dst);
        if (v1) {
          goto LABEL_120;
        }
        if (v92 < v90) {
          goto LABEL_137;
        }
        if (v47 > *((void *)v87 + 2)) {
          goto LABEL_138;
        }
        *(void *)uint64_t v89 = v90;
        *(void *)&v45[16 * v86 + 8] = v92;
        unint64_t v93 = *((void *)v87 + 2);
        if (v47 >= v93) {
          goto LABEL_139;
        }
        id v10 = v87;
        unint64_t v13 = v93 - 1;
        memmove(&v45[16 * v47], v91 + 16, 16 * (v93 - 1 - v47));
        *((void *)v87 + 2) = v93 - 1;
        BOOL v75 = v93 > 2;
        uint64_t v12 = v106;
        if (!v75) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
    uint64_t v12 = v106;
LABEL_14:
    uint64_t v4 = v105;
    if (v11 >= v105)
    {
      uint64_t v2 = v1;
      goto LABEL_123;
    }
  }
  if (*(void *)(v15 + 40) != *(void *)(v16 + 40) || *(void *)(v15 + 48) != *(void *)(v16 + 48))
  {
    int v20 = sub_1E3E7E150();
    goto LABEL_23;
  }
  uint64_t v21 = v14 + 2;
  if (v14 + 2 >= v4) {
    goto LABEL_48;
  }
  int v20 = 0;
  do
  {
LABEL_29:
    uint64_t v23 = *(void *)(v12 + 8 * v21);
    uint64_t v24 = *(void *)(v12 + 8 * v11);
    unsigned int v25 = *(unsigned __int8 *)(v23 + 16);
    unsigned int v26 = *(unsigned __int8 *)(v24 + 16);
    if (v25 == v26)
    {
      if (*(void *)(v23 + 40) == *(void *)(v24 + 40) && *(void *)(v23 + 48) == *(void *)(v24 + 48))
      {
        if (v20) {
          goto LABEL_41;
        }
      }
      else if ((v20 ^ sub_1E3E7E150()))
      {
        goto LABEL_37;
      }
    }
    else if ((v20 ^ (v25 < v26)))
    {
      goto LABEL_37;
    }
    uint64_t v22 = v21 + 1;
    uint64_t v11 = v21;
    uint64_t v21 = v22;
  }
  while (v22 < v4);
  uint64_t v21 = v22;
  uint64_t v11 = v22;
  if ((v20 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_41:
  if (v21 < v14) {
    goto LABEL_160;
  }
  if (v14 < v21)
  {
    id v28 = (uint64_t *)(v103 + 8 * v21);
    uint64_t v29 = v21;
    uint64_t v30 = v14;
    id v31 = (uint64_t *)(v12 + 8 * v14);
    do
    {
      if (v30 != --v29)
      {
        if (!v12) {
          goto LABEL_163;
        }
        uint64_t v32 = *v31;
        uint64_t *v31 = *v28;
        *id v28 = v32;
      }
      ++v30;
      --v28;
      ++v31;
    }
    while (v30 < v29);
  }
LABEL_48:
  uint64_t v11 = v21;
  if (v21 >= v4) {
    goto LABEL_72;
  }
LABEL_49:
  if (__OFSUB__(v11, v14)) {
    goto LABEL_156;
  }
  if (v11 - v14 >= v104) {
    goto LABEL_72;
  }
  if (__OFADD__(v14, v104)) {
    goto LABEL_158;
  }
  if (v14 + v104 >= v4) {
    uint64_t v33 = v4;
  }
  else {
    uint64_t v33 = v14 + v104;
  }
  if (v33 >= v14)
  {
    if (v11 != v33)
    {
      uint64_t v34 = (void *)(v103 + 8 * v11);
      do
      {
        uint64_t v35 = *(void *)(v12 + 8 * v11);
        uint64_t v36 = v14;
        id v37 = v34;
        do
        {
          uint64_t v38 = *v37;
          unsigned int v39 = *(unsigned __int8 *)(v35 + 16);
          unsigned int v40 = *(unsigned __int8 *)(*v37 + 16);
          if (v39 == v40)
          {
            BOOL v41 = *(void *)(v35 + 40) == *(void *)(v38 + 40) && *(void *)(v35 + 48) == *(void *)(v38 + 48);
            if (v41 || (sub_1E3E7E150() & 1) == 0) {
              break;
            }
          }
          else if (v39 >= v40)
          {
            break;
          }
          if (!v12) {
            goto LABEL_161;
          }
          uint64_t v42 = *v37;
          uint64_t v35 = v37[1];
          *id v37 = v35;
          v37[1] = v42;
          --v37;
          ++v36;
        }
        while (v11 != v36);
        ++v11;
        ++v34;
      }
      while (v11 != v33);
      uint64_t v11 = v33;
    }
    goto LABEL_72;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  uint64_t result = sub_1E3E7DF70();
  __break(1u);
  return result;
}

uint64_t sub_1E3D7D588(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v9 = *(void *)(v7 + 8 * v4);
    uint64_t v10 = v6;
    uint64_t v11 = (void *)v8;
    while (1)
    {
      uint64_t v12 = *v11;
      unsigned int v13 = *(unsigned __int8 *)(v9 + 16);
      unsigned int v14 = *(unsigned __int8 *)(*v11 + 16);
      if (v13 == v14)
      {
        uint64_t result = *(void *)(v9 + 40);
        BOOL v15 = result == *(void *)(v12 + 40) && *(void *)(v9 + 48) == *(void *)(v12 + 48);
        if (v15 || (uint64_t result = sub_1E3E7E150(), (result & 1) == 0))
        {
LABEL_4:
          ++v4;
          v8 += 8;
          if (v4 == a2) {
            return result;
          }
          goto LABEL_5;
        }
      }
      else if (v13 >= v14)
      {
        goto LABEL_4;
      }
      if (!v7) {
        break;
      }
      uint64_t v16 = *v11;
      uint64_t v9 = v11[1];
      *uint64_t v11 = v9;
      v11[1] = v16;
      --v11;
      if (v4 == ++v10) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D7D660(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v34 = __src;
  uint64_t v33 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_55;
    }
    if (__dst != a2 || &a2[8 * v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    uint64_t v21 = &v4[8 * v13];
    uint64_t v32 = v21;
    uint64_t v34 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_54:
      sub_1E3DF0790((void **)&v34, &v33, &v32);
      return 1;
    }
    uint64_t v22 = (char *)(a3 - 8);
    uint64_t v23 = v6;
    while (1)
    {
      uint64_t v24 = *((void *)v21 - 1);
      unsigned int v25 = v22 + 8;
      uint64_t v27 = *((void *)v23 - 1);
      v23 -= 8;
      uint64_t v26 = v27;
      unsigned int v28 = *(unsigned __int8 *)(v24 + 16);
      unsigned int v29 = *(unsigned __int8 *)(v27 + 16);
      if (v28 == v29)
      {
        BOOL v30 = *(void *)(v24 + 40) == *(void *)(v26 + 40) && *(void *)(v24 + 48) == *(void *)(v26 + 48);
        if (v30 || (sub_1E3E7E150() & 1) == 0)
        {
LABEL_42:
          uint64_t v32 = v21 - 8;
          if (v25 < v21 || v22 >= v21 || v25 != v21) {
            *(void *)uint64_t v22 = *((void *)v21 - 1);
          }
          uint64_t v23 = v6;
          v21 -= 8;
          if (v6 <= v7) {
            goto LABEL_54;
          }
          goto LABEL_53;
        }
      }
      else if (v28 >= v29)
      {
        goto LABEL_42;
      }
      if (v25 != v6 || v22 >= v6) {
        *(void *)uint64_t v22 = *(void *)v23;
      }
      uint64_t v34 = v23;
      if (v23 <= v7) {
        goto LABEL_54;
      }
LABEL_53:
      v22 -= 8;
      uint64_t v6 = v23;
      if (v21 <= v4) {
        goto LABEL_54;
      }
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    unsigned int v14 = &v4[8 * v10];
    uint64_t v32 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        uint64_t v15 = *(void *)v6;
        uint64_t v16 = *(void *)v4;
        unsigned int v17 = *(unsigned __int8 *)(*(void *)v6 + 16);
        unsigned int v18 = *(unsigned __int8 *)(*(void *)v4 + 16);
        if (v17 == v18)
        {
          BOOL v19 = *(void *)(v15 + 40) == *(void *)(v16 + 40) && *(void *)(v15 + 48) == *(void *)(v16 + 48);
          if (!v19 && (sub_1E3E7E150() & 1) != 0)
          {
LABEL_22:
            int v20 = v6 + 8;
            if (v7 < v6 || v7 >= v20 || v7 != v6) {
              *(void *)uint64_t v7 = *(void *)v6;
            }
            goto LABEL_26;
          }
        }
        else if (v17 < v18)
        {
          goto LABEL_22;
        }
        if (v7 != v4) {
          *(void *)uint64_t v7 = *(void *)v4;
        }
        v4 += 8;
        uint64_t v33 = v4;
        int v20 = v6;
LABEL_26:
        v7 += 8;
        if (v4 < v14)
        {
          uint64_t v6 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        uint64_t v34 = v7;
        goto LABEL_54;
      }
    }
    goto LABEL_54;
  }
LABEL_55:
  uint64_t result = sub_1E3E7E010();
  __break(1u);
  return result;
}

uint64_t sub_1E3D7D934(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x1E4E77730](v7, v9, a2 & 1, v5);
  *uint64_t v2 = result;
  return result;
}

uint64_t _s10PodcastsUI10ModalSheetC25presentableViewController_6heightSo06UIViewG0CAG_12CoreGraphics7CGFloatVtFZ_0(void *a1, double a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  unint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1E3E8A550;
  uint64_t v5 = sub_1E3E79530();
  uint64_t v7 = v6;
  type metadata accessor for ModalSheet.Action();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 40) = v5;
  *(void *)(v8 + 48) = v7;
  *(unsigned char *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = sub_1E3D7B478;
  *(void *)(v8 + 32) = 0;
  *(void *)(v4 + 32) = v8;
  sub_1E3E7D080();
  uint64_t v9 = (char *)objc_allocWithZone((Class)type metadata accessor for ModalSheetWrapper());
  *(void *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_minWidth] = 0x407C200000000000;
  *(void *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_maxSize] = 0x4085E00000000000;
  *(void *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView] = 0;
  *(void *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_contentViewController] = a1;
  *(double *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_height] = a2;
  id v10 = a1;
  return ModalSheet.init(actions:)(v4);
}

void _s10PodcastsUI10ModalSheetC5coderACSgSo7NSCoderC_tcfc_0()
{
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardEdgeSpacing] = 0x4034000000000000;
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardControlSpacing] = 0x4020000000000000;
  uint64_t v1 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet_buttonToAction;
  *(void *)&v0[v1] = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 5, 5);
  *(void *)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide] = 0;

  sub_1E3E7DF80();
  __break(1u);
}

uint64_t type metadata accessor for ModalSheetWrapper()
{
  return self;
}

unint64_t sub_1E3D7DC08()
{
  unint64_t result = qword_1EAE282B0;
  if (!qword_1EAE282B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE282B0);
  }
  return result;
}

id sub_1E3D7DC5C@<X0>(void *a1@<X8>)
{
  id result = sub_1E3D7B098();
  *a1 = result;
  return result;
}

void sub_1E3D7DC88(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide);
  *(void *)(*a2 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide) = *a1;
  id v3 = v2;
}

uint64_t method lookup function for ModalSheet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ModalSheet);
}

uint64_t dispatch thunk of ModalSheet.__allocating_init(actions:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ModalSheet.marginGuide.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ModalSheet.marginGuide.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ModalSheet.marginGuide.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ModalSheet.dismiss()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t type metadata accessor for ModalSheet.Action()
{
  return self;
}

uint64_t method lookup function for ModalSheet.Action(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ModalSheet.Action);
}

uint64_t dispatch thunk of ModalSheet.Action.__allocating_init(title:type:handler:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unsigned char *storeEnumTagSinglePayload for ModalSheet.Action.ActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3D7DEF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModalSheet.Action.ActionType()
{
  return &type metadata for ModalSheet.Action.ActionType;
}

uint64_t method lookup function for ModalSheetWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ModalSheetWrapper);
}

uint64_t dispatch thunk of ModalSheetWrapper.__allocating_init(contentViewController:actions:height:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of EngagementThresholdStatusProviding.status.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C8C7D4;
  return v7(a1, a2);
}

uint64_t Publisher.emitPageRenderResourceEvents(using:onScreen:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(unsigned char *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  *(void *)(v9 + 32) = a1;
  *(unsigned char *)(v9 + 40) = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(unsigned char *)(v10 + 24) = a2;
  swift_retain_n();
  sub_1E3E7AB90();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1E3D7E190(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v14 - v12;
  if (a2)
  {
    *uint64_t v13 = a3 & 1;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1E3D7EB14((uint64_t)v13, (uint64_t)v10);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1E3D7EB78((uint64_t)v10, (uint64_t)v7);
      PageRenderController.notify(_:)((uint64_t)v7);
      sub_1E3D7EBDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PageRenderActivity);
    }
    sub_1E3D7EBDC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  }
}

uint64_t sub_1E3D7E31C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3D7E354(uint64_t a1)
{
  sub_1E3D7E190(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1E3D7E360(char *a1, uint64_t a2, int a3)
{
  int v43 = a3;
  unint64_t v44 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v41 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1F4188790](v41);
  uint64_t v39 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1F4188790](v42);
  unsigned int v40 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - v14;
  MEMORY[0x1F4188790](v16);
  unsigned int v18 = (char *)&v39 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v39 - v20;
  swift_getAssociatedConformanceWitness();
  uint64_t v22 = sub_1E3E7A930();
  double v23 = MEMORY[0x1F4188790](v22);
  unsigned int v25 = (char *)&v39 - v24;
  (*(void (**)(char *, char *, double))(v26 + 16))((char *)&v39 - v24, v44, v23);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v25, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    if (a2)
    {
      *uint64_t v21 = v43 & 1;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1E3D7EB14((uint64_t)v21, (uint64_t)v18);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v28 = v39;
        sub_1E3D7EB78((uint64_t)v18, v39);
        PageRenderController.notify(_:)(v28);
        sub_1E3D7EBDC(v28, (uint64_t (*)(void))type metadata accessor for PageRenderActivity);
      }
      return sub_1E3D7EBDC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
    }
  }
  else
  {
    uint64_t v29 = a2;
    BOOL v30 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v30(v10, v25, AssociatedTypeWitness);
    if (v29)
    {
      id v31 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      unint64_t v44 = v10;
      v31(v7, v10, AssociatedTypeWitness);
      uint64_t v32 = sub_1E3E7E0F0();
      if (v32)
      {
        uint64_t v33 = v32;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
      }
      else
      {
        uint64_t v33 = swift_allocError();
        v30(v34, v7, AssociatedTypeWitness);
      }
      uint64_t v35 = (uint64_t)v40;
      *(void *)uint64_t v15 = v33;
      v15[8] = v43 & 1;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1E3D7EB14((uint64_t)v15, v35);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      id v37 = v44;
      if (!EnumCaseMultiPayload)
      {
        uint64_t v38 = v39;
        sub_1E3D7EB78(v35, v39);
        PageRenderController.notify(_:)(v38);
        sub_1E3D7EBDC(v38, (uint64_t (*)(void))type metadata accessor for PageRenderActivity);
      }
      sub_1E3D7EBDC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v37, AssociatedTypeWitness);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_1E3D7E874()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3D7E8AC(char *a1)
{
  return sub_1E3D7E360(a1, *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

void sub_1E3D7E8BC(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v15 - v11;
  if (a1)
  {
    sub_1E3D7EAC0();
    uint64_t v13 = swift_allocError();
    *uint64_t v14 = 0;
    *(void *)uint64_t v12 = v13;
    v12[8] = a2 & 1;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1E3D7EB14((uint64_t)v12, (uint64_t)v9);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1E3D7EB78((uint64_t)v9, (uint64_t)v6);
      PageRenderController.notify(_:)((uint64_t)v6);
      sub_1E3D7EBDC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PageRenderActivity);
    }
    sub_1E3D7EBDC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PageRenderEvent);
  }
}

void sub_1E3D7EA6C()
{
  sub_1E3D7E8BC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1E3D7EA78()
{
  sub_1E3E7A8C0();

  return swift_getWitnessTable();
}

unint64_t sub_1E3D7EAC0()
{
  unint64_t result = qword_1EBFE1BA8;
  if (!qword_1EBFE1BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE1BA8);
  }
  return result;
}

uint64_t sub_1E3D7EB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageRenderEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3D7EB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageRenderActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3D7EBDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t InMemoryPlaybackPositionTracker.__allocating_init(thinClientEpisodeStateRepository:inMemoryStateRepository:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t InMemoryPlaybackPositionTracker.init(thinClientEpisodeStateRepository:inMemoryStateRepository:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t InMemoryPlaybackPositionTracker.__allocating_init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA0);
  sub_1E3E7BE20();
  sub_1E3E79CE0();
  sub_1E3E7BE20();
  swift_release();
  type metadata accessor for InMemoryPlaybackPositionTracker();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t type metadata accessor for InMemoryPlaybackPositionTracker()
{
  return self;
}

void sub_1E3D7ED28(void *a1, void (*a2)(void *, uint64_t))
{
  uint64_t v4 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E77E20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E79380();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v15 = sub_1E3D76ED4(v13, v14);
  if (v16)
  {
    sub_1E3CF1B9C();
    uint64_t v34 = (void *)swift_allocError();
    *uint64_t v35 = 0;
    a2(v34, 1);
  }
  else
  {
    uint64_t v17 = v15;
    uint64_t v18 = a1[3];
    uint64_t v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v18);
    double v20 = (*(double (**)(uint64_t, uint64_t))(v19 + 64))(v18, v19) * 1000.0;
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    LOBYTE(v21) = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 80))(v21, v22);
    sub_1E3E77E00();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0778);
    uint64_t v23 = swift_allocObject();
    *(_DWORD *)(v23 + ((*(unsigned int *)(*(void *)v23 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
    sub_1E3D7F394((uint64_t)v6, v23 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v23 + 16), (uint64_t (*)(void))type metadata accessor for LazyDate.State);
    sub_1E3D7F334((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LazyDate.State);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v24 = a1[3];
    uint64_t v25 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v24);
    double v26 = (*(double (**)(uint64_t, uint64_t))(v25 + 56))(v24, v25);
    uint64_t v27 = v37;
    EpisodePlayState.init(positionInMilliseconds:completed:recordedDate:duration:)(v21 & 1, v23, v37, v20, v26);
    uint64_t v28 = sub_1E3E78400();
    v38[3] = v28;
    v38[4] = sub_1E3C16D20();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E4F91548], v28);
    LOBYTE(v28) = sub_1E3E78090();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    if (v28)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE282C8);
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26068);
      unint64_t v31 = (*(unsigned __int8 *)(*(void *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v30 - 8) + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1E3E86660;
      uint64_t v33 = v32 + v31 + *(int *)(v30 + 48);
      *(void *)(v32 + v31) = v17;
      sub_1E3D7F394(v27, v33, MEMORY[0x1E4F919C8]);
      sub_1E3C8152C(v32);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_1E3E79CC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1E3E7A0D0();
    }
    sub_1E3D7F334(v27, MEMORY[0x1E4F919C8]);
  }
}

uint64_t InMemoryPlaybackPositionTracker.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t InMemoryPlaybackPositionTracker.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1E3D7F310(void *a1, void (*a2)(void *, uint64_t))
{
}

uint64_t sub_1E3D7F334(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E3D7F394(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t method lookup function for InMemoryPlaybackPositionTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InMemoryPlaybackPositionTracker);
}

uint64_t dispatch thunk of InMemoryPlaybackPositionTracker.__allocating_init(thinClientEpisodeStateRepository:inMemoryStateRepository:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of InMemoryPlaybackPositionTracker.shouldTrackPosition(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of InMemoryPlaybackPositionTracker.updatePlaybackPosition(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1E3D7F470()
{
  return swift_weakLoadStrong();
}

uint64_t sub_1E3D7F4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E790E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v21 - v12);
  uint64_t v22 = *(void **)a2;
  LOBYTE(a2) = *(unsigned char *)(a2 + 8);
  sub_1E3D80DEC(a1, (uint64_t)&unk_1F3F47E48);
  *uint64_t v13 = a1;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v13, *MEMORY[0x1E4F918C0], v7);
  swift_bridgeObjectRetain();
  sub_1E3E7D1B0();
  uint64_t v14 = sub_1E3E7D1E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v10, v13, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = 0;
  *((void *)v17 + 3) = 0;
  *((void *)v17 + 4) = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], v10, v7);
  uint64_t v18 = &v17[(v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v19 = v22;
  *(void *)uint64_t v18 = v22;
  v18[8] = a2;
  sub_1E3C72848(v19, a2);
  sub_1E3D7FFCC((uint64_t)v6, (uint64_t)&unk_1EAE282D8, (uint64_t)v17);
  swift_release();
  sub_1E3C1DE20((uint64_t)v6);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_1E3D7F770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E790E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v21 - v12);
  uint64_t v22 = *(void **)a2;
  LOBYTE(a2) = *(unsigned char *)(a2 + 8);
  sub_1E3D806BC(a1, (uint64_t)&unk_1F3F47E70);
  *uint64_t v13 = a1;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v13, *MEMORY[0x1E4F918F0], v7);
  swift_bridgeObjectRetain();
  sub_1E3E7D1B0();
  uint64_t v14 = sub_1E3E7D1E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v10, v13, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = 0;
  *((void *)v17 + 3) = 0;
  *((void *)v17 + 4) = v15;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], v10, v7);
  uint64_t v18 = &v17[(v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v19 = v22;
  *(void *)uint64_t v18 = v22;
  v18[8] = a2;
  sub_1E3C72848(v19, a2);
  sub_1E3D7FFCC((uint64_t)v6, (uint64_t)&unk_1EAE282E0, (uint64_t)v17);
  swift_release();
  sub_1E3C1DE20((uint64_t)v6);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_1E3D7FA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 176) = a7;
  *(void *)(v7 + 112) = a5;
  *(void *)(v7 + 120) = a6;
  *(void *)(v7 + 104) = a4;
  *(void *)(v7 + 128) = _s12ErrorHandlerVMa();
  *(void *)(v7 + 136) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3D7FAC8, 0, 0);
}

uint64_t sub_1E3D7FAC8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 144) = Strong;
  if (Strong)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    *(void *)(v0 + 152) = result;
    if (result)
    {
      uint64_t v4 = *(void *)(v0 + 112);
      uint64_t v3 = *(void **)(v0 + 120);
      unsigned __int8 v5 = *(unsigned char *)(v0 + 176);
      *(void *)(v0 + 40) = type metadata accessor for PlaybackController.QueueCommand();
      *(void *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
      uint64_t v7 = (char *)boxed_opaque_existential_1
         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
      uint64_t v8 = sub_1E3E790E0();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, v4, v8);
      *(void *)uint64_t v7 = v3;
      v7[8] = v5;
      swift_storeEnumTagMultiPayload();
      sub_1E3C72848(v3, v5);
      uint64_t v9 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_1E3D7FCBC;
      return sub_1E3CD3A50(v0 + 16, 0);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  return result;
}

uint64_t sub_1E3D7FCBC(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    unsigned __int8 v5 = sub_1E3D7FE68;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    unsigned __int8 v5 = sub_1E3D7FDFC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3D7FDFC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3D7FE68()
{
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v2 = (void *)v0[21];
    uint64_t v3 = (void *)v0[17];
    uint64_t v4 = v0[16];
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_reachability);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v6 = (char *)v3 + *(int *)(v4 + 20);
    uint64_t v7 = sub_1E3E78FF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    *uint64_t v3 = v2;
    *(void *)((char *)v3 + *(int *)(v4 + 24)) = v5;
    id v8 = v2;
    sub_1E3D91478();
    sub_1E3D86CC8((uint64_t)v3, (uint64_t (*)(void))_s12ErrorHandlerVMa);
    swift_willThrow();

    swift_release();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D7FFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C8CD9C(a1, (uint64_t)v7);
  uint64_t v8 = sub_1E3E7D1E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1E3C1DE20((uint64_t)v7);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  else
  {
    sub_1E3E7D1D0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v10 = sub_1E3E7D130();
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_1E3D8018C(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for PlaybackController.QueueCommand();
  v2[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3D80220, 0, 0);
}

uint64_t sub_1E3D80220()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *(void *)(v0 + 72) = result;
  if (result)
  {
    uint64_t v2 = *(void **)(v0 + 40);
    **(void **)(v0 + 64) = v2;
    swift_storeEnumTagMultiPayload();
    id v3 = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1E3D80304;
    return sub_1E3CD7CF0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D80304(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    return MEMORY[0x1F4188298](sub_1E3D80630, 0, 0);
  }
  else
  {
    *(void *)(v4 + 96) = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v4 + 104) = v6;
    void *v6 = v5;
    v6[1] = sub_1E3D80498;
    return PlaybackController.QueueCommand.canPerform(for:)(a1);
  }
}

uint64_t sub_1E3D80498(char a1)
{
  *(unsigned char *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3D80598, 0, 0);
}

uint64_t sub_1E3D80598()
{
  uint64_t v1 = *(void *)(v0 + 64);

  swift_release();
  sub_1E3D86CC8(v1, (uint64_t (*)(void))type metadata accessor for PlaybackController.QueueCommand);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 112);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1E3D80630()
{
  uint64_t v1 = (void *)v0[11];
  sub_1E3D86CC8(v0[8], (uint64_t (*)(void))type metadata accessor for PlaybackController.QueueCommand);

  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2(0);
}

void sub_1E3D806BC(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v2;
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_34:
    __break(1u);
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  id v41 = (id)aBlock[0];
  if (aBlock[0])
  {
    uint64_t v39 = *(void *)(a1 + 16);
    if (v39)
    {
      uint64_t v37 = v45;
      uint64_t v38 = a1 + 32;
      uint64_t v33 = a1;
      swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      unint64_t v7 = 0x1F7B17000uLL;
      while (1)
      {
        unint64_t v8 = v7;
        uint64_t v43 = *(void *)(v38 + 8 * v6);
        unint64_t v46 = MEMORY[0x1E4FBC860];
        id v9 = v41;
        id v10 = objc_msgSend(v41, sel_displayItems);
        uint64_t v11 = (void *)swift_allocObject();
        id v11[2] = v40;
        v11[3] = &v46;
        v11[4] = v9;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = sub_1E3D85A64;
        *(void *)(v12 + 24) = v11;
        v45[2] = sub_1E3D85A80;
        v45[3] = v12;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        v45[0] = sub_1E3D8372C;
        v45[1] = &block_descriptor_21;
        uint64_t v13 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        id v14 = v9;
        sub_1E3E775E0();
        swift_release();
        objc_msgSend(v10, sel_enumerateSectionsUsingBlock_, v13);

        _Block_release(v13);
        LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v10) {
          break;
        }
        id v36 = v14;
        unint64_t v15 = v46;
        swift_release();
        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = sub_1E3E7DFC0();
          unint64_t v7 = v8;
          if (v16)
          {
LABEL_10:
            uint64_t v42 = v6;
            uint64_t v17 = 4;
            while (1)
            {
              id v19 = (v15 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x1E4E77720](v17 - 4, v15)
                  : *(id *)(v15 + 8 * v17);
              double v20 = v19;
              uint64_t v21 = v17 - 3;
              if (__OFADD__(v17 - 4, 1)) {
                break;
              }
              id v22 = objc_msgSend(v19, sel_metadataObject);
              if (v22
                && (uint64_t v23 = v22,
                    id v24 = [v22 (SEL)(v7 + 917)],
                    v23,
                    v24)
                && (id v18 = objc_msgSend(v24, sel_anyObject), v24, v18))
              {
                self;
                uint64_t v25 = (void *)swift_dynamicCastObjCClass();
                if (v25
                  && (id v26 = objc_msgSend(v25, sel_identifiers),
                      id v27 = objc_msgSend(v26, sel_universalStore),
                      v26,
                      v27))
                {
                  objc_msgSend(v27, sel_adamID);
                  swift_unknownObjectRelease();
                  uint64_t v28 = sub_1E3E7A530();

                  if (v28 == v43)
                  {
                    swift_bridgeObjectRelease_n();
                    uint64_t v29 = sub_1E3E7D1E0();
                    uint64_t v30 = (uint64_t)v34;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v34, 1, 1, v29);
                    unint64_t v31 = (void *)swift_allocObject();
                    v31[2] = 0;
                    v31[3] = 0;
                    v31[4] = v35;
                    v31[5] = v20;
                    sub_1E3E775E0();
                    id v32 = v20;
                    sub_1E3C4CD5C(v30, (uint64_t)&unk_1EAE282F8, (uint64_t)v31);

                    swift_release();
                    uint64_t v6 = v42;
                    unint64_t v7 = v8;
                    goto LABEL_6;
                  }
                  id v18 = v20;
                }
                else
                {
                }
                unint64_t v7 = v8;
              }
              else
              {
                id v18 = v20;
              }

              ++v17;
              if (v21 == v16)
              {
                swift_bridgeObjectRelease_n();
                uint64_t v6 = v42;
                goto LABEL_6;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          unint64_t v7 = v8;
          if (v16) {
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_6:
        if (++v6 == v39)
        {

          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
      goto LABEL_34;
    }
  }
}

uint64_t MPCPlayerResponseTracklist.itemsInSections(sections:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  id v4 = objc_msgSend(v1, sel_displayItems);
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = a1;
  v5[3] = &v12;
  v5[4] = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1E3D86D60;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1E3D86D48;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3D8372C;
  aBlock[3] = &block_descriptor_36;
  unint64_t v7 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v8 = v2;
  sub_1E3E775E0();
  swift_release();
  objc_msgSend(v4, sel_enumerateSectionsUsingBlock_, v7);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

void sub_1E3D80DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v2;
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_39:
    __break(1u);
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  id v51 = (id)aBlock[0];
  if (aBlock[0])
  {
    uint64_t v49 = *(void *)(v44 + 16);
    if (v49)
    {
      unint64_t v47 = v57;
      uint64_t v48 = v44 + 32;
      swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      unint64_t v7 = &selRef_setView_;
      uint64_t v46 = a2;
      while (1)
      {
        uint64_t v53 = v6;
        id v8 = (uint64_t *)(v48 + 16 * v6);
        uint64_t v9 = v8[1];
        uint64_t v54 = *v8;
        unint64_t v58 = MEMORY[0x1E4FBC860];
        uint64_t v55 = v9;
        swift_bridgeObjectRetain();
        id v10 = v51;
        id v11 = objc_msgSend(v51, sel_displayItems);
        uint64_t v12 = (void *)swift_allocObject();
        long long v12[2] = a2;
        v12[3] = &v58;
        v12[4] = v10;
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = sub_1E3D86D60;
        *(void *)(v13 + 24) = v12;
        v57[2] = sub_1E3D86D48;
        v57[3] = v13;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        v57[0] = sub_1E3D8372C;
        v57[1] = &block_descriptor_47;
        id v14 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        id v52 = v10;
        sub_1E3E775E0();
        swift_release();
        objc_msgSend(v11, sel_enumerateSectionsUsingBlock_, v14);

        _Block_release(v14);
        LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v11) {
          break;
        }
        unint64_t v15 = v58;
        swift_release();
        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = sub_1E3E7DFC0();
          uint64_t v17 = &selRef_setView_;
          if (v16)
          {
LABEL_8:
            uint64_t v18 = 4;
            while (1)
            {
              id v20 = (v15 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x1E4E77720](v18 - 4, v15)
                  : *(id *)(v15 + 8 * v18);
              uint64_t v21 = v20;
              uint64_t v22 = v18 - 3;
              if (__OFADD__(v18 - 4, 1)) {
                break;
              }
              id v23 = [v20 v7[195]];
              if (v23
                && (id v24 = v23,
                    id v25 = [v23 v17[196]],
                    v24,
                    v25)
                && (id v19 = objc_msgSend(v25, sel_anyObject), v25, v19))
              {
                self;
                id v26 = (void *)swift_dynamicCastObjCClass();
                if (v26
                  && (id v27 = objc_msgSend(v26, sel_identifiers),
                      id v28 = objc_msgSend(v27, sel_library),
                      v27,
                      v28))
                {
                  id v29 = objc_msgSend(v28, sel_databaseID);
                  swift_unknownObjectRelease();
                  uint64_t v30 = sub_1E3E7CD30();
                  uint64_t v32 = v31;

                  if (v30 == v54 && v32 == v55)
                  {
                    swift_bridgeObjectRelease();
                    unint64_t v7 = &selRef_setView_;
LABEL_30:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v35 = sub_1E3E7D1E0();
                    uint64_t v36 = (uint64_t)v45;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v45, 1, 1, v35);
                    uint64_t v37 = (void *)swift_allocObject();
                    v37[2] = 0;
                    v37[3] = 0;
                    v37[4] = v50;
                    v37[5] = v21;
                    sub_1E3E775E0();
                    id v38 = v21;
                    sub_1E3C4CD5C(v36, (uint64_t)&unk_1EAE28300, (uint64_t)v37);

                    swift_release();
                    a2 = v46;
                    goto LABEL_33;
                  }
                  char v34 = sub_1E3E7E150();
                  swift_bridgeObjectRelease();
                  if (v34)
                  {
                    unint64_t v7 = &selRef_setView_;
                    goto LABEL_30;
                  }
                  id v19 = v21;
                  unint64_t v7 = &selRef_setView_;
                }
                else
                {
                }
                uint64_t v17 = &selRef_setView_;
              }
              else
              {
                id v19 = v21;
              }

              ++v18;
              if (v22 == v16) {
                goto LABEL_32;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          uint64_t v17 = &selRef_setView_;
          if (v16) {
            goto LABEL_8;
          }
        }
LABEL_32:
        swift_bridgeObjectRelease_n();
        sub_1E3E79030();
        uint64_t v39 = swift_allocObject();
        swift_weakInit();
        uint64_t v40 = (void *)swift_allocObject();
        id v41 = v52;
        a2 = v46;
        v40[2] = v52;
        v40[3] = a2;
        v40[4] = v39;
        swift_bridgeObjectRetain();
        id v42 = v41;
        sub_1E3E775E0();
        sub_1E3E79020();
        swift_release();
        unint64_t v7 = &selRef_setView_;
        swift_release();
        swift_bridgeObjectRelease();
LABEL_33:
        uint64_t v6 = v53 + 1;
        if (v53 + 1 == v49)
        {

          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
      goto LABEL_39;
    }
  }
}

uint64_t sub_1E3D81488()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3D814C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1E3E790E0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  id v10 = (char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)v10;
  char v12 = v10[8];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1E3C50ED4;
  return sub_1E3D7FA2C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v1 = sub_1E3E790E0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_1E3C5B530(*(id *)(v0 + v4), *(unsigned char *)(v0 + v4 + 8));

  return swift_deallocObject();
}

uint64_t sub_1E3D81700(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1E3E790E0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  id v10 = (char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)v10;
  char v12 = v10[8];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1E3C19DC4;
  return sub_1E3D7FA2C(a1, v6, v7, v8, v9, v11, v12);
}

void sub_1E3D81840(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  double v8 = MEMORY[0x1F4188790](v7 - 8);
  id v10 = (char **)((char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    id v33 = objc_msgSend(a1, sel_storeTrackId, v8);
    unint64_t v11 = MPCPlayerResponseTracklist.itemsInSections(sections:)(a3);
    unint64_t v12 = v11;
    if (v11 >> 62)
    {
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1E3E7DFC0();
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_4:
        v32[0] = v10;
        v32[1] = a4 + 16;
        a4 = 4;
        id v10 = &selRef_setView_;
        id v14 = &selRef_setView_;
        do
        {
          if ((v12 & 0xC000000000000001) != 0) {
            id v16 = (id)MEMORY[0x1E4E77720](a4 - 4, v12);
          }
          else {
            id v16 = *(id *)(v12 + 8 * a4);
          }
          uint64_t v17 = v16;
          uint64_t v18 = a4 - 3;
          if (__OFADD__(a4 - 4, 1))
          {
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          id v19 = [v16 v10[195]];
          if (v19
            && (id v20 = v19, v21 = [v19 v14[196]], v20, v21)
            && (id v15 = objc_msgSend(v21, sel_anyObject), v21, v15))
          {
            id v10 = v14;
            self;
            uint64_t v22 = (void *)swift_dynamicCastObjCClass();
            if (v22
              && (id v23 = objc_msgSend(v22, sel_identifiers),
                  id v24 = objc_msgSend(v23, sel_universalStore),
                  v23,
                  v24))
            {
              objc_msgSend(v24, sel_adamID);
              swift_unknownObjectRelease();
              uint64_t v25 = sub_1E3E7A530();

              if (v25 < 0) {
                goto LABEL_25;
              }
              if ((id)v25 == v33)
              {
                swift_bridgeObjectRelease_n();
                swift_beginAccess();
                uint64_t Strong = swift_weakLoadStrong();
                if (Strong)
                {
                  uint64_t v27 = Strong;
                  uint64_t v28 = sub_1E3E7D1E0();
                  uint64_t v29 = v32[0];
                  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v32[0], 1, 1, v28);
                  uint64_t v30 = (void *)swift_allocObject();
                  v30[2] = 0;
                  v30[3] = 0;
                  v30[4] = v27;
                  v30[5] = v17;
                  sub_1E3E775E0();
                  id v31 = v17;
                  sub_1E3C4CD5C(v29, (uint64_t)&unk_1EAE28390, (uint64_t)v30);
                  swift_release();

                  swift_release();
                }
                else
                {
                }
                return;
              }
              id v14 = v10;
              id v15 = v17;
            }
            else
            {

              id v14 = v10;
            }
            id v10 = &selRef_setView_;
          }
          else
          {
            id v15 = v17;
          }

          ++a4;
        }
        while (v18 != v13);
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

void sub_1E3D81BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3E7AAF0();
    swift_release();
    swift_release();
    swift_release();
    id v8 = v17;
    if (v17)
    {
      id v9 = objc_msgSend(v17, sel_items);
      id v10 = objc_msgSend(v9, sel_allItems);

      sub_1E3C12B10(0, &qword_1EAE279D0);
      unint64_t v11 = sub_1E3E7D060();

      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1E3D85DF4(v11, a1, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
        uint64_t v13 = sub_1E3E7D1E0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
        id v14 = (void *)swift_allocObject();
        v14[2] = 0;
        v14[3] = 0;
        void v14[4] = v2;
        v14[5] = v12;
        sub_1E3E775E0();
        id v15 = v12;
        sub_1E3C4CD5C((uint64_t)v7, (uint64_t)&unk_1EAE28308, (uint64_t)v14);

        swift_release();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E3D81DF8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  void v7[3] = 0;
  void v7[4] = v1;
  v7[5] = a1;
  sub_1E3E775E0();
  id v8 = a1;
  sub_1E3C4CD5C((uint64_t)v5, (uint64_t)&unk_1EAE28310, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1E3D81EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = sub_1E3E7A880();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = type metadata accessor for PlaybackController.QueueCommand();
  v5[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3D81FEC, 0, 0);
}

uint64_t sub_1E3D81FEC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *(void *)(v0 + 152) = result;
  if (result)
  {
    uint64_t v2 = *(void **)(v0 + 104);
    **(void **)(v0 + 144) = v2;
    swift_storeEnumTagMultiPayload();
    id v3 = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1E3D820D0;
    return sub_1E3CD7CF0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D820D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    return MEMORY[0x1F4188298](sub_1E3D824D8, 0, 0);
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v4 + 184) = v6;
    void *v6 = v5;
    v6[1] = sub_1E3D82264;
    return PlaybackController.QueueCommand.canPerform(for:)(a1);
  }
}

uint64_t sub_1E3D82264(char a1)
{
  *(unsigned char *)(*(void *)v1 + 216) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3D82364, 0, 0);
}

uint64_t sub_1E3D82364()
{
  int v1 = *(unsigned __int8 *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 144);

  swift_release();
  sub_1E3D86CC8(v2, (uint64_t (*)(void))type metadata accessor for PlaybackController.QueueCommand);
  if (v1 == 1)
  {
    uint64_t result = swift_weakLoadStrong();
    *(void *)(v0 + 192) = result;
    if (result)
    {
      uint64_t v4 = *(void **)(v0 + 104);
      *(void *)(v0 + 40) = *(void *)(v0 + 136);
      *(void *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
      *__swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16)) = (uint64_t)v4;
      swift_storeEnumTagMultiPayload();
      id v5 = v4;
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v6;
      void *v6 = v0;
      v6[1] = sub_1E3D8256C;
      return sub_1E3CD3A50(v0 + 16, 0);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  return result;
}

uint64_t sub_1E3D824D8()
{
  int v1 = (void *)v0[21];
  sub_1E3D86CC8(v0[18], (uint64_t (*)(void))type metadata accessor for PlaybackController.QueueCommand);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3D8256C(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 208) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1E3D826F0, 0, 0);
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    id v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
}

uint64_t sub_1E3D826F0()
{
  id v31 = v0;
  uint64_t v1 = (void *)v0[26];
  uint64_t v2 = (void *)v0[13];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  sub_1E3E7A750();
  id v3 = v2;
  id v4 = v1;
  id v5 = v3;
  id v6 = v1;
  uint64_t v7 = sub_1E3E7A860();
  os_log_type_t v8 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (void *)v0[26];
    uint64_t v27 = v0[15];
    uint64_t v10 = (void *)v0[13];
    uint64_t v28 = v0[14];
    uint64_t v29 = v0[16];
    uint64_t v11 = swift_slowAlloc();
    unint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v11 = 136446466;
    id v13 = objc_msgSend(v10, sel_contentItemIdentifier);
    uint64_t v14 = sub_1E3E7CD30();
    unint64_t v16 = v15;

    v0[10] = sub_1E3C150B8(v14, v16, &v30);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    id v17 = v9;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[11] = v18;
    sub_1E3E7DBD0();
    *unint64_t v12 = v18;

    _os_log_impl(&dword_1E3BC5000, v7, v8, "Failed to remove item %{public}s from queue with error %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v26, -1, -1);
    MEMORY[0x1E4E79510](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    id v19 = (void *)v0[26];
    uint64_t v21 = v0[15];
    uint64_t v20 = v0[16];
    id v23 = (void *)v0[13];
    uint64_t v22 = v0[14];

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1E3D829E4(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x1F4188298](sub_1E3D82A04, 0, 0);
}

uint64_t sub_1E3D82A04()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  int v2 = *(unsigned __int8 *)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26B90);
  uint64_t v3 = *(void *)(v0 + 40);
  if (v2 == 1)
  {
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1E3E86660;
    *(void *)(v4 + 56) = type metadata accessor for PlaybackController.QueueCommand();
    *(void *)(v4 + 64) = &protocol witness table for PlaybackController.QueueCommand;
    *__swift_allocate_boxed_opaque_existential_1((uint64_t *)(v4 + 32)) = v3;
    swift_storeEnumTagMultiPayload();
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1E3E86650;
    *(void *)(v4 + 56) = type metadata accessor for PlaybackController.QueueCommand();
    *(void *)(v4 + 64) = &protocol witness table for PlaybackController.QueueCommand;
    *__swift_allocate_boxed_opaque_existential_1((uint64_t *)(v4 + 32)) = v3;
    swift_storeEnumTagMultiPayload();
    *(void *)(v4 + 96) = &type metadata for PlaybackController.TransportCommand;
    *(void *)(v4 + 104) = &protocol witness table for PlaybackController.TransportCommand;
    *(void *)(v4 + 72) = 0;
    *(unsigned char *)(v4 + 80) = 2;
    uint64_t v5 = 257;
  }
  *(void *)(v0 + 56) = v4;
  uint64_t result = swift_weakLoadStrong();
  *(void *)(v0 + 64) = result;
  if (!result) {
    goto LABEL_10;
  }
  id v6 = *(id *)(v0 + 40);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1E3D82C38;
  return sub_1E3CD6378(v4, v5);
}

uint64_t sub_1E3D82C38()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3D82D9C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1E3D82D9C()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3D82E08()
{
  return sub_1E3D82E2C((uint64_t)&unk_1F3F47E98);
}

uint64_t MPCPlayerResponseTracklist.hasHardQueue.getter()
{
  return sub_1E3D82F3C((uint64_t)&unk_1F3F47EC0);
}

uint64_t sub_1E3D82E20()
{
  return sub_1E3D82E2C((uint64_t)&unk_1F3F47EE8);
}

uint64_t sub_1E3D82E2C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3E7AAF0();
    swift_release();
    swift_release();
    swift_release();
    if (v4)
    {
      MPCPlayerResponseTracklist.itemsInSections(sections:)(a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE279C8);
      sub_1E3D85FAC();
      char v3 = sub_1E3E7D3C0();

      swift_bridgeObjectRelease();
    }
    else
    {
      char v3 = 0;
    }
    return v3 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MPCPlayerResponseTracklist.hasSoftQueue.getter()
{
  return sub_1E3D82F3C((uint64_t)&unk_1F3F47F10);
}

uint64_t sub_1E3D82F3C(uint64_t a1)
{
  MPCPlayerResponseTracklist.itemsInSections(sections:)(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE279C8);
  sub_1E3D85FAC();
  char v1 = sub_1E3E7D3C0();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1E3D82FA8()
{
  if (sub_1E3D82E08()) {
    return 1;
  }

  return sub_1E3D82E20();
}

uint64_t sub_1E3D82FE0(char *a1, void *a2)
{
  char v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3E7AAF0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v5 = v7;
    if (v7)
    {
      LOBYTE(v7) = v3;
      char v6 = MPCPlayerResponseTracklist.queueSectionContainsItem(queueSection:item:)((char *)&v7, a2);
    }
    else
    {
      char v6 = 0;
    }
    return v6 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MPCPlayerResponseTracklist.queueSectionContainsItem(queueSection:item:)(char *a1, void *a2)
{
  char v3 = v2;
  char v5 = *a1;
  unsigned __int8 v15 = 0;
  id v6 = objc_msgSend(v2, sel_displayItems);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v3;
  *(void *)(v7 + 32) = &v15;
  *(void *)(v7 + 40) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1E3D86048;
  *(void *)(v8 + 24) = v7;
  aBlock[4] = sub_1E3D86D48;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3D8372C;
  aBlock[3] = &block_descriptor_88;
  id v9 = _Block_copy(aBlock);
  id v10 = v3;
  id v11 = a2;
  sub_1E3E775E0();
  swift_release();
  objc_msgSend(v6, sel_enumerateSectionsUsingBlock_, v9);

  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = v15;
    swift_release();
    return v13;
  }
  return result;
}

uint64_t sub_1E3D83260()
{
  v10[0] = 0;
  v10[1] = 0;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3E7AAF0();
    swift_release();
    swift_release();
    swift_release();
    if (!aBlock[0])
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      goto LABEL_6;
    }
    id v2 = objc_msgSend(aBlock[0], sel_displayItems);

    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    *(void *)(v3 + 24) = v10;
    uint64_t v4 = (void *)swift_allocObject();
    v4[2] = sub_1E3D860A0;
    v4[3] = v3;
    aBlock[4] = sub_1E3D86D48;
    aBlock[5] = v4;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_1E3D8372C;
    aBlock[3] = &block_descriptor_98;
    char v5 = _Block_copy(aBlock);
    sub_1E3E775E0();
    sub_1E3E775E0();
    swift_release();
    objc_msgSend(v2, sel_enumerateSectionsUsingBlock_, v5);

    _Block_release(v5);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      uint64_t v7 = v10[0];
      uint64_t v8 = sub_1E3D860A0;
LABEL_6:
      sub_1E3C1A3C4((uint64_t)v8);
      return v7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1E3D83490(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t *a5)
{
  sub_1E3E7CD30();
  uint64_t v8 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  QueueModelSection.init(tracklistSection:)(v8, v21);
  if (v21[0] != 2)
  {
    if (v21[0])
    {
      char v9 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (!swift_weakLoadStrong()) {
      goto LABEL_20;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3E7AAF0();
    swift_release();
    swift_release();
    swift_release();
    if (v20)
    {
      id v10 = objc_msgSend(v20, sel_displayItems);

      id v11 = objc_msgSend(v10, sel_itemsInSectionAtIndex_, a2);
      sub_1E3C12B10(0, &qword_1EAE279D0);
      unint64_t v12 = sub_1E3E7D060();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1E3E7DFC0();
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_9;
        }
      }
      else if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        if ((v12 & 0xC000000000000001) != 0)
        {
          id v13 = (id)MEMORY[0x1E4E77720](0, v12);
          goto LABEL_12;
        }
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v13 = *(id *)(v12 + 32);
LABEL_12:
          uint64_t v14 = v13;
          swift_bridgeObjectRelease();
          id v15 = objc_msgSend(v14, sel_contentItemIdentifier);

          uint64_t v16 = sub_1E3E7CD30();
          uint64_t v18 = v17;

          *a5 = v16;
          a5[1] = v18;
LABEL_16:
          swift_bridgeObjectRelease();
          *a3 = 1;
          return;
        }
        __break(1u);
LABEL_20:
        __break(1u);
        return;
      }
      swift_bridgeObjectRelease();
    }
    *a5 = 0;
    a5[1] = 0;
    goto LABEL_16;
  }
}

void sub_1E3D8372C(uint64_t a1, void *a2)
{
  id v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_1E3D83790()
{
  *(void *)(v1 + 80) = v0;
  return MEMORY[0x1F4188298](sub_1E3D837B0, 0, 0);
}

uint64_t sub_1E3D837B0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *(void *)(v0 + 88) = result;
  if (result)
  {
    *(void *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
    *(void *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
    *(void *)(v0 + 16) = 5;
    *(unsigned char *)(v0 + 24) = 2;
    id v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *id v2 = v0;
    v2[1] = sub_1E3D838A0;
    return sub_1E3CD3A50(v0 + 16, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D838A0(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 104) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1E3D86D30, 0, 0);
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    char v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
}

uint64_t sub_1E3D83A14()
{
  *(void *)(v1 + 80) = v0;
  return MEMORY[0x1F4188298](sub_1E3D83A34, 0, 0);
}

uint64_t sub_1E3D83A34()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *(void *)(v0 + 88) = result;
  if (result)
  {
    *(void *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
    *(void *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 24) = 0;
    id v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *id v2 = v0;
    v2[1] = sub_1E3D838A0;
    return sub_1E3CD3A50(v0 + 16, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D83B1C()
{
  *(void *)(v1 + 48) = v0;
  return MEMORY[0x1F4188298](sub_1E3D83B3C, 0, 0);
}

uint64_t sub_1E3D83B3C()
{
  *(void *)(v0 + 40) = &unk_1F3F47F38;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 88) & 1) == 0) {
    sub_1E3CBE050(0, 0, 0, 2);
  }
  uint64_t result = swift_weakLoadStrong();
  *(void *)(v0 + 56) = result;
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v2 = sub_1E3C65554(*(void *)(v0 + 40));
  *(void *)(v0 + 64) = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1E3D83CC0;
  return sub_1E3CD6378(v2, 0);
}

uint64_t sub_1E3D83CC0()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3D86D28;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1E3D86D2C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t PlaybackController.QueueController.deinit()
{
  swift_weakDestroy();
  return v0;
}

uint64_t PlaybackController.QueueController.__deallocating_deinit()
{
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

void PlaybackController.QueueController.updatePlayerIfNeededForMarking(uuids:as:)(void *a1, uint64_t a2)
{
  if (!a2)
  {
    swift_beginAccess();
    if (!swift_weakLoadStrong())
    {
LABEL_12:
      __break(1u);
      return;
    }
    sub_1E3CD045C();
    swift_release();
    sub_1E3D80DEC((uint64_t)a1, (uint64_t)&unk_1F3F47F68);
    swift_release();
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    __break(1u);
    goto LABEL_12;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  if (v11)
  {
    id v4 = objc_msgSend(v11, sel_identifiers);
    id v5 = objc_msgSend(v4, sel_library);

    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_databaseID);
      swift_unknownObjectRelease();
      uint64_t v7 = sub_1E3E7CD30();
      uint64_t v9 = v8;

      char v10 = sub_1E3D84024(v7, v9, a1);
      swift_bridgeObjectRelease();
      if (v10) {
        sub_1E3D843DC(a2);
      }
    }
    else
    {
    }
  }
}

uint64_t sub_1E3D84024(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1E3E7E150();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1E3E7E150() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3D840EC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3D84150(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (a1) {
    uint64_t v4 = 0x7565755174666F73;
  }
  else {
    uint64_t v4 = 0x7565755164726168;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    if (*(unsigned char *)(a2 + v5 + 32)) {
      uint64_t v6 = 0x7565755174666F73;
    }
    else {
      uint64_t v6 = 0x7565755164726168;
    }
    if (v6 == v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v7 = sub_1E3E7E150();
    swift_bridgeObjectRelease_n();
    if (v7) {
      break;
    }
    if (v2 == ++v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1E3D84254(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1E3E7DFC0())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x1E4E77720](0, a2);
LABEL_5:
      uint64_t v6 = v5;
      sub_1E3C12B10(0, &qword_1EBFDEEB8);
      char v7 = sub_1E3E7DA80();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_1E3E7DA80();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x1E4E77720](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_1E3E7DA80();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1E3D843DC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v6 = sub_1E3E7D1E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    char v7 = (void *)swift_allocObject();
    v7[2] = 0;
    void v7[3] = 0;
    void v7[4] = v1;
    sub_1E3E775E0();
    uint64_t v8 = &unk_1EAE28368;
  }
  else if (sub_1E3D82E08() & 1) != 0 || (sub_1E3D82E20())
  {
    uint64_t v9 = sub_1E3E7D1E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
    char v7 = (void *)swift_allocObject();
    v7[2] = 0;
    void v7[3] = 0;
    void v7[4] = v1;
    sub_1E3E775E0();
    uint64_t v8 = &unk_1EAE28388;
  }
  else
  {
    uint64_t v10 = sub_1E3E7D1E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
    char v7 = (void *)swift_allocObject();
    v7[2] = 0;
    void v7[3] = 0;
    void v7[4] = v1;
    sub_1E3E775E0();
    uint64_t v8 = &unk_1EAE28378;
  }
  sub_1E3C4C288((uint64_t)v5, (uint64_t)v8, (uint64_t)v7);
  return swift_release();
}

uint64_t PlaybackController.QueueController.updatePlayerIfNeededForMarking(adamIDs:as:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v5 = 0;
    goto LABEL_8;
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  if (v15[0])
  {
    id v7 = objc_msgSend(v15[0], sel_displayItems);

    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = a1;
    uint64_t v9 = (void *)swift_allocObject();
    id v5 = sub_1E3D86100;
    v9[2] = sub_1E3D86100;
    v9[3] = v8;
    v15[4] = sub_1E3D86118;
    v15[5] = v9;
    v15[0] = (id)MEMORY[0x1E4F143A8];
    v15[1] = (id)1107296256;
    v15[2] = sub_1E3D849AC;
    void v15[3] = &block_descriptor_121;
    uint64_t v10 = _Block_copy(v15);
    sub_1E3E775E0();
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
    swift_release();
    objc_msgSend(v7, sel_enumerateItemsUsingBlock_, v10);

    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v7 & 1) == 0) {
      goto LABEL_8;
    }
    __break(1u);
  }
  id v5 = 0;
LABEL_8:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  id v11 = v16;
  if (v16)
  {
    id v12 = objc_msgSend(v16, sel_identifiers);
    id v13 = objc_msgSend(v12, sel_universalStore);

    if (v13)
    {
      objc_msgSend(v13, sel_adamID);
      swift_unknownObjectRelease();
      uint64_t v14 = sub_1E3E7A530();

      if (sub_1E3D840EC(v14, a1)) {
        sub_1E3D843DC(a2);
      }
    }
    else
    {
    }
  }
  return sub_1E3C1A3C4((uint64_t)v5);
}

uint64_t sub_1E3D84924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3CD045C();
    swift_release();
    sub_1E3D806BC(a5, (uint64_t)&unk_1F3F47F90);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D849AC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1E3E77FE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void (**)(void))(a1 + 32);
  sub_1E3E77FB0();
  id v9 = a2;
  v8();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void PlaybackController.QueueController.updatePlayerIfNeededForMarking(playerItems:as:)(unint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  if (!v50)
  {
LABEL_27:
    if (!swift_weakLoadStrong())
    {
LABEL_64:
      __break(1u);
      return;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3E7AAF0();
    swift_release();
    swift_release();
    swift_release();
    if (!v50) {
      return;
    }
    id v27 = objc_msgSend(v50, sel_identifiers);
    id v28 = objc_msgSend(v27, sel_universalStore);

    if (!v28)
    {

      return;
    }
    objc_msgSend(v28, sel_adamID);
    swift_unknownObjectRelease();
    sub_1E3E7A530();

    if (!(a1 >> 62))
    {
      uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v29)
      {
LABEL_58:
        uint64_t v49 = (void *)MEMORY[0x1E4FBC860];
LABEL_59:
        swift_bridgeObjectRelease();
        PlaybackController.QueueController.updatePlayerIfNeededForMarking(adamIDs:as:)((uint64_t)v49, a2);
        goto LABEL_60;
      }
      goto LABEL_32;
    }
LABEL_57:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1E3E7DFC0();
    if (!v29) {
      goto LABEL_58;
    }
LABEL_32:
    if (v29 >= 1)
    {
      uint64_t v30 = 0;
      uint64_t v49 = (void *)MEMORY[0x1E4FBC860];
      id v31 = &selRef_setView_;
      uint64_t v32 = &selRef_setView_;
      id v33 = &selRef__addCategoryMethod_toClass_isClass_;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v34 = (id)MEMORY[0x1E4E77720](v30, a1);
        }
        else {
          id v34 = *(id *)(a1 + 8 * v30 + 32);
        }
        uint64_t v35 = v34;
        id v36 = [v34 v31[195]];
        if (v36
          && (uint64_t v37 = v36, v38 = [v36 v32[196]], v37, v38)
          && (id v39 = [v38 v33[220]], v38, v39))
        {
          self;
          uint64_t v40 = (void *)swift_dynamicCastObjCClass();
          if (v40)
          {
            id v41 = v31;
            id v42 = v32;
            id v43 = objc_msgSend(v40, sel_identifiers);
            id v44 = objc_msgSend(v43, sel_universalStore);

            if (v44)
            {
              objc_msgSend(v44, sel_adamID);
              swift_unknownObjectRelease();
              uint64_t v45 = sub_1E3E7A530();

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v49 = sub_1E3CB7D48(0, v49[2] + 1, 1, v49);
              }
              unint64_t v47 = v49[2];
              unint64_t v46 = v49[3];
              if (v47 >= v46 >> 1) {
                uint64_t v49 = sub_1E3CB7D48((void *)(v46 > 1), v47 + 1, 1, v49);
              }
              v49[2] = v47 + 1;
              v49[v47 + 4] = v45;
            }
            else
            {
            }
            uint64_t v32 = v42;
            id v31 = v41;
            id v33 = &selRef__addCategoryMethod_toClass_isClass_;
          }
          else
          {
          }
        }
        else
        {
        }
        ++v30;
      }
      while (v29 != v30);
      goto LABEL_59;
    }
    __break(1u);
    goto LABEL_63;
  }
  id v3 = objc_msgSend(v50, sel_identifiers);
  uint64_t v4 = &selRef_setView_;
  id v5 = objc_msgSend(v3, sel_library);

  if (!v5)
  {

    goto LABEL_27;
  }
  id v6 = objc_msgSend(v5, sel_databaseID);

  swift_unknownObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E3E7DFC0();
    if (v7) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_6:
      if (v7 >= 1)
      {
        uint64_t v8 = 0;
        id v9 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v10 = &selRef_setView_;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v11 = (id)MEMORY[0x1E4E77720](v8, a1);
          }
          else {
            id v11 = *(id *)(a1 + 8 * v8 + 32);
          }
          id v12 = v11;
          id v13 = [v11 v10[195]];
          if (v13
            && (uint64_t v14 = v13,
                id v15 = objc_msgSend(v13, sel_flattenedGenericObject),
                v14,
                v15)
            && (id v16 = objc_msgSend(v15, sel_anyObject), v15, v16))
          {
            self;
            uint64_t v17 = (void *)swift_dynamicCastObjCClass();
            if (v17)
            {
              id v18 = objc_msgSend(v17, sel_identifiers);
              id v19 = [v18 v4[90]];

              if (v19)
              {
                id v20 = objc_msgSend(v19, sel_databaseID);
                swift_unknownObjectRelease();
                uint64_t v21 = sub_1E3E7CD30();
                uint64_t v23 = v22;

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  id v9 = sub_1E3CB7240(0, v9[2] + 1, 1, v9);
                }
                unint64_t v25 = v9[2];
                unint64_t v24 = v9[3];
                if (v25 >= v24 >> 1) {
                  id v9 = sub_1E3CB7240((void *)(v24 > 1), v25 + 1, 1, v9);
                }
                v9[2] = v25 + 1;
                uint64_t v26 = &v9[2 * v25];
                v26[4] = v21;
                v26[5] = v23;
                uint64_t v4 = &selRef_setView_;
              }
              else
              {
              }
              uint64_t v10 = &selRef_setView_;
            }
            else
            {
            }
          }
          else
          {
          }
          ++v8;
        }
        while (v7 != v8);
        goto LABEL_55;
      }
      __break(1u);
      goto LABEL_57;
    }
  }
  id v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_55:
  swift_bridgeObjectRelease();
  PlaybackController.QueueController.updatePlayerIfNeededForMarking(uuids:as:)(v9, a2);
LABEL_60:
  swift_bridgeObjectRelease();
}

uint64_t sub_1E3D85148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 80) = a4;
  return MEMORY[0x1F4188298](sub_1E3D837B0, 0, 0);
}

uint64_t sub_1E3D85168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  return MEMORY[0x1F4188298](sub_1E3D85188, 0, 0);
}

uint64_t sub_1E3D85188()
{
  *(void *)(v0 + 40) = &unk_1F3F47FB8;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 88) & 1) == 0) {
    sub_1E3CBE050(0, 0, 0, 2);
  }
  uint64_t result = swift_weakLoadStrong();
  *(void *)(v0 + 56) = result;
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v2 = sub_1E3C65554(*(void *)(v0 + 40));
  *(void *)(v0 + 64) = v2;
  swift_bridgeObjectRelease();
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  *id v3 = v0;
  v3[1] = sub_1E3D8530C;
  return sub_1E3CD6378(v2, 0);
}

uint64_t sub_1E3D8530C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3D85460;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1E3D85448;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3D85448()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E3D85460()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3D854CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 80) = a4;
  return MEMORY[0x1F4188298](sub_1E3D854EC, 0, 0);
}

uint64_t sub_1E3D854EC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *(void *)(v0 + 88) = result;
  if (result)
  {
    *(void *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
    *(void *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 24) = 0;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1E3D855D4;
    return sub_1E3CD3A50(v0 + 16, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3D855D4(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 104) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1E3D85748, 0, 0);
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    id v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
}

uint64_t sub_1E3D85748()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t MPCPlayerResponseTracklist.hardQueueItems.getter()
{
  return MPCPlayerResponseTracklist.itemsInSections(sections:)((uint64_t)&unk_1F3F47FE8);
}

uint64_t MPCPlayerResponseTracklist.softQueueItems.getter()
{
  return MPCPlayerResponseTracklist.itemsInSections(sections:)((uint64_t)&unk_1F3F48010);
}

void sub_1E3D857C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  sub_1E3E7CD30();
  id v9 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  QueueModelSection.init(tracklistSection:)(v9, &v13);
  if (v13 != 2 && (sub_1E3D84150(v13 & 1, a4) & 1) != 0)
  {
    id v10 = objc_msgSend(a6, sel_displayItems);
    id v11 = objc_msgSend(v10, sel_itemsInSectionAtIndex_, a2);

    sub_1E3C12B10(0, &qword_1EAE279D0);
    unint64_t v12 = sub_1E3E7D060();

    sub_1E3D3A920(v12);
  }
}

void sub_1E3D858B8(uint64_t a1, uint64_t a2, unsigned char *a3, char a4, void *a5, unsigned char *a6, void *a7)
{
  sub_1E3E7CD30();
  char v13 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  QueueModelSection.init(tracklistSection:)(v13, &v22);
  if (v22 != 2)
  {
    if (v22) {
      uint64_t v14 = 0x7565755174666F73;
    }
    else {
      uint64_t v14 = 0x7565755164726168;
    }
    if (a4) {
      uint64_t v15 = 0x7565755174666F73;
    }
    else {
      uint64_t v15 = 0x7565755164726168;
    }
    if (v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = sub_1E3E7E150();
      swift_bridgeObjectRelease_n();
      if ((v16 & 1) == 0) {
        return;
      }
    }
    id v17 = objc_msgSend(a5, sel_displayItems);
    id v18 = objc_msgSend(v17, sel_itemsInSectionAtIndex_, a2);

    sub_1E3C12B10(0, &qword_1EAE279D0);
    unint64_t v19 = sub_1E3E7D060();

    id v20 = a7;
    char v21 = sub_1E3D85C2C(v19, v20);
    swift_bridgeObjectRelease();

    *a6 = v21 & 1;
    *a3 = 1;
  }
}

void sub_1E3D85A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1E3D857C4(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_1E3D85A70()
{
  return swift_deallocObject();
}

uint64_t sub_1E3D85A80()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1E3D85AAC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1E3C50ED4;
  return sub_1E3D81EFC(a1, v4, v5, v7, v6);
}

uint64_t sub_1E3D85B70()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_17Tm()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3D85BC4()
{
  return swift_deallocObject();
}

uint64_t sub_1E3D85BD4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1E3D85C1C(void *a1)
{
  sub_1E3D81840(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1E3D85C2C(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1E3E7DFC0();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v21 = v2;
      unint64_t v22 = v2 & 0xC000000000000001;
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if (v22)
        {
          id v6 = (id)MEMORY[0x1E4E77720](v4 - 4, v2);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v6 = *(id *)(v2 + 8 * v4);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v8 = v3;
        id v9 = v6;
        id v10 = objc_msgSend(v6, sel_contentItemIdentifier);
        uint64_t v11 = sub_1E3E7CD30();
        uint64_t v13 = v12;

        id v14 = objc_msgSend(a2, sel_contentItemIdentifier);
        uint64_t v15 = sub_1E3E7CD30();
        uint64_t v17 = v16;

        BOOL v18 = v11 == v15 && v13 == v17;
        if (v18)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          char v19 = 1;
          goto LABEL_22;
        }
        char v19 = sub_1E3E7E150();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          ++v4;
          uint64_t v3 = v8;
          BOOL v18 = v7 == v8;
          unint64_t v2 = v21;
          if (!v18) {
            continue;
          }
        }
        goto LABEL_22;
      }
    }
  }
  char v19 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v19 & 1;
}

void *sub_1E3D85DF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1E3E7DFC0();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          id v10 = (id)MEMORY[0x1E4E77720](v4 - 4, v7);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = objc_msgSend(v10, sel_contentItemIdentifier, v22);
        uint64_t v16 = sub_1E3E7CD30();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = sub_1E3E7E150();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1E3D85FAC()
{
  unint64_t result = qword_1EAE279D8;
  if (!qword_1EAE279D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE279C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE279D8);
  }
  return result;
}

uint64_t sub_1E3D86008()
{
  return swift_deallocObject();
}

void sub_1E3D86048(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_1E3D858B8(a1, a2, a3, *(unsigned char *)(v3 + 16), *(void **)(v3 + 24), *(unsigned char **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1E3D86058()
{
  return swift_deallocObject();
}

uint64_t sub_1E3D86068()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3D860A0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_1E3D83490(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t **)(v3 + 24));
}

uint64_t sub_1E3D860A8()
{
  return swift_deallocObject();
}

uint64_t sub_1E3D860C0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3D86100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3D84924(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1E3D86108()
{
  return swift_deallocObject();
}

uint64_t sub_1E3D86118()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1E3D86140@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1E3D86190()
{
  return swift_weakAssign();
}

uint64_t type metadata accessor for PlaybackController.QueueController()
{
  return self;
}

uint64_t method lookup function for PlaybackController.QueueController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlaybackController.QueueController);
}

uint64_t dispatch thunk of PlaybackController.QueueController.playbackController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.addToQueue(adamIds:location:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.canRemoveItemFromQueue(_:)(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 144) + **(int **)(*(void *)v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1E3D8638C;
  return v6(a1);
}

uint64_t sub_1E3D8638C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of PlaybackController.QueueController.removeMatchingQueueItems(with:from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.changeToItemAndPlay(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 184) + **(int **)(*(void *)v1 + 184));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1E3C50ED4;
  return v6(a1);
}

uint64_t dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hasSoftQueue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hasQueueItems.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hardQueueFirstItemContentID.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.moveToNextItem()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 232) + **(int **)(*(void *)v0 + 232));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C50ED4;
  return v4();
}

uint64_t dispatch thunk of PlaybackController.QueueController.restartCurrentEpisode()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 240) + **(int **)(*(void *)v0 + 240));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C50ED4;
  return v4();
}

uint64_t dispatch thunk of PlaybackController.QueueController.moveToItemEnd()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 248) + **(int **)(*(void *)v0 + 248));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C50ED4;
  return v4();
}

uint64_t sub_1E3D869B0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C50ED4;
  v3[10] = v2;
  return MEMORY[0x1F4188298](sub_1E3D854EC, 0, 0);
}

uint64_t sub_1E3D86A60()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C50ED4;
  v3[6] = v2;
  return MEMORY[0x1F4188298](sub_1E3D85188, 0, 0);
}

uint64_t sub_1E3D86B10()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C50ED4;
  v3[10] = v2;
  return MEMORY[0x1F4188298](sub_1E3D837B0, 0, 0);
}

uint64_t objectdestroy_23Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3D86C08(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1E3C19DC4;
  return sub_1E3D81EFC(a1, v4, v5, v7, v6);
}

uint64_t sub_1E3D86CC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t NowPlayingArtwork.Placement.rawValue.getter()
{
  uint64_t result = 0x7972616D697270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x617461646174656DLL;
      break;
    case 2:
      uint64_t result = 0x746E65436F666E69;
      break;
    case 3:
      uint64_t result = 0x65676150776F6873;
      break;
    case 4:
      uint64_t result = 0x706F72646B636162;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t NowPlayingArtwork.Placement.priority.getter()
{
  return swift_bridgeObjectRetain();
}

double NowPlayingArtwork.Placement.preferredSize.getter()
{
  if (*v0 != 3) {
    return 600.0;
  }
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v22.origin.x = v4;
  v22.origin.y = v6;
  v22.size.width = v8;
  v22.size.height = v10;
  double Width = CGRectGetWidth(v22);
  id v12 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v12, sel_bounds);
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  v23.origin.x = v14;
  v23.origin.y = v16;
  v23.size.width = v18;
  v23.size.height = v20;
  CGRectGetHeight(v23);
  return Width;
}

uint64_t NowPlayingArtwork.Placement.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1E3E7E050();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 5;
  if (v2 < 5) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1E3D86F98(unsigned __int8 *a1, char *a2)
{
  return sub_1E3E51194(*a1, *a2);
}

unint64_t sub_1E3D86FA8()
{
  unint64_t result = qword_1EAE28398;
  if (!qword_1EAE28398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28398);
  }
  return result;
}

uint64_t sub_1E3D86FFC()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3D87100()
{
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3D871EC()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3D872EC@<X0>(char *a1@<X8>)
{
  return NowPlayingArtwork.Placement.init(rawValue:)(a1);
}

void sub_1E3D872F8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x7972616D697270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x617461646174656DLL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x746E65436F666E69;
      *(void *)(a1 + 8) = 0xEA00000000007265;
      break;
    case 3:
      strcpy((char *)a1, "showPageTall");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 4:
      *(void *)a1 = 0x706F72646B636162;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t _s9PlacementOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9PlacementOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3D8751CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork.Placement()
{
  return &type metadata for NowPlayingArtwork.Placement;
}

uint64_t StoreLibraryMultiplexingImageProvider.storeProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + 16, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.libraryProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + 56, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.artworkLoaderProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + 96, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.compositeProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + 136, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.sizeBucketingStrategy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + 176, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.assetCaches.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3D72D8C(v1 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_assetCaches, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.__allocating_init(storeProvider:libraryProvider:artworkLoaderProvider:compositeProvider:sizeBucketingStrategy:caches:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  StoreLibraryMultiplexingImageProvider.init(storeProvider:libraryProvider:artworkLoaderProvider:compositeProvider:sizeBucketingStrategy:caches:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t StoreLibraryMultiplexingImageProvider.init(storeProvider:libraryProvider:artworkLoaderProvider:compositeProvider:sizeBucketingStrategy:caches:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_1E3E7A6D0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  CGFloat v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C1B2BC(a1, v6 + 16);
  sub_1E3C1B2BC(a2, v6 + 56);
  sub_1E3C1B2BC(a3, v6 + 96);
  sub_1E3C1B2BC(a4, v6 + 136);
  sub_1E3C1B2BC(a5, v6 + 176);
  sub_1E3D72D8C(a6, v6 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_assetCaches);
  sub_1E3E7A680();
  sub_1E3CE657C(a6, (uint64_t (*)(void))type metadata accessor for AssetCaches);
  __swift_destroy_boxed_opaque_existential_0(a5);
  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v6 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_signposter, v16, v13);
  return v6;
}

uint64_t StoreLibraryMultiplexingImageProvider.load(artwork:)(uint64_t a1)
{
  uint64_t v108 = a1;
  uint64_t v2 = sub_1E3E78E70();
  uint64_t v93 = *(void *)(v2 - 8);
  uint64_t v94 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v91 = v3;
  uint64_t v92 = &v83[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE03E0);
  uint64_t v102 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v101 = &v83[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v89 = sub_1E3E7A6E0();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v87 = &v83[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v99 = sub_1E3E7A640();
  uint64_t v7 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v106 = &v83[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v103 = &v83[-v10];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v83[-v12];
  uint64_t v14 = sub_1E3E7A6D0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v105 = &v83[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  double v19 = &v83[-v18];
  double v21 = MEMORY[0x1F4188790](v20);
  CGRect v23 = &v83[-v22];
  uint64_t v100 = v1;
  uint64_t v24 = v1 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_signposter;
  unint64_t v25 = *(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16);
  v25(&v83[-v22], v24, v14, v21);
  uint64_t v97 = (void (*)(unsigned char *, uint64_t))v25;
  uint64_t v98 = v24;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v25)(v19, v24, v14);
  sub_1E3E7A6A0();
  sub_1E3E7A610();
  uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
  uint64_t v107 = v15 + 8;
  uint64_t v104 = v26;
  v26(v19, v14);
  id v27 = sub_1E3E7A6A0();
  os_signpost_type_t v28 = sub_1E3E7D760();
  char v29 = sub_1E3E7DB50();
  uint64_t v95 = v4;
  os_log_t v96 = v23;
  if (v29)
  {
    uint64_t v90 = v7;
    uint64_t v30 = *(unsigned char **)(v7 + 16);
    unint64_t v86 = v13;
    uint64_t v31 = v99;
    uint64_t v32 = v103;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v30)(v103, v13, v99);
    id v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v33 = 0;
    os_signpost_id_t v34 = sub_1E3E7A620();
    os_signpost_type_t v35 = v28;
    unint64_t v36 = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v27, v35, v34, "MultiplexerImageProviderCreatePublisher", "", v33, 2u);
    MEMORY[0x1E4E79510](v33, -1, -1);

    uint64_t v37 = v90;
    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v32, v31);
    id v38 = v32;
    uint64_t v39 = v31;
    uint64_t v13 = v86;
  }
  else
  {

    uint64_t v30 = *(unsigned char **)(v7 + 16);
    unint64_t v36 = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v37 = v7;
    id v38 = v103;
    uint64_t v39 = v99;
  }
  unint64_t v85 = v36;
  unint64_t v86 = v30;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v30)(v38, v13, v39);
  sub_1E3E7A720();
  swift_allocObject();
  uint64_t v40 = sub_1E3E7A710();
  id v41 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
  v41(v13, v39);
  id v42 = v104;
  v104(v96, v14);
  uint64_t v100 = sub_1E3D88214(v108);
  uint64_t v43 = v14;
  id v44 = v105;
  uint64_t v45 = v98;
  uint64_t v98 = v43;
  v97(v105, v45);
  uint64_t v46 = sub_1E3E7A6A0();
  unint64_t v47 = v106;
  sub_1E3E7A700();
  uint64_t v48 = v37 + 8;
  uint64_t v49 = v46;
  int v50 = sub_1E3E7D750();
  char v51 = sub_1E3E7DB50();
  uint64_t v52 = v39;
  uint64_t v99 = v40;
  if (v51)
  {
    int v84 = v50;
    os_log_t v96 = v49;
    uint64_t v97 = v41;
    uint64_t v53 = (void (*)(unsigned char *, unsigned char *, uint64_t))v86;
    uint64_t v54 = v103;
    uint64_t v90 = v48;
    sub_1E3E775E0();
    uint64_t v55 = v87;
    sub_1E3E7A730();
    swift_release();
    uint64_t v56 = v88;
    uint64_t v57 = v89;
    int v58 = (*(uint64_t (**)(unsigned char *, uint64_t))(v88 + 88))(v55, v89);
    unint64_t v59 = v92;
    uint64_t v60 = v98;
    if (v58 == *MEMORY[0x1E4FBD340])
    {
      uint64_t v61 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v55, v57);
      uint64_t v61 = "SUCCESS";
    }
    uint64_t v67 = v106;
    v53(v54, v106, v39);
    BOOL v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v68 = 0;
    os_signpost_id_t v69 = sub_1E3E7A620();
    os_log_t v70 = v96;
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v96, (os_signpost_type_t)v84, v69, "MultiplexerImageProviderCreatePublisher", v61, v68, 2u);
    v71 = v68;
    uint64_t v66 = v108;
    MEMORY[0x1E4E79510](v71, -1, -1);

    uint64_t v72 = v97;
    v97(v67, v52);
    v104(v105, v60);
    v72(v54, v52);
    uint64_t v62 = v94;
    uint64_t v63 = v95;
    uint64_t v64 = v93;
    uint64_t v65 = v91;
  }
  else
  {

    v41(v47, v39);
    v42(v44, v98);
    uint64_t v62 = v94;
    uint64_t v63 = v95;
    unint64_t v59 = v92;
    uint64_t v64 = v93;
    uint64_t v65 = v91;
    uint64_t v66 = v108;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0780);
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 24) = 0;
  *(void *)(v73 + 32) = 0;
  *(void *)(v73 + 16) = 0;
  *(_DWORD *)(v73 + 40) = 0;
  uint64_t v109 = v100;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v64 + 16))(v59, v66, v62);
  unint64_t v74 = (*(unsigned __int8 *)(v64 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = v73;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v64 + 32))(v75 + v74, v59, v62);
  unint64_t v76 = v75 + ((v65 + v74 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v76 = "SLMultiplexingImageProvider";
  *(void *)(v76 + 8) = 27;
  *(unsigned char *)(v76 + 16) = 2;
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = v73;
  *(void *)(v77 + 24) = "SLMultiplexingImageProvider";
  *(void *)(v77 + 32) = 27;
  *(unsigned char *)(v77 + 40) = 2;
  uint64_t v78 = swift_allocObject();
  *(void *)(v78 + 16) = v73;
  *(void *)(v78 + 24) = "SLMultiplexingImageProvider";
  *(void *)(v78 + 32) = 27;
  *(unsigned char *)(v78 + 40) = 2;
  uint64_t v79 = swift_allocObject();
  *(void *)(v79 + 16) = v73;
  *(void *)(v79 + 24) = "SLMultiplexingImageProvider";
  *(void *)(v79 + 32) = 27;
  *(unsigned char *)(v79 + 40) = 2;
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2408);
  sub_1E3C10DE8(&qword_1EBFE2400, &qword_1EBFE2408);
  uint64_t v80 = v101;
  sub_1E3E7AB90();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1E3C10DE8(&qword_1EBFE03D8, (uint64_t *)&unk_1EBFE03E0);
  uint64_t v81 = sub_1E3E7AB70();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v102 + 8))(v80, v63);
  return v81;
}

uint64_t sub_1E3D88214(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E78740();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (void *)((char *)v35 - v8);
  v35[0] = sub_1E3E78E70();
  uint64_t v10 = *(void *)(v35[0] - 8);
  MEMORY[0x1F4188790](v35[0]);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v1 + 22, v1[25]);
  sub_1E3E78D20();
  sub_1E3E7A230();
  sub_1E3E78E40();
  sub_1E3E78E00();
  uint64_t v14 = *v9;
  uint64_t v13 = v9[1];
  swift_bridgeObjectRetain();
  sub_1E3CE657C((uint64_t)v9, MEMORY[0x1E4F915F0]);
  if (v14 == sub_1E3E786E0() && v13 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v17 = sub_1E3E7E150();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_10:
    sub_1E3E78D20();
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v25;
    *(void *)(v28 + 24) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6380);
    swift_allocObject();
    v35[1] = sub_1E3E7AA90();
    sub_1E3C10DE8(&qword_1EBFE6378, &qword_1EBFE6380);
    uint64_t v29 = sub_1E3E7AB70();
    swift_release();
    goto LABEL_17;
  }
  uint64_t v18 = self;
  if (objc_msgSend(v18, sel_supportsLocalLibrary)
    && (sub_1E3E78E00(),
        swift_bridgeObjectRetain(),
        sub_1E3CE657C((uint64_t)v6, MEMORY[0x1E4F915F0]),
        sub_1E3E786F0(),
        char v19 = sub_1E3E7CF30(),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v19 & 1) != 0))
  {
    uint64_t v20 = v2 + 17;
    uint64_t v22 = v2[20];
    uint64_t v21 = v2[21];
    __swift_project_boxed_opaque_existential_1(v20, v22);
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 8))(a1, v22, v21);
  }
  else
  {
    uint64_t v23 = sub_1E3D89F7C((uint64_t)v12);
    if (!v23)
    {
      if (!objc_msgSend(v18, sel_supportsLocalLibrary)
        || (sub_1E3E78E00(), int v30 = v6[32], sub_1E3CE657C((uint64_t)v6, MEMORY[0x1E4F915F0]), v30 == 255))
      {
        uint64_t v31 = v2 + 2;
        uint64_t v33 = v2[5];
        uint64_t v32 = v2[6];
        __swift_project_boxed_opaque_existential_1(v31, v33);
        uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 8))(v12, v33, v32);
      }
      else
      {
        uint64_t v23 = sub_1E3D8A174((uint64_t)v12);
      }
    }
  }
  uint64_t v29 = v23;
LABEL_17:
  (*(void (**)(char *, void))(v10 + 8))(v12, v35[0]);
  return v29;
}

void sub_1E3D88620(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, int a5)
{
  LODWORD(v56) = a5;
  unint64_t v59 = (char *)a3;
  uint64_t v57 = a2;
  uint64_t v6 = sub_1E3E7A640();
  uint64_t v58 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v46[-v10];
  uint64_t v12 = sub_1E3E7A6D0();
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  char v17 = &v46[-v16];
  uint64_t v18 = sub_1E3E77E50();
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = &v46[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*v19)
  {
    os_log_t v48 = v20;
    char v51 = (void (*)(void, void))v14;
    uint64_t v52 = v12;
    uint64_t v53 = v8;
    uint64_t v54 = v17;
    uint64_t v55 = v11;
    uint64_t v23 = v19;
    uint64_t v50 = v5;
    sub_1E3E78E10();
    if (v63)
    {
      __swift_project_boxed_opaque_existential_1(v62, v63);
      uint64_t v57 = sub_1E3E7A4C0();
      unint64_t v25 = v24;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
    }
    else
    {
      sub_1E3C10CE0((uint64_t)v62, &qword_1EBFE6360);
      sub_1E3E77E40();
      uint64_t v57 = sub_1E3E77E30();
      unint64_t v25 = v26;
      ((void (*)(unsigned char *, uint64_t))v48[1].isa)(v22, v18);
    }
    uint64_t v27 = v23;
    uint64_t v28 = v51;
    sub_1E3E7A680();
    sub_1E3E7A680();
    sub_1E3E7A6A0();
    sub_1E3E7A610();
    uint64_t v29 = v60 + 8;
    uint64_t v30 = v52;
    char v51 = *(void (**)(void, void))(v60 + 8);
    v51(v28, v52);
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_1E3E7A6A0();
    int v32 = sub_1E3E7D760();
    char v33 = sub_1E3E7DB50();
    os_signpost_id_t v34 = v53;
    uint64_t v49 = v27;
    if ((v33 & 1) == 0) {
      goto LABEL_9;
    }
    os_log_t v48 = v31;
    uint64_t v35 = v58;
    uint64_t v60 = v29;
    int v47 = v32;
    if ((v56 & 1) == 0)
    {
      if (!v59)
      {
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_9:
        swift_bridgeObjectRelease_n();

        uint64_t v35 = v58;
        unint64_t v36 = v55;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 16))(v34, v55, v6);
LABEL_15:
        sub_1E3E7A720();
        swift_allocObject();
        uint64_t v43 = sub_1E3E7A710();
        (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v36, v6);
        v51(v54, v30);
        id v44 = v49;
        uint64_t v45 = v57;
        *uint64_t v49 = v43;
        v44[1] = v45;
        v44[2] = v25;
        return;
      }
LABEL_14:
      unint64_t v36 = v55;
      uint64_t v56 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 16);
      v56(v53, v55, v6);
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v62[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1E3C150B8(v57, v25, v62);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      os_signpost_id_t v39 = sub_1E3E7A620();
      os_log_t v40 = v48;
      _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v48, (os_signpost_type_t)v47, v39, v59, "[identifier=%{name=identifier}s] StoreLibraryMultiplexingImageProviderFetch", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v38, -1, -1);
      id v41 = v37;
      id v42 = v53;
      MEMORY[0x1E4E79510](v41, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v42, v6);
      uint64_t v30 = v52;
      v56(v42, v36, v6);
      goto LABEL_15;
    }
    if ((unint64_t)v59 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v59 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        return;
      }
      if (v59 >> 16 <= 0x10)
      {
        unint64_t v59 = &v64;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
}

void sub_1E3D88BAC(void *a1, const char *a2, uint64_t a3, int a4)
{
  LODWORD(v41) = a4;
  uint64_t v45 = (char *)a2;
  uint64_t v6 = sub_1E3E7A6E0();
  id v42 = *(unsigned char **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1E3E7A640();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v44 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v32[-v13];
  uint64_t v15 = sub_1E3E7A6D0();
  MEMORY[0x1F4188790](v15);
  char v19 = &v32[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1)
  {
    uint64_t v37 = v10;
    uint64_t v38 = v17;
    uint64_t v39 = v16;
    uint64_t v40 = v4;
    uint64_t v43 = v9;
    unint64_t v20 = a1[2];
    uint64_t v35 = a1[1];
    sub_1E3E7A680();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_1E3E7A6A0();
    sub_1E3E7A700();
    int v36 = sub_1E3E7D750();
    if ((sub_1E3E7DB50() & 1) == 0)
    {
LABEL_6:
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v14, v43);
      (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v19, v39);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_15:
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
      return;
    }
    os_log_t v34 = v21;
    if ((v41 & 1) == 0)
    {
      uint64_t v22 = v42;
      if (!v45)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        __break(1u);
        goto LABEL_6;
      }
LABEL_11:
      id v42 = v14;
      sub_1E3E775E0();
      sub_1E3E7A730();
      swift_release();
      unint64_t v23 = v20;
      if ((*((unsigned int (**)(unsigned char *, uint64_t))v22 + 11))(v8, v6) == *MEMORY[0x1E4FBD340])
      {
        char v24 = 0;
        int v33 = 0;
        id v41 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(unsigned char *, uint64_t))v22 + 1))(v8, v6);
        id v41 = "[identifier=%{name=identifier}s] SUCCESS";
        int v33 = 2;
        char v24 = 1;
      }
      uint64_t v25 = v37;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 16))(v44, v42, v43);
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v47 = v27;
      *(unsigned char *)uint64_t v26 = v33;
      *(unsigned char *)(v26 + 1) = v24;
      *(_WORD *)(v26 + 2) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1E3C150B8(v35, v23, &v47);
      sub_1E3E7DBD0();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      os_signpost_id_t v28 = sub_1E3E7A620();
      os_log_t v29 = v34;
      _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v34, (os_signpost_type_t)v36, v28, v45, v41, (uint8_t *)v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v27, -1, -1);
      MEMORY[0x1E4E79510](v26, -1, -1);

      uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
      uint64_t v31 = v43;
      v30(v42, v43);
      (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v19, v39);
      swift_bridgeObjectRelease();
      swift_release();
      v30(v44, v31);
      goto LABEL_15;
    }
    uint64_t v22 = v42;
    if ((unint64_t)v45 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v45 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        return;
      }
      if (v45 >> 16 <= 0x10)
      {
        uint64_t v45 = &v48;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
}

void sub_1E3D890DC(uint64_t a1, os_unfair_lock_s *a2)
{
  uint64_t v2 = (uint64_t)&a2[4];
  uint64_t v3 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1E3D8B0AC(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1E3D89140(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v73 = (char *)a3;
  uint64_t v7 = (const char *)sub_1E3E7A6E0();
  os_signpost_id_t v69 = (char *)*((void *)v7 - 1);
  os_log_t v70 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v61 - v11;
  uint64_t v74 = sub_1E3E7A640();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v14 = ((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  v71 = (char *)&v61 - v16;
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)&v61 - v18;
  uint64_t v20 = sub_1E3E7A6D0();
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  os_signpost_id_t v28 = ((char *)&v61 - v27);
  if (*v25)
  {
    uint64_t v66 = v26;
    uint64_t v67 = v24;
    int v65 = a5;
    unint64_t v29 = v25[2];
    uint64_t v64 = v25[1];
    BOOL v68 = v25;
    if (!a2) {
      goto LABEL_7;
    }
    sub_1E3E7A680();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    os_signpost_id_t v28 = sub_1E3E7A6A0();
    sub_1E3E7A700();
    uint64_t v12 = (char *)sub_1E3E7D750();
    if ((sub_1E3E7DB50() & 1) == 0)
    {
LABEL_11:
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(NSObject *, uint64_t))(v72 + 8))(v14, v74);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v22, v67);
LABEL_13:
      swift_bridgeObjectRelease();
      swift_release();
LABEL_30:
      uint64_t v60 = v68;
      void *v68 = 0;
      v60[1] = 0;
      v60[2] = 0;
      return;
    }
    int v62 = (int)v12;
    if ((v65 & 1) == 0)
    {
      if (!v73)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        __break(1u);
LABEL_7:
        sub_1E3E7A680();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v14 = sub_1E3E7A6A0();
        sub_1E3E7A700();
        int v30 = sub_1E3E7D750();
        if ((sub_1E3E7DB50() & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          swift_release_n();

          (*(void (**)(char *, uint64_t))(v72 + 8))(v19, v74);
          (*(void (**)(NSObject *, uint64_t))(v66 + 8))(v28, v67);
          goto LABEL_13;
        }
        unint64_t v63 = v29;
        if ((v65 & 1) == 0)
        {
          uint64_t v22 = v69;
          uint64_t v31 = v70;
          if (!v73)
          {
            swift_bridgeObjectRelease_n();
            swift_release_n();
            __break(1u);
            goto LABEL_11;
          }
LABEL_26:
          sub_1E3E775E0();
          sub_1E3E7A730();
          swift_release();
          int v48 = (*((uint64_t (**)(char *, const char *))v22 + 11))(v12, v31);
          int v49 = *MEMORY[0x1E4FBD340];
          int v62 = v30;
          os_log_t v61 = v14;
          if (v48 == v49)
          {
            char v50 = 0;
            char v51 = 0;
            os_log_t v70 = "[Error] Interval already ended";
          }
          else
          {
            (*((void (**)(char *, const char *))v22 + 1))(v12, v31);
            os_log_t v70 = "[identifier=%{name=identifier}s] EMPTY";
            char v51 = 2;
            char v50 = 1;
          }
          uint64_t v52 = v72;
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v19, v74);
          uint64_t v53 = swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          uint64_t v76 = v54;
          *(unsigned char *)uint64_t v53 = v51;
          *(unsigned char *)(v53 + 1) = v50;
          *(_WORD *)(v53 + 2) = 2080;
          unint64_t v55 = v63;
          swift_bridgeObjectRetain();
          uint64_t v75 = sub_1E3C150B8(v64, v55, &v76);
          sub_1E3E7DBD0();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          os_signpost_id_t v56 = sub_1E3E7A620();
          os_log_t v57 = v61;
          _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v61, (os_signpost_type_t)v62, v56, v73, v70, (uint8_t *)v53, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v54, -1, -1);
          MEMORY[0x1E4E79510](v53, -1, -1);

          uint64_t v58 = *(void (**)(char *, uint64_t))(v52 + 8);
          uint64_t v59 = v74;
          v58(v19, v74);
          (*(void (**)(NSObject *, uint64_t))(v66 + 8))(v28, v67);
          swift_bridgeObjectRelease();
          swift_release();
          v58(v71, v59);
          goto LABEL_30;
        }
        uint64_t v22 = v69;
        uint64_t v31 = v70;
        if (!((unint64_t)v73 >> 32))
        {
          if (v73 >> 11 == 27)
          {
LABEL_37:
            __break(1u);
            return;
          }
          if (v73 >> 16 <= 0x10)
          {
            uint64_t v73 = &v77;
            goto LABEL_26;
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
LABEL_18:
      unint64_t v63 = v29;
      sub_1E3E775E0();
      sub_1E3E7A730();
      swift_release();
      int v33 = v69;
      int v32 = v70;
      int v34 = (*((uint64_t (**)(char *, const char *))v69 + 11))(v9, v70);
      int v35 = *MEMORY[0x1E4FBD340];
      os_log_t v61 = v28;
      if (v34 == v35)
      {
        char v36 = 0;
        char v37 = 0;
        os_log_t v70 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(char *, const char *))v33 + 1))(v9, v32);
        os_log_t v70 = "[identifier=%{name=identifier}s] FAILURE";
        char v37 = 2;
        char v36 = 1;
      }
      uint64_t v38 = v71;
      uint64_t v39 = v72;
      (*(void (**)(char *, NSObject *, uint64_t))(v72 + 16))(v71, v14, v74);
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v76 = v41;
      *(unsigned char *)uint64_t v40 = v37;
      *(unsigned char *)(v40 + 1) = v36;
      *(_WORD *)(v40 + 2) = 2080;
      unint64_t v42 = v63;
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_1E3C150B8(v64, v42, &v76);
      sub_1E3E7DBD0();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      os_signpost_id_t v43 = sub_1E3E7A620();
      os_log_t v44 = v61;
      _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v61, (os_signpost_type_t)v62, v43, v73, v70, (uint8_t *)v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v41, -1, -1);
      MEMORY[0x1E4E79510](v40, -1, -1);

      uint64_t v45 = *(void (**)(NSObject *, uint64_t))(v39 + 8);
      uint64_t v46 = v14;
      uint64_t v47 = v74;
      v45(v46, v74);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v22, v67);
      swift_bridgeObjectRelease();
      swift_release();
      v45(v38, v47);
      goto LABEL_30;
    }
    if ((unint64_t)v73 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v73 >> 11 == 27)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v73 >> 16 <= 0x10)
      {
        uint64_t v73 = &v78;
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
}

void sub_1E3D899F0(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 10;
  os_unfair_lock_lock(a1 + 10);
  sub_1E3D8B08C(v1);
  os_unfair_lock_unlock(v2);
}

void sub_1E3D89A4C(void *a1, const char *a2, uint64_t a3, int a4)
{
  LODWORD(v41) = a4;
  uint64_t v45 = (char *)a2;
  uint64_t v6 = sub_1E3E7A6E0();
  unint64_t v42 = *(unsigned char **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1E3E7A640();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_t v44 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v32[-v13];
  uint64_t v15 = sub_1E3E7A6D0();
  MEMORY[0x1F4188790](v15);
  char v19 = &v32[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1)
  {
    uint64_t v37 = v10;
    uint64_t v38 = v17;
    uint64_t v39 = v16;
    uint64_t v40 = v4;
    uint64_t v43 = v9;
    unint64_t v20 = a1[2];
    uint64_t v35 = a1[1];
    sub_1E3E7A680();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_1E3E7A6A0();
    sub_1E3E7A700();
    int v36 = sub_1E3E7D750();
    if ((sub_1E3E7DB50() & 1) == 0)
    {
LABEL_6:
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v14, v43);
      (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v19, v39);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_15:
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
      return;
    }
    os_log_t v34 = v21;
    if ((v41 & 1) == 0)
    {
      uint64_t v22 = v42;
      if (!v45)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        __break(1u);
        goto LABEL_6;
      }
LABEL_11:
      unint64_t v42 = v14;
      sub_1E3E775E0();
      sub_1E3E7A730();
      swift_release();
      unint64_t v23 = v20;
      if ((*((unsigned int (**)(unsigned char *, uint64_t))v22 + 11))(v8, v6) == *MEMORY[0x1E4FBD340])
      {
        char v24 = 0;
        int v33 = 0;
        uint64_t v41 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(unsigned char *, uint64_t))v22 + 1))(v8, v6);
        uint64_t v41 = "[identifier=%{name=identifier}s] CANCEL";
        int v33 = 2;
        char v24 = 1;
      }
      uint64_t v25 = v37;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 16))(v44, v42, v43);
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v47 = v27;
      *(unsigned char *)uint64_t v26 = v33;
      *(unsigned char *)(v26 + 1) = v24;
      *(_WORD *)(v26 + 2) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1E3C150B8(v35, v23, &v47);
      sub_1E3E7DBD0();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      os_signpost_id_t v28 = sub_1E3E7A620();
      os_log_t v29 = v34;
      _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v34, (os_signpost_type_t)v36, v28, v45, v41, (uint8_t *)v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v27, -1, -1);
      MEMORY[0x1E4E79510](v26, -1, -1);

      int v30 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
      uint64_t v31 = v43;
      v30(v42, v43);
      (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v19, v39);
      swift_bridgeObjectRelease();
      swift_release();
      v30(v44, v31);
      goto LABEL_15;
    }
    uint64_t v22 = v42;
    if ((unint64_t)v45 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v45 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        return;
      }
      if (v45 >> 16 <= 0x10)
      {
        uint64_t v45 = &v48;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t sub_1E3D89F7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E78740();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E78E00();
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  swift_bridgeObjectRetain();
  sub_1E3CE657C((uint64_t)v6, MEMORY[0x1E4F915F0]);
  uint64_t v21 = v8;
  uint64_t v22 = v7;
  sub_1E3E79310();
  uint64_t v19 = sub_1E3E792F0();
  uint64_t v20 = v9;
  sub_1E3C10824();
  sub_1E3C10D3C();
  char v10 = sub_1E3E7CC50();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0
    || (uint64_t v21 = v8,
        uint64_t v22 = v7,
        uint64_t v19 = sub_1E3E79300(),
        uint64_t v20 = v11,
        char v12 = sub_1E3E7CC50(),
        swift_bridgeObjectRelease(),
        (v12 & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = v8;
    uint64_t v22 = v7;
    uint64_t v19 = sub_1E3E792E0();
    uint64_t v20 = v17;
    char v18 = sub_1E3E7CC50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v13 = v2 + 12;
  uint64_t v15 = v2[15];
  uint64_t v14 = v2[16];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, v15, v14);
}

uint64_t sub_1E3D8A174(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF4D0);
  uint64_t v74 = *(void *)(v3 - 8);
  uint64_t v75 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v73 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  MEMORY[0x1F4188790](v5);
  os_signpost_id_t v69 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0810);
  MEMORY[0x1F4188790](v78);
  uint64_t v79 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v70 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (uint64_t)&v68 - v11;
  MEMORY[0x1F4188790](v12);
  char v77 = (char *)&v68 - v13;
  uint64_t v90 = sub_1E3E78E70();
  uint64_t v83 = *(char **)(v90 - 8);
  uint64_t v14 = v83;
  MEMORY[0x1F4188790](v90);
  unint64_t v86 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v87 = (char *)&v68 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v68 - v19;
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)&v68 - v22;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F0);
  uint64_t v85 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88 - 8);
  uint64_t v89 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v1[10];
  uint64_t v26 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v25);
  uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 8))(a1, v25, v26);
  uint64_t v72 = v1;
  uint64_t v27 = v90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  sub_1E3E786A0();
  sub_1E3E78DA0();
  sub_1E3E78D50();
  os_signpost_id_t v28 = (void (*)(char *, uint64_t))*((void *)v14 + 1);
  os_log_t v29 = v20;
  uint64_t v30 = a1;
  v28(v29, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BD8);
  uint64_t v31 = *((void *)v83 + 9);
  unint64_t v32 = (v14[80] + 32) & ~(unint64_t)v14[80];
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1E3E86650;
  unint64_t v34 = v33 + v32;
  uint64_t v35 = (void (*)(unint64_t, uint64_t, uint64_t))*((void *)v14 + 2);
  v35(v34, v30, v27);
  unint64_t v36 = v34 + v31;
  uint64_t v37 = v87;
  v35(v36, (uint64_t)v23, v27);
  sub_1E3C10DE8(&qword_1EBFE41E8, &qword_1EBFE41F0);
  LOBYTE(v34) = sub_1E3E78580();
  uint64_t v38 = v86;
  swift_bridgeObjectRelease();
  uint64_t v71 = v30;
  v35((unint64_t)v37, v30, v27);
  uint64_t v83 = v23;
  v35((unint64_t)v38, (uint64_t)v23, v27);
  if ((v34 & 1) == 0)
  {
    BOOL v68 = v28;
    uint64_t v76 = v14 + 8;
    uint64_t v42 = (uint64_t)v77;
    sub_1E3E78E60();
    uint64_t v43 = v82;
    sub_1E3E78E60();
    uint64_t v44 = v79;
    uint64_t v45 = v79 + *(int *)(v78 + 48);
    sub_1E3C242A0(v42, v79);
    sub_1E3C242A0(v43, v45);
    uint64_t v46 = v81;
    uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    char v48 = v38;
    uint64_t v49 = v80;
    uint64_t v50 = v42;
    if (v47(v44, 1, v81) == 1)
    {
      sub_1E3C10CE0(v82, &qword_1EBFE6070);
      sub_1E3C10CE0(v42, &qword_1EBFE6070);
      char v51 = v48;
      uint64_t v52 = v90;
      uint64_t v53 = v68;
      v68(v51, v90);
      v53(v37, v52);
      if (v47(v45, 1, v46) == 1)
      {
        sub_1E3C10CE0(v44, &qword_1EBFE6070);
        uint64_t v41 = v84;
LABEL_11:
        v53(v83, v90);
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v54 = v70;
      sub_1E3C242A0(v44, v70);
      if (v47(v45, 1, v46) != 1)
      {
        os_signpost_id_t v56 = v69;
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v69, v45, v46);
        sub_1E3D8B124();
        char v57 = sub_1E3E7CCA0();
        uint64_t v58 = *(void (**)(char *, uint64_t))(v49 + 8);
        v58(v56, v46);
        sub_1E3C10CE0(v82, &qword_1EBFE6070);
        sub_1E3C10CE0(v50, &qword_1EBFE6070);
        uint64_t v59 = v90;
        uint64_t v60 = v54;
        os_log_t v61 = v68;
        v68(v86, v90);
        v61(v87, v59);
        uint64_t v53 = v61;
        v58((char *)v60, v46);
        sub_1E3C10CE0(v44, &qword_1EBFE6070);
        uint64_t v41 = v84;
        if (v57) {
          goto LABEL_11;
        }
LABEL_10:
        uint64_t v92 = v41;
        uint64_t v62 = v72[5];
        uint64_t v63 = v72[6];
        __swift_project_boxed_opaque_existential_1(v72 + 2, v62);
        uint64_t v91 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 8))(v71, v62, v63);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2408);
        sub_1E3C10DE8(&qword_1EBFE2400, &qword_1EBFE2408);
        uint64_t v64 = v73;
        sub_1E3E7AC70();
        swift_release();
        sub_1E3C10DE8(&qword_1EBFE04E0, &qword_1EBFDF4D0);
        uint64_t v65 = v75;
        uint64_t v66 = sub_1E3E7AB70();
        swift_release();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v65);
        uint64_t v41 = v66;
        goto LABEL_11;
      }
      sub_1E3C10CE0(v82, &qword_1EBFE6070);
      sub_1E3C10CE0(v42, &qword_1EBFE6070);
      uint64_t v55 = v90;
      uint64_t v53 = v68;
      v68(v86, v90);
      v53(v87, v55);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v54, v46);
    }
    sub_1E3C10CE0(v44, &qword_1EBFE0810);
    uint64_t v41 = v84;
    goto LABEL_10;
  }
  uint64_t v39 = v38;
  uint64_t v40 = v90;
  v28(v39, v90);
  v28(v37, v40);
  uint64_t v41 = v84;
  v28(v83, v90);
LABEL_12:
  (*(void (**)(char *, uint64_t))(v85 + 8))(v89, v88);
  return v41;
}

uint64_t StoreLibraryMultiplexingImageProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  sub_1E3CE657C(v0 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_assetCaches, (uint64_t (*)(void))type metadata accessor for AssetCaches);
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_signposter;
  uint64_t v2 = sub_1E3E7A6D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t StoreLibraryMultiplexingImageProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  sub_1E3CE657C(v0 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_assetCaches, (uint64_t (*)(void))type metadata accessor for AssetCaches);
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_signposter;
  uint64_t v2 = sub_1E3E7A6D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1E3D8AC8C(uint64_t a1)
{
  return StoreLibraryMultiplexingImageProvider.load(artwork:)(a1);
}

char *sub_1E3D8ACB0()
{
  return &v1;
}

uint64_t sub_1E3D8ACC0()
{
  uint64_t v1 = sub_1E3E78E70();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1E3D8AD98()
{
  sub_1E3E78E70();
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  unint64_t v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_1E3D8B0F0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1E3D8AE6C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3D8AEA4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  unint64_t v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_1E3D8B0D0(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1E3D8AF0C(uint64_t a1)
{
  sub_1E3D890DC(a1, *(os_unfair_lock_s **)(v1 + 16));
}

void sub_1E3D8AF1C()
{
  sub_1E3D899F0(*(os_unfair_lock_s **)(v0 + 16));
}

uint64_t sub_1E3D8AF2C()
{
  return type metadata accessor for StoreLibraryMultiplexingImageProvider();
}

uint64_t type metadata accessor for StoreLibraryMultiplexingImageProvider()
{
  uint64_t result = qword_1EBFE1E20;
  if (!qword_1EBFE1E20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3D8AF80()
{
  uint64_t result = type metadata accessor for AssetCaches();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E3E7A6D0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for StoreLibraryMultiplexingImageProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StoreLibraryMultiplexingImageProvider);
}

uint64_t dispatch thunk of StoreLibraryMultiplexingImageProvider.__allocating_init(storeProvider:libraryProvider:artworkLoaderProvider:compositeProvider:sizeBucketingStrategy:caches:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1E3D8B08C(void *a1)
{
  sub_1E3D89A4C(a1, *(const char **)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

void sub_1E3D8B0AC(uint64_t a1)
{
  sub_1E3D89140(a1, *(void *)(v1 + 16), *(const char **)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

void sub_1E3D8B0D0(void *a1)
{
  sub_1E3D88BAC(a1, *(const char **)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

void sub_1E3D8B0F0(uint64_t a1)
{
  sub_1E3D88620(a1, *(void *)(v1 + 16), *(const char **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_1E3D8B114()
{
  return swift_deallocObject();
}

unint64_t sub_1E3D8B124()
{
  unint64_t result = qword_1EBFE0800;
  if (!qword_1EBFE0800)
  {
    sub_1E3E77D00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE0800);
  }
  return result;
}

uint64_t sub_1E3D8B184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2BB0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E77CA0();
  if (v9)
  {
    uint64_t v18 = v8;
    uint64_t v19 = v9;
    strcpy((char *)v17, "mzstatic.com");
    HIBYTE(v17[6]) = 0;
    v17[7] = -5120;
    sub_1E3C10C8C();
    char v10 = sub_1E3E7DC70();
    swift_bridgeObjectRelease();
    if (v10)
    {
      uint64_t v11 = sub_1E3E77C30();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C38);
      sub_1E3C10DE8(&qword_1EBFE2BA8, &qword_1EBFE2BB0);
      sub_1E3E78210();
      uint64_t v18 = v11;
      uint64_t v19 = v13;
      sub_1E3C10824();
      if ((sub_1E3E7CC70() & 1) != 0 || v11 == 0x627D687B787D777BLL && v13 == 0xED00007D667B2E62)
      {
        swift_bridgeObjectRelease();
LABEL_8:
        sub_1E3E77C80();
        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      char v14 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_8;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  uint64_t v16 = sub_1E3E77D00();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a1, v2, v16);
}

uint64_t sub_1E3D8B468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v131 = a1;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2BA0);
  uint64_t v132 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  v130 = (char *)&v125 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  v152 = (char *)&v125 - v3;
  MEMORY[0x1F4188790](v4);
  v151 = (char *)&v125 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B80);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E780E0();
  uint64_t v168 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B78);
  uint64_t v165 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  v154 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v125 - v14;
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B90);
  uint64_t v173 = *(void *)(v171 - 8);
  MEMORY[0x1F4188790](v171);
  uint64_t v17 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  v163 = (char *)&v125 - v19;
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2BC0);
  uint64_t v128 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  v149 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  v162 = (char *)&v125 - v22;
  uint64_t v23 = sub_1E3E781D0();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = v26;
  MEMORY[0x1F4188790](v27);
  v153 = (char *)&v125 - v28;
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B68);
  uint64_t v172 = *(void *)(v170 - 8);
  MEMORY[0x1F4188790](v170);
  v127 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  v156 = (char *)&v125 - v31;
  MEMORY[0x1F4188790](v32);
  v169 = (char *)&v125 - v33;
  MEMORY[0x1F4188790](v34);
  v158 = (char *)&v125 - v35;
  sub_1E3E780D0();
  v126 = v11;
  sub_1E3E781F0();
  uint64_t v147 = sub_1E3E78200();
  uint64_t v36 = *(void *)(v147 - 8);
  v146 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v145 = v36 + 56;
  v138 = v8;
  v146(v8, 1, 1, v147);
  sub_1E3E780D0();
  unint64_t v144 = sub_1E3C10D90();
  uint64_t v37 = MEMORY[0x1E4FBB7A8];
  uint64_t v139 = v9;
  sub_1E3E781B0();
  sub_1E3D8C674((uint64_t)v8);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v168 + 8);
  v168 += 8;
  v143 = v38;
  v38(v11, v9);
  v159 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v39 = v23;
  v159(v26, v23);
  uint64_t v40 = v24 + 8;
  uint64_t v41 = v154;
  MEMORY[0x1E4E71A30](v17, v37);
  uint64_t v42 = sub_1E3C10DE8(&qword_1EBFE2B70, &qword_1EBFE2B78);
  uint64_t v43 = v140;
  uint64_t v135 = v42;
  MEMORY[0x1E4E719C0](v41, v140, v42);
  uint64_t v44 = v165 + 8;
  uint64_t v45 = v41;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v165 + 8);
  v136 = v46;
  v46(v45, v43);
  uint64_t v165 = v44;
  v125 = v17;
  v134 = v15;
  sub_1E3E780B0();
  v46(v15, v43);
  uint64_t v47 = v173;
  char v48 = *(void (**)(char *, char *, uint64_t))(v173 + 32);
  uint64_t v141 = v173 + 32;
  v142 = v48;
  uint64_t v49 = v163;
  uint64_t v50 = v17;
  uint64_t v51 = v171;
  v48(v163, v50, v171);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C40);
  uint64_t v148 = MEMORY[0x1E4FBD2D8];
  uint64_t v155 = sub_1E3C10DE8(&qword_1EBFE2B88, &qword_1EBFE2B90);
  uint64_t v53 = v162;
  uint64_t v133 = v52;
  uint64_t v54 = v153;
  sub_1E3E781A0();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v173 = v47 + 8;
  v167 = v55;
  v55(v49, v51);
  uint64_t v56 = v39;
  char v57 = v159;
  v159(v54, v39);
  uint64_t v58 = v40;
  uint64_t v59 = v169;
  MEMORY[0x1E4E71A20](v53, v52);
  uint64_t v166 = sub_1E3C10DE8(&qword_1EBFE2B60, &qword_1EBFE2B68);
  uint64_t v60 = v170;
  MEMORY[0x1E4E719C0](v59, v170, v166);
  os_log_t v61 = *(void (**)(char *, uint64_t))(v172 + 8);
  v172 += 8;
  v157 = v61;
  v61(v59, v60);
  uint64_t v178 = 120;
  unint64_t v179 = 0xE100000000000000;
  unint64_t v164 = sub_1E3C10D3C();
  MEMORY[0x1E4E719C0](v180, &v178, MEMORY[0x1E4FBB1A0], v164);
  sub_1E3E780D0();
  uint64_t v62 = v126;
  sub_1E3E781F0();
  uint64_t v63 = (uint64_t)v138;
  v146(v138, 1, 1, v147);
  uint64_t v64 = v137;
  sub_1E3E780D0();
  uint64_t v65 = v125;
  uint64_t v66 = MEMORY[0x1E4FBB7A8];
  uint64_t v67 = v139;
  sub_1E3E781B0();
  sub_1E3D8C674(v63);
  v143(v62, v67);
  uint64_t v160 = v56;
  uint64_t v161 = v58;
  v57(v64, v56);
  BOOL v68 = v154;
  MEMORY[0x1E4E71A30](v65, v66);
  os_signpost_id_t v69 = v134;
  uint64_t v70 = v140;
  MEMORY[0x1E4E719C0](v68, v140, v135);
  uint64_t v71 = v68;
  uint64_t v72 = v136;
  v136(v71, v70);
  sub_1E3E780B0();
  v72(v69, v70);
  uint64_t v73 = v163;
  uint64_t v74 = v65;
  uint64_t v75 = v171;
  v142(v163, v65, v171);
  uint64_t v76 = v162;
  uint64_t v77 = v133;
  uint64_t v78 = v153;
  sub_1E3E781A0();
  v167(v73, v75);
  uint64_t v79 = v56;
  uint64_t v80 = v159;
  v159(v78, v79);
  uint64_t v81 = v156;
  MEMORY[0x1E4E71A20](v76, v77);
  uint64_t v82 = v170;
  MEMORY[0x1E4E719C0](v81, v170, v166);
  v157(v81, v82);
  uint64_t v176 = 25186;
  unint64_t v177 = 0xE200000000000000;
  uint64_t v83 = MEMORY[0x1E4FBB1A0];
  unint64_t v84 = v164;
  MEMORY[0x1E4E719C0](&v178, &v176, MEMORY[0x1E4FBB1A0], v164);
  uint64_t v174 = 46;
  unint64_t v175 = 0xE100000000000000;
  MEMORY[0x1E4E719C0](&v176, &v174, v83, v84);
  sub_1E3E780D0();
  sub_1E3E781E0();
  uint64_t v85 = (uint64_t)v138;
  v146(v138, 1, 1, v147);
  unint64_t v86 = v137;
  sub_1E3E780D0();
  uint64_t v87 = v74;
  uint64_t v88 = MEMORY[0x1E4FBB7A8];
  uint64_t v89 = v139;
  sub_1E3E781B0();
  sub_1E3D8C674(v85);
  v143(v62, v89);
  v80(v86, v160);
  uint64_t v90 = v80;
  uint64_t v91 = v154;
  MEMORY[0x1E4E71A30](v87, v88);
  uint64_t v92 = v134;
  MEMORY[0x1E4E719C0](v91, v70, v135);
  uint64_t v93 = v136;
  v136(v91, v70);
  sub_1E3E780B0();
  v93(v92, v70);
  uint64_t v94 = v163;
  uint64_t v95 = v87;
  uint64_t v96 = v171;
  v142(v163, v95, v171);
  uint64_t v97 = v162;
  uint64_t v98 = v133;
  uint64_t v99 = v153;
  sub_1E3E781A0();
  v167(v94, v96);
  uint64_t v100 = v160;
  v90(v99, v160);
  unint64_t v101 = v127;
  MEMORY[0x1E4E71A20](v97, v98);
  uint64_t v102 = v170;
  MEMORY[0x1E4E719C0](v101, v170, v166);
  v157(v101, v102);
  sub_1E3E780B0();
  uint64_t v103 = v180[0];
  unint64_t v104 = v180[1];
  sub_1E3E780D0();
  uint64_t v174 = v103;
  unint64_t v175 = v104;
  uint64_t v105 = v163;
  sub_1E3E78190();
  uint64_t v165 = sub_1E3C10DE8(&qword_1EBFE2BB8, &qword_1EBFE2BC0);
  uint64_t v106 = v171;
  sub_1E3E78180();
  v167(v105, v106);
  uint64_t v107 = v159;
  v159(v99, v100);
  swift_bridgeObjectRelease();
  sub_1E3E780D0();
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C30);
  sub_1E3E78180();
  v107(v99, v100);
  uint64_t v108 = v178;
  unint64_t v109 = v179;
  sub_1E3E780D0();
  uint64_t v174 = v108;
  unint64_t v175 = v109;
  sub_1E3E78190();
  uint64_t v165 = sub_1E3C10DE8(&qword_1EBFE2B98, &qword_1EBFE2BA0);
  uint64_t v110 = v129;
  uint64_t v111 = v171;
  sub_1E3E78180();
  uint64_t v112 = v167;
  v167(v105, v111);
  v107(v99, v160);
  swift_bridgeObjectRelease();
  uint64_t v113 = v176;
  unint64_t v114 = v177;
  sub_1E3E780D0();
  uint64_t v174 = v113;
  unint64_t v175 = v114;
  sub_1E3E78190();
  v115 = v130;
  sub_1E3E78180();
  v112(v105, v111);
  uint64_t v116 = v160;
  v117 = v159;
  v159(v99, v160);
  swift_bridgeObjectRelease();
  sub_1E3E780D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C38);
  v118 = v156;
  uint64_t v119 = v170;
  sub_1E3E78180();
  v117(v99, v116);
  v120 = *(void (**)(char *, uint64_t))(v132 + 8);
  v120(v115, v110);
  v120(v152, v110);
  v120(v151, v110);
  v121 = *(void (**)(char *, uint64_t))(v128 + 8);
  uint64_t v122 = v150;
  v121(v149, v150);
  v121(v162, v122);
  v123 = v157;
  v157(v118, v119);
  v123(v169, v119);
  return ((uint64_t (*)(char *, uint64_t))v123)(v158, v119);
}

uint64_t sub_1E3D8C674(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2B80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id PlaybackController.TransportCommand.request(for:)(id a1)
{
  double v3 = *(double *)v1;
  if (*(unsigned char *)(v1 + 8))
  {
    if (*(unsigned char *)(v1 + 8) == 1)
    {
      id v4 = objc_msgSend(a1, sel_tracklist);
      id v5 = objc_msgSend(v4, sel_playingItem);

      if (!v5) {
        return v5;
      }
      id v6 = objc_msgSend(v5, sel_playbackRateCommand);

      if (v6)
      {
        LODWORD(v7) = LODWORD(v3);
        id v8 = objc_msgSend(v6, sel_setPlaybackRate_, v7);
        goto LABEL_9;
      }
      return 0;
    }
    switch(*(void *)&v3)
    {
      case 1:
        id v11 = objc_msgSend(a1, sel_pause);
        return v11;
      case 2:
        id v12 = objc_msgSend(a1, sel_play);
        if (v12) {
          return v12;
        }
        id v11 = objc_msgSend(a1, sel_pause);
        return v11;
      case 3:
        id v13 = objc_msgSend(a1, sel_tracklist);
        id v14 = objc_msgSend(v13, sel_playingItem);

        if (!v14) {
          return 0;
        }
        unint64_t v15 = (unint64_t)objc_msgSend(v14, sel_seekCommand);

        if (!v15) {
          return 0;
        }
        id v16 = objc_msgSend((id)v15, sel_preferredForwardJumpIntervals);
        sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
        unint64_t v17 = sub_1E3E7D060();

        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          id v5 = (id)sub_1E3E7DFC0();
          swift_bridgeObjectRelease();
          if (!v5) {
            goto LABEL_69;
          }
        }
        else
        {
          id v5 = *(id *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v5) {
            goto LABEL_69;
          }
        }
        if ((v17 & 0xC000000000000001) != 0) {
          goto LABEL_78;
        }
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_29;
        }
        __break(1u);
        goto LABEL_78;
      case 4:
        id v18 = objc_msgSend(a1, sel_tracklist);
        id v19 = objc_msgSend(v18, sel_playingItem);

        if (!v19) {
          return 0;
        }
        unint64_t v15 = (unint64_t)objc_msgSend(v19, sel_seekCommand);

        if (!v15) {
          return 0;
        }
        id v20 = objc_msgSend((id)v15, sel_preferredBackwardJumpIntervals);
        sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
        unint64_t v17 = sub_1E3E7D060();

        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          id v5 = (id)sub_1E3E7DFC0();
          swift_bridgeObjectRelease();
          if (v5) {
            goto LABEL_27;
          }
        }
        else
        {
          id v5 = *(id *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5)
          {
LABEL_27:
            if ((v17 & 0xC000000000000001) != 0) {
              goto LABEL_78;
            }
            if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              JUMPOUT(0x1E3D8CE74);
            }
LABEL_29:
            id v21 = *(id *)(v17 + 32);
LABEL_30:
            uint64_t v22 = v21;
            swift_bridgeObjectRelease();
            objc_msgSend(v22, sel_doubleValue);
            id v5 = objc_msgSend((id)v15, sel_jumpByInterval_);
            swift_unknownObjectRelease();

            return v5;
          }
        }
LABEL_69:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return v5;
      case 5:
        id v23 = objc_msgSend(a1, sel_tracklist);
        id v24 = objc_msgSend(v23, sel_changeItemCommand);

        if (!v24) {
          return 0;
        }
        id v5 = objc_msgSend(v24, sel_nextItem);
        swift_unknownObjectRelease();
        return v5;
      case 6:
        id v25 = objc_msgSend(a1, sel_tracklist);
        id v26 = objc_msgSend(v25, sel_playingItem);

        if (!v26) {
          return 0;
        }
        objc_msgSend(v26, sel_duration);

        id v27 = objc_msgSend(a1, sel_tracklist);
        id v28 = objc_msgSend(v27, sel_playingItem);

        if (!v28) {
          return 0;
        }
        id v29 = objc_msgSend(v28, sel_seekCommand);

        if (!v29) {
          return 0;
        }
        id v8 = objc_msgSend(v29, sel_changePositionToElapsedInterval_, v42);
        goto LABEL_9;
      case 7:
        id v11 = objc_msgSend(a1, sel_prepare);
        return v11;
      case 8:
        unint64_t v30 = MPCPlayerResponse.remainingChapters.getter();
        if (!v30) {
          return 0;
        }
        unint64_t v15 = v30;
        unint64_t v17 = v30 & 0xFFFFFFFFFFFFFF8;
        if (v30 >> 62)
        {
          if (!sub_1E3E7DFC0()) {
            goto LABEL_65;
          }
        }
        else if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_65;
        }
        if ((v15 & 0xC000000000000001) != 0)
        {
          unint64_t v35 = 0;
          goto LABEL_71;
        }
        if (*(void *)(v17 + 16))
        {
          uint64_t v31 = *(void **)(v15 + 32);
          goto LABEL_54;
        }
        __break(1u);
        goto LABEL_73;
      case 9:
        unint64_t v32 = MPCPlayerResponse.previousChapters.getter();
        if (!v32) {
          return 0;
        }
        unint64_t v15 = v32;
        unint64_t v17 = v32 & 0xFFFFFFFFFFFFFF8;
        if (v32 >> 62)
        {
          uint64_t v33 = sub_1E3E7DFC0();
          if (v33)
          {
LABEL_49:
            BOOL v34 = __OFSUB__(v33, 1);
            unint64_t v35 = v33 - 1;
            if (v34)
            {
LABEL_73:
              __break(1u);
            }
            else
            {
              if ((v15 & 0xC000000000000001) != 0)
              {
LABEL_71:
                id v36 = (id)MEMORY[0x1E4E77720](v35, v15);
LABEL_55:
                uint64_t v37 = v36;
                swift_bridgeObjectRelease();
                id v38 = v37;
                id v39 = objc_msgSend(a1, sel_tracklist);
                id v5 = objc_msgSend(v39, sel_playingItem);

                if (!v5)
                {

                  return v5;
                }
                id v40 = objc_msgSend(v5, sel_seekCommand);

                if (v40)
                {
                  objc_msgSend(v38, sel_startTime);
                  id v5 = objc_msgSend(v40, sel_changePositionToElapsedInterval_);

                  goto LABEL_10;
                }

                return 0;
              }
              if ((v35 & 0x8000000000000000) == 0)
              {
                if (v35 < *(void *)(v17 + 16))
                {
                  uint64_t v31 = *(void **)(v15 + 8 * v35 + 32);
LABEL_54:
                  id v36 = v31;
                  goto LABEL_55;
                }
LABEL_75:
                __break(1u);
LABEL_78:
                id v21 = (id)MEMORY[0x1E4E77720](0, v17);
                goto LABEL_30;
              }
            }
            __break(1u);
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v33) {
            goto LABEL_49;
          }
        }
LABEL_65:
        swift_bridgeObjectRelease();
        return 0;
      default:
        id v11 = objc_msgSend(a1, sel_play);
        return v11;
    }
  }
  id v9 = objc_msgSend(a1, sel_tracklist);
  id v5 = objc_msgSend(v9, sel_playingItem);

  if (!v5) {
    return v5;
  }
  id v10 = objc_msgSend(v5, sel_seekCommand);

  if (!v10) {
    return 0;
  }
  id v8 = objc_msgSend(v10, sel_changePositionToElapsedInterval_, v3);
LABEL_9:
  id v5 = v8;
LABEL_10:
  swift_unknownObjectRelease();
  return v5;
}

BOOL PlaybackController.TransportCommand.canPerform(for:)(void *a1)
{
  id v1 = PlaybackController.TransportCommand.request(for:)(a1);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t PlaybackController.TransportCommand.requiresLocalRoute.getter()
{
  return 0;
}

id sub_1E3D8CEF8(void *a1)
{
  return PlaybackController.TransportCommand.request(for:)(a1);
}

BOOL sub_1E3D8CF20(void *a1)
{
  id v1 = PlaybackController.TransportCommand.request(for:)(a1);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t sub_1E3D8CF74(void *a1)
{
  id v2 = PlaybackController.TransportCommand.request(for:)(a1);
  double v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_1E3D90FFC(v3, v1, (uint64_t)v2);
}

uint64_t sub_1E3D8CFF8(void *a1)
{
  id v2 = PlaybackController.TransportCommand.request(for:)(a1);
  id v3 = v2;
  if (v2) {

  }
  id v4 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_1E3D90FEC(v4, v1, v3 != 0);
}

id PlaybackController.SleepTimerCommand.request(for:)(void *a1)
{
  double v2 = *(double *)v1;
  if (*(unsigned char *)(v1 + 8) != 1)
  {
    id v6 = objc_msgSend(a1, sel_tracklist);
    id v7 = objc_msgSend(v6, sel_sleepTimerCommand);

    if (v7)
    {
      id v5 = objc_msgSend(v7, sel_startWithTime_, v2);
      goto LABEL_12;
    }
    return 0;
  }
  if (v2 == 0.0)
  {
    id v8 = objc_msgSend(a1, sel_tracklist);
    id v9 = objc_msgSend(v8, sel_sleepTimerCommand);

    if (v9)
    {
      id v5 = objc_msgSend(v9, sel_startForChapterEnd);
      goto LABEL_12;
    }
    return 0;
  }
  if (*(void *)&v2 != 1)
  {
    id v10 = objc_msgSend(a1, sel_tracklist);
    id v11 = objc_msgSend(v10, sel_sleepTimerCommand);

    if (v11)
    {
      id v5 = objc_msgSend(v11, sel_reset);
      goto LABEL_12;
    }
    return 0;
  }
  id v3 = objc_msgSend(a1, sel_tracklist);
  id v4 = objc_msgSend(v3, sel_sleepTimerCommand);

  if (!v4) {
    return 0;
  }
  id v5 = objc_msgSend(v4, sel_startForItemEnd);
LABEL_12:
  id v12 = v5;
  swift_unknownObjectRelease();
  return v12;
}

BOOL PlaybackController.SleepTimerCommand.canPerform(for:)(void *a1)
{
  id v1 = PlaybackController.SleepTimerCommand.request(for:)(a1);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t PlaybackController.SleepTimerCommand.requiresLocalRoute.getter()
{
  return 0;
}

BOOL static PlaybackController.SleepTimerCommand.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if (v2 == 0.0)
    {
      if (v3 == 0.0) {
        uint64_t v6 = *(unsigned __int8 *)(a2 + 8);
      }
      else {
        LOBYTE(v6) = 0;
      }
      if (v6) {
        return 1;
      }
    }
    else if (*(void *)&v2 == 1)
    {
      if (*(void *)&v3 == 1) {
        char v4 = *(unsigned char *)(a2 + 8);
      }
      else {
        char v4 = 0;
      }
      if (v4) {
        return 1;
      }
    }
    else
    {
      if (*(void *)&v3 > 1uLL) {
        char v7 = *(unsigned char *)(a2 + 8);
      }
      else {
        char v7 = 0;
      }
      if (v7) {
        return 1;
      }
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    return v2 == *(double *)a2;
  }
  return 0;
}

id sub_1E3D8D2EC(void *a1)
{
  return PlaybackController.SleepTimerCommand.request(for:)(a1);
}

BOOL sub_1E3D8D314(void *a1)
{
  id v1 = PlaybackController.SleepTimerCommand.request(for:)(a1);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t sub_1E3D8D364(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) != 1) {
    return (v4 & 1) == 0 && v2 == v3;
  }
  if (v3 == 0.0) {
    unsigned int v5 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v5 = 0;
  }
  BOOL v6 = *(void *)&v3 > 1uLL;
  if (*(void *)&v3 == 1) {
    unsigned int v7 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v7 = 0;
  }
  if (!v6) {
    unsigned int v4 = 0;
  }
  if (*(void *)&v2 != 1) {
    unsigned int v7 = v4;
  }
  if (v2 == 0.0) {
    return v5;
  }
  else {
    return v7;
  }
}

uint64_t sub_1E3D8D3C8(void *a1)
{
  id v2 = PlaybackController.SleepTimerCommand.request(for:)(a1);
  double v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_1E3D90FFC(v3, v1, (uint64_t)v2);
}

uint64_t sub_1E3D8D44C(void *a1)
{
  id v2 = PlaybackController.SleepTimerCommand.request(for:)(a1);
  id v3 = v2;
  if (v2) {

  }
  unsigned int v4 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_1E3D90FEC(v4, v1, v3 != 0);
}

uint64_t PlaybackController.QueueCommand.request(for:)(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_1E3E78FF0();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_1E3E790E0();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = type metadata accessor for PlaybackController.QueueCommand();
  v2[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3D8D644, 0, 0);
}

uint64_t sub_1E3D8D644()
{
  sub_1E3C7285C(*(void *)(v0 + 40), *(void *)(v0 + 104));
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = **(void ***)(v0 + 104);
      id v4 = objc_msgSend(v5, sel_remove);

      goto LABEL_32;
    case 2u:
      uint64_t v6 = *(void *)(v0 + 104);
      unsigned int v7 = *(void **)v6;
      id v8 = *(void **)(v6 + 8);
      int v9 = *(unsigned __int8 *)(v6 + 16);
      if (*(unsigned char *)(v6 + 16))
      {
        if (v9 == 255)
        {

          goto LABEL_31;
        }
        if (v9 == 1)
        {
          id v10 = *(void **)(v0 + 32);
          sub_1E3C72848(*(id *)(v6 + 8), 1u);
          id v11 = objc_msgSend(v10, sel_tracklist);
          id v12 = objc_msgSend(v11, sel_reorderCommand);

          if (v12)
          {
            id v4 = objc_msgSend(v12, sel_moveItem_afterItem_, v7, v8);
            sub_1E3D90100(v8, 1u);

            id v13 = v8;
            unsigned __int8 v14 = 1;
LABEL_25:
            sub_1E3D90100(v13, v14);
            swift_unknownObjectRelease();
            goto LABEL_32;
          }
          sub_1E3D90100(v8, 1u);

          uint64_t v37 = v8;
          unsigned __int8 v38 = 1;
        }
        else
        {

          uint64_t v37 = v8;
          unsigned __int8 v38 = v9;
        }
      }
      else
      {
        BOOL v34 = *(void **)(v0 + 32);
        sub_1E3C72848(*(id *)(v6 + 8), 0);
        id v35 = objc_msgSend(v34, sel_tracklist);
        id v36 = objc_msgSend(v35, sel_reorderCommand);

        if (v36)
        {
          id v4 = objc_msgSend(v36, sel_moveItem_beforeItem_, v7, v8);

          sub_1E3D90100(v8, 0);
          id v13 = v8;
          unsigned __int8 v14 = 0;
          goto LABEL_25;
        }

        sub_1E3D90100(v8, 0);
        uint64_t v37 = v8;
        unsigned __int8 v38 = 0;
      }
      sub_1E3D90100(v37, v38);
LABEL_31:
      id v4 = 0;
LABEL_32:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v39 = *(uint64_t (**)(id))(v0 + 8);
      return v39(v4);
    case 3u:
      uint64_t v15 = *(void *)(v0 + 104);
      uint64_t v17 = *(void *)(v0 + 80);
      uint64_t v16 = *(void *)(v0 + 88);
      uint64_t v18 = *(void *)(v0 + 72);
      id v19 = (uint64_t *)(v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48));
      uint64_t v20 = *v19;
      *(void *)(v0 + 112) = *v19;
      char v21 = *((unsigned char *)v19 + 8);
      *(unsigned char *)(v0 + 25) = v21;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v15, v18);
      *(void *)(v0 + 16) = v20;
      *(unsigned char *)(v0 + 24) = v21;
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_1E3D8DB64;
      uint64_t v23 = *(void *)(v0 + 88);
      uint64_t v24 = *(void *)(v0 + 32);
      return sub_1E3D8E05C(v23, (uint64_t *)(v0 + 16), v24);
    case 4u:
      (*(void (**)(void, void, void))(*(void *)(v0 + 56) + 32))(*(void *)(v0 + 64), *(void *)(v0 + 104), *(void *)(v0 + 48));
      id v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 144) = v26;
      *id v26 = v0;
      v26[1] = sub_1E3D8DD44;
      uint64_t v27 = *(void *)(v0 + 64);
      uint64_t v28 = *(void *)(v0 + 32);
      return sub_1E3D8EBEC(v27, v28);
    case 5u:
      id v29 = *(void **)(v0 + 32);
      char v30 = sub_1E3E783D0();
      id v31 = objc_msgSend(v29, sel_tracklist);
      id v32 = objc_msgSend(v31, sel_resetCommand);

      if (v30)
      {
        if (!v32) {
          goto LABEL_31;
        }
        id v33 = objc_msgSend(v32, sel_clearUpNextItems);
      }
      else
      {
        if (!v32) {
          goto LABEL_31;
        }
        id v33 = objc_msgSend(v32, sel_clear);
      }
      id v4 = v33;
      swift_unknownObjectRelease();
      goto LABEL_32;
    default:
      uint64_t v1 = **(void ***)(v0 + 104);
      id v2 = objc_msgSend(*(id *)(v0 + 32), sel_tracklist);
      id v3 = objc_msgSend(v2, sel_changeItemCommand);

      if (v3)
      {
        id v4 = objc_msgSend(v3, sel_changeToItem_, v1);

        swift_unknownObjectRelease();
        goto LABEL_32;
      }

      goto LABEL_31;
  }
}

uint64_t sub_1E3D8DB64(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3D8DF10;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_1E3D8DC8C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3D8DC8C()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  sub_1E3C5B530(*(id *)(v0 + 112), *(unsigned char *)(v0 + 25));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 136);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_1E3D8DD44(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3D8DFC0;
  }
  else
  {
    *(void *)(v4 + 160) = a1;
    uint64_t v5 = sub_1E3D8DE6C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3D8DE6C()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  uint64_t v1 = v0[20];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1E3D8DF10()
{
  uint64_t v1 = *(void **)(v0 + 112);
  unsigned __int8 v2 = *(unsigned char *)(v0 + 25);
  (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
  sub_1E3C5B530(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1E3D8DFC0()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3D8E05C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5820);
  *(void *)(v4 + 48) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v6 = sub_1E3E790E0();
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 72) = *(void *)(v6 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  uint64_t v7 = sub_1E3E78FF0();
  *(void *)(v4 + 88) = v7;
  *(void *)(v4 + 96) = *(void *)(v7 - 8);
  *(void *)(v4 + 104) = swift_task_alloc();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *a2;
  *(void *)(v4 + 112) = v8;
  *(void *)(v4 + 120) = v9;
  *(unsigned char *)(v4 + 192) = *((unsigned char *)a2 + 8);
  return MEMORY[0x1F4188298](sub_1E3D8E1FC, 0, 0);
}

uint64_t sub_1E3D8E1FC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[6];
  uint64_t v6 = (void *)v0[4];
  (*(void (**)(void, void, void))(v0[9] + 16))(v0[10], v0[3], v0[8]);
  uint64_t v7 = sub_1E3E79880();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  uint64_t v8 = sub_1E3E78440();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_1E3E7D350();
  sub_1E3E78FB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28408);
  uint64_t v9 = sub_1E3E78FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1E3E86660;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E4F91858], v9);
  sub_1E3CA2560(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1E3E78F40();
  swift_bridgeObjectRelease();
  id v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[16] = v13;
  v0[17] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v1, v2);
  id v14 = objc_msgSend(v6, sel_tracklist);
  id v15 = objc_msgSend(v14, sel_playingItem);

  if (v15)
  {
    uint64_t v16 = (void *)swift_task_alloc();
    v0[18] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1E3D8E560;
    uint64_t v17 = v0[4];
    return PlaybackIntent.generateMPCIntent(for:)(v17);
  }
  else
  {
    id v19 = (void *)swift_task_alloc();
    v0[21] = v19;
    *id v19 = v0;
    v19[1] = sub_1E3D8E8B8;
    uint64_t v20 = v0[14];
    uint64_t v21 = v0[4];
    return sub_1E3D8EBEC(v20, v21);
  }
}

uint64_t sub_1E3D8E560(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1E3D8EB40;
  }
  else {
    uint64_t v4 = sub_1E3D8E674;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3D8E674()
{
  id v1 = objc_msgSend(*(id *)(v0 + 32), sel_tracklist);
  *(void *)(v0 + 16) = MPCPlayerResponseTracklist.itemsInSections(sections:)((uint64_t)&unk_1F3F47BD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE279C8);
  sub_1E3D85FAC();
  char v2 = sub_1E3E7D3C0();
  swift_bridgeObjectRelease();

  if ((v2 & 1) == 0) {
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 192) != 2) {
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)(v0 + 120);
  if (v3 != 1)
  {
    if (!v3)
    {
LABEL_5:
      id v4 = objc_msgSend(*(id *)(v0 + 32), sel_tracklist);
      id v5 = objc_msgSend(v4, sel_insertCommand);

      uint64_t v6 = *(void **)(v0 + 152);
      if (v5)
      {
        id v7 = objc_msgSend(v5, sel_insertAfterPlayingItemWithPlaybackIntent_, *(void *)(v0 + 152));
        swift_unknownObjectRelease();

        sub_1E3C5B530(0, 2u);
        goto LABEL_10;
      }

      sub_1E3C5B530(0, 2u);
      goto LABEL_9;
    }
LABEL_7:

LABEL_9:
    id v7 = 0;
    goto LABEL_10;
  }
  id v10 = objc_msgSend(*(id *)(v0 + 32), sel_tracklist);
  id v11 = objc_msgSend(v10, sel_insertCommand);

  uint64_t v12 = *(void **)(v0 + 152);
  if (!v11)
  {

    goto LABEL_9;
  }
  id v7 = objc_msgSend(v11, sel_insertAtEndOfUpNextWithPlaybackIntent_, *(void *)(v0 + 152));

  swift_unknownObjectRelease();
LABEL_10:
  (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 112), *(void *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(id))(v0 + 8);
  return v8(v7);
}

uint64_t sub_1E3D8E8B8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1E3D8EA94;
  }
  else
  {
    *(void *)(v4 + 184) = a1;
    id v5 = sub_1E3D8E9E0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3D8E9E0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 112), *(void *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3D8EA94()
{
  (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 112), *(void *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3D8EB40()
{
  (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 112), *(void *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3D8EBEC(uint64_t a1, uint64_t a2)
{
  void v2[2] = a1;
  v2[3] = a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1E3D8EC90;
  return PlaybackIntent.generateMPCIntent(for:)(a2);
}

uint64_t sub_1E3D8EC90(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1E3D8EDC4, 0, 0);
  }
}

uint64_t sub_1E3D8EDC4()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_tracklist);
  id v2 = objc_msgSend(v1, sel_resetCommand);

  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_replaceWithPlaybackIntent_replaceIntent_, *(void *)(v0 + 40), 1);
    swift_unknownObjectRelease();
    if (v3)
    {
      id v4 = v3;
      sub_1E3E78F70();
      id v5 = (void *)sub_1E3E7CCF0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!*MEMORY[0x1E4F77688])
      {
        __break(1u);
        return result;
      }
      id v7 = (id)*MEMORY[0x1E4F77688];
      objc_msgSend(v4, sel_setCommandOptionValue_forKey_, v5, v7);
    }
  }
  else
  {
    id v3 = 0;
  }

  uint64_t v8 = *(uint64_t (**)(id))(v0 + 8);
  return v8(v3);
}

uint64_t PlaybackController.QueueCommand.canPerform(for:)(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for PlaybackController.QueueCommand();
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3D8EFB0, 0, 0);
}

uint64_t sub_1E3D8EFB0()
{
  sub_1E3C7285C(v0[3], v0[6]);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_4:
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1E3D8F15C;
    uint64_t v5 = v0[2];
    return PlaybackController.QueueCommand.request(for:)(v5);
  }
  uint64_t v1 = v0[5];
  sub_1E3C7285C(v0[6], v1);
  id v2 = *(void **)v1;
  int v3 = *(unsigned __int8 *)(v1 + 16);
  if (v3 != 255)
  {
    sub_1E3D90100(*(id *)(v0[5] + 8), v3);

    goto LABEL_4;
  }
  id v7 = objc_msgSend((id)v0[2], sel_tracklist);
  id v8 = objc_msgSend(v7, sel_reorderCommand);

  if (v8)
  {
    id v9 = objc_msgSend(v8, sel_canMoveItem_, v2);

    swift_unknownObjectRelease();
  }
  else
  {

    id v9 = 0;
  }
  sub_1E3C72960(v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = (uint64_t (*)(id))v0[1];
  return v10(v9);
}

uint64_t sub_1E3D8F15C(uint64_t a1)
{
  *(void *)(*(void *)v2 + 64) = a1;
  swift_task_dealloc();
  if (v1)
  {

    int v3 = sub_1E3D8F30C;
  }
  else
  {
    int v3 = sub_1E3D8F278;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1E3D8F278()
{
  uint64_t v1 = (void *)v0[8];
  if (v1) {

  }
  sub_1E3C72960(v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(BOOL))v0[1];
  return v2(v1 != 0);
}

uint64_t sub_1E3D8F30C()
{
  sub_1E3C72960(*(void *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t PlaybackController.QueueCommand.requiresLocalRoute.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E78FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E78FF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PlaybackController.QueueCommand();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C7285C(v1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    uint64_t v13 = sub_1E3E78FE0();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F91850], v2);
    char v14 = sub_1E3D340B0((uint64_t)v5, v13);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    sub_1E3C72960((uint64_t)v12);
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1E3D8F5D4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C85CD4;
  return PlaybackController.QueueCommand.request(for:)(a1);
}

uint64_t sub_1E3D8F668(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3D9107C;
  return PlaybackController.QueueCommand.canPerform(for:)(a1);
}

uint64_t _s10PodcastsUI18PlaybackControllerC12QueueCommandO8LocationO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  id v4 = *(id *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8))
    {
      sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF530);
      sub_1E3C72848(v4, 0);
      sub_1E3C72848(v2, 0);
      int v6 = sub_1E3E7DA80();
      sub_1E3C5B530(v2, 0);
      uint64_t v7 = v4;
      unsigned __int8 v8 = 0;
      goto LABEL_7;
    }
    goto LABEL_19;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF530);
      sub_1E3C72848(v4, 1u);
      sub_1E3C72848(v2, 1u);
      LOBYTE(v6) = sub_1E3E7DA80();
      sub_1E3C5B530(v2, 1u);
      uint64_t v7 = v4;
      unsigned __int8 v8 = 1;
LABEL_7:
      sub_1E3C5B530(v7, v8);
      return v6 & 1;
    }
    goto LABEL_19;
  }
  if (!v2)
  {
    if (v5 == 2 && v4 == 0)
    {
      sub_1E3C5B530(0, 2u);
      sub_1E3C5B530(0, 2u);
      return 1;
    }
    goto LABEL_19;
  }
  if (v5 != 2 || v4 != (id)1)
  {
LABEL_19:
    sub_1E3C72848(*(id *)a2, *(unsigned char *)(a2 + 8));
    sub_1E3C72848(v2, v3);
    sub_1E3C5B530(v2, v3);
    sub_1E3C5B530(v4, v5);
    return 0;
  }
  uint64_t v11 = 1;
  sub_1E3C5B530((id)1, 2u);
  sub_1E3C5B530((id)1, 2u);
  return v11;
}

uint64_t _s10PodcastsUI18PlaybackControllerC12QueueCommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78FF0();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x1F4188790](v4);
  char v57 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E790E0();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v62 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v58 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PlaybackController.QueueCommand();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v57 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v57 - v15;
  MEMORY[0x1F4188790](v17);
  id v19 = (void **)((char *)&v57 - v18);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (void **)((char *)&v57 - v21);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28400);
  MEMORY[0x1F4188790](v23 - 8);
  id v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t)&v25[*(int *)(v26 + 56)];
  sub_1E3C7285C(a1, (uint64_t)v25);
  sub_1E3C7285C(a2, v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1E3C7285C((uint64_t)v25, (uint64_t)v19);
      uint64_t v28 = *v19;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_3;
      }
      goto LABEL_5;
    case 2u:
      sub_1E3C7285C((uint64_t)v25, (uint64_t)v16);
      id v32 = *(void **)v16;
      id v31 = (void *)*((void *)v16 + 1);
      int v33 = v16[16];
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        id v35 = *(void **)v27;
        BOOL v34 = *(void **)(v27 + 8);
        int v36 = *(unsigned __int8 *)(v27 + 16);
        sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF530);
        char v37 = sub_1E3E7DA80();

        if (v37)
        {
          if (v33 == 255)
          {
            if (v36 == 255)
            {
LABEL_19:
              sub_1E3C72960((uint64_t)v25);
              char v30 = 1;
              return v30 & 1;
            }
          }
          else
          {
            id v65 = v31;
            unsigned __int8 v66 = v33;
            if (v36 != 255)
            {
              uint64_t v63 = v34;
              char v64 = v36;
              sub_1E3C72848(v31, v33);
              char v38 = _s10PodcastsUI18PlaybackControllerC12QueueCommandO8LocationO2eeoiySbAG_AGtFZ_0((uint64_t)&v65, (uint64_t)&v63);
              sub_1E3D90100(v34, v36);
              sub_1E3C5B530(v65, v66);
              sub_1E3D90100(v31, v33);
              if ((v38 & 1) == 0) {
                goto LABEL_33;
              }
              goto LABEL_19;
            }
            sub_1E3C72848(v31, v33);
            sub_1E3C5B530(v31, v33);
          }
          sub_1E3D90100(v31, v33);
          uint64_t v55 = v34;
          unsigned __int8 v56 = v36;
        }
        else
        {
          sub_1E3D90100(v34, v36);
          uint64_t v55 = v31;
          unsigned __int8 v56 = v33;
        }
        sub_1E3D90100(v55, v56);
LABEL_33:
        sub_1E3C72960((uint64_t)v25);
      }
      else
      {
        sub_1E3D90100(v31, v33);

LABEL_23:
        sub_1E3D91010((uint64_t)v25);
      }
      char v30 = 0;
      return v30 & 1;
    case 3u:
      sub_1E3C7285C((uint64_t)v25, (uint64_t)v13);
      uint64_t v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
      uint64_t v40 = *(void **)&v13[v39];
      unsigned __int8 v41 = v13[v39 + 8];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_1E3C5B530(v40, v41);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v62);
        goto LABEL_23;
      }
      double v42 = *(void **)(v27 + v39);
      LODWORD(v60) = *(unsigned __int8 *)(v27 + v39 + 8);
      uint64_t v44 = v61;
      uint64_t v43 = v62;
      uint64_t v45 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v58, v27, v62);
      char v46 = MEMORY[0x1E4E729D0](v13, v45);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v44 + 8);
      v47(v13, v43);
      if (v46)
      {
        id v65 = v40;
        unsigned __int8 v66 = v41;
        char v48 = v42;
        uint64_t v63 = v42;
        unsigned __int8 v49 = v60;
        char v64 = v60;
        char v30 = _s10PodcastsUI18PlaybackControllerC12QueueCommandO8LocationO2eeoiySbAG_AGtFZ_0((uint64_t)&v65, (uint64_t)&v63);
        v47(v45, v43);
        sub_1E3C5B530(v48, v49);
        sub_1E3C5B530(v40, v41);
        goto LABEL_17;
      }
      v47(v45, v43);
      sub_1E3C5B530(v42, v60);
      sub_1E3C5B530(v40, v41);
      goto LABEL_33;
    case 4u:
      sub_1E3C7285C((uint64_t)v25, (uint64_t)v10);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v51 = v59;
        uint64_t v50 = v60;
        uint64_t v52 = v57;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v57, v27, v60);
        char v30 = MEMORY[0x1E4E728C0](v10, v52);
        uint64_t v53 = *(void (**)(char *, uint64_t))(v51 + 8);
        v53(v52, v50);
        v53(v10, v50);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v60);
      goto LABEL_23;
    case 5u:
      if (swift_getEnumCaseMultiPayload() == 5) {
        goto LABEL_19;
      }
      goto LABEL_23;
    default:
      sub_1E3C7285C((uint64_t)v25, (uint64_t)v22);
      uint64_t v28 = *v22;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_3:

        goto LABEL_23;
      }
LABEL_5:
      id v29 = *(void **)v27;
      sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDF530);
      char v30 = sub_1E3E7DA80();

LABEL_17:
      sub_1E3C72960((uint64_t)v25);
      return v30 & 1;
  }
}

BOOL _s10PodcastsUI18PlaybackControllerC16TransportCommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1) {
      return v4 == 1 && *(float *)&v2 == *(float *)&v3;
    }
    switch(*(void *)&v2)
    {
      case 1:
        if (v4 != 2 || *(void *)&v3 != 1) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if (v4 != 2 || *(void *)&v3 != 2) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if (v4 != 2 || *(void *)&v3 != 3) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if (v4 != 2 || *(void *)&v3 != 4) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 5:
        if (v4 != 2 || *(void *)&v3 != 5) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 6:
        if (v4 != 2 || *(void *)&v3 != 6) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 7:
        if (v4 != 2 || *(void *)&v3 != 7) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 8:
        if (v4 != 2 || *(void *)&v3 != 8) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 9:
        if (v4 != 2 || *(void *)&v3 != 9) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if (v4 != 2 || *(void *)&v3 != 0) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return !*(unsigned char *)(a2 + 8) && v2 == v3;
  }
  return result;
}

uint64_t type metadata accessor for PlaybackController.QueueCommand()
{
  uint64_t result = qword_1EBFE35D8;
  if (!qword_1EBFE35D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3D90100(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    sub_1E3C5B530(a1, a2);
  }
}

uint64_t dispatch thunk of PlaybackCommand.request(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1E3C8C7D4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PlaybackCommand.canPerform(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1E3D8638C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PlaybackCommand.requiresLocalRoute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SynchronousPlaybackCommand.request(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SynchronousPlaybackCommand.canPerform(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for PlaybackController.TransportCommand()
{
  return &type metadata for PlaybackController.TransportCommand;
}

ValueMetadata *type metadata accessor for PlaybackController.SleepTimerCommand()
{
  return &type metadata for PlaybackController.SleepTimerCommand;
}

char *_s12QueueCommandOwCP(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v7 = *(char **)a2;
        *(void *)a1 = *(void *)a2;
        uint64_t v8 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v11 = *(char **)a2;
        *(void *)a1 = *(void *)a2;
        uint64_t v12 = a2 + 8;
        int v13 = a2[16];
        uint64_t v14 = v11;
        if (v13 == 255)
        {
          *((void *)a1 + 1) = *(void *)v12;
          a1[16] = v12[8];
        }
        else
        {
          uint64_t v15 = *(void *)v12;
          sub_1E3C72848(*(id *)v12, v13);
          *((void *)a1 + 1) = v15;
          a1[16] = v13;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v16 = sub_1E3E790E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
        uint64_t v18 = &a1[v17];
        id v19 = &a2[v17];
        id v20 = *(id *)v19;
        unsigned __int8 v21 = v19[8];
        sub_1E3C72848(*(id *)v19, v21);
        *(void *)uint64_t v18 = v20;
        v18[8] = v21;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v22 = sub_1E3E78FF0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void _s12QueueCommandOwxx(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      id v2 = *(id *)a1;

      break;
    case 2u:

      int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 != 255)
      {
        int v4 = *(void **)(a1 + 8);
        goto LABEL_9;
      }
      break;
    case 3u:
      uint64_t v5 = sub_1E3E790E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
      int v4 = *(void **)v6;
      LOBYTE(v3) = *(unsigned char *)(v6 + 8);
LABEL_9:
      sub_1E3C5B530(v4, v3);
      break;
    case 4u:
      uint64_t v7 = sub_1E3E78FF0();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(a1, v7);
      break;
    default:
      return;
  }
}

void **_s12QueueCommandOwcp(void **a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = *a2;
      *a1 = *a2;
      id v7 = v6;
      goto LABEL_9;
    case 2u:
      uint64_t v8 = *a2;
      *a1 = *a2;
      uint64_t v9 = (char *)(a2 + 1);
      int v10 = *((unsigned __int8 *)a2 + 16);
      id v11 = v8;
      if (v10 == 255)
      {
        a1[1] = *(void **)v9;
        *((unsigned char *)a1 + 16) = v9[8];
      }
      else
      {
        uint64_t v12 = *(void **)v9;
        sub_1E3C72848(*(id *)v9, v10);
        a1[1] = v12;
        *((unsigned char *)a1 + 16) = v10;
      }
      goto LABEL_9;
    case 3u:
      uint64_t v13 = sub_1E3E790E0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      id v17 = *(id *)v16;
      unsigned __int8 v18 = v16[8];
      sub_1E3C72848(*(id *)v16, v18);
      *(void *)uint64_t v15 = v17;
      v15[8] = v18;
      goto LABEL_9;
    case 4u:
      uint64_t v19 = sub_1E3E78FF0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *_s12QueueCommandOwca(char *a1, void **a2, uint64_t a3)
{
  if (a1 != (char *)a2)
  {
    sub_1E3C72960((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v6 = *a2;
        *(void *)a1 = *a2;
        id v7 = v6;
        goto LABEL_10;
      case 2u:
        uint64_t v8 = *a2;
        *(void *)a1 = *a2;
        uint64_t v9 = (char *)(a2 + 1);
        int v10 = *((unsigned __int8 *)a2 + 16);
        id v11 = v8;
        if (v10 == 255)
        {
          id v20 = *(id *)v9;
          a1[16] = v9[8];
          *((void *)a1 + 1) = v20;
        }
        else
        {
          id v12 = *(id *)v9;
          sub_1E3C72848(*(id *)v9, v10);
          *((void *)a1 + 1) = v12;
          a1[16] = v10;
        }
        goto LABEL_10;
      case 3u:
        uint64_t v13 = sub_1E3E790E0();
        (*(void (**)(char *, void **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
        uint64_t v15 = &a1[v14];
        uint64_t v16 = (char *)a2 + v14;
        id v17 = *(id *)v16;
        unsigned __int8 v18 = v16[8];
        sub_1E3C72848(*(id *)v16, v18);
        *(void *)uint64_t v15 = v17;
        v15[8] = v18;
        goto LABEL_10;
      case 4u:
        uint64_t v19 = sub_1E3E78FF0();
        (*(void (**)(char *, void **, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *_s12QueueCommandOwtk(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v11 = sub_1E3E78FF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 3)
  {
    uint64_t v7 = sub_1E3E790E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
    uint64_t v9 = &a1[v8];
    int v10 = &a2[v8];
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *_s12QueueCommandOwta(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3C72960((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v11 = sub_1E3E78FF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 3)
    {
      uint64_t v7 = sub_1E3E790E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25EE8) + 48);
      uint64_t v9 = &a1[v8];
      int v10 = &a2[v8];
      *(void *)uint64_t v9 = *(void *)v10;
      v9[8] = v10[8];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1E3D90DFC()
{
  uint64_t v4 = MEMORY[0x1E4FBAD78] + 64;
  uint64_t v5 = MEMORY[0x1E4FBAD78] + 64;
  uint64_t v6 = &unk_1E3E91128;
  uint64_t result = sub_1E3E790E0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v3;
    uint64_t result = sub_1E3E78FF0();
    if (v2 <= 0x3F)
    {
      uint64_t v8 = *(void *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t _s12QueueCommandO8LocationOwCP(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1E3C72848(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void _s12QueueCommandO8LocationOwxx(uint64_t a1)
{
}

uint64_t _s12QueueCommandO8LocationOwca(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1E3C72848(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1E3C5B530(v5, v6);
  return a1;
}

uint64_t _s12QueueCommandO8LocationOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1E3C5B530(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for PlaybackController.QueueCommand.Location()
{
  return &type metadata for PlaybackController.QueueCommand.Location;
}

uint64_t sub_1E3D90FEC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1E3D90FFC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1E3D91010(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28400);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3D91080()
{
  uint64_t result = sub_1E3E7B550();
  qword_1EAE28410 = result;
  return result;
}

uint64_t static Color.nowPlayingPrimaryColor.getter()
{
  return sub_1E3D911BC(&qword_1EAE244B8);
}

uint64_t sub_1E3D910C4(uint64_t a1)
{
  return sub_1E3D91144(a1, &qword_1EAE28418);
}

uint64_t static Color.nowPlayingSecondaryColor.getter()
{
  return sub_1E3D911BC(&qword_1EAE244C0);
}

uint64_t sub_1E3D910FC(uint64_t a1)
{
  return sub_1E3D91144(a1, &qword_1EAE28420);
}

uint64_t static Color.nowPlayingTertiaryColor.getter()
{
  return sub_1E3D911BC(&qword_1EAE244C8);
}

uint64_t sub_1E3D91130(uint64_t a1)
{
  return sub_1E3D91144(a1, &qword_1EAE28428);
}

uint64_t sub_1E3D91144(uint64_t a1, uint64_t *a2)
{
  sub_1E3E7B550();
  uint64_t v3 = sub_1E3E7B560();
  uint64_t result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t static Color.nowPlayingQuaternaryColor.getter()
{
  return sub_1E3D911BC(qword_1EAE244D0);
}

uint64_t sub_1E3D911BC(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return sub_1E3E775E0();
}

uint64_t static ShapeStyle<>.vibrantPrimary.getter@<X0>(char *a1@<X8>)
{
  return sub_1E3D91298(&qword_1EAE244B8, &qword_1EAE28410, a1);
}

uint64_t static ShapeStyle<>.vibrantSecondary.getter@<X0>(char *a1@<X8>)
{
  return sub_1E3D91298(&qword_1EAE244C0, &qword_1EAE28418, a1);
}

uint64_t static ShapeStyle<>.vibrantTertiary.getter@<X0>(char *a1@<X8>)
{
  return sub_1E3D91298(&qword_1EAE244C8, &qword_1EAE28420, a1);
}

uint64_t static ShapeStyle<>.vibrantQuaternary.getter@<X0>(char *a1@<X8>)
{
  return sub_1E3D91298(qword_1EAE244D0, &qword_1EAE28428, a1);
}

uint64_t sub_1E3D91298@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1E3E7B730();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v10 = *a2;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F3EFC0], v6);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28430);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&a3[*(int *)(v11 + 36)], v9, v6);
  *(void *)a3 = v10;
  id v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  sub_1E3E775E0();
  return v12(v9, v6);
}

unint64_t sub_1E3D913F8()
{
  unint64_t result = qword_1EAE28438;
  if (!qword_1EAE28438)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28438);
  }
  return result;
}

uint64_t type metadata accessor for PlaybackUtils()
{
  return self;
}

void *sub_1E3D91478()
{
  unint64_t v1 = v0;
  uint64_t v151 = _s12ErrorHandlerVMa();
  MEMORY[0x1F4188790](v151);
  v146 = (id *)((char *)&v140 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v150 = (uint64_t)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5820);
  MEMORY[0x1F4188790](v5 - 8);
  v149 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E79990();
  uint64_t v152 = *(void *)(v7 - 8);
  uint64_t v153 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E3E7A880();
  uint64_t v155 = *(void *)(v10 - 8);
  uint64_t v156 = v10;
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v147 = (char *)&v140 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v145 = (char *)&v140 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v148 = (char *)&v140 - v18;
  MEMORY[0x1F4188790](v19);
  v154 = (char *)&v140 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v140 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v140 - v25;
  uint64_t v27 = (void *)sub_1E3E77B20();
  v28._countAndFlagsBits = sub_1E3E7CD30();
  NSError.errorByUnwrapping(domain:)(v29, v28);
  id v31 = v30;

  swift_bridgeObjectRelease();
  if (v31)
  {
    id v32 = objc_msgSend(v31, sel_code);
    if (v32 == (id)-11870) {
      goto LABEL_5;
    }
    if (v32 == (id)-11819)
    {
      sub_1E3D93A00();
      BOOL v34 = (void *)swift_allocError();
      *(_OWORD *)uint64_t v33 = xmmword_1E3E911C0;
      goto LABEL_7;
    }
    if (v32 == (id)-11828)
    {
LABEL_5:
      sub_1E3D93A00();
      BOOL v34 = (void *)swift_allocError();
      *(void *)uint64_t v33 = 0;
      *(void *)(v33 + 8) = 0;
LABEL_7:
      *(unsigned char *)(v33 + 16) = 4;

      return v34;
    }
    unint64_t v144 = v1;
    sub_1E3E7A7B0();
    id v35 = v31;
    int v36 = sub_1E3E7A860();
    os_log_type_t v37 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v36, v37))
    {
      v143 = v12;
      char v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v141 = (void *)swift_slowAlloc();
      v142 = v38;
      *(_DWORD *)char v38 = 138412290;
      uint64_t v140 = v38 + 4;
      v157 = v35;
      id v35 = v35;
      id v12 = v143;
      sub_1E3E7DBD0();
      uint64_t v39 = v141;
      *uint64_t v141 = v31;

      uint64_t v40 = v142;
      _os_log_impl(&dword_1E3BC5000, v36, v37, "Unhandled AVFoundation error: %@", v142, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v39, -1, -1);
      MEMORY[0x1E4E79510](v40, -1, -1);
    }
    else
    {

      int v36 = v35;
    }

    (*(void (**)(char *, uint64_t))(v155 + 8))(v26, v156);
    unint64_t v1 = v144;
  }
  unsigned __int8 v41 = (void *)sub_1E3E77B20();
  v42._countAndFlagsBits = sub_1E3E7CD30();
  NSError.errorByUnwrapping(domain:)(v43, v42);
  uint64_t v45 = v44;

  swift_bridgeObjectRelease();
  if (!v45) {
    goto LABEL_25;
  }
  id v46 = objc_msgSend(v45, sel_code);
  if (v46 == (id)-1014)
  {
    sub_1E3D93A00();
    BOOL v34 = (void *)swift_allocError();
    long long v48 = xmmword_1E3E911C0;
LABEL_19:
    *(_OWORD *)uint64_t v47 = v48;
    goto LABEL_20;
  }
  if (v46 == (id)-1002)
  {
    sub_1E3D93A00();
    BOOL v34 = (void *)swift_allocError();
    long long v48 = xmmword_1E3E911D0;
    goto LABEL_19;
  }
  if (v46 == (id)-1004)
  {
    sub_1E3D93A00();
    BOOL v34 = (void *)swift_allocError();
    *(void *)uint64_t v47 = 0;
    *(void *)(v47 + 8) = 0;
LABEL_20:
    *(unsigned char *)(v47 + 16) = 2;

    return v34;
  }
  unint64_t v144 = v1;
  sub_1E3E7A7B0();
  unsigned __int8 v49 = v45;
  uint64_t v50 = sub_1E3E7A860();
  os_log_type_t v51 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v50, v51))
  {
    v143 = v12;
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    v142 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 138543362;
    v157 = v49;
    unsigned __int8 v49 = v49;
    id v12 = v143;
    sub_1E3E7DBD0();
    uint64_t v53 = v142;
    *(void *)v142 = v45;

    _os_log_impl(&dword_1E3BC5000, v50, v51, "Unhandled ICKeyServerError error: %{public}@", v52, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v53, -1, -1);
    MEMORY[0x1E4E79510](v52, -1, -1);
  }
  else
  {

    uint64_t v50 = v49;
  }

  (*(void (**)(char *, uint64_t))(v155 + 8))(v23, v156);
  unint64_t v1 = v144;
LABEL_25:
  uint64_t v54 = (void *)sub_1E3E77B20();
  v55._object = (void *)0x80000001E3EA2420;
  v55._countAndFlagsBits = 0xD000000000000027;
  NSError.errorByUnwrapping(domain:)((NSError_optional *)"_TtC10PodcastsUI13PlaybackUtils", v55);
  char v57 = v56;

  if (v57)
  {
    id v58 = objc_msgSend(v57, sel_code);
    uint64_t v60 = v152;
    uint64_t v59 = v153;
    (*(void (**)(char *, void, uint64_t))(v152 + 104))(v9, *MEMORY[0x1E4F91B28], v153);
    uint64_t v61 = sub_1E3E79980();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v59);
    if ((id)v61 == v58)
    {
      sub_1E3D93A00();
      BOOL v34 = (void *)swift_allocError();
      *(_OWORD *)uint64_t v62 = xmmword_1E3E911E0;
      *(unsigned char *)(v62 + 16) = 4;

      return v34;
    }
    sub_1E3E7A7B0();
    uint64_t v63 = v57;
    char v64 = sub_1E3E7A860();
    os_log_type_t v65 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      unint64_t v144 = v1;
      uint64_t v67 = (uint8_t *)v66;
      uint64_t v68 = swift_slowAlloc();
      v143 = v12;
      os_signpost_id_t v69 = (void *)v68;
      *(_DWORD *)uint64_t v67 = 138543362;
      v157 = v63;
      uint64_t v63 = v63;
      sub_1E3E7DBD0();
      *os_signpost_id_t v69 = v57;

      _os_log_impl(&dword_1E3BC5000, v64, v65, "Unhandled FairPlayKeyLoadError error: %{public}@", v67, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
      swift_arrayDestroy();
      uint64_t v70 = v69;
      id v12 = v143;
      MEMORY[0x1E4E79510](v70, -1, -1);
      uint64_t v71 = v67;
      unint64_t v1 = v144;
      MEMORY[0x1E4E79510](v71, -1, -1);
    }
    else
    {

      char v64 = v63;
    }

    (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v156);
  }
  uint64_t v72 = (void *)sub_1E3E77B20();
  v73._countAndFlagsBits = sub_1E3E7CD30();
  NSError.errorByUnwrapping(domain:)(v74, v73);
  uint64_t v76 = v75;

  swift_bridgeObjectRelease();
  if (v76)
  {
    uint64_t v77 = (uint64_t)objc_msgSend(v76, sel_code);
    if (v77 <= -1010)
    {
      if (v77 != -1200 && v77 != -1100)
      {
LABEL_45:
        unint64_t v144 = v1;
        sub_1E3E7A7B0();
        uint64_t v89 = v76;
        uint64_t v90 = sub_1E3E7A860();
        os_log_type_t v91 = sub_1E3E7D4E0();
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v92 = swift_slowAlloc();
          v143 = v12;
          uint64_t v93 = (uint8_t *)v92;
          uint64_t v94 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v93 = 138412290;
          v157 = v89;
          uint64_t v89 = v89;
          sub_1E3E7DBD0();
          *uint64_t v94 = v76;

          _os_log_impl(&dword_1E3BC5000, v90, v91, "Unhandled network error: %@", v93, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v94, -1, -1);
          uint64_t v95 = v93;
          id v12 = v143;
          MEMORY[0x1E4E79510](v95, -1, -1);
        }
        else
        {

          uint64_t v90 = v89;
        }

        (*(void (**)(char *, uint64_t))(v155 + 8))(v148, v156);
        unint64_t v1 = v144;
        goto LABEL_51;
      }
    }
    else if (v77 != -1003 && v77 != -1008)
    {
      if (v77 == -1009)
      {
        sub_1E3D93A00();
        BOOL v34 = (void *)swift_allocError();
        long long v79 = xmmword_1E3E911D0;
LABEL_72:
        *(_OWORD *)uint64_t v78 = v79;
        char v104 = 4;
        goto LABEL_73;
      }
      goto LABEL_45;
    }
    uint64_t v80 = v150;
    sub_1E3D93A54((uint64_t)v1 + *(int *)(v151 + 20), v150);
    uint64_t v81 = sub_1E3E78FF0();
    uint64_t v82 = *(void *)(v81 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) == 1)
    {
      uint64_t v83 = &qword_1EAE28450;
      uint64_t v84 = v80;
    }
    else
    {
      uint64_t v85 = v149;
      sub_1E3E78F30();
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
      uint64_t v86 = sub_1E3E78440();
      uint64_t v87 = *(void *)(v86 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86) != 1)
      {
        uint64_t v96 = sub_1E3E78430();
        uint64_t v98 = v97;
        (*(void (**)(char *, uint64_t))(v87 + 8))(v85, v86);
        sub_1E3D93A00();
        BOOL v34 = (void *)swift_allocError();
        *(void *)uint64_t v88 = v96;
        *(void *)(v88 + 8) = v98;
        goto LABEL_48;
      }
      uint64_t v83 = &qword_1EBFE5820;
      uint64_t v84 = (uint64_t)v85;
    }
    sub_1E3C10CE0(v84, v83);
    sub_1E3D93A00();
    BOOL v34 = (void *)swift_allocError();
    *(void *)uint64_t v88 = 0;
    *(void *)(v88 + 8) = 0;
LABEL_48:
    *(unsigned char *)(v88 + 16) = 0;
LABEL_74:

    return v34;
  }
LABEL_51:
  v143 = v12;
  uint64_t v99 = (void *)sub_1E3E77B20();
  v100._countAndFlagsBits = sub_1E3E7CD30();
  NSError.errorByUnwrapping(domain:)(v101, v100);
  uint64_t v76 = v102;

  swift_bridgeObjectRelease();
  if (v76)
  {
    id v103 = objc_msgSend(v76, sel_code);
    if (v103 == (id)2004)
    {
      sub_1E3D93A00();
      BOOL v34 = (void *)swift_allocError();
      *(void *)uint64_t v78 = 0;
      *(void *)(v78 + 8) = 0;
      char v104 = 3;
LABEL_73:
      *(unsigned char *)(v78 + 16) = v104;
      goto LABEL_74;
    }
    if (v103 == (id)1)
    {
      sub_1E3D93A00();
      BOOL v34 = (void *)swift_allocError();
      long long v79 = xmmword_1E3E911F0;
      goto LABEL_72;
    }
  }
  uint64_t v105 = (void *)sub_1E3E77B20();
  v106._countAndFlagsBits = sub_1E3E7CD30();
  NSError.errorByUnwrapping(domain:)(v107, v106);
  unint64_t v109 = v108;

  swift_bridgeObjectRelease();
  if (!v109)
  {
LABEL_63:
    v115 = (void *)sub_1E3E77B20();
    v116._countAndFlagsBits = sub_1E3E7CD30();
    NSError.errorByUnwrapping(domain:)(v117, v116);
    uint64_t v76 = v118;

    swift_bridgeObjectRelease();
    if (v76)
    {
      if (objc_msgSend(v76, sel_code) == (id)8)
      {
LABEL_71:
        sub_1E3D93A00();
        BOOL v34 = (void *)swift_allocError();
        long long v79 = xmmword_1E3E911E0;
        goto LABEL_72;
      }
      unint64_t v144 = v1;
      sub_1E3E7A7B0();
      uint64_t v119 = v76;
      v120 = sub_1E3E7A860();
      os_log_type_t v121 = sub_1E3E7D4E0();
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v122 = (uint8_t *)swift_slowAlloc();
        v123 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v122 = 138412290;
        v157 = v119;
        uint64_t v119 = v119;
        sub_1E3E7DBD0();
        void *v123 = v76;

        _os_log_impl(&dword_1E3BC5000, v120, v121, "Unhandled behavior error: %@", v122, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
        swift_arrayDestroy();
        MEMORY[0x1E4E79510](v123, -1, -1);
        MEMORY[0x1E4E79510](v122, -1, -1);
      }
      else
      {

        v120 = v119;
      }
      unint64_t v1 = v144;

      (*(void (**)(char *, uint64_t))(v155 + 8))(v147, v156);
    }
    BOOL v34 = *v1;
    v124 = (void *)sub_1E3E77B20();
    v125._countAndFlagsBits = sub_1E3E7CD30();
    NSError.errorByUnwrapping(domain:)(v126, v125);
    uint64_t v76 = v127;

    swift_bridgeObjectRelease();
    uint64_t v128 = v143;
    if (v76)
    {
      if (objc_msgSend(v76, sel_code) == (id)27) {
        goto LABEL_71;
      }
    }
    if (objc_msgSend(*(void **)((char *)v1 + *(int *)(v151 + 24)), sel_isReachable))
    {
      id v130 = v34;
    }
    else
    {
      sub_1E3E7A7B0();
      sub_1E3D9399C((uint64_t)v1, (uint64_t)v146);
      uint64_t v131 = sub_1E3E7A860();
      os_log_type_t v132 = sub_1E3E7D4E0();
      if (os_log_type_enabled(v131, v132))
      {
        uint64_t v133 = (uint8_t *)swift_slowAlloc();
        v134 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v133 = 138412290;
        uint64_t v135 = v146;
        id v136 = *v146;
        uint64_t v137 = _swift_stdlib_bridgeErrorToNSError();
        v157 = v137;
        sub_1E3E7DBD0();
        void *v134 = v137;
        sub_1E3CDA284((uint64_t)v135);
        _os_log_impl(&dword_1E3BC5000, v131, v132, "Unreachable: %@", v133, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
        swift_arrayDestroy();
        v138 = v134;
        uint64_t v128 = v143;
        MEMORY[0x1E4E79510](v138, -1, -1);
        MEMORY[0x1E4E79510](v133, -1, -1);
      }
      else
      {
        sub_1E3CDA284((uint64_t)v146);
      }

      (*(void (**)(char *, uint64_t))(v155 + 8))(v128, v156);
      sub_1E3D93A00();
      BOOL v34 = (void *)swift_allocError();
      *(_OWORD *)uint64_t v139 = xmmword_1E3E911D0;
      *(unsigned char *)(v139 + 16) = 4;
    }
    return v34;
  }
  if (objc_msgSend(v109, sel_code) != (id)1000)
  {

    goto LABEL_63;
  }
  uint64_t v110 = v145;
  sub_1E3E7A7B0();
  uint64_t v111 = sub_1E3E7A860();
  os_log_type_t v112 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v111, v112))
  {
    uint64_t v113 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v113 = 0;
    _os_log_impl(&dword_1E3BC5000, v111, v112, "MPC was unable to handle this intent. Is MPC up to date?", v113, 2u);
    MEMORY[0x1E4E79510](v113, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v155 + 8))(v110, v156);
  sub_1E3D93A00();
  BOOL v34 = (void *)swift_allocError();
  *(void *)uint64_t v114 = v109;
  *(void *)(v114 + 8) = 0;
  *(unsigned char *)(v114 + 16) = 1;
  return v34;
}

BOOL static PlaybackController.FairPlayKeyServerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PlaybackController.FairPlayKeyServerError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t PlaybackController.FairPlayKeyServerError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t static PlaybackController.CommandError.== infix(_:_:)()
{
  return 1;
}

uint64_t PlaybackController.CommandError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t PlaybackController.CommandError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

void __swiftcall NSError.errorByUnwrapping(domain:)(NSError_optional *__return_ptr retstr, Swift::String domain)
{
  object = domain._object;
  uint64_t countAndFlagsBits = domain._countAndFlagsBits;
  id v5 = objc_msgSend(v2, sel_domain);
  uint64_t v6 = sub_1E3E7CD30();
  uint64_t v8 = v7;

  if (v6 == countAndFlagsBits && v8 == object)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v10 = sub_1E3E7E150();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_13:
    id v18 = v2;
    return;
  }
  id v11 = objc_msgSend(v2, sel_underlyingErrors);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
  uint64_t v12 = sub_1E3E7D060();

  unint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(v12 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v14; ++i)
    {
      uint64_t v16 = *(void **)(v12 + 8 * i + 32);
      id v17 = v16;
      sub_1E3E77B20();

      MEMORY[0x1E4E76960]();
      if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1E3E7D090();
      }
      sub_1E3E7D100();
      sub_1E3E7D080();
    }
    swift_bridgeObjectRelease();
    unint64_t v13 = v24;
  }
  swift_bridgeObjectRelease();
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_16;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_21;
  }
LABEL_16:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v19 = (id)MEMORY[0x1E4E77720](0, v13);
    goto LABEL_19;
  }
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v19 = *(id *)(v13 + 32);
LABEL_19:
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = countAndFlagsBits;
    v21._object = object;
    NSError.errorByUnwrapping(domain:)(v22, v21);

    return;
  }
  __break(1u);
}

unint64_t sub_1E3D92A48()
{
  unint64_t result = qword_1EAE28440;
  if (!qword_1EAE28440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28440);
  }
  return result;
}

unint64_t sub_1E3D92AA0()
{
  unint64_t result = qword_1EAE28448;
  if (!qword_1EAE28448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28448);
  }
  return result;
}

id sub_1E3D92AF8(id result, id a2, char a3)
{
  if (a3 == 1) {
    return result;
  }
  if (!a3) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void _s11PlayerErrorOwxx(uint64_t a1)
{
}

uint64_t _s11PlayerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1E3D92AF8(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11PlayerErrorOwca(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1E3D92AF8(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1E3C4941C(v6, v7, v8);
  return a1;
}

uint64_t _s11PlayerErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1E3C4941C(v4, v5, v6);
  return a1;
}

uint64_t _s11PlayerErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s11PlayerErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1E3D92CA0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1E3D92CB8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.PlayerError()
{
  return &type metadata for PlaybackController.PlayerError;
}

unsigned char *_s22FairPlayKeyServerErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3D92DACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.FairPlayKeyServerError()
{
  return &type metadata for PlaybackController.FairPlayKeyServerError;
}

unsigned char *_s12CommandErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3D92E80);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.CommandError()
{
  return &type metadata for PlaybackController.CommandError;
}

char *sub_1E3D92EB8(char *a1, void **a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = (char *)*a2;
  if ((v4 & 0x20000) != 0)
  {
    *(void *)a1 = v5;
    int v3 = &v5[(v4 + 16) & ~(unint64_t)v4];
    sub_1E3E775E0();
  }
  else
  {
    char v8 = v5;
    *(void *)int v3 = v5;
    uint64_t v9 = *(int *)(a3 + 20);
    char v10 = &v3[v9];
    id v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1E3E78FF0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(void *)&v3[*(int *)(a3 + 24)] = *(void **)((char *)a2 + *(int *)(a3 + 24));
    swift_unknownObjectRetain();
  }
  return v3;
}

uint64_t sub_1E3D93044(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1E3E78FF0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_unknownObjectRelease();
}

void *sub_1E3D93114(void *a1, id *a2, uint64_t a3)
{
  id v6 = *a2;
  id v7 = *a2;
  *a1 = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  char v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1E3E78FF0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(id *)((char *)a2 + *(int *)(a3 + 24));
  swift_unknownObjectRetain();
  return a1;
}

void **sub_1E3D93250(void **a1, id *a2, uint64_t a3)
{
  id v6 = *a2;
  id v7 = *a2;
  uint64_t v8 = *a1;
  *a1 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  char v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1E3E78FF0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(id *)((char *)a2 + *(int *)(a3 + 24));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *sub_1E3D93404(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E78FF0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **sub_1E3D93534(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E78FF0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(void **)((char *)a2 + *(int *)(a3 + 24));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1E3D936D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3D936EC);
}

uint64_t sub_1E3D936EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1E3D937A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3D937B4);
}

void *sub_1E3D937B4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s12ErrorHandlerVMa()
{
  uint64_t result = qword_1EAE28458;
  if (!qword_1EAE28458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3D938AC()
{
  sub_1E3D93944();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1E3D93944()
{
  if (!qword_1EAE28468)
  {
    sub_1E3E78FF0();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAE28468);
    }
  }
}

uint64_t sub_1E3D9399C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ErrorHandlerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1E3D93A00()
{
  unint64_t result = qword_1EAE28470;
  if (!qword_1EAE28470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28470);
  }
  return result;
}

uint64_t sub_1E3D93A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall UINavigationController.clearBottomPaletteIfNeeded()()
{
  id v1 = objc_msgSend(v0, sel_topViewController);
  if (v1)
  {
    id v6 = v1;
    id v2 = objc_msgSend(v1, sel_navigationItem);
    id v3 = objc_msgSend(v2, sel__bottomPalette);

    if (v3)
    {
      id v4 = objc_msgSend(v6, sel_navigationItem);
      objc_msgSend(v4, sel__setBottomPalette_, 0);

      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v5 = v6;
    }
  }
}

double static TranscriptModel.maxSecondsBetweenSentencesInParagraph.getter()
{
  return 3.0;
}

uint64_t TranscriptModel.createParagraphs(with:includeShortDescriptors:completion:)(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  int v21 = a2;
  uint64_t v6 = sub_1E3E792A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  double v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = (void *)a1[2];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v6, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  unint64_t v15 = v14 + ((v13 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v15 = v11;
  *(void *)(v15 + 8) = v10;
  *(void *)(v15 + 16) = v12;
  *(unsigned char *)(v15 + 24) = v21;
  int v16 = (void *)(v14 + ((v13 + v8 + 39) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = v23;
  *int v16 = v22;
  v16[1] = v17;
  id v18 = v12;
  sub_1E3E775E0();
  sub_1E3D949A4((uint64_t)sub_1E3D93E0C, v14);
  return swift_release();
}

uint64_t sub_1E3D93D48()
{
  uint64_t v1 = sub_1E3E792A0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (v3 + *(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3D93E0C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1E3E792A0() - 8);
  unint64_t v4 = ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
     + *(void *)(v3 + 64);
  uint64_t v5 = (long long *)(v1 + ((v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *((void *)v5 + 2);
  int v7 = *((unsigned __int8 *)v5 + 24);
  uint64_t v8 = *(void (**)(void))(v1 + ((v4 + 39) & 0xFFFFFFFFFFFFFFF8));
  long long v10 = *v5;
  uint64_t v11 = v6;
  sub_1E3D93EF8(a1, (uint64_t *)&v10, v7);
  v8();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1E3D93EF8(uint64_t a1, uint64_t *a2, int a3)
{
  int v88 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26698);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v72 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1E3E791C0();
  uint64_t v73 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE266B0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v77 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E79220();
  uint64_t v81 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (char *)&v64 - v15;
  uint64_t v16 = sub_1E3E79290();
  uint64_t v89 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v86 = (uint64_t)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v64 - v19;
  uint64_t v21 = *a2;
  uint64_t v22 = a2[1];
  uint64_t v23 = (void *)a2[2];
  uint64_t v94 = v22;
  uint64_t v95 = v21;
  uint64_t v96 = v23;
  if (v23)
  {
    double v24 = *(double *)&v21;
    double v25 = *(double *)&v22;
    id v26 = v23;
    uint64_t v27 = MEMORY[0x1E4E76870](0x6161616161616161, 0xE900000000000020, 200);
    uint64_t v29 = v28;
    objc_allocWithZone((Class)type metadata accessor for TranscriptsLayoutManager());
    id v30 = v26;
    id v31 = sub_1E3D1FBE4(v24, v27, v29, v30);
    id v93 = objc_msgSend(v31, sel_characterIndexForPoint_inTextContainer_fractionOfDistanceBetweenInsertionPoints_, *(void *)&v31[OBJC_IVAR____TtC10PodcastsUI24TranscriptsLayoutManager_textContainer], 0, v24, v25);
  }
  else
  {
    id v93 = 0;
  }
  unint64_t v100 = MEMORY[0x1E4FBC860];
  uint64_t v87 = *(void *)(a1 + 16);
  if (v87)
  {
    uint64_t v66 = v8;
    uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
    BOOL v92 = v96 == 0;
    unint64_t v79 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    uint64_t v84 = a1 + v79;
    uint64_t v90 = *(void *)(v89 + 72);
    uint64_t v97 = v81 + 16;
    uint64_t v76 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
    uint64_t v75 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
    uint64_t v74 = (void (**)(char *, uint64_t, uint64_t))(v81 + 32);
    id v32 = (void (**)(char *, uint64_t))(v81 + 8);
    uint64_t v68 = v73 + 16;
    uint64_t v70 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
    os_signpost_id_t v69 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
    os_log_type_t v65 = (void (**)(char *, uint64_t, uint64_t))(v73 + 32);
    char v64 = (void (**)(char *, uint64_t))(v73 + 8);
    uint64_t v83 = (void (**)(char *, uint64_t))(v89 + 8);
    v89 += 16;
    uint64_t v78 = (void (**)(unint64_t, uint64_t, uint64_t))(v89 + 16);
    uint64_t v67 = a1;
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    BOOL v34 = v80;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    uint64_t v82 = v16;
    while (1)
    {
      uint64_t v91 = v33;
      v85(v20, v84 + v90 * v33, v16);
      if (v88) {
        goto LABEL_25;
      }
      uint64_t v36 = *(void *)(sub_1E3E79240() + 16);
      swift_bridgeObjectRelease();
      if (v36 != 1) {
        goto LABEL_25;
      }
      uint64_t v37 = sub_1E3E79240();
      if (*(void *)(v37 + 16))
      {
        uint64_t v38 = (uint64_t)v77;
        (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v77, v37 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80)), v11);
        uint64_t v39 = 0;
      }
      else
      {
        uint64_t v39 = 1;
        uint64_t v38 = (uint64_t)v77;
      }
      (*v76)(v38, v39, 1, v11);
      swift_bridgeObjectRelease();
      if ((*v75)(v38, 1, v11) == 1) {
        break;
      }
      (*v74)(v34, v38, v11);
      uint64_t v40 = *(void *)(sub_1E3E791E0() + 16);
      swift_bridgeObjectRelease();
      if (v40 != 1)
      {
        (*v32)(v34, v11);
        goto LABEL_25;
      }
      uint64_t v41 = sub_1E3E791E0();
      if (*(void *)(v41 + 16))
      {
        uint64_t v42 = (uint64_t)v72;
        uint64_t v43 = v71;
        (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v72, v41 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80)), v71);
        uint64_t v44 = 0;
      }
      else
      {
        uint64_t v44 = 1;
        uint64_t v42 = (uint64_t)v72;
        uint64_t v43 = v71;
      }
      (*v70)(v42, v44, 1, v43);
      swift_bridgeObjectRelease();
      if ((*v69)(v42, 1, v43) == 1)
      {
        (*v32)(v34, v11);
        sub_1E3C10CE0(v42, &qword_1EAE26698);
        goto LABEL_24;
      }
      uint64_t v45 = v43;
      id v46 = v66;
      (*v65)(v66, v42, v45);
      if ((sub_1E3E79170() & 1) == 0)
      {
        (*v64)(v46, v45);
        (*v32)(v34, v11);
LABEL_24:
        uint64_t v35 = MEMORY[0x1E4FBC860];
LABEL_25:
        uint64_t v99 = v35;
        uint64_t v51 = sub_1E3E79240();
        uint64_t v52 = *(void *)(v51 + 16);
        if (v52)
        {
          unint64_t v53 = v51 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
          uint64_t v54 = *(void *)(v81 + 72);
          Swift::String v55 = *(void (**)(char *, unint64_t, uint64_t))(v81 + 16);
          swift_bridgeObjectRetain();
          do
          {
            v55(v13, v53, v11);
            sub_1E3D94BF4((uint64_t)v13, &v99, (uint64_t)v93, v92, &v100, (uint64_t)v20, v95, v94, v96);
            (*v32)(v13, v11);
            v53 += v54;
            --v52;
          }
          while (v52);
          swift_bridgeObjectRelease_n();
          uint64_t v56 = v99;
          BOOL v34 = v80;
          uint64_t v35 = MEMORY[0x1E4FBC860];
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v56 = v35;
        }
        uint64_t v98 = v56;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28480);
        sub_1E3D3D9B4(&qword_1EAE28488, &qword_1EAE28480);
        char v57 = sub_1E3E7D3C0();
        uint64_t v16 = v82;
        if (v57)
        {
          swift_bridgeObjectRetain();
          uint64_t v58 = sub_1E3E79260();
          sub_1E3C9FFB0(v58, v59, v56, v86);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v60 = v100;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v60 = sub_1E3CB8090(0, *(void *)(v60 + 16) + 1, 1, v60);
          }
          unint64_t v62 = *(void *)(v60 + 16);
          unint64_t v61 = *(void *)(v60 + 24);
          if (v62 >= v61 >> 1) {
            unint64_t v60 = sub_1E3CB8090(v61 > 1, v62 + 1, 1, v60);
          }
          *(void *)(v60 + 16) = v62 + 1;
          (*v78)(v60 + v79 + v62 * v90, v86, v16);
          unint64_t v100 = v60;
          uint64_t v35 = MEMORY[0x1E4FBC860];
        }
        (*v83)(v20, v16);
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      sub_1E3E79190();
      double v48 = v47;
      sub_1E3E791B0();
      double v50 = v49;
      (*v64)(v46, v45);
      (*v32)(v34, v11);
      uint64_t v35 = MEMORY[0x1E4FBC860];
      if (v48 - v50 >= 2.0) {
        goto LABEL_25;
      }
      ((void (*)(char *, uint64_t, double))*v83)(v20, v16, v48 - v50);
LABEL_37:
      uint64_t v33 = v91 + 1;
      if (v91 + 1 == v87)
      {
        swift_bridgeObjectRelease();
        return v100;
      }
    }
    sub_1E3C10CE0(v38, &qword_1EAE266B0);
    goto LABEL_25;
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1E3D949A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1E3E792A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  id v9 = objc_msgSend(self, sel_sharedInstance);
  id v10 = objc_msgSend(v9, sel_transcriptCensorWords);

  sub_1E3C8E038();
  uint64_t v11 = (void *)sub_1E3E7D5D0();
  id v12 = objc_msgSend(v10, sel_asyncValuePromiseOnQueue_, v11);

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v15 = (void *)(v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v15 = a1;
  v15[1] = a2;
  aBlock[4] = sub_1E3D96AC8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3C8DA20;
  aBlock[3] = &block_descriptor_22;
  uint64_t v16 = _Block_copy(aBlock);
  sub_1E3E775E0();
  swift_release();
  objc_msgSend(v12, sel_addFinishBlock_, v16);
  _Block_release(v16);
}

uint64_t sub_1E3D94BF4(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, unint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  id v10 = v9;
  double v117 = *(double *)&a8;
  double v116 = *(double *)&a7;
  uint64_t v127 = a6;
  uint64_t v128 = a5;
  LODWORD(v11) = a4;
  uint64_t v123 = a3;
  uint64_t v14 = a9;
  uint64_t v135 = *MEMORY[0x1E4F143B8];
  uint64_t v122 = sub_1E3E791C0();
  uint64_t v133 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  v120 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1E3E79220();
  uint64_t v130 = *(void *)(v16 - 8);
  uint64_t v131 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  os_log_type_t v121 = (char *)&v111 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26698);
  MEMORY[0x1F4188790](v21 - 8);
  v118 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  os_log_type_t v132 = (char *)&v111 - v24;
  uint64_t v25 = sub_1E3E79290();
  uint64_t v125 = *(void *)(v25 - 8);
  uint64_t v126 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v129 = (uint64_t)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  v115 = (char *)&v111 - v28;
  MEMORY[0x1F4188790](v29);
  id v31 = (char *)&v111 - v30;
  uint64_t v134 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28480);
  sub_1E3D3D9B4(&qword_1EAE28488, &qword_1EAE28480);
  uint64_t v32 = (uint64_t)a2;
  if ((sub_1E3E7D3C0() & 1) == 0) {
    goto LABEL_26;
  }
  LODWORD(v114) = v11;
  v124 = a2;
  if ((v11 & 1) == 0)
  {
    uint64_t v33 = *a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26960);
    uint64_t v34 = v130;
    unint64_t v35 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1E3E86660;
    unint64_t v37 = v36 + v35;
    uint64_t v14 = a9;
    uint64_t v38 = v34;
    id v10 = v9;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 16))(v37, a1, v131);
    uint64_t v134 = v33;
    swift_bridgeObjectRetain();
    sub_1E3D3AAEC(v36);
    uint64_t v39 = sub_1E3C9FCB0(v134);
    swift_bridgeObjectRelease();
    BOOL v40 = v39 <= v123;
    uint64_t v32 = (uint64_t)v124;
    if (!v40)
    {
      uint64_t v41 = *v124;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1E3E79260();
      sub_1E3C9FFB0(v42, v43, v41, (uint64_t)v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = v128;
      uint64_t v45 = *v128;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v44 = v45;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v45 = sub_1E3CB8090(0, *(void *)(v45 + 16) + 1, 1, v45);
        *uint64_t v128 = v45;
      }
      unint64_t v48 = *(void *)(v45 + 16);
      unint64_t v47 = *(void *)(v45 + 24);
      if (v48 >= v47 >> 1)
      {
        uint64_t v45 = sub_1E3CB8090(v47 > 1, v48 + 1, 1, v45);
        *uint64_t v128 = v45;
      }
      *(void *)(v45 + 16) = v48 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v125 + 32))(v45+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v48, v31, v126);
      uint64_t v32 = (uint64_t)v124;
      uint64_t *v124 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      uint64_t v14 = a9;
    }
  }
  uint64_t v49 = *(void *)v32;
  uint64_t v50 = *(void *)(*(void *)v32 + 16);
  LOBYTE(v11) = v114;
  if (!v50) {
    goto LABEL_26;
  }
  unint64_t v113 = (unint64_t)v14;
  uint64_t v51 = v10;
  uint64_t v53 = v130;
  uint64_t v52 = v131;
  uint64_t v54 = v121;
  (*(void (**)(char *, unint64_t, uint64_t))(v130 + 16))(v121, v49+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(void *)(v130 + 72) * (v50 - 1), v131);
  uint64_t v55 = sub_1E3E791E0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
  uint64_t v56 = *(void *)(v55 + 16);
  uint64_t v119 = a1;
  uint64_t v58 = v132;
  uint64_t v57 = v133;
  if (v56)
  {
    uint64_t v59 = v122;
    (*(void (**)(char *, unint64_t, uint64_t))(v133 + 16))(v132, v55+ ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80))+ *(void *)(v133 + 72) * (v56 - 1), v122);
    unint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
    unint64_t v61 = v58;
    uint64_t v62 = 0;
  }
  else
  {
    unint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56);
    unint64_t v61 = v132;
    uint64_t v62 = 1;
    uint64_t v59 = v122;
  }
  os_log_type_t v112 = v60;
  v60((uint64_t)v61, v62, 1, v59);
  swift_bridgeObjectRelease();
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  int v64 = v63(v58, 1, v59);
  uint64_t v65 = (uint64_t)v58;
  id v10 = v51;
  if (v64 != 1)
  {
    os_log_type_t v121 = v51;
    sub_1E3E79190();
    double v67 = v66;
    os_log_type_t v132 = *(char **)(v57 + 8);
    ((void (*)(uint64_t, uint64_t))v132)(v65, v59);
    uint64_t v68 = sub_1E3E791E0();
    if (*(void *)(v68 + 16))
    {
      uint64_t v69 = (uint64_t)v118;
      (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v118, v68 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80)), v59);
      uint64_t v70 = 0;
    }
    else
    {
      uint64_t v70 = 1;
      uint64_t v69 = (uint64_t)v118;
    }
    v112(v69, v70, 1, v59);
    swift_bridgeObjectRelease();
    if (v63((char *)v69, 1, v59) == 1)
    {
      sub_1E3C10CE0(v69, &qword_1EAE26698);
      uint64_t v32 = (uint64_t)v124;
      a1 = v119;
      uint64_t v14 = (void *)v113;
      id v10 = v121;
    }
    else
    {
      sub_1E3E791B0();
      double v72 = v71;
      ((void (*)(uint64_t, uint64_t))v132)(v69, v59);
      uint64_t v32 = (uint64_t)v124;
      a1 = v119;
      uint64_t v14 = (void *)v113;
      id v10 = v121;
      if (v72 - v67 > 3.0)
      {
        uint64_t v73 = *v124;
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_1E3E79260();
        uint64_t v75 = (uint64_t)v115;
        sub_1E3C9FFB0(v74, v76, v73, (uint64_t)v115);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v77 = v128;
        uint64_t v78 = *v128;
        char v79 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t *v77 = v78;
        if (v79) {
          goto LABEL_23;
        }
        goto LABEL_53;
      }
    }
    goto LABEL_26;
  }
  sub_1E3C10CE0(v65, &qword_1EAE26698);
  uint64_t v32 = (uint64_t)v124;
  a1 = v119;
  while (1)
  {
    uint64_t v14 = (void *)v113;
LABEL_26:
    if (!v14 || (v11 & 1) != 0) {
      goto LABEL_38;
    }
    uint64_t v82 = v14;
    uint64_t v83 = sub_1E3E791E0();
    unint64_t v84 = *(void *)(v83 + 16);
    if (!v84) {
      break;
    }
    v115 = v82;
    v118 = v18;
    uint64_t v119 = a1;
    v124 = (uint64_t *)v32;
    os_log_type_t v121 = v10;
    uint64_t v86 = *(void *)(v133 + 16);
    uint64_t v85 = v133 + 16;
    unint64_t v87 = v83 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
    os_log_type_t v132 = *(char **)(v133 + 72);
    uint64_t v133 = v86;
    int v88 = (void (**)(char *, uint64_t))(v85 - 8);
    uint64_t v114 = v83;
    swift_bridgeObjectRetain();
    uint64_t v78 = 0;
    unint64_t v113 = v84;
    unint64_t v89 = v84;
    uint64_t v11 = v122;
    uint64_t v90 = v120;
    do
    {
      ((void (*)(char *, unint64_t, uint64_t))v133)(v90, v87, v11);
      sub_1E3E79180();
      uint64_t v75 = v91;
      uint64_t v32 = sub_1E3E7CE60();
      swift_bridgeObjectRelease();
      BOOL v92 = __OFADD__(v78, v32);
      v78 += v32;
      if (v92)
      {
        __break(1u);
        goto LABEL_51;
      }
      (*v88)(v90, v11);
      v87 += (unint64_t)v132;
      --v89;
    }
    while (v89);
    swift_bridgeObjectRelease_n();
    unint64_t v93 = v113 - 1;
    id v10 = v121;
    uint64_t v32 = (uint64_t)v124;
    uint64_t v18 = v118;
    a1 = v119;
    uint64_t v82 = v115;
    if (v113 <= 1 || (BOOL v92 = __OFADD__(v78, v93), v78 += v93, !v92))
    {
      if (v78 <= v123) {
        goto LABEL_37;
      }
      goto LABEL_35;
    }
    __break(1u);
LABEL_53:
    uint64_t v78 = sub_1E3CB8090(0, *(void *)(v78 + 16) + 1, 1, v78);
    *uint64_t v128 = v78;
LABEL_23:
    unint64_t v81 = *(void *)(v78 + 16);
    unint64_t v80 = *(void *)(v78 + 24);
    if (v81 >= v80 >> 1)
    {
      uint64_t v78 = sub_1E3CB8090(v80 > 1, v81 + 1, 1, v78);
      *uint64_t v128 = v78;
    }
    *(void *)(v78 + 16) = v81 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v125 + 32))(v78+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v81, v75, v126);
    *(void *)uint64_t v32 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v123 < 0)
  {
LABEL_35:
    double v94 = v116;
    double v95 = v117;
    uint64_t v96 = sub_1E3E79260();
    sub_1E3D95854(v94, v95, a1, (void (*)(void, void, void))v82, v96, v97, v128);

    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_44;
  }
LABEL_37:

LABEL_38:
  uint64_t v134 = sub_1E3E791E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26920);
  sub_1E3D3D9B4(&qword_1EAE28490, &qword_1EAE26920);
  char v99 = sub_1E3E7D3C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v99)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v18, a1, v131);
    unint64_t v100 = *(void *)v32;
    char v101 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v32 = v100;
    if ((v101 & 1) == 0)
    {
      unint64_t v100 = sub_1E3CB80C4(0, *(void *)(v100 + 16) + 1, 1, v100);
      *(void *)uint64_t v32 = v100;
    }
    unint64_t v103 = *(void *)(v100 + 16);
    unint64_t v102 = *(void *)(v100 + 24);
    if (v103 >= v102 >> 1)
    {
      unint64_t v100 = sub_1E3CB80C4(v102 > 1, v103 + 1, 1, v100);
      *(void *)uint64_t v32 = v100;
    }
    *(void *)(v100 + 16) = v103 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v130 + 32))(v100+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(void *)(v130 + 72) * v103, v18, v131);
  }
LABEL_44:
  uint64_t v104 = *(void *)v32;
  if (*(void *)(*(void *)v32 + 16) >= 3uLL)
  {
    swift_bridgeObjectRetain();
    uint64_t v105 = sub_1E3E79260();
    sub_1E3C9FFB0(v105, v106, v104, v129);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v107 = v128;
    uint64_t v78 = *v128;
    char v108 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v107 = v78;
    if ((v108 & 1) == 0)
    {
LABEL_51:
      uint64_t v78 = sub_1E3CB8090(0, *(void *)(v78 + 16) + 1, 1, v78);
      *uint64_t v128 = v78;
    }
    unint64_t v110 = *(void *)(v78 + 16);
    unint64_t v109 = *(void *)(v78 + 24);
    if (v110 >= v109 >> 1)
    {
      uint64_t v78 = sub_1E3CB8090(v109 > 1, v110 + 1, 1, v78);
      *uint64_t v128 = v78;
    }
    *(void *)(v78 + 16) = v110 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v125 + 32))(v78+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v110, v129, v126);
    *(void *)uint64_t v32 = MEMORY[0x1E4FBC860];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E3D95854(double a1, double a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v110 = a7;
  uint64_t v104 = a5;
  uint64_t v105 = a6;
  uint64_t v103 = sub_1E3E79220();
  uint64_t v107 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  unint64_t v102 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1E3E79290();
  uint64_t v106 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  unint64_t v109 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1E3E791D0();
  uint64_t v12 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  unint64_t v100 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  os_log_type_t v112 = (char *)&v79 - v15;
  uint64_t v16 = sub_1E3E791C0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v90 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  unint64_t v89 = (char *)&v79 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v79 - v22;
  uint64_t v117 = 0;
  unint64_t v118 = 0xE000000000000000;
  uint64_t v24 = sub_1E3E791E0();
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v114 = v17;
  uint64_t v115 = v16;
  if (v25)
  {
    char v108 = a4;
    uint64_t v111 = v12;
    double v116 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
    unint64_t v26 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    char v99 = (void (**)(char *, char *, uint64_t))v24;
    unint64_t v27 = v24 + v26;
    uint64_t v28 = *(void *)(v17 + 72);
    do
    {
      v116(v23, v27, v16);
      sub_1E3E79180();
      sub_1E3E7CEA0();
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_1E3E791E0();
      Array<A>.spacesAfterWord(_:)((uint64_t)v23, v29);
      swift_bridgeObjectRelease();
      uint64_t v16 = v115;
      sub_1E3E7CEA0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v16);
      v27 += v28;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v30 = v117;
    uint64_t v31 = v118;
    uint64_t v12 = v111;
    a4 = v108;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = 0;
    uint64_t v31 = 0xE000000000000000;
  }
  objc_allocWithZone((Class)type metadata accessor for TranscriptsLayoutManager());
  uint64_t v32 = sub_1E3D1FBE4(a1, v30, v31, a4);
  id v33 = objc_msgSend(v32, sel_numberOfGlyphs);
  objc_msgSend(v32, sel_boundingRectForGlyphRange_inTextContainer_, 0, v33, *(void *)&v32[OBJC_IVAR____TtC10PodcastsUI24TranscriptsLayoutManager_textContainer]);
  double v34 = ceil(CGRectGetMaxY(v119) / a2);
  uint64_t v35 = sub_1E3D1FE74();
  uint64_t v36 = *(void *)(v35 + 16);
  double v37 = ceil((double)v36 / v34);
  if (v37 <= -9.22337204e18) {
    goto LABEL_75;
  }
  if (v37 >= 9.22337204e18)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0
    || (*(void *)&v37 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_77;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (v34 >= 9.22337204e18)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v38 = (uint64_t)v34;
  if ((uint64_t)v34 < 0)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    uint64_t result = sub_1E3E7E010();
    __break(1u);
    return result;
  }
  uint64_t v39 = v35;
  if (v38)
  {
    unint64_t v80 = v32;
    uint64_t v40 = (uint64_t)v37;
    if (((uint64_t)v37 & 0x8000000000000000) == 0)
    {
      uint64_t v41 = 0;
      double v116 = (void (*)(char *, unint64_t, uint64_t))(v35 + 32);
      uint64_t v84 = v38 - 1;
      int v82 = *MEMORY[0x1E4F91960];
      BOOL v92 = (void (**)(char *, void, uint64_t))(v12 + 104);
      int v81 = *MEMORY[0x1E4F91948];
      unsigned int v83 = *MEMORY[0x1E4F91958];
      unsigned int v87 = *MEMORY[0x1E4F91950];
      uint64_t v86 = v114 + 16;
      uint64_t v85 = v114 + 8;
      char v99 = (void (**)(char *, char *, uint64_t))(v12 + 16);
      uint64_t v98 = v107 + 16;
      uint64_t v97 = v107 + 8;
      uint64_t v96 = v106 + 32;
      double v95 = (void (**)(char *, uint64_t))(v12 + 8);
      long long v94 = xmmword_1E3E86660;
      uint64_t v93 = (uint64_t)v34;
      uint64_t v88 = v35;
      uint64_t v91 = v36;
      while (1)
      {
        if (v41 == v38) {
          goto LABEL_73;
        }
        uint64_t v111 = v41;
        if (v40)
        {
          uint64_t v42 = v41 * v40;
          if ((unsigned __int128)(v41 * (__int128)v40) >> 64 != (v41 * v40) >> 63) {
            goto LABEL_74;
          }
          uint64_t v43 = 0;
          unint64_t v44 = MEMORY[0x1E4FBC860];
          while (2)
          {
            if (v40 == v43)
            {
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
LABEL_71:
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
              goto LABEL_76;
            }
            uint64_t v45 = v42 + v43;
            if (__OFADD__(v42, v43)) {
              goto LABEL_66;
            }
            if (v45 >= v36) {
              goto LABEL_22;
            }
            if (v45 < 0) {
              goto LABEL_67;
            }
            if ((unint64_t)v45 >= *(void *)(v39 + 16)) {
              goto LABEL_68;
            }
            uint64_t v46 = *((void *)v116 + v45);
            uint64_t v47 = *(void *)(v46 + 16);
            int64_t v48 = *(void *)(v44 + 16);
            int64_t v49 = v48 + v47;
            if (__OFADD__(v48, v47)) {
              goto LABEL_69;
            }
            swift_bridgeObjectRetain();
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (isUniquelyReferenced_nonNull_native && v49 <= *(void *)(v44 + 24) >> 1)
            {
              if (!*(void *)(v46 + 16))
              {
LABEL_20:
                if (v47) {
                  goto LABEL_70;
                }
LABEL_21:
                swift_bridgeObjectRelease();
LABEL_22:
                if (v40 == ++v43) {
                  goto LABEL_47;
                }
                continue;
              }
            }
            else
            {
              if (v48 <= v49) {
                int64_t v51 = v48 + v47;
              }
              else {
                int64_t v51 = v48;
              }
              unint64_t v44 = sub_1E3CB7A60(isUniquelyReferenced_nonNull_native, v51, 1, v44);
              if (!*(void *)(v46 + 16)) {
                goto LABEL_20;
              }
            }
            break;
          }
          uint64_t v52 = *(void *)(v44 + 16);
          if ((*(void *)(v44 + 24) >> 1) - v52 < v47) {
            goto LABEL_71;
          }
          unint64_t v53 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
          uint64_t v54 = *(void *)(v114 + 72);
          unint64_t v55 = v44 + v53 + v54 * v52;
          if (v46 + v53 < v55 + v54 * v47 && v55 < v46 + v53 + v54 * v47) {
            goto LABEL_82;
          }
          swift_arrayInitWithCopy();
          if (v47)
          {
            uint64_t v57 = *(void *)(v44 + 16);
            BOOL v58 = __OFADD__(v57, v47);
            uint64_t v59 = v57 + v47;
            if (v58) {
              goto LABEL_72;
            }
            *(void *)(v44 + 16) = v59;
          }
          goto LABEL_21;
        }
        unint64_t v44 = MEMORY[0x1E4FBC860];
LABEL_47:
        if (v34 == 1.0)
        {
          (*v92)(v112, v87, v113);
          uint64_t v60 = *(void *)(v44 + 16);
          if (v60) {
            goto LABEL_49;
          }
        }
        else
        {
          if (v111)
          {
            if (v111 == v84) {
              uint64_t v68 = (uint64_t *)((char *)&v112 + 4);
            }
            else {
              uint64_t v68 = &v113;
            }
            (*v92)(v112, *((unsigned int *)v68 - 64), v113);
          }
          else
          {
            (*v92)(v112, v83, v113);
          }
          uint64_t v60 = *(void *)(v44 + 16);
          if (v60)
          {
LABEL_49:
            uint64_t v61 = v114;
            uint64_t v62 = v115;
            unint64_t v63 = v44 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
            char v108 = *(void (**)(void, void, void))(v114 + 16);
            int v64 = v89;
            v108(v89, v63, v115);
            sub_1E3E791B0();
            uint64_t v65 = *(void (**)(char *, uint64_t))(v61 + 8);
            v65(v64, v62);
            uint64_t v66 = *(void *)(v61 + 72);
            uint64_t v39 = v88;
            double v67 = v90;
            v108(v90, v63 + v66 * (v60 - 1), v62);
            sub_1E3E79190();
            v65(v67, v62);
          }
        }
        (*v99)(v100, v112, v113);
        swift_bridgeObjectRetain();
        uint64_t v69 = v102;
        sub_1E3E79200();
        sub_1E3E79210();
        sub_1E3E791F0();
        swift_bridgeObjectRetain();
        sub_1E3E79270();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26960);
        uint64_t v70 = v107;
        unint64_t v71 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
        uint64_t v72 = swift_allocObject();
        *(_OWORD *)(v72 + 16) = v94;
        uint64_t v73 = v103;
        (*(void (**)(unint64_t, char *, uint64_t))(v70 + 16))(v72 + v71, v69, v103);
        sub_1E3E79250();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v73);
        swift_bridgeObjectRelease();
        unint64_t v74 = *v110;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v74 = sub_1E3CB8090(0, *(void *)(v74 + 16) + 1, 1, v74);
        }
        uint64_t v38 = v93;
        uint64_t v75 = v111;
        uint64_t v36 = v91;
        unint64_t v77 = *(void *)(v74 + 16);
        unint64_t v76 = *(void *)(v74 + 24);
        if (v77 >= v76 >> 1) {
          unint64_t v74 = sub_1E3CB8090(v76 > 1, v77 + 1, 1, v74);
        }
        uint64_t v41 = v75 + 1;
        *(void *)(v74 + 16) = v77 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v74+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v77, v109, v101);
        *unint64_t v110 = v74;
        (*v95)(v112, v113);
        if (v41 == v38)
        {

          return swift_bridgeObjectRelease();
        }
      }
    }
    goto LABEL_81;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3D963C4(id a1, void *a2, uint64_t a3, void (*a4)(unint64_t), uint64_t a5)
{
  uint64_t v60 = a5;
  uint64_t v61 = a4;
  uint64_t v59 = a3;
  uint64_t v7 = sub_1E3E7CD80();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v62 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E77B90();
  uint64_t v58 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E7A880();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v16 = a2;
    sub_1E3E7A770();
    id v17 = a2;
    id v18 = a2;
    uint64_t v19 = sub_1E3E7A860();
    os_log_type_t v20 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      id v57 = a1;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v55 = swift_slowAlloc();
      *(void *)&long long v65 = v55;
      uint64_t v56 = v12;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v54 = v22 + 4;
      *(void *)&v64[0] = a2;
      id v23 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
      uint64_t v24 = sub_1E3E7CD90();
      *(void *)&v64[0] = sub_1E3C150B8(v24, v25, (uint64_t *)&v65);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1E3BC5000, v19, v20, "Unable to get transcript censor words from bag: %s", v22, 0xCu);
      uint64_t v26 = v55;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v26, -1, -1);
      unint64_t v27 = v22;
      a1 = v57;
      MEMORY[0x1E4E79510](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v56);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  if (a1)
  {
    id v28 = a1;
    sub_1E3E7D9F0();
    sub_1E3CB7174();
    sub_1E3E7DBC0();
    id v57 = v28;
    uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
    while (v66)
    {
      sub_1E3C1B524(&v65, v64);
      sub_1E3C114A4((uint64_t)v64, (uint64_t)v63);
      if (!swift_dynamicCast()
        || (uint64_t v30 = sub_1E3E77D20(), v32 = v31, swift_bridgeObjectRelease(), v32 >> 60 == 15))
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
      }
      else
      {
        sub_1E3E7CD70();
        uint64_t v33 = sub_1E3E7CD40();
        uint64_t v35 = v34;
        sub_1E3C634A4(v30, v32);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
        if (v35)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v29 = sub_1E3CB7240(0, v29[2] + 1, 1, v29);
          }
          uint64_t v36 = v29;
          unint64_t v37 = v29[2];
          uint64_t v38 = v36;
          unint64_t v39 = v36[3];
          if (v37 >= v39 >> 1) {
            uint64_t v38 = sub_1E3CB7240((void *)(v39 > 1), v37 + 1, 1, v38);
          }
          v38[2] = v37 + 1;
          uint64_t v40 = &v38[2 * v37];
          uint64_t v29 = v38;
          v40[4] = v33;
          v40[5] = v35;
        }
      }
      sub_1E3E7DBC0();
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v9);
  }
  else
  {
    uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
  }
  id v41 = objc_msgSend(objc_allocWithZone((Class)sub_1E3E785F0()), sel_init);
  uint64_t v62 = (char *)v29;
  uint64_t v42 = v29[2];
  if (v42)
  {
    sub_1E3C10C8C();
    uint64_t v43 = (uint64_t *)(v62 + 40);
    do
    {
      uint64_t v44 = *v43;
      *(void *)&long long v65 = *(v43 - 1);
      *((void *)&v65 + 1) = v44;
      swift_bridgeObjectRetain();
      sub_1E3E7DC40();
      uint64_t v45 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
      id v46 = objc_msgSend(v45, sel_pf_localizedStringByFoldingWithOptions_, 385);

      uint64_t v47 = sub_1E3E7CD30();
      uint64_t v49 = v48;
      swift_bridgeObjectRelease();

      *(void *)&long long v65 = v47;
      *((void *)&v65 + 1) = v49;
      sub_1E3E785D0();
      swift_bridgeObjectRelease();
      v43 += 2;
      --v42;
    }
    while (v42);
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_1E3E79160();
  id v51 = v41;
  unint64_t v52 = sub_1E3D96F0C(v50, v51);
  swift_bridgeObjectRelease();

  v61(v52);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3D96A20()
{
  uint64_t v1 = sub_1E3E792A0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3D96AC8(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1E3E792A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(unint64_t))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  return sub_1E3D963C4(a1, a2, v7, v9, v10);
}

uint64_t sub_1E3D96B78(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  swift_bridgeObjectRetain();
  sub_1E3E7DBB0();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1E3E7DBB0();
  uint64_t v15 = v14;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v17) = 1;
  }
  uint64_t v18 = 4 << v17;
  unint64_t v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    uint64_t result = sub_1E3E416F0(a1, a5, a6);
    unint64_t v19 = result;
  }
  uint64_t v40 = a3;
  unint64_t v20 = a2;
  unint64_t v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = a6 & 0x2000000000000000;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v32 = HIBYTE(a6) & 0xF;
    }
    else {
      unint64_t v32 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v32 < v19 >> 16) {
      goto LABEL_43;
    }
    uint64_t result = sub_1E3E7CEE0();
    uint64_t v22 = result;
    if (v21) {
      uint64_t v26 = 7;
    }
    else {
      uint64_t v26 = 11;
    }
  }
  else
  {
    uint64_t v22 = v19 >> 16;
    uint64_t v23 = a6 & 0x2000000000000000;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    uint64_t v26 = 7;
  }
  if (!v23) {
    unint64_t v24 = v25;
  }
  uint64_t v27 = 4 << (v21 >> 59);
  unint64_t v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0) {
    uint64_t v27 = 8;
  }
  unint64_t v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    unint64_t v33 = v20;
    uint64_t v34 = v22;
    uint64_t result = sub_1E3E416F0(v33, a5, a6);
    uint64_t v22 = v34;
    unint64_t v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    unint64_t v35 = v26 | (v24 << 16);
    uint64_t v36 = v22;
    uint64_t result = sub_1E3E416F0(v35, a5, a6);
    uint64_t v22 = v36;
    unint64_t v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    uint64_t v37 = v22;
    uint64_t v38 = sub_1E3E7CEE0();
    uint64_t v22 = v37;
    uint64_t v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        uint64_t result = HIBYTE(a4) & 0xF;
        uint64_t v31 = v22 + result;
        if (!__OFADD__(v22, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v40 & 0xFFFFFFFFFFFFLL;
        uint64_t v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_39;
    }
LABEL_37:
    uint64_t v39 = v22;
    uint64_t result = sub_1E3E7CEB0();
    uint64_t v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      uint64_t result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x1E4E766E0](result);
LABEL_25:
        sub_1E3E7CF70();
        sub_1E3D97A54();
        sub_1E3E7CE90();
        swift_bridgeObjectRelease();
        sub_1E3E7CE90();
        sub_1E3D96EC0(a2, a5, a6);
        sub_1E3E7CE90();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_1E3D96EC0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1E3E7CF70();
  }
  __break(1u);
  return result;
}

unint64_t sub_1E3D96F0C(uint64_t a1, void *a2)
{
  id v72 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0820);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v100 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1E3E77990();
  uint64_t v6 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v105 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1E3E791C0();
  uint64_t v8 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v10 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1E3E791D0();
  uint64_t v11 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v91 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1E3E79220();
  uint64_t v13 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v85 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1E3E79290();
  uint64_t v15 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  unsigned int v83 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return MEMORY[0x1E4FBC860];
  }
  v71[1] = v2;
  uint64_t v118 = MEMORY[0x1E4FBC860];
  int64_t v76 = v17;
  sub_1E3CC7784(0, v17, 0);
  uint64_t v18 = 0;
  unint64_t v75 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v79 = a1 + v75;
  uint64_t v19 = *(void *)(v15 + 72);
  uint64_t v104 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v19;
  uint64_t v101 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v103 = (void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  unsigned int v89 = *MEMORY[0x1E4F91950];
  uint64_t v88 = (void (**)(char *, void, uint64_t))(v11 + 104);
  unsigned int v87 = (void (**)(unint64_t, char *, uint64_t))(v13 + 32);
  uint64_t v73 = (void (**)(unint64_t, char *, uint64_t))(v15 + 32);
  uint64_t v77 = v13;
  unint64_t v21 = v85;
  uint64_t v74 = v19;
  uint64_t v84 = v8;
  unint64_t v102 = v10;
  while (1)
  {
    uint64_t v82 = v18;
    uint64_t v22 = v79 + v20 * v18;
    sub_1E3E79280();
    sub_1E3E79230();
    uint64_t v23 = sub_1E3E79240();
    int64_t v24 = *(void *)(v23 + 16);
    if (v24) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_28:
    sub_1E3E79260();
    sub_1E3E79270();
    uint64_t v67 = v118;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1E3CC7784(0, *(void *)(v67 + 16) + 1, 1);
      uint64_t v67 = v118;
    }
    uint64_t v68 = v82;
    unint64_t v70 = *(void *)(v67 + 16);
    unint64_t v69 = *(void *)(v67 + 24);
    if (v70 >= v69 >> 1)
    {
      sub_1E3CC7784(v69 > 1, v70 + 1, 1);
      uint64_t v68 = v82;
      uint64_t v67 = v118;
    }
    uint64_t v18 = v68 + 1;
    *(void *)(v67 + 16) = v70 + 1;
    uint64_t v20 = v74;
    (*v73)(v67 + v75 + v70 * v74, v83, v78);
    uint64_t v118 = v67;
    uint64_t v13 = v77;
    if (v18 == v76) {
      return v67;
    }
  }
  uint64_t v81 = v22;
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v117 = MEMORY[0x1E4FBC860];
  id v86 = v72;
  sub_1E3CC77C0(0, v24, 0);
  uint64_t v26 = 0;
  uint64_t v99 = v117;
  unint64_t v27 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v80 = v23;
  unint64_t v94 = v27;
  unint64_t v96 = v23 + v27;
  uint64_t v28 = *(void *)(v13 + 72);
  int64_t v95 = v24;
  uint64_t v93 = v28;
  while (1)
  {
    uint64_t v98 = v26;
    sub_1E3E79210();
    sub_1E3E791F0();
    uint64_t v29 = sub_1E3E791E0();
    int64_t v30 = *(void *)(v29 + 16);
    if (v30) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_23:
    (*v88)(v91, v89, v92);
    sub_1E3E79200();
    uint64_t v64 = v99;
    uint64_t v117 = v99;
    unint64_t v66 = *(void *)(v99 + 16);
    unint64_t v65 = *(void *)(v99 + 24);
    if (v66 >= v65 >> 1)
    {
      sub_1E3CC77C0(v65 > 1, v66 + 1, 1);
      uint64_t v64 = v117;
    }
    uint64_t v26 = v98 + 1;
    *(void *)(v64 + 16) = v66 + 1;
    uint64_t v99 = v64;
    (*v87)(v64 + v94 + v66 * v93, v21, v90);
    if (v26 == v95)
    {
      swift_bridgeObjectRelease();

      goto LABEL_28;
    }
  }
  uint64_t v116 = v25;
  id v109 = v86;
  sub_1E3CC77FC(0, v30, 0);
  unint64_t v31 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v97 = v29;
  unint64_t v108 = v31;
  unint64_t v32 = v29 + v31;
  uint64_t v107 = *(void *)(v8 + 72);
  while (1)
  {
    int64_t v111 = v30;
    uint64_t v33 = sub_1E3E79180();
    uint64_t v35 = v34;
    uint64_t v114 = v33;
    uint64_t v115 = v34;
    uint64_t v36 = v105;
    sub_1E3E77950();
    sub_1E3C10C8C();
    uint64_t v37 = sub_1E3E7DC10();
    uint64_t v39 = v38;
    (*v104)(v36, v106);
    uint64_t v114 = v37;
    uint64_t v115 = v39;
    sub_1E3E7DC40();
    uint64_t v40 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v41 = objc_msgSend(v40, sel_pf_localizedStringByFoldingWithOptions_, 385);

    uint64_t v42 = sub_1E3E7CD30();
    uint64_t v44 = v43;

    uint64_t v114 = v42;
    uint64_t v115 = v44;
    LOBYTE(v41) = sub_1E3E785E0();
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    uint64_t v114 = v33;
    uint64_t v115 = v35;
    uint64_t v112 = v37;
    uint64_t v113 = v39;
    uint64_t v45 = sub_1E3E77F00();
    uint64_t v46 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v100, 1, 1, v45);
    unint64_t v47 = sub_1E3E7DC60();
    unint64_t v49 = v48;
    char v51 = v50;
    sub_1E3C10CE0(v46, &qword_1EBFE0820);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v51 & 1) == 0) {
      break;
    }
LABEL_12:
    uint64_t v56 = v102;
    (*v101)(v102, v32, v110);
LABEL_16:
    uint64_t v60 = v116;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1E3CC77FC(0, *(void *)(v60 + 16) + 1, 1);
      uint64_t v60 = v116;
    }
    unint64_t v62 = *(void *)(v60 + 16);
    unint64_t v61 = *(void *)(v60 + 24);
    if (v62 >= v61 >> 1)
    {
      sub_1E3CC77FC(v61 > 1, v62 + 1, 1);
      uint64_t v60 = v116;
    }
    *(void *)(v60 + 16) = v62 + 1;
    uint64_t v63 = v107;
    (*v103)(v60 + v108 + v62 * v107, v56, v110);
    uint64_t v116 = v60;
    v32 += v63;
    int64_t v30 = v111 - 1;
    if (v111 == 1)
    {
      swift_bridgeObjectRelease();

      uint64_t v8 = v84;
      unint64_t v21 = v85;
      uint64_t v25 = MEMORY[0x1E4FBC860];
      goto LABEL_23;
    }
  }
  unint64_t v52 = sub_1E3E79180();
  unint64_t v54 = v53;
  if (sub_1E3E7CF00() <= 3)
  {
    uint64_t v55 = 4;
LABEL_15:
    uint64_t v58 = MEMORY[0x1E4E76870](42, 0xE100000000000000, v55);
    sub_1E3D96B78(v47, v49, v58, v59, v52, v54);
    uint64_t v56 = v102;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1E3E791B0();
    sub_1E3E79190();
    sub_1E3E791A0();
    goto LABEL_16;
  }
  unint64_t result = sub_1E3E7CE70();
  if (v49 >> 14 >= result >> 14)
  {
    unint64_t v47 = result;
    unint64_t result = sub_1E3E7CF00();
    uint64_t v55 = result - 1;
    if (__OFSUB__(result, 1)) {
      goto LABEL_37;
    }
    goto LABEL_15;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1E3D97A54()
{
  unint64_t result = qword_1EAE28478;
  if (!qword_1EAE28478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28478);
  }
  return result;
}

void *SiriIntentDonator.__allocating_init(asPartOf:)()
{
  uint64_t v0 = (void *)swift_allocObject();
  v0[4] = 0;
  type metadata accessor for PlaybackController();
  sub_1E3E7BE20();
  v0[2] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4418);
  sub_1E3E7BE20();
  swift_release();
  v0[3] = v2;
  return v0;
}

void *SiriIntentDonator.init(asPartOf:)()
{
  v0[4] = 0;
  type metadata accessor for PlaybackController();
  sub_1E3E7BE20();
  v0[2] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4418);
  sub_1E3E7BE20();
  swift_release();
  v0[3] = v2;
  return v0;
}

void *SiriIntentDonator.__allocating_init(playbackController:donationService:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_1E3D989B0(a1, a2);
  swift_release();
  swift_unknownObjectRelease();
  return v4;
}

void *SiriIntentDonator.init(playbackController:donationService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1E3D989B0(a1, a2);
  swift_release();
  swift_unknownObjectRelease();
  return v2;
}

Swift::Void __swiftcall SiriIntentDonator.beginObserving()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4470);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_performedCommandsPublisher);
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0588);
  sub_1E3E78FF0();
  sub_1E3C10DE8(&qword_1EBFE4730, &qword_1EBFE0588);
  sub_1E3E7AB80();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8(&qword_1EBFE4468, &qword_1EBFE4470);
  uint64_t v6 = sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(v1 + 32) = v6;
  swift_release();
}

uint64_t sub_1E3D97E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE3610);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for PlaybackController.QueueCommand();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v20[-v12 - 8];
  sub_1E3D990F4(a1, (uint64_t)v20);
  if (!v21)
  {
    sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE3228);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_6;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE26BA0);
  int v14 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v14 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_6:
    sub_1E3C10CE0((uint64_t)v6, &qword_1EBFE3610);
    goto LABEL_7;
  }
  sub_1E3D9915C((uint64_t)v6, (uint64_t)v13);
  sub_1E3D9915C((uint64_t)v13, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v15 = sub_1E3E78FF0();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v16 + 32))(a2, v10, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
  }
  sub_1E3C72960((uint64_t)v10);
LABEL_7:
  uint64_t v18 = sub_1E3E78FF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 1, 1, v18);
}

uint64_t sub_1E3D98150()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3D981B0();
    return swift_release();
  }
  return result;
}

void sub_1E3D981B0()
{
  uint64_t v1 = sub_1E3E7A880();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3D98C78();
  if (v6)
  {
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    uint64_t v11 = v7;
    uint64_t v12 = v8;
    uint64_t v13 = *(void **)(v0 + 24);
    swift_bridgeObjectRetain();
    int v14 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
    }
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = v9;
    v19[3] = v10;
    v19[4] = v11;
    v19[5] = v12;
    aBlock[4] = sub_1E3D990E8;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1E3D988E4;
    aBlock[3] = &block_descriptor_23;
    uint64_t v20 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v13, sel_donateEpisodeUuid_stationUuid_isPlaybackFromSiri_completion_, v14, v15, 0, v20);
    _Block_release(v20);
  }
  else
  {
    sub_1E3E7A790();
    uint64_t v16 = sub_1E3E7A860();
    os_log_type_t v17 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1E3BC5000, v16, v17, "No identifiers to donate for intent", v18, 2u);
      MEMORY[0x1E4E79510](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1E3D98428(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1E3E7A880();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v34 - v15;
  if (a1)
  {
    sub_1E3E7A790();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v17 = sub_1E3E7A860();
    os_log_type_t v18 = sub_1E3E7D500();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v35 = a4;
      uint64_t v21 = v20;
      uint64_t v39 = v20;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v36 = v10;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1E3C150B8(a2, a3, &v39);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v37 = v35;
      uint64_t v38 = a5;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26D8);
      uint64_t v22 = sub_1E3E7CD90();
      uint64_t v37 = sub_1E3C150B8(v22, v23, &v39);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v17, v18, "Successfully donated playback intent for episode uuid: %{public}s - station uuid: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v21, -1, -1);
      MEMORY[0x1E4E79510](v19, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v36);
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v16;
  }
  else
  {
    sub_1E3E7A790();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_1E3E7A860();
    os_log_type_t v26 = sub_1E3E7D500();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v35 = a4;
      uint64_t v29 = v28;
      uint64_t v39 = v28;
      *(_DWORD *)uint64_t v27 = 136446466;
      uint64_t v36 = v10;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1E3C150B8(a2, a3, &v39);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v37 = v35;
      uint64_t v38 = a5;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26D8);
      uint64_t v30 = sub_1E3E7CD90();
      uint64_t v37 = sub_1E3C150B8(v30, v31, &v39);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v25, v26, "Error donating: %{public}s - station uuid: %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v29, -1, -1);
      MEMORY[0x1E4E79510](v27, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v36);
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v13;
  }
  return v32(v33, v10);
}

uint64_t sub_1E3D988E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_1E3E775E0();
  v3(a2);

  return swift_release();
}

uint64_t SiriIntentDonator.deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t SiriIntentDonator.__deallocating_deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

void *sub_1E3D989B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4470);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[3] = a2;
  v3[4] = 0;
  v3[2] = a1;
  v12[1] = *(void *)(a1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_performedCommandsPublisher);
  sub_1E3E775E0();
  swift_unknownObjectRetain();
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0588);
  sub_1E3E78FF0();
  sub_1E3C10DE8(&qword_1EBFE4730, &qword_1EBFE0588);
  sub_1E3E7AB80();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8(&qword_1EBFE4468, &qword_1EBFE4470);
  uint64_t v10 = sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v3[4] = v10;
  swift_release();
  return v3;
}

uint64_t sub_1E3D98BD4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3D98C0C()
{
  return sub_1E3D98150();
}

uint64_t type metadata accessor for SiriIntentDonator()
{
  return self;
}

uint64_t method lookup function for SiriIntentDonator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriIntentDonator);
}

uint64_t dispatch thunk of SiriIntentDonator.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SiriIntentDonator.__allocating_init(playbackController:donationService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1E3D98C78()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5820);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E78440();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E790E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E78FC0();
  int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 88))(v10, v7);
  uint64_t v12 = 0;
  if (v11 != *MEMORY[0x1E4F918E0])
  {
    if (v11 == *MEMORY[0x1E4F918F0])
    {
LABEL_3:
      (*(void (**)(uint64_t *, uint64_t, void, void))(v8 + 96))(v10, v7, 0, 0);
LABEL_4:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v11 == *MEMORY[0x1E4F918C0])
    {
      (*(void (**)(uint64_t *, uint64_t, void, void))(v8 + 96))(v10, v7, 0, 0);
      uint64_t v14 = *v10;
      if (*(void *)(v14 + 16))
      {
        uint64_t v12 = *(void *)(v14 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v12;
      }
      goto LABEL_4;
    }
    if (v11 == *MEMORY[0x1E4F918B8])
    {
      (*(void (**)(uint64_t *, uint64_t, void, void))(v8 + 96))(v10, v7, 0, 0);
      swift_bridgeObjectRelease();
      sub_1E3E78F30();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
      {
        sub_1E3C10CE0((uint64_t)v2, &qword_1EBFE5820);
        return 0;
      }
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
      uint64_t v15 = sub_1E3E78420();
      uint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if (v17) {
        return v15;
      }
      else {
        return 0;
      }
    }
    else if (v11 == *MEMORY[0x1E4F918E8])
    {
      (*(void (**)(uint64_t *, uint64_t, void, void))(v8 + 96))(v10, v7, 0, 0);
      if (v10[3])
      {
        return v10[2];
      }
      else
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      if (v11 == *MEMORY[0x1E4F918F8] || v11 == *MEMORY[0x1E4F918B0] || v11 == *MEMORY[0x1E4F918C8]) {
        goto LABEL_3;
      }
      uint64_t v12 = 0;
      if (v11 != *MEMORY[0x1E4F918D8] && v11 != *MEMORY[0x1E4F918D0])
      {
        (*(void (**)(uint64_t *, uint64_t, void, void))(v8 + 8))(v10, v7, 0, 0);
        return 0;
      }
    }
  }
  return v12;
}

uint64_t sub_1E3D990A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3D990E8(char a1)
{
  return sub_1E3D98428(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1E3D990F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE3228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3D9915C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaybackController.QueueCommand();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t AcceptEpisodeLimitRecommendationActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 24)))
  {
    sub_1E3D992F0(a1, a2);
  }
  else
  {
    sub_1E3D9A390(a1);
    sub_1E3D9A938(a1, a2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24FB8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F711E8], v4);
  return sub_1E3E7C9C0();
}

uint64_t sub_1E3D992F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B770();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E7B7C0();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C12B10(0, &qword_1EBFDEEB8);
  sub_1E3E7BE20();
  uint64_t v10 = aBlock;
  sub_1E3E79530();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1E3E86660;
  uint64_t v12 = *(void *)(a1 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 24));
  uint64_t v13 = MEMORY[0x1E4FBB868];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB808];
  *(void *)(v11 + 64) = v13;
  *(void *)(v11 + 32) = v12;
  sub_1E3E7CD60();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v14, 0);

  id v16 = sub_1E3D99818(a1, a2);
  objc_msgSend(v15, sel_addAction_, v16);

  id v17 = sub_1E3D99A9C(a1, a2);
  objc_msgSend(v15, sel_addAction_, v17);

  sub_1E3E79530();
  uint64_t v18 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1E3D9A0CC;
  uint64_t v36 = 0;
  aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  uint64_t v33 = sub_1E3E369D8;
  uint64_t v34 = &block_descriptor_24;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_release();
  id v20 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v18, 1, v19);
  _Block_release(v19);

  objc_msgSend(v15, sel_addAction_, v20);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v21 = (void *)sub_1E3E7D6A0();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v15;
  *(void *)(v22 + 24) = v10;
  uint64_t v35 = sub_1E3D9AE50;
  uint64_t v36 = v22;
  aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  uint64_t v33 = (void (*)(uint64_t, void *))sub_1E3CE65F8;
  uint64_t v34 = &block_descriptor_3_0;
  unint64_t v23 = _Block_copy(&aBlock);
  id v24 = v15;
  id v25 = v10;
  swift_release();
  sub_1E3E7B7A0();
  aBlock = (void *)MEMORY[0x1E4FBC860];
  sub_1E3D9AE6C((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C8E088();
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v9, v6, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v9, v29);
}

id sub_1E3D99818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AcceptEpisodeLimitRecommendationAction();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1E3E79530();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1E3E86660;
  uint64_t v8 = *(void *)(a1 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 24));
  uint64_t v9 = MEMORY[0x1E4FBB868];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB808];
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = v8;
  sub_1E3E7CD60();
  swift_bridgeObjectRelease();
  sub_1E3D9B58C(a1, (uint64_t)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AcceptEpisodeLimitRecommendationAction);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1E3D9B748((uint64_t)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(void))type metadata accessor for AcceptEpisodeLimitRecommendationAction);
  *(void *)(v11 + ((v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  sub_1E3E775E0();
  uint64_t v12 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1E3D9B328;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3E369D8;
  aBlock[3] = &block_descriptor_15;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  id v14 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v12, 2, v13);
  _Block_release(v13);

  return v14;
}

id sub_1E3D99A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AcceptEpisodeLimitRecommendationAction();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7D560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28498);
  sub_1E3E7BE20();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F91E48], v8);
  uint64_t v12 = (void *)sub_1E3C6EAEC((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v22[1] = sub_1E3E79530();
  sub_1E3D9B58C(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AcceptEpisodeLimitRecommendationAction);
  sub_1E3C1B2BC((uint64_t)v25, (uint64_t)v24);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  sub_1E3D9B748((uint64_t)v7, v16 + v13, (uint64_t (*)(void))type metadata accessor for AcceptEpisodeLimitRecommendationAction);
  *(void *)(v16 + v14) = v12;
  *(void *)(v16 + v15) = a2;
  sub_1E3C1B644(v24, v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8));
  id v17 = v12;
  sub_1E3E775E0();
  uint64_t v18 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1E3D9B0A8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3E369D8;
  aBlock[3] = &block_descriptor_9_0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_release();
  id v20 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v18, 0, v19);
  _Block_release(v19);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  return v20;
}

id sub_1E3D99DD4(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_presentationController);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(a2, sel_view);
    objc_msgSend(v5, sel_setSourceView_, v6);
  }
  id v7 = objc_msgSend(a1, sel_presentationController);
  if (v7)
  {
    uint64_t v8 = v7;
    id result = objc_msgSend(a2, sel_view);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v10 = result;
    objc_msgSend(result, sel_bounds);
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;

    v20.origin.x = v12;
    v20.origin.y = v14;
    v20.size.width = v16;
    v20.size.height = v18;
    objc_msgSend(v8, sel_setSourceRect_, 0.0, 0.0, 240.0, CGRectGetHeight(v20));
  }

  return objc_msgSend(a2, sel_presentViewController_animated_completion_, a1, 1, 0);
}

uint64_t sub_1E3D99F2C(uint64_t a1, uint64_t a2, objc_class *a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_1E3E7A880();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  CGFloat v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7A840();
  double v13 = sub_1E3E7A860();
  os_log_type_t v14 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v13, v14))
  {
    double v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v15 = 0;
    _os_log_impl(&dword_1E3BC5000, v13, v14, "User requested to see more options in settings", v15, 2u);
    MEMORY[0x1E4E79510](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20.super.isa = a3;
  EpisodeLimitRecommendation.markAsIgnored(in:)(v20);
  sub_1E3D9A938(a2, a4);
  uint64_t v16 = a5[3];
  uint64_t v17 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v16);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v17 + 8))(0, v16, v17);
}

uint64_t sub_1E3D9A0CC()
{
  uint64_t v0 = sub_1E3E7A880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7A840();
  id v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl(&dword_1E3BC5000, v4, v5, "User dismissed tip sheet", v6, 2u);
    MEMORY[0x1E4E79510](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1E3D9A200(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  id v7 = __swift_project_boxed_opaque_existential_1(a2, v5);
  sub_1E3CC9BD0((uint64_t)v7, 0, a3, a1, v5, v6);

  return swift_release();
}

uint64_t sub_1E3D9A264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7BD40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 24)))
  {
    sub_1E3D992F0(a1, a2);
  }
  else
  {
    sub_1E3D9A390(a1);
    sub_1E3D9A938(a1, a2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24FB8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F711E8], v4);
  return sub_1E3E7C9C0();
}

uint64_t sub_1E3D9A390(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_1E3E7B770();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E7B7C0();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v31 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = sub_1E3E7A880();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E7D560();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  os_log_type_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE4AA0);
  sub_1E3E7BE20();
  uint64_t v30 = (void *)aBlock[0];
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4F91E48], v11);
  double v15 = (objc_class *)sub_1E3C6EAEC((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1E3E7A840();
  uint64_t v16 = sub_1E3E7A860();
  os_log_type_t v17 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v16, v17))
  {
    CGFloat v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGFloat v18 = 0;
    _os_log_impl(&dword_1E3BC5000, v16, v17, "User accepted the new global default", v18, 2u);
    MEMORY[0x1E4E79510](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v19 = v32;
  sub_1E3E7D550();
  v41.super.isa = v15;
  EpisodeLimitRecommendation.markAsIgnored(in:)(v41);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  NSUserDefaults v20 = (void *)sub_1E3E7D5F0();
  sub_1E3D9B58C(v19, (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for EpisodeLimitRecommendation);
  unint64_t v21 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v22 = swift_allocObject();
  unint64_t v23 = v30;
  *(void *)(v22 + 16) = v30;
  sub_1E3D9B748((uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, (uint64_t (*)(void))type metadata accessor for EpisodeLimitRecommendation);
  aBlock[4] = sub_1E3D9B7B0;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3CE65F8;
  aBlock[3] = &block_descriptor_27;
  id v24 = _Block_copy(aBlock);
  id v25 = v23;
  os_log_type_t v26 = v33;
  sub_1E3E7B7A0();
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1E3D9AE6C((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C8E088();
  uint64_t v27 = v36;
  uint64_t v28 = v38;
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v26, v27, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v35);
  return swift_release();
}

uint64_t sub_1E3D9A938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B770();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7B7C0();
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v37 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE268A0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = type metadata accessor for AcceptEpisodeLimitRecommendationAction();
  sub_1E3C1B5DC(a1 + *(int *)(v17 + 20), (uint64_t)&aBlock);
  if (!v40) {
    return sub_1E3D9B3D0((uint64_t)&aBlock);
  }
  sub_1E3C1B644(&aBlock, (uint64_t)v44);
  uint64_t v33 = v16;
  sub_1E3E7BE20();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v32 = sub_1E3E7D6A0();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  sub_1E3C1B2BC((uint64_t)v44, (uint64_t)v43);
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v30 = v7;
  uint64_t v19 = (v18 + 16) & ~v18;
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = v8;
  uint64_t v21 = v35;
  uint64_t v22 = v36;
  uint64_t v23 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23 + v19, v13, v10);
  sub_1E3C1B644(v43, v23 + v20);
  *(void *)(v23 + ((v20 + 47) & 0xFFFFFFFFFFFFFFF8)) = a2;
  NSUserDefaults v41 = sub_1E3D9B4F0;
  uint64_t v42 = v23;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v39 = sub_1E3CE65F8;
  uint64_t v40 = &block_descriptor_21;
  id v24 = _Block_copy(&aBlock);
  sub_1E3E775E0();
  swift_release();
  id v25 = v37;
  sub_1E3E7B7A0();
  *(void *)&long long aBlock = MEMORY[0x1E4FBC860];
  sub_1E3D9AE6C((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C8E088();
  os_log_type_t v26 = v30;
  sub_1E3E7DCC0();
  uint64_t v27 = (void *)v32;
  MEMORY[0x1E4E76FF0](0, v25, v26, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v31);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v33, v10);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
}

uint64_t sub_1E3D9ADB8()
{
  return sub_1E3D9AE6C(&qword_1EAE26CB0, (void (*)(uint64_t))type metadata accessor for AcceptEpisodeLimitRecommendationAction);
}

ValueMetadata *type metadata accessor for AcceptEpisodeLimitRecommendationActionImplementation()
{
  return &type metadata for AcceptEpisodeLimitRecommendationActionImplementation;
}

uint64_t sub_1E3D9AE10()
{
  return swift_deallocObject();
}

id sub_1E3D9AE50()
{
  return sub_1E3D99DD4(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1E3D9AE6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3D9AEB4()
{
  uint64_t v1 = type metadata accessor for AcceptEpisodeLimitRecommendationAction();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for EpisodeLimitRecommendation();
  unint64_t v6 = v0 + v2 + *(int *)(v5 + 20);
  uint64_t v7 = sub_1E3E78A70();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  unint64_t v8 = v0 + v2 + *(int *)(v5 + 28);
  uint64_t v9 = sub_1E3E799C0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v0 + v2 + *(int *)(v1 + 20);
  if (*(void *)(v10 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v10);
  }
  unint64_t v11 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = v4 + *(int *)(v1 + 24);
  uint64_t v13 = sub_1E3E7BD30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

uint64_t sub_1E3D9B0A8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AcceptEpisodeLimitRecommendationAction() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(objc_class **)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v6);

  return sub_1E3D99F2C(a1, v1 + v4, v7, v8, (void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1E3D9B15C()
{
  uint64_t v1 = type metadata accessor for AcceptEpisodeLimitRecommendationAction();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = type metadata accessor for EpisodeLimitRecommendation();
  unint64_t v4 = v0 + v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_1E3E78A70();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = v0 + v2 + *(int *)(v3 + 28);
  uint64_t v7 = sub_1E3E799C0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v2 + *(int *)(v1 + 20);
  if (*(void *)(v8 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v8);
  }
  unint64_t v9 = v0 + v2 + *(int *)(v1 + 24);
  uint64_t v10 = sub_1E3E7BD30();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3D9B328()
{
  uint64_t v1 = *(void *)(type metadata accessor for AcceptEpisodeLimitRecommendationAction() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1E3D9A390(v3);

  return sub_1E3D9A938(v3, v4);
}

uint64_t sub_1E3D9B3D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3D9B430()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE268A0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v4);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3D9B4F0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE268A0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8));

  return sub_1E3D9A200(v0 + v2, (void *)(v0 + v3), v4);
}

uint64_t sub_1E3D9B58C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3D9B5F4()
{
  uint64_t v1 = (int *)(type metadata accessor for EpisodeLimitRecommendation() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  uint64_t v3 = v0 + v2;
  unint64_t v4 = v0 + v2 + v1[7];
  uint64_t v5 = sub_1E3E78A70();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v3 + v1[9];
  uint64_t v7 = sub_1E3E799C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3D9B748(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3D9B7B0()
{
  return sub_1E3C65888();
}

void sub_1E3D9B83C()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F31A10]);
  uint64_t v1 = (void *)sub_1E3E7CCF0();
  id v2 = objc_msgSend(v0, sel_initWithPlayerID_, v1);

  qword_1EBFE39A0 = (uint64_t)v2;
}

id RemoteFollowCommandCenter.__allocating_init(asPartOf:subscriptionUtility:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (char *)objc_allocWithZone(v2);
  *(void *)&v4[OBJC_IVAR____TtC10PodcastsUI25RemoteFollowCommandCenter_subscriptionUtility] = a2;
  type metadata accessor for PlaybackController();
  uint64_t v5 = v4;
  swift_unknownObjectRetain();
  sub_1E3E7BE20();
  *(void *)&v5[OBJC_IVAR____TtC10PodcastsUI25RemoteFollowCommandCenter_playbackController] = v9;

  v8.receiver = v5;
  v8.super_class = v2;
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  swift_release();
  swift_unknownObjectRelease();
  return v6;
}

id RemoteFollowCommandCenter.init(asPartOf:subscriptionUtility:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC10PodcastsUI25RemoteFollowCommandCenter_subscriptionUtility] = a2;
  type metadata accessor for PlaybackController();
  uint64_t v3 = v2;
  swift_unknownObjectRetain();
  sub_1E3E7BE20();
  *(void *)&v3[OBJC_IVAR____TtC10PodcastsUI25RemoteFollowCommandCenter_playbackController] = v7;

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for RemoteFollowCommandCenter();
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  swift_release();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t type metadata accessor for RemoteFollowCommandCenter()
{
  return self;
}

uint64_t sub_1E3D9BA50()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1E3E7D1A0();
  id v6 = v0;
  uint64_t v7 = sub_1E3E7D190();
  objc_super v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBCFD8];
  v8[2] = v7;
  v8[3] = v9;
  v8[4] = v6;
  v8[5] = ObjectType;
  sub_1E3C4CD5C((uint64_t)v4, (uint64_t)&unk_1EAE284B8, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1E3D9BB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  uint64_t v5 = sub_1E3E7A880();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26BB0);
  v4[19] = v6;
  v4[20] = *(void *)(v6 - 8);
  v4[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  v4[22] = swift_task_alloc();
  uint64_t v7 = sub_1E3E7D680();
  v4[23] = v7;
  v4[24] = *(void *)(v7 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE22A0);
  v4[26] = v8;
  v4[27] = *(void *)(v8 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE21B0);
  v4[29] = v9;
  v4[30] = *(void *)(v9 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26BB8);
  v4[32] = v10;
  v4[33] = *(void *)(v10 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26BC0);
  v4[35] = v11;
  v4[36] = *(void *)(v11 - 8);
  v4[37] = swift_task_alloc();
  v4[38] = sub_1E3E7D1A0();
  v4[39] = sub_1E3E7D190();
  uint64_t v13 = sub_1E3E7D130();
  v4[40] = v13;
  v4[41] = v12;
  return MEMORY[0x1F4188298](sub_1E3D9BEE0, v13, v12);
}

uint64_t sub_1E3D9BEE0()
{
  uint64_t v19 = *(void *)(v0 + 272);
  uint64_t v26 = *(void *)(v0 + 264);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v15 = *(void *)(v0 + 232);
  uint64_t v16 = *(void *)(v0 + 240);
  uint64_t v13 = *(void *)(v0 + 248);
  uint64_t v14 = *(void *)(v0 + 216);
  uint64_t v12 = *(void *)(v0 + 208);
  uint64_t v20 = *(void *)(v0 + 192);
  uint64_t v21 = *(void *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 200);
  uint64_t v18 = *(void *)(v0 + 176);
  uint64_t v22 = *(void *)(v0 + 168);
  uint64_t v25 = *(void *)(v0 + 160);
  uint64_t v24 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(*(void *)(v0 + 120) + OBJC_IVAR____TtC10PodcastsUI25RemoteFollowCommandCenter_playbackController)
     + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1E3C1B2BC(v2, v0 + 16);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v3);
  *(void *)(v0 + 80) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  sub_1E3E7A940();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2430);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE23C0);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE2420, (uint64_t *)&unk_1EBFE2430);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE23B0, (uint64_t *)&unk_1EBFE23C0);
  sub_1E3E7ADA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE2290, &qword_1EBFE22A0);
  sub_1E3CA9460();
  sub_1E3E7AD40();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v12);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE21A0, &qword_1EBFE21B0);
  uint64_t v5 = sub_1E3E7AB70();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  *(void *)(v0 + 88) = v5;
  sub_1E3E7D670();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  *(void *)(v0 + 96) = sub_1E3E7D6A0();
  uint64_t v6 = sub_1E3E7D640();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v18, 1, 1, v6);
  sub_1E3CA9500((unint64_t *)&qword_1EBFE27B0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3E7AD20();
  sub_1E3C10CE0(v18, (uint64_t *)&unk_1EBFE27A0);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v21);
  swift_release();
  uint64_t v7 = sub_1E3C10DE8(&qword_1EAE26BC8, &qword_1EAE26BB8);
  MEMORY[0x1E4E746A0](v23, v7);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v23);
  sub_1E3E7A990();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
  *(void *)(v0 + 336) = sub_1E3E7D190();
  uint64_t v8 = sub_1E3C10DE8((unint64_t *)&unk_1EAE26BD0, &qword_1EAE26BC0);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1E3D9C400;
  uint64_t v10 = *(void *)(v0 + 280);
  return MEMORY[0x1F4187C78](v0 + 104, v10, v8);
}

uint64_t sub_1E3D9C400()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 336);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_1E3E7D130();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_1E3D9C968;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_1E3E7D130();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_1E3D9C598;
  }
  return MEMORY[0x1F4188298](v7, v4, v6);
}

uint64_t sub_1E3D9C598()
{
  swift_release();
  v0[45] = v0[13];
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[41];
  return MEMORY[0x1F4188298](sub_1E3D9C604, v1, v2);
}

uint64_t sub_1E3D9C604()
{
  uint64_t v1 = (void *)v0[45];
  if (v1 == (void *)1)
  {
    (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
    swift_release();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_tracklist);
    id v3 = objc_msgSend(v2, sel_resetCommand);

    swift_unknownObjectRelease();
    if (v3)
    {
      swift_release();
      sub_1E3E7A7B0();
      uint64_t v4 = sub_1E3E7A860();
      os_log_type_t v5 = sub_1E3E7D500();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl(&dword_1E3BC5000, v4, v5, "Registered PodcastsFollowProxyPlayer", v6, 2u);
        MEMORY[0x1E4E79510](v6, -1, -1);
      }
      uint64_t v8 = v0[17];
      uint64_t v7 = v0[18];
      uint64_t v9 = v0[16];

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
      if (qword_1EBFE39A8 != -1) {
        swift_once();
      }
      uint64_t v10 = (void *)v0[45];
      uint64_t v12 = v0[36];
      uint64_t v11 = v0[37];
      uint64_t v13 = v0[35];
      uint64_t v14 = v0[15];
      id v15 = objc_msgSend((id)qword_1EBFE39A0, sel_setPlaybackQueueCommand);
      objc_msgSend(v15, sel_addTarget_action_usingExtendedStatus_, v14, sel_remoteSetPlaybackQueueCommand_completion_, 1);

      sub_1E3C9BBC4(v10);
      sub_1E3C9BBC4(v10);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      goto LABEL_10;
    }
    uint64_t v18 = (void *)v0[45];
    sub_1E3C9BBC4(v18);
    sub_1E3C9BBC4(v18);
  }
  v0[42] = sub_1E3E7D190();
  uint64_t v19 = sub_1E3C10DE8((unint64_t *)&unk_1EAE26BD0, &qword_1EAE26BC0);
  uint64_t v20 = (void *)swift_task_alloc();
  v0[43] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1E3D9C400;
  uint64_t v21 = v0[35];
  return MEMORY[0x1F4187C78](v0 + 13, v21, v19);
}

uint64_t sub_1E3D9C968()
{
  *(void *)(v0 + 112) = *(void *)(v0 + 352);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
  uint64_t v1 = MEMORY[0x1E4FBC248];
  uint64_t v2 = swift_dynamicCast();
  uint64_t v3 = MEMORY[0x1E4FBC278];
  return MEMORY[0x1F41868E8](v2, v1, v3);
}

uint64_t sub_1E3D9C9EC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3D9CA2C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1E3C19DC4;
  return sub_1E3D9BB7C(a1, v4, v5, v6);
}

uint64_t sub_1E3D9CAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  sub_1E3E775E0();
  v5(a2, a3);

  return swift_release();
}

void sub_1E3D9CB4C(char a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t a6, const char *a7)
{
  uint64_t v36 = a5;
  uint64_t v12 = sub_1E3E7A880();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v33 - v17;
  if (a1)
  {
    sub_1E3E7A7B0();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1E3E7A860();
    os_log_type_t v20 = sub_1E3E7D500();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v34 = a7;
      uint64_t v22 = v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v33 = v23;
      *(_DWORD *)uint64_t v22 = 141558275;
      uint64_t v37 = 1752392040;
      uint64_t v38 = v23;
      uint64_t v35 = a6;
      sub_1E3E7DBD0();
      *(_WORD *)(v22 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1E3C150B8(a3, a4, &v38);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1E3BC5000, v19, v20, v34, (uint8_t *)v22, 0x16u);
      uint64_t v24 = v33;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v24, -1, -1);
      MEMORY[0x1E4E79510](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    uint64_t v31 = 0;
  }
  else
  {
    sub_1E3E7A7B0();
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_1E3E7A860();
    os_log_type_t v26 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v35 = v12;
      uint64_t v28 = v27;
      uint64_t v29 = (const char *)swift_slowAlloc();
      uint64_t v34 = v29;
      *(_DWORD *)uint64_t v28 = 141558275;
      uint64_t v37 = 1752392040;
      uint64_t v38 = (uint64_t)v29;
      sub_1E3E7DBD0();
      *(_WORD *)(v28 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1E3C150B8(a3, a4, &v38);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1E3BC5000, v25, v26, "We didn't follow the show. Perhaps already subscribed?: %{private,mask.hash}s", (uint8_t *)v28, 0x16u);
      uint64_t v30 = v34;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v30, -1, -1);
      MEMORY[0x1E4E79510](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v35);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    uint64_t v31 = 200;
  }
  id v32 = objc_msgSend(self, sel_statusWithCode_, v31);
  v36();
}

id RemoteFollowCommandCenter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void RemoteFollowCommandCenter.init()()
{
}

id RemoteFollowCommandCenter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RemoteFollowCommandCenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for RemoteFollowCommandCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteFollowCommandCenter);
}

uint64_t dispatch thunk of RemoteFollowCommandCenter.__allocating_init(asPartOf:subscriptionUtility:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RemoteFollowCommandCenter.beginObservingPlaybackQueue()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

void sub_1E3D9D170(void *a1, void *a2, void (**a3)(void, void))
{
  uint64_t v121 = sub_1E3E79700();
  uint64_t v128 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  v120 = (char *)v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E79740();
  uint64_t v123 = *(void *)(v7 - 8);
  uint64_t v124 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v122 = (char *)v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE284C0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E79770();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v126 = v12;
  uint64_t v127 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v125 = (char *)v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E7A880();
  uint64_t v130 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v118 = (char *)v113 - v19;
  MEMORY[0x1F4188790](v20);
  CGRect v119 = (char *)v113 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v113 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)v113 - v26;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a3;
  _Block_copy(a3);
  id v29 = objc_msgSend(a1, sel_playbackQueue);
  if (!v29) {
    goto LABEL_7;
  }
  uint64_t v30 = v29;
  self;
  id v129 = (id)swift_dynamicCastObjCClass();
  if (!v129)
  {

LABEL_7:
    sub_1E3E7A7B0();
    uint64_t v44 = sub_1E3E7A860();
    os_log_type_t v45 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_1E3BC5000, v44, v45, "Received an unrecognized playback queue in compatibility command center handler. Dropping this request.", v46, 2u);
      MEMORY[0x1E4E79510](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v130 + 8))(v17, v15);
    id v47 = objc_msgSend(self, sel_statusWithCode_, 200);
    ((void (**)(void, id))a3)[2](a3, v47);
    swift_release();

    return;
  }
  uint64_t v117 = v15;
  v113[1] = swift_getObjectType();
  sub_1E3E7A7B0();
  id v31 = a2;
  id v32 = v30;
  id v33 = v31;
  id v34 = v32;
  uint64_t v35 = sub_1E3E7A860();
  os_log_type_t v36 = sub_1E3E7D500();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v116 = a3;
  if (v37)
  {
    id v114 = v34;
    v113[0] = v28;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v115 = (void (*)(void, void))swift_slowAlloc();
    long long aBlock = v115;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE284C8);
    uint64_t v39 = sub_1E3E7CD90();
    uint64_t ObjectType = sub_1E3C150B8(v39, v40, (uint64_t *)&aBlock);
    sub_1E3E7DBD0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    id v41 = objc_msgSend(v129, sel_trackIdentifiers);
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v43 = sub_1E3E7D060();
    }
    else
    {
      uint64_t v43 = 0;
    }
    uint64_t v28 = v113[0];
    uint64_t ObjectType = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE284D0);
    uint64_t v50 = sub_1E3E7CD90();
    uint64_t ObjectType = sub_1E3C150B8(v50, v51, (uint64_t *)&aBlock);
    sub_1E3E7DBD0();
    id v52 = v114;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v35, v36, "Received playback queue in %s: %s", (uint8_t *)v38, 0x16u);
    unint64_t v53 = v115;
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v53, -1, -1);
    uint64_t v54 = v38;
    id v34 = v52;
    MEMORY[0x1E4E79510](v54, -1, -1);

    unint64_t v48 = *(void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v49 = v117;
    v48(v27, v117);
    a3 = v116;
  }
  else
  {

    unint64_t v48 = *(void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v49 = v117;
    v48(v27, v117);
  }
  id v55 = objc_msgSend(v129, sel_trackIdentifiers);
  uint64_t v56 = v128;
  if (!v55)
  {
LABEL_19:
    sub_1E3E7A7B0();
    id v61 = v34;
    unint64_t v62 = sub_1E3E7A860();
    os_log_type_t v63 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v115 = (void (*)(void, void))v48;
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      long long aBlock = (void (*)(void, void))v65;
      *(_DWORD *)uint64_t v64 = 136315138;
      id v66 = objc_msgSend(v129, sel_trackIdentifiers);
      if (v66)
      {
        uint64_t v67 = v66;
        uint64_t v68 = (void *)sub_1E3E7D060();

        if (v68[2])
        {
          uint64_t v70 = v68[4];
          unint64_t v69 = v68[5];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v70 = 0;
          unint64_t v69 = 0xE000000000000000;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v70 = 0;
        unint64_t v69 = 0xE000000000000000;
      }
      uint64_t ObjectType = sub_1E3C150B8(v70, v69, (uint64_t *)&aBlock);
      sub_1E3E7DBD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v62, v63, "Unable to parse follow queue identifier: %s", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v65, -1, -1);
      MEMORY[0x1E4E79510](v64, -1, -1);

      v115(v24, v117);
      a3 = v116;
    }
    else
    {

      v48(v24, v49);
    }
    id v71 = objc_msgSend(self, sel_statusWithCode_, 200);
    ((void (**)(void, id))a3)[2](a3, v71);
    swift_release();

    return;
  }
  id v57 = v55;
  uint64_t v58 = sub_1E3E7D060();

  if (!*(void *)(v58 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v115 = (void (*)(void, void))v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1E3E79730();
  uint64_t v59 = v126;
  uint64_t v60 = v127;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v11, 1, v126) == 1)
  {
    sub_1E3C10CE0((uint64_t)v11, &qword_1EAE284C0);
    unint64_t v48 = (void (*)(char *, uint64_t))v115;
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v125, v11, v59);
  id v72 = v122;
  sub_1E3E79750();
  uint64_t v74 = v123;
  uint64_t v73 = v124;
  int v75 = (*(uint64_t (**)(char *, uint64_t))(v123 + 88))(v72, v124);
  int v76 = *MEMORY[0x1E4F91AB0];
  (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
  if (v75 == v76)
  {
    id v114 = v34;
    uint64_t v77 = *(void (**)(char *, void, uint64_t))(v56 + 104);
    uint64_t v79 = v120;
    uint64_t v78 = v121;
    v77(v120, *MEMORY[0x1E4F91AA0], v121);
    uint64_t v80 = v78;
    uint64_t v81 = sub_1E3E79720();
    uint64_t v83 = v82;
    uint64_t v84 = *(void (**)(char *, uint64_t))(v56 + 8);
    v84(v79, v80);
    if (v83)
    {
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      id v86 = (void *)sub_1E3E7CCF0();
      unsigned int v87 = (void *)swift_allocObject();
      v87[2] = v81;
      v87[3] = v83;
      v87[4] = sub_1E3D9E0F0;
      v87[5] = v28;
      uint64_t v135 = sub_1E3D9E174;
      id v136 = v87;
      long long aBlock = (void (*)(void, void))MEMORY[0x1E4F143A8];
      uint64_t v132 = 1107296256;
      uint64_t v133 = sub_1E3D9CAEC;
      uint64_t v134 = &block_descriptor_15_0;
      uint64_t v88 = _Block_copy(&aBlock);
      sub_1E3E775E0();
      swift_release();
      objc_msgSend(ObjCClassFromMetadata, sel_subscribeToPodcastWithAdamID_completion_, v86, v88);
      _Block_release(v88);

      (*(void (**)(char *, uint64_t))(v127 + 8))(v125, v126);
    }
    else
    {
      v77(v79, *MEMORY[0x1E4F91AA8], v80);
      uint64_t v98 = v80;
      uint64_t v99 = v125;
      uint64_t v100 = sub_1E3E79720();
      uint64_t v102 = v101;
      v84(v79, v98);
      uint64_t v103 = v99;
      if (v102)
      {
        uint64_t v104 = (void *)swift_getObjCClassFromMetadata();
        id v105 = (id)sub_1E3E7CCF0();
        uint64_t v106 = (void *)swift_allocObject();
        v106[2] = v100;
        v106[3] = v102;
        v106[4] = sub_1E3D9E0F0;
        v106[5] = v28;
        uint64_t v135 = sub_1E3D9E108;
        id v136 = v106;
        long long aBlock = (void (*)(void, void))MEMORY[0x1E4F143A8];
        uint64_t v132 = 1107296256;
        uint64_t v133 = sub_1E3D9CAEC;
        uint64_t v134 = &block_descriptor_25;
        uint64_t v107 = _Block_copy(&aBlock);
        unint64_t v108 = v103;
        sub_1E3E775E0();
        swift_release();
        objc_msgSend(v104, sel_subscribeToPodcastWithFeedUrl_completion_, v105, v107);
        _Block_release(v107);
      }
      else
      {
        unint64_t v108 = v99;
        id v109 = v118;
        sub_1E3E7A7B0();
        uint64_t v110 = sub_1E3E7A860();
        os_log_type_t v111 = sub_1E3E7D4E0();
        if (os_log_type_enabled(v110, v111))
        {
          uint64_t v112 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v112 = 0;
          _os_log_impl(&dword_1E3BC5000, v110, v111, "Unable to find feed URL or Adam ID in follow request", v112, 2u);
          MEMORY[0x1E4E79510](v112, -1, -1);
        }

        v115(v109, v117);
        id v105 = objc_msgSend(self, sel_statusWithCode_, 200);
        ((void (**)(void, id))a3)[2](a3, v105);
      }

      (*(void (**)(char *, uint64_t))(v127 + 8))(v108, v126);
    }
  }
  else
  {
    unsigned int v89 = v125;
    uint64_t v90 = v119;
    sub_1E3E7A7B0();
    uint64_t v91 = sub_1E3E7A860();
    os_log_type_t v92 = sub_1E3E7D4E0();
    BOOL v93 = os_log_type_enabled(v91, v92);
    uint64_t v94 = v127;
    if (v93)
    {
      int64_t v95 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v95 = 0;
      _os_log_impl(&dword_1E3BC5000, v91, v92, "Received a playback queue without a subscribe request in compatibility command center handler. Dropping this request.", v95, 2u);
      unint64_t v96 = v95;
      uint64_t v94 = v127;
      MEMORY[0x1E4E79510](v96, -1, -1);
    }

    v115(v90, v49);
    id v97 = objc_msgSend(self, sel_statusWithCode_, 200);
    ((void (**)(void, id))a3)[2](a3, v97);

    (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v126);
  }
  swift_release();
}

uint64_t sub_1E3D9E0B8()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1E3D9E0F0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1E3D9E108(char a1, uint64_t a2)
{
  sub_1E3D9CB4C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), "Successfully followed show using feed url MR request: %{private,mask.hash}s");
}

uint64_t objectdestroy_8Tm()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1E3D9E174(char a1, uint64_t a2)
{
  sub_1E3D9CB4C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), "Successfully followed show using adam id MR request: %{private,mask.hash}s");
}

uint64_t AssetProcessingStep<>.invalidate(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v9, v3, a2, v7);
  sub_1E3C1B2BC(a1, (uint64_t)v13);
  return InvalidateImageStoreValueProcessingStep.init(upstream:imageStore:)((uint64_t)v9, v13, a2, a3);
}

uint64_t InvalidateImageStoreValueProcessingStep.init(upstream:imageStore:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for InvalidateImageStoreValueProcessingStep() + 36);

  return sub_1E3C1B644(a2, v6);
}

uint64_t type metadata accessor for InvalidateImageStoreValueProcessingStep()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t InvalidateImageStoreValueProcessingStep.metadata.getter()
{
  return sub_1E3E79780();
}

uint64_t InvalidateImageStoreValueProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t InvalidateImageStoreValueProcessingStep.imageStore.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C1B2BC(v2 + *(int *)(a1 + 36), a2);
}

uint64_t InvalidateImageStoreValueProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_1E3E7A8C0();
  uint64_t v23 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v19 = (char *)&v18 - v13;
  uint64_t v21 = v2;
  sub_1E3E79790();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  *(void *)(v15 + 24) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v16 = v19;
  sub_1E3E7AB90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, AssociatedTypeWitness);
  swift_getWitnessTable();
  sub_1E3E797C0();
  swift_getWitnessTable();
  sub_1E3E78B20();
  sub_1E3E7AB40();
  sub_1E3D9EA54((uint64_t)v25);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v12);
}

uint64_t sub_1E3D9E720(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1E3E78740();
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E78E70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for InvalidateImageStoreValueProcessingStep();
  sub_1E3E79780();
  sub_1E3E78E00();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = &v6[*(int *)(v4 + 72)];
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E3C2CBF8((uint64_t)v6);
  if (v14)
  {
    uint64_t v16 = (void *)(a2 + *(int *)(v11 + 36));
    uint64_t v17 = v16[3];
    uint64_t v18 = v16[4];
    __swift_project_boxed_opaque_existential_1(v16, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v13, v14, v17, v18);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E3D9E8D8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for InvalidateImageStoreValueProcessingStep() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  __swift_destroy_boxed_opaque_existential_0(v3 + v2[11]);

  return swift_deallocObject();
}

uint64_t sub_1E3D9E9C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for InvalidateImageStoreValueProcessingStep() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1E3D9E720(a1, v4);
}

uint64_t sub_1E3D9EA54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3D9EAB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3D9EB00()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1E3D9EB98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    sub_1E3E775E0();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 24);
    *(void *)(v10 + 24) = v12;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_1E3D9ECD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;

  return __swift_destroy_boxed_opaque_existential_0(v4);
}

uint64_t sub_1E3D9ED40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1E3D9EE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1E3D9EE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 32);
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1E3D9EEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1E3D9EF88(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1E3D9F0D4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_1E3D9F0E8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1E3D9F2D4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v19 + 8) = 0u;
            *(_OWORD *)(v19 + 24) = 0u;
            *(void *)unint64_t v19 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v19 + 24) = a2 - 1;
          }
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

uint64_t sub_1E3D9F2FC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1E3E7A8C0();
  swift_getWitnessTable();
  sub_1E3E78B30();

  return swift_getWitnessTable();
}

uint64_t dispatch thunk of ContentReferring.contentReference.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id ThumbnailImageResizer.resizedImage(at:to:displayScale:)(double a1, double a2, double a3)
{
  CFDictionaryRef v3 = (const __CFDictionary *)_s10PodcastsUI21ThumbnailImageResizerV13resizeOptions4size12displayScaleSo15CFDictionaryRefaSo6CGSizeV_12CoreGraphics7CGFloatVtFZ_0(a1, a2, a3);
  sub_1E3E77CC0();
  uint64_t v4 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  unsigned int v5 = (CGImageSource *)CGImageSourceCreateWithFile();

  if (!v5) {
    goto LABEL_5;
  }
  CGImageRef ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v5, 0, v3);
  if (!ThumbnailAtIndex)
  {

LABEL_5:
    return 0;
  }
  CGImageRef v7 = ThumbnailAtIndex;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_, ThumbnailAtIndex);

  return v8;
}

UIImage *ThumbnailImageResizer.resize(image:to:displayScale:)(UIImage *a1, double a2, double a3, double a4)
{
  CFDictionaryRef v4 = (const __CFDictionary *)_s10PodcastsUI21ThumbnailImageResizerV13resizeOptions4size12displayScaleSo15CFDictionaryRefaSo6CGSizeV_12CoreGraphics7CGFloatVtFZ_0(a2, a3, a4);
  unsigned int v5 = sub_1E3D9F568(a1);
  if (!v5) {
    goto LABEL_6;
  }
  uint64_t v6 = v5;
  CGImageRef ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v5, 0, v4);
  if (!ThumbnailAtIndex)
  {

    CFDictionaryRef v4 = v6;
LABEL_6:

    goto LABEL_7;
  }
  CGImageRef v8 = ThumbnailAtIndex;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_, ThumbnailAtIndex);

  if (v9) {
    return (UIImage *)v9;
  }
LABEL_7:

  return a1;
}

CGImageSourceRef sub_1E3D9F568(UIImage *a1)
{
  uint64_t v2 = sub_1E3E7A880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  CGImageRef v8 = (char *)&v40 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2918);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
  unint64_t v10 = (void *)*MEMORY[0x1E4F2FF08];
  *(void *)(inited + 32) = *MEMORY[0x1E4F2FF08];
  *(unsigned char *)(inited + 40) = 0;
  id v11 = v10;
  sub_1E3C7F568(inited);
  type metadata accessor for CFString(0);
  sub_1E3D9FC04();
  CFDictionaryRef v12 = (const __CFDictionary *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  unsigned int v13 = [(UIImage *)a1 CGImage];
  if (v13)
  {
    uint64_t v14 = v13;
    int v15 = CGImageGetDataProvider(v13);

    if (v15)
    {
      int v16 = CGImageSourceCreateWithDataProvider(v15, v12);
      if (v16)
      {
        CGImageSourceRef v17 = v16;
        if ((CGImageSourceGetStatus(v16) + 5) >= 3)
        {
          sub_1E3E7A7F0();
          os_log_type_t v36 = sub_1E3E7A860();
          os_log_type_t v37 = sub_1E3E7D4D0();
          if (os_log_type_enabled(v36, v37))
          {
            uint64_t v38 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v38 = 0;
            _os_log_impl(&dword_1E3BC5000, v36, v37, "Resized using dataProvider", v38, 2u);
            MEMORY[0x1E4E79510](v38, -1, -1);
            uint64_t v39 = v12;
          }
          else
          {
            uint64_t v39 = v36;
            os_log_type_t v36 = v15;
            int v15 = v12;
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          return v17;
        }
      }
      else
      {
        CGImageSourceRef v17 = v15;
      }
    }
  }
  if ((sub_1E3E78AE0() & 1) == 0)
  {
    uint64_t v22 = UIImagePNGRepresentation(a1);
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v20 = sub_1E3E77D50();
      unint64_t v21 = v24;

      goto LABEL_13;
    }
LABEL_21:

    return 0;
  }
  uint64_t v18 = UIImage.heicData(compressionQuality:)(1.0);
  if (v19 >> 60 == 15) {
    goto LABEL_21;
  }
  uint64_t v20 = v18;
  unint64_t v21 = v19;
LABEL_13:
  sub_1E3E7A7F0();
  uint64_t v25 = sub_1E3E7A860();
  os_log_type_t v26 = sub_1E3E7D4D0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v43 = v2;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v42 = v3;
    uint64_t v29 = v28;
    uint64_t v45 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    char v30 = sub_1E3E78AE0();
    BOOL v31 = (v30 & 1) == 0;
    if (v30) {
      uint64_t v32 = 1128875336;
    }
    else {
      uint64_t v32 = 4673104;
    }
    if (v31) {
      unint64_t v33 = 0xE300000000000000;
    }
    else {
      unint64_t v33 = 0xE400000000000000;
    }
    id v41 = v5;
    uint64_t v44 = sub_1E3C150B8(v32, v33, &v45);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v25, v26, "Resized using image data: (%s)", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v29, -1, -1);
    MEMORY[0x1E4E79510](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  CFDataRef v34 = (const __CFData *)sub_1E3E77D30();
  CGImageSourceRef v17 = CGImageSourceCreateWithData(v34, v12);

  sub_1E3C2B7E8(v20, v21);
  return v17;
}

UIImage_optional __swiftcall ThumbnailImageResizer.resizedImage(from:options:)(CGImageSourceRef from, CFDictionaryRef options)
{
  CGImageRef ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(from, 0, options);
  if (ThumbnailAtIndex)
  {
    CGImageRef v4 = ThumbnailAtIndex;
    unsigned int v5 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_, ThumbnailAtIndex);
  }
  else
  {
    unsigned int v5 = 0;
  }
  uint64_t v6 = v5;
  result.value.super.isa = v6;
  result.is_nil = v3;
  return result;
}

Swift::Bool __swiftcall CGImageSourceRef.isValid()()
{
  return (CGImageSourceGetStatus(v0) + 2) < 0xFFFFFFFD;
}

UIImage *sub_1E3D9FA6C(UIImage *a1, double a2, double a3, double a4)
{
  return ThumbnailImageResizer.resize(image:to:displayScale:)(a1, a2, a3, a4);
}

id sub_1E3D9FA84(double a1, double a2, double a3)
{
  return ThumbnailImageResizer.resizedImage(at:to:displayScale:)(a1, a2, a3);
}

uint64_t _s10PodcastsUI21ThumbnailImageResizerV13resizeOptions4size12displayScaleSo15CFDictionaryRefaSo6CGSizeV_12CoreGraphics7CGFloatVtFZ_0(double a1, double a2, double a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63F0);
  uint64_t inited = swift_initStackObject();
  uint64_t v7 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1E3E8A200;
  CGImageRef v8 = (void *)*MEMORY[0x1E4F2FF00];
  *(void *)(inited + 32) = *MEMORY[0x1E4F2FF00];
  uint64_t v9 = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 40) = 1;
  unint64_t v10 = (void *)*MEMORY[0x1E4F2FE28];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  *(unsigned char *)(inited + 80) = 1;
  id v11 = (void *)*MEMORY[0x1E4F2FE48];
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 112) = v11;
  *(unsigned char *)(inited + 120) = 1;
  CFDictionaryRef v12 = (void *)*MEMORY[0x1E4F2FF68];
  *(void *)(inited + 144) = v9;
  *(void *)(inited + 152) = v12;
  if (a1 > a2) {
    double v13 = a1;
  }
  else {
    double v13 = a2;
  }
  uint64_t v14 = MEMORY[0x1E4FBC958];
  int v15 = (void **)MEMORY[0x1E4F2FF88];
  *(double *)(inited + 160) = v13 * a3;
  int v16 = *v15;
  *(void *)(inited + 184) = v14;
  *(void *)(inited + 192) = v16;
  *(void *)(inited + 224) = v9;
  *(unsigned char *)(inited + 200) = 1;
  id v17 = v8;
  id v18 = v10;
  id v19 = v11;
  id v20 = v12;
  id v21 = v16;
  sub_1E3C7EA9C(v7);
  type metadata accessor for CFString(0);
  sub_1E3D9FC04();
  uint64_t v22 = sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  return v22;
}

ValueMetadata *type metadata accessor for ThumbnailImageResizer()
{
  return &type metadata for ThumbnailImageResizer;
}

unint64_t sub_1E3D9FC04()
{
  unint64_t result = qword_1EBFE63A0;
  if (!qword_1EBFE63A0)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE63A0);
  }
  return result;
}

uint64_t LazyDate.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v6 = a1;
  v6[1] = a2;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0778);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + ((*(unsigned int *)(*(void *)v7 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1E3D27DB4((uint64_t)v6, v7 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v7 + 16));
  sub_1E3D27E18((uint64_t)v6);
  return v7;
}

uint64_t type metadata accessor for LazyDate.State()
{
  uint64_t result = qword_1EBFE02C8;
  if (!qword_1EBFE02C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void LazyDate.value.getter(uint64_t a1@<X0>, char *a2@<X8>)
{
  Swift::Bool v3 = (uint64_t *)(a1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a1 + 16));
  uint64_t v4 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1E3DA0118(v3, a2);

  os_unfair_lock_unlock(v4);
}

uint64_t LazyDate.init(_:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77E20();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0778);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + ((*(unsigned int *)(*(void *)v7 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1E3D27DB4((uint64_t)v4, v7 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v7 + 16));
  sub_1E3D27E18((uint64_t)v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

uint64_t LazyDate.init(initialState:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0778);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1E3D27DB4(a1, v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16));
  sub_1E3D27E18(a1);
  return v2;
}

uint64_t sub_1E3DA0118@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E77E20();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void *)((char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3D27DB4((uint64_t)a1, (uint64_t)v14);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1E3D27E18((uint64_t)v14);
      uint64_t v16 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(a2, v14, v8);
      uint64_t v16 = 0;
    }
  }
  else
  {
    v21[1] = v2;
    sub_1E3D27E18((uint64_t)a1);
    uint64_t v18 = *v14;
    uint64_t v17 = v14[1];
    sub_1E3DA03DC(v18, v17, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1E3C10CE0((uint64_t)v7, (uint64_t *)&unk_1EBFDEDF0);
      *a1 = v18;
      a1[1] = v17;
      uint64_t v16 = 1;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v19(v11, v7, v8);
      (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(a1, v11, v8);
      swift_storeEnumTagMultiPayload();
      v19(a2, v11, v8);
      uint64_t v16 = 0;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v16, 1, v8);
}

uint64_t sub_1E3DA03DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E7BDE0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E7BDD0();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v13 = v8 + 16;
    uint64_t v24 = a3;
    uint64_t v25 = v14;
    uint64_t v15 = *(unsigned __int8 *)(v13 + 64);
    v23[1] = v11;
    uint64_t v16 = v11 + ((v15 + 32) & ~v15);
    uint64_t v17 = *(void *)(v13 + 56);
    while (1)
    {
      v25(v10, v16, v7);
      sub_1E3E7BDB0();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v10, v7);
      uint64_t v18 = sub_1E3E77E20();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) != 1) {
        break;
      }
      sub_1E3C10CE0((uint64_t)v6, (uint64_t *)&unk_1EBFDEDF0);
      v16 += v17;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        a3 = v24;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v24, v6, v18);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v20 = sub_1E3E77E20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 1, 1, v20);
  }
}

uint64_t static LazyDate.== infix(_:_:)()
{
  uint64_t v0 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v8 - v4;
  sub_1E3E78A90();
  sub_1E3E78A90();
  char v6 = _s10PodcastsUI8LazyDateV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v2);
  sub_1E3D27E18((uint64_t)v2);
  sub_1E3D27E18((uint64_t)v5);
  return v6 & 1;
}

uint64_t sub_1E3DA0760()
{
  uint64_t v0 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v8 - v4;
  sub_1E3E78A90();
  sub_1E3E78A90();
  char v6 = _s10PodcastsUI8LazyDateV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v2);
  sub_1E3D27E18((uint64_t)v2);
  sub_1E3D27E18((uint64_t)v5);
  return v6 & 1;
}

uint64_t LazyDate.init(from:)(void *a1)
{
  return sub_1E3DA11D8(a1);
}

uint64_t sub_1E3DA0864@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1E3DA11D8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t LazyDate.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7BDE0();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E77E20();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v25 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E7E2F0();
  sub_1E3E78A90();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v13 = v25;
    uint64_t v14 = v12;
    uint64_t v15 = v26;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v25, v14, v8);
    uint64_t v17 = v23;
    uint64_t v16 = v24;
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v7, *MEMORY[0x1E4F71228], v24);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v4, v13, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v4, 0, 1, v8);
    uint64_t v18 = sub_1E3E7BDC0();
    uint64_t v20 = v19;
    sub_1E3C10CE0((uint64_t)v4, (uint64_t *)&unk_1EBFDEDF0);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
    uint64_t v27 = v18;
    uint64_t v28 = v20;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26D8);
    sub_1E3DA13B0();
    sub_1E3E7E180();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v8);
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    sub_1E3E7E170();
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
}

uint64_t sub_1E3DA0C3C(void *a1)
{
  return LazyDate.encode(to:)(a1);
}

void *sub_1E3DA0C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_1E3C233D4(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t Date.lazy.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77E20();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v10(v9, v1, v5, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v4, v9, v5);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0778);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + ((*(unsigned int *)(*(void *)v11 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1E3D27DB4((uint64_t)v4, v11 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v11 + 16));
  sub_1E3D27E18((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v11;
}

uint64_t _s10PodcastsUI8LazyDateV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E77E20();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v30 - v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v30 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE284D8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v18[*(int *)(v19 + 56)];
  sub_1E3D27DB4(a1, (uint64_t)v18);
  sub_1E3D27DB4(a2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1E3D27DB4((uint64_t)v18, (uint64_t)v15);
    uint64_t v23 = *v15;
    uint64_t v22 = v15[1];
    if (!swift_getEnumCaseMultiPayload())
    {
LABEL_4:
      if (v23 == *(void *)v20 && v22 == *((void *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v25 = sub_1E3E7E150();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          sub_1E3D27E18((uint64_t)v18);
LABEL_16:
          char v27 = 0;
          return v27 & 1;
        }
      }
      sub_1E3D27E18((uint64_t)v18);
      char v27 = 1;
      return v27 & 1;
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1E3D27DB4((uint64_t)v18, (uint64_t)v12);
    uint64_t v23 = *v12;
    uint64_t v22 = v12[1];
    if (swift_getEnumCaseMultiPayload() == 1) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_15:
    sub_1E3C10CE0((uint64_t)v18, &qword_1EAE284D8);
    goto LABEL_16;
  }
  sub_1E3D27DB4((uint64_t)v18, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v4);
    goto LABEL_15;
  }
  uint64_t v26 = v31;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v6, v20, v4);
  char v27 = sub_1E3E77DE0();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v26 + 8);
  v28(v6, v4);
  v28(v9, v4);
  sub_1E3D27E18((uint64_t)v18);
  return v27 & 1;
}

uint64_t sub_1E3DA11D8(void *a1)
{
  uint64_t v3 = type metadata accessor for LazyDate.State();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (void *)((char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E7E2D0();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    *uint64_t v5 = sub_1E3E7E160();
    v5[1] = v8;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0778);
    uint64_t v6 = swift_allocObject();
    *(_DWORD *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
    sub_1E3D27DB4((uint64_t)v5, v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16));
    sub_1E3D27E18((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v6;
}

unint64_t sub_1E3DA13B0()
{
  unint64_t result = qword_1EAE26A48;
  if (!qword_1EAE26A48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE26D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE26A48);
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyDate()
{
  return &type metadata for LazyDate;
}

uint64_t *initializeBufferWithCopyOfBuffer for LazyDate.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v8 = sub_1E3E77E20();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LazyDate.State(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = sub_1E3E77E20();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for LazyDate.State(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v5 = sub_1E3E77E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for LazyDate.State(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1E3D27E18((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v4 = sub_1E3E77E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for LazyDate.State(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1E3E77E20();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for LazyDate.State(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3D27E18((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1E3E77E20();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1E3DA1940()
{
  uint64_t result = sub_1E3E77E20();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t IgnorePurgedEpisodesActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[13] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1E3DA1AA0;
  return MEMORY[0x1F4127FF8](v3 + 2, v4, v4);
}

uint64_t sub_1E3DA1AA0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3D20E80;
  }
  else {
    uint64_t v2 = sub_1E3DA1BB4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3DA1BB4()
{
  uint64_t v1 = (uint64_t *)v0[11];
  uint64_t v2 = *v1;
  v0[15] = *v1;
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v0[7] = v2;
  v0[8] = 1;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  sub_1E3C2A3B8();
  *uint64_t v3 = v0;
  v3[1] = sub_1E3DA1CC8;
  return MEMORY[0x1F41281F8](v0 + 9);
}

uint64_t sub_1E3DA1CC8()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3D20E98;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1E3D20DC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

unint64_t sub_1E3DA1DF4()
{
  unint64_t result = qword_1EAE284E8;
  if (!qword_1EAE284E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE284E8);
  }
  return result;
}

uint64_t sub_1E3DA1E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1E3C19DC4;
  return IgnorePurgedEpisodesActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

unint64_t sub_1E3DA1EFC()
{
  unint64_t result = qword_1EAE27920;
  if (!qword_1EAE27920)
  {
    type metadata accessor for IgnorePurgedEpisodesAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE27920);
  }
  return result;
}

uint64_t sub_1E3DA1F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1E3DA1FB8();

  return MEMORY[0x1F4128AC0](a1, a2, a3, v6);
}

ValueMetadata *type metadata accessor for IgnorePurgedEpisodesActionImplementation()
{
  return &type metadata for IgnorePurgedEpisodesActionImplementation;
}

unint64_t sub_1E3DA1FB8()
{
  unint64_t result = qword_1EAE284F8;
  if (!qword_1EAE284F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE284F8);
  }
  return result;
}

uint64_t sub_1E3DA200C()
{
  uint64_t v0 = sub_1E3E77B60();
  __swift_allocate_value_buffer(v0, qword_1EAE28500);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE28500);
  return sub_1E3E77B40();
}

uint64_t static OpenChannelAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE244E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE28500);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static OpenChannelAppIntent.title.setter(uint64_t a1)
{
  if (qword_1EAE244E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE28500);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static OpenChannelAppIntent.title.modify())()
{
  if (qword_1EAE244E0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1E3E77B60();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAE28500);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static OpenChannelAppIntent.isDiscoverable.getter()
{
  return 1;
}

uint64_t static OpenChannelAppIntent.isAssistantOnly.getter()
{
  return 1;
}

uint64_t static OpenChannelAppIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static OpenChannelAppIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28518);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28520);
  MEMORY[0x1F4188790](v1);
  sub_1E3DA2460();
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28530);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

unint64_t sub_1E3DA2460()
{
  unint64_t result = qword_1EAE28528;
  if (!qword_1EAE28528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28528);
  }
  return result;
}

uint64_t OpenChannelAppIntent.$target.getter()
{
  return sub_1E3E77570();
}

uint64_t OpenChannelAppIntent.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t OpenChannelAppIntent.objectGraph.setter()
{
  return swift_release();
}

uint64_t (*OpenChannelAppIntent.objectGraph.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34A04;
}

uint64_t OpenChannelAppIntent.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t OpenChannelAppIntent.target.getter()
{
  return sub_1E3E77550();
}

uint64_t sub_1E3DA25F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChannelEntity();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3DA2798(a1, (uint64_t)&v9 - v6);
  sub_1E3DA2798((uint64_t)v7, (uint64_t)v4);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3DA3B50((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  swift_release();
  return swift_release();
}

uint64_t OpenChannelAppIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChannelEntity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3DA2798(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3DA3B50(a1, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
}

uint64_t sub_1E3DA2798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChannelEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t (*OpenChannelAppIntent.target.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E77540();
  return sub_1E3C34A04;
}

uint64_t OpenChannelAppIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  char v25 = a1;
  uint64_t v24 = sub_1E3E77860();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25140);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28538);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E77B60();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  char v26 = 0;
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t v22 = sub_1E3E77320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28540);
  sub_1E3E77B40();
  sub_1E3E77B40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for ChannelEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = sub_1E3E77430();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v23, *MEMORY[0x1E4F186F0], v24);
  sub_1E3DA3C3C(&qword_1EAE28548);
  uint64_t result = sub_1E3E775A0();
  id v21 = v25;
  *char v25 = v22;
  v21[1] = result;
  return result;
}

uint64_t OpenChannelAppIntent.init(target:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ChannelEntity();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v13 - v8;
  OpenChannelAppIntent.init()(v13);
  uint64_t v10 = v13[0];
  uint64_t v11 = v13[1];
  sub_1E3DA2798(a1, (uint64_t)v9);
  sub_1E3DA2798((uint64_t)v9, (uint64_t)v6);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77560();
  sub_1E3DA3B50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  swift_release();
  swift_release();
  uint64_t result = sub_1E3DA3B50(a1, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  *a2 = v10;
  a2[1] = v11;
  return result;
}

uint64_t OpenChannelAppIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v3 = sub_1E3E7A880();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = *(void *)(v3 - 8);
  *(void *)(v2 + 48) = swift_task_alloc();
  *(void *)(v2 + 56) = type metadata accessor for OpenStoreURLAction();
  *(void *)(v2 + 64) = swift_task_alloc();
  uint64_t v4 = sub_1E3E7BD40();
  *(void *)(v2 + 72) = v4;
  *(void *)(v2 + 80) = *(void *)(v4 - 8);
  *(void *)(v2 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = type metadata accessor for ChannelEntity();
  *(void *)(v2 + 112) = swift_task_alloc();
  *(void *)(v2 + 120) = swift_task_alloc();
  uint64_t v5 = sub_1E3E77D00();
  *(void *)(v2 + 128) = v5;
  *(void *)(v2 + 136) = *(void *)(v5 - 8);
  *(void *)(v2 + 144) = swift_task_alloc();
  *(_OWORD *)(v2 + 152) = *v1;
  sub_1E3E7D1A0();
  *(void *)(v2 + 168) = sub_1E3E7D190();
  uint64_t v7 = sub_1E3E7D130();
  *(void *)(v2 + 176) = v7;
  *(void *)(v2 + 184) = v6;
  return MEMORY[0x1F4188298](sub_1E3DA2FD0, v7, v6);
}

uint64_t sub_1E3DA2FD0()
{
  CFDataRef v34 = v0;
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[13];
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E77550();
  swift_release();
  swift_release();
  sub_1E3C242A0(v3 + *(int *)(v5 + 48), v4);
  sub_1E3DA3B50(v3, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1);
  uint64_t v7 = v0[12];
  if (v6 == 1)
  {
    swift_release();
    sub_1E3C13F0C(v7);
    sub_1E3E7A740();
    swift_retain_n();
    swift_retain_n();
    uint64_t v8 = sub_1E3E7A860();
    os_log_type_t v9 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint64_t *)v0[14];
      uint64_t v29 = v0[5];
      uint64_t v30 = v0[4];
      uint64_t v31 = v0[6];
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v33 = v28;
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_1E3E775E0();
      sub_1E3E775E0();
      sub_1E3E77550();
      swift_release();
      swift_release();
      uint64_t v13 = *v10;
      unint64_t v12 = v10[1];
      swift_bridgeObjectRetain();
      sub_1E3DA3B50((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
      v0[2] = sub_1E3C150B8(v13, v12, &v33);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release_n();
      _os_log_impl(&dword_1E3BC5000, v8, v9, "Unable to open show %s, no share URL", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v28, -1, -1);
      MEMORY[0x1E4E79510](v11, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
    }
    else
    {
      uint64_t v25 = v0[5];
      uint64_t v24 = v0[6];
      uint64_t v26 = v0[4];
      swift_release_n();
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    }
    sub_1E3CB5598();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
  else
  {
    uint64_t v15 = v0[17];
    uint64_t v14 = v0[18];
    uint64_t v16 = v0[16];
    uint64_t v18 = v0[7];
    uint64_t v17 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v14, v0[12], v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v17 + *(int *)(v18 + 20), v14, v16);
    sub_1E3E7BD10();
    uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t))((char *)&dword_1EAE26898 + dword_1EAE26898);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[24] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1E3DA3444;
    uint64_t v20 = v0[19];
    uint64_t v21 = v0[11];
    uint64_t v22 = v0[8];
    return v32(v21, v22, 0, v20);
  }
}

uint64_t sub_1E3DA3444()
{
  uint64_t v2 = *v1;
  (*v1)[25] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1E3DA3B50(v2[8], (uint64_t (*)(void))type metadata accessor for OpenStoreURLAction);
    uint64_t v3 = v2[22];
    uint64_t v4 = v2[23];
    uint64_t v5 = sub_1E3DA36B0;
  }
  else
  {
    uint64_t v7 = v2[10];
    uint64_t v6 = v2[11];
    uint64_t v8 = v2[9];
    sub_1E3DA3B50(v2[8], (uint64_t (*)(void))type metadata accessor for OpenStoreURLAction);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v3 = v2[22];
    uint64_t v4 = v2[23];
    uint64_t v5 = sub_1E3DA35B4;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1E3DA35B4()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  swift_release();
  sub_1E3E77480();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1E3DA36B0()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1E3DA3794(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChannelEntity();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3DA2798(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E77560();
  return sub_1E3DA3B50(a1, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
}

uint64_t sub_1E3DA3838@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE244E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E77B60();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE28500);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1E3DA38F8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28518);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28520);
  MEMORY[0x1F4188790](v1);
  sub_1E3E77830();
  sub_1E3E77820();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28530);
  sub_1E3E77810();
  swift_release();
  sub_1E3E77820();
  sub_1E3E77850();
  return sub_1E3E77800();
}

uint64_t sub_1E3DA3A78(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return OpenChannelAppIntent.perform()(a1);
}

uint64_t sub_1E3DA3B14(uint64_t a1)
{
  unint64_t v2 = sub_1E3DA2460();

  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1E3DA3B50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1E3DA3BB4()
{
  unint64_t result = qword_1EAE28558;
  if (!qword_1EAE28558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28558);
  }
  return result;
}

uint64_t sub_1E3DA3C08()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E50);
}

uint64_t sub_1E3DA3C3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ChannelEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3DA3C88()
{
  unint64_t result = qword_1EAE28560;
  if (!qword_1EAE28560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28560);
  }
  return result;
}

unint64_t sub_1E3DA3CE0()
{
  unint64_t result = qword_1EAE28568;
  if (!qword_1EAE28568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28568);
  }
  return result;
}

uint64_t sub_1E3DA3D34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DA3D50()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for OpenChannelAppIntent()
{
  return &type metadata for OpenChannelAppIntent;
}

uint64_t sub_1E3DA3D8C()
{
  return sub_1E3C10DE8(&qword_1EAE28578, &qword_1EAE28580);
}

uint64_t _s13ConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s13ConfigurationVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13ConfigurationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationVMa()
{
  return &_s13ConfigurationVN;
}

void sub_1E3DA3FE4(void *a1@<X8>)
{
  *a1 = &unk_1F3F47D40;
}

uint64_t sub_1E3DA3FF4()
{
  uint64_t result = *MEMORY[0x1E4F77860];
  if (*MEMORY[0x1E4F77860])
  {
    uint64_t v1 = sub_1E3E7CD30();
    uint64_t v3 = v2;
    uint64_t v7 = MEMORY[0x1E4FBC870];
    sub_1E3DA45BC(&v6, 2);
    sub_1E3DA45BC(&v5, 1);
    uint64_t result = sub_1E3DA45BC(&v4, 0);
    *(void *)&xmmword_1EBFECD58 = 0x7374736163646F50;
    *((void *)&xmmword_1EBFECD58 + 1) = 0xE800000000000000;
    qword_1EBFECD68 = v1;
    unk_1EBFECD70 = v3;
    qword_1EBFECD78 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1E3DA40A8()
{
  if (qword_1EBFE1258 != -1) {
    swift_once();
  }
  v2[0] = xmmword_1EBFECD58;
  v2[1] = *(_OWORD *)&qword_1EBFECD68;
  uint64_t v3 = qword_1EBFECD78;
  long long v4 = xmmword_1EBFECD58;
  long long v5 = *(_OWORD *)&qword_1EBFECD68;
  uint64_t v6 = qword_1EBFECD78;
  id v0 = objc_allocWithZone((Class)_s27AutomaticResponseDataSourceCMa());
  sub_1E3CB0ABC((uint64_t)&v4);
  sub_1E3CB0ABC((uint64_t)&v5);
  sub_1E3CB0AE8((uint64_t)&v6);
  uint64_t result = sub_1E3CEF04C((uint64_t *)v2);
  qword_1EBFECDE0 = (uint64_t)result;
  return result;
}

uint64_t sub_1E3DA4158(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1E3E7E270();
  swift_bridgeObjectRetain();
  sub_1E3E7CE50();
  uint64_t v8 = sub_1E3E7E2B0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1E3E7E150() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1E3E7E150() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1E3DA6F24(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1E3DA4308(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  sub_1E3E7E270();
  swift_bridgeObjectRetain();
  sub_1E3E7A5E0();
  unint64_t v9 = sub_1E3E7E2B0() & ~(-1 << *(unsigned char *)(v8 + 32));
  uint64_t v10 = v8 + 56;
  if (((*(void *)(v8 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    uint64_t v36 = a3;
    unsigned int v37 = a4;
    goto LABEL_10;
  }
  uint64_t v33 = -1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = 24 * v9;
  uint64_t v12 = *(void *)(v8 + 48) + 24 * v9;
  id v13 = *(id *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  uint64_t v15 = a2;
  uint64_t v16 = *(unsigned __int8 *)(v12 + 16);
  sub_1E3C1161C(*(id *)v12, v14, *(unsigned char *)(v12 + 16));
  char v17 = MEMORY[0x1E4E73EF0](v13, v14, v16, v15, a3, a4);
  int v18 = a4;
  char v19 = v17;
  uint64_t v20 = v13;
  int v21 = v18;
  sub_1E3C1168C(v20, v14, v16);
  if ((v19 & 1) == 0)
  {
    uint64_t v36 = a3;
    unsigned int v37 = v21;
    unint64_t v9 = (v9 + 1) & ~v33;
    if ((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      a2 = v15;
      while (1)
      {
        uint64_t v11 = 24 * v9;
        uint64_t v22 = *(void *)(v8 + 48) + 24 * v9;
        id v23 = *(id *)v22;
        uint64_t v24 = *(void *)(v22 + 8);
        uint64_t v25 = *(unsigned __int8 *)(v22 + 16);
        sub_1E3C1161C(*(id *)v22, v24, *(unsigned char *)(v22 + 16));
        char v26 = MEMORY[0x1E4E73EF0](v23, v24, v25, a2, a3, v37);
        sub_1E3C1168C(v23, v24, v25);
        if (v26) {
          break;
        }
        unint64_t v9 = (v9 + 1) & ~v33;
        a2 = v15;
        if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_10;
        }
      }
      LOBYTE(v21) = v37;
      goto LABEL_12;
    }
    a2 = v15;
LABEL_10:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v34;
    *CFDataRef v34 = 0x8000000000000000;
    sub_1E3C1161C(a2, v36, v37);
    sub_1E3DA70C0((uint64_t)a2, v36, v37, v9, isUniquelyReferenced_nonNull_native);
    *CFDataRef v34 = v38;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = v36;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = v37;
    return result;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  sub_1E3C1168C(v15, a3, v21);
  uint64_t v29 = *(void *)(*v34 + 48) + v11;
  uint64_t v30 = *(void **)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  *(void *)a1 = *(void *)v29;
  *(void *)(a1 + 8) = v31;
  char v32 = *(unsigned char *)(v29 + 16);
  *(unsigned char *)(a1 + 16) = v32;
  sub_1E3C1161C(v30, v31, v32);
  return 0;
}

uint64_t sub_1E3DA45BC(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1E3E7E270();
  sub_1E3E7E280();
  uint64_t v6 = sub_1E3E7E2B0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1E3DA7324(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1E3DA46DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v7 = a4 & 1;
  uint64_t v8 = *v4;
  sub_1E3E7E270();
  swift_bridgeObjectRetain();
  sub_1E3E79BB0();
  unint64_t v9 = sub_1E3E7E2B0() & ~(-1 << *(unsigned char *)(v8 + 32));
  uint64_t v10 = v8 + 56;
  if (((*(void *)(v8 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    uint64_t v36 = a2;
    uint64_t v37 = a3;
    goto LABEL_9;
  }
  uint64_t v33 = -1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = 24 * v9;
  uint64_t v12 = *(void *)(v8 + 48) + 24 * v9;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  int v15 = v7;
  char v16 = *(unsigned char *)(v12 + 16);
  sub_1E3C30D14(*(void *)v12, v14, v16);
  char v17 = sub_1E3E79BA0();
  uint64_t v18 = a3;
  char v19 = v17;
  uint64_t v20 = v13;
  uint64_t v21 = v18;
  sub_1E3C30D24(v20, v14, v16);
  if ((v19 & 1) == 0)
  {
    uint64_t v36 = a2;
    uint64_t v37 = v21;
    unint64_t v9 = (v9 + 1) & ~v33;
    if ((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      while (1)
      {
        uint64_t v11 = 24 * v9;
        uint64_t v22 = *(void *)(v8 + 48) + 24 * v9;
        uint64_t v23 = *(void *)v22;
        uint64_t v24 = *(void *)(v22 + 8);
        char v25 = *(unsigned char *)(v22 + 16);
        sub_1E3C30D14(*(void *)v22, v24, v25);
        char v26 = sub_1E3E79BA0();
        sub_1E3C30D24(v23, v24, v25);
        if (v26) {
          break;
        }
        unint64_t v9 = (v9 + 1) & ~v33;
        int v7 = v15;
        if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_9;
        }
      }
      uint64_t v21 = v37;
      goto LABEL_11;
    }
    int v7 = v15;
LABEL_9:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v34;
    *CFDataRef v34 = 0x8000000000000000;
    sub_1E3C30D14(v36, v37, v7);
    sub_1E3DA7474(v36, v37, v7, v9, isUniquelyReferenced_nonNull_native);
    *CFDataRef v34 = v38;
    swift_bridgeObjectRelease();
    *(void *)a1 = v36;
    *(void *)(a1 + 8) = v37;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = v7 != 0;
    return result;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  sub_1E3C30D24(a2, v21, v15);
  uint64_t v29 = *(void *)(*v34 + 48) + v11;
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  char v32 = *(unsigned char *)(v29 + 16);
  *(void *)a1 = *(void *)v29;
  *(void *)(a1 + 8) = v31;
  *(unsigned char *)(a1 + 16) = v32;
  sub_1E3C30D14(v30, v31, v32);
  return 0;
}

uint64_t sub_1E3DA4988(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1E3E7C750();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1E3DAA344(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1E3E7CC20();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    char v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1E3DAA344((unint64_t *)&unk_1EBFE4910, MEMORY[0x1E4F71658]);
      char v21 = sub_1E3E7CCA0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1E3DA76F0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1E3DA4CAC(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1E3E7C6D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1E3DAA344(&qword_1EAE26728, MEMORY[0x1E4F71640]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1E3E7CC20();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    char v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1E3DAA344(&qword_1EAE29670, MEMORY[0x1E4F71640]);
      char v21 = sub_1E3E7CCA0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1E3DA79AC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1E3DA4FD0(void *a1, void *a2)
{
  return sub_1E3DA5104(a1, a2, (unint64_t *)&qword_1EBFDEE80, 0x1E4F28ED0, &qword_1EAE285A8);
}

uint64_t sub_1E3DA4FEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1E3E7E260();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1E3DA7C68(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1E3DA50E8(void *a1, void *a2)
{
  return sub_1E3DA5104(a1, a2, (unint64_t *)&qword_1EBFE4AD0, 0x1E4F1C118, &qword_1EAE285A0);
}

uint64_t sub_1E3DA5104(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = sub_1E3E7DD10();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_1E3C12B10(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1E3E7DD00();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v26 = sub_1E3DA53D0(v12, result + 1, a5, a3);
    uint64_t v37 = v26;
    unint64_t v27 = *(void *)(v26 + 16);
    if (*(void *)(v26 + 24) <= v27)
    {
      uint64_t v32 = v27 + 1;
      id v33 = v13;
      sub_1E3DA6C04(v32, a5);
      uint64_t v28 = v37;
    }
    else
    {
      uint64_t v28 = v26;
      id v29 = v13;
    }
    sub_1E3DA6EA0((uint64_t)v13, v28);
    *uint64_t v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1E3E7DA70();
    uint64_t v17 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v18 = v16 & ~v17;
    if ((*(void *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
    {
      sub_1E3C12B10(0, a3);
      id v19 = *(id *)(*(void *)(v11 + 48) + 8 * v18);
      char v20 = sub_1E3E7DA80();

      if (v20)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v24 = *(void **)(*(void *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        id v25 = v24;
        return 0;
      }
      uint64_t v21 = ~v17;
      while (1)
      {
        unint64_t v18 = (v18 + 1) & v21;
        if (((*(void *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          break;
        }
        id v22 = *(id *)(*(void *)(v11 + 48) + 8 * v18);
        char v23 = sub_1E3E7DA80();

        if (v23) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v31 = a2;
    sub_1E3DA7D8C((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_1E3DA53D0(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v6 = sub_1E3E7DD90();
    uint64_t v19 = v6;
    sub_1E3E7DCF0();
    if (sub_1E3E7DD20())
    {
      sub_1E3C12B10(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_1E3DA6C04(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        uint64_t result = sub_1E3E7DA70();
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_1E3E7DD20());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v6;
}

uint64_t sub_1E3DA55D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28598);
  uint64_t v3 = sub_1E3E7DD80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = sub_1E3E775E0();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1E3E7E270();
      sub_1E3E7CE50();
      uint64_t result = sub_1E3E7E2B0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1E3DA58B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE285B0);
  uint64_t v3 = sub_1E3E7DD80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = sub_1E3E775E0();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      char v22 = *(unsigned char *)(v19 + 16);
      sub_1E3E7E270();
      sub_1E3E7A5E0();
      uint64_t result = sub_1E3E7E2B0();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(unsigned char *)(v12 + 16) = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1E3DA5BC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0768);
  uint64_t result = sub_1E3E7DD80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_1E3E7E270();
      sub_1E3E7E280();
      uint64_t result = sub_1E3E7E2B0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1E3DA5E74()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28588);
  uint64_t v3 = sub_1E3E7DD80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = sub_1E3E775E0();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      char v22 = *(unsigned char *)(v19 + 16);
      sub_1E3E7E270();
      sub_1E3E79BB0();
      uint64_t result = sub_1E3E7E2B0();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(unsigned char *)(v12 + 16) = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1E3DA6188()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1E3E7C750();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B28);
  uint64_t v5 = sub_1E3E7DD80();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_1E3E775E0();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1E3DAA344(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
      uint64_t result = sub_1E3E7CC20();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_1E3DA6584()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1E3E7C6D0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26720);
  uint64_t v5 = sub_1E3E7DD80();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = sub_1E3E775E0();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1E3DAA344(&qword_1EAE26728, MEMORY[0x1E4F71640]);
      uint64_t result = sub_1E3E7CC20();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_1E3DA6980()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28590);
  uint64_t result = sub_1E3E7DD80();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1E3E7E260();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1E3DA6C04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1E3E7DD80();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = sub_1E3E775E0();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1E3E7DA70();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_1E3DA6EA0(uint64_t a1, uint64_t a2)
{
  sub_1E3E7DA70();
  unint64_t result = sub_1E3E7DCE0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1E3DA6F24(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1E3DA55D4();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1E3DA7F20();
      goto LABEL_22;
    }
    sub_1E3DA8C14();
  }
  uint64_t v11 = *v4;
  sub_1E3E7E270();
  sub_1E3E7CE50();
  unint64_t result = sub_1E3E7E2B0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_1E3E7E150(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_1E3E7E1F0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_1E3E7E150();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1E3DA70C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0) {
    goto LABEL_15;
  }
  if (a5)
  {
    sub_1E3DA58B4();
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1E3DA80D4();
      goto LABEL_16;
    }
    sub_1E3DA8EC4();
  }
  uint64_t v14 = *v5;
  sub_1E3E7E270();
  sub_1E3E7A5E0();
  uint64_t v15 = sub_1E3E7E2B0();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a4 = v15 & ~v16;
  uint64_t v17 = v14 + 56;
  if (((*(void *)(v14 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0)
  {
LABEL_15:
    uint64_t v12 = a1;
    uint64_t v13 = a2;
    goto LABEL_16;
  }
  uint64_t v38 = v14;
  uint64_t v18 = *(void *)(v14 + 48) + 24 * a4;
  id v19 = *(id *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v21 = *(unsigned __int8 *)(v18 + 16);
  sub_1E3C1161C(*(id *)v18, v20, *(unsigned char *)(v18 + 16));
  uint64_t v12 = a1;
  uint64_t v22 = a1;
  uint64_t v13 = a2;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  char v25 = MEMORY[0x1E4E73EF0](v19, v20, v21, v22, v23, a3);
  sub_1E3C1168C(v19, v20, v21);
  if (v25) {
    goto LABEL_20;
  }
  uint64_t v26 = ~v16;
  a4 = (a4 + 1) & v26;
  if ((*(void *)(v17 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    a3 = v24;
    while (1)
    {
      uint64_t v27 = *(void *)(v38 + 48) + 24 * a4;
      id v28 = *(id *)v27;
      uint64_t v29 = *(void *)(v27 + 8);
      uint64_t v30 = *(unsigned __int8 *)(v27 + 16);
      sub_1E3C1161C(*(id *)v27, v29, *(unsigned char *)(v27 + 16));
      char v31 = MEMORY[0x1E4E73EF0](v28, v29, v30, v12, v13, a3);
      sub_1E3C1168C(v28, v29, v30);
      if (v31) {
        goto LABEL_20;
      }
      a4 = (a4 + 1) & v26;
      a3 = v24;
      if (((*(void *)(v17 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0) {
        goto LABEL_16;
      }
    }
  }
  LOBYTE(a3) = v24;
LABEL_16:
  uint64_t v32 = *v37;
  *(void *)(*v37 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v33 = *(void *)(v32 + 48) + 24 * a4;
  *(void *)uint64_t v33 = v12;
  *(void *)(v33 + 8) = v13;
  *(unsigned char *)(v33 + 16) = a3;
  uint64_t v34 = *(void *)(v32 + 16);
  BOOL v35 = __OFADD__(v34, 1);
  uint64_t v36 = v34 + 1;
  if (!v35)
  {
    *(void *)(v32 + 16) = v36;
    return;
  }
  __break(1u);
LABEL_20:
  sub_1E3E7E1F0();
  __break(1u);
}

uint64_t sub_1E3DA7324(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1E3DA5BC8();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1E3DA8294();
      goto LABEL_14;
    }
    sub_1E3DA91A8();
  }
  uint64_t v8 = *v3;
  sub_1E3E7E270();
  sub_1E3E7E280();
  unint64_t result = sub_1E3E7E2B0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      unint64_t result = sub_1E3E7E1F0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1E3DA7474(uint64_t result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  uint64_t v8 = result;
  int v9 = a3 & 1;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
  {
    uint64_t v12 = result;
  }
  else
  {
    if (a5)
    {
      sub_1E3DA5E74();
    }
    else
    {
      if (v11 > v10)
      {
        uint64_t v12 = result;
        unint64_t result = (uint64_t)sub_1E3DA8428();
        goto LABEL_17;
      }
      sub_1E3DA9424();
    }
    uint64_t v13 = *v5;
    sub_1E3E7E270();
    sub_1E3E79BB0();
    unint64_t result = sub_1E3E7E2B0();
    a4 = result & ~(-1 << *(unsigned char *)(v13 + 32));
    uint64_t v14 = v13 + 56;
    if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
      uint64_t v33 = v13;
      uint64_t v15 = *(void *)(v13 + 48) + 24 * a4;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      char v18 = *(unsigned char *)(v15 + 16);
      sub_1E3C30D14(*(void *)v15, v17, v18);
      uint64_t v12 = v8;
      uint64_t v19 = a2;
      char v20 = sub_1E3E79BA0();
      unint64_t result = sub_1E3C30D24(v16, v17, v18);
      if (v20) {
        goto LABEL_20;
      }
      a4 = (a4 + 1) & ~v31;
      if ((*(void *)(v14 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
      {
        while (1)
        {
          uint64_t v21 = *(void *)(v33 + 48) + 24 * a4;
          uint64_t v22 = *(void *)v21;
          uint64_t v23 = *(void *)(v21 + 8);
          char v24 = *(unsigned char *)(v21 + 16);
          sub_1E3C30D14(*(void *)v21, v23, v24);
          char v25 = sub_1E3E79BA0();
          unint64_t result = sub_1E3C30D24(v22, v23, v24);
          if (v25) {
            goto LABEL_20;
          }
          a4 = (a4 + 1) & ~v31;
          a2 = v19;
          if (((*(void *)(v14 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0) {
            goto LABEL_17;
          }
        }
      }
      a2 = v19;
    }
    else
    {
      uint64_t v12 = v8;
    }
  }
LABEL_17:
  uint64_t v26 = *v32;
  *(void *)(*v32 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v27 = *(void *)(v26 + 48) + 24 * a4;
  *(void *)uint64_t v27 = v12;
  *(void *)(v27 + 8) = a2;
  *(unsigned char *)(v27 + 16) = v9 != 0;
  uint64_t v28 = *(void *)(v26 + 16);
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (!v29)
  {
    *(void *)(v26 + 16) = v30;
    return result;
  }
  __break(1u);
LABEL_20:
  unint64_t result = sub_1E3E7E1F0();
  __break(1u);
  return result;
}

uint64_t sub_1E3DA76F0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1E3E7C750();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  BOOL v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1E3DA6188();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1E3DA8628(MEMORY[0x1E4F71658], &qword_1EBFE4B28);
      goto LABEL_12;
    }
    sub_1E3DA9708();
  }
  uint64_t v13 = *v3;
  sub_1E3DAA344(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
  uint64_t v14 = sub_1E3E7CC20();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    char v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    char v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1E3DAA344((unint64_t *)&unk_1EBFE4910, MEMORY[0x1E4F71658]);
      char v22 = sub_1E3E7CCA0();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1E3E7E1F0();
  __break(1u);
  return result;
}

uint64_t sub_1E3DA79AC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1E3E7C6D0();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  BOOL v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1E3DA6584();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1E3DA8628(MEMORY[0x1E4F71640], &qword_1EAE26720);
      goto LABEL_12;
    }
    sub_1E3DA9AB8();
  }
  uint64_t v13 = *v3;
  sub_1E3DAA344(&qword_1EAE26728, MEMORY[0x1E4F71640]);
  uint64_t v14 = sub_1E3E7CC20();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    char v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    char v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1E3DAA344(&qword_1EAE29670, MEMORY[0x1E4F71640]);
      char v22 = sub_1E3E7CCA0();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1E3E7E1F0();
  __break(1u);
  return result;
}

uint64_t sub_1E3DA7C68(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1E3DA6980();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1E3DA88D8();
      goto LABEL_14;
    }
    sub_1E3DA9E68();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1E3E7E260();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1E3E7E1F0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_1E3DA7D8C(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_1E3DA6C04(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1E3DA8A70(a4);
      goto LABEL_14;
    }
    sub_1E3DAA0CC(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_1E3E7DA70();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1E3C12B10(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_1E3E7DA80();

    if (v16)
    {
LABEL_13:
      sub_1E3E7E1F0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_1E3E7DA80();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

void *sub_1E3DA7F20()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28598);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E3E7DD70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    char v19 = (void *)(*(void *)(v4 + 48) + v16);
    *char v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1E3DA80D4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE285B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E3E7DD70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    char v21 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v20 = *(void *)v17;
    *(void *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 16) = v21;
    uint64_t result = sub_1E3C1161C(v18, v19, v21);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1E3DA8294()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0768);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E3E7DD70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1E3DA8428()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28588);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E3E7DD70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = *(void *)v17;
    *(void *)(v21 + 8) = v19;
    *(unsigned char *)(v21 + 16) = v20;
    uint64_t result = (void *)sub_1E3C30D14(v18, v19, v20);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1E3DA85E8()
{
  return sub_1E3DA8628(MEMORY[0x1E4F71658], &qword_1EBFE4B28);
}

void *sub_1E3DA8608()
{
  return sub_1E3DA8628(MEMORY[0x1E4F71640], &qword_1EAE26720);
}

void *sub_1E3DA8628(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1E3E7DD70();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  BOOL v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1E3DA88D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28590);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E3E7DD70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1E3DA8A70(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1E3E7DD70();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1E3DA8C14()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28598);
  uint64_t v3 = sub_1E3E7DD80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = sub_1E3E775E0();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1E3E7E270();
    swift_bridgeObjectRetain();
    sub_1E3E7CE50();
    uint64_t result = sub_1E3E7E2B0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3DA8EC4()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE285B0);
  uint64_t v2 = sub_1E3E7DD80();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v28 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = sub_1E3E775E0();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v9);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v1 + 48) + 24 * v13;
    int64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    sub_1E3E7E270();
    sub_1E3C1161C(v18, v19, v20);
    sub_1E3E7A5E0();
    uint64_t result = sub_1E3E7E2B0();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v3 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 16) = v20;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3DA91A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0768);
  uint64_t result = sub_1E3E7DD80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1E3E7E270();
    sub_1E3E7E280();
    uint64_t result = sub_1E3E7E2B0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3DA9424()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28588);
  uint64_t v2 = sub_1E3E7DD80();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v28 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = sub_1E3E775E0();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v9);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v1 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    sub_1E3E7E270();
    sub_1E3C30D14(v18, v19, v20);
    sub_1E3E79BB0();
    uint64_t result = sub_1E3E7E2B0();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v3 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 16) = v20;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3DA9708()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E7C750();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B28);
  uint64_t v7 = sub_1E3E7DD80();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_1E3E775E0();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1E3DAA344(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
    uint64_t result = sub_1E3E7CC20();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3DA9AB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E7C6D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26720);
  uint64_t v7 = sub_1E3E7DD80();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = sub_1E3E775E0();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1E3DAA344(&qword_1EAE26728, MEMORY[0x1E4F71640]);
    uint64_t result = sub_1E3E7CC20();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3DA9E68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28590);
  uint64_t result = sub_1E3E7DD80();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1E3E7E260();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3DAA0CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1E3E7DD80();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  char v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = sub_1E3E775E0();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_1E3E7DA70();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1E3DAA344(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s13ConfigurationV12PlayerOptionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3DAA458);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ConfigurationV12PlayerOptionOMa()
{
  return &_s13ConfigurationV12PlayerOptionON;
}

unint64_t sub_1E3DAA494()
{
  unint64_t result = qword_1EAE285B8;
  if (!qword_1EAE285B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE285C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE285B8);
  }
  return result;
}

unint64_t sub_1E3DAA4F4()
{
  unint64_t result = qword_1EBFE1260;
  if (!qword_1EBFE1260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE1260);
  }
  return result;
}

uint64_t BaseObjectGraph.satisfying<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 - 8);
  double v9 = MEMORY[0x1F4188790](a1);
  int64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v4;
  uint64_t v14 = v13;
  v15(v12, v9);
  if (!v5)
  {
    uint64_t v14 = BaseObjectGraph.satisfying<A>(_:with:)(a1, (uint64_t)v11, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a4);
  }
  return v14;
}

uint64_t BaseObjectGraph.withName(_:)()
{
  sub_1E3E7BE80();
  sub_1E3E775E0();
  uint64_t v0 = sub_1E3E7BE90();
  swift_bridgeObjectRetain();
  sub_1E3E7BE30();
  return v0;
}

uint64_t BaseObjectGraph.satisfying<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7BA50();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, a2, a3, v10);
  sub_1E3E7BA40();
  uint64_t v13 = sub_1E3E7BE50();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return v13;
}

uint64_t BaseObjectGraph.satisfyingIfPresent<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1E3E7DB90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  double v10 = (char *)&v17 - v9;
  uint64_t v11 = *(void *)(a3 - 8);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v10, a2, v7, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1E3E775E0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v10, a3);
    uint64_t v3 = BaseObjectGraph.satisfying<A>(_:with:)(a1, (uint64_t)v15, a3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, a3);
  }
  return v3;
}

uint64_t BaseObjectGraph.satisfyingIfPresent<A>(_:with:)(uint64_t a1, void (*a2)(uint64_t, double), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = sub_1E3E7DB90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = *(void *)(a4 - 8);
  double v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v4, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1E3E775E0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, a4);
    uint64_t v5 = BaseObjectGraph.satisfying<A>(_:with:)(a1, (uint64_t)v17, a4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, a4);
  }
  return v5;
}

uint64_t BaseObjectGraph.satisfying<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E775E0();
  sub_1E3E7BA60();
  uint64_t v7 = BaseObjectGraph.satisfying<A>(_:with:)(a1, (uint64_t)v6, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
  return v7;
}

uint64_t BaseObjectGraph.chainingIntentDispatcher(dispatcher:)(void (*a1)(uint64_t, double))
{
  uint64_t v2 = sub_1E3E7BA50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1E3E775E0();
  uint64_t v6 = sub_1E3E775E0();
  sub_1E3DAAE60(v6, a1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  sub_1E3C1B2BC((uint64_t)v11, (uint64_t)v10);
  sub_1E3E7BA40();
  uint64_t v7 = sub_1E3E7BE50();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1E3DAAE60@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, double)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1E3E7C510();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  double v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v18[-v12 - 8];
  a2(a1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  sub_1E3E7BE00();
  if (v20)
  {
    sub_1E3C1B644(&v19, (uint64_t)v21);
    sub_1E3C1B2BC((uint64_t)v21, (uint64_t)&v19);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
    sub_1E3DAB134((uint64_t)&v19, (uint64_t)v18);
    sub_1E3E7C4F0();
    sub_1E3DAB0D4((uint64_t)&v19);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
  }
  else
  {
    sub_1E3DAB0D4((uint64_t)&v19);
  }
  uint64_t v14 = MEMORY[0x1E4F714F0];
  a3[3] = v6;
  a3[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v13, v6);
}

uint64_t BaseObjectGraph.conditionalIf(_:do:else:)(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (a1) {
    return a2(v4);
  }
  else {
    return a4(v4);
  }
}

uint64_t BaseObjectGraph.map(_:)(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

uint64_t sub_1E3DAB0D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0648);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3DAB134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3DAB19C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for GlobalSettingsDeepLinkState(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  v7[15] = 0;
  sub_1E3E7AAB0();
  uint64_t result = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v1 + 32))(v5, v3, v0);
  qword_1EAE285C8 = v4;
  return result;
}

uint64_t static GlobalSettingsDeepLinkStateEnvironmentKey.defaultValue.getter()
{
  if (qword_1EAE244E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_1E3E775E0();
}

uint64_t static GlobalSettingsDeepLinkStateEnvironmentKey.defaultValue.setter(uint64_t a1)
{
  if (qword_1EAE244E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EAE285C8 = a1;
  return swift_release();
}

uint64_t (*static GlobalSettingsDeepLinkStateEnvironmentKey.defaultValue.modify())()
{
  if (qword_1EAE244E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1E3DAB42C@<X0>(void *a1@<X8>)
{
  if (qword_1EAE244E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_1EAE285C8;
  return sub_1E3E775E0();
}

uint64_t EnvironmentValues.settingsDeepLinkState.getter()
{
  sub_1E3DAB4EC();
  sub_1E3E7B090();
  return v1;
}

unint64_t sub_1E3DAB4EC()
{
  unint64_t result = qword_1EAE285D0;
  if (!qword_1EAE285D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE285D0);
  }
  return result;
}

uint64_t sub_1E3DAB540()
{
  return sub_1E3E7B0A0();
}

uint64_t EnvironmentValues.settingsDeepLinkState.setter()
{
  return sub_1E3E7B0A0();
}

uint64_t (*EnvironmentValues.settingsDeepLinkState.modify(uint64_t a1))(void *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_1E3DAB4EC();
  sub_1E3E7B090();
  return sub_1E3DAB63C;
}

uint64_t sub_1E3DAB63C(void *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0) {
    return sub_1E3E7B0A0();
  }
  sub_1E3E775E0();
  sub_1E3E7B0A0();

  return swift_release();
}

uint64_t sub_1E3DAB6D0@<X0>(void *a1@<X8>)
{
  sub_1E3DAB4EC();
  uint64_t result = sub_1E3E7B090();
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for GlobalSettingsDeepLinkStateEnvironmentKey()
{
  return &type metadata for GlobalSettingsDeepLinkStateEnvironmentKey;
}

uint64_t NowPlayingAlignmentCoordinator.fetchPlayerTimestamp(for:)(double a1)
{
  *(void *)(v2 + 400) = v1;
  *(double *)(v2 + 392) = a1;
  return MEMORY[0x1F4188298](sub_1E3DAB758, 0, 0);
}

uint64_t sub_1E3DAB758()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 176))
  {
    sub_1E3C1B2BC(v0 + 152, v0 + 352);
    sub_1E3C10CE0(v0 + 152, &qword_1EBFE0330);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 352), *(void *)(v0 + 376));
    uint64_t v1 = sub_1E3E795A0();
    char v3 = v2;
    __swift_destroy_boxed_opaque_existential_0(v0 + 352);
    if ((v3 & 1) == 0)
    {
      v4.n128_u64[0] = v1;
      uint64_t v5 = *(uint64_t (**)(__n128))(v0 + 8);
LABEL_10:
      return v5(v4);
    }
  }
  else
  {
    sub_1E3C10CE0(v0 + 152, &qword_1EBFE0330);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  if (!*(void *)(v0 + 136))
  {
    sub_1E3C10CE0(v0 + 112, &qword_1EBFE0308);
    uint64_t v8 = sub_1E3E79FE0();
    sub_1E3DB3C60(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, *MEMORY[0x1E4F91C38], v8);
    swift_willThrow();
    goto LABEL_9;
  }
  sub_1E3C1B644((long long *)(v0 + 112), v0 + 72);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 64) == 2)
  {
    uint64_t v6 = sub_1E3E79FE0();
    sub_1E3DB3C60(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, *MEMORY[0x1E4F91C40], v6);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0(v0 + 72);
LABEL_9:
    uint64_t v5 = *(uint64_t (**)(__n128))(v0 + 8);
    goto LABEL_10;
  }
  double v11 = *(double *)(v0 + 40);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  sub_1E3C34078(v0 + 192, v0 + 232, &qword_1EBFE0310);
  if (*(void *)(v0 + 256))
  {
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 232), *(void *)(v0 + 256));
    sub_1E3E79130();
    __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  }
  else
  {
    sub_1E3C10CE0(v0 + 232, &qword_1EBFE0310);
  }
  uint64_t v12 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 104);
  uint64_t v14 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 72), v12);
  if (v11 < 0.0)
  {
    __break(1u);
  }
  else
  {
    long long v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v19;
    *long long v19 = v0;
    v19[1] = sub_1E3DABC0C;
    v16.n128_u64[0] = *(void *)(v0 + 392);
    v17.n128_u64[0] = 0;
    v18.n128_f64[0] = v11;
    uint64_t v14 = (void *)v12;
    uint64_t v15 = v13;
  }
  return MEMORY[0x1F4144D50](v14, v15, v16, v17, v18);
}

uint64_t sub_1E3DABC0C(double a1)
{
  uint64_t v3 = *v2;
  *(double *)(v3 + 416) = a1;
  *(void *)(v3 + 424) = v1;
  swift_task_dealloc();
  if (v1) {
    __n128 v4 = sub_1E3DABE10;
  }
  else {
    __n128 v4 = sub_1E3DABD24;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3DABD24()
{
  sub_1E3C34078((uint64_t)(v0 + 24), (uint64_t)(v0 + 39), &qword_1EBFE0310);
  if (v0[42])
  {
    __swift_project_boxed_opaque_existential_1(v0 + 39, v0[42]);
    sub_1E3E79140();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 39));
  }
  else
  {
    sub_1E3C10CE0((uint64_t)(v0 + 39), &qword_1EBFE0310);
  }
  sub_1E3C10CE0((uint64_t)(v0 + 24), &qword_1EBFE0310);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 9));
  v1.n128_u64[0] = v0[52];
  char v2 = (uint64_t (*)(__n128))v0[1];
  return v2(v1);
}

uint64_t sub_1E3DABE10()
{
  sub_1E3C34078((uint64_t)(v0 + 24), (uint64_t)(v0 + 34), &qword_1EBFE0310);
  if (v0[37])
  {
    __swift_project_boxed_opaque_existential_1(v0 + 34, v0[37]);
    sub_1E3E79140();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 34));
  }
  else
  {
    sub_1E3C10CE0((uint64_t)(v0 + 34), &qword_1EBFE0310);
  }
  sub_1E3C10CE0((uint64_t)(v0 + 24), &qword_1EBFE0310);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 9));
  __n128 v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t NowPlayingAlignmentCoordinator.fullTimelineAligner.getter()
{
  return sub_1E3DAC200();
}

double sub_1E3DABF0C@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_1E3DABF9C()
{
  return sub_1E3E7AB00();
}

uint64_t sub_1E3DAC03C(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3C34078(a1, (uint64_t)v3, &qword_1EBFE0310);
  sub_1E3E775E0();
  sub_1E3E7AB00();
  sub_1E3C34078((uint64_t)v5, (uint64_t)v3, &qword_1EBFE0310);
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1E3E79120();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)v3, &qword_1EBFE0310);
  }
  sub_1E3C10CE0(a1, &qword_1EBFE0310);
  return sub_1E3C10CE0((uint64_t)v5, &qword_1EBFE0310);
}

uint64_t NowPlayingAlignmentCoordinator.$fullTimelineAligner.getter()
{
  return sub_1E3C91AD0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner, &qword_1EBFE05F0);
}

uint64_t NowPlayingAlignmentCoordinator.scoutingAligner.getter()
{
  return sub_1E3DAC200();
}

uint64_t sub_1E3DAC1A8()
{
  return sub_1E3C94BE0();
}

uint64_t sub_1E3DAC1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3DAC2A4(a1, a2, a3, a4, &qword_1EBFE0308);
}

uint64_t NowPlayingAlignmentCoordinator.$scoutingAligner.getter()
{
  return sub_1E3C91AD0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner, &qword_1EBFE05E0);
}

uint64_t NowPlayingAlignmentCoordinator.alignment.getter()
{
  return sub_1E3DAC200();
}

uint64_t sub_1E3DAC200()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();

  return swift_release();
}

uint64_t sub_1E3DAC270()
{
  return sub_1E3C94BE0();
}

uint64_t sub_1E3DAC288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3DAC2A4(a1, a2, a3, a4, &qword_1EBFE0330);
}

uint64_t sub_1E3DAC2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_1E3C34078(a1, (uint64_t)v8, a5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3C34078((uint64_t)v8, (uint64_t)&v7, a5);
  sub_1E3E775E0();
  sub_1E3E7AB00();
  return sub_1E3C10CE0((uint64_t)v8, a5);
}

uint64_t NowPlayingAlignmentCoordinator.$alignment.getter()
{
  return sub_1E3C91AD0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment, &qword_1EBFE0610);
}

uint64_t NowPlayingAlignmentCoordinator.transcriptModel.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();

  return swift_release();
}

uint64_t sub_1E3DAC3E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();

  return swift_release();
}

uint64_t sub_1E3DAC468(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C34078(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_1EBFE0318);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3C34078((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EBFE0318);
  sub_1E3E775E0();
  sub_1E3E7AB00();
  return sub_1E3C10CE0((uint64_t)v7, (uint64_t *)&unk_1EBFE0318);
}

uint64_t NowPlayingAlignmentCoordinator.$transcriptModel.getter()
{
  return sub_1E3C91AD0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel, &qword_1EBFE0600);
}

uint64_t NowPlayingAlignmentCoordinator.error.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1E3DAC604@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DAC688(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  sub_1E3E775E0();
  return sub_1E3E7AB00();
}

uint64_t NowPlayingAlignmentCoordinator.$error.getter()
{
  return sub_1E3C91AD0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error, &qword_1EBFE0630);
}

uint64_t sub_1E3DAC71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x1F4188790](v13);
  __n128 v16 = (char *)&v19 - v15;
  __n128 v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v17((char *)&v19 - v15, a1, v9, v14);
  ((void (*)(char *, char *, uint64_t))v17)(v12, v16, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1E3E7AAD0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t NowPlayingAlignmentCoordinator.__allocating_init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  NowPlayingAlignmentCoordinator.init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t NowPlayingAlignmentCoordinator.init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v59 = a6;
  uint64_t v60 = a7;
  uint64_t v58 = a5;
  uint64_t v57 = a4;
  uint64_t v56 = a3;
  uint64_t v55 = a2;
  uint64_t v54 = a1;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0630);
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  unint64_t v51 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0600);
  uint64_t v65 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
  MEMORY[0x1F4188790](v64);
  uint64_t v61 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v44 = (char *)&v43 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0610);
  uint64_t v62 = *(void *)(v14 - 8);
  uint64_t v63 = v14;
  MEMORY[0x1F4188790](v14);
  __n128 v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05E0);
  uint64_t v45 = v17;
  uint64_t v46 = *(void *)(v17 - 8);
  uint64_t v18 = v46;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05F0);
  uint64_t v43 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  unint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner;
  uint64_t v70 = 0;
  long long v68 = 0u;
  long long v69 = 0u;
  sub_1E3C34078((uint64_t)&v68, (uint64_t)v67, &qword_1EBFE0310);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0310);
  sub_1E3E7AAB0();
  sub_1E3C10CE0((uint64_t)&v68, &qword_1EBFE0310);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v24, v21);
  uint64_t v26 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner;
  uint64_t v70 = 0;
  long long v68 = 0u;
  long long v69 = 0u;
  sub_1E3C34078((uint64_t)&v68, (uint64_t)v67, &qword_1EBFE0308);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0308);
  sub_1E3E7AAB0();
  sub_1E3C10CE0((uint64_t)&v68, &qword_1EBFE0308);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v26, v20, v17);
  uint64_t v27 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment;
  uint64_t v70 = 0;
  long long v68 = 0u;
  long long v69 = 0u;
  sub_1E3C34078((uint64_t)&v68, (uint64_t)v67, &qword_1EBFE0330);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0330);
  sub_1E3E7AAB0();
  sub_1E3C10CE0((uint64_t)&v68, &qword_1EBFE0330);
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v27, v16, v63);
  uint64_t v28 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel;
  uint64_t v29 = sub_1E3E792A0();
  uint64_t v30 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v44, 1, 1, v29);
  sub_1E3C34078(v30, v61, (uint64_t *)&unk_1EBFE0318);
  BOOL v31 = v50;
  sub_1E3E7AAB0();
  sub_1E3C10CE0(v30, (uint64_t *)&unk_1EBFE0318);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v28, v31, v66);
  uint64_t v32 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error;
  *(void *)&long long v68 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE07D8);
  uint64_t v33 = v51;
  sub_1E3E7AAB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v32, v33, v53);
  uint64_t v34 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url;
  uint64_t v35 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  *(void *)(v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_timelineAlignerProvider) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_subscriptions) = MEMORY[0x1E4FBC870];
  uint64_t v36 = v54;
  sub_1E3C34078(v54, (uint64_t)&v68, &qword_1EBFE0310);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v25, v43);
  sub_1E3C34078((uint64_t)&v68, (uint64_t)v67, &qword_1EBFE0310);
  sub_1E3E7AAB0();
  sub_1E3C10CE0((uint64_t)&v68, &qword_1EBFE0310);
  swift_endAccess();
  uint64_t v37 = v55;
  sub_1E3C34078(v55, (uint64_t)&v68, &qword_1EBFE0308);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v26, v45);
  sub_1E3C34078((uint64_t)&v68, (uint64_t)v67, &qword_1EBFE0308);
  sub_1E3E7AAB0();
  sub_1E3C10CE0((uint64_t)&v68, &qword_1EBFE0308);
  swift_endAccess();
  uint64_t v38 = v56;
  sub_1E3C34078(v56, (uint64_t)&v68, &qword_1EBFE0330);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v27, v63);
  sub_1E3C34078((uint64_t)&v68, (uint64_t)v67, &qword_1EBFE0330);
  sub_1E3E7AAB0();
  sub_1E3C10CE0((uint64_t)&v68, &qword_1EBFE0330);
  swift_endAccess();
  uint64_t v39 = v57;
  sub_1E3C34078(v57, v30, (uint64_t *)&unk_1EBFE0318);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v28, v66);
  sub_1E3C34078(v30, v61, (uint64_t *)&unk_1EBFE0318);
  sub_1E3E7AAB0();
  sub_1E3C10CE0(v30, (uint64_t *)&unk_1EBFE0318);
  swift_endAccess();
  sub_1E3C10CE0(v39, (uint64_t *)&unk_1EBFE0318);
  sub_1E3C10CE0(v38, &qword_1EBFE0330);
  sub_1E3C10CE0(v37, &qword_1EBFE0308);
  sub_1E3C10CE0(v36, &qword_1EBFE0310);
  sub_1E3C1B644(v58, v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider);
  uint64_t v40 = v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_alignmentCache;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE02E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v40, v59, v41);
  *(void *)(v7 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_playbackController) = v60;
  return v7;
}

Swift::Void __swiftcall NowPlayingAlignmentCoordinator.clear()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v16[-v8 - 8];
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1E3E7DFC0()) {
    unint64_t v10 = sub_1E3CA2DC0(MEMORY[0x1E4FBC860]);
  }
  else {
    unint64_t v10 = MEMORY[0x1E4FBC870];
  }
  uint64_t v11 = (unint64_t *)(v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_subscriptions);
  swift_beginAccess();
  *uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_timelineAlignerProvider) = 0;
  swift_release();
  uint64_t v19 = 0;
  long long v17 = 0u;
  long long v18 = 0u;
  sub_1E3DAC03C((uint64_t)&v17);
  uint64_t v19 = 0;
  long long v17 = 0u;
  long long v18 = 0u;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3C34078((uint64_t)&v17, (uint64_t)v16, &qword_1EBFE0308);
  sub_1E3E775E0();
  sub_1E3E7AB00();
  sub_1E3C10CE0((uint64_t)&v17, &qword_1EBFE0308);
  uint64_t v19 = 0;
  long long v17 = 0u;
  long long v18 = 0u;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3C34078((uint64_t)&v17, (uint64_t)v16, &qword_1EBFE0330);
  sub_1E3E775E0();
  sub_1E3E7AB00();
  sub_1E3C10CE0((uint64_t)&v17, &qword_1EBFE0330);
  uint64_t v12 = sub_1E3E792A0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3C34078((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1EBFE0318);
  sub_1E3E775E0();
  sub_1E3E7AB00();
  sub_1E3C10CE0((uint64_t)v9, (uint64_t *)&unk_1EBFE0318);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v17 = 0;
  sub_1E3E775E0();
  sub_1E3E7AB00();
  uint64_t v13 = sub_1E3E77D00();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url;
  swift_beginAccess();
  sub_1E3DAD5FC((uint64_t)v3, v14);
  swift_endAccess();
}

uint64_t sub_1E3DAD5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NowPlayingAlignmentCoordinator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0610);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  sub_1E3C10CE0(v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url, &qword_1EBFE6070);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider);
  uint64_t v11 = v0 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_alignmentCache;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE02E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NowPlayingAlignmentCoordinator.__deallocating_deinit()
{
  NowPlayingAlignmentCoordinator.deinit();

  return swift_deallocClassInstance();
}

uint64_t NowPlayingAlignmentCoordinator.align(_:)(uint64_t a1)
{
  uint64_t v72 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v1 - 8);
  long long v69 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE285E0);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v55 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE285E8);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v56 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE285F0);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v61 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE285F8);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v64 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28600);
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1E3E78B00();
  uint64_t v9 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E79920();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0338);
  MEMORY[0x1F4188790](v16 - 8);
  long long v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1E3E795E0();
  uint64_t v70 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1E3E783D0();
  if (result)
  {
    uint64_t v53 = v8;
    uint64_t v54 = v21;
    NowPlayingAlignmentCoordinator.clear()();
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F91AF0], v12);
    uint64_t v23 = v71;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F91700], v71);
    sub_1E3E79FC0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v24 = v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v18, 1, v19) == 1)
    {
      sub_1E3C10CE0((uint64_t)v18, &qword_1EBFE0338);
      uint64_t v25 = sub_1E3E79FE0();
      sub_1E3DB3C60(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F91C50], v25);
      return swift_willThrow();
    }
    else
    {
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      uint64_t v71 = v19;
      v27(v54, v18, v19);
      __swift_project_boxed_opaque_existential_1((void *)(v73 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider), *(void *)(v73 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider + 24));
      v74[0] = (id)sub_1E3E796D0();
      swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE264F8);
      sub_1E3C10DE8(&qword_1EAE26500, &qword_1EAE264F8);
      uint64_t v28 = v55;
      sub_1E3E7AB90();
      swift_release();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
      sub_1E3C10DE8(&qword_1EAE28608, &qword_1EAE285E0);
      uint64_t v29 = v56;
      uint64_t v30 = v58;
      sub_1E3E7AB80();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v30);
      sub_1E3C10DE8(&qword_1EAE28610, &qword_1EAE285E8);
      BOOL v31 = v61;
      uint64_t v32 = v60;
      sub_1E3E7ACA0();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v29, v32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28618);
      sub_1E3C10DE8(&qword_1EAE28620, &qword_1EAE285F0);
      sub_1E3C10DE8(&qword_1EAE28628, &qword_1EAE28618);
      uint64_t v33 = v64;
      uint64_t v34 = v63;
      sub_1E3E7AC40();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v34);
      sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
      v74[0] = (id)sub_1E3E7D6A0();
      uint64_t v35 = sub_1E3E7D640();
      uint64_t v36 = (uint64_t)v69;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v69, 1, 1, v35);
      sub_1E3C10DE8(&qword_1EAE28630, &qword_1EAE285F8);
      sub_1E3C32D34();
      uint64_t v37 = v53;
      uint64_t v38 = v66;
      sub_1E3E7AD10();
      sub_1E3C10CE0(v36, (uint64_t *)&unk_1EBFE27A0);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v38);
      swift_allocObject();
      swift_weakInit();
      sub_1E3C10DE8(&qword_1EAE28638, &qword_1EAE28600);
      uint64_t v39 = v68;
      sub_1E3E7AD60();
      swift_release();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v39);
      swift_beginAccess();
      sub_1E3E7A950();
      swift_endAccess();
      swift_release();
      if (sub_1E3E79FB0())
      {
        uint64_t v40 = v54;
        uint64_t v41 = v71;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1E3E7AAF0();
        swift_release();
        swift_release();
        uint64_t v42 = v78;
        double v43 = 0.0;
        if (v78 != 2)
        {
          id v44 = v74[0];
          double v45 = *(double *)&v75;
          double v46 = v76;
          float v47 = *(float *)&v77;
          sub_1E3E77D90();
          double v49 = v46 + (v48 - *(double *)&v44) * v47;
          if (v49 >= v45) {
            double v49 = v45;
          }
          double v43 = fmax(v49, 0.0);
        }
        v74[0] = (id)sub_1E3CCBCB0();
        uint64_t v50 = swift_allocObject();
        swift_weakInit();
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = v50;
        *(double *)(v51 + 24) = v43;
        *(unsigned char *)(v51 + 32) = v42 == 2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28640);
        sub_1E3C10DE8(&qword_1EAE28648, &qword_1EAE28640);
        sub_1E3E7AD60();
        swift_release();
        swift_release();
        swift_beginAccess();
        sub_1E3E7A950();
        swift_endAccess();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v40, v41);
      }
      else
      {
        *(double *)&uint64_t v75 = COERCE_DOUBLE(sub_1E3E79C80());
        double v76 = MEMORY[0x1E4F91BA8];
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)v74);
        sub_1E3E79C70();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1E3C34078((uint64_t)v74, (uint64_t)v79, &qword_1EBFE0330);
        sub_1E3E775E0();
        sub_1E3E7AB00();
        sub_1E3C10CE0((uint64_t)v74, &qword_1EBFE0330);
        return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v54, v71);
      }
    }
  }
  return result;
}

uint64_t sub_1E3DAE6B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E79000();
  uint64_t v6 = sub_1E3E792A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    uint64_t v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v8, 1, v2);
}

uint64_t sub_1E3DAE848(unint64_t *a1, uint64_t a2, unint64_t a3, int a4)
{
  LODWORD(v4) = a4;
  uint64_t v27 = sub_1E3E79ED0();
  uint64_t v7 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v12 = result;
    if (v10 >> 62) {
      goto LABEL_19;
    }
    uint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      if (!v13)
      {
LABEL_15:
        v29[3] = sub_1E3E79EF0();
        v29[4] = MEMORY[0x1E4F91C00];
        __swift_allocate_boxed_opaque_existential_1(v29);
        sub_1E3E79EE0();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1E3C34078((uint64_t)v29, (uint64_t)v28, &qword_1EBFE0330);
        sub_1E3E775E0();
        sub_1E3E7AB00();
        sub_1E3C10CE0((uint64_t)v29, &qword_1EBFE0330);
        return swift_release();
      }
      v29[0] = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1E3CC7838(0, v13 & ~(v13 >> 63), 0);
      if (v13 < 0) {
        break;
      }
      v24[1] = v4;
      unint64_t v25 = a3;
      unint64_t v26 = v12;
      uint64_t v14 = 0;
      uint64_t v15 = v29[0];
      unint64_t v12 = v10 & 0xC000000000000001;
      while (1)
      {
        id v16 = v12 ? (id)MEMORY[0x1E4E77720](v14, v10) : *(id *)(v10 + 8 * v14 + 32);
        uint64_t v4 = v16;
        objc_msgSend(v16, sel_playerStartTime);
        double v18 = v17;
        objc_msgSend(v4, sel_playerEndTime);
        if (v18 > v19) {
          break;
        }
        objc_msgSend(v4, sel_referenceStartTime);
        double v21 = v20;
        objc_msgSend(v4, sel_referenceEndTime);
        if (v21 > v22) {
          goto LABEL_18;
        }
        objc_msgSend(v4, sel_matchedBeginning);
        objc_msgSend(v4, sel_matchedEnd);
        sub_1E3E79EC0();

        v29[0] = v15;
        a3 = *(void *)(v15 + 16);
        unint64_t v23 = *(void *)(v15 + 24);
        if (a3 >= v23 >> 1)
        {
          sub_1E3CC7838(v23 > 1, a3 + 1, 1);
          uint64_t v15 = v29[0];
        }
        ++v14;
        *(void *)(v15 + 16) = a3 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * a3, v9, v27);
        if (v13 == v14) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1E3E7DFC0();
      swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  return result;
}

uint64_t NowPlayingAlignmentCoordinator.align(asset:to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v185 = a2;
  id v186 = a1;
  uint64_t v144 = *v2;
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28650);
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  uint64_t v141 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28658);
  uint64_t v146 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v145 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28660);
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v147 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28668);
  uint64_t v152 = *(void *)(v153 - 8);
  MEMORY[0x1F4188790](v153);
  uint64_t v151 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28670);
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x1F4188790](v156);
  v154 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28678);
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  v157 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28680);
  uint64_t v132 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  uint64_t v131 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28688);
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v134 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28690);
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  uint64_t v137 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28698);
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  CGRect v119 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286A0);
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v122 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286A8);
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  uint64_t v125 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286B0);
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  uint64_t v128 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286B8);
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  uint64_t v116 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286C0);
  uint64_t v140 = *(void *)(v179 - 8);
  MEMORY[0x1F4188790](v179);
  uint64_t v178 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE02E8);
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v115 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v176 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286C8);
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  v163 = (char *)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286D0);
  uint64_t v167 = *(v168 - 1);
  MEMORY[0x1F4188790](v168);
  uint64_t v166 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286D8);
  uint64_t v170 = *(void *)(v171 - 8);
  MEMORY[0x1F4188790](v171);
  v169 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286E0);
  uint64_t v173 = *(void *)(v174 - 8);
  MEMORY[0x1F4188790](v174);
  uint64_t v172 = (char *)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE285E0);
  uint64_t v161 = *(void *)(v162 - 8);
  MEMORY[0x1F4188790](v162);
  uint64_t v160 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE286E8);
  uint64_t v175 = *(void *)(v184 - 8);
  MEMORY[0x1F4188790](v184);
  unint64_t v177 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_1E3E78B00();
  uint64_t v28 = *(void *)(v180 - 8);
  MEMORY[0x1F4188790](v180);
  uint64_t v30 = (char *)&v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1E3E79920();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v113 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0338);
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v37 = (char *)&v113 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_1E3E795E0();
  uint64_t v189 = *(void *)(v183 - 8);
  MEMORY[0x1F4188790](v183);
  v181 = (char *)&v113 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v41 = (char *)&v113 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  NowPlayingAlignmentCoordinator.clear()();
  id v42 = objc_msgSend(v186, sel_URL);
  sub_1E3E77C90();

  uint64_t v43 = sub_1E3E77D00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v41, 0, 1, v43);
  v182 = v3;
  uint64_t v44 = (uint64_t)v3 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_url;
  swift_beginAccess();
  sub_1E3DAD5FC((uint64_t)v41, v44);
  swift_endAccess();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v34, *MEMORY[0x1E4F91AF0], v31);
  uint64_t v45 = v180;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, *MEMORY[0x1E4F91700], v180);
  sub_1E3E79FC0();
  uint64_t v46 = v45;
  uint64_t v47 = v183;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v46);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v37, 1, v47) == 1)
  {
    sub_1E3C10CE0((uint64_t)v37, &qword_1EBFE0338);
    uint64_t v48 = sub_1E3E79FE0();
    sub_1E3DB3C60(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v48 - 8) + 104))(v49, *MEMORY[0x1E4F91C50], v48);
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v181, v37, v47);
    uint64_t v51 = v182;
    __swift_project_boxed_opaque_existential_1((void *)((char *)v182 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider), *(void *)((char *)v182 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_transcriptProvider + 24));
    v188[0] = (id)sub_1E3E796D0();
    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE264F8);
    sub_1E3C10DE8(&qword_1EAE26500, &qword_1EAE264F8);
    uint64_t v52 = v160;
    sub_1E3E7AB90();
    swift_release();
    swift_release();
    uint64_t v53 = (void *)sub_1E3C10DE8(&qword_1EAE28608, &qword_1EAE285E0);
    uint64_t v54 = v177;
    uint64_t v55 = (void *)v162;
    sub_1E3E7AB50();
    (*(void (**)(char *, void *))(v161 + 8))(v52, v55);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
    v188[0] = v55;
    v188[1] = v53;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v57 = v163;
    uint64_t v162 = OpaqueTypeConformance2;
    sub_1E3E7AB80();
    sub_1E3C10DE8(&qword_1EAE286F0, &qword_1EAE286C8);
    uint64_t v58 = v166;
    uint64_t v59 = v165;
    sub_1E3E7ACA0();
    (*(void (**)(char *, uint64_t))(v164 + 8))(v57, v59);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28618);
    sub_1E3C10DE8(&qword_1EAE286F8, &qword_1EAE286D0);
    sub_1E3C10DE8(&qword_1EAE28628, &qword_1EAE28618);
    uint64_t v60 = v169;
    uint64_t v61 = v168;
    sub_1E3E7AC40();
    (*(void (**)(char *, void *))(v167 + 8))(v58, v61);
    uint64_t v62 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
    v188[0] = (id)sub_1E3E7D6A0();
    uint64_t v63 = sub_1E3E7D640();
    uint64_t v64 = *(void *)(v63 - 8);
    uint64_t v65 = *(void **)(v64 + 56);
    uint64_t v66 = (uint64_t)v176;
    uint64_t v180 = v63;
    uint64_t v168 = v65;
    uint64_t v167 = v64 + 56;
    ((void (*)(char *, uint64_t, uint64_t))v65)(v176, 1, 1);
    sub_1E3C10DE8(&qword_1EAE28700, &qword_1EAE286D8);
    unint64_t v67 = sub_1E3C32D34();
    uint64_t v68 = v172;
    uint64_t v69 = v171;
    uint64_t v165 = v62;
    uint64_t v166 = (char *)v67;
    sub_1E3E7AD10();
    sub_1E3C10CE0(v66, (uint64_t *)&unk_1EBFE27A0);

    (*(void (**)(char *, uint64_t))(v170 + 8))(v60, v69);
    swift_allocObject();
    swift_weakInit();
    sub_1E3C10DE8(&qword_1EAE28708, &qword_1EAE286E0);
    uint64_t v70 = v174;
    sub_1E3E7AD60();
    swift_release();
    (*(void (**)(char *, uint64_t))(v173 + 8))(v68, v70);
    uint64_t v71 = (uint64_t)v51 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_subscriptions;
    swift_beginAccess();
    sub_1E3E7A950();
    swift_endAccess();
    swift_release();
    if (sub_1E3E79FB0())
    {
      uint64_t v174 = v71;
      uint64_t v72 = *(void *)((char *)v51 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_playbackController);
      sub_1E3E775E0();
      uint64_t v73 = sub_1E3E79FD0();
      uint64_t v74 = (uint64_t)v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v115, (uint64_t)v51 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_alignmentCache, v114);
      uint64_t v75 = swift_allocObject();
      swift_weakInit();
      type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider(0);
      swift_allocObject();
      uint64_t v76 = sub_1E3DB3160(v72, v73, v74, (uint64_t)sub_1E3DB3138, v75);
      swift_release();
      swift_release();
      *(void *)((char *)v51 + OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator_timelineAlignerProvider) = v76;
      sub_1E3E775E0();
      swift_release();
      sub_1E3C12B10(0, &qword_1EAE26508);
      uint64_t v77 = v116;
      sub_1E3E7AB80();
      v169 = (char *)MEMORY[0x1E4F1A820];
      sub_1E3C10DE8(&qword_1EAE28710, &qword_1EAE286B8);
      uint64_t v78 = v118;
      sub_1E3E7ACA0();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v77, v78);
      uint64_t v170 = v76;
      sub_1E3E775E0();
      sub_1E3E7A940();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28718);
      sub_1E3C10DE8(&qword_1EAE28720, &qword_1EAE286C0);
      sub_1E3C10DE8(&qword_1EAE28728, &qword_1EAE28718);
      uint64_t v79 = v119;
      sub_1E3E7ACE0();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0310);
      uint64_t v164 = MEMORY[0x1E4F1AA40];
      sub_1E3C10DE8(&qword_1EAE28730, &qword_1EAE28698);
      uint64_t v80 = v122;
      uint64_t v81 = v121;
      sub_1E3E7ABF0();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v79, v81);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28738);
      uint64_t v185 = MEMORY[0x1E4F1A938];
      sub_1E3C10DE8(&qword_1EAE28740, &qword_1EAE286A0);
      uint64_t v172 = (char *)MEMORY[0x1E4F1AC10];
      sub_1E3C10DE8(&qword_1EAE28748, &qword_1EAE28738);
      uint64_t v82 = v125;
      uint64_t v83 = v124;
      sub_1E3E7AC40();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v80, v83);
      v188[0] = (id)sub_1E3E7D6A0();
      uint64_t v84 = (uint64_t)v176;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v168)(v176, 1, 1, v180);
      uint64_t v173 = MEMORY[0x1E4F1A988];
      sub_1E3C10DE8(&qword_1EAE28750, &qword_1EAE286A8);
      uint64_t v85 = v128;
      uint64_t v86 = v127;
      sub_1E3E7AD10();
      sub_1E3C10CE0(v84, (uint64_t *)&unk_1EBFE27A0);

      (*(void (**)(char *, uint64_t))(v126 + 8))(v82, v86);
      swift_allocObject();
      swift_weakInit();
      uint64_t v171 = MEMORY[0x1E4F1AAB8];
      sub_1E3C10DE8(&qword_1EAE28758, &qword_1EAE286B0);
      uint64_t v87 = v130;
      sub_1E3E7AD60();
      swift_release();
      (*(void (**)(char *, uint64_t))(v129 + 8))(v85, v87);
      swift_beginAccess();
      sub_1E3E7A950();
      swift_endAccess();
      swift_release();
      uint64_t v88 = swift_allocObject();
      id v89 = v186;
      *(void *)(v88 + 16) = v186;
      uint64_t v90 = swift_allocObject();
      *(void *)(v90 + 16) = sub_1E3DB3598;
      *(void *)(v90 + 24) = v88;
      id v91 = v89;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0308);
      os_log_type_t v92 = v131;
      sub_1E3E7ABF0();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26520);
      sub_1E3C10DE8(&qword_1EAE28760, &qword_1EAE28680);
      sub_1E3C10DE8(&qword_1EAE26530, &qword_1EAE26520);
      BOOL v93 = v134;
      uint64_t v94 = v133;
      sub_1E3E7AC40();
      (*(void (**)(char *, uint64_t))(v132 + 8))(v92, v94);
      v188[0] = (id)sub_1E3E7D6A0();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v168)(v84, 1, 1, v180);
      sub_1E3C10DE8(&qword_1EAE28768, &qword_1EAE28688);
      int64_t v95 = v137;
      uint64_t v96 = v136;
      sub_1E3E7AD10();
      sub_1E3C10CE0(v84, (uint64_t *)&unk_1EBFE27A0);

      (*(void (**)(char *, uint64_t))(v135 + 8))(v93, v96);
      swift_allocObject();
      swift_weakInit();
      sub_1E3C10DE8(&qword_1EAE28770, &qword_1EAE28690);
      uint64_t v97 = v139;
      sub_1E3E7AD60();
      swift_release();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v95, v97);
      swift_beginAccess();
      sub_1E3E7A950();
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE05F0);
      uint64_t v98 = v141;
      sub_1E3E7AAC0();
      swift_endAccess();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28778);
      sub_1E3C10DE8(&qword_1EAE28780, &qword_1EAE28650);
      uint64_t v99 = v145;
      uint64_t v100 = v143;
      sub_1E3E7AB80();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v98, v100);
      uint64_t v101 = swift_allocObject();
      uint64_t v102 = v144;
      *(void *)(v101 + 16) = v91;
      *(void *)(v101 + 24) = v102;
      id v103 = v91;
      sub_1E3E7A940();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28788);
      sub_1E3C10DE8(&qword_1EAE28790, &qword_1EAE28658);
      sub_1E3C10DE8(&qword_1EAE28798, &qword_1EAE28788);
      uint64_t v104 = v147;
      uint64_t v105 = v148;
      sub_1E3E7AD90();
      swift_release();
      (*(void (**)(char *, uint64_t))(v146 + 8))(v99, v105);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0330);
      sub_1E3C10DE8(&qword_1EAE287A0, &qword_1EAE28660);
      uint64_t v106 = v151;
      uint64_t v107 = v150;
      sub_1E3E7ABF0();
      (*(void (**)(char *, uint64_t))(v149 + 8))(v104, v107);
      swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE287A8);
      sub_1E3C10DE8(&qword_1EAE287B0, &qword_1EAE28668);
      sub_1E3C10DE8(&qword_1EAE287B8, &qword_1EAE287A8);
      unint64_t v108 = v154;
      uint64_t v109 = v153;
      sub_1E3E7AC40();
      swift_release();
      (*(void (**)(char *, uint64_t))(v152 + 8))(v106, v109);
      v188[0] = (id)sub_1E3E7D6A0();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v168)(v84, 1, 1, v180);
      sub_1E3C10DE8(&qword_1EAE287C0, &qword_1EAE28670);
      uint64_t v110 = v157;
      uint64_t v111 = v156;
      sub_1E3E7AD10();
      sub_1E3C10CE0(v84, (uint64_t *)&unk_1EBFE27A0);

      (*(void (**)(char *, uint64_t))(v155 + 8))(v108, v111);
      swift_allocObject();
      swift_weakInit();
      sub_1E3C10DE8((unint64_t *)&unk_1EAE287C8, &qword_1EAE28678);
      uint64_t v112 = v159;
      sub_1E3E7AD60();
      swift_release();
      (*(void (**)(char *, uint64_t))(v158 + 8))(v110, v112);
      swift_beginAccess();
      sub_1E3E7A950();
      swift_endAccess();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v178, v179);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v177, v184);
      return (*(uint64_t (**)(char *, uint64_t))(v189 + 8))(v181, v183);
    }
    else
    {
      v188[3] = (id)sub_1E3E79C80();
      v188[4] = (id)MEMORY[0x1E4F91BA8];
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)v188);
      sub_1E3E79C70();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1E3C34078((uint64_t)v188, (uint64_t)v187, &qword_1EBFE0330);
      sub_1E3E775E0();
      sub_1E3E7AB00();
      sub_1E3C10CE0((uint64_t)v188, &qword_1EBFE0330);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v54, v184);
      return (*(uint64_t (**)(char *, uint64_t))(v189 + 8))(v181, v47);
    }
  }
}

void sub_1E3DB106C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v8 = sub_1E3E7B770();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E7B7C0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  if (*a1)
  {
    uint64_t v25 = v14;
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
    id v18 = v17;
    uint64_t v24 = sub_1E3E7D6A0();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a2;
    *(void *)(v19 + 24) = v17;
    aBlock[4] = a4;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1E3CE65F8;
    aBlock[3] = v26;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = v17;
    sub_1E3E775E0();
    swift_release();
    sub_1E3E7B7A0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1E3DB3C60((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
    sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
    sub_1E3E7DCC0();
    uint64_t v22 = (void *)v24;
    MEMORY[0x1E4E76FF0](0, v16, v11, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v25);
  }
}

uint64_t sub_1E3DB1368(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = sub_1E3E79FE0();
    sub_1E3DB3C60(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
    swift_allocError();
    *uint64_t v5 = a2;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, *MEMORY[0x1E4F91C30], v4);
    swift_getKeyPath();
    swift_getKeyPath();
    id v6 = a2;
    return sub_1E3E7AB00();
  }
  return result;
}

uint64_t sub_1E3DB14A0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E7A880();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  sub_1E3E7A770();
  id v12 = v11;
  id v13 = v11;
  uint64_t v14 = sub_1E3E7A860();
  os_log_type_t v15 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v26 = v4;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = a2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v28 = (uint64_t)v11;
    uint64_t v29 = v18;
    uint64_t v25 = v8;
    *(_DWORD *)uint64_t v17 = 136315138;
    id v19 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v20 = sub_1E3E7CD90();
    uint64_t v24 = v7;
    uint64_t v28 = sub_1E3C150B8(v20, v21, &v29);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v14, v15, "Failed to construct TranscriptModel: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v18, -1, -1);
    MEMORY[0x1E4E79510](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v22 = sub_1E3E792A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
  return sub_1E3E7AA30();
}

uint64_t sub_1E3DB17A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0318);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3C34078(a1, (uint64_t)v7, (uint64_t *)&unk_1EBFE0318);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3C34078((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EBFE0318);
    sub_1E3E775E0();
    sub_1E3E7AB00();
    sub_1E3C10CE0((uint64_t)v7, (uint64_t *)&unk_1EBFE0318);
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3DB18E8()
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = v12;
  if (!v12)
  {
    sub_1E3C10CE0((uint64_t)v11, &qword_1EBFE0330);
    return 0;
  }
  uint64_t v1 = __swift_project_boxed_opaque_existential_1(v11, v12);
  uint64_t v2 = *(void *)(v0 - 8);
  double v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v2 + 16))(v5, v3);
  sub_1E3C10CE0((uint64_t)v11, &qword_1EBFE0330);
  char v6 = sub_1E3E79590();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  if ((v6 & 1) == 0) {
    return 0;
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  swift_release();
  if (!v12)
  {
    sub_1E3C10CE0((uint64_t)v11, &qword_1EBFE0330);
    return 1;
  }
  sub_1E3C1B2BC((uint64_t)v11, (uint64_t)v10);
  sub_1E3C10CE0((uint64_t)v11, &qword_1EBFE0330);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_1E3E795B0();
  uint64_t v8 = v7 & 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  return v8;
}

uint64_t sub_1E3DB1B7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  v5[3] = sub_1E3E7A120();
  v5[4] = MEMORY[0x1E4F91C88];
  v5[0] = v3;
  sub_1E3DB3CA8((uint64_t)v5, a2);
  return sub_1E3E775E0();
}

uint64_t sub_1E3DB1BD4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3DB1D28(a1, "Failed to construct timeline aligner: %s", &qword_1EBFE0310, a2);
}

uint64_t sub_1E3DB1BE8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3C34078(a1, (uint64_t)v3, &qword_1EBFE0310);
    sub_1E3DAC03C((uint64_t)v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3DB1C5C(void *a1, void *a2)
{
  uint64_t v4 = sub_1E3E7A880();
  MEMORY[0x1F4188790](v4 - 8);
  id v5 = a2;
  id v6 = a1;
  sub_1E3E7A7E0();
  sub_1E3E7A100();
  swift_allocObject();
  return sub_1E3E7A0F0();
}

uint64_t sub_1E3DB1D14@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3DB1D28(a1, "Failed to construct scouting aligner: %s", &qword_1EBFE0308, a2);
}

uint64_t sub_1E3DB1D28@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1E3E7A880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_1E3E7A770();
  id v13 = v12;
  id v14 = v12;
  os_log_type_t v15 = sub_1E3E7A860();
  os_log_type_t v16 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v27 = a3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = a4;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = (uint64_t)v12;
    *(void *)&v30[0] = v19;
    uint64_t v25 = a2;
    *(_DWORD *)uint64_t v18 = 136315138;
    id v20 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v21 = sub_1E3E7CD90();
    uint64_t v26 = v8;
    uint64_t v29 = sub_1E3C150B8(v21, v22, (uint64_t *)v30);
    a3 = v27;
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v15, v16, v25, v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v19, -1, -1);
    MEMORY[0x1E4E79510](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v31 = 0;
  memset(v30, 0, sizeof(v30));
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_1E3E7AA30();
}

uint64_t sub_1E3DB1FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C34078(a1, a2, &qword_1EBFE0310);
}

uint64_t sub_1E3DB1FC4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1E3E7A880();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7A770();
  uint64_t v10 = sub_1E3E7A860();
  os_log_type_t v11 = sub_1E3E7D500();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v6;
    id v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = a2;
    uint64_t v15 = v14;
    uint64_t v24 = v14;
    unint64_t v22 = a3;
    *(_DWORD *)id v13 = 136315138;
    uint64_t v16 = sub_1E3E7E330();
    uint64_t v23 = sub_1E3C150B8(v16, v17, &v24);
    a3 = v22;
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v10, v11, "[%s] Finished creating timeline aligner. Starting alignment", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v15, -1, -1);
    MEMORY[0x1E4E79510](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1E3E79150();
  *a3 = result;
  return result;
}

uint64_t sub_1E3DB21F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C1B2BC(a1, a2);
}

uint64_t sub_1E3DB2200@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1E3E7A880();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = a2 + 16;
  sub_1E3E7A770();
  id v12 = v10;
  id v13 = v10;
  uint64_t v14 = sub_1E3E7A860();
  os_log_type_t v15 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v28 = v6;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = a3;
    unint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    *(void *)&v31[0] = v18;
    *(_DWORD *)unint64_t v17 = 136315138;
    uint64_t v29 = v11;
    uint64_t v33 = (uint64_t)v10;
    id v19 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v20 = sub_1E3E7CD90();
    uint64_t v33 = sub_1E3C150B8(v20, v21, (uint64_t *)v31);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v14, v15, "Failed alignment: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v18, -1, -1);
    MEMORY[0x1E4E79510](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v22 = sub_1E3E79FE0();
    sub_1E3DB3C60(&qword_1EAE264E0, MEMORY[0x1E4F91C58]);
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = v10;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4F91C48], v22);
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&v31[0] = v23;
    id v25 = v10;
    sub_1E3E7AB00();
  }
  uint64_t v32 = 0;
  memset(v31, 0, sizeof(v31));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0330);
  return sub_1E3E7AA30();
}

uint64_t sub_1E3DB257C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3C34078(a1, (uint64_t)v7, a3);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3C34078((uint64_t)v7, (uint64_t)v6, a3);
    sub_1E3E775E0();
    sub_1E3E7AB00();
    sub_1E3C10CE0((uint64_t)v7, a3);
    return swift_release();
  }
  return result;
}

BOOL sub_1E3DB2650(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned char *)(a1 + 48) == 2) {
    return v2 == 2;
  }
  double v4 = round(*(double *)(a1 + 32));
  BOOL v5 = v2 == 2;
  BOOL v6 = v2 != 2;
  double v7 = round(*(double *)(a2 + 32));
  if (v5) {
    double v7 = 0.0;
  }
  return v4 == v7 && v6;
}

uint64_t sub_1E3DB2698(double *a1)
{
  double v1 = *a1;
  uint64_t v2 = *((void *)a1 + 1);
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  double v5 = a1[4];
  uint64_t v6 = *((void *)a1 + 5);
  uint64_t v7 = *((void *)a1 + 6);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot;
    double v10 = *(double *)(result
                    + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                    + 32);
    uint64_t v11 = *(unsigned __int8 *)(result
                             + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                             + 48);
    *(double *)uint64_t v9 = v1;
    *(void *)(v9 + 8) = v2;
    *(void *)(v9 + 16) = v3;
    *(void *)(v9 + 24) = v4;
    *(double *)(v9 + 32) = v5;
    *(void *)(v9 + 40) = v6;
    *(void *)(v9 + 48) = v7;
    if (v7 != 2 && v11 != 2)
    {
      double v12 = v5 - v10;
      double v13 = v10 - v5;
      if (v12 > 10.0 || v13 > 1.0) {
        sub_1E3DB2A34();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3DB2778(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E7A6D0();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1E3E7A880();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE02E8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *(void **)(v2 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog);
  *(void *)(v2 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog) = a1;
  id v11 = a1;

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_cache, v6);
  sub_1E3DB3C60(&qword_1EAE28818, (void (*)(uint64_t))type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider);
  sub_1E3E7A7E0();
  sub_1E3E7A670();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3E7D5A0();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F91FD0]), sel_init);
  sub_1E3E7A120();
  swift_allocObject();
  sub_1E3E775E0();
  v14[1] = sub_1E3E7A110();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28718);
  swift_allocObject();
  uint64_t v12 = sub_1E3E7A9F0();
  *(void *)(v2
            + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_fullTimelineAligner) = v12;
  sub_1E3E775E0();
  swift_release();
  return v12;
}

void sub_1E3DB2A34()
{
  uint64_t v1 = sub_1E3E7A6D0();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_1E3E7A880();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE02E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                + 48) != 2)
  {
    uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog);
    if (v7)
    {
      if (*(void *)(v0
                     + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_fullTimelineAligner))
      {
        double v8 = *(double *)(v0
                       + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                       + 32);
        uint64_t v9 = *(uint64_t (**)(uint64_t, double))(v0
                                                       + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_shouldResetAlignment);
        id v10 = v7;
        uint64_t v11 = sub_1E3E775E0();
        if (v9(v11, v8))
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v0 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_cache, v3);
          v13[0] = *(void *)(v0 + 24);
          sub_1E3DB3C60(&qword_1EAE28818, (void (*)(uint64_t))type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider);
          id v12 = v10;
          sub_1E3E7A7E0();
          sub_1E3E7A670();
          sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
          sub_1E3E7D5A0();
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F91FD0]), sel_init);
          sub_1E3E7A120();
          swift_allocObject();
          sub_1E3E775E0();
          v13[1] = sub_1E3E7A110();
          sub_1E3E7A9D0();
          swift_release();
          swift_release();
        }
        else
        {

          swift_release();
        }
      }
    }
  }
}

uint64_t sub_1E3DB2D60()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_cache;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE02E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1E3DB2E50()
{
  uint64_t v1 = (long long *)(v0 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot);
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot
                 + 48);
  if (v2 == 2) {
    return 0;
  }
  uint64_t v4 = *((void *)v1 + 5);
  uint64_t v5 = *((void *)v1 + 4);
  uint64_t v6 = *((void *)v1 + 3);
  uint64_t v7 = *((void *)v1 + 2);
  long long v9 = *v1;
  sub_1E3E77D90();
  long long v10 = v9;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  uint64_t v13 = v5;
  uint64_t v14 = v4;
  __int16 v15 = v2 & 0x101;
  char v16 = BYTE2(v2) & 1;
  return MPCPlayerItemDurationSnapshotGetElapsedTimeForCurrentTime((uint64_t)&v10, v8);
}

uint64_t sub_1E3DB2F1C(void *a1, uint64_t a2)
{
  return NowPlayingAlignmentCoordinator.align(asset:to:)(a1, a2);
}

uint64_t sub_1E3DB2F40(double a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1E3C94ACC;
  *(void *)(v5 + 400) = v4;
  *(double *)(v5 + 392) = a1;
  return MEMORY[0x1F4188298](sub_1E3DAB758, 0, 0);
}

uint64_t sub_1E3DB2FF4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1E3DB302C(void **a1)
{
  sub_1E3DB106C(a1, v1, (uint64_t)&unk_1F3F510E0, (uint64_t)sub_1E3DB3D7C, (uint64_t)&block_descriptor_102);
}

uint64_t sub_1E3DB306C(uint64_t a1)
{
  return sub_1E3DB17A4(a1);
}

uint64_t sub_1E3DB3088()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DB30C0(unint64_t *a1)
{
  return sub_1E3DAE848(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

double MPCPlayerItemDurationSnapshotGetElapsedTimeForCurrentTime(uint64_t a1, double a2)
{
  double v2 = *(double *)(a1 + 32) + (a2 - *(double *)a1) * *(float *)(a1 + 40);
  if (v2 >= *(double *)(a1 + 24)) {
    double v2 = *(double *)(a1 + 24);
  }
  return fmax(v2, 0.0);
}

void sub_1E3DB30F8(void **a1)
{
  sub_1E3DB106C(a1, v1, (uint64_t)&unk_1F3F51090, (uint64_t)sub_1E3DB3D1C, (uint64_t)&block_descriptor_26);
}

uint64_t sub_1E3DB3138()
{
  return sub_1E3DB18E8();
}

uint64_t type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider(uint64_t a1)
{
  return sub_1E3D2A998(a1, (uint64_t *)&unk_1EAE28808);
}

uint64_t sub_1E3DB3160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE24B0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28830);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v6
            + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_fullTimelineAligner) = 0;
  *(void *)(v6 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_catalog) = 0;
  *(void *)(v6 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_subscriptions) = MEMORY[0x1E4FBC870];
  uint64_t v18 = v6 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_snapshot;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(void *)(v18 + 48) = 2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v19 = v6 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_cache;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE02E8);
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, a3, v20);
  uint64_t v22 = (void *)(v6
                 + OBJC_IVAR____TtCC10PodcastsUI30NowPlayingAlignmentCoordinator23TimelineAlignerProvider_shouldResetAlignment);
  uint64_t v23 = v27;
  *uint64_t v22 = v26;
  v22[1] = v23;
  swift_beginAccess();
  sub_1E3E775E0();
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2550);
  sub_1E3E7AAC0();
  swift_endAccess();
  sub_1E3C10DE8(&qword_1EAE28838, &qword_1EBFE24B0);
  sub_1E3E7ABD0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8(&qword_1EAE28840, &qword_1EAE28830);
  uint64_t v24 = v29;
  sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v24);
  swift_beginAccess();
  sub_1E3E7A950();
  swift_endAccess();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v28, v20);
  return v6;
}

uint64_t sub_1E3DB352C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1E3DB2778(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1E3DB3558(uint64_t a1)
{
  return sub_1E3DB1BE8(a1);
}

uint64_t sub_1E3DB3560()
{
  return swift_deallocObject();
}

uint64_t sub_1E3DB3598(void *a1)
{
  return sub_1E3DB1C5C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1E3DB35A0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DB35D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E3C92FD0(a1, *(uint64_t (**)(void))(v2 + 16), a2);
}

uint64_t sub_1E3DB35E0(uint64_t a1)
{
  return sub_1E3DB257C(a1, v1, &qword_1EBFE0308);
}

uint64_t sub_1E3DB3614()
{
  return swift_deallocObject();
}

uint64_t sub_1E3DB364C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E3DB1FC4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1E3DB3654@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3DB2200(a1, v2, a2);
}

uint64_t sub_1E3DB365C(uint64_t a1)
{
  return sub_1E3DB257C(a1, v1, &qword_1EBFE0330);
}

uint64_t sub_1E3DB3698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C91B38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner, &qword_1EBFE05F0);
}

uint64_t sub_1E3DB36C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3DAC71C(a1, a2, a3, a4, &qword_1EAE28650, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__fullTimelineAligner, &qword_1EBFE05F0);
}

uint64_t sub_1E3DB36F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C91B38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner, &qword_1EBFE05E0);
}

uint64_t sub_1E3DB3718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3DAC71C(a1, a2, a3, a4, &qword_1EAE26580, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__scoutingAligner, &qword_1EBFE05E0);
}

uint64_t sub_1E3DB3748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C91B38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment, &qword_1EBFE0610);
}

uint64_t sub_1E3DB3770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3DAC71C(a1, a2, a3, a4, &qword_1EAE28828, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__alignment, &qword_1EBFE0610);
}

uint64_t sub_1E3DB37A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C91B38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel, &qword_1EBFE0600);
}

uint64_t sub_1E3DB37C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3DAC71C(a1, a2, a3, a4, &qword_1EAE28820, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__transcriptModel, &qword_1EBFE0600);
}

uint64_t sub_1E3DB37F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3C91B38(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error, &qword_1EBFE0630);
}

uint64_t sub_1E3DB3820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E3DAC71C(a1, a2, a3, a4, &qword_1EAE26578, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI30NowPlayingAlignmentCoordinator__error, &qword_1EBFE0630);
}

uint64_t sub_1E3DB3850()
{
  return type metadata accessor for NowPlayingAlignmentCoordinator(0);
}

uint64_t type metadata accessor for NowPlayingAlignmentCoordinator(uint64_t a1)
{
  return sub_1E3D2A998(a1, (uint64_t *)&unk_1EBFE01F0);
}

void sub_1E3DB3878()
{
  sub_1E3C95450(319, &qword_1EBFE05F8, &qword_1EBFE0310);
  if (v0 <= 0x3F)
  {
    sub_1E3C95450(319, &qword_1EBFE05E8, &qword_1EBFE0308);
    if (v1 <= 0x3F)
    {
      sub_1E3C95450(319, &qword_1EBFE0618, &qword_1EBFE0330);
      if (v2 <= 0x3F)
      {
        sub_1E3C95450(319, &qword_1EBFE0608, (uint64_t *)&unk_1EBFE0318);
        if (v3 <= 0x3F)
        {
          sub_1E3C95450(319, &qword_1EBFE0638, &qword_1EBFE07D8);
          if (v4 <= 0x3F)
          {
            sub_1E3C25B18();
            if (v5 <= 0x3F)
            {
              sub_1E3DB3B14();
              if (v6 <= 0x3F) {
                swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for NowPlayingAlignmentCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NowPlayingAlignmentCoordinator);
}

uint64_t dispatch thunk of NowPlayingAlignmentCoordinator.__allocating_init(fullTimelineAligner:scoutingAligner:alignment:transcriptModel:transcriptProvider:alignmentCache:playbackController:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

void sub_1E3DB3B14()
{
  if (!qword_1EBFE02F0)
  {
    sub_1E3E792B0();
    sub_1E3E7A240();
    unint64_t v0 = sub_1E3E78AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE02F0);
    }
  }
}

uint64_t sub_1E3DB3B7C()
{
  return type metadata accessor for NowPlayingAlignmentCoordinator.TimelineAlignerProvider(0);
}

void sub_1E3DB3B84()
{
  sub_1E3DB3B14();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1E3DB3C60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3DB3CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3DB3D10(double *a1)
{
  return sub_1E3DB2698(a1);
}

uint64_t sub_1E3DB3D1C()
{
  return sub_1E3DB1368(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t objectdestroy_95Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t InterestObserverProvider.init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v0 = objc_msgSend(v3, sel_privateQueueContext);
  uint64_t v1 = sub_1E3E79F10();
  swift_unknownObjectRelease();

  swift_release();
  return v1;
}

uint64_t UIImage.heicData(compressionQuality:)(double a1)
{
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2938);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1E3E87930;
  unint64_t v5 = (void *)*MEMORY[0x1E4F2F430];
  type metadata accessor for CFString(0);
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 32) = v5;
  id v8 = objc_allocWithZone(NSNumber);
  id v9 = v5;
  id v10 = objc_msgSend(v8, sel_initWithDouble_, a1);
  uint64_t v11 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
  uint64_t v12 = (void **)MEMORY[0x1E4F2F470];
  *(void *)(v4 + 64) = v10;
  uint64_t v13 = *v12;
  *(void *)(v4 + 120) = v7;
  *(void *)(v4 + 88) = v11;
  *(void *)(v4 + 96) = v13;
  id v14 = objc_allocWithZone(NSNumber);
  id v15 = v13;
  id v16 = objc_msgSend(v14, sel_initWithBool_, 1);
  unint64_t v17 = (void **)MEMORY[0x1E4F2FF88];
  *(void *)(v4 + 128) = v16;
  uint64_t v18 = *v17;
  *(void *)(v4 + 184) = v7;
  *(void *)(v4 + 152) = v11;
  *(void *)(v4 + 160) = v18;
  id v19 = objc_allocWithZone(NSNumber);
  id v20 = v18;
  id v21 = objc_msgSend(v19, sel_initWithBool_, 1);
  *(void *)(v4 + 216) = v11;
  *(void *)(v4 + 192) = v21;
  sub_1E3C12B10(0, &qword_1EBFE2720);
  uint64_t v22 = (void *)sub_1E3E7D470();
  uint64_t v23 = [(UIImage *)v2 CGImage];
  if (!v23) {
    goto LABEL_9;
  }
  uint64_t v24 = v23;
  CFMutableDataRef Mutable = CFDataCreateMutable(0, 0);
  if (!Mutable)
  {
    CFMutableDataRef v26 = v24;
LABEL_8:

LABEL_9:
    uint64_t v32 = UIImageHEICRepresentation(v2);
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v31 = sub_1E3E77D50();

      return v31;
    }

    return 0;
  }
  CFMutableDataRef v26 = Mutable;
  CFDictionaryRef v27 = v22;
  uint64_t v28 = (__CFString *)sub_1E3E7CCF0();
  uint64_t v29 = CGImageDestinationCreateWithData(v26, v28, 1uLL, v27);

  if (!v29)
  {

    goto LABEL_8;
  }
  CGImageDestinationAddImage(v29, v24, 0);
  if (!CGImageDestinationFinalize(v29))
  {

    return 0;
  }
  uint64_t v30 = v26;
  uint64_t v31 = sub_1E3E77D50();

  return v31;
}

void PresentationSource.viewController.getter()
{
}

void PresentationSource.viewController.setter(void *a1)
{
  swift_unknownObjectWeakAssign();
}

void (*PresentationSource.viewController.modify(void *a1))(id *a1)
{
  a1[1] = v1;
  *a1 = MEMORY[0x1E4E79630](v1);
  return sub_1E3DB4174;
}

void sub_1E3DB4174(id *a1)
{
  id v1 = *a1;
  swift_unknownObjectWeakAssign();
}

id PresentationSource.position.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void **)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  unsigned __int8 v7 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 40) = v7;
  return sub_1E3DB41D8(v2, v3, v4, v5, v6, v7);
}

id sub_1E3DB41D8(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 255) {
    return result;
  }
  return result;
}

__n128 PresentationSource.position.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  char v3 = *((unsigned char *)a1 + 40);
  sub_1E3DB4260(*(id *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
  *(_OWORD *)(v1 + 8) = v6;
  __n128 result = v5;
  *(__n128 *)(v1 + 24) = v5;
  *(void *)(v1 + 40) = v2;
  *(unsigned char *)(v1 + 48) = v3;
  return result;
}

void sub_1E3DB4260(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 255) {
}
  }

uint64_t (*PresentationSource.position.modify())()
{
  return nullsub_1;
}

void static PresentationSource.topmostPresentationSource.getter(uint64_t a1@<X8>)
{
  swift_unknownObjectWeakInit();
  uint64_t v10 = 0;
  long long v8 = 0u;
  long long v9 = 0u;
  char v11 = -1;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  sub_1E3DB440C((uint64_t)v7, a1);
  id v2 = objc_msgSend(self, sel_sharedApplication);
  id v3 = objc_msgSend(v2, sel_delegate);

  if (v3)
  {
    if (objc_msgSend(v3, sel_respondsToSelector_, sel_window))
    {
      id v4 = objc_msgSend(v3, sel_window);
      swift_unknownObjectRelease();
      if (v4)
      {
        id v5 = objc_msgSend(v4, sel_rootViewController);

        if (v5)
        {
          id v6 = objc_msgSend(v5, sel_presentedViewController);
          if (v6)
          {
            do
            {
              id v3 = v6;

              id v6 = objc_msgSend(v3, sel_presentedViewController);
              id v5 = v3;
            }
            while (v6);
          }
          else
          {
            id v3 = v5;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    id v3 = 0;
  }
LABEL_10:
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1E3DB440C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit();
  long long v4 = *(_OWORD *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 33) = *(_OWORD *)(a1 + 33);
  *(_OWORD *)(a2 + 24) = v5;
  *(_OWORD *)(a2 + 8) = v4;
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 64);
    *(void *)(a2 + 56) = v6;
    *(void *)(a2 + 64) = v7;
  }
  else
  {
    *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  }
  return a2;
}

__n128 PresentationSource.init(viewController:position:)@<Q0>(void *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v8 = (__n128)a2[1];
  long long v9 = *a2;
  uint64_t v5 = *((void *)a2 + 4);
  char v6 = *((unsigned char *)a2 + 40);
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 40) = 0;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 8) = 0u;
  *(unsigned char *)(a3 + 48) = -1;
  *(void *)(a3 + 56) = 0;
  *(void *)(a3 + 64) = 0;
  swift_unknownObjectWeakAssign();

  sub_1E3DB4260(*(id *)(a3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40), *(unsigned char *)(a3 + 48));
  *(_OWORD *)(a3 + 8) = v9;
  __n128 result = v8;
  *(__n128 *)(a3 + 24) = v8;
  *(void *)(a3 + 40) = v5;
  *(unsigned char *)(a3 + 48) = v6;
  return result;
}

void PresentationSource.init(viewController:view:location:)(void *a1@<X0>, void *a2@<X1>, CGFloat a3@<X2>, double a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  swift_unknownObjectWeakInit();
  *(void *)(a6 + 40) = 0;
  *(_OWORD *)(a6 + 24) = 0u;
  *(_OWORD *)(a6 + 8) = 0u;
  *(unsigned char *)(a6 + 48) = -1;
  *(void *)(a6 + 56) = 0;
  *(void *)(a6 + 64) = 0;
  swift_unknownObjectWeakAssign();
  if (!a2)
  {

LABEL_6:
    char v18 = -1;
    CGFloat x = 0.0;
    CGFloat y = 0.0;
    CGFloat width = 0.0;
    CGFloat height = 0.0;
    goto LABEL_7;
  }
  if (a5)
  {

    a2 = 0;
    goto LABEL_6;
  }
  CGFloat v12 = a4;
  id v13 = a2;
  v19.size.CGFloat width = 0.0;
  v19.size.CGFloat height = 0.0;
  v19.origin.CGFloat x = a3;
  v19.origin.CGFloat y = v12;
  CGRect v20 = CGRectInset(v19, -20.0, -20.0);
  CGFloat x = v20.origin.x;
  CGFloat y = v20.origin.y;
  CGFloat width = v20.size.width;
  CGFloat height = v20.size.height;

  char v18 = 0;
LABEL_7:
  sub_1E3DB4260(*(id *)(a6 + 8), *(void *)(a6 + 16), *(void *)(a6 + 24), *(void *)(a6 + 32), *(void *)(a6 + 40), *(unsigned char *)(a6 + 48));
  *(void *)(a6 + 8) = a2;
  *(CGFloat *)(a6 + 16) = x;
  *(CGFloat *)(a6 + 24) = y;
  *(CGFloat *)(a6 + 32) = width;
  *(CGFloat *)(a6 + 40) = height;
  *(unsigned char *)(a6 + 48) = v18;
}

uint64_t PresentationSource.init(view:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  swift_unknownObjectWeakInit();
  *(void *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 8) = 0u;
  *(unsigned char *)(a2 + 48) = -1;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  if (!a1) {
    goto LABEL_5;
  }
  id v4 = a1;
  uint64_t v5 = UIView.mt_viewController.getter();
  if (!v5)
  {

LABEL_5:
    static PresentationSource.topmostPresentationSource.getter((uint64_t)v20);

    goto LABEL_6;
  }
  char v6 = (void *)v5;
  long long v11 = *MEMORY[0x1E4F1DB20];
  uint64_t v7 = *(void *)(MEMORY[0x1E4F1DB20] + 16);
  uint64_t v8 = *(void *)(MEMORY[0x1E4F1DB20] + 24);
  swift_unknownObjectWeakInit();
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  swift_unknownObjectWeakAssign();
  id v9 = v4;

  sub_1E3DB4260(0, 0, 0, 0, 0, 0xFFu);
  id v13 = a1;
  long long v14 = v11;
  uint64_t v15 = v7;
  uint64_t v16 = v8;
  char v17 = 0;
  sub_1E3DB440C((uint64_t)v12, (uint64_t)v20);

LABEL_6:
  sub_1E3DB4784(a2);
  return sub_1E3DB440C((uint64_t)v20, a2);
}

uint64_t sub_1E3DB4784(uint64_t a1)
{
  return a1;
}

void PresentationSource.init(viewController:gestureRecognizer:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 40) = 0;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 8) = 0u;
  *(unsigned char *)(a3 + 48) = -1;
  *(void *)(a3 + 56) = 0;
  *(void *)(a3 + 64) = 0;
  swift_unknownObjectWeakAssign();
  id v6 = objc_msgSend(a2, sel_view);
  if (v6)
  {
    objc_msgSend(a2, sel_locationInView_, v6);
    v12.size.CGFloat width = 0.0;
    v12.size.CGFloat height = 0.0;
    CGRect v13 = CGRectInset(v12, -20.0, -20.0);
    CGFloat x = v13.origin.x;
    CGFloat y = v13.origin.y;
    CGFloat width = v13.size.width;
    CGFloat height = v13.size.height;

    char v11 = 0;
  }
  else
  {

    char v11 = -1;
    CGFloat x = 0.0;
    CGFloat y = 0.0;
    CGFloat width = 0.0;
    CGFloat height = 0.0;
  }
  sub_1E3DB4260(*(id *)(a3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40), *(unsigned char *)(a3 + 48));
  *(void *)(a3 + 8) = v6;
  *(CGFloat *)(a3 + 16) = x;
  *(CGFloat *)(a3 + 24) = y;
  *(CGFloat *)(a3 + 32) = width;
  *(CGFloat *)(a3 + 40) = height;
  *(unsigned char *)(a3 + 48) = v11;
}

void PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(void *a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  CGRect v13 = (void *)MEMORY[0x1E4E79630](v6);
  id v60 = v13;
  if (v13)
  {
    id v14 = v13;
    id v15 = objc_msgSend(v14, sel_parentViewController);

    if (v15) {
      goto LABEL_3;
    }
  }
  id v17 = objc_msgSend(self, sel_sharedApplication);
  id v18 = objc_msgSend(v17, sel_delegate);

  if (!v18) {
    goto LABEL_11;
  }
  if ((objc_msgSend(v18, sel_respondsToSelector_, sel_window) & 1) == 0)
  {

    swift_unknownObjectRelease();
    return;
  }
  id v19 = objc_msgSend(v18, sel_window);
  swift_unknownObjectRelease();
  if (!v19
    || (id v14 = objc_msgSend(v19, sel_rootViewController), v19, !v14))
  {
LABEL_11:
    CGRect v20 = v60;
LABEL_18:

    return;
  }
LABEL_3:
  id v16 = objc_msgSend(v14, sel_presentedViewController);
  if (v16)
  {
    do
    {
      id v62 = v16;

      id v16 = objc_msgSend(v62, sel_presentedViewController);
      id v14 = v62;
    }
    while (v16);
  }
  else
  {
    id v62 = v14;
  }

  id v21 = objc_msgSend(v62, sel_popoverPresentationController);
  if (v21)
  {
    CGRect v20 = v62;
    goto LABEL_18;
  }
  id v22 = objc_msgSend(v62, sel_transitionCoordinator);
  if (v22)
  {
    uint64_t v23 = v22;
    sub_1E3DB5338(v6, (uint64_t)v69);
    uint64_t v24 = swift_allocObject();
    sub_1E3DB440C((uint64_t)v69, v24 + 16);
    *(void *)(v24 + 88) = a1;
    *(unsigned char *)(v24 + 96) = a2 & 1;
    *(void *)(v24 + 104) = a3;
    *(unsigned char *)(v24 + 112) = a4 & 1;
    *(void *)(v24 + 120) = a5;
    *(void *)(v24 + 128) = a6;
    unint64_t v67 = sub_1E3DB5374;
    uint64_t v68 = v24;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v64 = 1107296256;
    uint64_t v65 = sub_1E3DB51E4;
    uint64_t v66 = &block_descriptor_9_1;
    id v25 = _Block_copy(&aBlock);
    id v26 = a1;
    sub_1E3C19A6C(a5);
    swift_release();
    objc_msgSend(v23, sel_animateAlongsideTransition_completion_, 0, v25);
    _Block_release(v25);

    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    if (ObjectType == sub_1E3C12B10(0, &qword_1EBFDEE60))
    {
      sub_1E3DB5338(v6, (uint64_t)v69);
      uint64_t v33 = swift_allocObject();
      sub_1E3DB440C((uint64_t)v69, v33 + 16);
      *(void *)(v33 + 88) = a1;
      *(unsigned char *)(v33 + 96) = a2 & 1;
      *(void *)(v33 + 104) = a3;
      uint64_t v34 = a4 & 1;
      *(unsigned char *)(v33 + 112) = v34;
      *(void *)(v33 + 120) = a5;
      *(void *)(v33 + 128) = a6;
      unint64_t v67 = sub_1E3DB5374;
      uint64_t v68 = v33;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v64 = 1107296256;
      uint64_t v65 = (uint64_t (*)(uint64_t))sub_1E3CE65F8;
      uint64_t v66 = &block_descriptor_3_1;
      uint64_t v35 = _Block_copy(&aBlock);
      id v36 = a1;
      sub_1E3C19A6C(a5);
      swift_release();
      objc_msgSend(v62, sel_dismissViewControllerAnimated_completion_, v34, v35);
    }
    else
    {
      if (a2)
      {
        id v28 = objc_msgSend(self, sel_sharedApplication);
        id v29 = objc_msgSend(v28, sel_delegate);

        if (v29)
        {
          if (objc_msgSend(v29, sel_respondsToSelector_, sel_window))
          {
            id v30 = objc_msgSend(v29, sel_window);
            swift_unknownObjectRelease();
            if (v30)
            {
              id v31 = objc_msgSend(v30, sel_traitCollection);

              id v32 = objc_msgSend(v31, sel_horizontalSizeClass);
              if (v32 == (id)2 && *(unsigned __int8 *)(v6 + 48) != 255) {
                objc_msgSend(a1, sel_setModalPresentationStyle_, 7);
              }
            }
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
      }
      id v37 = objc_msgSend(a1, sel_popoverPresentationController);
      if (v37)
      {
        int v61 = *(unsigned __int8 *)(v6 + 48);
        if (v61 == 255)
        {
        }
        else
        {
          id v57 = v37;
          double v38 = *(double *)(v6 + 16);
          id v59 = *(id *)(v6 + 8);
          double v40 = *(double *)(v6 + 24);
          uint64_t v39 = *(void *)(v6 + 32);
          CGFloat v41 = *(double *)(v6 + 40);
          v69[9] = &unk_1F3F76F70;
          uint64_t v42 = swift_dynamicCastObjCProtocolConditional();
          CGFloat v58 = *(double *)&v39;
          uint64_t v56 = *(void *)&v38;
          if (v42)
          {
            uint64_t v55 = v42;
            id v43 = a1;
            uint64_t v44 = *(void *)&v38;
            id v45 = v43;
            sub_1E3DB41D8(v59, v44, *(uint64_t *)&v40, v39, *(uint64_t *)&v41, v61);
            id v46 = objc_msgSend(v45, sel_presentationController);
            if (v46)
            {
              uint64_t v47 = v46;
              objc_msgSend(v46, sel_setDelegate_, v55);
            }
            double v38 = *(double *)&v56;
          }
          else
          {
            id v48 = v59;
          }
          objc_msgSend(v57, sel_setPermittedArrowDirections_, a3, v55);
          if (v61)
          {
            id v49 = v59;
            id v50 = v59;
            objc_msgSend(v57, sel_setBarButtonItem_, v59);

            sub_1E3DB4260(v59, v56, *(uint64_t *)&v40, *(uint64_t *)&v58, *(uint64_t *)&v41, v61);
            sub_1E3DB4260(v59, v56, *(uint64_t *)&v40, *(uint64_t *)&v58, *(uint64_t *)&v41, v61);
          }
          else
          {
            double v51 = v58;
            double v52 = v41;
            id v53 = v59;
            objc_msgSend(v57, sel_setSourceView_, v59);
            if (byte_1EAE263F0)
            {
              v71.origin.CGFloat x = v38;
              v71.origin.CGFloat y = v40;
              v71.size.CGFloat width = v58;
              v71.size.CGFloat height = v41;
              if (CGRectGetWidth(v71) <= 0.0)
              {
                v72.origin.CGFloat x = v38;
                v72.origin.CGFloat y = v40;
                v72.size.CGFloat width = v58;
                v72.size.CGFloat height = v41;
                if (CGRectGetHeight(v72) <= 0.0)
                {
                  double v52 = 1.0;
                  double v51 = 1.0;
                }
              }
            }
            objc_msgSend(v57, sel_setSourceRect_, v38, v40, v51, v52);

            sub_1E3DB4260(v59, *(uint64_t *)&v38, *(uint64_t *)&v40, *(uint64_t *)&v58, *(uint64_t *)&v41, v61);
            sub_1E3DB4260(v59, *(uint64_t *)&v38, *(uint64_t *)&v40, *(uint64_t *)&v58, *(uint64_t *)&v41, v61);
          }
        }
      }
      uint64_t v54 = *(void (**)(void *))(v6 + 56);
      if (v54) {
        v54(a1);
      }
      if (a5)
      {
        v69[4] = a5;
        v69[5] = a6;
        v69[0] = MEMORY[0x1E4F143A8];
        v69[1] = 1107296256;
        v69[2] = sub_1E3CE65F8;
        v69[3] = &block_descriptor_27;
        uint64_t v35 = _Block_copy(v69);
        sub_1E3E775E0();
        swift_release();
      }
      else
      {
        uint64_t v35 = 0;
      }
      objc_msgSend(v62, sel_presentViewController_animated_completion_, a1, a4 & 1, v35);
    }
    _Block_release(v35);
  }
}

uint64_t sub_1E3DB51E4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1E3E775E0();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

id PresentationSource.popoverSource.getter@<X0>(uint64_t a1@<X8>)
{
  id v4 = *(void **)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  int v8 = *(unsigned __int8 *)(v1 + 48);
  if (v8 == 255)
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    if (v8) {
      id v9 = (unint64_t *)&unk_1EAE288A8;
    }
    else {
      id v9 = qword_1EBFDF070;
    }
    *(void *)(a1 + 24) = sub_1E3C12B10(0, v9);
    *(void *)a1 = v4;
  }

  return sub_1E3DB41D8(v4, v3, v5, v6, v7, v8);
}

id PresentationSource.Position.view.getter()
{
  if (*(unsigned char *)(v0 + 40)) {
    return 0;
  }
  id v1 = *(id *)v0;
  id v2 = *(id *)v0;
  return v1;
}

uint64_t sub_1E3DB5338(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E3DB5374()
{
  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(*(void *)(v0 + 88), *(unsigned __int8 *)(v0 + 96), *(void *)(v0 + 104), *(unsigned __int8 *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128));
}

uint64_t sub_1E3DB53B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1E3DB5338(a1, (uint64_t)v5);
  uint64_t v3 = MEMORY[0x1E4E79630](v5);
  uint64_t result = sub_1E3DB4784((uint64_t)v5);
  *a2 = v3;
  return result;
}

uint64_t sub_1E3DB53FC()
{
  return swift_unknownObjectWeakAssign();
}

void destroy for PresentationSource(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  if (*(unsigned __int8 *)(a1 + 48) != 255) {

  }
  if (*(void *)(a1 + 56))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  int v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 == 255)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  else
  {
    char v6 = v4 & 1;
    uint64_t v7 = *(void **)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    id v12 = v7;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(unsigned char *)(a1 + 48) = v6;
  }
  uint64_t v13 = *(void *)(a2 + 56);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v14;
    sub_1E3E775E0();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  return a1;
}

uint64_t assignWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  long long v5 = (long long *)(v4 + 8);
  char v6 = (long long *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(v4 + 48) == 255)
  {
    if (v7 == 255)
    {
      long long v10 = *v6;
      long long v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(v4 + 33) = *(_OWORD *)(a2 + 33);
      *long long v5 = v10;
      *(_OWORD *)(v4 + 24) = v11;
    }
    else
    {
      char v20 = v7 & 1;
      id v21 = *(void **)(a2 + 8);
      uint64_t v22 = *(void *)(a2 + 16);
      uint64_t v23 = *(void *)(a2 + 24);
      uint64_t v24 = *(void *)(a2 + 32);
      uint64_t v25 = *(void *)(a2 + 40);
      id v26 = v21;
      *(void *)(a1 + 8) = v21;
      *(void *)(a1 + 16) = v22;
      *(void *)(a1 + 24) = v23;
      *(void *)(a1 + 32) = v24;
      *(void *)(a1 + 40) = v25;
      *(unsigned char *)(a1 + 48) = v20;
    }
  }
  else if (v7 == 255)
  {
    sub_1E3DB56CC((id *)(v4 + 8));
    long long v8 = *(_OWORD *)(a2 + 33);
    long long v9 = *(_OWORD *)(a2 + 24);
    *long long v5 = *v6;
    v5[1] = v9;
    *(long long *)((char *)v5 + 25) = v8;
  }
  else
  {
    char v12 = v7 & 1;
    uint64_t v13 = *(void **)(a2 + 8);
    uint64_t v14 = *(void *)(a2 + 16);
    uint64_t v15 = *(void *)(a2 + 24);
    uint64_t v16 = *(void *)(a2 + 32);
    uint64_t v17 = *(void *)(a2 + 40);
    id v18 = v13;
    id v19 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = v13;
    *(void *)(a1 + 16) = v14;
    *(void *)(a1 + 24) = v15;
    *(void *)(a1 + 32) = v16;
    *(void *)(a1 + 40) = v17;
    *(unsigned char *)(a1 + 48) = v12;
  }
  uint64_t v27 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v27)
    {
      uint64_t v29 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v27;
      *(void *)(a1 + 64) = v29;
      sub_1E3E775E0();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v28 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v27;
  *(void *)(a1 + 64) = v28;
  sub_1E3E775E0();
  swift_release();
  return a1;
}

id *sub_1E3DB56CC(id *a1)
{
  return a1;
}

__n128 initializeWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  uint64_t v4 = (__n128 *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = v6;
  __n128 result = *(__n128 *)(a2 + 33);
  *(__n128 *)(v3 + 33) = result;
  if (v5)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(v3 + 56) = v5;
    *(void *)(v3 + 64) = v8;
  }
  else
  {
    __n128 result = *v4;
    *(__n128 *)(v3 + 56) = *v4;
  }
  return result;
}

uint64_t assignWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakTakeAssign();
  uint64_t v5 = (_OWORD *)(v4 + 8);
  if (*(unsigned __int8 *)(v4 + 48) == 255) {
    goto LABEL_4;
  }
  int v6 = *(unsigned __int8 *)(a2 + 48);
  if (v6 == 255)
  {
    sub_1E3DB56CC((id *)(v4 + 8));
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 24);
    *uint64_t v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v7;
    *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)(a2 + 33);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  long long v9 = *(void **)(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v6 & 1;

LABEL_6:
  uint64_t v10 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v12;
      return a1;
    }
LABEL_12:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource()
{
  return &type metadata for PresentationSource;
}

void destroy for PresentationSource.Position(id *a1)
{
}

uint64_t initializeWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  id v9 = *(id *)a2;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  id v9 = *(id *)a2;
  uint64_t v10 = *(void **)a1;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;

  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource.Position(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource.Position(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1E3DB5B3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1E3DB5B44(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource.Position()
{
  return &type metadata for PresentationSource.Position;
}

void JoeColorClampBrightnessAlgorithm.joeColor(for:contrasting:selecting:)(uint64_t a1, void *a2, char *a3)
{
  char v45 = *a3;
  int v4 = sub_1E3DB6A3C(&v45, a1);
  uint64_t v5 = v4;
  uint64_t v6 = v4[2];
  if (v6)
  {
    unint64_t v7 = 0;
    char v8 = v4 + 4;
    uint64_t v41 = v4[2];
    uint64_t v42 = v4;
    id v43 = v4 + 4;
    while (v7 < v5[2])
    {
      id v9 = (double *)&v8[6 * v7];
      double v11 = v9[1];
      double v10 = v9[2];
      double v12 = v9[3];
      double v13 = v9[4];
      if (v12 <= 0.98 || v10 >= 0.5 && v12 > 0.98)
      {
        id v14 = *(id *)v9;
        id v15 = objc_msgSend(v14, sel_CGColor);
        UISColorLuminance();
        double v17 = v16;

        id v18 = objc_msgSend(a2, sel_CGColor);
        UISColorLuminance();
        double v20 = v19;

        if (v17 >= v20) {
          double v21 = v17;
        }
        else {
          double v21 = v20;
        }
        if (v17 >= v20) {
          double v22 = v20;
        }
        else {
          double v22 = v17;
        }
        if ((v21 + 0.05) / (v22 + 0.05) >= 4.5) {
          goto LABEL_44;
        }
        uint64_t v44 = v14;
        if (qword_1EBFE3D90 != -1) {
          swift_once();
        }
        uint64_t v23 = (double *)off_1EBFE2D30;
        uint64_t v24 = *((void *)off_1EBFE2D30 + 2);
        if (v24)
        {
          uint64_t v25 = qword_1EBFE3D80;
          swift_bridgeObjectRetain();
          if (v25 != -1) {
            swift_once();
          }
          uint64_t v26 = 0;
          while (1)
          {
            uint64_t v27 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              break;
            }
            double v28 = v23[v26 + 4];
            double v29 = *(double *)&xmmword_1EBFE3D68;
            BOOL v30 = *(double *)&xmmword_1EBFE3D68 > v11 || v11 > *((double *)&xmmword_1EBFE3D68 + 1);
            double v31 = v11;
            if (!v30)
            {
              if (qword_1EAE244F8 != -1)
              {
                swift_once();
                double v29 = *(double *)&xmmword_1EBFE3D68;
              }
              if (v29 >= v11 - *(double *)&qword_1EAE288B0) {
                double v31 = v11 - *(double *)&qword_1EAE288B0;
              }
              else {
                double v31 = v29;
              }
            }
            id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithHue_saturation_brightness_alpha_, v31, v10, v28, v13);
            id v33 = objc_msgSend(v32, sel_CGColor);
            UISColorLuminance();
            double v35 = v34;

            id v36 = objc_msgSend(a2, sel_CGColor);
            UISColorLuminance();
            double v38 = v37;

            if (v35 >= v38) {
              double v39 = v35;
            }
            else {
              double v39 = v38;
            }
            if (v35 >= v38) {
              double v40 = v38;
            }
            else {
              double v40 = v35;
            }
            if ((v39 + 0.05) / (v40 + 0.05) >= 4.5)
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              return;
            }

            ++v26;
            if (v27 == v24)
            {

              swift_bridgeObjectRelease();
              uint64_t v6 = v41;
              uint64_t v5 = v42;
              goto LABEL_40;
            }
          }
          __break(1u);
          break;
        }

LABEL_40:
        char v8 = v43;
      }
      if (++v7 == v6) {
        goto LABEL_44;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_44:
    swift_bridgeObjectRelease();
  }
}

BOOL sub_1E3DB5ED8(double *a1, double *a2)
{
  return a1[5] == a2[5] && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3] && a1[4] == a2[4];
}

BOOL sub_1E3DB5F20(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 40) < *(double *)(a2 + 40);
}

BOOL sub_1E3DB5F34(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 40) >= *(double *)(a1 + 40);
}

BOOL sub_1E3DB5F48(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 40) >= *(double *)(a2 + 40);
}

BOOL sub_1E3DB5F5C(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 40) < *(double *)(a1 + 40);
}

double sub_1E3DB5F70()
{
  double result = 0.127777778;
  xmmword_1EBFE3D68 = xmmword_1E3E91F20;
  return result;
}

void sub_1E3DB5F88()
{
  qword_1EAE288B0 = 0x3F9C71C71C71C71CLL;
}

void sub_1E3DB5FA4()
{
  off_1EBFE2D30 = &unk_1F3F47DE0;
}

void sub_1E3DB5FB8(uint64_t a1, void *a2, char *a3)
{
}

uint64_t sub_1E3DB5FD4(void **a1)
{
  id v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_1E3E12960(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1E3DB6044(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1E3DB6044(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1E3E7E0D0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v92 = *a1;
      uint64_t v93 = *a1 + 40;
      uint64_t v94 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v96 = *(double *)(v92 + 48 * i + 40);
        uint64_t v97 = v94;
        uint64_t v98 = v93;
        do
        {
          if (v96 >= *(double *)v98) {
            break;
          }
          if (!v92) {
            goto LABEL_141;
          }
          uint64_t v99 = v98 + 8;
          uint64_t v100 = *(void *)(v98 + 8);
          long long v101 = *(_OWORD *)(v98 + 16);
          long long v102 = *(_OWORD *)(v98 + 32);
          long long v103 = *(_OWORD *)(v98 - 24);
          *(_OWORD *)(v98 + 8) = *(_OWORD *)(v98 - 40);
          *(_OWORD *)(v98 + 24) = v103;
          long long v104 = *(_OWORD *)(v98 - 8);
          *(void *)(v98 - 40) = v100;
          *(_OWORD *)(v98 - 32) = v101;
          *(_OWORD *)(v98 - 16) = v102;
          *(double *)uint64_t v98 = v96;
          v98 -= 48;
          *(_OWORD *)(v99 + 32) = v104;
        }
        while (!__CFADD__(v97++, 1));
        v93 += 48;
        --v94;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v114 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      double v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v106 = v12;
      uint64_t v116 = v9;
      if (v13 >= 2)
      {
        uint64_t v107 = *v114;
        do
        {
          unint64_t v108 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v107) {
            goto LABEL_145;
          }
          uint64_t v109 = v106;
          uint64_t v110 = *(void *)&v106[16 * v108 + 32];
          uint64_t v111 = *(void *)&v106[16 * v13 + 24];
          sub_1E3DB677C((double *)(v107 + 48 * v110), (double *)(v107 + 48 * *(void *)&v106[16 * v13 + 16]), v107 + 48 * v111, __dst);
          if (v1) {
            break;
          }
          if (v111 < v110) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v109 = sub_1E3DF0BBC((uint64_t)v109);
          }
          if (v108 >= *((void *)v109 + 2)) {
            goto LABEL_134;
          }
          uint64_t v112 = &v109[16 * v108 + 32];
          *(void *)uint64_t v112 = v110;
          *((void *)v112 + 1) = v111;
          unint64_t v113 = *((void *)v109 + 2);
          if (v13 > v113) {
            goto LABEL_135;
          }
          memmove(&v109[16 * v13 + 16], &v109[16 * v13 + 32], 16 * (v113 - v13));
          uint64_t v106 = v109;
          *((void *)v109 + 2) = v113 - 1;
          unint64_t v13 = v113 - 1;
        }
        while (v113 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v116 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1E3E7D0F0();
    *(void *)(v8 + 16) = v7;
    uint64_t v116 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v115 = *a1 + 136;
  double v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v117 = v6;
  uint64_t v118 = v3;
  uint64_t v119 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 48 * v10 + 40);
      double v16 = *(double *)(v11 + 48 * v14 + 40);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        double v17 = (double *)(v115 + 48 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 6;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 48 * v10;
          uint64_t v21 = 48 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = (_OWORD *)(v11 + v21);
              uint64_t v25 = *(void *)(v11 + v21);
              uint64_t v26 = v11 + v20;
              uint64_t v27 = *(void *)(v11 + v21 + 40);
              long long v28 = *(_OWORD *)(v11 + v21 + 8);
              long long v29 = *(_OWORD *)(v11 + v21 + 24);
              long long v31 = *(_OWORD *)(v11 + v20 - 32);
              long long v30 = *(_OWORD *)(v11 + v20 - 16);
              *uint64_t v24 = *(_OWORD *)(v11 + v20 - 48);
              v24[1] = v31;
              _DWORD v24[2] = v30;
              *(void *)(v26 - 48) = v25;
              *(_OWORD *)(v26 - 40) = v28;
              *(_OWORD *)(v26 - 24) = v29;
              *(void *)(v26 - 8) = v27;
            }
            ++v23;
            v20 -= 48;
            v21 += 48;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v32 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v32 >= v3) {
      uint64_t v32 = v3;
    }
    if (v32 < v14) {
      break;
    }
    if (v10 != v32)
    {
      id v33 = (uint64_t *)(v11 + 48 * v10);
      do
      {
        double v34 = *(double *)(v11 + 48 * v10 + 40);
        uint64_t v35 = v14;
        id v36 = v33;
        do
        {
          if (v34 >= *((double *)v36 - 1)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v37 = *(double *)v36;
          long long v38 = *(_OWORD *)(v36 + 1);
          long long v39 = *(_OWORD *)(v36 + 3);
          long long v40 = *((_OWORD *)v36 - 2);
          *(_OWORD *)id v36 = *((_OWORD *)v36 - 3);
          *((_OWORD *)v36 + 1) = v40;
          *((_OWORD *)v36 + 2) = *((_OWORD *)v36 - 1);
          *(_OWORD *)(v36 - 5) = v38;
          *(_OWORD *)(v36 - 3) = v39;
          *((double *)v36 - 1) = v34;
          *((double *)v36 - 6) = v37;
          v36 -= 6;
          ++v35;
        }
        while (v10 != v35);
        ++v10;
        v33 += 6;
      }
      while (v10 != v32);
      uint64_t v10 = v32;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v12 = sub_1E3DF0694(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v42 = *((void *)v12 + 2);
    unint64_t v41 = *((void *)v12 + 3);
    unint64_t v13 = v42 + 1;
    uint64_t v11 = v119;
    if (v42 >= v41 >> 1)
    {
      id v91 = sub_1E3DF0694((char *)(v41 > 1), v42 + 1, 1, v12);
      uint64_t v11 = v119;
      double v12 = v91;
    }
    *((void *)v12 + 2) = v13;
    id v43 = v12 + 32;
    uint64_t v44 = &v12[16 * v42 + 32];
    *(void *)uint64_t v44 = v14;
    *((void *)v44 + 1) = v10;
    if (v42)
    {
      while (1)
      {
        unint64_t v45 = v13 - 1;
        if (v13 >= 4)
        {
          id v50 = &v43[16 * v13];
          uint64_t v51 = *((void *)v50 - 8);
          uint64_t v52 = *((void *)v50 - 7);
          BOOL v56 = __OFSUB__(v52, v51);
          uint64_t v53 = v52 - v51;
          if (v56) {
            goto LABEL_120;
          }
          uint64_t v55 = *((void *)v50 - 6);
          uint64_t v54 = *((void *)v50 - 5);
          BOOL v56 = __OFSUB__(v54, v55);
          uint64_t v48 = v54 - v55;
          char v49 = v56;
          if (v56) {
            goto LABEL_121;
          }
          unint64_t v57 = v13 - 2;
          CGFloat v58 = &v43[16 * v13 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v56 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v56) {
            goto LABEL_123;
          }
          BOOL v56 = __OFADD__(v48, v61);
          uint64_t v62 = v48 + v61;
          if (v56) {
            goto LABEL_126;
          }
          if (v62 >= v53)
          {
            uint64_t v80 = &v43[16 * v45];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v56 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v56) {
              goto LABEL_130;
            }
            BOOL v73 = v48 < v83;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v74 = *((void *)v12 + 4);
            uint64_t v75 = *((void *)v12 + 5);
            BOOL v56 = __OFSUB__(v75, v74);
            uint64_t v67 = v75 - v74;
            char v68 = v56;
            goto LABEL_77;
          }
          uint64_t v47 = *((void *)v12 + 4);
          uint64_t v46 = *((void *)v12 + 5);
          BOOL v56 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          char v49 = v56;
        }
        if (v49) {
          goto LABEL_122;
        }
        unint64_t v57 = v13 - 2;
        uint64_t v63 = &v43[16 * v13 - 32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v66 = __OFSUB__(v64, v65);
        uint64_t v67 = v64 - v65;
        char v68 = v66;
        if (v66) {
          goto LABEL_125;
        }
        uint64_t v69 = &v43[16 * v45];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v56 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v56) {
          goto LABEL_128;
        }
        if (__OFADD__(v67, v72)) {
          goto LABEL_129;
        }
        if (v67 + v72 >= v48)
        {
          BOOL v73 = v48 < v72;
LABEL_83:
          if (v73) {
            unint64_t v45 = v57;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v68) {
          goto LABEL_124;
        }
        uint64_t v76 = &v43[16 * v45];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v56 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v56) {
          goto LABEL_127;
        }
        if (v79 < v67) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v84 = v45 - 1;
        if (v45 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v85 = v12;
        uint64_t v86 = &v43[16 * v84];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = &v43[16 * v45];
        uint64_t v89 = *((void *)v88 + 1);
        sub_1E3DB677C((double *)(v11 + 48 * *(void *)v86), (double *)(v11 + 48 * *(void *)v88), v11 + 48 * v89, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v89 < v87) {
          goto LABEL_117;
        }
        if (v45 > *((void *)v85 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v43[16 * v84 + 8] = v89;
        unint64_t v90 = *((void *)v85 + 2);
        if (v45 >= v90) {
          goto LABEL_119;
        }
        double v12 = v85;
        unint64_t v13 = v90 - 1;
        memmove(&v43[16 * v45], v88 + 16, 16 * (v90 - 1 - v45));
        *((void *)v85 + 2) = v90 - 1;
        uint64_t v11 = v119;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v117;
    uint64_t v3 = v118;
    if (v10 >= v118)
    {
      uint64_t v9 = v116;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1E3E7DF70();
  __break(1u);
  return result;
}

uint64_t sub_1E3DB677C(double *__src, double *a2, unint64_t a3, double *__dst)
{
  int v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  long long v29 = __src;
  long long v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[6 * v11] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      double v18 = &v4[6 * v11];
      uint64_t v27 = (char *)v18;
      long long v29 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        double v19 = (double *)(a3 - 48);
        do
        {
          uint64_t v20 = v19 + 6;
          if (*(v18 - 1) >= *(v6 - 1))
          {
            uint64_t v27 = (char *)(v18 - 6);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
            {
              long long v24 = *((_OWORD *)v18 - 3);
              long long v25 = *((_OWORD *)v18 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 2) = v25;
              *(_OWORD *)double v19 = v24;
            }
            uint64_t v21 = v6;
            v18 -= 6;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 6;
            if (v20 != v6 || v19 >= v6)
            {
              long long v22 = *(_OWORD *)v21;
              long long v23 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v19 + 2) = v23;
              *(_OWORD *)double v19 = v22;
            }
            long long v29 = v6 - 6;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 6;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1E3DF0908((void **)&v29, (const void **)&v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[6 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    double v12 = &v4[6 * v9];
    uint64_t v27 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (v6[5] >= v13[5])
        {
          int v4 = v13 + 6;
          double v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 6;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 6;
          }
        }
        else
        {
          uint64_t v14 = v6 + 6;
          double v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        long long v17 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v7 + 2) = v17;
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 6;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        long long v28 = v4;
        long long v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1E3E7E010();
  __break(1u);
  return result;
}

void *sub_1E3DB6A3C(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = (void *)MEMORY[0x1E4FBC860];
  uint64_t v83 = (void *)MEMORY[0x1E4FBC860];
  int v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 == 255) {
    return result;
  }
  id v6 = Color.color.getter(*(void *)(a2 + 56), v5);
  sub_1E3E2DDA0(v6, (uint64_t)v84);
  sub_1E3DB70FC((uint64_t)v84, (uint64_t)v97);
  if (v98 == 1)
  {

    return (void *)MEMORY[0x1E4FBC860];
  }
  long long v81 = v97[1];
  long long v82 = v97[0];
  uint64_t v7 = *(void *)(a2 + 88);
  int v8 = *(unsigned __int8 *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 104);
  int v10 = *(unsigned __int8 *)(a2 + 112);
  uint64_t v79 = *(void *)(a2 + 120);
  int v11 = *(unsigned __int8 *)(a2 + 128);
  double v12 = (void *)MEMORY[0x1E4FBC860];
  if ((v3 & 2) != 0)
  {
    int v13 = *(unsigned __int8 *)(a2 + 80);
    if (v13 != 255)
    {
      id v14 = Color.color.getter(*(void *)(a2 + 72), v13);
      id v15 = objc_msgSend(v6, sel_CGColor);
      UISColorLuminance();
      double v17 = v16;

      id v18 = objc_msgSend(v14, sel_CGColor);
      UISColorLuminance();
      double v20 = v19;

      if (v17 >= v20) {
        double v21 = v17;
      }
      else {
        double v21 = v20;
      }
      if (v17 >= v20) {
        double v17 = v20;
      }
      id v22 = v14;
      sub_1E3E2DDA0(v22, (uint64_t)v85);
      sub_1E3DB70FC((uint64_t)v85, (uint64_t)v95);
      if (v96 == 1)
      {

        double v12 = (void *)MEMORY[0x1E4FBC860];
      }
      else
      {
        double v23 = (v21 + 0.05) / (v17 + 0.05);
        long long v72 = v95[1];
        long long v75 = v95[0];
        id v24 = v22;
        double v12 = sub_1E3CB7E58(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v26 = v12[2];
        unint64_t v25 = v12[3];
        unint64_t v27 = v26 + 1;
        if (v26 >= v25 >> 1)
        {
          uint64_t v71 = sub_1E3CB7E58((void *)(v25 > 1), v26 + 1, 1, v12);
          unint64_t v27 = v26 + 1;
          double v12 = v71;
        }
        void v12[2] = v27;
        long long v28 = &v12[6 * v26];
        v28[4] = v24;
        *(_OWORD *)(v28 + 5) = v75;
        *(_OWORD *)(v28 + 7) = v72;
        *((double *)v28 + 9) = v23;

        uint64_t v83 = v12;
      }
    }
  }
  if ((v3 & 4) != 0 && v8 != 255)
  {
    id v29 = Color.color.getter(v7, v8);
    id v30 = objc_msgSend(v6, sel_CGColor);
    UISColorLuminance();
    double v32 = v31;

    id v33 = objc_msgSend(v29, sel_CGColor);
    UISColorLuminance();
    double v35 = v34;

    if (v32 >= v35) {
      double v36 = v32;
    }
    else {
      double v36 = v35;
    }
    if (v32 < v35) {
      double v35 = v32;
    }
    id v37 = v29;
    sub_1E3E2DDA0(v37, (uint64_t)v86);
    sub_1E3DB70FC((uint64_t)v86, (uint64_t)v93);
    if (v94 == 1)
    {
    }
    else
    {
      double v38 = v35 + 0.05;
      long long v73 = v93[1];
      long long v76 = v93[0];
      id v39 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v12 = sub_1E3CB7E58(0, v12[2] + 1, 1, v12);
      }
      unint64_t v41 = v12[2];
      unint64_t v40 = v12[3];
      if (v41 >= v40 >> 1) {
        double v12 = sub_1E3CB7E58((void *)(v40 > 1), v41 + 1, 1, v12);
      }
      void v12[2] = v41 + 1;
      unint64_t v42 = &v12[6 * v41];
      v42[4] = v39;
      *(_OWORD *)(v42 + 5) = v76;
      *(_OWORD *)(v42 + 7) = v73;
      *((double *)v42 + 9) = (v36 + 0.05) / v38;

      uint64_t v83 = v12;
    }
  }
  if ((v3 & 8) != 0 && v10 != 255)
  {
    id v43 = Color.color.getter(v9, v10);
    id v44 = objc_msgSend(v6, sel_CGColor);
    UISColorLuminance();
    double v46 = v45;

    id v47 = objc_msgSend(v43, sel_CGColor);
    UISColorLuminance();
    double v49 = v48;

    if (v46 >= v49) {
      double v50 = v46;
    }
    else {
      double v50 = v49;
    }
    if (v46 < v49) {
      double v49 = v46;
    }
    id v51 = v43;
    sub_1E3E2DDA0(v51, (uint64_t)v87);
    sub_1E3DB70FC((uint64_t)v87, (uint64_t)v91);
    if (v92 == 1)
    {
    }
    else
    {
      double v52 = v49 + 0.05;
      long long v74 = v91[1];
      long long v77 = v91[0];
      id v53 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v12 = sub_1E3CB7E58(0, v12[2] + 1, 1, v12);
      }
      unint64_t v55 = v12[2];
      unint64_t v54 = v12[3];
      if (v55 >= v54 >> 1) {
        double v12 = sub_1E3CB7E58((void *)(v54 > 1), v55 + 1, 1, v12);
      }
      void v12[2] = v55 + 1;
      BOOL v56 = &v12[6 * v55];
      v56[4] = v53;
      *(_OWORD *)(v56 + 5) = v77;
      *(_OWORD *)(v56 + 7) = v74;
      *((double *)v56 + 9) = (v50 + 0.05) / v52;

      uint64_t v83 = v12;
    }
  }
  if ((v3 & 0x10) != 0 && v11 != 255)
  {
    id v57 = Color.color.getter(v79, v11);
    id v58 = objc_msgSend(v6, asc_1E6E2142D);
    UISColorLuminance();
    double v60 = v59;

    id v61 = objc_msgSend(v57, asc_1E6E2142D);
    UISColorLuminance();
    double v63 = v62;

    if (v60 >= v63) {
      double v64 = v60;
    }
    else {
      double v64 = v63;
    }
    if (v60 < v63) {
      double v63 = v60;
    }
    id v65 = v57;
    sub_1E3E2DDA0(v65, (uint64_t)v88);
    sub_1E3DB70FC((uint64_t)v88, (uint64_t)v89);
    if (v90 != 1)
    {
      double v66 = v63 + 0.05;
      long long v78 = v89[1];
      long long v80 = v89[0];
      id v67 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v12 = sub_1E3CB7E58(0, v12[2] + 1, 1, v12);
      }
      unint64_t v69 = v12[2];
      unint64_t v68 = v12[3];
      if (v69 >= v68 >> 1) {
        double v12 = sub_1E3CB7E58((void *)(v68 > 1), v69 + 1, 1, v12);
      }
      void v12[2] = v69 + 1;
      uint64_t v70 = &v12[6 * v69];
      v70[4] = v67;
      *(_OWORD *)(v70 + 5) = v80;
      *(_OWORD *)(v70 + 7) = v78;
      *((double *)v70 + 9) = (v64 + 0.05) / v66;

      uint64_t v83 = v12;
      if (!v12[2]) {
        goto LABEL_55;
      }
      goto LABEL_54;
    }
  }
  if (v12[2]) {
LABEL_54:
  }
    sub_1E3DB5FD4(&v83);
LABEL_55:
  if (v3)
  {
    id v99 = v6;
    long long v100 = v82;
    long long v101 = v81;
    uint64_t v102 = 0;
    sub_1E3CBDEB8(0, 0, &v99);
  }
  else
  {
  }
  return v83;
}

ValueMetadata *type metadata accessor for JoeColorClampBrightnessAlgorithm()
{
  return &type metadata for JoeColorClampBrightnessAlgorithm;
}

uint64_t sub_1E3DB70FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  int v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JoeColorClampBrightnessAlgorithm.Candidate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JoeColorClampBrightnessAlgorithm.Candidate()
{
  return &type metadata for JoeColorClampBrightnessAlgorithm.Candidate;
}

unint64_t sub_1E3DB7310()
{
  unint64_t result = qword_1EAE288B8[0];
  if (!qword_1EAE288B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE288B8);
  }
  return result;
}

uint64_t AssetProcessingStep<>.resize(for:using:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1E3E78D20();
  double v7 = v6;
  double v9 = v8;
  sub_1E3E78D40();

  return AssetProcessingStep<>.resize(to:scale:using:)(a1, a2, a3, v7, v9, v10);
}

uint64_t AssetProcessingStep<>.resize(to:scale:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v12 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  id v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C1B2BC(v15, (uint64_t)v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v6, a2);
  return sub_1E3DB74FC(v18, (uint64_t)v14, a2, a3, a4, a5, a6);
}

uint64_t sub_1E3DB74FC@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  unint64_t v25 = a1;
  uint64_t v24 = sub_1E3E78E70();
  uint64_t v13 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v24 - v17;
  double v19 = (int *)type metadata accessor for ResizeArtworkProcessingStep();
  uint64_t v20 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a4 + v19[9], a2, a3);
  sub_1E3E79780();
  sub_1E3E78E40();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a2, a3);
  uint64_t v21 = v24;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a4, v18, v21);
  id v22 = (double *)(a4 + v19[10]);
  *id v22 = a5;
  v22[1] = a6;
  *(double *)(a4 + v19[11]) = a7;
  return sub_1E3C1B644(v25, a4 + v19[12]);
}

uint64_t ResizeArtworkProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E78E70();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ResizeArtworkProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  long long v75 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v79 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = sub_1E3E78D00();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = sub_1E3E7A8F0();
  uint64_t v68 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v65 = (char *)&v59 - v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v69 = v7;
  uint64_t v62 = WitnessTable;
  uint64_t v67 = sub_1E3E78B30();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  double v64 = (char *)&v59 - v10;
  uint64_t v72 = AssociatedTypeWitness;
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v11);
  long long v78 = (char *)&v59 - v12;
  uint64_t v13 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](v14);
  id v61 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v15;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v59 - v17;
  uint64_t v19 = sub_1E3E78E70();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v2 + *(int *)(a1 + 36);
  uint64_t v77 = v5;
  sub_1E3E79780();
  sub_1E3E78D20();
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  unint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  v27(v22, v19);
  sub_1E3E78D20();
  v83.CGFloat width = v28;
  v83.CGFloat height = v29;
  v82.CGFloat width = v24;
  v82.CGFloat height = v26;
  BOOL v30 = CGSizeEqualToSize(v82, v83);
  uint64_t v76 = v13;
  double v31 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v70 = v3;
  v31(v18, v3, a1);
  if (!v30)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v18, a1);
    uint64_t v36 = v72;
    goto LABEL_5;
  }
  double v59 = v31;
  sub_1E3E79780();
  sub_1E3E78D40();
  double v33 = v32;
  v27(v22, v19);
  sub_1E3E78D40();
  double v35 = v34;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v18, a1);
  uint64_t v36 = v72;
  double v31 = v59;
  if (v33 != v35)
  {
LABEL_5:
    sub_1E3E79790();
    uint64_t v40 = v70;
    sub_1E3C1B2BC(v70 + *(int *)(a1 + 48), (uint64_t)v81);
    unint64_t v41 = (uint64_t *)(v40 + *(int *)(a1 + 40));
    uint64_t v42 = *v41;
    uint64_t v43 = v41[1];
    uint64_t v44 = *(void *)(v40 + *(int *)(a1 + 44));
    double v45 = v61;
    v31(v61, v40, a1);
    sub_1E3C1B644(v81, (uint64_t)v80);
    uint64_t v46 = v76;
    unint64_t v47 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    unint64_t v48 = (v60 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (v48 + 47) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = v36;
    uint64_t v51 = swift_allocObject();
    uint64_t v52 = v79;
    *(void *)(v51 + 16) = v77;
    *(void *)(v51 + 24) = v52;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v51 + v47, v45, a1);
    sub_1E3C1B644(v80, v51 + v48);
    id v53 = (void *)(v51 + v49);
    *id v53 = v42;
    v53[1] = v43;
    *(void *)(v51 + ((v49 + 23) & 0xFFFFFFFFFFFFFFF8)) = v44;
    unint64_t v54 = v65;
    unint64_t v55 = v78;
    sub_1E3E7ACB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v55, v50);
    swift_getWitnessTable();
    sub_1E3E797C0();
    uint64_t v56 = v69;
    sub_1E3D9E1A4();
    id v57 = v64;
    sub_1E3E7AB40();
    sub_1E3C10CE0((uint64_t)v81, &qword_1EBFE6360);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v54, v56);
    uint64_t v58 = v67;
    swift_getWitnessTable();
    uint64_t v38 = sub_1E3E7AB70();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v57, v58);
    goto LABEL_6;
  }
  id v37 = v78;
  sub_1E3E79790();
  uint64_t v38 = sub_1E3E7AB70();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v37, v36);
LABEL_6:
  *long long v75 = v38;
  return result;
}

uint64_t sub_1E3DB7F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, UIImage *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  uint64_t v119 = a5;
  uint64_t v122 = a4;
  uint64_t v110 = a3;
  uint64_t v108 = a1;
  uint64_t v96 = a6;
  uint64_t v95 = sub_1E3E7A6E0();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v93 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1E3E78740();
  MEMORY[0x1F4188790](v100);
  id v99 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1E3E78E70();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v105 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1E3E77D00();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v101 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v113 = (char *)&v92 - v18;
  uint64_t v19 = sub_1E3E7A640();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v116 = v19;
  uint64_t v117 = v20;
  MEMORY[0x1F4188790](v19);
  char v98 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v112 = (char *)&v92 - v23;
  MEMORY[0x1F4188790](v24);
  CGFloat v26 = (char *)&v92 - v25;
  uint64_t v121 = sub_1E3E7A6D0();
  uint64_t v27 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  uint64_t v97 = (char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  double v31 = (char *)&v92 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v120 = ((char *)&v92 - v33);
  uint64_t v34 = sub_1E3E77E50();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  id v37 = (char *)&v92 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = a2;
  sub_1E3E78E10();
  if (*((void *)&v126 + 1))
  {
    __swift_project_boxed_opaque_existential_1(&v125, *((uint64_t *)&v126 + 1));
    long long v104 = (void (*)(char *, uint64_t))sub_1E3E7A4C0();
    unint64_t v39 = v38;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v125);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v125, &qword_1EBFE6360);
    sub_1E3E77E40();
    long long v104 = (void (*)(char *, uint64_t))sub_1E3E77E30();
    unint64_t v39 = v40;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  }
  sub_1E3E7A680();
  sub_1E3E7A680();
  sub_1E3E7A6A0();
  sub_1E3E7A610();
  uint64_t v114 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v115 = v27 + 8;
  v114(v31, v121);
  swift_bridgeObjectRetain();
  unint64_t v41 = sub_1E3E7A6A0();
  int v42 = sub_1E3E7D760();
  char v43 = sub_1E3E7DB50();
  uint64_t v45 = v116;
  uint64_t v44 = v117;
  if (v43)
  {
    uint64_t v46 = v26;
    unint64_t v47 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
    unint64_t v111 = (v117 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    LODWORD(v92) = v42;
    unint64_t v48 = v112;
    v47(v112, v46, v116);
    unint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    *(void *)&long long v125 = v50;
    *(_DWORD *)unint64_t v49 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v123 = sub_1E3C150B8((uint64_t)v104, v39, (uint64_t *)&v125);
    uint64_t v44 = v117;
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v51 = sub_1E3E7A620();
    uint64_t v52 = v47;
    CGFloat v26 = v46;
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v41, (os_signpost_type_t)v92, v51, "ResizeImage", "[identifier=%{name=identifier}s] Resize", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v50, -1, -1);
    id v53 = v49;
    uint64_t v45 = v116;
    MEMORY[0x1E4E79510](v53, -1, -1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v45);
    unint64_t v54 = v111;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
    unint64_t v54 = (v44 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    unint64_t v48 = v112;
  }
  char v92 = v52;
  unint64_t v111 = v54;
  v52(v48, v26, v45);
  sub_1E3E7A720();
  swift_allocObject();
  uint64_t v116 = sub_1E3E7A710();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v44 + 8);
  uint64_t v55 = v44 + 8;
  long long v104 = v56;
  v56(v26, v45);
  v114((char *)v120, v121);
  type metadata accessor for ResizeArtworkProcessingStep();
  swift_getWitnessTable();
  sub_1E3E797C0();
  uint64_t v57 = (uint64_t)v113;
  if (v124)
  {
    __swift_project_boxed_opaque_existential_1(&v123, v124);
    __swift_project_boxed_opaque_existential_1(v110, v110[3]);
    swift_getDynamicType();
    sub_1E3E7E330();
    sub_1E3E7A4D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v123);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v123, &qword_1EBFE6360);
    long long v125 = 0u;
    long long v126 = 0u;
    uint64_t v127 = 0;
  }
  uint64_t v58 = v105;
  sub_1E3E79780();
  uint64_t v59 = v109;
  sub_1E3DB8FCC(v108, v57);
  if (v59)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v58, v107);
    return sub_1E3C10CE0((uint64_t)&v125, &qword_1EBFE20F8);
  }
  (*(void (**)(char *, uint64_t))(v106 + 8))(v58, v107);
  uint64_t v60 = v110[3];
  uint64_t v61 = v110[4];
  __swift_project_boxed_opaque_existential_1(v110, v60);
  uint64_t v62 = (UIImage *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double, double, double))(v61 + 16))(v57, v60, v61, a7, a8, a9);
  uint64_t v63 = v62;
  if (!v62 || (uint64_t v64 = sub_1E3D49D50(v62), v65 >> 60 == 15))
  {
    type metadata accessor for ResizeArtworkProcessingStep.ResizeError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v66 = 0;
    swift_willThrow();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v57, v103);
    return sub_1E3C10CE0((uint64_t)&v125, &qword_1EBFE20F8);
  }
  uint64_t v68 = v64;
  unint64_t v69 = v65;
  uint64_t v122 = v63;
  uint64_t v117 = v55;
  uint64_t v70 = (uint64_t)v99;
  sub_1E3E78E00();
  unint64_t v71 = v69;
  LOBYTE(v69) = *(unsigned char *)(v70 + *(int *)(v100 + 52));
  sub_1E3C2CBF8(v70);
  unsigned __int8 v72 = v69;
  unint64_t v73 = v71;
  uint64_t v74 = v68;
  sub_1E3DB918C(v72, v101);
  sub_1E3E77D60();
  sub_1E3D4B630((uint64_t)&v125, (uint64_t)&v123);
  if (v124)
  {
    __swift_project_boxed_opaque_existential_1(&v123, v124);
    sub_1E3E78CE0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v123);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v123, &qword_1EBFE20F8);
  }
  sub_1E3E7A680();
  long long v75 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  int v76 = sub_1E3E7D750();
  uint64_t v120 = v75;
  if (sub_1E3E7DB50())
  {
    LODWORD(v119) = v76;
    sub_1E3E775E0();
    uint64_t v77 = v93;
    sub_1E3E7A730();
    swift_release();
    uint64_t v78 = v94;
    uint64_t v79 = v95;
    int v80 = (*(uint64_t (**)(char *, uint64_t))(v94 + 88))(v77, v95);
    long long v81 = v120;
    if (v80 == *MEMORY[0x1E4FBD340])
    {
      CGSize v82 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
      CGSize v82 = "";
    }
    uint64_t v85 = v112;
    uint64_t v86 = v98;
    v92(v112, v98, v45);
    uint64_t v87 = v45;
    uint64_t v88 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v88 = 0;
    os_signpost_id_t v89 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v81, (os_signpost_type_t)v119, v89, "ResizeImage", v82, v88, 2u);
    MEMORY[0x1E4E79510](v88, -1, -1);
    sub_1E3C634A4(v74, v73);

    uint64_t v90 = v87;
    id v91 = v104;
    v104(v86, v87);
    v114(v97, v121);
    uint64_t v83 = v102;
    uint64_t v84 = v103;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v113, v103);
    sub_1E3C10CE0((uint64_t)&v125, &qword_1EBFE20F8);
    swift_release();
    v91(v85, v90);
  }
  else
  {
    sub_1E3C634A4(v74, v73);

    v104(v98, v45);
    v114(v97, v121);
    uint64_t v83 = v102;
    uint64_t v84 = v103;
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v57, v103);
    sub_1E3C10CE0((uint64_t)&v125, &qword_1EBFE20F8);
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 32))(v96, v101, v84);
  sub_1E3E78D00();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1E3DB8D7C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ResizeArtworkProcessingStep() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  unint64_t v4 = (*(void *)(*(void *)v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1E3E78E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5 + v2[11], v1);
  __swift_destroy_boxed_opaque_existential_0(v5 + v2[14]);
  __swift_destroy_boxed_opaque_existential_0(v0 + v4);

  return swift_deallocObject();
}

uint64_t type metadata accessor for ResizeArtworkProcessingStep()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E3DB8EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(UIImage **)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for ResizeArtworkProcessingStep() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1E3DB7F08(a1, v2 + v8, (void *)(v2 + v9), v5, v6, a2, *(double *)(v2 + ((v9 + 47) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v2 + ((v9 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v2 + ((((v9 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1E3DB8FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E78D00();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3DBA4A8(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = (char *)v10;
  }
  else
  {
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_1E3DB918C(4u, (uint64_t)v7);
    sub_1E3E77D60();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return sub_1E3C2B7E8(v11, v12);
    }
    sub_1E3C2B7E8(v11, v12);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15, v7, v4);
}

uint64_t sub_1E3DB918C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  int v18 = a1;
  uint64_t v2 = sub_1E3E77E50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1E3E77D00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = &v17[-v11];
  id v13 = objc_msgSend(self, sel_defaultManager);
  id v14 = objc_msgSend(v13, sel_temporaryDirectory);

  sub_1E3E77C90();
  sub_1E3E77E40();
  sub_1E3E77E30();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1E3E77C60();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v15(v9, v6);
  uint64_t v20 = 0x697365722E706D74;
  unint64_t v21 = 0xEB000000002E657ALL;
  if (v18 != 4) {
    sub_1E3E78AD0();
  }
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E77C70();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(unsigned char *, uint64_t))v15)(v12, v6);
}

BOOL static ResizeArtworkProcessingStep.ResizeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ResizeArtworkProcessingStep.ResizeError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t ResizeArtworkProcessingStep.ResizeError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DB94C4()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DB9500()
{
  return swift_getWitnessTable();
}

uint64_t sub_1E3DB951C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DB9568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1E3DB9570()
{
  uint64_t result = sub_1E3E78E70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1E3DB965C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = *(void *)(v10 + 64) + 7;
  unint64_t v14 = ((((((v13 + ((v8 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 40;
  unsigned int v15 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v15 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v19 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    unint64_t v20 = ((unint64_t)a2 + v12) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v19, v20, v9);
    unint64_t v21 = (_OWORD *)((v13 + (((unint64_t)a1 + v12) & v19)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (_OWORD *)((v13 + v20) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v21 = *v22;
    uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = *(void *)(v26 + 24);
    *(void *)(v25 + 24) = v27;
    *(void *)(v25 + 32) = *(void *)(v26 + 32);
    (**(void (***)(void))(v27 - 8))();
  }
  return a1;
}

uint64_t sub_1E3DB9870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + a1;
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  unint64_t v10 = (((((*(void *)(v8 + 56) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  return __swift_destroy_boxed_opaque_existential_0(v10);
}

uint64_t sub_1E3DB9948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 48) + 7;
  uint64_t v16 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (_OWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  uint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)(v21 + 24);
  *(void *)(v20 + 24) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  (**(void (***)(void))(v22 - 8))();
  return a1;
}

uint64_t sub_1E3DB9A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 40) + 7;
  uint64_t v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  uint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1E3DB9B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 32) + 7;
  uint64_t v16 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (_OWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  uint64_t v18 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v18;
  unint64_t v20 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v23 = *(_OWORD *)v21;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(_OWORD *)unint64_t v20 = v23;
  *(_OWORD *)(v20 + 16) = v22;
  return a1;
}

uint64_t sub_1E3DB9CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 24) + 7;
  uint64_t v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  uint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v20);
  long long v22 = *(_OWORD *)v21;
  long long v23 = *(_OWORD *)(v21 + 16);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(_OWORD *)unint64_t v20 = v22;
  *(_OWORD *)(v20 + 16) = v23;
  return a1;
}

uint64_t sub_1E3DB9DC0(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  uint64_t v14 = *(void *)(v9 + 64) + 7;
  if (v12 < a2)
  {
    unint64_t v15 = ((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 40;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v12 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v15);
        if (!v20) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v20) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1E3DBA028);
      case 4:
        int v20 = *(int *)((char *)a1 + v15);
        if (!v20) {
          break;
        }
LABEL_24:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v12 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v8 == v12)
  {
    uint64_t v24 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v7 + 48);
    return v24(a1, v8, v6);
  }
  else
  {
    unint64_t v25 = ((unint64_t)a1 + v13) & ~v11;
    if (v10 == v12)
    {
      unint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(v25);
    }
    else
    {
      unint64_t v27 = *(void *)(((((((v14 + v25) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 24);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      return (v27 + 1);
    }
  }
}

double sub_1E3DBA03C(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1E3E78E70();
  uint64_t v10 = *(void *)(v8 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  if (v13 <= v11) {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64) + v14;
  uint64_t v17 = *(void *)(v12 + 64) + 7;
  unint64_t v18 = ((((((v17 + (v16 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 40;
  if (v15 >= a3)
  {
    int v21 = 0;
    int v22 = a2 - v15;
    if (a2 <= v15)
    {
LABEL_19:
      uint64_t v23 = ~v14;
      switch(v21)
      {
        case 1:
          *((unsigned char *)a1 + v18) = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v18) = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_48;
        case 4:
          *(_DWORD *)((char *)a1 + v18) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v11 == v15)
            {
              unint64_t v26 = *(void (**)(_DWORD *, uint64_t))(v10 + 56);
              v26(a1, a2);
            }
            else
            {
              unint64_t v27 = ((unint64_t)a1 + v16) & v23;
              if (v13 == v15)
              {
                uint64_t v28 = *(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 56);
                v28(v27, a2, v13);
              }
              else
              {
                unint64_t v29 = (((((v17 + v27) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
                if ((a2 & 0x80000000) != 0)
                {
                  double result = 0.0;
                  *(_OWORD *)(v29 + 8) = 0u;
                  *(_OWORD *)(v29 + 24) = 0u;
                  *(void *)unint64_t v29 = a2 ^ 0x80000000;
                }
                else
                {
                  *(void *)(v29 + 24) = (a2 - 1);
                }
              }
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    if (((((((v17 + (v16 & ~v14)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      unsigned int v19 = a3 - v15 + 1;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
    int v22 = a2 - v15;
    if (a2 <= v15) {
      goto LABEL_19;
    }
  }
  if (((((((v17 + (v16 & ~v14)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    int v24 = v22;
  }
  else {
    int v24 = 1;
  }
  if (((((((v17 + (v16 & ~v14)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    int v25 = ~v15 + a2;
    bzero(a1, ((((((v17 + (v16 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v25;
  }
  switch(v21)
  {
    case 1:
      *((unsigned char *)a1 + v18) = v24;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v18) = v24;
      break;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x1E3DBA314);
    case 4:
      *(_DWORD *)((char *)a1 + v18) = v24;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1E3DBA33C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3DBA408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for ResizeArtworkProcessingStep.ResizeError()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1E3DBA44C()
{
  unint64_t result = qword_1EBFE4700;
  if (!qword_1EBFE4700)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE4708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4700);
  }
  return result;
}

uint64_t sub_1E3DBA4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PageMetrics.Instruction.impressions(fields:configuration:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1E3E7BC20();
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E798F0();
  static MetricsData.impressionsData(eventVersion:fields:configuration:)(v7, a1, a2, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DF0);
  sub_1E3E7BC90();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E3E86650;
  sub_1E3E7BC60();
  sub_1E3E7BC70();
  sub_1E3CA3074(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return sub_1E3E7BC50();
}

uint64_t static PageMetrics.Instruction.page(fields:configuration:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1E3E7C030();
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E7BC20();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7BFC0();
  sub_1E3CAE6AC((uint64_t)a2, (uint64_t)v16);
  uint64_t v10 = a2[2];
  uint64_t v14 = a2[3];
  uint64_t v15 = v10;
  uint64_t v11 = a2[4];
  swift_bridgeObjectRetain();
  sub_1E3CB0ABC((uint64_t)v16);
  sub_1E3CB0AE8((uint64_t)&v15);
  sub_1E3CB0AE8((uint64_t)&v14);
  sub_1E3C19A6C(v11);
  MetricsData.init(eventType:fields:configuration:)((uint64_t)v6, a1, a2, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DF0);
  sub_1E3E7BC90();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1E3E86660;
  sub_1E3E7BC80();
  sub_1E3CA3074(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return sub_1E3E7BC50();
}

double UniformBucketingStrategy.maxDimensionsInPoints.getter()
{
  return *(double *)v0;
}

void UniformBucketingStrategy.maxDimensionsInPoints.setter(double a1)
{
  double *v1 = a1;
}

uint64_t (*UniformBucketingStrategy.maxDimensionsInPoints.modify())()
{
  return nullsub_1;
}

uint64_t UniformBucketingStrategy.thresholds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UniformBucketingStrategy.thresholds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*UniformBucketingStrategy.thresholds.modify())()
{
  return nullsub_1;
}

uint64_t UniformBucketingStrategy.init(maxDimensionsInPoints:thresholds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v7 = a1;
  swift_bridgeObjectRetain();
  sub_1E3DBADF4(&v7);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = v7;
  *(double *)a2 = a3;
  *(void *)(a2 + 8) = v6;
  return result;
}

CGSize __swiftcall UniformBucketingStrategy.bucketedSize(for:)(CGSize a1)
{
  double width = a1.width;
  uint64_t v3 = sub_1E3E7A880();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[1];
  v24[0] = *v1;
  v24[1] = v7;
  double v8 = sub_1E3DBABEC(width);
  double v10 = v9;
  sub_1E3E7A7F0();
  uint64_t v11 = sub_1E3E7A860();
  os_log_type_t v12 = sub_1E3E7D4D0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v24[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v15 = sub_1E3E7D960();
    uint64_t v23 = sub_1E3C150B8(v15, v16, v24);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v17 = sub_1E3E7D960();
    uint64_t v23 = sub_1E3C150B8(v17, v18, v24);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v11, v12, "Performed uniform size bucketing: %s -> %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v14, -1, -1);
    MEMORY[0x1E4E79510](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  double v19 = v8;
  double v20 = v10;
  result.CGFloat height = v20;
  result.double width = v19;
  return result;
}

double sub_1E3DBABEC(double result)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    double v4 = *(double *)(v2 + 32);
    if (v4 >= result)
    {
LABEL_6:
      if (v4 > 0.0) {
        return v4;
      }
      return result;
    }
    uint64_t v5 = (double *)(v2 + 40);
    uint64_t v6 = v3 - 1;
    while (v6)
    {
      double v7 = *v5++;
      double v4 = v7;
      --v6;
      if (v7 >= result) {
        goto LABEL_6;
      }
    }
  }
  if (*(double *)v1 > 0.0)
  {
    if (result <= 0.0) {
      return *(double *)v1;
    }
    else {
      return *(double *)v1;
    }
  }
  return result;
}

uint64_t sub_1E3DBAC88()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE23AF0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1E3E87940;
  *(_OWORD *)(v0 + 32) = xmmword_1E3E92190;
  *(_OWORD *)(v0 + 48) = xmmword_1E3E921A0;
  *(_OWORD *)(v0 + 64) = xmmword_1E3E921B0;
  *(_OWORD *)(v0 + 80) = xmmword_1E3E921C0;
  *(_OWORD *)(v0 + 96) = xmmword_1E3E921D0;
  *(_OWORD *)(v0 + 112) = xmmword_1E3E921E0;
  *(_OWORD *)(v0 + 128) = xmmword_1E3E921F0;
  *(_OWORD *)(v0 + 144) = xmmword_1E3E92200;
  *(void *)(v0 + 160) = 0x40A6440000000000;
  uint64_t v2 = v0;
  swift_bridgeObjectRetain();
  sub_1E3DBADF4(&v2);
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EBFE00D8 = 0x40A7700000000000;
  qword_1EBFE00E0 = v2;
  return result;
}

uint64_t static UniformBucketingStrategy.uniform3000MaxStrategy.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBFE00E8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EBFE00E0;
  *a1 = qword_1EBFE00D8;
  a1[1] = v2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3DBADF4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1E3DF0BF8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1E3DBAEF0(v5);
  *a1 = v2;
  return result;
}

void *assignWithCopy for UniformBucketingStrategy(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for UniformBucketingStrategy(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UniformBucketingStrategy()
{
  return &type metadata for UniformBucketingStrategy;
}

uint64_t sub_1E3DBAEF0(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1E3E7E0D0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v83 = *(double *)(v81 + 8 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(void *)(v85 + 8) = *(void *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          uint64_t v88 = v11;
          os_signpost_id_t v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_1E3DBB584((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(void *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v88 = sub_1E3DF0BBC((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          char v92 = &v88[16 * v87 + 32];
          *(void *)char v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          uint64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1E3E7D0F0();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v94 = v2;
  uint64_t v95 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = *(double *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          unint64_t v18 = (uint64_t *)(v95 + 8 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          int v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              uint64_t v22 = *v21;
              *int v21 = *v18;
              *unint64_t v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      int v24 = (double *)(v95 + 8 * v9);
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        uint64_t v26 = v13;
        unint64_t v27 = v24;
        do
        {
          double v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *unint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1E3DF0694(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      uint64_t v79 = sub_1E3DF0694((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      uint64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    double v31 = v11 + 32;
    uint64_t v32 = &v11[16 * v30 + 32];
    *(void *)uint64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          uint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            uint64_t v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        os_signpost_id_t v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        uint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        unint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        long long v75 = v31;
        int v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_1E3DBB584((double *)(v10 + 8 * *(void *)v73), (double *)(v10 + 8 * *(void *)v76), v10 + 8 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)unint64_t v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        double v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1E3E7DF70();
  __break(1u);
  return result;
}

uint64_t sub_1E3DBB584(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  int v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      double v16 = &v4[v13];
      uint64_t v22 = v16;
      int v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        double v17 = (double *)(a3 - 8);
        while (1)
        {
          unint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *double v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *double v17 = v20;
            }
            int v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          uint64_t v23 = ++v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      int v24 = v7;
    }
LABEL_42:
    sub_1E3DF0790((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1E3E7E010();
  __break(1u);
  return result;
}

uint64_t PageContextFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (qword_1EAE23FF8 != -1) {
    swift_once();
  }
  uint64_t result = MetricsFieldsBuilder.shouldDecorate(basedOn:)(qword_1EAE24C50);
  if (result)
  {
    if (qword_1EBFE2D18 != -1) {
      swift_once();
    }
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D20);
    uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBFE2ED8);
    uint64_t v5 = sub_1E3E79690();
    uint64_t result = (uint64_t)MEMORY[0x1E4E75C20](v12, v4, v5);
    if (v12[0])
    {
      v12[0] = sub_1E3E79680();
      v12[1] = v6;
      uint64_t v7 = sub_1E3E78880();
      uint64_t v9 = v8;
      uint64_t v10 = a1[3];
      uint64_t v11 = a1[4];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v10);
      MetricsFieldsBuilder.addValue<A>(_:forField:)((uint64_t)v12, v7, v9, v10, MEMORY[0x1E4F91A88], v11, MEMORY[0x1E4F91A80]);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1E3DBB98C(void *a1)
{
  return PageContextFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for PageContextFieldsProvider()
{
  return &type metadata for PageContextFieldsProvider;
}

PodcastsUI::LintMetricsEventIntent __swiftcall LintMetricsEventIntent.init(fields:)(PodcastsUI::LintMetricsEventIntent fields)
{
  v1->fields._rawValue = fields.fields._rawValue;
  return fields;
}

unint64_t static LintMetricsEventIntent.kind.getter()
{
  return 0xD000000000000016;
}

uint64_t LintMetricsEventIntent.fields.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1E3DBB9E0(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000001E3E922C0;
}

uint64_t sub_1E3DBBA00()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DBBA50()
{
  return sub_1E3E7CE50();
}

uint64_t sub_1E3DBBA64()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DBBAB0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1E3E7E050();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1E3DBBB04(void *a1@<X8>)
{
  *a1 = 0x73646C656966;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1E3DBBB1C()
{
  return 0x73646C656966;
}

uint64_t sub_1E3DBBB30@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1E3E7E050();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1E3DBBB88(uint64_t a1)
{
  unint64_t v2 = sub_1E3DBBE04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1E3DBBBC4(uint64_t a1)
{
  unint64_t v2 = sub_1E3DBBE04();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LintMetricsEventIntent.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1E3E7BAD0();
  uint64_t v12 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BB0);
  v11[0] = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3DBBE04();
  sub_1E3E7E300();
  uint64_t v11[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE49D8);
  id v11[2] = v9;
  swift_bridgeObjectRetain();
  sub_1E3E7BAC0();
  sub_1E3DBBE58();
  sub_1E3E7E0B0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v11[0] + 8))(v8, v6);
}

unint64_t sub_1E3DBBE04()
{
  unint64_t result = qword_1EBFE38C0;
  if (!qword_1EBFE38C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE38C0);
  }
  return result;
}

unint64_t sub_1E3DBBE58()
{
  unint64_t result = qword_1EBFE47E8;
  if (!qword_1EBFE47E8)
  {
    sub_1E3E7BAD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE47E8);
  }
  return result;
}

unint64_t sub_1E3DBBEB4()
{
  unint64_t result = qword_1EAE28948;
  if (!qword_1EAE28948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28948);
  }
  return result;
}

uint64_t sub_1E3DBBF0C()
{
  return MEMORY[0x1E4F71428];
}

uint64_t sub_1E3DBBF18(void *a1)
{
  return LintMetricsEventIntent.encode(to:)(a1);
}

uint64_t sub_1E3DBBF30()
{
  return sub_1E3E7C560();
}

ValueMetadata *type metadata accessor for LintMetricsEventIntent()
{
  return &type metadata for LintMetricsEventIntent;
}

unsigned char *storeEnumTagSinglePayload for LintMetricsEventIntent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3DBC03CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LintMetricsEventIntent.CodingKeys()
{
  return &type metadata for LintMetricsEventIntent.CodingKeys;
}

unint64_t sub_1E3DBC078()
{
  unint64_t result = qword_1EAE28950;
  if (!qword_1EAE28950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28950);
  }
  return result;
}

unint64_t sub_1E3DBC0D0()
{
  unint64_t result = qword_1EBFE2D28;
  if (!qword_1EBFE2D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2D28);
  }
  return result;
}

unint64_t sub_1E3DBC128()
{
  unint64_t result = qword_1EBFE38C8;
  if (!qword_1EBFE38C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE38C8);
  }
  return result;
}

unint64_t sub_1E3DBC17C()
{
  unint64_t result = qword_1EBFE38D8;
  if (!qword_1EBFE38D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE38D8);
  }
  return result;
}

uint64_t AppLocation.rawValue.getter(char a1)
{
  uint64_t result = 1701670760;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6573776F7262;
      break;
    case 2:
      uint64_t result = 0x7472616843706F74;
      break;
    case 3:
      uint64_t result = 0x73776F6873;
      break;
    case 4:
      uint64_t result = 0x736C656E6E616863;
      break;
    case 5:
      uint64_t result = 0x6465766173;
      break;
    case 6:
      uint64_t result = 0x704574736574616CLL;
      break;
    case 7:
      uint64_t result = 0x7972617262696CLL;
      break;
    case 8:
      uint64_t result = 0x686372616573;
      break;
    case 9:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 10:
      uint64_t result = 0x796C746E65636572;
      break;
    case 11:
      uint64_t result = 0x6979616C50776F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

void *static AppLocation.allCases.getter()
{
  return &unk_1F3F47AF8;
}

uint64_t sub_1E3DBC364(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = AppLocation.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == AppLocation.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1E3E7E150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1E3DBC3F0()
{
  char v1 = *v0;
  sub_1E3E7E270();
  AppLocation.rawValue.getter(v1);
  sub_1E3E7CE50();
  swift_bridgeObjectRelease();
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DBC454()
{
  AppLocation.rawValue.getter(*v0);
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3DBC4A8()
{
  char v1 = *v0;
  sub_1E3E7E270();
  AppLocation.rawValue.getter(v1);
  sub_1E3E7CE50();
  swift_bridgeObjectRelease();
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DBC508@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s10PodcastsUI11AppLocationO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1E3DBC538@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppLocation.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1E3DBC564(void *a1@<X8>)
{
  *a1 = &unk_1F3F47AF8;
}

uint64_t sub_1E3DBC574()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  char v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = sub_1E3E778A0();
  __swift_allocate_value_buffer(v5, qword_1EAE28958);
  __swift_project_value_buffer(v5, (uint64_t)qword_1EAE28958);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t static AppLocation.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E778A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE28958);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1E3DBC788()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F10);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E77B60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE289D8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26050);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v72 = *(void *)(v9 + 72);
  uint64_t v10 = v8 - 8;
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v63 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_1E3E92540;
  unint64_t v71 = v12 + v11;
  *(unsigned char *)(v12 + v11) = 0;
  sub_1E3E77B40();
  uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v67 = v7 + 56;
  uint64_t v70 = v6;
  v65(v5, 1, 1, v6);
  uint64_t v69 = sub_1E3E777B0();
  uint64_t v13 = *(void *)(v69 - 8);
  double v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v15 = v13 + 56;
  v14(v2, 1, 1, v69);
  uint64_t v68 = v14;
  double v16 = v5;
  double v17 = v2;
  sub_1E3E777C0();
  unint64_t v18 = v71;
  uint64_t v19 = v72;
  uint64_t v62 = v71 + v72 + *(int *)(v10 + 56);
  *(unsigned char *)(v71 + v72) = 1;
  sub_1E3E77B40();
  double v20 = v16;
  uint64_t v21 = v6;
  uint64_t v22 = v65;
  v65(v16, 1, 1, v21);
  v14(v2, 1, 1, v69);
  uint64_t v66 = v15;
  sub_1E3E777C0();
  uint64_t v23 = 2 * v19;
  int v24 = (unsigned char *)(v18 + 2 * v19);
  uint64_t v25 = *(int *)(v10 + 56);
  uint64_t v64 = v10;
  uint64_t v62 = (uint64_t)&v24[v25];
  *int v24 = 2;
  sub_1E3E77B40();
  uint64_t v26 = v70;
  v22(v16, 1, 1, v70);
  unint64_t v27 = v68;
  uint64_t v28 = v69;
  v68(v2, 1, 1, v69);
  sub_1E3E777C0();
  unint64_t v29 = v71;
  unint64_t v30 = (unsigned char *)(v71 + v23 + v72);
  uint64_t v62 = (uint64_t)&v30[*(int *)(v10 + 56)];
  *unint64_t v30 = 7;
  sub_1E3E77B40();
  double v31 = v65;
  v65(v20, 1, 1, v26);
  uint64_t v32 = v28;
  v27(v17, 1, 1, v28);
  sub_1E3E777C0();
  uint64_t v33 = v72;
  uint64_t v62 = 4 * v72;
  unint64_t v34 = v29;
  uint64_t v35 = (unsigned char *)(v29 + 4 * v72);
  uint64_t v36 = v64;
  BOOL v61 = &v35[*(int *)(v64 + 56)];
  *uint64_t v35 = 10;
  sub_1E3E77B40();
  v31(v20, 1, 1, v70);
  uint64_t v37 = v32;
  unint64_t v38 = v68;
  v68(v17, 1, 1, v37);
  sub_1E3E777C0();
  uint64_t v39 = (unsigned char *)(v34 + v62 + v33);
  uint64_t v62 = (uint64_t)&v39[*(int *)(v36 + 56)];
  *uint64_t v39 = 3;
  sub_1E3E77B40();
  uint64_t v40 = v70;
  v31(v20, 1, 1, v70);
  uint64_t v41 = v69;
  v38(v17, 1, 1, v69);
  sub_1E3E777C0();
  unint64_t v42 = v71;
  uint64_t v43 = (unsigned char *)(v71 + 6 * v33);
  uint64_t v62 = (uint64_t)&v43[*(int *)(v36 + 56)];
  *uint64_t v43 = 4;
  sub_1E3E77B40();
  uint64_t v44 = v40;
  v31(v20, 1, 1, v40);
  unint64_t v45 = v68;
  v68(v17, 1, 1, v41);
  sub_1E3E777C0();
  uint64_t v62 = 8 * v72;
  uint64_t v46 = (unsigned char *)(v42 + 7 * v72);
  uint64_t v47 = v64;
  BOOL v61 = &v46[*(int *)(v64 + 56)];
  unsigned char *v46 = 5;
  sub_1E3E77B40();
  v31(v20, 1, 1, v44);
  uint64_t v48 = v69;
  uint64_t v49 = v45;
  v45(v17, 1, 1, v69);
  sub_1E3E777C0();
  uint64_t v50 = v62;
  uint64_t v51 = v47;
  BOOL v61 = (unsigned char *)(v71 + v62 + *(int *)(v47 + 56));
  *(unsigned char *)(v71 + v62) = 9;
  sub_1E3E77B40();
  uint64_t v52 = v70;
  v31(v20, 1, 1, v70);
  v49(v17, 1, 1, v48);
  sub_1E3E777C0();
  uint64_t v53 = v72;
  uint64_t v54 = v50 + v72;
  unint64_t v55 = v71;
  char v56 = (unsigned char *)(v71 + v54);
  uint64_t v62 = (uint64_t)&v56[*(int *)(v51 + 56)];
  *char v56 = 6;
  sub_1E3E77B40();
  uint64_t v57 = v65;
  v65(v20, 1, 1, v52);
  uint64_t v58 = v69;
  v68(v17, 1, 1, v69);
  sub_1E3E777C0();
  *(unsigned char *)(v55 + 10 * v53) = 11;
  sub_1E3E77B40();
  v57(v20, 1, 1, v52);
  uint64_t v59 = v68;
  v68(v17, 1, 1, v58);
  sub_1E3E777C0();
  *(unsigned char *)(v71 + 11 * v72) = 8;
  sub_1E3E77B40();
  v57(v20, 1, 1, v70);
  v59(v17, 1, 1, v58);
  sub_1E3E777C0();
  unint64_t result = sub_1E3C8035C(v63);
  qword_1EAE28970 = result;
  return result;
}

uint64_t static AppLocation.caseDisplayRepresentations.getter()
{
  if (qword_1EAE24508 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static AppLocation.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_1EAE24508 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EAE28970 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AppLocation.caseDisplayRepresentations.modify())()
{
  if (qword_1EAE24508 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1E3DBD278@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E778A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE28958);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3DBD320(uint64_t a1)
{
  unint64_t v2 = sub_1E3CF74F8();

  return MEMORY[0x1F40D3B98](a1, v2);
}

uint64_t sub_1E3DBD36C()
{
  if (qword_1EAE24508 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3DBD3E4(uint64_t a1)
{
  unint64_t v2 = sub_1E3DBD6F0();

  return MEMORY[0x1F40D47F0](a1, v2);
}

uint64_t _s10PodcastsUI11AppLocationO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1E3E7E050();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

unint64_t sub_1E3DBD480()
{
  unint64_t result = qword_1EAE28978;
  if (!qword_1EAE28978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28978);
  }
  return result;
}

unint64_t sub_1E3DBD4D8()
{
  unint64_t result = qword_1EAE28980;
  if (!qword_1EAE28980)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28980);
  }
  return result;
}

unint64_t sub_1E3DBD538()
{
  unint64_t result = qword_1EAE28990;
  if (!qword_1EAE28990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28990);
  }
  return result;
}

unint64_t sub_1E3DBD590()
{
  unint64_t result = qword_1EAE28998;
  if (!qword_1EAE28998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28998);
  }
  return result;
}

unint64_t sub_1E3DBD5E8()
{
  unint64_t result = qword_1EAE289A0;
  if (!qword_1EAE289A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE289A0);
  }
  return result;
}

unint64_t sub_1E3DBD640()
{
  unint64_t result = qword_1EAE289A8;
  if (!qword_1EAE289A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE289A8);
  }
  return result;
}

unint64_t sub_1E3DBD698()
{
  unint64_t result = qword_1EAE289B0;
  if (!qword_1EAE289B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE289B0);
  }
  return result;
}

unint64_t sub_1E3DBD6F0()
{
  unint64_t result = qword_1EAE289B8;
  if (!qword_1EAE289B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE289B8);
  }
  return result;
}

uint64_t sub_1E3DBD744()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1E3DBD798()
{
  unint64_t result = qword_1EAE289C0;
  if (!qword_1EAE289C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE289C0);
  }
  return result;
}

unint64_t sub_1E3DBD7F0()
{
  unint64_t result = qword_1EAE289C8;
  if (!qword_1EAE289C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE289C8);
  }
  return result;
}

unint64_t sub_1E3DBD848()
{
  unint64_t result = qword_1EAE289D0;
  if (!qword_1EAE289D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE289D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AppLocation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3DBD9F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLocation()
{
  return &type metadata for AppLocation;
}

id sub_1E3DBDA30(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_1E3E77F00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_bundle;
  sub_1E3DC089C();
  unint64_t v11 = v2;
  *(void *)&v2[v10] = sub_1E3E7DA40();
  uint64_t v12 = OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_dateFormatters;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)&v11[v12] = sub_1E3C7F2F4(MEMORY[0x1E4FBC860]);
  uint64_t v14 = OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_dateIntervalFormatters;
  *(void *)&v11[v14] = sub_1E3C7F300(v13);
  uint64_t v15 = sub_1E3DC08DC(a1, a2);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  unint64_t v18 = *(void **)&v3[v10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6420);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1E3E86660;
  *(void *)(v19 + 32) = v15;
  *(void *)(v19 + 40) = v17;
  id v20 = v18;
  uint64_t v21 = sub_1E3E7DA50();
  uint64_t v23 = v22;

  swift_bridgeObjectRelease();
  int v24 = (uint64_t *)&v11[OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_preferredLocalization];
  *int v24 = v21;
  v24[1] = v23;
  swift_bridgeObjectRetain();
  sub_1E3E77E60();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_locale], v9, v6);

  v28.receiver = v11;
  v28.super_class = ObjectType;
  return objc_msgSendSuper2(&v28, sel_init);
}

uint64_t sub_1E3DBDC90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E77F00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  id v10 = objc_allocWithZone(MEMORY[0x1E4F28EE0]);
  id v11 = a1;
  id v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setNumberStyle_, 1);
  objc_msgSend(v12, sel_setFormatterBehavior_, 1040);
  sub_1E3DBDE70((uint64_t)v9);
  uint64_t v13 = (void *)sub_1E3E77EA0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v12, sel_setLocale_, v13);

  objc_msgSend(v12, sel_setMinimumFractionDigits_, a2);
  objc_msgSend(v12, sel_setMaximumFractionDigits_, a3);
  id v14 = objc_msgSend(v12, sel_stringFromNumber_, v11);
  if (!v14)
  {

    return 0;
  }
  uint64_t v15 = v14;
  uint64_t v16 = sub_1E3E7CD30();

  return v16;
}

uint64_t sub_1E3DBDE70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v2 = sub_1E3E77F00();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E77ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v35 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0818);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v41 = v1;
  sub_1E3E77EF0();
  sub_1E3E77EC0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v10, v4);
  uint64_t v18 = sub_1E3E77E90();
  uint64_t v19 = *(void *)(v18 - 8);
  id v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v16, 1, v18) == 1) {
    goto LABEL_10;
  }
  uint64_t v37 = v20;
  unint64_t v38 = v17;
  uint64_t v39 = v13;
  uint64_t v21 = v7;
  uint64_t v22 = v40;
  uint64_t v23 = sub_1E3E77E80();
  uint64_t v25 = v24;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v19 + 8);
  v36(v16, v18);
  if (v23 == 29281 && v25 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    objc_super v28 = v22;
    unint64_t v29 = v21;
  }
  else
  {
    char v27 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    objc_super v28 = v22;
    unint64_t v29 = v21;
    if ((v27 & 1) == 0) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v42, v41, v44);
    }
  }
  sub_1E3E77EB0();
  sub_1E3E77EF0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v44);
  uint64_t v16 = v39;
  sub_1E3E77EC0();
  v38(v29, v4);
  if (v37(v16, 1, v18) == 1)
  {
LABEL_10:
    sub_1E3C10CE0((uint64_t)v16, &qword_1EBFE0818);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v42, v41, v44);
  }
  uint64_t v31 = sub_1E3E77E80();
  uint64_t v33 = v32;
  v36(v16, v18);
  if (v31 == 29281 && v33 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v34 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v42, v41, v44);
    }
  }
  return sub_1E3E77EB0();
}

uint64_t sub_1E3DBE4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v4 = sub_1E3E77F00();
  uint64_t v42 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E77F90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E3E77E20();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3D76104(a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    uint64_t v38 = v8;
    uint64_t v39 = v7;
    uint64_t v40 = v4;
    uint64_t v41 = v17;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    uint64_t v19 = (uint64_t *)(v43 + OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_dateFormatters);
    swift_beginAccess();
    uint64_t v20 = *v19;
    if (*(void *)(*v19 + 16))
    {
      uint64_t v21 = v45;
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1E3C2E48C(v44, v21);
      if (v23)
      {
        uint64_t v24 = *(void **)(*(void *)(v20 + 56) + 8 * v22);
        swift_endAccess();
        id v25 = v24;
        swift_bridgeObjectRelease();
LABEL_8:
        id v33 = v25;
        char v34 = v41;
        uint64_t v35 = (void *)sub_1E3E77DD0();
        id v36 = objc_msgSend(v33, sel_stringFromDate_, v35);

        uint64_t v18 = sub_1E3E7CD30();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v14);

        return v18;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    objc_msgSend(v26, sel_setFormattingContext_, 2);
    uint64_t v27 = v45;
    sub_1E3E77EE0();
    objc_super v28 = (void *)sub_1E3E77F40();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
    objc_msgSend(v26, sel_setCalendar_, v28);

    sub_1E3DBDE70((uint64_t)v6);
    unint64_t v29 = (void *)sub_1E3E77EA0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v40);
    objc_msgSend(v26, sel_setLocale_, v29);

    uint64_t v30 = v44;
    uint64_t v31 = (void *)sub_1E3E7CCF0();
    objc_msgSend(v26, sel_setLocalizedDateFormatFromTemplate_, v31);

    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v25 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v46 = *v19;
    *uint64_t v19 = 0x8000000000000000;
    sub_1E3E68434((uint64_t)v25, v30, v27, isUniquelyReferenced_nonNull_native);
    *uint64_t v19 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_8;
  }
  sub_1E3C10CE0((uint64_t)v13, (uint64_t *)&unk_1EBFDEDF0);
  return 0;
}

void sub_1E3DBEB28(void *a1)
{
  uint64_t v2 = sub_1E3E77F00();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v7 = objc_msgSend(a1, sel_longLongValue, v4);
    uint64_t v8 = (void *)sub_1E3E77EA0();
    id v9 = (id)JECountFormatterMakeStringFromNumber();

    if (v9)
    {
      sub_1E3E7CD30();
LABEL_8:

      return;
    }
    id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v7);
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = objc_allocWithZone(MEMORY[0x1E4F28EE0]);
      id v13 = v11;
      id v9 = objc_msgSend(v12, sel_init);
      objc_msgSend(v9, sel_setNumberStyle_, 1);
      objc_msgSend(v9, sel_setFormatterBehavior_, 1040);
      sub_1E3DBDE70((uint64_t)v6);
      uint64_t v14 = (void *)sub_1E3E77EA0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      objc_msgSend(v9, sel_setLocale_, v14);

      objc_msgSend(v9, sel_setMinimumFractionDigits_, 0);
      objc_msgSend(v9, sel_setMaximumFractionDigits_, 3);
      id v15 = objc_msgSend(v9, sel_stringFromNumber_, v13);
      if (v15)
      {
        uint64_t v16 = v15;
        sub_1E3E7CD30();

        goto LABEL_8;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1E3DBF0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0820);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_bundle);
  id v9 = (void *)sub_1E3E7CCF0();
  id v10 = (void *)sub_1E3E7CCF0();
  uint64_t v11 = (void *)sub_1E3E7CCF0();
  id v12 = objc_msgSend(v8, sel_localizedStringForKey_value_table_localization_, v9, v10, 0, v11);

  sub_1E3E7CD30();
  sub_1E3DBDE70((uint64_t)v7);
  uint64_t v13 = sub_1E3E77F00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 0, 1, v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v14 + 16) = xmmword_1E3E86660;
  uint64_t v16 = MEMORY[0x1E4FBB5C8];
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = v16;
  *(void *)(v14 + 32) = a3;
  uint64_t v17 = sub_1E3E7CD50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3C10CE0((uint64_t)v7, &qword_1EBFE0820);
  return v17;
}

uint64_t sub_1E3DBF380(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v2 - 8);
  double v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77E20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v15 - v10;
  sub_1E3D76104(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1E3C10CE0((uint64_t)v4, (uint64_t *)&unk_1EBFDEDF0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    sub_1E3E77E10();
    uint64_t v12 = sub_1E3DBF55C((uint64_t)v11);
    uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
    v13(v8, v5);
    v13(v11, v5);
  }
  return v12;
}

uint64_t sub_1E3DBF55C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1E3E77DC0();
  double v8 = floor(v7 / 31536000.0);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = (uint64_t)v8;
  if ((uint64_t)v8 >= 1)
  {
    uint64_t v10 = "TIME_AGO_YEARS_AGO";
    return sub_1E3DBF0F8(0xD000000000000012, (unint64_t)(v10 - 32) | 0x8000000000000000, v9);
  }
  double v12 = floor(v7 / 86400.0);
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0) {
    goto LABEL_25;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((uint64_t)v12 >= 7)
  {
    uint64_t v17 = sub_1E3E77E20();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v5, a1, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v5, 0, 1, v17);
    uint64_t v15 = 0x79202C64204D4D4DLL;
    uint64_t v16 = 0xEB00000000797979;
    goto LABEL_14;
  }
  if ((uint64_t)v12 >= 1)
  {
    uint64_t v13 = sub_1E3E77E20();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v5, a1, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v5, 0, 1, v13);
    uint64_t v15 = 69;
    uint64_t v16 = 0xE100000000000000;
LABEL_14:
    uint64_t v11 = sub_1E3DBE4B4(v15, v16, (uint64_t)v5);
    sub_1E3C10CE0((uint64_t)v5, (uint64_t *)&unk_1EBFDEDF0);
    return v11;
  }
  double v19 = floor(v7 / 3600.0);
  if ((~*(void *)&v19 & 0x7FF0000000000000) == 0) {
    goto LABEL_28;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v19 < 9.22337204e18)
  {
    uint64_t v9 = (uint64_t)v19;
    if ((uint64_t)v19 < 1)
    {
      uint64_t v20 = *(void **)(v1 + OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_bundle);
      uint64_t v21 = (void *)sub_1E3E7CCF0();
      unint64_t v22 = (void *)sub_1E3E7CCF0();
      char v23 = (void *)sub_1E3E7CCF0();
      id v24 = objc_msgSend(v20, sel_localizedStringForKey_value_table_localization_, v21, v22, 0, v23);

      uint64_t v11 = sub_1E3E7CD30();
      return v11;
    }
    uint64_t v10 = "TIME_AGO_HOURS_AGO";
    return sub_1E3DBF0F8(0xD000000000000012, (unint64_t)(v10 - 32) | 0x8000000000000000, v9);
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1E3DBFACC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtCO10PodcastsUI6Legacy17JSLocalizerObject_dateIntervalFormatters);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(*v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1E3C2E48C(a1, a2);
    if (v8)
    {
      uint64_t v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7);
      swift_endAccess();
      id v10 = v9;
      swift_bridgeObjectRelease();
      return v10;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C20]), sel_init);
  uint64_t v13 = (void *)sub_1E3E7CCF0();
  objc_msgSend(v12, sel_setDateTemplate_, v13);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v14 = v12;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  sub_1E3E68460((uint64_t)v14, a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v5 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v14;
}

uint64_t sub_1E3DBFE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a2;
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v37 = a1;
  uint64_t v8 = sub_1E3E77F90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E77F10();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v34 - v17;
  double v20 = MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)&v34 - v21;
  (*(void (**)(char *, void, uint64_t, double))(v13 + 104))((char *)&v34 - v21, *MEMORY[0x1E4F27B18], v12, v20);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v22, v12);
  sub_1E3E77F70();
  sub_1E3E77F30();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1E3DC04B8();
  int v23 = sub_1E3E7CCA0();
  id v24 = *(void (**)(char *, uint64_t))(v13 + 8);
  v24(v15, v12);
  v24(v18, v12);
  BOOL v25 = a6 != 0;
  if ((v23 & v25) != 0) {
    uint64_t v26 = v35;
  }
  else {
    uint64_t v26 = a3;
  }
  if ((v23 & v25) != 0) {
    uint64_t v27 = a6;
  }
  else {
    uint64_t v27 = v36;
  }
  id v28 = sub_1E3DBFACC(v26, v27);
  unint64_t v29 = (void *)sub_1E3E77DD0();
  uint64_t v30 = (void *)sub_1E3E77DD0();
  id v31 = objc_msgSend(v28, sel_stringFromDate_toDate_, v29, v30);

  uint64_t v32 = sub_1E3E7CD30();
  return v32;
}

uint64_t sub_1E3DC03AC()
{
  return _s17JSLocalizerObjectCMa();
}

uint64_t _s17JSLocalizerObjectCMa()
{
  uint64_t result = qword_1EBFE2080;
  if (!qword_1EBFE2080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3DC0400()
{
  uint64_t result = sub_1E3E77F00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1E3DC04B8()
{
  unint64_t result = qword_1EBFE0828;
  if (!qword_1EBFE0828)
  {
    sub_1E3E77F10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE0828);
  }
  return result;
}

uint64_t sub_1E3DC0510()
{
  uint64_t v0 = sub_1E3E77ED0();
  uint64_t v21 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77F00();
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0818);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2690);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7C7D0();
  sub_1E3E7C7B0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v24) {
    return v23;
  }
  sub_1E3E77EB0();
  sub_1E3E77EF0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v22 + 8);
  v17(v8, v3);
  sub_1E3E77EC0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v2, v0);
  uint64_t v18 = sub_1E3E77E90();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v18) == 1)
  {
    sub_1E3C10CE0((uint64_t)v11, &qword_1EBFE0818);
    sub_1E3E77EB0();
    uint64_t v16 = sub_1E3E77E70();
    v17(v5, v3);
  }
  else
  {
    uint64_t v16 = sub_1E3E77E80();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v18);
  }
  return v16;
}

unint64_t sub_1E3DC089C()
{
  unint64_t result = qword_1EBFE4B20;
  if (!qword_1EBFE4B20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFE4B20);
  }
  return result;
}

uint64_t sub_1E3DC08DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0x4E435F687ALL;
  if (a1 != 0x736E61485F687ALL || a2 != 0xE700000000000000)
  {
    char v6 = sub_1E3E7E150();
    BOOL v7 = a1 == 0x736E61482D687ALL && a2 == 0xE700000000000000;
    BOOL v8 = v7;
    if ((v6 & 1) == 0 && !v8 && (sub_1E3E7E150() & 1) == 0)
    {
      uint64_t v3 = 0x57545F687ALL;
      if (a1 != 0x746E61485F687ALL || a2 != 0xE700000000000000)
      {
        char v9 = sub_1E3E7E150();
        BOOL v11 = a1 == 0x746E61482D687ALL && a2 == 0xE700000000000000;
        if ((v9 & 1) == 0 && !v11 && (sub_1E3E7E150() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          return a1;
        }
      }
    }
  }
  return v3;
}

uint64_t Promise.then(getResult:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  char v6 = (void *)swift_allocObject();
  uint64_t v7 = *(void *)(v5 + *MEMORY[0x1E4F71778]);
  uint64_t v6[2] = v7;
  void v6[3] = a1;
  v6[4] = a2;
  BOOL v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  swift_retain_n();
  sub_1E3E7C9A0();
  swift_release();

  return swift_release();
}

uint64_t sub_1E3DC0B48(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6400);
  uint64_t v7 = sub_1E3E7E2C0();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  BOOL v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(void *)(a4 - 8) + 16))((char *)&v13 - v10, a1, a4, v9);
  swift_storeEnumTagMultiPayload();
  a2(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1E3DC0C8C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DC0CC4(uint64_t a1)
{
  return sub_1E3DC0B48(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1E3DC0CD0(void *a1, void (*a2)(char *))
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6400);
  uint64_t v4 = sub_1E3E7E2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  *(uint64_t *)((char *)&v10 - v6) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  id v8 = a1;
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1E3DC0DE0(void *a1)
{
  return sub_1E3DC0CD0(a1, *(void (**)(char *))(v1 + 24));
}

uint64_t AssetProcessingStep<>.prepareImageForDestination()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E78E70();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E79780();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v14, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  return sub_1E3DC1770((uint64_t)v10, (uint64_t)v7, a1, a2);
}

uint64_t PrepareUIImageProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C13E4C(v1, a1);
}

uint64_t PrepareUIImageProcessingStep.metadata.setter(uint64_t a1)
{
  return sub_1E3DC1800(a1, v1);
}

uint64_t (*PrepareUIImageProcessingStep.metadata.modify())()
{
  return nullsub_1;
}

uint64_t PrepareUIImageProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t PrepareUIImageProcessingStep.publisher.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v15[1] = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15[0] = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)v15 - v10;
  sub_1E3E79790();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v8;
  *(void *)(v13 + 24) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1E3D48F6C();
  swift_getAssociatedConformanceWitness();
  sub_1E3E7ACB0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v15[0] + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_1E3DC1278@<X0>(uint64_t a1@<X3>, void *a2@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v19 = a2;
  uint64_t v3 = sub_1E3E78E70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - v8;
  unint64_t v10 = (unint64_t)ArtworkContent.image()();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v18 = v2;
    type metadata accessor for PrepareUIImageProcessingStep();
    sub_1E3E79780();
    char v12 = sub_1E3E78D30();
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
    uint64_t result = v13(v9, v3);
    if ((v12 & 1) == 0)
    {
      sub_1E3E79780();
      id v15 = sub_1E3DC14BC(v11);

      uint64_t result = v13(v6, v3);
      uint64_t v11 = v15;
    }
    *uint64_t v19 = v11;
  }
  else
  {
    uint64_t v16 = sub_1E3E79620();
    sub_1E3DC2748(&qword_1EAE27960, MEMORY[0x1E4F91A68]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, *MEMORY[0x1E4F91A50], v16);
    return swift_willThrow();
  }
  return result;
}

id sub_1E3DC14BC(void *a1)
{
  id v11 = a1;
  uint64_t v1 = sub_1E3E7A880();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E78E10();
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1(v12, v13);
    sub_1E3E7A4E0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)v12, &qword_1EBFE6360);
    memset(v14, 0, sizeof(v14));
    uint64_t v15 = 0;
  }
  id v5 = objc_msgSend(v11, sel_imageByPreparingForDisplay, v11);
  sub_1E3D4B630((uint64_t)v14, (uint64_t)v12);
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1(v12, v13);
    sub_1E3E78CD0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    if (v5)
    {
LABEL_6:
      sub_1E3C10CE0((uint64_t)v14, &qword_1EBFE20F8);
      return v5;
    }
  }
  else
  {
    sub_1E3C10CE0((uint64_t)v12, &qword_1EBFE20F8);
    if (v5) {
      goto LABEL_6;
    }
  }
  sub_1E3E7A7F0();
  uint64_t v7 = sub_1E3E7A860();
  os_log_type_t v8 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1E3BC5000, v7, v8, "Failed to prepare image for the display", v9, 2u);
    MEMORY[0x1E4E79510](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1E3C10CE0((uint64_t)v14, &qword_1EBFE20F8);
  id v10 = v11;

  return v10;
}

uint64_t sub_1E3DC1770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1E3DC2790(a1, a4);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for PrepareUIImageProcessingStep() + 36);
  os_log_type_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v8(v7, a2, a3);
}

uint64_t sub_1E3DC1800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreparedArtworkRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3DC1864()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for PrepareUIImageProcessingStep() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  uint64_t v4 = sub_1E3E78E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[11], v1);

  return swift_deallocObject();
}

uint64_t type metadata accessor for PrepareUIImageProcessingStep()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E3DC199C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  type metadata accessor for PrepareUIImageProcessingStep();
  return sub_1E3DC1278(v3, a1);
}

uint64_t sub_1E3DC1A34()
{
  return sub_1E3DC2748(&qword_1EBFE0098, (void (*)(uint64_t))type metadata accessor for PreparedArtworkRequest);
}

uint64_t sub_1E3DC1A7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DC1AC8()
{
  uint64_t result = sub_1E3E78E70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1E3DC1B94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  unint64_t v13 = ((v8 + v11) & ~v11) + *(void *)(v10 + 64);
  uint64_t v14 = (*(unsigned char *)(v7 + 80) | *(unsigned char *)(v10 + 80));
  if (v14 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v18 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v18, ((unint64_t)a2 + v12) & v18, v9);
  }
  return a1;
}

uint64_t sub_1E3DC1CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v8);
}

uint64_t sub_1E3DC1DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1E3DC1E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1E3DC1F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1E3DC1FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1E3DC2088(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E78E70();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v12)
      {
        if (v8 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *))(v7 + 48);
          return v23(a1);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v11, v10);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v12 + (v20 | v18) + 1;
}

void sub_1E3DC22E8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_1E3E78E70() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  size_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= v9) {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  size_t v15 = ((v12 + v13) & ~v13) + *(void *)(v10 + 64);
  if (a3 <= v14)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v14 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v17 = ~v14 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x1E3DC2654);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v11)
        {
          if (v9 >= a2)
          {
            BOOL v25 = *(void (**)(unsigned char *, uint64_t))(v8 + 56);
            v25(a1, a2);
          }
          else
          {
            if (v12 <= 3) {
              int v22 = ~(-1 << (8 * v12));
            }
            else {
              int v22 = -1;
            }
            if (v12)
            {
              int v23 = v22 & (~v9 + a2);
              if (v12 <= 3) {
                int v24 = v12;
              }
              else {
                int v24 = 4;
              }
              bzero(a1, v12);
              switch(v24)
              {
                case 2:
                  *(_WORD *)a1 = v23;
                  break;
                case 3:
                  *(_WORD *)a1 = v23;
                  a1[2] = BYTE2(v23);
                  break;
                case 4:
                  *(_DWORD *)a1 = v23;
                  break;
                default:
                  *a1 = v23;
                  break;
              }
            }
          }
        }
        else
        {
          uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 56);
          v21((unint64_t)&a1[v12 + v13] & ~v13, a2, v11);
        }
      }
      return;
  }
}

uint64_t sub_1E3DC268C()
{
  swift_getAssociatedTypeWitness();
  sub_1E3D48F6C();
  swift_getAssociatedConformanceWitness();
  sub_1E3E7A8F0();

  return swift_getWitnessTable();
}

uint64_t sub_1E3DC2748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3DC2790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreparedArtworkRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id EpisodeTextInfoDetail.summary.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void EpisodeTextInfoDetail.summary.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*EpisodeTextInfoDetail.summary.modify())()
{
  return nullsub_1;
}

void *EpisodeTextInfoDetail.notes.getter()
{
  id v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void EpisodeTextInfoDetail.notes.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*EpisodeTextInfoDetail.notes.modify())()
{
  return nullsub_1;
}

uint64_t EpisodeTextInfoDetail.init(summary:notes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

id NowPlayingEpisodeContextItem.notes.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void NowPlayingEpisodeContextItem.notes.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*NowPlayingEpisodeContextItem.notes.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.plainNotes.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NowPlayingEpisodeContextItem.plainNotes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*NowPlayingEpisodeContextItem.plainNotes.modify())()
{
  return nullsub_1;
}

uint64_t (*NowPlayingEpisodeContextItem.description.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.descriptionHasHTML.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t NowPlayingEpisodeContextItem.descriptionHasHTML.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*NowPlayingEpisodeContextItem.descriptionHasHTML.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.isLocal.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t NowPlayingEpisodeContextItem.isLocal.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 41) = result;
  return result;
}

uint64_t (*NowPlayingEpisodeContextItem.isLocal.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.episodeShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DC2E18(type metadata accessor for NowPlayingEpisodeContextItem, a1);
}

uint64_t NowPlayingEpisodeContextItem.episodeShareURL.setter(uint64_t a1)
{
  return sub_1E3DC2E7C(a1, type metadata accessor for NowPlayingEpisodeContextItem);
}

uint64_t (*NowPlayingEpisodeContextItem.episodeShareURL.modify())()
{
  return nullsub_1;
}

uint64_t NowPlayingEpisodeContextItem.init(notes:plainNotes:description:descriptionHasHTML:isLocal:episodeShareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v18 = a9 + *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
  uint64_t v19 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 41) = a7;

  return sub_1E3DAD5FC(a8, v18);
}

uint64_t LibraryEpisodeContextItem.summary.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryEpisodeContextItem.summary.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LibraryEpisodeContextItem.summary.modify())()
{
  return nullsub_1;
}

void *LibraryEpisodeContextItem.cachedDescription.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void LibraryEpisodeContextItem.cachedDescription.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*LibraryEpisodeContextItem.cachedDescription.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s10PodcastsUI28NowPlayingEpisodeContextItemV11descriptionSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*LibraryEpisodeContextItem.description.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.descriptionWithoutHTML.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryEpisodeContextItem.descriptionWithoutHTML.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*LibraryEpisodeContextItem.descriptionWithoutHTML.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.descriptionHasHTML.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t LibraryEpisodeContextItem.descriptionHasHTML.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*LibraryEpisodeContextItem.descriptionHasHTML.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.episodeShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DC2E18(type metadata accessor for LibraryEpisodeContextItem, a1);
}

uint64_t sub_1E3DC2E18@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 36);

  return sub_1E3C242A0(v4, a2);
}

uint64_t LibraryEpisodeContextItem.episodeShareURL.setter(uint64_t a1)
{
  return sub_1E3DC2E7C(a1, type metadata accessor for LibraryEpisodeContextItem);
}

uint64_t sub_1E3DC2E7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 36);

  return sub_1E3DAD5FC(a1, v4);
}

uint64_t (*LibraryEpisodeContextItem.episodeShareURL.modify())()
{
  return nullsub_1;
}

uint64_t LibraryEpisodeContextItem.init(summary:cachedDescription:description:descriptionWithoutHTML:descriptionHasHTML:episodeShareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18 = a9 + *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
  uint64_t v19 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;

  return sub_1E3DAD5FC(a10, v18);
}

void EpisodeTextInfoProvider.textInfoDetailForContext(_:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v99 = a1;
  uint64_t v96 = sub_1E3E77990();
  uint64_t v92 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v91 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6008);
  uint64_t v90 = *(v94 - 1);
  MEMORY[0x1F4188790](v94);
  os_signpost_id_t v89 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_1E3E77D00();
  uint64_t v5 = *(v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v101 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LibraryEpisodeContextItem(0);
  MEMORY[0x1F4188790](v7);
  unsigned int v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NowPlayingEpisodeContextItem(0);
  MEMORY[0x1F4188790](v10);
  size_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for EpisodeTextInfoContext(0);
  MEMORY[0x1F4188790](v13);
  size_t v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v20 = MEMORY[0x1F4188790](v19);
  uint64_t v21 = v5;
  int v22 = *(void (**)(double))(v5 + 56);
  uint64_t v102 = (uint64_t)&v88 - v23;
  id v100 = v4;
  v22(v20);
  sub_1E3DC3FE0(v99, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1E3DC40B4((uint64_t)v15, (uint64_t)v9, type metadata accessor for LibraryEpisodeContextItem);
    uint64_t v24 = 24;
    if (v9[56]) {
      uint64_t v24 = 40;
    }
    uint64_t v25 = 32;
    if (v9[56]) {
      uint64_t v25 = 48;
    }
    unint64_t v26 = *(void *)&v9[v25];
    uint64_t v27 = *(uint64_t **)&v9[v24];
    uint64_t v95 = v27;
    if (!v26) {
      goto LABEL_15;
    }
    uint64_t v28 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0) {
      uint64_t v28 = (unint64_t)v27 & 0xFFFFFFFFFFFFLL;
    }
    if (v28 && (unint64_t v29 = (char *)*((void *)v9 + 2)) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = v29;
      id v31 = objc_msgSend(v30, sel_length);
      uint64_t v32 = v102;
      sub_1E3C13F0C(v102);
      uint64_t v33 = v21;
      if (!v31)
      {

        unint64_t v29 = 0;
      }
    }
    else
    {
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v32 = v102;
      sub_1E3C13F0C(v102);
      unint64_t v29 = 0;
      uint64_t v33 = v21;
    }
    unint64_t v35 = *((void *)v9 + 1);
    uint64_t v99 = *(void *)v9;
    int v93 = v9[56];
    uint64_t v36 = *(int *)(v7 + 36);
    unint64_t v37 = v35;
    sub_1E3C242A0((uint64_t)&v9[v36], v32);
    swift_bridgeObjectRetain();
    sub_1E3DC411C((uint64_t)v9, type metadata accessor for LibraryEpisodeContextItem);
    uint64_t v38 = v32;
    id v39 = v101;
  }
  else
  {
    sub_1E3DC40B4((uint64_t)v15, (uint64_t)v12, type metadata accessor for NowPlayingEpisodeContextItem);
    if (v12[41] == 1)
    {
      unint64_t v26 = *((void *)v12 + 2);
      uint64_t v95 = (uint64_t *)*((void *)v12 + 1);
      unint64_t v29 = *(char **)v12;
      id v34 = *(id *)v12;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v95 = 0;
      unint64_t v26 = 0;
      unint64_t v29 = 0;
    }
    uint64_t v33 = v21;
    unint64_t v37 = *((void *)v12 + 4);
    id v39 = v101;
    uint64_t v38 = v102;
    if (v37)
    {
      uint64_t v99 = *((void *)v12 + 3);
      if ((v37 & 0x2000000000000000) != 0) {
        uint64_t v40 = HIBYTE(v37) & 0xF;
      }
      else {
        uint64_t v40 = v99 & 0xFFFFFFFFFFFFLL;
      }
      swift_bridgeObjectRetain();
      sub_1E3C13F0C(v38);
      if (!v40)
      {
        swift_bridgeObjectRelease();
        uint64_t v99 = 0;
        unint64_t v37 = 0;
      }
    }
    else
    {
      sub_1E3C13F0C(v102);
      uint64_t v99 = 0;
    }
    int v93 = v12[40];
    sub_1E3C242A0((uint64_t)&v12[*(int *)(v10 + 36)], v38);
    sub_1E3DC411C((uint64_t)v12, type metadata accessor for NowPlayingEpisodeContextItem);
  }
  sub_1E3C242A0(v38, (uint64_t)v18);
  id v41 = v100;
  if ((*(unsigned int (**)(char *, uint64_t, id))(v33 + 48))(v18, 1, v100) == 1)
  {
    sub_1E3C13F0C((uint64_t)v18);
    if (v26) {
      goto LABEL_28;
    }
LABEL_56:
    if (v37)
    {
      uint64_t v60 = v98;
LABEL_58:
      swift_beginAccess();
      char v83 = byte_1EAE29AD0;
      id v84 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
      id v59 = sub_1E3E42C84(v99, v37, 0, v83);
      if (v29) {
        goto LABEL_59;
      }
LABEL_61:
      sub_1E3C13F0C(v38);
      id v87 = 0;
      goto LABEL_62;
    }
LABEL_60:
    id v59 = 0;
    uint64_t v60 = v98;
    if (v29) {
      goto LABEL_59;
    }
    goto LABEL_61;
  }
  (*(void (**)(id, char *, id))(v33 + 32))(v39, v18, v41);
  unint64_t v97 = v37;
  if (!v29)
  {
    if (!v93) {
      goto LABEL_55;
    }
    goto LABEL_46;
  }
  id v61 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  uint64_t v62 = v29;
  unint64_t v29 = (char *)objc_msgSend(v61, sel_initWithAttributedString_, v62);
  id v63 = objc_msgSend(v62, sel_string);
  uint64_t v64 = sub_1E3E7CD30();
  unint64_t v66 = v65;

  uint64_t v105 = v64;
  unint64_t v106 = v66;
  if (qword_1EBFE4DD0 != -1) {
    swift_once();
  }
  __swift_project_value_buffer((uint64_t)v94, (uint64_t)qword_1EBFE54B8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBFE4F30);
  sub_1E3C10824();
  sub_1E3C10DE8(&qword_1EBFE57F8, &qword_1EBFE6008);
  uint64_t v67 = sub_1E3E7CC60();
  swift_bridgeObjectRelease();
  uint64_t v68 = *(void *)(v67 + 16);
  if (v68)
  {
    uint64_t v69 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24C30) - 8);
    uint64_t v70 = v67 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
    uint64_t v71 = *(void *)(v69 + 72);
    swift_bridgeObjectRetain();
    id v39 = v101;
    do
    {
      sub_1E3C10878(v70, v29, (uint64_t)v39, v62);
      v70 += v71;
      --v68;
    }
    while (v68);

    swift_bridgeObjectRelease_n();
    uint64_t v38 = v102;
  }
  else
  {

    swift_bridgeObjectRelease();
    id v39 = v101;
    uint64_t v38 = v102;
  }
  unint64_t v37 = v97;
  id v41 = v100;
  if (v93)
  {
LABEL_46:
    if (v26)
    {
      uint64_t v103 = (uint64_t)v95;
      unint64_t v104 = v26;
      if (qword_1EBFE4DD0 != -1) {
        swift_once();
      }
      uint64_t v72 = (void (*)(void, void))v94;
      uint64_t v73 = __swift_project_value_buffer((uint64_t)v94, (uint64_t)qword_1EBFE54B8);
      long long v75 = v89;
      uint64_t v74 = v90;
      uint64_t v76 = (*(uint64_t (**)(char *, uint64_t, void (*)(void, void)))(v90 + 16))(v89, v73, v72);
      uint64_t v95 = &v88;
      MEMORY[0x1F4188790](v76);
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFE4F30);
      sub_1E3DC4060();
      sub_1E3C9BC44();
      sub_1E3C10DE8(&qword_1EBFE57F8, &qword_1EBFE6008);
      sub_1E3E7D430();
      (*(void (**)(char *, void))(v74 + 8))(v75, v72);
      swift_bridgeObjectRelease();
      unint64_t v26 = v106;
      uint64_t v95 = (uint64_t *)v105;
      uint64_t v38 = v102;
      unint64_t v37 = v97;
      id v41 = v100;
    }
    if (v37)
    {
      uint64_t v103 = v99;
      unint64_t v104 = v37;
      if (qword_1EBFE4DD0 != -1) {
        swift_once();
      }
      uint64_t v77 = (void (*)(void, void))v94;
      uint64_t v78 = __swift_project_value_buffer((uint64_t)v94, (uint64_t)qword_1EBFE54B8);
      uint64_t v79 = v89;
      uint64_t v80 = v90;
      uint64_t v81 = (*(uint64_t (**)(char *, uint64_t, void (*)(void, void)))(v90 + 16))(v89, v78, v77);
      uint64_t v99 = (uint64_t)&v88;
      MEMORY[0x1F4188790](v81);
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBFE4F30);
      sub_1E3DC4060();
      sub_1E3C9BC44();
      sub_1E3C10DE8(&qword_1EBFE57F8, &qword_1EBFE6008);
      sub_1E3E7D430();
      CGSize v82 = v77;
      id v39 = v101;
      (*(void (**)(char *, void))(v80 + 8))(v79, v82);
      swift_bridgeObjectRelease();
      unint64_t v37 = v106;
      uint64_t v99 = v105;
      uint64_t v38 = v102;
      id v41 = v100;
    }
    else
    {
      id v39 = v101;
    }
  }
LABEL_55:
  (*(void (**)(id, id))(v33 + 8))(v39, v41);
  if (!v26) {
    goto LABEL_56;
  }
LABEL_28:
  if (!v37)
  {
    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  uint64_t v101 = v29;
  id v42 = objc_allocWithZone(MEMORY[0x1E4F28E58]);
  swift_bridgeObjectRetain();
  id v43 = objc_msgSend(v42, sel_init);
  uint64_t v44 = v91;
  sub_1E3E77960();
  uint64_t v45 = (void *)sub_1E3E77940();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v92 + 8);
  uint64_t v47 = v96;
  v46(v44, v96);
  objc_msgSend(v43, sel_formUnionWithCharacterSet_, v45);

  sub_1E3E77950();
  uint64_t v48 = (void *)sub_1E3E77940();
  v46(v44, v47);
  objc_msgSend(v43, sel_formUnionWithCharacterSet_, v48);

  sub_1E3E77980();
  uint64_t v49 = (void *)sub_1E3E77940();
  v46(v44, v47);
  uint64_t v94 = v46;
  objc_msgSend(v43, sel_formUnionWithCharacterSet_, v49);

  uint64_t v105 = (uint64_t)v95;
  unint64_t v106 = v26;
  sub_1E3E77970();
  sub_1E3C10C8C();
  uint64_t v50 = sub_1E3E7DBF0();
  v46(v44, v47);
  swift_bridgeObjectRelease();
  uint64_t v105 = v50;
  uint64_t v95 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6388);
  sub_1E3C10DE8((unint64_t *)&qword_1EBFE6390, &qword_1EBFE6388);
  uint64_t v51 = sub_1E3E7CC80();
  unint64_t v53 = v52;
  swift_bridgeObjectRelease();
  uint64_t v105 = v99;
  unint64_t v106 = v37;
  unint64_t v97 = v37;
  id v100 = v43;
  sub_1E3E77970();
  uint64_t v54 = sub_1E3E7DBF0();
  ((void (*)(char *, uint64_t))v94)(v44, v96);
  swift_bridgeObjectRelease();
  uint64_t v105 = v54;
  uint64_t v55 = sub_1E3E7CC80();
  unint64_t v57 = v56;
  swift_bridgeObjectRelease();
  uint64_t v105 = v51;
  unint64_t v106 = v53;
  uint64_t v103 = v55;
  unint64_t v104 = v57;
  if ((sub_1E3E7DC30() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v37 = v97;
    uint64_t v60 = v98;
    unint64_t v29 = v101;
    uint64_t v38 = v102;
    goto LABEL_58;
  }
  uint64_t v105 = v51;
  unint64_t v106 = v53;
  uint64_t v103 = v55;
  unint64_t v104 = v57;
  uint64_t v58 = sub_1E3E7DC00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v29 = v101;
  if (!v58)
  {
    unint64_t v37 = v97;
    uint64_t v60 = v98;
    uint64_t v38 = v102;
    if (v93)
    {
      swift_bridgeObjectRelease();
      id v59 = 0;
      if (!v29) {
        goto LABEL_61;
      }
      goto LABEL_59;
    }

    unint64_t v29 = 0;
    goto LABEL_58;
  }
  swift_bridgeObjectRelease();
  id v59 = 0;
  uint64_t v60 = v98;
  uint64_t v38 = v102;
  if (!v29) {
    goto LABEL_61;
  }
LABEL_59:
  id v85 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
  uint64_t v86 = v29;
  id v87 = sub_1E3E43400(v86, 0);

  sub_1E3C13F0C(v38);
LABEL_62:
  *uint64_t v60 = v59;
  v60[1] = v87;
}

void sub_1E3DC3EA4(uint64_t a1@<X0>, void *a2@<X8>)
{
}

uint64_t _s10PodcastsUI21EpisodeTextInfoDetailV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  if (*(void *)a1)
  {
    if (!v4) {
      return 0;
    }
    type metadata accessor for LanguageAwareString();
    id v6 = v4;
    id v7 = v2;
    char v8 = sub_1E3E7DA80();

    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  if (v3)
  {
    if (v5)
    {
      type metadata accessor for LanguageAwareString();
      id v9 = v5;
      id v10 = v3;
      char v11 = sub_1E3E7DA80();

      if (v11) {
        return 1;
      }
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

uint64_t type metadata accessor for NowPlayingEpisodeContextItem(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFE5F68);
}

uint64_t type metadata accessor for LibraryEpisodeContextItem(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFE5EC8);
}

uint64_t type metadata accessor for EpisodeTextInfoContext(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFE5E20);
}

uint64_t sub_1E3DC3FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EpisodeTextInfoContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3DC4044@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3C10540(*(void *)(v1 + 16), a1);
}

unint64_t sub_1E3DC4060()
{
  unint64_t result = qword_1EBFE4F10;
  if (!qword_1EBFE4F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4F10);
  }
  return result;
}

uint64_t sub_1E3DC40B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3DC411C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeBufferWithCopyOfBuffer for EpisodeTextInfoContext(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = &v16[(v5 + 16) & ~(unint64_t)v5];
    sub_1E3E775E0();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v6 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v6;
      id v7 = a2[3];
      uint64_t v28 = a2[2];
      *((void *)a1 + 2) = v28;
      *((void *)a1 + 3) = v7;
      char v8 = a2[5];
      *((void *)a1 + 4) = a2[4];
      *((void *)a1 + 5) = v8;
      *((void *)a1 + 6) = a2[6];
      a1[56] = *((unsigned char *)a2 + 56);
      uint64_t v9 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
      __dst = &a1[v9];
      id v10 = (char *)a2 + v9;
      uint64_t v11 = sub_1E3E77D00();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      uint64_t v14 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
        memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
    }
    else
    {
      uint64_t v18 = *a2;
      uint64_t v17 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v17;
      uint64_t v19 = a2[3];
      *((void *)a1 + 2) = a2[2];
      *((void *)a1 + 3) = v19;
      *((void *)a1 + 4) = a2[4];
      *((_WORD *)a1 + 20) = *((_WORD *)a2 + 20);
      uint64_t v20 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
      __dsta = &a1[v20];
      uint64_t v21 = (char *)a2 + v20;
      uint64_t v22 = sub_1E3E77D00();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      id v25 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v24(v21, 1, v22))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
        memcpy(__dsta, v21, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dsta, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dsta, 0, 1, v22);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for EpisodeTextInfoContext(id *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = type metadata accessor for LibraryEpisodeContextItem(0);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = type metadata accessor for NowPlayingEpisodeContextItem(0);
  }
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 36);
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v4);
  if (!result)
  {
    id v6 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    return v6(v3, v4);
  }
  return result;
}

uint64_t initializeWithCopy for EpisodeTextInfoContext(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    id v6 = *(void **)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v5;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v8 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
    __dst = (void *)(a1 + v8);
    uint64_t v9 = (const void *)(a2 + v8);
    uint64_t v10 = sub_1E3E77D00();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    id v13 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
  }
  else
  {
    uint64_t v16 = *(void **)a2;
    uint64_t v15 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v15;
    uint64_t v17 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v17;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
    uint64_t v18 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    uint64_t v21 = sub_1E3E77D00();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
    id v24 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for EpisodeTextInfoContext(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1E3DC411C(a1, type metadata accessor for EpisodeTextInfoContext);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v4 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      uint64_t v5 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
      __dst = (void *)(a1 + v5);
      id v6 = (const void *)(a2 + v5);
      uint64_t v7 = sub_1E3E77D00();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      id v10 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9(v6, 1, v7))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
        memcpy(__dst, v6, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(__dst, v6, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
    }
    else
    {
      uint64_t v12 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
      uint64_t v13 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
      uint64_t v22 = (void *)(a1 + v13);
      uint64_t v14 = (const void *)(a2 + v13);
      uint64_t v15 = sub_1E3E77D00();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
      id v18 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
        memcpy(v22, v14, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v22, v14, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for EpisodeTextInfoContext(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
    uint64_t v10 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
    uint64_t v5 = (void *)(a1 + v10);
    id v6 = (const void *)(a2 + v10);
    uint64_t v7 = sub_1E3E77D00();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      goto LABEL_3;
    }
LABEL_5:
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    goto LABEL_6;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
  uint64_t v5 = (void *)(a1 + v4);
  id v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for EpisodeTextInfoContext(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1E3DC411C(a1, type metadata accessor for EpisodeTextInfoContext);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      uint64_t v4 = *(int *)(type metadata accessor for LibraryEpisodeContextItem(0) + 36);
      uint64_t v5 = (void *)(a1 + v4);
      id v6 = (const void *)(a2 + v4);
      uint64_t v7 = sub_1E3E77D00();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      {
LABEL_4:
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
        memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
      uint64_t v10 = *(int *)(type metadata accessor for NowPlayingEpisodeContextItem(0) + 36);
      uint64_t v5 = (void *)(a1 + v10);
      id v6 = (const void *)(a2 + v10);
      uint64_t v7 = sub_1E3E77D00();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        goto LABEL_4;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_1E3DC50C8()
{
  uint64_t result = type metadata accessor for NowPlayingEpisodeContextItem(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LibraryEpisodeContextItem(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t assignWithCopy for EpisodeTextInfoDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeTextInfoDetail(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeTextInfoDetail(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeTextInfoDetail()
{
  return &type metadata for EpisodeTextInfoDetail;
}

char *initializeBufferWithCopyOfBuffer for NowPlayingEpisodeContextItem(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v5 = a1;
    id v6 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v6;
    uint64_t v7 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v7;
    uint64_t v8 = *(int *)(a3 + 36);
    id v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    *((_WORD *)a1 + 20) = *((_WORD *)a2 + 20);
    uint64_t v11 = sub_1E3E77D00();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v5;
}

uint64_t destroy for NowPlayingEpisodeContextItem(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v4 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (const void *)(a2 + v7);
  id v9 = (void *)(a1 + v7);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v10 = sub_1E3E77D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v9, v8, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1E3E77D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1E3E77D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DC5B40);
}

uint64_t sub_1E3DC5B40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 36);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for NowPlayingEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DC5C14);
}

void *sub_1E3DC5C14(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1E3DC5CC0()
{
}

void *initializeBufferWithCopyOfBuffer for LibraryEpisodeContextItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v7 = (void *)a2[2];
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = a2[6];
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = (char *)a2 + v9;
    __dst = (void *)(a1 + v9);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v11 = sub_1E3E77D00();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    id v14 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (const void *)(a2 + v8);
  __dst = (void *)(a1 + v8);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = sub_1E3E77D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  id v13 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v7;
  id v8 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1E3E77D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1E3E77D00();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DC65F0);
}

uint64_t sub_1E3DC65F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 36);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryEpisodeContextItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DC66C4);
}

uint64_t sub_1E3DC66C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1E3DC6770()
{
}

void sub_1E3DC6788()
{
  sub_1E3C25B18();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t dispatch thunk of EpisodeTextInfoProviderProtocol.textInfoDetailForContext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for EpisodeTextInfoProvider()
{
  return &type metadata for EpisodeTextInfoProvider;
}

uint64_t sub_1E3DC6858@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3DC4044(a1);
}

uint64_t DataBackgroundSessionDescriptor.cache.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DataBackgroundSessionDescriptor.init(cache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

id DataBackgroundSessionDescriptor.create(session:delegate:)(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, *MEMORY[0x1E4F920C0]);
  objc_msgSend(a1, sel_setTimeoutIntervalForRequest_, 3600.0);
  id v4 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);

  return v4;
}

uint64_t DataBackgroundSessionDescriptor.load(data:)()
{
  return sub_1E3DC6D4C();
}

uint64_t DataBackgroundSessionDescriptor.stash(asset:for:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a1;
  unint64_t v33 = a2;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v31 = *(void *)(a4 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v27 - v9;
  unint64_t v29 = (char *)&v27 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  double v14 = MEMORY[0x1F4188790](v13);
  int v15 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v15, v30, v6, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, AssociatedTypeWitness);
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + v17 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v31;
  *(void *)(v19 + 16) = v6;
  *(void *)(v19 + 24) = v20;
  long long v21 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v16, v15, v6);
  uint64_t v22 = (uint64_t *)(v19 + v17);
  uint64_t v24 = v32;
  unint64_t v23 = v33;
  *uint64_t v22 = v32;
  v22[1] = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v18, v29, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE289E8);
  swift_allocObject();
  sub_1E3C14F74(v24, v23);
  uint64_t v34 = sub_1E3E7AA90();
  sub_1E3C10DE8(qword_1EAE289F0, &qword_1EAE289E8);
  uint64_t v25 = sub_1E3E7AB70();
  swift_release();
  return v25;
}

id sub_1E3DC6C6C(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, *MEMORY[0x1E4F920C0]);
  objc_msgSend(a1, sel_setTimeoutIntervalForRequest_, 3600.0);
  id v4 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);

  return v4;
}

uint64_t sub_1E3DC6D24()
{
  return sub_1E3DC6D4C();
}

uint64_t sub_1E3DC6D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DataBackgroundSessionDescriptor.stash(asset:for:)(*(void *)a1, *(void *)(a1 + 8), a2, a3);
}

uint64_t sub_1E3DC6D4C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28A78);
  uint64_t v12 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v11 = sub_1E3E7A880();
  MEMORY[0x1F4188790](v11);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28A80);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77D10();
  unint64_t v7 = v6;
  uint64_t v13 = v5;
  unint64_t v14 = v6;
  sub_1E3C14F74(v5, v6);
  sub_1E3E7AA30();
  sub_1E3C10DE8((unint64_t *)&unk_1EAE28A90, &qword_1EAE28A80);
  uint64_t v8 = sub_1E3E7AB70();
  sub_1E3C2B7E8(v5, v7);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8;
}

uint64_t sub_1E3DC7194()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_1E3C2B7E8(*(void *)(v0 + v4), *(void *)(v0 + v4 + 8));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1E3DC7308(uint64_t (*a1)(long long *))
{
  unint64_t v3 = (*(void *)(*(void *)(*(void *)(v1 + 16) - 8) + 64)
      + ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  long long v5 = *(_OWORD *)(v1 + v3);
  sub_1E3E78560();
  *(void *)&long long v5 = 0;
  BYTE8(v5) = 0;
  return a1(&v5);
}

uint64_t sub_1E3DC7438(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_1E3DC7440(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t sub_1E3DC7448(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 48);
}

uint64_t sub_1E3DC7450(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 56);
}

uint64_t sub_1E3DC7458()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1E3DC74E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    sub_1E3E775E0();
  }
  return v3;
}

uint64_t sub_1E3DC75A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1E3DC75CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1E3DC761C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1E3DC766C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1E3DC76BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1E3DC770C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1E3DC7868(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1E3DC7A80);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for DataBackgroundSessionDescriptor()
{
  return swift_getGenericMetadata();
}

id ArtworkBackgroundSessionDescriptor.imageStore.getter()
{
  return *v0;
}

uint64_t ArtworkBackgroundSessionDescriptor.caches.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ArtworkBackgroundSessionDescriptor();
  return sub_1E3DC86F4(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for AssetCaches);
}

uint64_t type metadata accessor for ArtworkBackgroundSessionDescriptor()
{
  uint64_t result = qword_1EBFE1D88;
  if (!qword_1EBFE1D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ArtworkBackgroundSessionDescriptor.init(imageStore:caches:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (uint64_t)a3 + *(int *)(type metadata accessor for ArtworkBackgroundSessionDescriptor() + 20);

  return sub_1E3DC7BAC(a2, v4);
}

uint64_t sub_1E3DC7BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetCaches();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id ArtworkBackgroundSessionDescriptor.create(session:delegate:)(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, *MEMORY[0x1E4F920C0]);
  objc_msgSend(a1, sel_setRequestCachePolicy_, 0);
  id v4 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);

  return v4;
}

uint64_t ArtworkBackgroundSessionDescriptor.load(data:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78D00();
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4F00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  size_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E77D00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v4, a1, v9);
  swift_storeEnumTagMultiPayload();
  sub_1E3E7AA30();
  sub_1E3C10DE8(&qword_1EBFE5C30, &qword_1EBFE4F00);
  uint64_t v10 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t ArtworkBackgroundSessionDescriptor.stash(asset:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE58A0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  uint64_t v70 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v68 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  uint64_t v67 = v7;
  MEMORY[0x1F4188790](v6);
  id v63 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1E3E78E70();
  uint64_t v9 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  int v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E78D00();
  MEMORY[0x1F4188790](v12 - 8);
  unsigned int v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5888);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5738);
  MEMORY[0x1F4188790](v19);
  long long v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE58D0);
  uint64_t v60 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  unint64_t v52 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE58A8);
  uint64_t v59 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  unint64_t v53 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE59B0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v64 = v24;
  uint64_t v65 = v25;
  MEMORY[0x1F4188790](v24);
  unint64_t v56 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1E3E79BF0();
  uint64_t v61 = *(void *)(v27 - 8);
  uint64_t v62 = v27;
  MEMORY[0x1F4188790](v27);
  uint64_t v51 = (char *)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E79F00();
  sub_1E3DC86F4(v54, (uint64_t)v14, MEMORY[0x1E4F91780]);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v71);
  sub_1E3E79D10();
  unint64_t v29 = *v55;
  unint64_t v73 = sub_1E3DC875C();
  uint64_t v74 = &protocol witness table for MTImageStore;
  v72[0] = v29;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v18, v15);
  sub_1E3C1B2BC((uint64_t)v72, (uint64_t)&v21[*(int *)(v19 + 36)]);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v16 + 8);
  id v31 = v29;
  v30(v18, v15);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
  sub_1E3E78AC0();
  sub_1E3C10DE8(&qword_1EBFE5730, &qword_1EBFE5738);
  uint64_t v32 = v52;
  sub_1E3E797A0();
  sub_1E3DC879C((uint64_t)v21);
  type metadata accessor for ArtworkBackgroundSessionDescriptor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  unint64_t v33 = v63;
  sub_1E3E786A0();
  sub_1E3E79BE0();
  uint64_t v34 = v66;
  uint64_t v35 = sub_1E3E78680();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v34);
  v72[0] = v35;
  char v77 = 4;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE42D0);
  uint64_t v37 = sub_1E3C10DE8(&qword_1EBFE58C8, (uint64_t *)&unk_1EBFE58D0);
  unint64_t v38 = sub_1E3CE644C();
  unint64_t v39 = MEMORY[0x1E4F917B0];
  uint64_t v40 = v53;
  uint64_t v41 = v58;
  sub_1E3E797B0();
  swift_release();
  id v42 = v32;
  uint64_t v43 = v41;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v41);
  uint64_t v44 = v68;
  uint64_t v45 = v57;
  sub_1E3E79E90();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v45);
  v72[0] = v71;
  v72[1] = v43;
  v72[2] = v36;
  unint64_t v73 = v39;
  uint64_t v74 = (_UNKNOWN **)MEMORY[0x1E4F917A0];
  uint64_t v75 = v37;
  unint64_t v76 = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v56;
  uint64_t v47 = v69;
  sub_1E3E7AB20();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v44, v47);
  sub_1E3C10DE8(&qword_1EBFE59A8, (uint64_t *)&unk_1EBFE59B0);
  uint64_t v48 = v64;
  uint64_t v49 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v48);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v51, v62);
  return v49;
}

uint64_t sub_1E3DC86F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1E3DC875C()
{
  unint64_t result = qword_1EBFE2718;
  if (!qword_1EBFE2718)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFE2718);
  }
  return result;
}

uint64_t sub_1E3DC879C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5738);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3DC87FC()
{
  return MEMORY[0x1E4F917B0];
}

uint64_t sub_1E3DC8808()
{
  return MEMORY[0x1E4F91790];
}

uint64_t sub_1E3DC8814()
{
  return sub_1E3DC887C((unint64_t *)&unk_1EBFE42B0);
}

uint64_t sub_1E3DC8848()
{
  return sub_1E3DC887C((unint64_t *)&qword_1EBFE42A0);
}

uint64_t sub_1E3DC887C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E3E78E70();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1E3DC88C0(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSessionSendsLaunchEvents_, 1);
  objc_msgSend(a1, sel_setDiscretionary_, 1);
  objc_msgSend(a1, sel_setSharedContainerIdentifier_, *MEMORY[0x1E4F920C0]);
  objc_msgSend(a1, sel_setRequestCachePolicy_, 0);
  id v4 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, a1, a2, 0);

  return v4;
}

uint64_t sub_1E3DC8970(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78D00();
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4F00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E77D00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v4, a1, v9);
  swift_storeEnumTagMultiPayload();
  sub_1E3E7AA30();
  sub_1E3C10DE8(&qword_1EBFE5C30, &qword_1EBFE4F00);
  uint64_t v10 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

void **initializeBufferWithCopyOfBuffer for ArtworkBackgroundSessionDescriptor(void **a1, void **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = v5;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
    uint64_t v11 = type metadata accessor for AssetCaches();
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = &v7[v12];
    unsigned int v14 = &v8[v12];
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = *(int *)(v11 + 24);
    uint64_t v17 = &v7[v16];
    unint64_t v18 = &v8[v16];
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArtworkBackgroundSessionDescriptor(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for AssetCaches();
  uint64_t v7 = &v4[*(int *)(v6 + 20)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = &v4[*(int *)(v6 + 24)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

void **initializeWithCopy for ArtworkBackgroundSessionDescriptor(void **a1, void **a2, uint64_t a3)
{
  int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  id v8 = v4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
  uint64_t v10 = type metadata accessor for AssetCaches();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

void **assignWithCopy for ArtworkBackgroundSessionDescriptor(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = type metadata accessor for AssetCaches();
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = &v10[v14];
  uint64_t v16 = &v11[v14];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = *(int *)(v13 + 24);
  uint64_t v19 = &v10[v18];
  uint64_t v20 = &v11[v18];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

void *initializeWithTake for ArtworkBackgroundSessionDescriptor(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for AssetCaches();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = *(int *)(v8 + 24);
  uint64_t v14 = &v5[v13];
  uint64_t v15 = &v6[v13];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void **assignWithTake for ArtworkBackgroundSessionDescriptor(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for AssetCaches();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkBackgroundSessionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DC92A8);
}

uint64_t sub_1E3DC92A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AssetCaches();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ArtworkBackgroundSessionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DC936C);
}

void *sub_1E3DC936C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AssetCaches();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1E3DC9414()
{
  uint64_t result = type metadata accessor for AssetCaches();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MPArtworkCatalog.imageFuture.getter()
{
  return sub_1E3E7AA90();
}

uint64_t sub_1E3DC9528()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

id MPArtworkCatalog.artworkDataPublisher.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28B60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28B68);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28B70);
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v26 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28B78);
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v27 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6380);
  swift_allocObject();
  id v33 = (id)sub_1E3E7AA90();
  id result = objc_msgSend(self, sel_defaultPodcastArtwork);
  if (result)
  {
    uint64_t v14 = result;
    id v32 = result;
    sub_1E3C10DE8(&qword_1EBFE6378, &qword_1EBFE6380);
    sub_1E3E7ABA0();
    swift_release();

    sub_1E3C8E038();
    id v33 = (id)sub_1E3E7D5D0();
    uint64_t v15 = sub_1E3E7D640();
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    v23(v2, 1, 1, v15);
    sub_1E3C10DE8(&qword_1EAE28B80, &qword_1EAE28B60);
    sub_1E3C32D34();
    sub_1E3E7AD10();
    sub_1E3CF1828((uint64_t)v2);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    type metadata accessor for NowPlayingArtwork.Data();
    sub_1E3C10DE8(&qword_1EAE28B88, &qword_1EAE28B68);
    uint64_t v16 = v26;
    uint64_t v17 = v24;
    sub_1E3E7ABF0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v17);
    id v33 = (id)sub_1E3E7D6A0();
    v23(v2, 1, 1, v15);
    sub_1E3C10DE8(&qword_1EAE28B90, &qword_1EAE28B70);
    uint64_t v18 = v27;
    uint64_t v19 = v30;
    sub_1E3E7AD10();
    sub_1E3CF1828((uint64_t)v2);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v19);
    sub_1E3C10DE8(&qword_1EAE28B98, &qword_1EAE28B78);
    uint64_t v20 = v31;
    uint64_t v21 = sub_1E3E7AB70();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v20);
    return (id)v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3DC9B34@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(*a1, sel_imageByPreparingForDisplay);
  if (!v4) {
    id v4 = v3;
  }
  *a2 = v4;
  type metadata accessor for NowPlayingArtwork.Data();

  return swift_storeEnumTagMultiPayload();
}

void sub_1E3DC9BA0(void (*a1)(void **), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1E4E79630](a3 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v8;
    v9[3] = sub_1E3DC9D78;
    void v9[4] = v6;
    uint64_t v18 = sub_1E3DCA398;
    uint64_t v19 = v9;
    uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
    uint64_t v15 = 1107296256;
    uint64_t v16 = sub_1E3C8DA20;
    uint64_t v17 = &block_descriptor_28;
    uint64_t v10 = _Block_copy(&aBlock);
    sub_1E3E775E0();
    id v11 = v8;
    swift_release();
    objc_msgSend(v11, sel_requestImageWithCompletion_, v10);
    _Block_release(v10);
  }
  else
  {
    sub_1E3E775E0();
    swift_release();
    sub_1E3DC9D84();
    uint64_t v12 = (void *)swift_allocError();
    *uint64_t v13 = 0;
    uint64_t aBlock = v12;
    LOBYTE(v15) = 1;
    a1(&aBlock);
  }
}

uint64_t sub_1E3DC9D40()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DC9D78(uint64_t a1, char a2)
{
  return sub_1E3D48210(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

unint64_t sub_1E3DC9D84()
{
  unint64_t result = qword_1EAE28BA0;
  if (!qword_1EAE28BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28BA0);
  }
  return result;
}

void sub_1E3DC9DD8(void *a1, void *a2, void *a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v10 = sub_1E3E7A880();
  id v11 = *(void (***)(char *, uint64_t))(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v44 - v15;
  if (a2)
  {
    uint64_t v49 = v11;
    id v17 = a2;
    sub_1E3E7A7F0();
    id v18 = a2;
    id v19 = a3;
    id v20 = a2;
    id v21 = v19;
    uint64_t v22 = sub_1E3E7A860();
    os_log_type_t v23 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v47 = a5;
      uint64_t v25 = v24;
      uint64_t v44 = (void *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v45 = v26;
      *(_DWORD *)uint64_t v25 = 141558531;
      uint64_t v50 = 1752392040;
      uint64_t v51 = v26;
      uint64_t v48 = a4;
      sub_1E3E7DBD0();
      *(_WORD *)(v25 + 12) = 2113;
      uint64_t v46 = (void *)v10;
      uint64_t v50 = (uint64_t)v21;
      id v27 = v21;
      sub_1E3E7DBD0();
      uint64_t v28 = v44;
      *uint64_t v44 = v21;

      *(_WORD *)(v25 + 22) = 2082;
      swift_getErrorValue();
      uint64_t v29 = sub_1E3E7E210();
      uint64_t v50 = sub_1E3C150B8(v29, v30, &v51);
      a4 = v48;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1E3BC5000, v22, v23, "[NowPlayingArtworkController/MPArtworkCatalog]: Unable to fetch image for item: %{private,mask.hash}@ with error %{public}s.", (uint8_t *)v25, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v28, -1, -1);
      uint64_t v31 = v45;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v31, -1, -1);
      MEMORY[0x1E4E79510](v25, -1, -1);

      v49[1](v16, (uint64_t)v46);
    }
    else
    {

      v49[1](v16, v10);
    }
    id v33 = a2;
    a4(a2, 1);

    id v32 = a2;
  }
  else if (a1)
  {
    uint64_t v49 = a1;
    a4(a1, 0);
    id v32 = v49;
  }
  else
  {
    sub_1E3E7A7F0();
    uint64_t v34 = a3;
    uint64_t v35 = sub_1E3E7A860();
    os_log_type_t v36 = sub_1E3E7D4E0();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      LODWORD(v47) = v37;
      uint64_t v39 = v38;
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 141558275;
      uint64_t v51 = 1752392040;
      uint64_t v48 = a4;
      sub_1E3E7DBD0();
      *(_WORD *)(v39 + 12) = 2113;
      uint64_t v49 = v11;
      uint64_t v51 = (uint64_t)v34;
      uint64_t v40 = v34;
      a4 = v48;
      id v11 = v49;
      sub_1E3E7DBD0();
      uint64_t v41 = v46;
      void *v46 = v34;

      _os_log_impl(&dword_1E3BC5000, v35, (os_log_type_t)v47, "[NowPlayingArtworkController/MPArtworkCatalog]: Unable to fetch image for item: %{private,mask.hash}@.", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v41, -1, -1);
      MEMORY[0x1E4E79510](v39, -1, -1);
    }
    else
    {

      uint64_t v35 = v34;
    }

    v11[1](v13, v10);
    sub_1E3DC9D84();
    uint64_t v42 = swift_allocError();
    *uint64_t v43 = 1;
    a4(v42, 1);
    id v32 = (void *)v42;
  }
}

uint64_t sub_1E3DCA358()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3DCA398(void *a1, void *a2)
{
  sub_1E3DC9DD8(a1, a2, *(void **)(v2 + 16), *(void (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

unsigned char *_s6ErrorsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3DCA470);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ErrorsOMa()
{
  return &_s6ErrorsON;
}

unint64_t sub_1E3DCA4AC()
{
  unint64_t result = qword_1EAE28BA8;
  if (!qword_1EAE28BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28BA8);
  }
  return result;
}

uint64_t PUITextStyle.init(style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PUITextStyle();
  uint64_t v5 = a2 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1E3E7B330();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  uint64_t v8 = a2 + *(int *)(v4 + 24);
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = sub_1E3E7B370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a2, a1, v9);
  sub_1E3C10CE0(v5, &qword_1EBFE2580);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v6);
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  return result;
}

uint64_t type metadata accessor for PUITextStyle()
{
  uint64_t result = qword_1EBFDF510;
  if (!qword_1EBFDF510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static PUITextStyle.largeTitle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E130], a1);
}

uint64_t static PUITextStyle.title1.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E148], a1);
}

uint64_t sub_1E3DCA67C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E7B370();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v5 + 104))(v8, *a1, v4, v6);
  uint64_t v9 = type metadata accessor for PUITextStyle();
  uint64_t v10 = a2 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1E3E7B330();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  uint64_t v13 = a2 + *(int *)(v9 + 24);
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
  sub_1E3C10CE0(v10, &qword_1EBFE2580);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12)(v10, 1, 1, v11);
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  return result;
}

uint64_t static PUITextStyle.title2.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E150], a1);
}

uint64_t static PUITextStyle.title3.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E158], a1);
}

uint64_t static PUITextStyle.headline.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E188], a1);
}

uint64_t static PUITextStyle.body.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E140], a1);
}

uint64_t static PUITextStyle.callout.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E160], a1);
}

uint64_t static PUITextStyle.subhead.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E138], a1);
}

uint64_t static PUITextStyle.footnote.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E178], a1);
}

uint64_t static PUITextStyle.caption1.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E168], a1);
}

uint64_t static PUITextStyle.caption2.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA67C(MEMORY[0x1E4F3E170], a1);
}

uint64_t PUITextStyle.tight.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA998(MEMORY[0x1E4F3E0F8], a1);
}

uint64_t sub_1E3DCA890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PUITextStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PUITextStyle.standardLeading.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3DCA890(v1, a1);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for PUITextStyle() + 20);
  sub_1E3C10CE0(v3, &qword_1EBFE2580);
  uint64_t v4 = sub_1E3E7B330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t PUITextStyle.loose.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCA998(MEMORY[0x1E4F3E0E8], a1);
}

uint64_t sub_1E3DCA998@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  sub_1E3DCA890(v4, a2);
  uint64_t v6 = a2 + *(int *)(type metadata accessor for PUITextStyle() + 20);
  sub_1E3C10CE0(v6, &qword_1EBFE2580);
  uint64_t v7 = *a1;
  uint64_t v8 = sub_1E3E7B330();
  uint64_t v11 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(v6, v7, v8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);

  return v9(v6, 0, 1, v8);
}

uint64_t PUITextStyle.emph.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3DCA890(v1, a1);
  sub_1E3E7B300();
  uint64_t v4 = v3;
  uint64_t result = type metadata accessor for PUITextStyle();
  uint64_t v6 = a1 + *(int *)(result + 24);
  *(void *)uint64_t v6 = v4;
  *(unsigned char *)(v6 + 8) = 0;
  return result;
}

uint64_t PUITextStyle.font.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7B330();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2578);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E7B2B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1E3E7B310();
  sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE2578);
  uint64_t v12 = type metadata accessor for PUITextStyle();
  sub_1E3DCAD9C(v0 + *(int *)(v12 + 20), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F3E100], v4);
    sub_1E3E775E0();
    sub_1E3C10CE0((uint64_t)v3, &qword_1EBFE2580);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_1E3E775E0();
  }
  sub_1E3E7B340();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (*(unsigned char *)(v0 + *(int *)(v12 + 24) + 8)) {
    sub_1E3E7B2F0();
  }
  uint64_t v13 = sub_1E3E7B320();
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_1E3DCAD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PUITextStyle.hash(into:)()
{
  uint64_t v1 = sub_1E3E7B330();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7B370();
  sub_1E3DCCD1C(&qword_1EAE28BB0, MEMORY[0x1E4F3E190]);
  sub_1E3E7CC30();
  uint64_t v8 = type metadata accessor for PUITextStyle();
  sub_1E3DCAD9C(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1E3E7E290();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1E3E7E290();
    sub_1E3DCCD1C(&qword_1EAE28BB8, MEMORY[0x1E4F3E108]);
    sub_1E3E7CC30();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (*(unsigned char *)(v0 + *(int *)(v8 + 24) + 8) == 1) {
    return sub_1E3E7E290();
  }
  sub_1E3E7E290();
  return sub_1E3E7B2E0();
}

uint64_t PUITextStyle.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DCB0C0()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DCB104()
{
  return sub_1E3E7E2B0();
}

double PUITextStyle.lineHeight.getter()
{
  id v0 = PUITextStyle.uiFont.getter();
  objc_msgSend(v0, sel_lineHeight);
  double v2 = v1;

  return v2;
}

id PUITextStyle.uiFont.getter()
{
  uint64_t v1 = type metadata accessor for PUITextStyle();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3DCAD9C(v0 + *(int *)(v1 + 20), (uint64_t)v6);
  uint64_t v7 = sub_1E3E7B330();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    int v9 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v6, v7);
    if (v9 != *MEMORY[0x1E4F3E100])
    {
      if (v9 == *MEMORY[0x1E4F3E0F8])
      {
        unsigned int v10 = 0x8000;
        goto LABEL_9;
      }
      if (v9 == *MEMORY[0x1E4F3E0E8])
      {
        unsigned int v10 = 0x10000;
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  unsigned int v10 = 0;
LABEL_9:
  char v11 = *(unsigned char *)(v0 + *(int *)(v1 + 24) + 8);
  sub_1E3E7B2D0();
  if (v11)
  {
    sub_1E3DCA890(v0, (uint64_t)v3);
  }
  else
  {
    char v12 = sub_1E3E7B2C0();
    sub_1E3DCA890(v0, (uint64_t)v3);
    if (v12)
    {
      sub_1E3DCBEFC((uint64_t)v3);
      goto LABEL_16;
    }
  }
  char v13 = v3[*(int *)(v1 + 24) + 8];
  sub_1E3E7B300();
  if (v13)
  {
    sub_1E3DCBEFC((uint64_t)v3);
    goto LABEL_18;
  }
  char v14 = sub_1E3E7B2C0();
  sub_1E3DCBEFC((uint64_t)v3);
  if (v14)
  {
LABEL_16:
    uint64_t v15 = v10 | 2;
    if (v15) {
      goto LABEL_19;
    }
LABEL_17:
    uint64_t v16 = self;
    id v17 = sub_1E3DCB5A0();
    id v18 = objc_msgSend(v16, sel_preferredFontForTextStyle_, v17);
LABEL_22:
    id v22 = v18;
    goto LABEL_23;
  }
LABEL_18:
  uint64_t v15 = v10;
  if (!v10) {
    goto LABEL_17;
  }
LABEL_19:
  id v17 = sub_1E3DCB5A0();
  id v19 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, v17);
  id v20 = objc_msgSend(v19, sel_fontDescriptorWithSymbolicTraits_, v15);

  id v21 = self;
  if (!v20)
  {
    id v18 = objc_msgSend(v21, sel_preferredFontForTextStyle_, v17);
    goto LABEL_22;
  }
  id v22 = objc_msgSend(v21, sel_fontWithDescriptor_size_, v20, 0.0);

  id v17 = v20;
LABEL_23:

  return v22;
}

double PUITextStyle.leadingHeight.getter()
{
  id v0 = PUITextStyle.uiFont.getter();
  objc_msgSend(v0, sel_leading);
  double v2 = v1;

  return v2;
}

double PUITextStyle.scaledValue(for:compatibleWith:)(uint64_t a1, double a2)
{
  id v4 = sub_1E3DCB5A0();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, v4);

  objc_msgSend(v5, sel_scaledValueForValue_compatibleWithTraitCollection_, a1, a2);
  double v7 = v6;

  return v7;
}

id sub_1E3DCB5A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E7B370();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  double v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E4F3E130])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB2928];
  }
  else if (v7 == *MEMORY[0x1E4F3E148])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB2988];
  }
  else if (v7 == *MEMORY[0x1E4F3E150])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB2990];
  }
  else if (v7 == *MEMORY[0x1E4F3E158])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB2998];
  }
  else if (v7 == *MEMORY[0x1E4F3E188])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB2908];
  }
  else if (v7 == *MEMORY[0x1E4F3E138])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB2950];
  }
  else if (v7 == *MEMORY[0x1E4F3E140])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB28C8];
  }
  else if (v7 == *MEMORY[0x1E4F3E160])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB28D0];
  }
  else if (v7 == *MEMORY[0x1E4F3E178])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB28F0];
  }
  else if (v7 == *MEMORY[0x1E4F3E168])
  {
    uint64_t v8 = (void **)MEMORY[0x1E4FB28D8];
  }
  else
  {
    if (v7 != *MEMORY[0x1E4F3E170])
    {
      char v11 = *(void (**)(char *, uint64_t))(v3 + 8);
      id v12 = (id)*MEMORY[0x1E4FB28C8];
      v11(v6, v2);
      return v12;
    }
    uint64_t v8 = (void **)MEMORY[0x1E4FB28E0];
  }
  int v9 = *v8;

  return v9;
}

uint64_t Text.puiFont(_:)()
{
  PUITextStyle.font.getter();
  uint64_t v0 = sub_1E3E7B3A0();
  swift_release();
  return v0;
}

uint64_t View.puiFont(_:)()
{
  PUITextStyle.font.getter();
  sub_1E3E7B490();

  return swift_release();
}

uint64_t ScaledMetric.init(wrappedValue:relativeTo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B370();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a3 - 8);
  double v12 = MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_1E3E7AEC0();
  sub_1E3DCBEFC(a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a3);
}

uint64_t _s10PodcastsUI12PUITextStyleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B330();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE47E0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v34 - v15;
  double v18 = MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v34 - v19;
  if ((MEMORY[0x1E4E74C80](a1, a2, v18) & 1) == 0) {
    return 0;
  }
  uint64_t v34 = v7;
  uint64_t v21 = v5;
  uint64_t v22 = type metadata accessor for PUITextStyle();
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v36 = a1;
  sub_1E3DCAD9C(a1 + v23, (uint64_t)v20);
  uint64_t v35 = v22;
  uint64_t v24 = *(int *)(v22 + 20);
  uint64_t v25 = v21;
  uint64_t v37 = a2;
  sub_1E3DCAD9C(a2 + v24, (uint64_t)v16);
  uint64_t v26 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1E3DCAD9C((uint64_t)v20, (uint64_t)v10);
  sub_1E3DCAD9C((uint64_t)v16, v26);
  id v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v27((uint64_t)v10, 1, v4) != 1)
  {
    sub_1E3DCAD9C((uint64_t)v10, (uint64_t)v13);
    if (v27(v26, 1, v4) != 1)
    {
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
      unint64_t v30 = v34;
      v29(v34, v26, v4);
      sub_1E3DCCD1C(&qword_1EBFE47D8, MEMORY[0x1E4F3E108]);
      char v31 = sub_1E3E7CCA0();
      id v32 = *(void (**)(char *, uint64_t))(v25 + 8);
      v32(v30, v4);
      sub_1E3C10CE0((uint64_t)v16, &qword_1EBFE2580);
      sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE2580);
      v32(v13, v4);
      sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE2580);
      if ((v31 & 1) == 0) {
        return 0;
      }
      goto LABEL_11;
    }
    sub_1E3C10CE0((uint64_t)v16, &qword_1EBFE2580);
    sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE2580);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v4);
LABEL_7:
    sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE47E0);
    return 0;
  }
  sub_1E3C10CE0((uint64_t)v16, &qword_1EBFE2580);
  sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE2580);
  if (v27(v26, 1, v4) != 1) {
    goto LABEL_7;
  }
  sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE2580);
LABEL_11:
  uint64_t v33 = *(int *)(v35 + 24);
  if (*(unsigned char *)(v36 + v33 + 8))
  {
    if (*(unsigned char *)(v37 + v33 + 8)) {
      return 1;
    }
  }
  else if (*(unsigned char *)(v37 + v33 + 8) & 1) == 0 && (sub_1E3E7B2C0())
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1E3DCBEFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PUITextStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3DCBF58()
{
  return sub_1E3DCCD1C(&qword_1EAE28BC0, (void (*)(uint64_t))type metadata accessor for PUITextStyle);
}

uint64_t *initializeBufferWithCopyOfBuffer for PUITextStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = sub_1E3E7B370();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1E3E7B330();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
  }
  return a1;
}

uint64_t destroy for PUITextStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B370();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1E3E7B330();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t initializeWithCopy for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1E3E7B330();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t assignWithCopy for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1E3E7B330();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  double v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  *(unsigned char *)(v17 + 8) = *((unsigned char *)v18 + 8);
  *(void *)uint64_t v17 = v19;
  return a1;
}

uint64_t initializeWithTake for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1E3E7B330();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t assignWithTake for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1E3E7B330();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DCC910);
}

uint64_t sub_1E3DCC910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B370();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PUITextStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DCCA20);
}

uint64_t sub_1E3DCCA20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1E3E7B370();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2580);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1E3DCCB28()
{
  sub_1E3E7B370();
  if (v0 <= 0x3F)
  {
    sub_1E3DCCBF8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1E3DCCBF8()
{
  if (!qword_1EBFE2588)
  {
    sub_1E3E7B330();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE2588);
    }
  }
}

uint64_t sub_1E3DCCC50()
{
  return swift_getWitnessTable();
}

unint64_t sub_1E3DCCCC0()
{
  unint64_t result = qword_1EBFE4D00;
  if (!qword_1EBFE4D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE4D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4D00);
  }
  return result;
}

uint64_t sub_1E3DCCD1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3DCCD64()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DCCE90()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DCCEE4()
{
  return sub_1E3E7E2A0();
}

uint64_t sub_1E3DCCF18()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DCD040()
{
  return sub_1E3E7E2B0();
}

double SizeClass.margins(width:)(char a1)
{
  return dbl_1E3E92F78[a1];
}

double SizeClass.gutters.getter(char a1)
{
  return dbl_1E3E92FB8[a1];
}

BOOL sub_1E3DCD0BC(char a1, char a2)
{
  return dbl_1E3E92FF8[a2] >= dbl_1E3E92FF8[a1];
}

BOOL sub_1E3DCD0E0(char a1, char a2)
{
  return dbl_1E3E92FF8[a1] >= dbl_1E3E92FF8[a2];
}

BOOL sub_1E3DCD104(char a1, char a2)
{
  return dbl_1E3E92FF8[a2] < dbl_1E3E92FF8[a1];
}

uint64_t _s10PodcastsUI9SizeClassO5widthAC12CoreGraphics7CGFloatV_tcfC_0(double a1)
{
  if (qword_1EBFE20D0 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v2 = *((void *)off_1EBFE20C0 + 2);
  if (v2)
  {
    uint64_t v3 = (char *)off_1EBFE20C0 + 32;
    uint64_t v4 = *((void *)off_1EBFE20C0 + 2);
    while (1)
    {
      uint64_t v6 = *v3++;
      unsigned __int8 v5 = v6;
      if (dbl_1E3E92FF8[v6] > a1) {
        break;
      }
      if (!--v4) {
        return *((unsigned __int8 *)off_1EBFE20C0 + v2 + 31);
      }
    }
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double SizeClass.rawValue.getter(char a1)
{
  return dbl_1E3E92FF8[a1];
}

void *sub_1E3DCD1DC()
{
  uint64_t v1 = &unk_1F3F47D68;
  sub_1E3DCD6B8((uint64_t *)&v1);
  uint64_t result = v1;
  off_1EBFE20C0 = v1;
  return result;
}

void *static SizeClass.allCases.getter()
{
  return &unk_1F3F47D68;
}

BOOL sub_1E3DCD244(char *a1, char *a2)
{
  return sub_1E3E51038(*a1, *a2);
}

uint64_t sub_1E3DCD250@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s10PodcastsUI9SizeClassO8rawValueACSg12CoreGraphics7CGFloatV_tcfC_0(*a1);
  *a2 = result;
  return result;
}

double sub_1E3DCD27C@<D0>(double *a1@<X8>)
{
  double result = dbl_1E3E92FF8[*v1];
  *a1 = result;
  return result;
}

void sub_1E3DCD294(void *a1@<X8>)
{
  *a1 = &unk_1F3F47D68;
}

uint64_t sub_1E3DCD2A4()
{
  return sub_1E3DCCE90();
}

uint64_t sub_1E3DCD2AC()
{
  return sub_1E3DCCEE4();
}

uint64_t sub_1E3DCD2B4()
{
  return sub_1E3DCD040();
}

BOOL sub_1E3DCD2BC(char *a1, char *a2)
{
  return _s10PodcastsUI9SizeClassO1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_1E3DCD2C8(char *a1, char *a2)
{
  return sub_1E3DCD0BC(*a1, *a2);
}

BOOL sub_1E3DCD2D4(char *a1, char *a2)
{
  return sub_1E3DCD0E0(*a1, *a2);
}

BOOL sub_1E3DCD2E0(char *a1, char *a2)
{
  return sub_1E3DCD104(*a1, *a2);
}

BOOL static SizeClass.SizeClassCategory.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t SizeClass.SizeClassCategory.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t SizeClass.SizeClassCategory.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t static SizeClass.deviceCategory.getter()
{
  id v0 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v0, sel_nativeBounds);
  double v2 = v1;
  double v4 = v3;

  if (v2 == 320.0 && v4 == 480.0) {
    return 0;
  }
  if (v2 == 640.0 && (v4 == 960.0 || v4 == 1136.0)) {
    return 0;
  }
  uint64_t result = 1;
  if (v2 != 750.0 || v4 != 1334.0)
  {
    if (v4 == 1920.0 && v2 == 1080.0) {
      return 1;
    }
    else {
      return 2;
    }
  }
  return result;
}

void sub_1E3DCD468()
{
  if ((byte_1EAE263F0 & 1) != 0
    || (id v0 = objc_msgSend(self, sel_currentDevice),
        id v1 = objc_msgSend(v0, sel_userInterfaceIdiom),
        v0,
        v1))
  {
    BOOL v2 = 0;
  }
  else
  {
    id v3 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v3, sel_bounds);
    double v5 = v4;
    double v7 = v6;

    BOOL v2 = v7 / v5 < 2.0;
  }
  byte_1EBFE4C80 = v2;
}

uint64_t static SizeClass.isPhone8RatioOrSmaller.getter()
{
  if (qword_1EBFE4C98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return byte_1EBFE4C80;
}

uint64_t static SizeClass.isPhone8RatioOrSmaller.setter(char a1)
{
  if (qword_1EBFE4C98 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  byte_1EBFE4C80 = a1 & 1;
  return result;
}

uint64_t (*static SizeClass.isPhone8RatioOrSmaller.modify())()
{
  if (qword_1EBFE4C98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL SizeClass.isIpadWide.getter(unsigned __int8 a1)
{
  return a1 > 1u;
}

uint64_t sub_1E3DCD6B8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1E3DF0C20(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1E3DCD724(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1E3DCD724(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1E3E7E0D0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_130;
    }
    if (v3) {
      return sub_1E3DCDD90(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_138;
  }
  uint64_t v88 = result;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_96:
      uint64_t v78 = v11;
      uint64_t v87 = v8;
      if (v12 >= 2)
      {
        uint64_t v79 = *v2;
        do
        {
          unint64_t v80 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_125;
          }
          if (!v79) {
            goto LABEL_137;
          }
          uint64_t v81 = v78;
          uint64_t v82 = *(void *)&v78[16 * v80 + 32];
          uint64_t v83 = *(void *)&v78[16 * v12 + 24];
          sub_1E3DCDE08((char *)(v79 + v82), (char *)(v79 + *(void *)&v78[16 * v12 + 16]), v79 + v83, __dst);
          if (v1) {
            break;
          }
          if (v83 < v82) {
            goto LABEL_126;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v81 = sub_1E3DF0BBC((uint64_t)v81);
          }
          if (v80 >= *((void *)v81 + 2)) {
            goto LABEL_127;
          }
          id v84 = &v81[16 * v80 + 32];
          *(void *)id v84 = v82;
          *((void *)v84 + 1) = v83;
          unint64_t v85 = *((void *)v81 + 2);
          if (v12 > v85) {
            goto LABEL_128;
          }
          memmove(&v81[16 * v12 + 16], &v81[16 * v12 + 32], 16 * (v85 - v12));
          uint64_t v78 = v81;
          *((void *)v81 + 2) = v85 - 1;
          unint64_t v12 = v85 - 1;
        }
        while (v85 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v87 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v87 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1E3E7D0F0();
    *(void *)(v7 + 16) = v6;
    uint64_t v87 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v86 = v2;
  uint64_t v10 = *v2;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v89 = v3;
  uint64_t v90 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(char *)(v10 + v9);
      double v15 = dbl_1E3E92FF8[v14];
      double v16 = dbl_1E3E92FF8[*(char *)(v10 + v13)];
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        while (v15 < v16 != dbl_1E3E92FF8[*(char *)(v10 + v9)] >= dbl_1E3E92FF8[(char)v14])
        {
          LOBYTE(v14) = *(unsigned char *)(v10 + v9++);
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v9 < v13) {
          goto LABEL_131;
        }
        if (v13 < v9)
        {
          uint64_t v17 = v9 - 1;
          uint64_t v18 = v13;
          do
          {
            if (v18 != v17)
            {
              if (!v10) {
                goto LABEL_136;
              }
              char v19 = *(unsigned char *)(v10 + v18);
              *(unsigned char *)(v10 + v18) = *(unsigned char *)(v10 + v17);
              *(unsigned char *)(v10 + v17) = v19;
            }
            BOOL v59 = ++v18 < v17--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_129;
    }
    if (v9 - v13 >= v88) {
      goto LABEL_46;
    }
    uint64_t v20 = v13 + v88;
    if (__OFADD__(v13, v88)) {
      goto LABEL_132;
    }
    if (v20 >= v3) {
      uint64_t v20 = v3;
    }
    if (v20 < v13) {
      break;
    }
    if (v9 != v20)
    {
      uint64_t v21 = (unsigned char *)(v10 + v9);
      do
      {
        char v22 = *(unsigned char *)(v10 + v9);
        double v23 = dbl_1E3E92FF8[v22];
        uint64_t v24 = v13;
        uint64_t v25 = v21;
        do
        {
          uint64_t v26 = (char)*(v25 - 1);
          if (v23 >= dbl_1E3E92FF8[v26]) {
            break;
          }
          if (!v10) {
            goto LABEL_134;
          }
          *uint64_t v25 = v26;
          *--uint64_t v25 = v22;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v21;
      }
      while (v9 != v20);
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_124;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1E3DF0694(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v90;
    if (v28 >= v27 >> 1)
    {
      char v77 = sub_1E3DF0694((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v90;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    unint64_t v30 = &v11[16 * v28 + 32];
    *(void *)unint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_113;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_114;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_116;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_119;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_123;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_77;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_115;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_118;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_121;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_122;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_83:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v54) {
          goto LABEL_117;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_120;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v10) {
          goto LABEL_135;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        unint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1E3DCDE08((char *)(v10 + *(void *)v71), (char *)(v10 + *(void *)v74), v10 + v75, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v75 < v72) {
          goto LABEL_110;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_111;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_112;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v90;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v89;
    if (v9 >= v89)
    {
      uint64_t v2 = v86;
      uint64_t v8 = v87;
      goto LABEL_96;
    }
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  uint64_t result = sub_1E3E7DF70();
  __break(1u);
  return result;
}

uint64_t sub_1E3DCDD90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = (unsigned char *)(*a4 + a3);
LABEL_5:
    char v6 = *(unsigned char *)(v4 + a3);
    double v7 = dbl_1E3E92FF8[v6];
    uint64_t v8 = result;
    uint64_t v9 = v5;
    while (1)
    {
      uint64_t v10 = (char)*(v9 - 1);
      if (v7 >= dbl_1E3E92FF8[v10])
      {
LABEL_4:
        ++a3;
        ++v5;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      *uint64_t v9 = v10;
      *--uint64_t v9 = v6;
      if (a3 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1E3DCDE08(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char v22 = __src;
  uint64_t v4 = __dst;
  char v6 = a2;
  double v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst) {
        memmove(__dst, a2, a3 - (void)a2);
      }
      uint64_t v14 = &v4[v9];
      uint64_t v20 = &v4[v9];
      char v22 = v6;
      if (v7 < v6 && (char *)a3 != v6)
      {
        double v15 = (char *)(a3 - 1);
        while (1)
        {
          double v16 = v6 - 1;
          uint64_t v17 = *(v6 - 1);
          uint64_t v18 = v15 + 1;
          if (dbl_1E3E92FF8[*(v14 - 1)] >= dbl_1E3E92FF8[v17])
          {
            uint64_t v20 = v14 - 1;
            if (v18 < v14 || v15 >= v14 || v18 != v14) {
              *double v15 = *(v14 - 1);
            }
            --v14;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v18 != v6 || v15 >= v6) {
              *double v15 = v17;
            }
            char v22 = --v6;
            if (v16 <= v7) {
              goto LABEL_38;
            }
          }
          --v15;
          if (v14 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    uint64_t v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        uint64_t v11 = *v6;
        uint64_t v12 = *v4;
        if (dbl_1E3E92FF8[v11] >= dbl_1E3E92FF8[v12])
        {
          if (v7 != v4) {
            *double v7 = v12;
          }
          uint64_t v21 = ++v4;
          uint64_t v13 = v6;
        }
        else
        {
          uint64_t v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6) {
            *double v7 = v11;
          }
        }
        ++v7;
        if (v4 >= v10) {
          break;
        }
        char v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      char v22 = v7;
    }
LABEL_38:
    sub_1E3DF09D8((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  uint64_t result = sub_1E3E7E010();
  __break(1u);
  return result;
}

BOOL _s10PodcastsUI9SizeClassO1loiySbAC_ACtFZ_0(char a1, char a2)
{
  return dbl_1E3E92FF8[a1] < dbl_1E3E92FF8[a2];
}

uint64_t _s10PodcastsUI9SizeClassO8rawValueACSg12CoreGraphics7CGFloatV_tcfC_0(double a1)
{
  if (a1 == 375.0) {
    return 0;
  }
  if (a1 == 501.0) {
    return 1;
  }
  if (a1 == 727.0) {
    return 2;
  }
  if (a1 == 982.0) {
    return 3;
  }
  if (a1 == 1195.0) {
    return 4;
  }
  if (a1 == 4000.0) {
    int v2 = 7;
  }
  else {
    int v2 = 8;
  }
  if (a1 == 2501.0) {
    unsigned int v3 = 6;
  }
  else {
    unsigned int v3 = v2;
  }
  if (a1 == 1501.0) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t sub_1E3DCE174()
{
  unint64_t result = qword_1EAE28BC8;
  if (!qword_1EAE28BC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28BD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28BC8);
  }
  return result;
}

unint64_t sub_1E3DCE1D4()
{
  unint64_t result = qword_1EAE28BD8;
  if (!qword_1EAE28BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28BD8);
  }
  return result;
}

unint64_t sub_1E3DCE22C()
{
  unint64_t result = qword_1EAE28BE0;
  if (!qword_1EAE28BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28BE0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SizeClass(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SizeClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3DCE3DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SizeClass()
{
  return &type metadata for SizeClass;
}

unsigned char *storeEnumTagSinglePayload for SizeClass.SizeClassCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3DCE4E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SizeClass.SizeClassCategory()
{
  return &type metadata for SizeClass.SizeClassCategory;
}

unint64_t GlobalSettingsDeepLinkState.Destination.rawValue.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1E3DCE540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  char v35 = a6 & 1;
  uint64_t v38 = a7;
  uint64_t v39 = a8;
  uint64_t v40 = a11;
  memset(v37, 0, sizeof(v37));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28DE0);
  sub_1E3E7B600();
  sub_1E3E7B600();
  *(unsigned char *)(a9 + 136) = 0;
  *(void *)(a9 + 144) = 0;
  sub_1E3E7B600();
  uint64_t v23 = *((void *)&v37[0] + 1);
  *(unsigned char *)(a9 + 152) = v37[0];
  *(void *)(a9 + 160) = v23;
  uint64_t v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28CA8);
  uint64_t v25 = v24[26];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28DE8);
  sub_1E3E7B600();
  *(_OWORD *)(a9 + v25) = v37[0];
  uint64_t v26 = v24[27];
  sub_1E3E7B600();
  *(_OWORD *)(a9 + v26) = v37[0];
  *(void *)(a9 + 168) = a1;
  *(void *)(a9 + 176) = a2;
  *(void *)(a9 + 184) = a3;
  *(void *)(a9 + 192) = a4;
  uint64_t v27 = a9 + v24[22];
  uint64_t v28 = sub_1E3E7AE50();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, a5, v28);
  *(unsigned char *)(a9 + v24[24]) = v35;
  unint64_t v31 = (void *)(a9 + v24[23]);
  void *v31 = a15;
  v31[1] = a16;
  double v32 = a10 * 1000000000.0;
  if ((~COERCE__INT64(a10 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v32 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v32 < 1.84467441e19)
  {
    *(void *)(a9 + v24[25]) = (unint64_t)v32;
    *(void *)a9 = a7;
    *(void *)(a9 + 8) = a8;
    *(void *)(a9 + 16) = a11;
    *(void *)(a9 + 24) = a12;
    *(void *)(a9 + 32) = a13;
    *(unsigned char *)(a9 + 40) = a14 & 1;
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
    MEMORY[0x1E4E74FC0](v37, v33);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(a5, v28);
    *(void *)(a9 + 48) = *(void *)&v37[0];
    *(void *)(a9 + 56) = 0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t GlobalSettingsDeepLinkState.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_1E3E7AAB0();
  return v0;
}

uint64_t sub_1E3DCE844()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0820);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28EC0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v46 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28EC8);
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = sub_1E3E77AF0();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v15 = sub_1E3E77A80();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v40 - v20;
  if (*(void *)(v0 + 8) < 2uLL) {
    return sub_1E3E79530();
  }
  uint64_t v41 = v10;
  BOOL v42 = v3;
  uint64_t v48 = v19;
  char v23 = *(unsigned char *)(v0 + 32);
  uint64_t v43 = sub_1E3E79530();
  uint64_t v25 = v24;
  uint64_t v40 = v13;
  if (v23) {
    os_feature_enabled_serial_sort_auto_downloads();
  }
  id v26 = objc_msgSend(self, sel_mainBundle);
  sub_1E3E77AB0();

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1E3E86660;
  *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v27 + 64) = sub_1E3CDDA5C();
  uint64_t v28 = v43;
  *(void *)(v27 + 32) = v43;
  *(void *)(v27 + 40) = v25;
  swift_bridgeObjectRetain();
  sub_1E3E7CD60();
  swift_bridgeObjectRelease();
  sub_1E3E77AE0();
  sub_1E3E77A90();
  uint64_t v29 = v48;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v44(v17, v21, v15);
  v49[0] = v28;
  v49[1] = v25;
  uint64_t v30 = sub_1E3E77F00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v6, 1, 1, v30);
  sub_1E3DD6560(&qword_1EAE28ED0, MEMORY[0x1E4F273A8]);
  sub_1E3C10C8C();
  uint64_t v31 = (uint64_t)v46;
  sub_1E3E77B70();
  sub_1E3C10CE0((uint64_t)v6, &qword_1EBFE0820);
  double v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  uint64_t v48 = v29 + 8;
  v32(v17, v15);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v31, 1, v47) == 1)
  {
    uint64_t v33 = &qword_1EAE28EC0;
    uint64_t v34 = v31;
  }
  else
  {
    uint64_t v35 = (uint64_t)v40;
    sub_1E3CAC398(v31, (uint64_t)v40, &qword_1EAE28EC8);
    uint64_t v36 = (uint64_t)v41;
    sub_1E3C34078(v35, (uint64_t)v41, &qword_1EAE28EC8);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    uint64_t v46 = (char *)swift_getKeyPath();
    sub_1E3E7CD30();
    sub_1E3E77CD0();
    swift_bridgeObjectRelease();
    sub_1E3C10DE8(&qword_1EAE28EE0, &qword_1EAE28EC8);
    uint64_t v38 = (void (*)(void *, void))sub_1E3E77AA0();
    sub_1E3DD9F74();
    sub_1E3E77B00();
    v38(v49, 0);
    sub_1E3C10CE0(v36, &qword_1EAE28EC8);
    uint64_t v34 = v35;
    uint64_t v33 = &qword_1EAE28EC8;
  }
  sub_1E3C10CE0(v34, v33);
  v44(v17, v21, v15);
  uint64_t v22 = sub_1E3E7B3C0();
  v32(v21, v15);
  return v22;
}

uint64_t sub_1E3DCEF78()
{
  return sub_1E3E7CCA0() & 1;
}

__n128 AutoDownloadPickerView.init(autoDownloadOption:pickerType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t *a5@<X8>)
{
  __n128 v17 = *a4;
  unint64_t v9 = a4[1].n128_u64[0];
  unint64_t v10 = a4[1].n128_u64[1];
  unsigned __int8 v11 = a4[2].n128_u8[0];
  *a5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (int *)type metadata accessor for AutoDownloadPickerView(0);
  uint64_t v13 = (char *)a5 + v12[6];
  sub_1E3E7B600();
  *uint64_t v13 = v18;
  *((void *)v13 + 1) = v19;
  uint64_t v14 = (uint64_t *)((char *)a5 + v12[5]);
  *uint64_t v14 = a1;
  v14[1] = a2;
  _OWORD v14[2] = a3;
  uint64_t v15 = (__n128 *)((char *)a5 + v12[7]);
  __n128 result = v17;
  *uint64_t v15 = v17;
  v15[1].n128_u64[0] = v9;
  v15[1].n128_u64[1] = v10;
  v15[2].n128_u8[0] = v11;
  return result;
}

uint64_t AutoDownloadPickerView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C00);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C08);
  sub_1E3DD5C08();
  sub_1E3E7B380();
  sub_1E3C10DE8(&qword_1EAE28C68, &qword_1EAE28BF8);
  sub_1E3E7B3E0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v11 = sub_1E3E7B710();
  uint64_t v13 = v12;
  uint64_t v14 = (char *)(v1 + *(int *)(type metadata accessor for AutoDownloadPickerView(0) + 24));
  char v15 = *v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v24 = v15;
  uint64_t v25 = v16;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EAE27528);
  sub_1E3E7B630();
  uint64_t v17 = v26;
  uint64_t v18 = v27;
  char v19 = v28;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a1, v10, v7);
  uint64_t v20 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C70) + 36);
  *(void *)uint64_t v20 = v17;
  *(void *)(v20 + 8) = v18;
  *(unsigned char *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v11;
  *(void *)(v20 + 32) = v13;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1E3DCF344(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C38);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1E3E79530();
  uint64_t v20 = v5;
  char v21 = 0;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1E3DCF540((uint64_t)v4);
  uint64_t v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E98);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C18);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C20);
  uint64_t v8 = sub_1E3E7B0C0();
  unint64_t v9 = sub_1E3DD5D58();
  char v15 = &type metadata for AutoDownloadPicker;
  unint64_t v16 = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  char v15 = (ValueMetadata *)v7;
  unint64_t v16 = v8;
  uint64_t v17 = OpaqueTypeConformance2;
  uint64_t v18 = MEMORY[0x1E4F3D308];
  uint64_t v11 = swift_getOpaqueTypeConformance2();
  char v15 = (ValueMetadata *)v6;
  unint64_t v16 = MEMORY[0x1E4FBB550];
  uint64_t v17 = v11;
  uint64_t v18 = MEMORY[0x1E4FBB570];
  swift_getOpaqueTypeConformance2();
  sub_1E3DD5DAC();
  return sub_1E3E7B700();
}

uint64_t sub_1E3DCF540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v59 = sub_1E3E7B110();
  uint64_t v56 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v57 = (char *)&KeyPath - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E7B1F0();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x1F4188790](v3);
  BOOL v52 = (char *)&KeyPath - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C58) - 8;
  MEMORY[0x1F4188790](v50);
  uint64_t v6 = (uint64_t *)((char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for AutoDownloadPickerView(0);
  uint64_t v8 = v7 - 8;
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v47 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = sub_1E3E7AF30();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&KeyPath - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C48);
  MEMORY[0x1F4188790](v60);
  uint64_t v14 = (char *)&KeyPath - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C38);
  MEMORY[0x1F4188790](v55);
  uint64_t v45 = v1;
  uint64_t v46 = (char *)&KeyPath - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v1 + *(int *)(v8 + 36);
  LOBYTE(v15) = *(unsigned char *)(v51 + 32);
  long long v16 = *(_OWORD *)(v51 + 16);
  long long v61 = *(_OWORD *)v51;
  long long v62 = v16;
  char v63 = v15;
  uint64_t v17 = sub_1E3DCE844();
  uint64_t v19 = v18;
  uint64_t v40 = v20;
  LOBYTE(v8) = v21 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = type metadata accessor for AutoDownloadPickerView;
  uint64_t v41 = (uint64_t)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3DD9B6C(v1, v41, type metadata accessor for AutoDownloadPickerView);
  uint64_t v22 = *(unsigned __int8 *)(v47 + 80);
  uint64_t v43 = ((v22 + 16) & ~v22) + v9;
  uint64_t v23 = (v22 + 16) & ~v22;
  uint64_t v47 = v23;
  uint64_t v42 = v22 | 7;
  uint64_t v24 = swift_allocObject();
  sub_1E3DD64DC((uint64_t)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
  uint64_t v25 = v12;
  sub_1E3E7AF20();
  uint64_t v26 = v49;
  uint64_t v27 = v48;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v6 + *(int *)(v50 + 36), v25, v49);
  uint64_t *v6 = KeyPath;
  sub_1E3C34078((uint64_t)v6, (uint64_t)&v14[*(int *)(v60 + 36)], &qword_1EAE28C58);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v19;
  v14[16] = v8;
  *((void *)v14 + 3) = v40;
  swift_bridgeObjectRetain();
  sub_1E3C822F8(v17, v19, v8);
  uint64_t v28 = (uint64_t)v6;
  uint64_t v29 = (uint64_t)v46;
  sub_1E3C10CE0(v28, &qword_1EAE28C58);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
  sub_1E3C82280(v17, v19, v8);
  swift_bridgeObjectRelease();
  uint64_t v30 = v41;
  sub_1E3DD9B6C(v45, v41, v44);
  uint64_t v31 = swift_allocObject();
  sub_1E3DD64DC(v30, v31 + v47);
  double v32 = v52;
  sub_1E3E7B1E0();
  sub_1E3DD5E58();
  sub_1E3E7B480();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v54);
  sub_1E3C10CE0((uint64_t)v14, &qword_1EAE28C48);
  if (*(void *)(v51 + 8) >= 2uLL)
  {
    *(void *)&long long v61 = MEMORY[0x1E4FBC860];
    sub_1E3DD6560(&qword_1EAE28EA8, MEMORY[0x1E4F3D518]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28EB0);
    sub_1E3C10DE8(&qword_1EAE28EB8, &qword_1EAE28EB0);
    uint64_t v35 = v57;
    uint64_t v36 = v59;
    sub_1E3E7DCC0();
    uint64_t v37 = v56;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28EA0);
    uint64_t v33 = v56;
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1E3E86660;
    sub_1E3E7B100();
    *(void *)&long long v61 = v34;
    sub_1E3DD6560(&qword_1EAE28EA8, MEMORY[0x1E4F3D518]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28EB0);
    sub_1E3C10DE8(&qword_1EAE28EB8, &qword_1EAE28EB0);
    uint64_t v35 = v57;
    uint64_t v36 = v59;
    sub_1E3E7DCC0();
    uint64_t v37 = v33;
  }
  sub_1E3E7AF90();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  return sub_1E3C10CE0(v29, &qword_1EAE28C38);
}

uint64_t sub_1E3DCFCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = type metadata accessor for AutoDownloadPickerView(0);
  uint64_t v4 = (int *)(v3 - 8);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v54 = *(void *)(v55 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v52 = (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1E3E7B0C0();
  uint64_t v50 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v46 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C20);
  uint64_t v48 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v41 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C18);
  uint64_t v53 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v43 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = a1 + v4[7];
  uint64_t v9 = *(void *)(v45 + 16);
  long long v67 = *(_OWORD *)v45;
  uint64_t v68 = v9;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  sub_1E3E7B6C0();
  long long v10 = v57;
  v39[1] = v57;
  uint64_t v11 = v58;
  uint64_t v12 = a1 + v4[8];
  uint64_t v42 = a1;
  char v13 = *(unsigned char *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  LOBYTE(v67) = v13;
  *((void *)&v67 + 1) = v14;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EAE27528);
  sub_1E3E7B630();
  uint64_t v15 = *((void *)&v57 + 1);
  uint64_t v40 = v57;
  char v16 = v58;
  uint64_t v17 = a1 + v4[9];
  uint64_t v18 = *(void *)v17;
  unint64_t v19 = *(void *)(v17 + 8);
  uint64_t v21 = *(void *)(v17 + 16);
  uint64_t v20 = *(void *)(v17 + 24);
  char v22 = *(unsigned char *)(v17 + 32);
  long long v57 = v10;
  uint64_t v58 = v11;
  uint64_t v59 = v18;
  unint64_t v60 = v19;
  uint64_t v61 = v21;
  uint64_t v62 = v20;
  char v63 = v22;
  uint64_t v64 = v40;
  uint64_t v65 = v15;
  char v66 = v16;
  sub_1E3DD63EC(v18, v19);
  unint64_t v23 = sub_1E3DD5D58();
  uint64_t v24 = v41;
  sub_1E3E7B440();
  swift_release();
  swift_release();
  sub_1E3DD944C(v18, v19);
  swift_release();
  swift_release();
  uint64_t v25 = v46;
  sub_1E3E7B0B0();
  *(void *)&long long v57 = &type metadata for AutoDownloadPicker;
  *((void *)&v57 + 1) = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = MEMORY[0x1E4F3D308];
  uint64_t v28 = v43;
  uint64_t v29 = v47;
  uint64_t v30 = v49;
  sub_1E3E7B420();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v30);
  uint64_t v31 = v24;
  uint64_t v32 = v29;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v29);
  uint64_t v33 = *(void *)(v45 + 16);
  long long v57 = *(_OWORD *)v45;
  uint64_t v58 = v33;
  MEMORY[0x1E4E74FC0](&v67, v44);
  uint64_t v34 = v52;
  sub_1E3DD9B6C(v42, v52, type metadata accessor for AutoDownloadPickerView);
  unint64_t v35 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v36 = swift_allocObject();
  sub_1E3DD64DC(v34, v36 + v35);
  *(void *)&long long v57 = v32;
  *((void *)&v57 + 1) = v30;
  uint64_t v58 = OpaqueTypeConformance2;
  uint64_t v59 = v27;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v51;
  sub_1E3E7B4B0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v28, v37);
}

__n128 AutoDownloadPicker.init(autoDownloadOption:showLoadingUI:pickerType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __n128 result = *(__n128 *)a7;
  long long v9 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a8 + 24) = *(_OWORD *)a7;
  char v10 = *(unsigned char *)(a7 + 32);
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(_OWORD *)(a8 + 40) = v9;
  *(unsigned char *)(a8 + 56) = v10;
  *(void *)(a8 + 64) = a4;
  *(void *)(a8 + 72) = a5;
  *(unsigned char *)(a8 + 80) = a6;
  return result;
}

uint64_t sub_1E3DD0250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1E3E7AEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AutoDownloadPickerView(0);
  long long v9 = (long long *)(a3 + *(int *)(v8 + 20));
  long long v10 = *v9;
  uint64_t v11 = (uint64_t (*)())*((void *)v9 + 2);
  long long aBlock = v10;
  uint64_t v26 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  MEMORY[0x1E4E74FC0](&v30, v12);
  uint64_t v13 = v30;
  if ((v30 & 0xFFFFFFFEFFFFFFFFLL) != 0)
  {
    uint64_t v14 = (uint64_t *)(a3 + *(int *)(v8 + 28));
    unint64_t v15 = v14[1];
    if (v15 >= 2)
    {
      uint64_t v17 = *v14;
      uint64_t v18 = self;
      swift_bridgeObjectRetain();
      id v19 = objc_msgSend(v18, sel_sharedInstance);
      id v20 = objc_msgSend(v19, sel_privateQueueContext);

      uint64_t v21 = (void *)swift_allocObject();
      void v21[2] = v20;
      v21[3] = v17;
      v21[4] = v15;
      v21[5] = v13;
      uint64_t v28 = sub_1E3DD9C98;
      uint64_t v29 = v21;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v26 = sub_1E3CE65F8;
      uint64_t v27 = &block_descriptor_29;
      char v22 = _Block_copy(&aBlock);
      id v16 = v20;
      swift_release();
      objc_msgSend(v16, sel_performBlock_, v22);
      _Block_release(v22);
    }
    else
    {
      id v16 = objc_msgSend(self, sel_defaultMediaLibrary);
      sub_1E3C65888();
    }
  }
  sub_1E3DD8E44((uint64_t)v7);
  sub_1E3E7AED0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1E3DD04DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v7 = sub_1E3E7B770();
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E3E7B7C0();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E3E7B780();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)sub_1E3E7CCF0();
  id v18 = objc_msgSend(a1, sel_podcastForUuid_, v17);

  if (v18)
  {
    objc_msgSend(v18, sel_setEpisodeLimit_, v27);
  }
  sub_1E3C8E038();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCB48], v13);
  id v19 = (void *)sub_1E3E7D6F0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  id v20 = (void *)swift_allocObject();
  _DWORD v20[2] = v27;
  v20[3] = a2;
  v20[4] = a3;
  aBlock[4] = sub_1E3DD9CDC;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3CE65F8;
  aBlock[3] = &block_descriptor_96;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_1E3E7B7A0();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1E3DD6560((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v12, v9, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  return swift_release();
}

void sub_1E3DD08CC()
{
  id v0 = objc_msgSend(self, sel_defaultMediaLibrary);
  sub_1E3C65888();
}

uint64_t DownloadPickerLoadingOverlay.init(showOverlaySpinner:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_1E3DD0960(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7AF30();
  double v3 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1E3E7B060();
}

uint64_t sub_1E3DD0A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + *(int *)(type metadata accessor for AutoDownloadPickerView(0) + 28);
  if (*(void *)(v2 + 8) >= 2uLL)
  {
    double v3 = *(void (**)(uint64_t))(v2 + 16);
    uint64_t v4 = sub_1E3E775E0();
    v3(v4);
    sub_1E3E7AF10();
    return swift_release();
  }
  else
  {
    return MEMORY[0x1F40F8590]();
  }
}

uint64_t sub_1E3DD0AC4(uint64_t a1)
{
  uint64_t result = type metadata accessor for AutoDownloadPickerView(0);
  uint64_t v3 = a1 + *(int *)(result + 28);
  if (*(void *)(v3 + 8) >= 2uLL)
  {
    uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
    uint64_t v5 = sub_1E3E775E0();
    v4(v5);
    return swift_release();
  }
  return result;
}

uint64_t DownloadPickerLoadingOverlay.showOverlaySpinner.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE275B0);
  MEMORY[0x1E4E74FC0](&v2, v0);
  return v2;
}

void *sub_1E3DD0B88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE275B0);
  uint64_t result = MEMORY[0x1E4E74FC0](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1E3DD0BE0()
{
  return sub_1E3E7B6B0();
}

uint64_t DownloadPickerLoadingOverlay.showOverlaySpinner.setter()
{
  return sub_1E3E7B6B0();
}

void (*DownloadPickerLoadingOverlay.showOverlaySpinner.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  void v3[3] = *v1;
  v3[4] = v5;
  char v6 = *((unsigned char *)v1 + 16);
  *((unsigned char *)v3 + 19) = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  *((unsigned char *)v3 + 16) = v6;
  sub_1E3E775E0();
  sub_1E3E775E0();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE275B0);
  MEMORY[0x1E4E74FC0]();
  return sub_1E3DD0D2C;
}

void sub_1E3DD0D2C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_1E3E7B6B0();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t DownloadPickerLoadingOverlay.$showOverlaySpinner.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE275B0);
  sub_1E3E7B6C0();
  return v1;
}

uint64_t DownloadPickerLoadingOverlay.body.getter@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  char v5 = *((unsigned char *)v1 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  *(unsigned char *)(v6 + 32) = v5;
  *a1 = sub_1E3DD5EFC;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v6;
  sub_1E3E775E0();

  return sub_1E3E775E0();
}

uint64_t sub_1E3DD0E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v37 = a4;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v38 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E08);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E10);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E18);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E20);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E28);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_1E3E7B0D0();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E30);
  sub_1E3DD1200(a1, (uint64_t)&v8[*(int *)(v24 + 44)]);
  sub_1E3E7AEF0();
  double v26 = v25 * 1.2;
  sub_1E3E7B710();
  sub_1E3DD1C20(0.0, 1, 0.0, 1, INFINITY, 0, v26, 0, (uint64_t)v11, 0.0, 1, INFINITY, 0);
  sub_1E3C10CE0((uint64_t)v8, &qword_1EAE28E08);
  uint64_t v27 = sub_1E3E7AFB0();
  LOBYTE(v8) = sub_1E3E7B230();
  sub_1E3C34078((uint64_t)v11, (uint64_t)v15, &qword_1EAE28E10);
  uint64_t v28 = &v15[*(int *)(v13 + 44)];
  *(void *)uint64_t v28 = v27;
  v28[8] = (char)v8;
  sub_1E3C10CE0((uint64_t)v11, &qword_1EAE28E10);
  sub_1E3E7B530();
  uint64_t v29 = sub_1E3E7B560();
  swift_release();
  LOBYTE(v27) = sub_1E3E7B230();
  sub_1E3C34078((uint64_t)v15, (uint64_t)v19, &qword_1EAE28E18);
  uint64_t v30 = &v19[*(int *)(v17 + 44)];
  *(void *)uint64_t v30 = v29;
  v30[8] = v27;
  sub_1E3C10CE0((uint64_t)v15, &qword_1EAE28E18);
  uint64_t v39 = v35;
  uint64_t v40 = v36;
  char v41 = v37;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE275B0);
  MEMORY[0x1E4E74FC0](&v42, v31);
  if ((_BYTE)v42) {
    double v32 = 1.0;
  }
  else {
    double v32 = 0.0;
  }
  sub_1E3C34078((uint64_t)v19, (uint64_t)v23, &qword_1EAE28E20);
  *(double *)&v23[*(int *)(v21 + 44)] = v32;
  sub_1E3C10CE0((uint64_t)v19, &qword_1EAE28E20);
  return sub_1E3CAC398((uint64_t)v23, v38, &qword_1EAE28E28);
}

uint64_t sub_1E3DD1200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_1E3E7AFC0();
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (_OWORD *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E38);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E40);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E48);
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_1E3E7B120();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E50);
  sub_1E3DD153C(a1, (uint64_t)&v9[*(int *)(v18 + 44)]);
  LOBYTE(a1) = sub_1E3E7B230();
  sub_1E3E7AE60();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_1E3C34078((uint64_t)v9, (uint64_t)v13, &qword_1EAE28E38);
  uint64_t v27 = &v13[*(int *)(v11 + 44)];
  *uint64_t v27 = a1;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_1E3C10CE0((uint64_t)v9, &qword_1EAE28E38);
  id v28 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  uint64_t v29 = MEMORY[0x1E4E74EB0](v28);
  LOBYTE(v9) = sub_1E3E7B230();
  sub_1E3C34078((uint64_t)v13, (uint64_t)v17, &qword_1EAE28E40);
  uint64_t v30 = &v17[*(int *)(v15 + 44)];
  *(void *)uint64_t v30 = v29;
  v30[8] = (char)v9;
  sub_1E3C10CE0((uint64_t)v13, &qword_1EAE28E40);
  uint64_t v31 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v32 = *MEMORY[0x1E4F3D4A0];
  uint64_t v33 = sub_1E3E7B0F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v31, v32, v33);
  __asm { FMOV            V0.2D, #15.0 }
  _OWORD *v6 = _Q0;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E58);
  uint64_t v40 = v44;
  uint64_t v41 = v44 + *(int *)(v39 + 36);
  sub_1E3DD9B6C((uint64_t)v6, v41, MEMORY[0x1E4F3CDB8]);
  *(_WORD *)(v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E60) + 36)) = 256;
  sub_1E3C34078((uint64_t)v17, v40, &qword_1EAE28E48);
  sub_1E3DD9958((uint64_t)v6);
  return sub_1E3C10CE0((uint64_t)v17, &qword_1EAE28E48);
}

uint64_t sub_1E3DD153C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v73 = a2;
  uint64_t v2 = sub_1E3E7B210();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E68);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E70);
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v70 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E78);
  MEMORY[0x1F4188790](v68);
  uint64_t v74 = (uint64_t)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v68 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v72 = (uint64_t)&v68 - v18;
  sub_1E3E7AEB0();
  sub_1E3E7B200();
  sub_1E3C10DE8(&qword_1EAE28E80, &qword_1EAE28E68);
  sub_1E3DD6560(&qword_1EAE28E88, MEMORY[0x1E4F3DC78]);
  sub_1E3E7B410();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(v2) = sub_1E3E7B250();
  unsigned __int8 v19 = sub_1E3E7B240();
  char v20 = sub_1E3E7B270();
  sub_1E3E7B270();
  if (sub_1E3E7B270() != v2) {
    char v20 = sub_1E3E7B270();
  }
  sub_1E3E7B270();
  if (sub_1E3E7B270() != v19) {
    char v20 = sub_1E3E7B270();
  }
  sub_1E3E7AE60();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v69;
  uint64_t v29 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v16, v12, v70);
  uint64_t v31 = &v16[*(int *)(v68 + 36)];
  char *v31 = v20;
  *((void *)v31 + 1) = v22;
  *((void *)v31 + 2) = v24;
  *((void *)v31 + 3) = v26;
  *((void *)v31 + 4) = v28;
  v31[40] = 0;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v29);
  uint64_t v32 = (uint64_t)v16;
  uint64_t v33 = v72;
  sub_1E3CAC398(v32, v72, &qword_1EAE28E78);
  sub_1E3E7B0E0();
  uint64_t v34 = sub_1E3E7B3B0();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  char v40 = v39 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v105 = v34;
  uint64_t v106 = v36;
  char v107 = v40;
  uint64_t v108 = v38;
  uint64_t v109 = KeyPath;
  char v110 = 1;
  sub_1E3E7AEF0();
  double v43 = v42 * 0.7;
  sub_1E3E7B710();
  sub_1E3DD1DE0(0.0, 1, 0.0, 1, v43, 0, 0.0, 1, &v95, 0.0, 1, 0.0, 1);
  sub_1E3C82280(v34, v36, v40);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v36) = sub_1E3E7B260();
  unsigned __int8 v44 = sub_1E3E7B280();
  unsigned __int8 v45 = sub_1E3E7B250();
  char v46 = sub_1E3E7B270();
  sub_1E3E7B270();
  if (sub_1E3E7B270() != v36) {
    char v46 = sub_1E3E7B270();
  }
  sub_1E3E7B270();
  if (sub_1E3E7B270() != v44) {
    char v46 = sub_1E3E7B270();
  }
  sub_1E3E7B270();
  if (sub_1E3E7B270() != v45) {
    char v46 = sub_1E3E7B270();
  }
  sub_1E3E7AE60();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  char v75 = 0;
  uint64_t v55 = v74;
  sub_1E3C34078(v33, v74, &qword_1EAE28E78);
  char v56 = v75;
  uint64_t v57 = v73;
  sub_1E3C34078(v55, v73, &qword_1EAE28E78);
  uint64_t v58 = (_OWORD *)(v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E90) + 48));
  long long v82 = v101;
  long long v83 = v102;
  long long v84 = v103;
  long long v85 = v104;
  long long v80 = v99;
  long long v81 = v100;
  long long v78 = v97;
  long long v59 = v97;
  long long v79 = v98;
  long long v76 = v95;
  long long v77 = v96;
  long long v60 = v100;
  long long v61 = v102;
  v58[6] = v101;
  v58[7] = v61;
  long long v62 = v85;
  v58[8] = v84;
  v58[9] = v62;
  long long v63 = v79;
  long long v64 = v80;
  v58[2] = v59;
  v58[3] = v63;
  LOBYTE(v86) = v46;
  *((void *)&v86 + 1) = v48;
  *(void *)&v87[0] = v50;
  *((void *)&v87[0] + 1) = v52;
  *(void *)&v87[1] = v54;
  BYTE8(v87[1]) = v56;
  v58[4] = v64;
  v58[5] = v60;
  long long v65 = v77;
  *uint64_t v58 = v76;
  v58[1] = v65;
  long long v66 = v87[0];
  v58[10] = v86;
  v58[11] = v66;
  *(_OWORD *)((char *)v58 + 185) = *(_OWORD *)((char *)v87 + 9);
  sub_1E3DD9A08((uint64_t)&v76);
  sub_1E3C10CE0(v33, &qword_1EAE28E78);
  v88[6] = v101;
  v88[7] = v102;
  v88[8] = v103;
  v88[9] = v104;
  v88[2] = v97;
  v88[3] = v98;
  v88[4] = v99;
  v88[5] = v100;
  v88[0] = v95;
  v88[1] = v96;
  char v89 = v46;
  uint64_t v90 = v48;
  uint64_t v91 = v50;
  uint64_t v92 = v52;
  uint64_t v93 = v54;
  char v94 = v56;
  sub_1E3DD9A58((uint64_t)v88);
  return sub_1E3C10CE0(v55, &qword_1EAE28E78);
}

__n128 sub_1E3DD1C20@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1E3E7D4F0();
    uint64_t v23 = (void *)sub_1E3E7B220();
    sub_1E3E7A5F0();
  }
  sub_1E3E7AFD0();
  sub_1E3C34078(v13, a9, &qword_1EAE28E08);
  uint64_t v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E10) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *uint64_t v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  uint64_t v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_1E3DD1DE0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1E3E7D4F0();
    uint64_t v23 = (void *)sub_1E3E7B220();
    sub_1E3E7A5F0();
  }
  sub_1E3E7AFD0();
  long long v24 = v13[1];
  long long v36 = *v13;
  long long v37 = v24;
  sub_1E3DD9AA8((uint64_t)&v36, (uint64_t)v39);
  uint64_t v38 = *((void *)&v37 + 1);
  uint64_t v34 = *((void *)v13 + 4);
  char v35 = *((unsigned char *)v13 + 40);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(long long *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_1E3DD9B04((uint64_t)v39);
  sub_1E3CB0AE8((uint64_t)&v38);
  return sub_1E3DD9B38((uint64_t)&v34);
}

uint64_t sub_1E3DD1FBC@<X0>(uint64_t (**a1)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  char v5 = *((unsigned char *)v1 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  *(unsigned char *)(v6 + 32) = v5;
  *a1 = sub_1E3DDA4C4;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v6;
  sub_1E3E775E0();

  return sub_1E3E775E0();
}

uint64_t AutoDownloadPicker.body.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C78);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = v0[3];
  long long v14 = v0[2];
  long long v15 = v4;
  long long v16 = v0[4];
  char v17 = *((unsigned char *)v0 + 80);
  long long v5 = v0[1];
  long long v12 = *v0;
  long long v13 = v5;
  sub_1E3DD216C();
  long long v10 = v12;
  uint64_t v11 = v13;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  MEMORY[0x1E4E74FC0](&v9, v6);
  sub_1E3DD5F08();
  sub_1E3E7B4B0();
  return sub_1E3C10CE0((uint64_t)v3, &qword_1EAE28C78);
}

uint64_t sub_1E3DD216C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28CE0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28E00);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28CA8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E3E78400();
  uint64_t v20 = v10;
  uint64_t v21 = sub_1E3DD6560((unint64_t *)&qword_1EBFE20D8, MEMORY[0x1E4F91570]);
  uint64_t v11 = __swift_allocate_boxed_opaque_existential_1(&v18);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, *MEMORY[0x1E4F91550], v10);
  LOBYTE(v10) = sub_1E3E78090();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v18);
  if (v10)
  {
    AutoDownloadPicker.asynchronousPicker.getter((uint64_t)v9);
    sub_1E3C34078((uint64_t)v9, (uint64_t)v6, &qword_1EAE28CA8);
    swift_storeEnumTagMultiPayload();
    sub_1E3C10DE8(&qword_1EAE28CA0, &qword_1EAE28CA8);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28CB0);
    uint64_t v13 = sub_1E3C10DE8(&qword_1EAE28CB8, &qword_1EAE28CB0);
    uint64_t v18 = v12;
    uint64_t v19 = v13;
    swift_getOpaqueTypeConformance2();
    sub_1E3E7B170();
    return sub_1E3C10CE0((uint64_t)v9, &qword_1EAE28CA8);
  }
  else
  {
    AutoDownloadPicker.synchronousPicker.getter((uint64_t)v3);
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v6, v3, v0);
    swift_storeEnumTagMultiPayload();
    sub_1E3C10DE8(&qword_1EAE28CA0, &qword_1EAE28CA8);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28CB0);
    uint64_t v16 = sub_1E3C10DE8(&qword_1EAE28CB8, &qword_1EAE28CB0);
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    swift_getOpaqueTypeConformance2();
    sub_1E3E7B170();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t AutoDownloadPicker.asynchronousPicker.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = sub_1E3E7AE50();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28CA8);
  MEMORY[0x1F4188790](v5 - 8);
  long long v30 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v7 = v1[3];
  long long v39 = v1[2];
  long long v40 = v7;
  long long v41 = v1[4];
  char v42 = *((unsigned char *)v1 + 80);
  long long v8 = v1[1];
  long long v37 = *v1;
  long long v38 = v8;
  uint64_t v9 = swift_allocObject();
  long long v10 = v1[3];
  *(_OWORD *)(v9 + 48) = v1[2];
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = v1[4];
  *(unsigned char *)(v9 + 96) = *((unsigned char *)v1 + 80);
  long long v11 = v1[1];
  *(_OWORD *)(v9 + 16) = *v1;
  *(_OWORD *)(v9 + 32) = v11;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EAE28CC8;
  *(void *)(v12 + 24) = v9;
  uint64_t v13 = swift_allocObject();
  long long v14 = v1[3];
  *(_OWORD *)(v13 + 48) = v1[2];
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 80) = v1[4];
  *(unsigned char *)(v13 + 96) = *((unsigned char *)v1 + 80);
  long long v15 = v1[1];
  *(_OWORD *)(v13 + 16) = *v1;
  *(_OWORD *)(v13 + 32) = v15;
  sub_1E3DD6344((long long *)((char *)&v38 + 8), (uint64_t)v43);
  sub_1E3DD6344(v43, (uint64_t)v44);
  BOOL v29 = v45 != 1;
  long long v32 = v37;
  uint64_t v33 = v38;
  sub_1E3DD635C((uint64_t)&v37);
  sub_1E3DD635C((uint64_t)&v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  sub_1E3E7B6C0();
  uint64_t v16 = v34;
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  long long v32 = v41;
  LOBYTE(v33) = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE275B0);
  sub_1E3E7B6C0();
  uint64_t v19 = v34;
  uint64_t v20 = v35;
  char v21 = v36;
  uint64_t v22 = swift_allocObject();
  long long v23 = v40;
  *(_OWORD *)(v22 + 48) = v39;
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 80) = v41;
  *(unsigned char *)(v22 + 96) = v42;
  long long v24 = v38;
  *(_OWORD *)(v22 + 16) = v37;
  *(_OWORD *)(v22 + 32) = v24;
  sub_1E3DD635C((uint64_t)&v37);
  sub_1E3E7AE30();
  uint64_t v27 = v19;
  long long v25 = v30;
  sub_1E3DCE540((uint64_t)&unk_1EAE28CD8, v12, (uint64_t)sub_1E3DD633C, v13, (uint64_t)v4, v29, v16, v17, (uint64_t)v30, 0.2, v18, v27, v20, v21, (uint64_t)sub_1E3DD6438, v22);
  return sub_1E3CAC398((uint64_t)v25, v31, &qword_1EAE28CA8);
}

uint64_t AutoDownloadPicker.synchronousPicker.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v40 = sub_1E3E7AE50();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28CB0);
  MEMORY[0x1F4188790](v37);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28CE0);
  uint64_t v41 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  long long v39 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = v1[3];
  long long v52 = v1[2];
  long long v53 = v7;
  long long v54 = v1[4];
  char v55 = *((unsigned char *)v1 + 80);
  long long v8 = v1[1];
  long long v50 = *v1;
  long long v51 = v8;
  uint64_t v9 = swift_allocObject();
  long long v10 = v1[3];
  *(_OWORD *)(v9 + 48) = v1[2];
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = v1[4];
  *(unsigned char *)(v9 + 96) = *((unsigned char *)v1 + 80);
  long long v11 = v1[1];
  *(_OWORD *)(v9 + 16) = *v1;
  *(_OWORD *)(v9 + 32) = v11;
  uint64_t v12 = swift_allocObject();
  long long v13 = v1[3];
  *(_OWORD *)(v12 + 48) = v1[2];
  *(_OWORD *)(v12 + 64) = v13;
  *(_OWORD *)(v12 + 80) = v1[4];
  *(unsigned char *)(v12 + 96) = *((unsigned char *)v1 + 80);
  long long v14 = v1[1];
  *(_OWORD *)(v12 + 16) = *v1;
  *(_OWORD *)(v12 + 32) = v14;
  uint64_t v15 = swift_allocObject();
  long long v16 = v1[3];
  *(_OWORD *)(v15 + 48) = v1[2];
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = v1[4];
  *(unsigned char *)(v15 + 96) = *((unsigned char *)v1 + 80);
  long long v17 = v1[1];
  *(_OWORD *)(v15 + 16) = *v1;
  *(_OWORD *)(v15 + 32) = v17;
  uint64_t v18 = swift_allocObject();
  long long v19 = v1[3];
  *(_OWORD *)(v18 + 48) = v1[2];
  *(_OWORD *)(v18 + 64) = v19;
  *(_OWORD *)(v18 + 80) = v1[4];
  *(unsigned char *)(v18 + 96) = *((unsigned char *)v1 + 80);
  long long v20 = v1[1];
  *(_OWORD *)(v18 + 16) = *v1;
  *(_OWORD *)(v18 + 32) = v20;
  sub_1E3DD6344((long long *)((char *)&v51 + 8), (uint64_t)v56);
  sub_1E3DD6344(v56, (uint64_t)v57);
  BOOL v36 = v58 != 1;
  long long v45 = v50;
  uint64_t v46 = v51;
  sub_1E3DD635C((uint64_t)&v50);
  sub_1E3DD635C((uint64_t)&v50);
  sub_1E3DD635C((uint64_t)&v50);
  sub_1E3DD635C((uint64_t)&v50);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  sub_1E3E7B6C0();
  uint64_t v21 = v47;
  uint64_t v22 = v48;
  uint64_t v23 = v49;
  uint64_t v24 = swift_allocObject();
  long long v25 = v53;
  *(_OWORD *)(v24 + 48) = v52;
  *(_OWORD *)(v24 + 64) = v25;
  *(_OWORD *)(v24 + 80) = v54;
  *(unsigned char *)(v24 + 96) = v55;
  long long v26 = v51;
  *(_OWORD *)(v24 + 16) = v50;
  *(_OWORD *)(v24 + 32) = v26;
  sub_1E3DD635C((uint64_t)&v50);
  sub_1E3E7AE30();
  uint64_t v47 = v21;
  uint64_t v48 = v22;
  uint64_t v49 = v23;
  char v44 = 0;
  sub_1E3E7B600();
  uint64_t v27 = *((void *)&v45 + 1);
  unsigned char v5[40] = v45;
  *((void *)v5 + 6) = v27;
  *((void *)v5 + 7) = sub_1E3DD6474;
  *((void *)v5 + 8) = v9;
  *((void *)v5 + 9) = sub_1E3C78374;
  *((void *)v5 + 10) = v12;
  *((void *)v5 + 11) = sub_1E3DD6484;
  *((void *)v5 + 12) = v15;
  long long v28 = (int *)v37;
  uint64_t v29 = v38;
  uint64_t v30 = v40;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(&v5[*(int *)(v37 + 72)], v3, v40);
  uint64_t v31 = &v5[v28[20]];
  *(void *)uint64_t v31 = sub_1E3DD6490;
  *((void *)v31 + 1) = v18;
  v5[v28[21]] = v36;
  *(void *)uint64_t v5 = v21;
  *((void *)v5 + 1) = v22;
  *((void *)v5 + 2) = v23;
  MEMORY[0x1E4E74FC0](&v45, v35);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v3, v30);
  *((void *)v5 + 3) = v45;
  *((void *)v5 + 4) = 0;
  long long v32 = (uint64_t (**)())&v5[v28[19]];
  *long long v32 = sub_1E3DD649C;
  v32[1] = (uint64_t (*)())v24;
  sub_1E3C10DE8(&qword_1EAE28CB8, &qword_1EAE28CB0);
  uint64_t v33 = v39;
  sub_1E3E7B440();
  sub_1E3C10CE0((uint64_t)v5, &qword_1EAE28CB0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v43, v33, v42);
}

uint64_t sub_1E3DD2DF8()
{
  uint64_t v0 = sub_1E3E77E20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  sub_1E3E77E00();
  sub_1E3E7D540();

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1E3DD2F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1E3DD6344((long long *)(a3 + 24), (uint64_t)v9);
  sub_1E3E79530();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E3E86660;
  sub_1E3DD6344(v9, (uint64_t)v10);
  if (v10[1] >= 2uLL)
  {
    uint64_t v5 = sub_1E3E7D800();
    uint64_t v4 = v5 & ~(v5 >> 63);
  }
  else
  {
    uint64_t v4 = sub_1E3E7D820();
  }
  uint64_t v6 = MEMORY[0x1E4FBB5C8];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v3 + 64) = v6;
  *(void *)(v3 + 32) = v4;
  uint64_t v7 = sub_1E3E7CD60();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1E3DD3010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1E3E79530();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1E3E86660;
  sub_1E3DD6344((long long *)(a3 + 24), (uint64_t)v10);
  sub_1E3DD6344(v10, (uint64_t)v11);
  if (v11[1] >= 2uLL)
  {
    uint64_t v6 = sub_1E3E7D800();
    uint64_t v5 = v6 & ~(v6 >> 63);
  }
  else
  {
    uint64_t v5 = sub_1E3E7D820();
  }
  uint64_t v7 = MEMORY[0x1E4FBB5C8];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v4 + 64) = v7;
  *(void *)(v4 + 32) = v5;
  uint64_t v8 = sub_1E3E7CD60();
  swift_bridgeObjectRelease();
  return v8;
}

BOOL sub_1E3DD3120(uint64_t a1, void *a2, uint64_t a3)
{
  if ((*a2 & 0xFFFFFFFEFFFFFFFFLL) == 0) {
    return 0;
  }
  sub_1E3DD6344((long long *)(a3 + 24), (uint64_t)v5);
  sub_1E3DD6344(v5, (uint64_t)v6);
  if (v6[1] >= 2uLL) {
    uint64_t v3 = sub_1E3E7D800();
  }
  else {
    uint64_t v3 = sub_1E3E7D820();
  }
  return v3 > 0;
}

uint64_t sub_1E3DD319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v3 + 64) = v5;
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a3 + 64);
  *(unsigned char *)(v3 + 96) = *(unsigned char *)(a3 + 80);
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v3 + 32) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 104) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1E3DD3254;
  return sub_1E3DD9500(a2);
}

uint64_t sub_1E3DD3254(uint64_t a1, char a2)
{
  uint64_t v7 = *v2;
  uint64_t v4 = a2 & 1;
  swift_task_dealloc();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, v4);
}

uint64_t sub_1E3DD3358(uint64_t a1, uint64_t *a2, uint64_t *a3, int *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1E3DD3440;
  return v9(v5, v6);
}

uint64_t sub_1E3DD3440(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  uint64_t v6 = *(uint64_t (**)(void))(v8 + 8);
  return v6();
}

uint64_t sub_1E3DD3564@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1E3E79530();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v4 + 16) = xmmword_1E3E86660;
  uint64_t v6 = MEMORY[0x1E4FBB5C8];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = v3;
  uint64_t v7 = sub_1E3E7CD60();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  sub_1E3E79530();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1E3E86660;
  *(void *)(v10 + 56) = v5;
  *(void *)(v10 + 64) = v6;
  *(void *)(v10 + 32) = v3;
  uint64_t v11 = sub_1E3E7CD60();
  uint64_t v13 = v12;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  a2[1] = v9;
  a2[2] = v11;
  a2[3] = v13;
  a2[4] = 0;
  a2[5] = 0;
  return result;
}

uint64_t sub_1E3DD36BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28DC0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3DD6344((long long *)(a1 + 24), (uint64_t)v13);
  sub_1E3DD6344(v13, (uint64_t)v14);
  if (v15 >= 2) {
    uint64_t v6 = sub_1E3E7D7E0();
  }
  else {
    uint64_t v6 = sub_1E3E7D7F0();
  }
  v12[0] = v6;
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 64) = v8;
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a1 + 64);
  *(unsigned char *)(v7 + 96) = *(unsigned char *)(a1 + 80);
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v9;
  sub_1E3DD635C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A58);
  sub_1E3C10DE8(&qword_1EAE28DC8, &qword_1EBFE4A58);
  sub_1E3DD6560(&qword_1EAE28DD0, type metadata accessor for MTPodcastEpisodeLimit);
  sub_1E3E7B6E0();
  v12[0] = sub_1E3E79530();
  v12[1] = v10;
  sub_1E3DD93E0();
  sub_1E3C10C8C();
  sub_1E3E7B470();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1E3DD392C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E7A400();
  uint64_t v5 = *(void *)(v4 - 8);
  v6.n128_f64[0] = MEMORY[0x1F4188790](v4);
  long long v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 24);
  unint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 56);
  if (v10 >= 2)
  {
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
    if (v11 & 1) != 0 && (os_feature_enabled_serial_sort_auto_downloads()) {
      uint64_t v12 = (unsigned int *)MEMORY[0x1E4F91D38];
    }
    else {
      uint64_t v12 = (unsigned int *)MEMORY[0x1E4F91D48];
    }
  }
  else
  {
    uint64_t v12 = (unsigned int *)MEMORY[0x1E4F91D40];
  }
  (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *v12, v4, v6);
  sub_1E3DD944C(v9, v10);
  uint64_t v13 = sub_1E3E7D840();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v20[0] = v13;
  v20[1] = v15;
  sub_1E3C10C8C();
  uint64_t result = sub_1E3E7B3D0();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v18 & 1;
  *(void *)(a2 + 24) = v19;
  return result;
}

uint64_t sub_1E3DD3AD8(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v1 + 24);
  *(void *)(v2 + 88) = sub_1E3E7D1A0();
  *(void *)(v2 + 96) = sub_1E3E7D190();
  uint64_t v4 = sub_1E3E7D130();
  *(void *)(v2 + 104) = v4;
  *(void *)(v2 + 112) = v3;
  return MEMORY[0x1F4188298](sub_1E3DD3B7C, v4, v3);
}

uint64_t sub_1E3DD3B7C()
{
  unint64_t v1 = v0[10];
  if (v1 >= 2)
  {
    v0[15] = sub_1E3E7D190();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[16] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1E3DD3CA4;
    uint64_t v5 = v0[8];
    uint64_t v6 = v0[9];
    return MEMORY[0x1F41459E0](v6, v1, v5);
  }
  else
  {
    v0[18] = sub_1E3E7D190();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[19] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1E3DD3E08;
    uint64_t v3 = v0[8];
    return MEMORY[0x1F41459F0](v3);
  }
}

uint64_t sub_1E3DD3CA4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[2] = v2;
  void v3[3] = a1;
  v3[4] = v1;
  v3[17] = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_1E3E7D130();
  if (v1) {
    uint64_t v6 = sub_1E3DD41D4;
  }
  else {
    uint64_t v6 = sub_1E3DD4104;
  }
  return MEMORY[0x1F4188298](v6, v5, v4);
}

uint64_t sub_1E3DD3E08(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = v1;
  v3[20] = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_1E3E7D130();
  if (v1) {
    uint64_t v6 = sub_1E3DD403C;
  }
  else {
    uint64_t v6 = sub_1E3DD3F6C;
  }
  return MEMORY[0x1F4188298](v6, v5, v4);
}

uint64_t sub_1E3DD3F6C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1E3DD3FD0, v1, v2);
}

uint64_t sub_1E3DD3FD0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3DD403C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1E3DD40A0, v1, v2);
}

uint64_t sub_1E3DD40A0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DD4104()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1E3DD4168, v1, v2);
}

uint64_t sub_1E3DD4168()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3DD41D4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1E3DD4238, v1, v2);
}

uint64_t sub_1E3DD4238()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DD429C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C78);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = v0[3];
  long long v14 = v0[2];
  long long v15 = v4;
  long long v16 = v0[4];
  char v17 = *((unsigned char *)v0 + 80);
  long long v5 = v0[1];
  long long v12 = *v0;
  long long v13 = v5;
  sub_1E3DD216C();
  long long v10 = v12;
  uint64_t v11 = v13;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  MEMORY[0x1E4E74FC0](&v9, v6);
  sub_1E3DD5F08();
  sub_1E3E7B4B0();
  return sub_1E3C10CE0((uint64_t)v3, &qword_1EAE28C78);
}

uint64_t GlobalSettingsAutoDownloadPickerLink.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E7D7D0();
  sub_1E3E7D880();
  sub_1E3E7CD30();
  id v2 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  uint64_t result = sub_1E3E7ADC0();
  *a1 = result;
  return result;
}

uint64_t GlobalSettingsAutoDownloadPickerLink.body.getter()
{
  uint64_t v0 = (int *)type metadata accessor for AutoDownloadPickerView(0);
  MEMORY[0x1F4188790](v0);
  id v2 = (uint64_t *)((char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  long long v5 = (char *)&v12 - v4;
  sub_1E3E775E0();
  sub_1E3E7ADF0();
  swift_release();
  long long v12 = v14;
  uint64_t v6 = v15;
  *id v2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (char *)v2 + v0[6];
  char v13 = 0;
  sub_1E3E7B600();
  uint64_t v8 = *((void *)&v14 + 1);
  *uint64_t v7 = v14;
  *((void *)v7 + 1) = v8;
  uint64_t v9 = (char *)v2 + v0[5];
  *(_OWORD *)uint64_t v9 = v12;
  *((void *)v9 + 2) = v6;
  long long v10 = (char *)v2 + v0[7];
  v10[32] = 0;
  *(_OWORD *)long long v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  sub_1E3DD64DC((uint64_t)v2, (uint64_t)v5);
  type metadata accessor for AutomaticallyDownloadCellStack(0);
  sub_1E3DD6560(&qword_1EAE28CE8, (void (*)(uint64_t))type metadata accessor for AutomaticallyDownloadCellStack);
  sub_1E3DD6560(&qword_1EAE28CF0, (void (*)(uint64_t))type metadata accessor for AutoDownloadPickerView);
  return sub_1E3E7AF70();
}

__n128 sub_1E3DD466C@<Q0>(uint64_t *a1@<X8>)
{
  sub_1E3E775E0();
  sub_1E3E7ADF0();
  swift_release();
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = type metadata accessor for AutomaticallyDownloadCellStack(0);
  uint64_t v3 = (__n128 *)((char *)a1 + *(int *)(v2 + 20));
  __n128 result = v5;
  *uint64_t v3 = v5;
  v3[1].n128_u64[0] = v6;
  *((unsigned char *)a1 + *(int *)(v2 + 24)) = 0;
  return result;
}

__n128 sub_1E3DD4714@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D78);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - v8;
  sub_1E3DD9104((uint64_t)&v30 - v8);
  uint64_t v10 = sub_1E3E7B1D0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    goto LABEL_5;
  }
  sub_1E3C34078((uint64_t)v9, (uint64_t)v6, &qword_1EAE28D78);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v6, v10) != *MEMORY[0x1E4F3DA48])
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
LABEL_5:
    uint64_t v20 = sub_1E3E7B0D0();
    uint64_t v21 = type metadata accessor for AutomaticallyDownloadCellStack(0);
    uint64_t v22 = (long long *)(v2 + *(int *)(v21 + 20));
    long long v23 = *v22;
    uint64_t v24 = *((void *)v22 + 2);
    *(_OWORD *)uint64_t v34 = v23;
    *(void *)&v34[16] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
    sub_1E3E7B6C0();
    char v25 = *(unsigned char *)(v2 + *(int *)(v21 + 24));
    *(void *)uint64_t v34 = v20;
    *(_OWORD *)&v34[8] = xmmword_1E3E93040;
    long long v35 = v39;
    uint64_t v36 = v40;
    long long v37 = xmmword_1E3E911D0;
    LOBYTE(v38) = v25;
    HIBYTE(v38) = 1;
    goto LABEL_6;
  }
  uint64_t v12 = sub_1E3E7B130();
  uint64_t v13 = type metadata accessor for AutomaticallyDownloadCellStack(0);
  long long v14 = (long long *)(v2 + *(int *)(v13 + 20));
  long long v15 = *v14;
  uint64_t v16 = *((void *)v14 + 2);
  *(_OWORD *)uint64_t v34 = v15;
  *(void *)&v34[16] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  sub_1E3E7B6C0();
  long long v33 = v39;
  uint64_t v17 = v40;
  uint64_t v18 = sub_1E3E7B290();
  unsigned __int8 v19 = *(unsigned char *)(v2 + *(int *)(v13 + 24));
  *(void *)uint64_t v34 = v12;
  *(_OWORD *)&v34[8] = xmmword_1E3E93040;
  long long v35 = v33;
  uint64_t v36 = v17;
  *(void *)&long long v37 = 0;
  *((void *)&v37 + 1) = v18;
  __int16 v38 = v19;
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28DA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28DA8);
  sub_1E3C10DE8(&qword_1EAE28DB0, &qword_1EAE28DA0);
  sub_1E3C10DE8(&qword_1EAE28DB8, &qword_1EAE28DA8);
  sub_1E3E7B170();
  long long v32 = v40;
  long long v33 = v39;
  long long v31 = v41;
  __n128 v30 = v42;
  char v26 = v43;
  char v27 = v44;
  sub_1E3C10CE0((uint64_t)v9, &qword_1EAE28D78);
  long long v28 = v32;
  *(_OWORD *)a1 = v33;
  *(_OWORD *)(a1 + 16) = v28;
  __n128 result = v30;
  *(_OWORD *)(a1 + 32) = v31;
  *(__n128 *)(a1 + 48) = result;
  *(unsigned char *)(a1 + 64) = v26;
  *(unsigned char *)(a1 + 65) = v27;
  return result;
}

uint64_t sub_1E3DD4A80@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E7A400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E79530();
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  char v10 = *((unsigned char *)a1 + 24);
  long long v40 = *a1;
  uint64_t v41 = *((void *)a1 + 2);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  MEMORY[0x1E4E74FC0](&v42, v11);
  uint64_t v12 = (unsigned int *)MEMORY[0x1E4F91D48];
  if (*((unsigned char *)a1 + 40)) {
    uint64_t v12 = (unsigned int *)MEMORY[0x1E4F91D38];
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v12, v4);
  BOOL v36 = (v10 & 1) == 0;
  int v37 = v10 & 1;
  uint64_t v13 = sub_1E3E7D840();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)&long long v40 = v13;
  *((void *)&v40 + 1) = v15;
  sub_1E3C10C8C();
  uint64_t v16 = sub_1E3E7B3D0();
  uint64_t v18 = v17;
  LOBYTE(v15) = v19 & 1;
  uint64_t v20 = sub_1E3E7B3A0();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_1E3C82280(v16, v18, v15);
  swift_bridgeObjectRelease();
  sub_1E3E7B570();
  uint64_t v25 = sub_1E3E7B390();
  uint64_t v27 = v26;
  LOBYTE(v15) = v28;
  uint64_t v30 = v29;
  swift_release();
  sub_1E3C82280(v20, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t v32 = v38;
  uint64_t v31 = v39;
  *(void *)a2 = v39;
  *(void *)(a2 + 8) = v32;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = v37;
  *(unsigned char *)(a2 + 41) = v36;
  *(void *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v27;
  *(void *)(a2 + 64) = v15 & 1;
  *(void *)(a2 + 72) = v30;
  uint64_t v33 = v31;
  sub_1E3C822F8(v31, v32, 0);
  swift_bridgeObjectRetain();
  sub_1E3DDA394(v25, v27, v15 & 1, v30);
  sub_1E3DDA3D8(v25, v27, v15 & 1, v30);
  sub_1E3C82280(v33, v32, 0);
  return swift_bridgeObjectRelease();
}

double sub_1E3DD4D64@<D0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  long long v20 = *v1;
  v21[0] = v3;
  *(_OWORD *)((char *)v21 + 9) = *(long long *)((char *)v1 + 25);
  sub_1E3DD4A80(&v20, (uint64_t)&v12);
  char v4 = v13;
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  char v7 = v16;
  char v8 = v17;
  double result = *(double *)&v12;
  long long v10 = v18;
  long long v11 = v19;
  *(_OWORD *)a1 = v12;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 41) = v8;
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v11;
  return result;
}

uint64_t ShowAutoDownloadPickerLink.init(autoDownloadOption:openGlobalSettingsBlock:uuid:isSerialShow:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;
  return result;
}

uint64_t ShowAutoDownloadPickerLink.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = (int *)type metadata accessor for AutoDownloadPickerView(0);
  MEMORY[0x1F4188790](v2);
  char v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v20 - v6;
  long long v8 = v1[1];
  long long v27 = *v1;
  long long v28 = v8;
  *(_OWORD *)uint64_t v29 = v1[2];
  *(_OWORD *)&v29[9] = *(_OWORD *)((char *)v1 + 41);
  long long v23 = v27;
  uint64_t v24 = *((void *)v1 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  sub_1E3E7B6C0();
  long long v20 = v25;
  uint64_t v9 = v26;
  uint64_t v11 = *(void *)&v29[8];
  uint64_t v10 = *(void *)&v29[16];
  uint64_t v13 = *((void *)&v28 + 1);
  uint64_t v12 = *(void *)v29;
  char v14 = v29[24];
  *char v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = (char *)v4 + v2[6];
  LOBYTE(v23) = 0;
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E7B600();
  uint64_t v16 = *((void *)&v25 + 1);
  *uint64_t v15 = v25;
  *((void *)v15 + 1) = v16;
  char v17 = (char *)v4 + v2[5];
  *(_OWORD *)char v17 = v20;
  *((void *)v17 + 2) = v9;
  long long v18 = (char *)v4 + v2[7];
  *(void *)long long v18 = v11;
  *((void *)v18 + 1) = v10;
  *((void *)v18 + 2) = v13;
  *((void *)v18 + 3) = v12;
  v18[32] = v14;
  sub_1E3DD64DC((uint64_t)v4, (uint64_t)v7);
  uint64_t v22 = &v27;
  type metadata accessor for AutomaticallyDownloadCellStack(0);
  sub_1E3DD6560(&qword_1EAE28CE8, (void (*)(uint64_t))type metadata accessor for AutomaticallyDownloadCellStack);
  sub_1E3DD6560(&qword_1EAE28CF0, (void (*)(uint64_t))type metadata accessor for AutoDownloadPickerView);
  return sub_1E3E7AF70();
}

__n128 sub_1E3DD5058@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28C80);
  sub_1E3E7B6C0();
  LOBYTE(a1) = *(unsigned char *)(a1 + 56);
  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = type metadata accessor for AutomaticallyDownloadCellStack(0);
  uint64_t v5 = (__n128 *)((char *)a2 + *(int *)(v4 + 20));
  __n128 result = v7;
  *uint64_t v5 = v7;
  v5[1].n128_u64[0] = v8;
  *((unsigned char *)a2 + *(int *)(v4 + 24)) = a1;
  return result;
}

uint64_t GlobalSettingsDeepLinkState.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = v0 + OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  v7[15] = 0;
  sub_1E3E7AAB0();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v2 + 32))(v5, v4, v1);
  return v0;
}

uint64_t sub_1E3DD520C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DD528C()
{
  return sub_1E3E7AB00();
}

uint64_t sub_1E3DD5300()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1E3DD5374()
{
  return sub_1E3E7AB00();
}

void (*sub_1E3DD53E4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1E3E7AAE0();
  return sub_1E3CDFD08;
}

uint64_t sub_1E3DD5470()
{
  return swift_endAccess();
}

uint64_t sub_1E3DD54D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2480);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  sub_1E3E7AAD0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1E3DD564C()
{
  return swift_endAccess();
}

uint64_t sub_1E3DD56B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2480);
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  sub_1E3E7AAD0();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1E3DD57DC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2480);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  char v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  sub_1E3E7AAC0();
  swift_endAccess();
  return sub_1E3CE01EC;
}

uint64_t GlobalSettingsDeepLinkState.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t GlobalSettingsDeepLinkState.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI27GlobalSettingsDeepLinkState__deepLinkToAutomaticDownloadPicker;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1E3DD59F8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GlobalSettingsDeepLinkState(0);
  uint64_t result = sub_1E3E7A9A0();
  *a1 = result;
  return result;
}

BOOL GlobalSettingsDeepLinkState.Destination.init(rawValue:)()
{
  uint64_t v0 = sub_1E3E7E050();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_1E3DD5A80()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DD5AD8()
{
  return sub_1E3E7CE50();
}

uint64_t sub_1E3DD5AF4()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DD5B48@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1E3E7E050();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1E3DD5B9C(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000001E3E9B320;
}

uint64_t sub_1E3DD5BBC()
{
  return sub_1E3E7B040();
}

uint64_t type metadata accessor for AutoDownloadPickerView(uint64_t a1)
{
  return sub_1E3D2A998(a1, (uint64_t *)&unk_1EAE28D10);
}

uint64_t sub_1E3DD5C00()
{
  return sub_1E3DCF344(*(void *)(v0 + 16));
}

unint64_t sub_1E3DD5C08()
{
  unint64_t result = qword_1EAE28C10;
  if (!qword_1EAE28C10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C08);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C18);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C20);
    sub_1E3E7B0C0();
    sub_1E3DD5D58();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1E3DD5DAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28C10);
  }
  return result;
}

unint64_t sub_1E3DD5D58()
{
  unint64_t result = qword_1EAE28C28;
  if (!qword_1EAE28C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28C28);
  }
  return result;
}

unint64_t sub_1E3DD5DAC()
{
  unint64_t result = qword_1EAE28C30;
  if (!qword_1EAE28C30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C38);
    sub_1E3DD5E58();
    sub_1E3DD6560(&qword_1EAE28C60, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28C30);
  }
  return result;
}

unint64_t sub_1E3DD5E58()
{
  unint64_t result = qword_1EAE28C40;
  if (!qword_1EAE28C40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C48);
    sub_1E3C10DE8(&qword_1EAE28C50, &qword_1EAE28C58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28C40);
  }
  return result;
}

uint64_t sub_1E3DD5EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3DD0E6C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

unint64_t sub_1E3DD5F08()
{
  unint64_t result = qword_1EAE28C88;
  if (!qword_1EAE28C88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C78);
    sub_1E3DD5F7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28C88);
  }
  return result;
}

unint64_t sub_1E3DD5F7C()
{
  unint64_t result = qword_1EAE28C90;
  if (!qword_1EAE28C90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C98);
    sub_1E3C10DE8(&qword_1EAE28CA0, &qword_1EAE28CA8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28CB0);
    sub_1E3C10DE8(&qword_1EAE28CB8, &qword_1EAE28CB0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28C90);
  }
  return result;
}

uint64_t sub_1E3DD6080(uint64_t a1, uint64_t a2)
{
  size_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1E3DD612C;
  return sub_1E3DD319C(a1, a2, v2 + 16);
}

uint64_t sub_1E3DD612C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_1E3DD6230()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DD6268(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1E3C19DC4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t *, int *))((char *)&dword_1EAE28CD0 + dword_1EAE28CD0);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_1E3DD633C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E3DD3564(a1, a2);
}

uint64_t sub_1E3DD6344(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1E3DD635C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3DD63EC(v2, v3);
  sub_1E3E775E0();
  sub_1E3E775E0();
  return a1;
}

uint64_t sub_1E3DD63EC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    return sub_1E3E775E0();
  }
  return result;
}

uint64_t sub_1E3DD6438()
{
  return sub_1E3DD36BC(v0 + 16);
}

uint64_t sub_1E3DD6474(uint64_t a1, uint64_t a2)
{
  return sub_1E3DD2F0C(a1, a2, v2 + 16);
}

uint64_t sub_1E3DD6484(uint64_t a1, uint64_t a2)
{
  return sub_1E3DD3010(a1, a2, v2 + 16);
}

BOOL sub_1E3DD6490(uint64_t a1, void *a2)
{
  return sub_1E3DD3120(a1, a2, v2 + 16);
}

uint64_t sub_1E3DD649C()
{
  return sub_1E3DD36BC(v0 + 16);
}

double sub_1E3DD64D4@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1E3DD466C(a1).n128_u64[0];
  return result;
}

uint64_t sub_1E3DD64DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutoDownloadPickerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AutomaticallyDownloadCellStack(uint64_t a1)
{
  return sub_1E3D2A998(a1, (uint64_t *)&unk_1EAE28D88);
}

uint64_t sub_1E3DD6560(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1E3DD65A8@<D0>(uint64_t *a1@<X8>)
{
  *(void *)&double result = sub_1E3DD5058(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_1E3DD65B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DD65D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DD65F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DD660C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DD6628()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1E3DD6648()
{
  unint64_t result = qword_1EAE28CF8;
  if (!qword_1EAE28CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28CF8);
  }
  return result;
}

unint64_t destroy for AutoDownloadPicker.PickerType(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for AutoDownloadPicker.PickerType(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
  }
  return a1;
}

uint64_t assignWithCopy for AutoDownloadPicker.PickerType(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = v6;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      sub_1E3E775E0();
      return a1;
    }
LABEL_7:
    long long v7 = *a2;
    long long v8 = a2[1];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *((void *)a2 + 3);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = v5;
  sub_1E3E775E0();
  swift_release();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  return a1;
}

uint64_t assignWithTake for AutoDownloadPicker.PickerType(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_5:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadPicker.PickerType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AutoDownloadPicker.PickerType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1E3DD6994(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadPicker.PickerType()
{
  return &type metadata for AutoDownloadPicker.PickerType;
}

uint64_t *initializeBufferWithCopyOfBuffer for AutoDownloadPickerView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_9:
    sub_1E3E775E0();
    return a1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1E3E7AEE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  else
  {
    *a1 = *a2;
    sub_1E3E775E0();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)((char *)a1 + v9);
  uint64_t v12 = (uint64_t *)((char *)a2 + v9);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  id v11[2] = v12[2];
  char v14 = (char *)a1 + v10;
  uint64_t v15 = (char *)a2 + v10;
  *char v14 = *v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  long long v18 = (char *)a2 + v16;
  unint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 8);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v19 >= 2)
  {
    *(void *)char v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    uint64_t v21 = *((void *)v18 + 3);
    *((void *)v17 + 2) = *((void *)v18 + 2);
    *((void *)v17 + 3) = v21;
    v17[32] = v18[32];
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  long long v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)char v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  v17[32] = v18[32];
  return a1;
}

unint64_t destroy for AutoDownloadPickerView(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1E3E7AEE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  unint64_t result = *(void *)(a1 + *(int *)(a2 + 28) + 8);
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for AutoDownloadPickerView(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1E3E7AEE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    sub_1E3E775E0();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v9[2] = v10[2];
  uint64_t v12 = (char *)a1 + v8;
  uint64_t v13 = (char *)a2 + v8;
  *uint64_t v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  unint64_t v17 = *(void *)((char *)a2 + v14 + 8);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v17 >= 2)
  {
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v19 = *((void *)v16 + 3);
    *((void *)v15 + 2) = *((void *)v16 + 2);
    *((void *)v15 + 3) = v19;
    v15[32] = v16[32];
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
  }
  else
  {
    long long v18 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v18;
    v15[32] = v16[32];
  }
  return a1;
}

void *assignWithCopy for AutoDownloadPickerView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1E3C10CE0((uint64_t)a1, &qword_1EAE28BF0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1E3E7AEE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      sub_1E3E775E0();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  sub_1E3E775E0();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  sub_1E3E775E0();
  swift_release();
  *((void *)v8 + 2) = *((void *)v9 + 2);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  sub_1E3E775E0();
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = (uint64_t)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  unint64_t v16 = *(void *)((char *)a1 + v13 + 8);
  unint64_t v17 = *((void *)v15 + 1);
  if (v16 >= 2)
  {
    if (v17 >= 2)
    {
      *(void *)uint64_t v14 = *(void *)v15;
      *(void *)(v14 + 8) = *((void *)v15 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v23 = *((void *)v15 + 3);
      *(void *)(v14 + 16) = *((void *)v15 + 2);
      *(void *)(v14 + 24) = v23;
      sub_1E3E775E0();
      swift_release();
      char v20 = v15[32];
    }
    else
    {
      sub_1E3C10CE0(v14, &qword_1EAE28D00);
      char v20 = v15[32];
      long long v21 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v21;
    }
    *(unsigned char *)(v14 + 32) = v20;
  }
  else if (v17 >= 2)
  {
    *(void *)uint64_t v14 = *(void *)v15;
    *(void *)(v14 + 8) = *((void *)v15 + 1);
    uint64_t v22 = *((void *)v15 + 3);
    *(void *)(v14 + 16) = *((void *)v15 + 2);
    *(void *)(v14 + 24) = v22;
    *(unsigned char *)(v14 + 32) = v15[32];
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
  }
  else
  {
    long long v18 = *(_OWORD *)v15;
    long long v19 = *((_OWORD *)v15 + 1);
    *(unsigned char *)(v14 + 32) = v15[32];
    *(_OWORD *)uint64_t v14 = v18;
    *(_OWORD *)(v14 + 16) = v19;
  }
  return a1;
}

char *initializeWithTake for AutoDownloadPickerView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1E3E7AEE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *(_OWORD *)v11;
  *((void *)v10 + 2) = *((void *)v11 + 2);
  *(_OWORD *)uint64_t v10 = v12;
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  v14[32] = v15[32];
  return a1;
}

char *assignWithTake for AutoDownloadPickerView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1E3C10CE0((uint64_t)a1, &qword_1EAE28BF0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1E3E7AEE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_release();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  *((void *)v9 + 2) = *((void *)v10 + 2);
  uint64_t v11 = a3[6];
  long long v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *long long v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = (uint64_t)&a1[v14];
  long long v16 = &a2[v14];
  if (*(void *)&a1[v14 + 8] >= 2uLL)
  {
    unint64_t v17 = *((void *)v16 + 1);
    if (v17 >= 2)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *(void *)(v15 + 8) = v17;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v15 + 16) = *((_OWORD *)v16 + 1);
      swift_release();
      goto LABEL_10;
    }
    sub_1E3C10CE0(v15, &qword_1EAE28D00);
  }
  long long v18 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
LABEL_10:
  *(unsigned char *)(v15 + 32) = v16[32];
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadPickerView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DD72C0);
}

uint64_t sub_1E3DD72C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1EAE28D08);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadPickerView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DD72E0);
}

uint64_t sub_1E3DD72E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1EAE28D08);
}

void sub_1E3DD72EC()
{
  sub_1E3DD7394();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1E3DD7394()
{
  if (!qword_1EAE28D20)
  {
    sub_1E3E7AEE0();
    unint64_t v0 = sub_1E3E7AE80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAE28D20);
    }
  }
}

uint64_t sub_1E3DD73F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_1E3E775E0();
  sub_1E3E775E0();
  return a1;
}

uint64_t assignWithCopy for DownloadPickerLoadingOverlay(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1E3E775E0();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for DownloadPickerLoadingOverlay(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadPickerLoadingOverlay(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadPickerLoadingOverlay(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadPickerLoadingOverlay()
{
  return &type metadata for DownloadPickerLoadingOverlay;
}

uint64_t destroy for AutoDownloadPicker(uint64_t a1)
{
  swift_release();
  swift_release();
  if (*(void *)(a1 + 32) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AutoDownloadPicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 32);
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v5 >= 2)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  }
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  sub_1E3E775E0();
  sub_1E3E775E0();
  return a1;
}

uint64_t assignWithCopy for AutoDownloadPicker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  unint64_t v5 = (_OWORD *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >= 2uLL)
  {
    if (v6 >= 2)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v12;
      sub_1E3E775E0();
      swift_release();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    }
    else
    {
      sub_1E3C10CE0(a1 + 24, &qword_1EAE28D00);
      char v9 = *(unsigned char *)(a2 + 56);
      long long v10 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v10;
      *(unsigned char *)(a1 + 56) = v9;
    }
  }
  else if (v6 >= 2)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
  }
  else
  {
    long long v7 = *v5;
    long long v8 = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *uint64_t v4 = v7;
    *(_OWORD *)(a1 + 40) = v8;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1E3E775E0();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AutoDownloadPicker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  if (*(void *)(a1 + 32) >= 2uLL)
  {
    unint64_t v4 = *(void *)(a2 + 32);
    if (v4 >= 2)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      swift_release();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      goto LABEL_6;
    }
    sub_1E3C10CE0(a1 + 24, &qword_1EAE28D00);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoDownloadPicker(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoDownloadPicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoDownloadPicker()
{
  return &type metadata for AutoDownloadPicker;
}

ValueMetadata *type metadata accessor for GlobalSettingsAutoDownloadPickerLink()
{
  return &type metadata for GlobalSettingsAutoDownloadPickerLink;
}

uint64_t destroy for ShowAutoDownloadPickerLink()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShowAutoDownloadPickerLink(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShowAutoDownloadPickerLink(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ShowAutoDownloadPickerLink(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowAutoDownloadPickerLink(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShowAutoDownloadPickerLink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowAutoDownloadPickerLink()
{
  return &type metadata for ShowAutoDownloadPickerLink;
}

uint64_t sub_1E3DD7C6C()
{
  return type metadata accessor for GlobalSettingsDeepLinkState(0);
}

uint64_t type metadata accessor for GlobalSettingsDeepLinkState(uint64_t a1)
{
  return sub_1E3D2A998(a1, (uint64_t *)&unk_1EAE28D28);
}

uint64_t method lookup function for GlobalSettingsDeepLinkState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GlobalSettingsDeepLinkState);
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.deepLinkToAutomaticDownloadPicker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.deepLinkToAutomaticDownloadPicker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.deepLinkToAutomaticDownloadPicker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.$deepLinkToAutomaticDownloadPicker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.$deepLinkToAutomaticDownloadPicker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of GlobalSettingsDeepLinkState.$deepLinkToAutomaticDownloadPicker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

unsigned char *storeEnumTagSinglePayload for GlobalSettingsDeepLinkState.Destination(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3DD7E34);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GlobalSettingsDeepLinkState.Destination()
{
  return &type metadata for GlobalSettingsDeepLinkState.Destination;
}

unint64_t sub_1E3DD7E70()
{
  unint64_t result = qword_1EAE28D38;
  if (!qword_1EAE28D38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28C70);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28BF8);
    sub_1E3C10DE8(&qword_1EAE28C68, &qword_1EAE28BF8);
    swift_getOpaqueTypeConformance2();
    sub_1E3C10DE8(&qword_1EAE28D40, &qword_1EAE28D48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28D38);
  }
  return result;
}

uint64_t sub_1E3DD7F70()
{
  return sub_1E3C10DE8(&qword_1EAE28D50, &qword_1EAE28D58);
}

uint64_t sub_1E3DD7FAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DD801C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DD809C()
{
  return sub_1E3C10DE8(&qword_1EAE28CA0, &qword_1EAE28CA8);
}

uint64_t sub_1E3DD80D8()
{
  return sub_1E3C10DE8(&qword_1EAE28D60, &qword_1EAE28D68);
}

uint64_t *sub_1E3DD8114(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    unsigned int v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1E3E7B1D0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D78);
        memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      }
    }
    else
    {
      *unsigned int v4 = *a2;
      sub_1E3E775E0();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (uint64_t *)((char *)v4 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    long long v13[2] = v14[2];
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
    sub_1E3E775E0();
  }
  sub_1E3E775E0();
  return v4;
}

uint64_t sub_1E3DD82FC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1E3E7B1D0();
    uint64_t v3 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

void *sub_1E3DD8400(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1E3E7B1D0();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D78);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    sub_1E3E775E0();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v9);
  uint64_t v12 = (void *)((char *)a2 + v9);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  id v11[2] = v12[2];
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  sub_1E3E775E0();
  sub_1E3E775E0();
  return a1;
}

void *sub_1E3DD859C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3C10CE0((uint64_t)a1, &qword_1EAE28D70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1E3E7B1D0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D78);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      sub_1E3E775E0();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
  sub_1E3E775E0();
  swift_release();
  *((void *)v10 + 1) = *((void *)v11 + 1);
  sub_1E3E775E0();
  swift_release();
  *((void *)v10 + 2) = *((void *)v11 + 2);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_1E3DD8770(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1E3E7B1D0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D78);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((void *)v12 + 2) = *((void *)v13 + 2);
  a1[v11] = a2[v11];
  return a1;
}

char *sub_1E3DD8908(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3C10CE0((uint64_t)a1, &qword_1EAE28D70);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1E3E7B1D0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D78);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_release();
  *((void *)v11 + 2) = *((void *)v12 + 2);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1E3DD8AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DD8AE8);
}

uint64_t sub_1E3DD8AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1EAE28D80);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1E3DD8BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DD8BCC);
}

uint64_t sub_1E3DD8BCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1EAE28D80);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1E3DD8C98()
{
  sub_1E3DD8D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1E3DD8D38()
{
  if (!qword_1EAE28D98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28D78);
    unint64_t v0 = sub_1E3E7AE80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAE28D98);
    }
  }
}

uint64_t sub_1E3DD8D94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DD8DB0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D78);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C34078(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EAE28D78);
  return sub_1E3E7B010();
}

uint64_t sub_1E3DD8E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E7B080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C34078(v2, (uint64_t)v10, &qword_1EAE28BF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1E3E7AEE0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_1E3E7D4F0();
    uint64_t v14 = sub_1E3E7B220();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      long long v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v19[1] = a1;
      uint64_t v18 = v17;
      uint64_t v20 = v17;
      *(_DWORD *)long long v16 = 136315138;
      v19[2] = sub_1E3C150B8(0x417373696D736944, 0xED00006E6F697463, &v20);
      sub_1E3E7DBD0();
      _os_log_impl(&dword_1E3BC5000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v18, -1, -1);
      MEMORY[0x1E4E79510](v16, -1, -1);
    }

    sub_1E3E7B070();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1E3DD9104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E7B080();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28D70);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C34078(v2, (uint64_t)v10, &qword_1EAE28D70);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1E3CAC398((uint64_t)v10, a1, &qword_1EAE28D78);
  }
  os_log_type_t v12 = sub_1E3E7D4F0();
  os_log_type_t v13 = sub_1E3E7B220();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)os_log_type_t v15 = 136315138;
    long long v18[2] = sub_1E3C150B8(0xD000000000000020, 0x80000001E3EA2C80, &v19);
    sub_1E3E7DBD0();
    _os_log_impl(&dword_1E3BC5000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v17, -1, -1);
    MEMORY[0x1E4E79510](v15, -1, -1);
  }

  sub_1E3E7B070();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1E3DD9398()
{
  return sub_1E3E7B000();
}

uint64_t sub_1E3DD93C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DD392C(v1 + 16, a1);
}

unint64_t sub_1E3DD93E0()
{
  unint64_t result = qword_1EAE28DD8;
  if (!qword_1EAE28DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28DC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28DD8);
  }
  return result;
}

uint64_t sub_1E3DD944C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DD9500(uint64_t a1)
{
  uint64_t v4 = sub_1E3E7A880();
  *(void *)(v2 + 104) = v4;
  *(void *)(v2 + 112) = *(void *)(v4 - 8);
  *(void *)(v2 + 120) = swift_task_alloc();
  long long v13 = v1[1];
  long long v14 = *v1;
  long long v12 = v1[2];
  uint64_t v5 = *((void *)v1 + 6);
  char v6 = *((unsigned char *)v1 + 56);
  uint64_t v7 = *((void *)v1 + 8);
  uint64_t v8 = *((void *)v1 + 9);
  char v9 = *((unsigned char *)v1 + 80);
  *(void *)(v2 + 128) = sub_1E3E7D1A0();
  *(void *)(v2 + 136) = sub_1E3E7D190();
  *(_OWORD *)(v2 + 16) = v14;
  *(_OWORD *)(v2 + 32) = v13;
  *(_OWORD *)(v2 + 48) = v12;
  *(void *)(v2 + 64) = v5;
  *(unsigned char *)(v2 + 72) = v6;
  *(void *)(v2 + 80) = v7;
  *(void *)(v2 + 88) = v8;
  *(unsigned char *)(v2 + 96) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 144) = v10;
  void *v10 = v2;
  v10[1] = sub_1E3DD966C;
  return sub_1E3DD3AD8(a1);
}

uint64_t sub_1E3DD966C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_1E3E7D130();
  if (v1) {
    char v6 = sub_1E3DD9840;
  }
  else {
    char v6 = sub_1E3DD97B0;
  }
  return MEMORY[0x1F4188298](v6, v5, v4);
}

uint64_t sub_1E3DD97B0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 152);
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  uint64_t v2 = 0;
LABEL_5:
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, BOOL))(v0 + 8);
  return v3(v2, v1 == 0);
}

uint64_t sub_1E3DD9840()
{
  swift_release();
  sub_1E3E7A830();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Failed to calculate the number of episodes impacted, skipping confirmation.", v3, 2u);
    MEMORY[0x1E4E79510](v3, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
  return v7(0, 1);
}

uint64_t sub_1E3DD9958(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7AFC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3DD99B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E3E7B020();
  *a1 = result;
  return result;
}

uint64_t sub_1E3DD99E0()
{
  return sub_1E3E7B030();
}

uint64_t sub_1E3DD9A08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3DD9A58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3DD9AA8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E3DD9B04(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3DD9B38(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3DD9B64@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3DCFCA4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1E3DD9B6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3DD9BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for AutoDownloadPickerView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1E3DD0250(a1, a2, v6);
}

uint64_t sub_1E3DD9C58()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3DD9C98()
{
  return sub_1E3DD04DC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1E3DD9CA4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1E3DD9CDC()
{
}

uint64_t sub_1E3DD9CE8()
{
  return sub_1E3E7B050();
}

uint64_t objectdestroy_86Tm()
{
  uint64_t v1 = type metadata accessor for AutoDownloadPickerView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28BF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_1E3E7AEE0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + v2 + *(int *)(v1 + 28) + 8) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1E3DD9E70(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AutoDownloadPickerView(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1E3DD0A28(a1, v4);
}

uint64_t sub_1E3DD9EF4()
{
  uint64_t v1 = *(void *)(type metadata accessor for AutoDownloadPickerView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1E3DD0AC4(v2);
}

void sub_1E3DD9F54()
{
}

unint64_t sub_1E3DD9F74()
{
  unint64_t result = qword_1EAE28ED8;
  if (!qword_1EAE28ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28ED8);
  }
  return result;
}

void sub_1E3DD9FC8()
{
}

uint64_t sub_1E3DD9FF0()
{
  return 8;
}

uint64_t sub_1E3DD9FFC()
{
  return swift_release();
}

uint64_t sub_1E3DDA004(void *a1, void *a2)
{
  *a2 = *a1;
  return sub_1E3E775E0();
}

uint64_t sub_1E3DDA014()
{
  return sub_1E3E7CC40();
}

void *sub_1E3DDA05C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t destroy for AutomaticallyDownloadCellContent()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AutomaticallyDownloadCellContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  return a1;
}

uint64_t assignWithCopy for AutomaticallyDownloadCellContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1E3E775E0();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_1E3E775E0();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for AutomaticallyDownloadCellContent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticallyDownloadCellContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticallyDownloadCellContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticallyDownloadCellContent()
{
  return &type metadata for AutomaticallyDownloadCellContent;
}

unint64_t sub_1E3DDA2B4()
{
  unint64_t result = qword_1EAE28EF0;
  if (!qword_1EAE28EF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28EF8);
    sub_1E3C10DE8(&qword_1EAE28DB0, &qword_1EAE28DA0);
    sub_1E3C10DE8(&qword_1EAE28DB8, &qword_1EAE28DA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28EF0);
  }
  return result;
}

uint64_t sub_1E3DDA378()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DDA394(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1E3C822F8(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1E3DDA3D8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1E3C82280(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1E3DDA420()
{
  unint64_t result = qword_1EAE28F00;
  if (!qword_1EAE28F00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE28F08);
    sub_1E3C10DE8(&qword_1EAE28F10, &qword_1EAE28F18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28F00);
  }
  return result;
}

id MPModelObject.uuid.getter()
{
  id v1 = objc_msgSend(v0, sel_identifiers);
  id v2 = objc_msgSend(v1, sel_library);

  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_databaseID);
    swift_unknownObjectRelease();
    id v2 = (id)sub_1E3E7CD30();
  }
  return v2;
}

uint64_t MPModelObject.adamID.getter()
{
  id v1 = objc_msgSend(v0, sel_identifiers);
  id v2 = objc_msgSend(v1, sel_universalStore);

  if (!v2) {
    return 0;
  }
  objc_msgSend(v2, sel_adamID);
  swift_unknownObjectRelease();
  return sub_1E3E7A530();
}

uint64_t sub_1E3DDA5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E3C23838(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v31 = a6;
  int v30 = a3;
  uint64_t v29 = a8;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6418);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1E3E793D0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1E3E78740();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3DDA8C4(a1, (uint64_t)v26);
  sub_1E3E78720();
  long long v27 = (unsigned int *)MEMORY[0x1E4F91A08];
  if (a2) {
    long long v27 = (unsigned int *)MEMORY[0x1E4F91A00];
  }
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *v27, v20);
  CGSize.fitting(_:aspectRule:)((uint64_t)v23, a9, a10);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_1E3C34078(a4, (uint64_t)v19, &qword_1EBFE6418);
  sub_1E3C34078(a7, (uint64_t)v32, &qword_1EBFE6360);
  sub_1E3DDA928((uint64_t)v26, v30, (uint64_t)v19, a5 & 1, v31, (uint64_t)v32, v29);
  sub_1E3C10CE0(a7, &qword_1EBFE6360);
  sub_1E3C10CE0(a4, &qword_1EBFE6418);
  return sub_1E3C2CBF8(a1);
}

uint64_t sub_1E3DDA8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3DDA928@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  int v32 = a4;
  int v34 = a2;
  uint64_t v35 = a7;
  uint64_t v9 = sub_1E3E79920();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v33 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1E3E78740();
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v28 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6418);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v28 - v19;
  uint64_t v21 = sub_1E3E7A5A0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C34078(a3, (uint64_t)v20, &qword_1EBFE6418);
  sub_1E3DDA8C4(a1, (uint64_t)v14);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
  uint64_t v30 = v21;
  if (v25 == 1)
  {
    sub_1E3E78620();
    sub_1E3C2CBF8((uint64_t)v14);
    sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE6418);
  }
  else
  {
    sub_1E3C2CBF8((uint64_t)v14);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  }
  sub_1E3E7A570();
  sub_1E3DDA8C4(a1, v31);
  sub_1E3C34078(a3, (uint64_t)v17, &qword_1EBFE6418);
  sub_1E3E79900();
  uint64_t v26 = v37;
  sub_1E3C34078(v37, (uint64_t)v38, &qword_1EBFE6360);
  sub_1E3E78DF0();
  sub_1E3C10CE0(v26, &qword_1EBFE6360);
  sub_1E3C10CE0(a3, &qword_1EBFE6418);
  sub_1E3C2CBF8(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v30);
}

uint64_t ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v31 = a6;
  int v29 = a5 & 1;
  int v30 = a3;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6418);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1E3E793D0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1E3E78740();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3DDA8C4(a1, (uint64_t)v26);
  sub_1E3E78720();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E4F91A08], v20);
  CGSize.fitting(_:mode:aspectRule:)(a2, (uint64_t)v23, a9, a10);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_1E3C34078(a4, (uint64_t)v19, &qword_1EBFE6418);
  sub_1E3C34078(a7, (uint64_t)v32, &qword_1EBFE6360);
  sub_1E3DDA928((uint64_t)v26, v30, (uint64_t)v19, v29, v31, (uint64_t)v32, a8);
  sub_1E3C10CE0(a7, &qword_1EBFE6360);
  sub_1E3C10CE0(a4, &qword_1EBFE6418);
  return sub_1E3C2CBF8(a1);
}

uint64_t ArtworkRequest.artworkLoaderConfig.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E78630();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v42 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E78E70();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v45 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6418);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E7A5A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v50 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E78740();
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v42 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v42 - v19);
  sub_1E3E78E00();
  uint64_t v21 = v20[1];
  uint64_t v48 = *v20;
  uint64_t v49 = v21;
  swift_bridgeObjectRetain();
  sub_1E3C2CBF8((uint64_t)v20);
  sub_1E3E78D20();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_1E3E78D40();
  uint64_t v27 = v26;
  sub_1E3E78E00();
  int v46 = v17[*(int *)(v12 + 52)];
  sub_1E3C2CBF8((uint64_t)v17);
  sub_1E3E78D70();
  uint64_t v28 = v45;
  uint64_t v29 = v47;
  uint64_t v30 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v45, v1, v4);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v51 = v9;
  if (v31(v8, 1, v9) == 1)
  {
    int v32 = v28;
    sub_1E3E78E00();
    uint64_t v33 = &v14[*(int *)(v12 + 44)];
    int v34 = v42;
    uint64_t v35 = v43;
    uint64_t v36 = v44;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v42, v33, v44);
    sub_1E3C2CBF8((uint64_t)v14);
    uint64_t v37 = v50;
    sub_1E3E78620();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v30);
    sub_1E3C10CE0((uint64_t)v8, &qword_1EBFE6418);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v4);
    uint64_t v37 = v50;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v50, v8, v51);
  }
  char v38 = sub_1E3E78DB0();
  type metadata accessor for ArtworkLoaderConfig();
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v49;
  *(void *)(v39 + 16) = v48;
  *(void *)(v39 + 24) = v40;
  *(void *)(v39 + 32) = v23;
  *(void *)(v39 + 40) = v25;
  *(unsigned char *)(v39 + 48) = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v39 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop, v37, v51);
  *(void *)(v39 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = v27;
  *(unsigned char *)(v39 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = v38 & 1;
  return v39;
}

uint64_t PreparedArtworkRequest.init(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E78E70();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t PreparedArtworkRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1E3E78E70();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PreparedArtworkRequest.hash(into:)()
{
  sub_1E3E78E70();
  sub_1E3DDC2E8(&qword_1EBFE42A8, MEMORY[0x1E4F917B8]);

  return sub_1E3E7CC30();
}

uint64_t sub_1E3DDB5CC()
{
  return 0x74736575716572;
}

uint64_t sub_1E3DDB5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1E3E7E150();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1E3DDB67C(uint64_t a1)
{
  unint64_t v2 = sub_1E3DDB868();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1E3DDB6B8(uint64_t a1)
{
  unint64_t v2 = sub_1E3DDB868();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PreparedArtworkRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28F20);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3DDB868();
  sub_1E3E7E300();
  sub_1E3E78E70();
  sub_1E3DDC2E8((unint64_t *)&qword_1EBFE42A0, MEMORY[0x1E4F917B8]);
  sub_1E3E7E0B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1E3DDB868()
{
  unint64_t result = qword_1EAE28F28;
  if (!qword_1EAE28F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28F28);
  }
  return result;
}

uint64_t PreparedArtworkRequest.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t PreparedArtworkRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_1E3E78E70();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28F30);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3DDB868();
  sub_1E3E7E2E0();
  if (!v2)
  {
    sub_1E3DDC2E8((unint64_t *)&unk_1EBFE42B0, MEMORY[0x1E4F917B8]);
    sub_1E3E7E080();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_1E3DC2790((uint64_t)v11, v15);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1E3DDBBC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PreparedArtworkRequest.init(from:)(a1, a2);
}

uint64_t sub_1E3DDBBDC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28F20);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3DDB868();
  sub_1E3E7E300();
  sub_1E3E78E70();
  sub_1E3DDC2E8((unint64_t *)&qword_1EBFE42A0, MEMORY[0x1E4F917B8]);
  sub_1E3E7E0B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1E3DDBD50()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DDBDD8()
{
  sub_1E3E78E70();
  sub_1E3DDC2E8(&qword_1EBFE42A8, MEMORY[0x1E4F917B8]);

  return sub_1E3E7CC30();
}

uint64_t sub_1E3DDBE5C()
{
  return sub_1E3E7E2B0();
}

uint64_t type metadata accessor for PreparedArtworkRequest()
{
  uint64_t result = qword_1EBFE6338;
  if (!qword_1EBFE6338) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3DDBF30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
  *a1 = result;
  return result;
}

uint64_t PreparedArtworkRequest.encode(_:)(UIImage *a1)
{
  uint64_t v2 = sub_1E3E78740();
  uint64_t v3 = v2 - 8;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E78E00();
  uint64_t v6 = v5[*(int *)(v3 + 60)];
  sub_1E3C2CBF8((uint64_t)v5);
  if ((v6 - 1) < 2)
  {
    uint64_t v7 = UIImageJPEGRepresentation(a1, 1.0);
    if (!v7)
    {
      sub_1E3DDC0FC();
      swift_allocError();
      char v9 = 1;
LABEL_9:
      *uint64_t v8 = v9;
LABEL_12:
      swift_willThrow();
      return v6;
    }
    goto LABEL_6;
  }
  if (!v6)
  {
    uint64_t v7 = UIImagePNGRepresentation(a1);
    if (!v7)
    {
      sub_1E3DDC0FC();
      swift_allocError();
      *uint64_t v12 = 0;
      goto LABEL_12;
    }
LABEL_6:
    uint64_t v6 = sub_1E3E77D50();

    return v6;
  }
  uint64_t v6 = (uint64_t)a1;
  uint64_t v10 = UIImage.heicData(compressionQuality:)(1.0);
  if (v11 >> 60 == 15)
  {
    sub_1E3DDC0FC();
    swift_allocError();
    char v9 = 2;
    goto LABEL_9;
  }
  return v10;
}

unint64_t sub_1E3DDC0FC()
{
  unint64_t result = qword_1EAE28F38;
  if (!qword_1EAE28F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28F38);
  }
  return result;
}

id PreparedArtworkRequest.decode(_:)(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  sub_1E3C14F74(a1, a2);
  uint64_t v5 = (void *)sub_1E3E77D30();
  id v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_1E3C2B7E8(a1, a2);

  if (!v6)
  {
    sub_1E3DDC0FC();
    swift_allocError();
    *uint64_t v7 = 3;
    swift_willThrow();
  }
  return v6;
}

BOOL static PreparedArtworkRequest.CodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PreparedArtworkRequest.CodingError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t PreparedArtworkRequest.CodingError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3DDC2A0()
{
  return sub_1E3DDC2E8(&qword_1EBFE00B8, (void (*)(uint64_t))type metadata accessor for PreparedArtworkRequest);
}

uint64_t sub_1E3DDC2E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3DDC334()
{
  unint64_t result = qword_1EAE28F40;
  if (!qword_1EAE28F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28F40);
  }
  return result;
}

uint64_t sub_1E3DDC390(UIImage **a1)
{
  return PreparedArtworkRequest.encode(_:)(*a1);
}

void sub_1E3DDC3AC(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  sub_1E3C14F74(a1, a2);
  uint64_t v7 = (void *)sub_1E3E77D30();
  id v8 = objc_msgSend(v6, sel_initWithData_, v7);
  sub_1E3C2B7E8(a1, a2);

  if (v8)
  {
    *a3 = v8;
  }
  else
  {
    sub_1E3DDC0FC();
    swift_allocError();
    *char v9 = 3;
    swift_willThrow();
  }
}

uint64_t sub_1E3DDC47C()
{
  return _s10PodcastsUI22PreparedArtworkRequestV4with6formatAC0A10Foundation0D6FormatO_tF_0();
}

uint64_t initializeBufferWithCopyOfBuffer for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for PreparedArtworkRequest(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78E70();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PreparedArtworkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreparedArtworkRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DDC6F8);
}

uint64_t sub_1E3DDC6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PreparedArtworkRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DDC778);
}

uint64_t sub_1E3DDC778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78E70();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1E3DDC7E8()
{
  uint64_t result = sub_1E3E78E70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreparedArtworkRequest.CodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3DDC940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreparedArtworkRequest.CodingError()
{
  return &type metadata for PreparedArtworkRequest.CodingError;
}

unsigned char *storeEnumTagSinglePayload for PreparedArtworkRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3DDCA14);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreparedArtworkRequest.CodingKeys()
{
  return &type metadata for PreparedArtworkRequest.CodingKeys;
}

unint64_t sub_1E3DDCA50()
{
  unint64_t result = qword_1EAE28F48;
  if (!qword_1EAE28F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28F48);
  }
  return result;
}

unint64_t sub_1E3DDCAA8()
{
  unint64_t result = qword_1EAE28F50;
  if (!qword_1EAE28F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28F50);
  }
  return result;
}

unint64_t sub_1E3DDCB00()
{
  unint64_t result = qword_1EAE28F58;
  if (!qword_1EAE28F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28F58);
  }
  return result;
}

id sub_1E3DDCB54()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MediaLibraryStorageController()), sel_init);
  qword_1EBFE1D30 = (uint64_t)result;
  return result;
}

id static MediaLibraryStorageController.shared.getter()
{
  if (qword_1EBFE1D40 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBFE1D30;

  return v0;
}

uint64_t sub_1E3DDCC40()
{
  uint64_t v0 = sub_1E3E7D690();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7D620();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1E3E7B7C0();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1E3C8E038();
  sub_1E3E7B7B0();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1E3DDF868((unint64_t *)&unk_1EBFDEE50, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDEE28);
  sub_1E3C10DE8(&qword_1EBFDEE30, &qword_1EBFDEE28);
  sub_1E3E7DCC0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1E3E7D6E0();
  qword_1EBFE1D48 = result;
  return result;
}

uint64_t MediaLibraryStorageController.shouldDisplayStorageCleanupTip.getter()
{
  swift_beginAccess();
  sub_1E3E775E0();
  sub_1E3E7ADD0();
  swift_release();
  return v1;
}

uint64_t sub_1E3DDCFD0()
{
  swift_beginAccess();
  sub_1E3E775E0();
  sub_1E3E7ADD0();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E7ADE0();
  swift_release();
  return sub_1E3DDD0FC(v1);
}

uint64_t sub_1E3DDD084@<X0>(unsigned char *a1@<X8>)
{
  swift_beginAccess();
  sub_1E3E775E0();
  sub_1E3E7ADD0();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DDD0FC(char a1)
{
  int v2 = a1 & 1;
  swift_beginAccess();
  sub_1E3E775E0();
  sub_1E3E7ADD0();
  uint64_t result = swift_release();
  if (v5 != v2)
  {
    sub_1E3E775E0();
    sub_1E3E7ADD0();
    swift_release();
    sub_1E3DDD20C(v5);
    sub_1E3E775E0();
    sub_1E3E7ADD0();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v1;
    return sub_1E3E7AB00();
  }
  return result;
}

uint64_t sub_1E3DDD20C(char a1)
{
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2120);
  sub_1E3E78A90();
  swift_release();
  uint64_t v2 = sub_1E3E798C0();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    char v4 = a1 & 1;
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 + 40;
    do
    {
      unsigned int v6 = *(void (**)(char *))(v5 - 8);
      char v8 = v4;
      sub_1E3E775E0();
      v6(&v8);
      swift_release();
      v5 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t MediaLibraryStorageController.$shouldDisplayStorageCleanupTip.getter()
{
  swift_beginAccess();
  sub_1E3E775E0();
  sub_1E3E7ADF0();
  swift_release();
  return v1;
}

uint64_t MediaLibraryStorageController.shouldDisplayStorageCleanupTipPublisher.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1E3DDD3CC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DDD450(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_1E3E7AB00();
}

uint64_t MediaLibraryStorageController.$shouldDisplayStorageCleanupTipPublisher.getter()
{
  return swift_endAccess();
}

uint64_t sub_1E3DDD528()
{
  return swift_endAccess();
}

uint64_t sub_1E3DDD590(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2480);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  sub_1E3E7AAD0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

char *sub_1E3DDD704()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = sub_1E3E7D780();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  uint64_t v36 = v2;
  MEMORY[0x1F4188790](v1);
  int v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2500);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR___PUIMediaLibraryStorageController__storageCleanupObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2120);
  swift_allocObject();
  char v9 = v0;
  uint64_t v38 = sub_1E3E798E0();
  *(void *)&v0[v8] = sub_1E3E78A80();
  uint64_t v10 = OBJC_IVAR___PUIMediaLibraryStorageController__globalAutomaticDownloadLimit;
  sub_1E3E7D7D0();
  sub_1E3E7D880();
  uint64_t v32 = *MEMORY[0x1E4F92090];
  sub_1E3E7CD30();
  unint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel__applePodcastsFoundationSettingsUserDefaults);
  *(void *)&v9[v10] = sub_1E3E7ADC0();
  *(void *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController_activeObserver] = 0;
  *(void *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController_globalDownloadLimitObserver] = 0;
  *(void *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController_downloadedAssetsAsPercentageOfTotalSpace] = 0;
  *(void *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController_totalConsumedSpace] = 0;
  uint64_t v13 = OBJC_IVAR___PUIMediaLibraryStorageController__ignoredAssetsAsPercentageOfTotalSpace;
  sub_1E3E7CD30();
  id v14 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  *(void *)&v9[v13] = sub_1E3E7AE10();
  uint64_t v15 = OBJC_IVAR___PUIMediaLibraryStorageController__ignoredConsumedSpaceQuantity;
  sub_1E3E7CD30();
  id v16 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  *(void *)&v9[v15] = sub_1E3E7AE20();
  uint64_t v17 = (uint64_t *)&v9[OBJC_IVAR___PUIMediaLibraryStorageController__shouldDisplayStorageCleanupTip];
  sub_1E3E7CD30();
  id v18 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  *uint64_t v17 = sub_1E3E7ADB0();
  uint64_t v19 = &v9[OBJC_IVAR___PUIMediaLibraryStorageController__shouldDisplayStorageCleanupTipPublisher];
  LOBYTE(v38) = 0;
  sub_1E3E7AAB0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v19, v7, v4);
  swift_beginAccess();
  swift_release();
  sub_1E3E7CD30();
  id v20 = objc_msgSend(v11, sel__applePodcastsFoundationSharedUserDefaults);
  *uint64_t v17 = sub_1E3E7ADB0();
  swift_endAccess();

  v37.receiver = v9;
  v37.super_class = ObjectType;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v37, sel_init);
  id v22 = objc_msgSend(v11, sel__applePodcastsFoundationSettingsUserDefaults);
  sub_1E3E7CD30();
  uint64_t v23 = sub_1E3E7D530();

  swift_bridgeObjectRelease();
  uint64_t v38 = v23;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE23A8);
  sub_1E3C10DE8(&qword_1EBFE23A0, &qword_1EBFE23A8);
  uint64_t v24 = sub_1E3E7AD60();
  swift_release();
  swift_release();
  *(void *)&v21[OBJC_IVAR___PUIMediaLibraryStorageController_globalDownloadLimitObserver] = v24;
  swift_release();
  id v25 = objc_msgSend(self, sel_defaultCenter);
  id v26 = (id)*MEMORY[0x1E4FB2730];
  uint64_t v27 = v34;
  sub_1E3E7D770();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1E3DDF868((unint64_t *)&qword_1EBFDF300, MEMORY[0x1E4F27FC8]);
  uint64_t v28 = v35;
  uint64_t v29 = v27;
  uint64_t v30 = sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v28);
  *(void *)&v21[OBJC_IVAR___PUIMediaLibraryStorageController_activeObserver] = v30;
  swift_release();
  MediaLibraryStorageController.refreshDownloadedAssets()();
  sub_1E3DDDE4C((uint64_t)sub_1E3DDEE40, (uint64_t)&block_descriptor_19);

  return v21;
}

void sub_1E3DDDD08(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4E79630](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1E3E775E0();
    sub_1E3E7ADD0();
    swift_release();
    if (v6 != v2) {
      sub_1E3DDDE4C((uint64_t)sub_1E3DDEE40, (uint64_t)&block_descriptor_19);
    }
  }
}

void sub_1E3DDDDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1E4E79630](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1E3DDDE4C((uint64_t)sub_1E3DDEE40, (uint64_t)&block_descriptor_19);
  }
}

Swift::Void __swiftcall MediaLibraryStorageController.refreshDownloadedAssets()()
{
}

uint64_t sub_1E3DDDE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B770();
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1E3E7B7C0();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  char v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBFDF528 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1EBFE1D48;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3CE65F8;
  aBlock[3] = a2;
  id v12 = _Block_copy(aBlock);
  id v13 = v10;
  sub_1E3E775E0();
  sub_1E3E7B7A0();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1E3DDF868((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v9, v6, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_1E3DDE150()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

id MediaLibraryStorageController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (*(void *)&v0[OBJC_IVAR___PUIMediaLibraryStorageController_globalDownloadLimitObserver])
  {
    sub_1E3E775E0();
    sub_1E3E7A970();
    swift_release();
  }
  if (*(void *)&v0[OBJC_IVAR___PUIMediaLibraryStorageController_activeObserver])
  {
    sub_1E3E775E0();
    sub_1E3E7A970();
    swift_release();
  }
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2120);
  sub_1E3E78AA0();
  swift_release();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1E3DDE290()
{
  return sub_1E3E798D0();
}

uint64_t MediaLibraryStorageController.observeStorageCleanupChange(_:)()
{
  return 0;
}

uint64_t sub_1E3DDE444(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  sub_1E3E775E0();
  uint64_t v8 = sub_1E3E798A0();
  uint64_t result = swift_release();
  *a2 = v8;
  return result;
}

Swift::Void __swiftcall MediaLibraryStorageController.removeStorageCleanupChangeObserver(with:)(Swift::Int64 with)
{
}

Swift::Void __swiftcall MediaLibraryStorageController.mediaLibraryDidChange()()
{
}

void sub_1E3DDE748(uint64_t a1)
{
  uint64_t v2 = sub_1E3E77D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1E4E79630](a1 + 16);
  if (v6)
  {
    uint64_t v7 = (char *)v6;
    id v8 = objc_msgSend(self, sel_defaultMediaLibrary);
    id v9 = objc_msgSend(v8, sel_databasePath);
    if (v9)
    {
      uint64_t v10 = v9;
      sub_1E3E7CD30();

      sub_1E3E77C20();
      swift_bridgeObjectRelease();
      id v11 = _sSo14MPMediaLibraryC10PodcastsUIE05totalC14AssetsFileSizeSivg_0();
      uint64_t v12 = sub_1E3E77BC0();
      char v14 = v13;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      double v15 = 0.0;
      if ((v14 & 1) == 0) {
        double v15 = (double)(uint64_t)v11 / (double)v12;
      }
      *(double *)&v7[OBJC_IVAR___PUIMediaLibraryStorageController_downloadedAssetsAsPercentageOfTotalSpace] = v15;
      id v16 = _sSo14MPMediaLibraryC10PodcastsUIE05totalC14AssetsFileSizeSivg_0();

      *(void *)&v7[OBJC_IVAR___PUIMediaLibraryStorageController_totalConsumedSpace] = v16;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1E3DDE8FC()
{
  sub_1E3DDE748(v0);
}

uint64_t sub_1E3DDE904(uint64_t a1)
{
  return sub_1E3DDE444(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1E3DDE910()
{
  return sub_1E3E798B0();
}

Swift::Void __swiftcall MediaLibraryStorageController.ignoreStorageCleanupPrompt()()
{
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2708);
  sub_1E3E7ADE0();
  swift_release();
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A80);
  sub_1E3E7ADE0();
  swift_release();
  swift_beginAccess();
  sub_1E3E775E0();
  sub_1E3E7ADD0();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E7ADE0();
  swift_release();
  sub_1E3DDD0FC(v0);
}

uint64_t sub_1E3DDEAC8()
{
  return sub_1E3DDCFD0();
}

uint64_t sub_1E3DDEAF8()
{
  return type metadata accessor for MediaLibraryStorageController();
}

uint64_t type metadata accessor for MediaLibraryStorageController()
{
  uint64_t result = qword_1EBFE1D50;
  if (!qword_1EBFE1D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3DDEB94()
{
  sub_1E3CDBB84();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1E3DDEC58()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1E3DDEC90(char a1)
{
  return sub_1E3E36A40(a1, *(void *)(v1 + 16));
}

void sub_1E3DDEC98(uint64_t *a1)
{
  sub_1E3DDDD08(a1, v1);
}

void sub_1E3DDECA0(uint64_t a1)
{
  sub_1E3DDDDBC(a1, v1);
}

void sub_1E3DDECA8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1E4E79630](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    double v4 = *(double *)(v2 + OBJC_IVAR___PUIMediaLibraryStorageController_downloadedAssetsAsPercentageOfTotalSpace);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain_n();
    sub_1E3E775E0();
    sub_1E3E7ADD0();
    swift_release();
    if (v9)
    {
      swift_beginAccess();
      id v6 = (id)MEMORY[0x1E4E79630](v5 + 16);

      swift_release_n();
    }
    else
    {
      uint64_t v7 = sub_1E3E7D7D0();
      id v8 = objc_msgSend(self, sel_defaultMediaLibrary);
      sub_1E3E775E0();
      id v6 = v3;
      sub_1E3E655D8(v7, v8, (uint64_t)sub_1E3DDEF9C, v5, v7, v6, 0, 1, v4);

      swift_release_n();
    }
  }
}

void sub_1E3DDEE40()
{
  sub_1E3DDECA8(v0);
}

void sub_1E3DDEE48(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4E79630](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if (a1)
    {
      swift_beginAccess();
      sub_1E3E775E0();
      sub_1E3E7ADD0();
      swift_release();
      if ((v6 & 1) == 0)
      {
        sub_1E3E775E0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2708);
        sub_1E3E7ADE0();
        swift_release();
        sub_1E3E775E0();
        sub_1E3E7ADD0();
        swift_release();
        sub_1E3E775E0();
        sub_1E3E7ADE0();
        swift_release();
        sub_1E3DDD0FC(0);
      }
    }
  }
}

void sub_1E3DDEF9C(char a1)
{
  sub_1E3DDEE48(a1, v1);
}

void sub_1E3DDEFA4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1E4E79630](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    double v4 = *(double *)(v2 + OBJC_IVAR___PUIMediaLibraryStorageController_downloadedAssetsAsPercentageOfTotalSpace);
    sub_1E3E775E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2708);
    sub_1E3E7ADD0();
    swift_release();
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain_n();
    sub_1E3E775E0();
    sub_1E3E7ADD0();
    swift_release();
    if (v12)
    {
      swift_beginAccess();
      uint64_t v6 = MEMORY[0x1E4E79630](v5 + 16);
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        swift_beginAccess();
        sub_1E3E775E0();
        sub_1E3E7ADD0();
        swift_release();
        if (v11)
        {
          sub_1E3E775E0();
          sub_1E3E7ADD0();
          swift_release();
          sub_1E3E775E0();
          sub_1E3E7ADE0();
          swift_release();
          sub_1E3DDD0FC(v11);
        }
        swift_release_n();
      }
      else
      {
        swift_release_n();
      }

      swift_release();
    }
    else
    {
      uint64_t v8 = sub_1E3E7D7D0();
      id v9 = objc_msgSend(self, sel_defaultMediaLibrary);
      sub_1E3E775E0();
      id v10 = v3;
      sub_1E3E655D8(v8, v9, (uint64_t)sub_1E3DDF7FC, v5, v8, v10, 0, v13, v4);

      swift_release_n();
    }
  }
}

void sub_1E3DDF244(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4E79630](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    swift_beginAccess();
    sub_1E3E775E0();
    sub_1E3E7ADD0();
    swift_release();
    if (v6 != (a1 & 1))
    {
      sub_1E3E775E0();
      sub_1E3E7ADD0();
      swift_release();
      sub_1E3E775E0();
      sub_1E3E7ADE0();
      swift_release();
      sub_1E3DDD0FC(v6);
    }
  }
}

uint64_t sub_1E3DDF358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, char a8)
{
  return sub_1E3DDF64C(a1, a2, a3, a5, a4, a7, a8 & 1);
}

uint64_t sub_1E3DDF364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B770();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1E3E7B7C0();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C8E038();
  char v13 = (void *)sub_1E3E7D6A0();
  char v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a1;
  v14[3] = a2;
  void v14[4] = a3;
  aBlock[4] = sub_1E3DDF78C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1E3CE65F8;
  aBlock[3] = &block_descriptor_26_0;
  double v15 = _Block_copy(aBlock);
  sub_1E3E775E0();
  sub_1E3E775E0();
  swift_release();
  sub_1E3E7B7A0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1E3DDF868((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

uint64_t sub_1E3DDF64C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 1;
  if (a1 >= 500000001 && sub_1E3E7D820() >= 1)
  {
    if (a7)
    {
      if (a4 >= 0.15) {
        goto LABEL_5;
      }
    }
    else if (*(double *)&a6 + 0.15 <= a4)
    {
LABEL_5:
      char v14 = 1;
      goto LABEL_8;
    }
  }
  char v14 = 0;
LABEL_8:
  *(unsigned char *)(v13 + 16) = v14;
  sub_1E3DDF364(a2, a3, v13);

  return swift_release();
}

uint64_t sub_1E3DDF74C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DDF78C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_beginAccess();
  return v1(*(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_1E3DDF7E4()
{
  return swift_deallocObject();
}

void sub_1E3DDF7F4()
{
  sub_1E3DDEFA4(v0);
}

void sub_1E3DDF7FC(char a1)
{
  sub_1E3DDF244(a1, v1);
}

uint64_t sub_1E3DDF804()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DDF83C(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1E3DDF868(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t UIColor.RGBAInterpolator.floatInterpolator.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  sub_1E3E775E0();
  return v1;
}

__n128 UIColor.RGBAInterpolator.init(value1:value2:floatInterpolator:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v9 = self;
  id v10 = objc_msgSend(v9, sel_traitCollectionWithUserInterfaceStyle_, 1);
  id v11 = objc_msgSend(v9, sel_traitCollectionWithUserInterfaceStyle_, 2);
  id v12 = objc_msgSend(a1, sel_resolvedColorWithTraitCollection_, v10);
  UIColor.rgbaComponents.getter((uint64_t)v36);
  uint64_t v13 = v36[0];
  uint64_t v14 = v36[1];
  uint64_t v15 = v36[2];
  uint64_t v16 = v36[3];

  sub_1E3DDFC1C((uint64_t)v36, (uint64_t)v43);
  if (v43[32] == 1)
  {
    if (qword_1EAE241A0 != -1) {
      swift_once();
    }
    uint64_t v14 = *((void *)&xmmword_1EAE27668 + 1);
    uint64_t v13 = xmmword_1EAE27668;
    uint64_t v16 = *((void *)&xmmword_1EAE27678 + 1);
    uint64_t v15 = xmmword_1EAE27678;
  }
  id v17 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, v10);
  UIColor.rgbaComponents.getter((uint64_t)v37);
  uint64_t v18 = v37[0];
  uint64_t v19 = v37[1];
  uint64_t v20 = v37[2];
  uint64_t v21 = v37[3];

  sub_1E3DDFC1C((uint64_t)v37, (uint64_t)v42);
  if (v42[32] == 1)
  {
    if (qword_1EAE241A0 != -1) {
      swift_once();
    }
    uint64_t v19 = *((void *)&xmmword_1EAE27668 + 1);
    uint64_t v18 = xmmword_1EAE27668;
    uint64_t v21 = *((void *)&xmmword_1EAE27678 + 1);
    uint64_t v20 = xmmword_1EAE27678;
  }
  uint64_t v29 = v16;
  uint64_t v30 = v15;
  uint64_t v31 = v14;
  uint64_t v32 = v13;
  id v22 = objc_msgSend(a1, sel_resolvedColorWithTraitCollection_, v11);
  UIColor.rgbaComponents.getter((uint64_t)v38);
  uint64_t v23 = v38[0];
  uint64_t v24 = v38[1];
  uint64_t v25 = v38[2];
  uint64_t v26 = v38[3];

  sub_1E3DDFC1C((uint64_t)v38, (uint64_t)v41);
  if (v41[32] == 1)
  {
    if (qword_1EAE241A0 != -1) {
      swift_once();
    }
    uint64_t v24 = *((void *)&xmmword_1EAE27668 + 1);
    uint64_t v23 = xmmword_1EAE27668;
    uint64_t v26 = *((void *)&xmmword_1EAE27678 + 1);
    uint64_t v25 = xmmword_1EAE27678;
  }
  id v27 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, v11);
  UIColor.rgbaComponents.getter((uint64_t)v39);
  long long v34 = v39[1];
  long long v35 = v39[0];

  sub_1E3DDFC1C((uint64_t)v39, (uint64_t)v40);
  if (v40[32] == 1)
  {
    if (qword_1EAE241A0 != -1) {
      swift_once();
    }
    long long v34 = xmmword_1EAE27678;
    long long v35 = xmmword_1EAE27668;
  }

  *(void *)a5 = v32;
  *(void *)(a5 + 8) = v31;
  *(void *)(a5 + 16) = v30;
  *(void *)(a5 + 24) = v29;
  *(void *)(a5 + 32) = v18;
  *(void *)(a5 + 40) = v19;
  *(void *)(a5 + 48) = v20;
  *(void *)(a5 + 56) = v21;
  *(void *)(a5 + 64) = v23;
  *(void *)(a5 + 72) = v24;
  *(void *)(a5 + 80) = v25;
  *(void *)(a5 + 88) = v26;
  __n128 result = (__n128)v34;
  *(_OWORD *)(a5 + 96) = v35;
  *(_OWORD *)(a5 + 112) = v34;
  *(void *)(a5 + 128) = a3;
  *(void *)(a5 + 136) = a4;
  return result;
}

uint64_t sub_1E3DDFC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id UIColor.RGBAInterpolator.value(forInput:)(double a1)
{
  long long v3 = v1[7];
  v17[6] = v1[6];
  v17[7] = v3;
  _WORD v17[8] = v1[8];
  long long v4 = v1[3];
  v17[2] = v1[2];
  v17[3] = v4;
  long long v5 = v1[5];
  unsigned char v17[4] = v1[4];
  v17[5] = v5;
  long long v6 = v1[1];
  v17[0] = *v1;
  v17[1] = v6;
  uint64_t v7 = swift_allocObject();
  long long v8 = v1[7];
  *(_OWORD *)(v7 + 112) = v1[6];
  *(_OWORD *)(v7 + 128) = v8;
  *(_OWORD *)(v7 + 144) = v1[8];
  long long v9 = v1[3];
  *(_OWORD *)(v7 + 48) = v1[2];
  *(_OWORD *)(v7 + 64) = v9;
  long long v10 = v1[5];
  *(_OWORD *)(v7 + 80) = v1[4];
  *(_OWORD *)(v7 + 96) = v10;
  long long v11 = v1[1];
  *(_OWORD *)(v7 + 16) = *v1;
  *(_OWORD *)(v7 + 32) = v11;
  *(double *)(v7 + 160) = a1;
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  void v16[4] = sub_1E3DDFF14;
  v16[5] = v7;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  v16[2] = sub_1E3D2518C;
  v16[3] = &block_descriptor_31;
  uint64_t v13 = _Block_copy(v16);
  sub_1E3DDFF20((uint64_t)v17);
  id v14 = objc_msgSend(v12, sel_initWithDynamicProvider_, v13);
  _Block_release(v13);
  swift_release();
  return v14;
}

id sub_1E3DDFDC8(void *a1, double *a2, double a3)
{
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
  {
    v5.n128_f64[0] = a2[8];
    double v7 = a2[9];
    double v8 = a2[10];
    double v9 = a2[11];
    v6.n128_f64[0] = a2[12];
    double v10 = a2[13];
    double v11 = a2[14];
    double v12 = a2[15];
  }
  else
  {
    v5.n128_f64[0] = *a2;
    double v7 = a2[1];
    double v8 = a2[2];
    double v9 = a2[3];
    v6.n128_f64[0] = a2[4];
    double v10 = a2[5];
    double v11 = a2[6];
    double v12 = a2[7];
  }
  uint64_t v13 = (double (*)(__n128, __n128, double))*((void *)a2 + 16);
  double v14 = v13(v5, v6, a3);
  double v15 = ((double (*)(double, double, double))v13)(v7, v10, a3);
  double v16 = ((double (*)(double, double, double))v13)(v8, v11, a3);
  double v17 = ((double (*)(double, double, double))v13)(v9, v12, a3);
  id v18 = objc_allocWithZone(MEMORY[0x1E4FB1618]);

  return objc_msgSend(v18, sel_initWithRed_green_blue_alpha_, v14, v15, v16, v17);
}

uint64_t sub_1E3DDFEDC()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1E3DDFF14(void *a1)
{
  return sub_1E3DDFDC8(a1, (double *)(v1 + 16), *(double *)(v1 + 160));
}

uint64_t sub_1E3DDFF20(uint64_t a1)
{
  return a1;
}

unint64_t sub_1E3DDFF50()
{
  unint64_t result = qword_1EAE28F70;
  if (!qword_1EAE28F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28F70);
  }
  return result;
}

uint64_t _s16RGBAInterpolatorVwxx()
{
  return swift_release();
}

uint64_t _s16RGBAInterpolatorVwcp(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  uint64_t v7 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v7;
  sub_1E3E775E0();
  return a1;
}

void *_s16RGBAInterpolatorVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  uint64_t v3 = a2[17];
  a1[16] = a2[16];
  a1[17] = v3;
  sub_1E3E775E0();
  swift_release();
  return a1;
}

_OWORD *_s16RGBAInterpolatorVwta(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  long long v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  long long v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_release();
  return a1;
}

uint64_t _s16RGBAInterpolatorVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 128);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s16RGBAInterpolatorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 128) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIColor.RGBAInterpolator()
{
  return &type metadata for UIColor.RGBAInterpolator;
}

unint64_t sub_1E3DE01C8()
{
  uint64_t v1 = sub_1E3E7B9F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  long long v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for JSPackageError();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (long long *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3DE067C(v0, (uint64_t)v7);
  unint64_t v8 = 0xD000000000000032;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_1E3E7DDD0();
      swift_bridgeObjectRelease();
      v14[0] = 0xD00000000000001BLL;
      v14[1] = 0x80000001E3EA30C0;
      sub_1E3E7CEA0();
      goto LABEL_7;
    case 2u:
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_1E3E7DDD0();
      swift_bridgeObjectRelease();
      v14[0] = 0xD000000000000019;
      v14[1] = 0x80000001E3EA30A0;
      sub_1E3E7CEA0();
      swift_bridgeObjectRelease();
      sub_1E3E7CEA0();
      return v14[0];
    case 3u:
    case 4u:
      (*(void (**)(char *, long long *, uint64_t))(v2 + 32))(v4, v7, v1);
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_1E3E7DDD0();
      sub_1E3E7CEA0();
      sub_1E3E7DF20();
      unint64_t v8 = v14[0];
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v8;
    case 5u:
      strcpy((char *)v14, "Invalid URL: ");
      HIWORD(v14[1]) = -4864;
      sub_1E3E7CEA0();
LABEL_7:
      swift_bridgeObjectRelease();
      return v14[0];
    case 6u:
      sub_1E3C1B644(v7, (uint64_t)v14);
      unint64_t v12 = 0;
      unint64_t v13 = 0xE000000000000000;
      sub_1E3E7DDD0();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD00000000000001BLL;
      unint64_t v13 = 0x80000001E3EA3040;
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      sub_1E3E7BEE0();
      sub_1E3E7CEA0();
      swift_bridgeObjectRelease();
      sub_1E3E7CEA0();
      unint64_t v8 = v12;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
      return v8;
    case 7u:
      return v8;
    case 8u:
      return 0xD00000000000003FLL;
    default:
      double v9 = *(void **)v7;
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_1E3E7DDD0();
      sub_1E3E7CEA0();
      unint64_t v12 = (unint64_t)v9;
      type metadata accessor for AMSBagKey(0);
      sub_1E3E7DF20();
      sub_1E3E7CEA0();

      return v14[0];
  }
}

uint64_t type metadata accessor for JSPackageError()
{
  uint64_t result = qword_1EBFE0B30;
  if (!qword_1EBFE0B30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3DE067C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSPackageError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_1E3DE06E0(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    double v9 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(char **)a2;
        *(void *)a1 = *(void *)a2;
        unint64_t v8 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
      case 5u:
        uint64_t v12 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
        uint64_t v11 = sub_1E3E7B9F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        long long v13 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v13;
        (**(void (***)(void *, const void *))(v13 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_1E3DE093C(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = *a1;

      break;
    case 1u:
    case 2u:
    case 5u:
      swift_bridgeObjectRelease();
      break;
    case 3u:
    case 4u:
      uint64_t v2 = sub_1E3E7B9F0();
      uint64_t v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
      v3(a1, v2);
      break;
    case 6u:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      break;
    default:
      return;
  }
}

char *sub_1E3DE0A58(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v7 = v6;
      goto LABEL_7;
    case 1u:
    case 2u:
    case 5u:
      uint64_t v9 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v9;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
    case 4u:
      uint64_t v8 = sub_1E3E7B9F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_7;
    case 6u:
      long long v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(void *, const void *))(v10 - 8))(a1, a2);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_1E3DE0C58(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3DE0E84((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *a2;
        *a1 = *a2;
        id v7 = v6;
        goto LABEL_8;
      case 1u:
      case 2u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
        uint64_t v8 = sub_1E3E7B9F0();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_8;
      case 6u:
        uint64_t v9 = a2[3];
        a1[3] = v9;
        a1[4] = a2[4];
        (**((void (***)(void **, const void *))v9 - 1))(a1, a2);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1E3DE0E84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JSPackageError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1E3DE0EE0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
  {
    uint64_t v7 = sub_1E3E7B9F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1E3DE0FF0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3DE0E84((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 3)
    {
      uint64_t v7 = sub_1E3E7B9F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1E3DE1110()
{
  uint64_t result = sub_1E3E7B9F0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t DownloadEpisodesIntent.init(episodeIdentifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static DownloadEpisodesIntent.kind.getter()
{
  return 0xD000000000000016;
}

uint64_t DownloadEpisodesIntent.episodeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1E3DE11E8(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000001E3E93C30;
}

ValueMetadata *type metadata accessor for DownloadEpisodesIntent()
{
  return &type metadata for DownloadEpisodesIntent;
}

void sub_1E3DE1218()
{
  uint64_t v0 = (void *)sub_1E3E7CCF0();
  id v1 = objc_msgSend(self, sel_bundleWithIdentifier_, v0);

  if (v1) {
    qword_1EBFE63D8 = (uint64_t)v1;
  }
  else {
    __break(1u);
  }
}

id static NSBundle.podcastsUI.getter()
{
  if (qword_1EBFE6350 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBFE63D8;

  return v0;
}

uint64_t sub_1E3DE12EC(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_1E3C2E8CC((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
        swift_unknownObjectRetain();
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_1E3E7DF50();

  if (!v4) {
    return 0;
  }
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE28FA0);
  swift_dynamicCast();
  uint64_t v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

void *sub_1E3DE13B8(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE22E0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v5);
  long long v34 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1E3E7D690();
  uint64_t v8 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  long long v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E7D620();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1E3E7B7C0();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v14 = v2 + 16;
  uint64_t v15 = v13;
  uint64_t v35 = v14;
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  sub_1E3E7B790();
  uint64_t v38 = v15;
  sub_1E3DE2FF4((unint64_t *)&unk_1EBFDEE50, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDEE28);
  sub_1E3C10DE8(&qword_1EBFDEE30, &qword_1EBFDEE28);
  sub_1E3E7DCC0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCC58], v30);
  uint64_t v16 = sub_1E3E7D6E0();
  double v17 = v29;
  v29[3] = v16;
  unint64_t v18 = sub_1E3C7F7A0(MEMORY[0x1E4FBC860]);
  uint64_t v20 = v32;
  uint64_t v19 = v33;
  unsigned char v17[4] = v18;
  v17[5] = v19;
  uint64_t v38 = v20;
  id v39 = (id)v17[3];
  id v21 = v39;
  uint64_t v22 = sub_1E3E7D640();
  uint64_t v23 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v31, 1, 1, v22);
  id v24 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2418);
  sub_1E3C10DE8(&qword_1EBFE2410, &qword_1EBFE2418);
  sub_1E3C32D34();
  uint64_t v25 = v34;
  sub_1E3E7AD10();
  sub_1E3C10CE0(v23, (uint64_t *)&unk_1EBFE27A0);

  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE22D0, (uint64_t *)&unk_1EBFE22E0);
  uint64_t v26 = v36;
  sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v26);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26E8);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE26F0, &qword_1EBFE26E8);
  sub_1E3E7A960();
  swift_endAccess();
  swift_release();
  swift_release();
  return v17;
}

void sub_1E3DE1908(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1E3E7A880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)a1;
  uint64_t v6 = *(void **)(a1 + 8);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = *(void **)a1;
      uint64_t v23 = *(void **)(a1 + 8);
      sub_1E3DE3044(v8, v6);
      sub_1E3DE3044(v7, v23);
      if (sub_1E3DE1D1C())
      {
        sub_1E3E7A7B0();
        uint64_t v9 = v7;
        long long v10 = sub_1E3E7A860();
        os_log_type_t v11 = sub_1E3E7D500();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          id v21 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v12 = 138412290;
          uint64_t v22 = v9;
          id v13 = [v9 playerPath];
          id v14 = v13;
          if (v13) {
            id v24 = v13;
          }
          else {
            id v24 = 0;
          }
          sub_1E3E7DBD0();
          unint64_t v18 = v21;
          *id v21 = v14;
          uint64_t v9 = v22;

          _os_log_impl(&dword_1E3BC5000, v10, v11, "Received timeout for player path %@", v12, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v18, -1, -1);
          MEMORY[0x1E4E79510](v12, -1, -1);
        }
        else
        {

          long long v10 = v9;
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          id v19 = [v9 playerPath];
          if (!v19)
          {
            __break(1u);
            return;
          }
          uint64_t v20 = v19;
          sub_1E3DE2144(v19);
          sub_1E3CF101C(v7, v23, 1);
          swift_release();
        }
        else
        {
          sub_1E3CF101C(v7, v23, 1);
        }
      }
      else
      {
        sub_1E3CF101C(v7, v23, 1);

        double v17 = v23;
      }
    }
  }
  else if (v7)
  {
    uint64_t v23 = *(void **)(a1 + 8);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      id v15 = objc_msgSend(v7, sel_playerPath);
      swift_beginAccess();
      uint64_t v16 = sub_1E3D5A628((unint64_t)v15);
      swift_endAccess();
      if (v16)
      {
        swift_getObjectType();
        sub_1E3E7D730();
        swift_unknownObjectRelease();
      }
      sub_1E3CF101C(v7, v23, 0);
      sub_1E3CF101C(v7, v23, 0);
      swift_release();
    }
  }
}

uint64_t sub_1E3DE1D1C()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_domain);
  uint64_t v3 = sub_1E3E7CD30();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v1, sel_code);
  if (sub_1E3E7CD30() == v3 && v7 == v5)
  {
    swift_bridgeObjectRelease_n();
    if (v6 == (id)2) {
      return 1;
    }
  }
  else
  {
    char v9 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0 && v6 == (id)2) {
      return 1;
    }
  }
  unint64_t v35 = MEMORY[0x1E4FBC860];
  id v11 = objc_msgSend(v1, sel_userInfo);
  uint64_t v12 = sub_1E3E7CB60();

  uint64_t v13 = sub_1E3E7CD30();
  if (*(void *)(v12 + 16) && (unint64_t v15 = sub_1E3C2E48C(v13, v14), (v16 & 1) != 0))
  {
    sub_1E3C114A4(*(void *)(v12 + 56) + 32 * v15, (uint64_t)&v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v34 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE279F8);
      if (swift_dynamicCast()) {
        sub_1E3D3AB18((unint64_t)v32);
      }
      goto LABEL_16;
    }
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1E3C10CE0((uint64_t)&v33, &qword_1EBFE6190);
LABEL_16:
  id v17 = objc_msgSend(v1, sel_userInfo);
  uint64_t v18 = sub_1E3E7CB60();

  uint64_t v19 = sub_1E3E7CD30();
  if (*(void *)(v18 + 16) && (unint64_t v21 = sub_1E3C2E48C(v19, v20), (v22 & 1) != 0))
  {
    sub_1E3C114A4(*(void *)(v18 + 56) + 32 * v21, (uint64_t)&v33);
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v34 + 1))
  {
    sub_1E3C12B10(0, &qword_1EAE28FB0);
    if (swift_dynamicCast())
    {
      id v23 = v32;
      MEMORY[0x1E4E76960]();
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1E3E7D090();
      }
      sub_1E3E7D100();
      sub_1E3E7D080();
    }
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v33, &qword_1EBFE6190);
  }
  unint64_t v24 = v35;
  if (v35 >> 62) {
    goto LABEL_44;
  }
  uint64_t v25 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v25)
  {
    while (1)
    {
      id v26 = (v24 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E4E77720](0, v24) : *(id *)(v24 + 32);
      id v27 = v26;
      if (sub_1E3DE1D1C()) {
        break;
      }

      if (v25 != 1)
      {
        uint64_t v28 = 5;
        while (1)
        {
          id v29 = (v24 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1E4E77720](v28 - 4, v24)
              : *(id *)(v24 + 8 * v28);
          id v27 = v29;
          uint64_t v30 = v28 - 3;
          if (__OFADD__(v28 - 4, 1)) {
            break;
          }
          if (sub_1E3DE1D1C()) {
            goto LABEL_31;
          }

          ++v28;
          if (v30 == v25) {
            goto LABEL_40;
          }
        }
        __break(1u);
LABEL_44:
        swift_bridgeObjectRetain_n();
        uint64_t v25 = sub_1E3E7DFC0();
        if (v25) {
          continue;
        }
      }
      goto LABEL_40;
    }
LABEL_31:
    swift_bridgeObjectRelease_n();

    uint64_t v10 = 1;
  }
  else
  {
LABEL_40:
    swift_bridgeObjectRelease_n();
    uint64_t v10 = 0;
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1E3DE2144(void *a1)
{
  uint64_t v3 = sub_1E3E7B750();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v53 = (void *)((char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v57 = (void *)((char *)v43 - v7);
  uint64_t v8 = sub_1E3E7B7E0();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  MEMORY[0x1F4188790](v8);
  long long v52 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v54 = (char *)v43 - v11;
  uint64_t v12 = sub_1E3E7B770();
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v47 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1E3E7B7C0();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  unint64_t v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1E3E7D700();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v1 + 32;
  swift_beginAccess();
  uint64_t v20 = v1;
  uint64_t v21 = *(void *)(v1 + 32);
  id v22 = a1;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1E3DE12EC(v22, v21);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v23)
  {
    id v44 = (id)sub_1E3C12B10(0, &qword_1EAE28F80);
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1E3DE2FF4(&qword_1EAE28F88, MEMORY[0x1E4FBCC70]);
    uint64_t v45 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE28F90);
    sub_1E3C10DE8(&qword_1EAE28F98, &qword_1EAE28F90);
    sub_1E3E7DCC0();
    uint64_t v24 = v20;
    id v25 = *(id *)(v20 + 24);
    uint64_t v26 = sub_1E3E7D710();

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v43[1] = v26;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v22;
    aBlock[4] = sub_1E3DE2CF4;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1E3CE65F8;
    aBlock[3] = &block_descriptor_32;
    uint64_t v30 = _Block_copy(aBlock);
    id v44 = v22;
    sub_1E3E775E0();
    sub_1E3E7B7A0();
    uint64_t v31 = v47;
    v43[0] = ObjectType;
    sub_1E3DE2B34();
    sub_1E3E7D720();
    _Block_release(v30);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v48);
    swift_release();
    swift_release();
    uint64_t v32 = v52;
    sub_1E3E7B7D0();
    long long v33 = v57;
    *uint64_t v57 = *(void *)(v24 + 40);
    long long v34 = *(void (**)(void *, void, uint64_t))(v4 + 104);
    uint64_t v35 = v45;
    v34(v33, *MEMORY[0x1E4FBCAE8], v45);
    uint64_t v36 = v54;
    MEMORY[0x1E4E75120](v32, v33);
    uint64_t v37 = *(void (**)(void *, uint64_t))(v4 + 8);
    v37(v33, v35);
    uint64_t v55 = *(void *)(v55 + 8);
    uint64_t v38 = v32;
    uint64_t v39 = v56;
    ((void (*)(char *, uint64_t))v55)(v38, v56);
    v34(v33, *MEMORY[0x1E4FBCAD0], v35);
    uint64_t v40 = v53;
    *long long v53 = 0;
    v34(v40, *MEMORY[0x1E4FBCAA8], v35);
    MEMORY[0x1E4E77240](v36, v33, v40, v43[0]);
    v37(v40, v35);
    v37(v33, v35);
    ((void (*)(char *, uint64_t))v55)(v36, v39);
    sub_1E3E7D740();
    swift_beginAccess();
    id v41 = v44;
    uint64_t v42 = swift_unknownObjectRetain();
    sub_1E3DE2CFC(v42, v41);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
}

void sub_1E3DE2880(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1E3E7A880();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    id v7 = a2;
    sub_1E3D5A628((unint64_t)v7);
    swift_endAccess();
    swift_release();

    swift_unknownObjectRelease();
  }
  sub_1E3E7A7B0();
  uint64_t v8 = a2;
  uint64_t v9 = sub_1E3E7A860();
  os_log_type_t v10 = sub_1E3E7D500();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v19 = v3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v4;
    uint64_t v13 = (void *)v12;
    *(_DWORD *)uint64_t v11 = 138412290;
    uint64_t v20 = v8;
    uint64_t v14 = v8;
    sub_1E3E7DBD0();
    *uint64_t v13 = v8;

    uint64_t v3 = v19;
    _os_log_impl(&dword_1E3BC5000, v9, v10, "Route for player path %@ has timed out, switching to system route", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    unint64_t v15 = v13;
    uint64_t v4 = v18;
    MEMORY[0x1E4E79510](v15, -1, -1);
    MEMORY[0x1E4E79510](v11, -1, -1);
  }
  else
  {

    uint64_t v9 = v8;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v16 = self;
  id v17 = objc_msgSend(v16, sel_systemRoute);
  objc_msgSend(v16, sel_setActiveRoute_completion_, v17, 0);
}

uint64_t sub_1E3DE2B34()
{
  return sub_1E3E7DCC0();
}

uint64_t sub_1E3DE2C10()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s17PlayerInvalidatorCMa()
{
  return self;
}

uint64_t sub_1E3DE2C7C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3DE2CB4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3DE2CF4()
{
  sub_1E3DE2880(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1E3DE2CFC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_1E3E7DD00();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v3 = sub_1E3DE2DB0(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1E3E68618(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v10;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3DE2DB0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE26150);
    uint64_t v2 = sub_1E3E7DFF0();
    uint64_t v18 = v2;
    sub_1E3E7DF30();
    uint64_t v3 = sub_1E3E7DF60();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1E3C12B10(0, &qword_1EAE25080);
      do
      {
        swift_dynamicCast();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE28FA0);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1E3D12470(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1E3E7DA70();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1E3E7DF60();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1E3DE2FF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E3DE303C(uint64_t a1)
{
}

id sub_1E3DE3044(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

uint64_t sub_1E3DE3084@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1E3C8E038();
  uint64_t result = sub_1E3E7D6A0();
  uint64_t v4 = MEMORY[0x1E4F71860];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t Promise.publisher.getter()
{
  return sub_1E3E7AA80();
}

uint64_t sub_1E3DE3164(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1E3C8E038();
  uint64_t v5 = sub_1E3E7D6A0();
  void v7[3] = v4;
  void v7[4] = MEMORY[0x1E4F71860];
  v7[0] = v5;
  Promise.then(getResult:on:)(a1, a2);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_1E3DE31D8(uint64_t a1, uint64_t a2)
{
  return sub_1E3DE3164(a1, a2);
}

uint64_t Promise.optionalPublisher.getter()
{
  return sub_1E3E7AA80();
}

uint64_t sub_1E3DE3280(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = *(void *)(v5 + *MEMORY[0x1E4F71778]);
  uint64_t v6[2] = v7;
  void v6[3] = a1;
  v6[4] = a2;
  unint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  unint64_t v9 = sub_1E3C8E038();
  swift_retain_n();
  uint64_t v10 = sub_1E3E7D6A0();
  void v12[3] = v9;
  v12[4] = MEMORY[0x1E4F71860];
  v12[0] = v10;
  sub_1E3E7C9A0();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
}

uint64_t sub_1E3DE33BC(uint64_t a1, uint64_t a2)
{
  return sub_1E3DE3280(a1, a2, v2);
}

uint64_t sub_1E3DE33C4(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  sub_1E3E7DB90();
  uint64_t v7 = sub_1E3E7E2C0();
  uint64_t v8 = *(void *)(v7 - 8);
  v9.n128_f64[0] = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)&v14 - v10, a1, a4, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, a4);
  swift_storeEnumTagMultiPayload();
  a2(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1E3DE3540()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DE3578(uint64_t a1)
{
  return sub_1E3DE33C4(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1E3DE3584(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  sub_1E3E7DB90();
  uint64_t v6 = sub_1E3E7E2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(void *)(a4 - 8) + 56))((char *)&v12 - v9, 1, 1, a4, v8);
  swift_storeEnumTagMultiPayload();
  a2(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1E3DE36C0(uint64_t a1)
{
  return sub_1E3DE3584(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t BookmarkEpisodeIntent.init(episodeIdentifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static BookmarkEpisodeIntent.kind.getter()
{
  return 0xD000000000000015;
}

uint64_t BookmarkEpisodeIntent.episodeIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1E3DE36FC(void *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001E3E93CF0;
}

ValueMetadata *type metadata accessor for BookmarkEpisodeIntent()
{
  return &type metadata for BookmarkEpisodeIntent;
}

uint64_t UnbookmarkEpisodeIntent.init(episodeIdentifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static UnbookmarkEpisodeIntent.kind.getter()
{
  return 0xD000000000000017;
}

uint64_t UnbookmarkEpisodeIntent.episodeIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1E3DE3758(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x80000001E3E93D70;
}

ValueMetadata *type metadata accessor for UnbookmarkEpisodeIntent()
{
  return &type metadata for UnbookmarkEpisodeIntent;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  *a1 = result;
  return result;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.objectGraph.setter()
{
  return swift_release();
}

void (*EpisodeEntity.EpisodeEntityQuery.objectGraph.modify(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34D58;
}

uint64_t EpisodeEntity.EpisodeEntityQuery.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t EpisodeEntity.EpisodeEntityQuery.predicate(forAdamIDs:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    unint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1E3E7DEB0();
    uint64_t result = sub_1E3DE3F9C(a1);
    int64_t v5 = result;
    int v7 = v6;
    char v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_11;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_12;
      }
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedLongLong_, *(void *)(*(void *)(a1 + 48) + 8 * v5));
      sub_1E3E7DE80();
      sub_1E3E7DEC0();
      sub_1E3E7DED0();
      sub_1E3E7DE90();
      uint64_t result = sub_1E3DE4040(v5, v7, v9 & 1, a1);
      int64_t v5 = result;
      int v7 = v10;
      char v9 = v11 & 1;
      if (!--v1)
      {
        sub_1E3D15688(result, v10, v11 & 1);
        unint64_t v2 = v15;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_9:
    uint64_t v12 = self;
    sub_1E3C50A70(v2);
    swift_bridgeObjectRelease();
    sub_1E3C90B00();
    sub_1E3DE43A4((unint64_t *)&qword_1EAE25720, (void (*)(uint64_t))sub_1E3C90B00);
    char v13 = (void *)sub_1E3E7D300();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v12, sel_predicateForEpisodeStoreTrackIds_, v13);

    return (uint64_t)v14;
  }
  return result;
}

id EpisodeEntity.EpisodeEntityQuery.predicate(forUuids:)()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1E3E7D300();
  id v2 = objc_msgSend(v0, sel_predicateForEpisodeUuids_, v1);

  return v2;
}

uint64_t sub_1E3DE3B80(uint64_t a1)
{
  return EpisodeEntity.EpisodeEntityQuery.predicate(forAdamIDs:)(a1);
}

id sub_1E3DE3B98()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1E3E7D300();
  id v2 = objc_msgSend(v0, sel_predicateForEpisodeUuids_, v1);

  return v2;
}

uint64_t sub_1E3DE3C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  char v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE29658 + dword_1EAE29658);
  int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  void *v6 = v3;
  v6[1] = sub_1E3C856F4;
  return v8(a2, a3);
}

uint64_t sub_1E3DE3CC4(uint64_t a1)
{
  uint64_t v4 = *v1;
  int v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE29620 + dword_1EAE29620);
  int64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *int64_t v5 = v2;
  v5[1] = sub_1E3C85CD4;
  return v7(a1, v4);
}

uint64_t sub_1E3DE3D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int v7 = v3;
  v7[1] = sub_1E3C19DC4;
  return MEMORY[0x1F40D3D60](a1, a2, a3);
}

uint64_t sub_1E3DE3E2C(uint64_t a1, uint64_t a2)
{
  int64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1E3DE4200();
  *int64_t v5 = v2;
  v5[1] = sub_1E3C50ED4;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t sub_1E3DE3EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int v7 = v3;
  v7[1] = sub_1E3C19DC4;
  return MEMORY[0x1F40D46A0](a1, a2, a3);
}

uint64_t sub_1E3DE3F9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1E3DE4040(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1E3DE4124()
{
  return sub_1E3DE43A4((unint64_t *)&qword_1EBFE3060, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3DE416C()
{
  return sub_1E3DE43A4(&qword_1EAE28FB8, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3DE41B4()
{
  return sub_1E3DE43A4(&qword_1EAE28FC0, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

unint64_t sub_1E3DE4200()
{
  unint64_t result = qword_1EAE28FC8;
  if (!qword_1EAE28FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28FC8);
  }
  return result;
}

unint64_t sub_1E3DE4258()
{
  unint64_t result = qword_1EAE28FD8;
  if (!qword_1EAE28FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28FD8);
  }
  return result;
}

unint64_t sub_1E3DE42B0()
{
  unint64_t result = qword_1EAE28FE0[0];
  if (!qword_1EAE28FE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE28FE0);
  }
  return result;
}

unint64_t sub_1E3DE4308()
{
  unint64_t result = qword_1EAE28FF8;
  if (!qword_1EAE28FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE28FF8);
  }
  return result;
}

uint64_t sub_1E3DE435C()
{
  return sub_1E3DE43A4(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3DE43A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3DE43F0()
{
  unint64_t result = qword_1EAE29000[0];
  if (!qword_1EAE29000[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE253F0);
    sub_1E3DE43A4(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE29000);
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeEntity.EpisodeEntityQuery()
{
  return &type metadata for EpisodeEntity.EpisodeEntityQuery;
}

uint64_t sub_1E3DE44AC()
{
  uint64_t result = sub_1E3E7CD30();
  qword_1EAE29018 = result;
  unk_1EAE29020 = v1;
  return result;
}

uint64_t static ChannelEntity.databaseEntityName.getter()
{
  if (qword_1EAE24518 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAE29018;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1E3DE4544()
{
  uint64_t v0 = sub_1E3E78790();
  __swift_allocate_value_buffer(v0, qword_1EAE29028);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE29028);
  uint64_t v2 = *MEMORY[0x1E4F91608];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static ChannelEntity.serverContentType.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24520 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E78790();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE29028);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3DE4674()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  qword_1EAE29040 = result;
  return result;
}

uint64_t static ChannelEntity.defaultQuery.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24528 != -1) {
    swift_once();
  }
  *a1 = qword_1EAE29040;

  return sub_1E3E775E0();
}

uint64_t static ChannelEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t ChannelEntity.displayRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F10);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E77B60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = sub_1E3E7CCE0();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1E3E7CCD0();
  sub_1E3E7CCC0();
  sub_1E3E774B0();
  sub_1E3E7CCB0();
  swift_bridgeObjectRelease();
  sub_1E3E7CCC0();
  sub_1E3E77B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v9 = sub_1E3E777B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return sub_1E3E777C0();
}

uint64_t ChannelEntity.name.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t ChannelEntity.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelEntity.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ChannelEntity.id.modify())()
{
  return nullsub_1;
}

uint64_t ChannelEntity.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelEntity.uuid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ChannelEntity.uuid.modify())()
{
  return nullsub_1;
}

void *ChannelEntity.objectID.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void ChannelEntity.objectID.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*ChannelEntity.objectID.modify())()
{
  return nullsub_1;
}

uint64_t ChannelEntity.adamID.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ChannelEntity.adamID.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*ChannelEntity.adamID.modify())()
{
  return nullsub_1;
}

uint64_t ChannelEntity.name.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ChannelEntity.name.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ChannelEntity.$name.getter()
{
  return sub_1E3E774D0();
}

uint64_t ChannelEntity.subscribed.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t ChannelEntity.subscribed.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ChannelEntity.subscribed.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ChannelEntity.$subscribed.getter()
{
  return sub_1E3E774D0();
}

uint64_t ChannelEntity.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ChannelEntity();
  return sub_1E3C34078(v1 + *(int *)(v3 + 40), a1, &qword_1EBFE4240);
}

uint64_t type metadata accessor for ChannelEntity()
{
  uint64_t result = qword_1EBFE2CF8;
  if (!qword_1EBFE2CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ChannelEntity.artworkData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ChannelEntity() + 44);
  uint64_t v2 = *(void *)v1;
  sub_1E3C8103C(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t ChannelEntity.storeURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ChannelEntity();
  return sub_1E3C34078(v1 + *(int *)(v3 + 48), a1, &qword_1EBFE6070);
}

uint64_t ChannelEntity.init(model:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E77D00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E3E78630();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v43 - v15;
  uint64_t v17 = a1;
  id v18 = objc_msgSend(a1, sel_artworkURL, v14);
  uint64_t v50 = v5;
  uint64_t v47 = v16;
  if (v18)
  {
    uint64_t v19 = v18;
    sub_1E3E7CD30();

    long long v51 = xmmword_1E3E8CEA0;
    long long v52 = 0u;
    memset(v53, 0, sizeof(v53));
    swift_bridgeObjectRetain();
    sub_1E3E78600();
    sub_1E3E78AC0();
    sub_1E3E78730();
    uint64_t v20 = sub_1E3E78740();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 0, 1, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = sub_1E3E78740();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 1, 1, v21);
  }
  id v22 = a1;
  id v23 = objc_msgSend(a1, sel_objectID);
  id v24 = objc_msgSend(v23, sel_URIRepresentation);

  sub_1E3E77C90();
  uint64_t v25 = sub_1E3E77C00();
  uint64_t v27 = v26;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v49 = v6;
  v28(v9, v6);
  id v29 = objc_msgSend(v17, sel_objectID);
  if (((unint64_t)objc_msgSend(v17, sel_storeId) & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1E3E7DF70();
    __break(1u);
  }
  else
  {
    uint64_t v30 = sub_1E3E7A530();
    id v31 = objc_msgSend(v17, sel_name);
    uint64_t v44 = v30;
    uint64_t v45 = v29;
    if (v31)
    {
      uint64_t v32 = v31;
      long long v33 = v46;
      uint64_t v34 = sub_1E3E7CD30();
      uint64_t v36 = v35;
    }
    else
    {
      long long v33 = v46;
      uint64_t v34 = 0;
      uint64_t v36 = 0xE000000000000000;
    }
    unsigned __int8 v37 = objc_msgSend(v22, sel_subscriptionActive);
    uint64_t v39 = (uint64_t)v47;
    uint64_t v38 = v48;
    sub_1E3C34078((uint64_t)v47, v48, &qword_1EBFE4240);
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v41 = (uint64_t)v50;
    v40(v50, 1, 1, v49);
    ChannelEntity.init(id:uuid:objectID:adamID:name:subscribed:artworkModel:artworkData:storeURL:)(v25, v27, 0, 0, v45, v44, v34, v36, v33, v37, v38, 0, 0xF000000000000000, v41);

    return sub_1E3C10CE0(v39, &qword_1EBFE4240);
  }
  return result;
}

uint64_t ChannelEntity.init(id:uuid:objectID:adamID:name:subscribed:artworkModel:artworkData:storeURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v41 = a13;
  uint64_t v42 = a14;
  uint64_t v40 = a12;
  uint64_t v38 = a8;
  uint64_t v39 = a11;
  int v37 = a10;
  uint64_t v18 = sub_1E3E77B60();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F00);
  sub_1E3E77B40();
  a9[6] = MEMORY[0x1E4E70E10](v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F08);
  sub_1E3E77B40();
  a9[7] = MEMORY[0x1E4E70E20](v20);
  uint64_t v21 = (int *)type metadata accessor for ChannelEntity();
  uint64_t v22 = (uint64_t)a9 + v21[10];
  uint64_t v23 = sub_1E3E78740();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  id v24 = (char *)a9 + v21[11];
  *(_OWORD *)id v24 = xmmword_1E3E93F80;
  uint64_t v25 = (uint64_t)a9 + v21[12];
  uint64_t v26 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *a9 = a1;
  a9[1] = a2;
  uint64_t v27 = v34;
  a9[2] = v33;
  a9[3] = v27;
  uint64_t v28 = v35;
  a9[4] = a5;
  a9[5] = v28;
  uint64_t v43 = v36;
  uint64_t v44 = v38;
  id v29 = a5;
  sub_1E3E774C0();
  LOBYTE(v43) = v37;
  sub_1E3E774C0();

  sub_1E3CDA16C(v39, v22, &qword_1EBFE4240);
  sub_1E3C634A4(*(void *)v24, *((void *)v24 + 1));
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  *(void *)id v24 = v40;
  *((void *)v24 + 1) = v31;
  return sub_1E3CDA16C(v30, v25, &qword_1EBFE6070);
}

void ChannelEntity.init(mediaObject:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v27 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  double v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_storeId, v7);
  uint64_t v11 = sub_1E3E7CD30();
  uint64_t v28 = v12;
  uint64_t v29 = v11;

  id v13 = objc_msgSend(a1, sel_storeId);
  sub_1E3E7CD30();

  uint64_t v14 = sub_1E3E7A510();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(a1, sel_name);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_1E3E7CD30();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0xE000000000000000;
  }
  sub_1E3E78CA0();
  char v20 = sub_1E3E79400();
  swift_release();
  sub_1E3E78CA0();
  uint64_t v21 = sub_1E3E79410();
  swift_release();
  if (v21)
  {
    ArtworkModel.init(serverArtwork:)((uint64_t)v9);
  }
  else
  {
    uint64_t v22 = sub_1E3E78740();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v9, 1, 1, v22);
  }
  id v23 = [a1 url];
  if (v23)
  {
    id v24 = v23;
    sub_1E3E7CD30();

    swift_bridgeObjectRetain();
    uint64_t v25 = (uint64_t)v27;
    sub_1E3E77CD0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v26 = sub_1E3E77D00();
    uint64_t v25 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v27, 1, 1, v26);
  }
  ChannelEntity.init(id:uuid:objectID:adamID:name:subscribed:artworkModel:artworkData:storeURL:)(v29, v28, 0, 0, 0, v14, v17, v19, a2, v20 & 1, (uint64_t)v9, 0, 0xF000000000000000, v25);
}

Swift::Void __swiftcall ChannelEntity.alignID(with:)(NSManagedObjectID with)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)v2[4];
  if (v8)
  {
    sub_1E3D35350();
    uint64_t v9 = with.super.isa;
    id v10 = v8;
    char v11 = sub_1E3E7DA80();

    if (v11)
    {
      id v12 = [(objc_class *)v9 URIRepresentation];
      sub_1E3E77C90();

      uint64_t v13 = sub_1E3E77C00();
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      *uint64_t v2 = v13;
      v2[1] = v15;
    }
  }
}

Swift::Void __swiftcall ChannelEntity.alignID(with:)(Swift::String with)
{
  object = with._object;
  uint64_t v3 = (void *)v1[3];
  if (v3)
  {
    uint64_t countAndFlagsBits = with._countAndFlagsBits;
    BOOL v5 = v1[2] == with._countAndFlagsBits && v3 == object;
    if (v5 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t *v1 = countAndFlagsBits;
      v1[1] = (uint64_t)object;
    }
  }
}

uint64_t ChannelEntity.alignID(with:)(uint64_t result)
{
  if (v1[5] == result)
  {
    uint64_t v2 = v1;
    sub_1E3C340DC();
    uint64_t v3 = sub_1E3E7DC90();
    uint64_t v5 = v4;
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v3;
    v2[1] = v5;
  }
  return result;
}

uint64_t sub_1E3DE5C6C@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24528 != -1) {
    swift_once();
  }
  *a1 = qword_1EAE29040;

  return sub_1E3E775E0();
}

uint64_t sub_1E3DE5CDC()
{
  if (qword_1EAE24518 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAE29018;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1E3DE5D44()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1E3DE5D74()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t sub_1E3DE5D9C(uint64_t result, uint64_t a2)
{
  uint64_t v4 = v2[3];
  if (v4)
  {
    uint64_t v5 = result;
    BOOL v6 = v2[2] == result && v4 == a2;
    if (v6 || (uint64_t result = sub_1E3E7E150(), (result & 1) != 0))
    {
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      *id v2 = v5;
      v2[1] = a2;
    }
  }
  return result;
}

uint64_t sub_1E3DE5E14@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24520 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E78790();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE29028);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3DE5EC0()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_1E3DE5EC8(uint64_t result)
{
  if (v1[5] == result)
  {
    uint64_t v2 = v1;
    sub_1E3C340DC();
    uint64_t v3 = sub_1E3E7DC90();
    uint64_t v5 = v4;
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v3;
    v2[1] = v5;
  }
  return result;
}

uint64_t sub_1E3DE5F34()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t sub_1E3DE6074(uint64_t a1)
{
  uint64_t v2 = sub_1E3DA3C3C(&qword_1EAE28548);

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t sub_1E3DE60E0(uint64_t a1)
{
  uint64_t v2 = sub_1E3DA3C3C(&qword_1EBFE2E78);

  return MEMORY[0x1F40D4970](a1, v2);
}

uint64_t ChannelEntity.prepare(asPartOf:)(uint64_t a1)
{
  v2[103] = v1;
  v2[97] = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v2[104] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[105] = v4;
  v2[106] = *(void *)(v4 + 64);
  v2[107] = swift_task_alloc();
  v2[108] = swift_task_alloc();
  v2[109] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  uint64_t v6 = (void *)swift_task_alloc();
  v2[110] = v6;
  void *v6 = v2;
  v6[1] = sub_1E3DE629C;
  return MEMORY[0x1F4127FF8](v2 + 87, v5, v5);
}

uint64_t sub_1E3DE629C()
{
  *(void *)(*(void *)v1 + 888) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3DE68F0;
  }
  else {
    uint64_t v2 = sub_1E3DE63B0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3DE63B0()
{
  uint64_t v1 = *(void *)(v0 + 872);
  uint64_t v2 = *(void *)(v0 + 856);
  uint64_t v3 = *(void *)(v0 + 848);
  uint64_t v4 = *(void *)(v0 + 840);
  uint64_t v5 = *(void *)(v0 + 824);
  uint64_t v6 = *(void *)(v0 + 776);
  uint64_t v7 = *(void *)(v5 + 40);
  uint64_t v8 = type metadata accessor for ChannelEntity();
  *(void *)(v0 + 896) = v8;
  uint64_t v9 = *(int *)(v8 + 48);
  *(_DWORD *)(v0 + 944) = v9;
  sub_1E3C34078(v5 + v9, v1, &qword_1EBFE6070);
  sub_1E3C34078(v1, v2, &qword_1EBFE6070);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 904) = v12;
  sub_1E3C24558(v2, v12 + v10);
  *(void *)(v12 + v11) = v7;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v6;
  sub_1E3E775E0();
  sub_1E3E775E0();
  swift_asyncLet_begin();
  uint64_t v13 = v5 + *(int *)(v8 + 40);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE294A8 + dword_1EAE294A8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 912) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1E3DE6580;
  return v16(v13, v0 + 696);
}

uint64_t sub_1E3DE6580(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 920) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[108];
    return MEMORY[0x1F41881D0](v6 + 2, v7, sub_1E3DE6974, v6 + 82);
  }
  else
  {
    v6[116] = a2;
    v6[117] = a1;
    return MEMORY[0x1F4188298](sub_1E3DE66DC, 0, 0);
  }
}

uint64_t sub_1E3DE66DC()
{
  uint64_t v1 = v0[117];
  uint64_t v2 = v0[116];
  uint64_t v3 = v0[103] + *(int *)(v0[112] + 44);
  sub_1E3C634A4(*(void *)v3, *(void *)(v3 + 8));
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = v2;
  uint64_t v4 = v0[108];
  return MEMORY[0x1F41881D8](v0 + 2, v4, sub_1E3DE677C, v0 + 92);
}

uint64_t sub_1E3DE677C()
{
  return MEMORY[0x1F4188298](sub_1E3DE6798, 0, 0);
}

uint64_t sub_1E3DE6798()
{
  sub_1E3DE7004(*(void *)(v0 + 864), *(void *)(v0 + 824) + *(int *)(v0 + 944));
  uint64_t v1 = *(void *)(v0 + 864);
  return MEMORY[0x1F41881D0](v0 + 16, v1, sub_1E3DE6818, v0 + 784);
}

uint64_t sub_1E3DE6818()
{
  return MEMORY[0x1F4188298](sub_1E3DE6834, 0, 0);
}

uint64_t sub_1E3DE6834()
{
  sub_1E3C10CE0(*(void *)(v0 + 872), &qword_1EBFE6070);
  __swift_destroy_boxed_opaque_existential_0(v0 + 696);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DE68F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DE6974()
{
  return MEMORY[0x1F4188298](sub_1E3DE6990, 0, 0);
}

uint64_t sub_1E3DE6990()
{
  sub_1E3C10CE0(*(void *)(v0 + 872), &qword_1EBFE6070);
  __swift_destroy_boxed_opaque_existential_0(v0 + 696);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DE6A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v4[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3DE6AD8, 0, 0);
}

uint64_t sub_1E3DE6AD8()
{
  uint64_t v1 = v0[6];
  sub_1E3C34078(v0[3], v1, &qword_1EBFE6070);
  uint64_t v2 = sub_1E3E77D00();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1E3C10CE0(v0[6], &qword_1EBFE6070);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1E3DE6C88;
    uint64_t v5 = v0[4];
    uint64_t v6 = v0[5];
    uint64_t v7 = v0[2];
    return sub_1E3DE706C(v7, v5, v6);
  }
  else
  {
    uint64_t v9 = v0[2];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v9, v0[6], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
    swift_task_dealloc();
    unint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1E3DE6C88()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1E3DE6D9C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_1E3E77D00();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3DE6EE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1E3C19DC4;
  return sub_1E3DE6A40(a1, v7, v8, v9);
}

uint64_t sub_1E3DE7004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3DE706C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  uint64_t v4 = sub_1E3E7A880();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  unint64_t v6 = (void *)swift_task_alloc();
  v3[21] = v6;
  void *v6 = v3;
  v6[1] = sub_1E3DE7190;
  return MEMORY[0x1F4127FF8](v3 + 2, v5, v5);
}

uint64_t sub_1E3DE7190()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3DE7734;
  }
  else {
    uint64_t v2 = sub_1E3DE72A4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3DE72A4()
{
  uint64_t v1 = v0[16];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26968);
  uint64_t v2 = swift_allocObject();
  v0[23] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_1E3E86660;
  *(void *)(v2 + 32) = v1;
  unint64_t v3 = sub_1E3E53BBC(MEMORY[0x1E4FBC860]);
  v0[24] = v3;
  v0[10] = v2;
  v0[11] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[25] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE290A0);
  sub_1E3C10DE8(&qword_1EAE290A8, &qword_1EAE290A0);
  *uint64_t v4 = v0;
  v4[1] = sub_1E3DE7410;
  return MEMORY[0x1F41281F8](v0 + 14);
}

uint64_t sub_1E3DE7410()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1E3DE79AC;
  }
  else {
    uint64_t v2 = sub_1E3DE7564;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1E3DE7564()
{
  unint64_t v1 = v0[14];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v8 = v0[15];
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_1E3E77D00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    goto LABEL_11;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x1E4E77720](0, v1);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v2 = *(id *)(v1 + 32);
  }
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  id v4 = [v3 url];

  uint64_t v5 = v0[15];
  if (v4)
  {
    sub_1E3E7CD30();

    swift_bridgeObjectRetain();
    sub_1E3E77CD0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v6 = sub_1E3E77D00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  unint64_t v10 = (void (*)(void))v0[1];
  v10();
}

uint64_t sub_1E3DE7734()
{
  uint64_t v21 = v0;
  unint64_t v1 = (void *)v0[22];
  sub_1E3E7A740();
  id v2 = v1;
  id v3 = v1;
  id v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v17 = v0[19];
    uint64_t v18 = v0[18];
    uint64_t v19 = v0[20];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_1E3E7E210();
    v0[13] = sub_1E3C150B8(v8, v9, &v20);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Failed to prepare channel share URL, but failing silently: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v7, -1, -1);
    MEMORY[0x1E4E79510](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    uint64_t v11 = v0[19];
    uint64_t v10 = v0[20];
    uint64_t v12 = v0[18];

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  uint64_t v13 = v0[15];
  uint64_t v14 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1E3DE79AC()
{
  uint64_t v21 = v0;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  unint64_t v1 = (void *)v0[26];
  sub_1E3E7A740();
  id v2 = v1;
  id v3 = v1;
  id v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v17 = v0[19];
    uint64_t v18 = v0[18];
    uint64_t v19 = v0[20];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_1E3E7E210();
    v0[13] = sub_1E3C150B8(v8, v9, &v20);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Failed to prepare channel share URL, but failing silently: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v7, -1, -1);
    MEMORY[0x1E4E79510](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    uint64_t v11 = v0[19];
    uint64_t v10 = v0[20];
    uint64_t v12 = v0[18];

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  uint64_t v13 = v0[15];
  uint64_t v14 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1E3DE7C30(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return ChannelEntity.prepare(asPartOf:)(a1);
}

uint64_t static ChannelEntity.transferRepresentation.getter()
{
  uint64_t v0 = type metadata accessor for ChannelEntity();
  uint64_t v1 = sub_1E3DA3C3C(&qword_1EAE29060);
  unint64_t v2 = sub_1E3DE7F40();
  uint64_t v3 = MEMORY[0x1E4FBB1A0];

  return MEMORY[0x1F40DFA60](sub_1E3DE7D60, 0, v0, v3, v1, v2);
}

uint64_t sub_1E3DE7D60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ChannelEntity();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C34078(a1 + *(int *)(v5 + 56), (uint64_t)v10, &qword_1EBFE6070);
  uint64_t v11 = sub_1E3E77D00();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE6070);
    sub_1E3DA2798(a1, (uint64_t)v7);
LABEL_4:
    sub_1E3E774B0();
    uint64_t v13 = v17[0];
    uint64_t v15 = v17[1];
    goto LABEL_5;
  }
  uint64_t v13 = sub_1E3E77C00();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  sub_1E3DA2798(a1, (uint64_t)v7);
  if (!v15) {
    goto LABEL_4;
  }
LABEL_5:
  uint64_t result = sub_1E3DEA838((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

unint64_t sub_1E3DE7F40()
{
  unint64_t result = qword_1EAE29068;
  if (!qword_1EAE29068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29068);
  }
  return result;
}

uint64_t sub_1E3DE7F94()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E50);
}

uint64_t sub_1E3DE7FC8()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E60);
}

uint64_t sub_1E3DE7FFC()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E88);
}

unint64_t sub_1E3DE8034()
{
  unint64_t result = qword_1EAE29270;
  if (!qword_1EAE29270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29270);
  }
  return result;
}

uint64_t sub_1E3DE8088()
{
  return MEMORY[0x1E4F188B0];
}

uint64_t sub_1E3DE8094()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E68);
}

uint64_t sub_1E3DE80C8()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E70);
}

uint64_t sub_1E3DE80FC()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E58);
}

uint64_t sub_1E3DE8130()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E78);
}

uint64_t sub_1E3DE8164()
{
  return sub_1E3C10DE8(&qword_1EAE29070, &qword_1EAE29078);
}

uint64_t sub_1E3DE81A0()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E80);
}

uint64_t sub_1E3DE81D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DE81F0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1E3DE7F40();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];

  return MEMORY[0x1F40DFA60](sub_1E3DE7D60, 0, a1, v5, a2, v4);
}

uint64_t sub_1E3DE8264()
{
  return sub_1E3DA3C3C(&qword_1EAE28548);
}

uint64_t sub_1E3DE829C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3DE82D8()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3DE8314@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DE8350()
{
  return sub_1E3E774C0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ChannelEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v18 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v8 = (void *)a2[4];
    uint64_t v7 = a2[5];
    a1[4] = (uint64_t)v8;
    a1[5] = v7;
    uint64_t v9 = a2[7];
    uint64_t v10 = *(int *)(a3 + 40);
    __dst = (uint64_t *)((char *)a1 + v10);
    uint64_t v11 = (uint64_t *)((char *)a2 + v10);
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v12 = (int *)sub_1E3E78740();
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v14 = *(unsigned int (**)(void *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v8;
    sub_1E3E775E0();
    sub_1E3E775E0();
    if (v14(v11, 1, v12))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v11[1];
      void *__dst = *v11;
      __dst[1] = v19;
      int v20 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v20 == 255)
      {
        *((_OWORD *)__dst + 1) = *((_OWORD *)v11 + 1);
        *((unsigned char *)__dst + 32) = *((unsigned char *)v11 + 32);
      }
      else
      {
        uint64_t v21 = v11[2];
        uint64_t v22 = v11[3];
        sub_1E3C2B454(v21, v22, v20);
        __dst[2] = v21;
        __dst[3] = v22;
        *((unsigned char *)__dst + 32) = v20;
      }
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(v11 + 5);
      id v23 = (id *)(v11 + 7);
      int v24 = *((unsigned __int8 *)v11 + 64);
      if (v24 == 255)
      {
        __dst[7] = *v23;
        *((unsigned char *)__dst + 64) = *((unsigned char *)v11 + 64);
      }
      else
      {
        id v25 = *v23;
        sub_1E3C2B46C(*v23, *((unsigned char *)v11 + 64));
        __dst[7] = v25;
        *((unsigned char *)__dst + 64) = v24;
      }
      uint64_t v26 = (id *)(v11 + 9);
      int v27 = *((unsigned __int8 *)v11 + 80);
      if (v27 == 255)
      {
        __dst[9] = *v26;
        *((unsigned char *)__dst + 80) = *((unsigned char *)v11 + 80);
      }
      else
      {
        id v28 = *v26;
        sub_1E3C2B46C(*v26, *((unsigned char *)v11 + 80));
        __dst[9] = v28;
        *((unsigned char *)__dst + 80) = v27;
      }
      uint64_t v29 = (id *)(v11 + 11);
      int v30 = *((unsigned __int8 *)v11 + 96);
      if (v30 == 255)
      {
        __dst[11] = *v29;
        *((unsigned char *)__dst + 96) = *((unsigned char *)v11 + 96);
      }
      else
      {
        id v31 = *v29;
        sub_1E3C2B46C(*v29, *((unsigned char *)v11 + 96));
        __dst[11] = v31;
        *((unsigned char *)__dst + 96) = v30;
      }
      uint64_t v32 = (id *)(v11 + 13);
      int v33 = *((unsigned __int8 *)v11 + 112);
      if (v33 == 255)
      {
        __dst[13] = *v32;
        *((unsigned char *)__dst + 112) = *((unsigned char *)v11 + 112);
      }
      else
      {
        id v34 = *v32;
        sub_1E3C2B46C(*v32, *((unsigned char *)v11 + 112));
        __dst[13] = v34;
        *((unsigned char *)__dst + 112) = v33;
      }
      uint64_t v35 = (id *)(v11 + 15);
      int v36 = *((unsigned __int8 *)v11 + 128);
      if (v36 == 255)
      {
        __dst[15] = *v35;
        *((unsigned char *)__dst + 128) = *((unsigned char *)v11 + 128);
      }
      else
      {
        id v37 = *v35;
        sub_1E3C2B46C(*v35, *((unsigned char *)v11 + 128));
        __dst[15] = v37;
        *((unsigned char *)__dst + 128) = v36;
      }
      *((unsigned char *)__dst + 129) = *((unsigned char *)v11 + 129);
      uint64_t v38 = v12[11];
      uint64_t v39 = (char *)__dst + v38;
      uint64_t v40 = (char *)v11 + v38;
      uint64_t v41 = sub_1E3E78630();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
      uint64_t v42 = v12[12];
      uint64_t v43 = (void *)((char *)__dst + v42);
      uint64_t v44 = (void *)((char *)v11 + v42);
      uint64_t v45 = v44[1];
      *uint64_t v43 = *v44;
      v43[1] = v45;
      *((unsigned char *)__dst + v12[13]) = *((unsigned char *)v11 + v12[13]);
      *((unsigned char *)__dst + v12[14]) = *((unsigned char *)v11 + v12[14]);
      *((unsigned char *)__dst + v12[15]) = *((unsigned char *)v11 + v12[15]);
      uint64_t v46 = v12[16];
      uint64_t v47 = (void *)((char *)__dst + v46);
      uint64_t v48 = (void *)((char *)v11 + v46);
      uint64_t v49 = v48[1];
      *uint64_t v47 = *v48;
      v47[1] = v49;
      uint64_t v50 = *(void (**)(void *, void, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(__dst, 0, 1, v12);
    }
    uint64_t v51 = a3;
    uint64_t v52 = *(int *)(a3 + 44);
    uint64_t v18 = a1;
    long long v53 = (char *)a1 + v52;
    long long v54 = (char *)a2 + v52;
    unint64_t v55 = *((void *)v54 + 1);
    if (v55 >> 60 == 15)
    {
      *(_OWORD *)long long v53 = *(_OWORD *)v54;
    }
    else
    {
      uint64_t v56 = *(void *)v54;
      sub_1E3C14F74(*(void *)v54, *((void *)v54 + 1));
      uint64_t v51 = a3;
      *(void *)long long v53 = v56;
      *((void *)v53 + 1) = v55;
    }
    uint64_t v57 = *(int *)(v51 + 48);
    uint64_t v58 = (char *)a1 + v57;
    long long v59 = (char *)a2 + v57;
    uint64_t v60 = sub_1E3E77D00();
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
  }
  return v18;
}

uint64_t destroy for ChannelEntity(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_1E3E78740();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    int v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255) {
      sub_1E3C2B7BC(*(void *)(v4 + 16), *(void *)(v4 + 24), v6);
    }
    int v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 56), v7);
    }
    int v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 72), v8);
    }
    int v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 88), v9);
    }
    int v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 104), v10);
    }
    int v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 120), v11);
    }
    uint64_t v12 = v4 + *(int *)(v5 + 44);
    uint64_t v13 = sub_1E3E78630();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = (uint64_t *)(a1 + a2[11]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_1E3C2B7E8(*v14, v15);
  }
  uint64_t v16 = a1 + a2[12];
  uint64_t v17 = sub_1E3E77D00();
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v16, 1, v17);
  if (!result)
  {
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
    return v19(v16, v17);
  }
  return result;
}

void *initializeWithCopy for ChannelEntity(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  int v6 = (void *)a2[4];
  uint64_t v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  uint64_t v7 = a2[7];
  uint64_t v8 = a3[10];
  __dst = (void *)((char *)a1 + v8);
  int v9 = (void *)((char *)a2 + v8);
  a1[6] = a2[6];
  a1[7] = v7;
  int v10 = (int *)sub_1E3E78740();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v6;
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = v9[1];
    void *__dst = *v9;
    __dst[1] = v15;
    int v16 = *((unsigned __int8 *)v9 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)__dst + 1) = *((_OWORD *)v9 + 1);
      *((unsigned char *)__dst + 32) = *((unsigned char *)v9 + 32);
    }
    else
    {
      uint64_t v17 = v9[2];
      uint64_t v18 = v9[3];
      sub_1E3C2B454(v17, v18, v16);
      __dst[2] = v17;
      __dst[3] = v18;
      *((unsigned char *)__dst + 32) = v16;
    }
    *(_OWORD *)(__dst + 5) = *(_OWORD *)(v9 + 5);
    uint64_t v19 = (id *)(v9 + 7);
    int v20 = *((unsigned __int8 *)v9 + 64);
    if (v20 == 255)
    {
      __dst[7] = *v19;
      *((unsigned char *)__dst + 64) = *((unsigned char *)v9 + 64);
    }
    else
    {
      id v21 = *v19;
      sub_1E3C2B46C(*v19, *((unsigned char *)v9 + 64));
      __dst[7] = v21;
      *((unsigned char *)__dst + 64) = v20;
    }
    uint64_t v22 = (id *)(v9 + 9);
    int v23 = *((unsigned __int8 *)v9 + 80);
    if (v23 == 255)
    {
      __dst[9] = *v22;
      *((unsigned char *)__dst + 80) = *((unsigned char *)v9 + 80);
    }
    else
    {
      id v24 = *v22;
      sub_1E3C2B46C(*v22, *((unsigned char *)v9 + 80));
      __dst[9] = v24;
      *((unsigned char *)__dst + 80) = v23;
    }
    id v25 = (id *)(v9 + 11);
    int v26 = *((unsigned __int8 *)v9 + 96);
    if (v26 == 255)
    {
      __dst[11] = *v25;
      *((unsigned char *)__dst + 96) = *((unsigned char *)v9 + 96);
    }
    else
    {
      id v27 = *v25;
      sub_1E3C2B46C(*v25, *((unsigned char *)v9 + 96));
      __dst[11] = v27;
      *((unsigned char *)__dst + 96) = v26;
    }
    id v28 = (id *)(v9 + 13);
    int v29 = *((unsigned __int8 *)v9 + 112);
    if (v29 == 255)
    {
      __dst[13] = *v28;
      *((unsigned char *)__dst + 112) = *((unsigned char *)v9 + 112);
    }
    else
    {
      id v30 = *v28;
      sub_1E3C2B46C(*v28, *((unsigned char *)v9 + 112));
      __dst[13] = v30;
      *((unsigned char *)__dst + 112) = v29;
    }
    id v31 = (id *)(v9 + 15);
    int v32 = *((unsigned __int8 *)v9 + 128);
    if (v32 == 255)
    {
      __dst[15] = *v31;
      *((unsigned char *)__dst + 128) = *((unsigned char *)v9 + 128);
    }
    else
    {
      id v33 = *v31;
      sub_1E3C2B46C(*v31, *((unsigned char *)v9 + 128));
      __dst[15] = v33;
      *((unsigned char *)__dst + 128) = v32;
    }
    *((unsigned char *)__dst + 129) = *((unsigned char *)v9 + 129);
    uint64_t v34 = v10[11];
    uint64_t v35 = (char *)__dst + v34;
    int v36 = (char *)v9 + v34;
    uint64_t v37 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    uint64_t v38 = v10[12];
    uint64_t v39 = (void *)((char *)__dst + v38);
    uint64_t v40 = (void *)((char *)v9 + v38);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    *((unsigned char *)__dst + v10[13]) = *((unsigned char *)v9 + v10[13]);
    *((unsigned char *)__dst + v10[14]) = *((unsigned char *)v9 + v10[14]);
    *((unsigned char *)__dst + v10[15]) = *((unsigned char *)v9 + v10[15]);
    uint64_t v42 = v10[16];
    uint64_t v43 = (void *)((char *)__dst + v42);
    uint64_t v44 = (void *)((char *)v9 + v42);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(__dst, 0, 1, v10);
  }
  uint64_t v47 = a3[11];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  unint64_t v50 = *((void *)v49 + 1);
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  }
  else
  {
    uint64_t v51 = *(void *)v49;
    sub_1E3C14F74(*(void *)v49, *((void *)v49 + 1));
    *(void *)uint64_t v48 = v51;
    *((void *)v48 + 1) = v50;
  }
  uint64_t v52 = a3[12];
  long long v53 = (char *)a1 + v52;
  long long v54 = (char *)a2 + v52;
  uint64_t v55 = sub_1E3E77D00();
  uint64_t v56 = *(void *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  return a1;
}

void *assignWithCopy for ChannelEntity(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = (void *)a1[4];
  uint64_t v7 = (void *)a2[4];
  a1[4] = v7;
  id v8 = v7;

  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1E3E775E0();
  swift_release();
  a1[7] = a2[7];
  sub_1E3E775E0();
  swift_release();
  uint64_t v9 = a3[10];
  uint64_t v10 = (uint64_t)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)sub_1E3E78740();
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      *(void *)uint64_t v10 = *(void *)v11;
      *(void *)(v10 + 8) = *((void *)v11 + 1);
      int v17 = v11[32];
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        long long v29 = *((_OWORD *)v11 + 1);
        *(unsigned char *)(v10 + 32) = v11[32];
        *(_OWORD *)(v10 + 16) = v29;
      }
      else
      {
        uint64_t v18 = *((void *)v11 + 2);
        uint64_t v19 = *((void *)v11 + 3);
        sub_1E3C2B454(v18, v19, v17);
        *(void *)(v10 + 16) = v18;
        *(void *)(v10 + 24) = v19;
        *(unsigned char *)(v10 + 32) = v17;
      }
      *(void *)(v10 + 40) = *((void *)v11 + 5);
      *(void *)(v10 + 48) = *((void *)v11 + 6);
      id v30 = (id *)(v11 + 56);
      int v31 = v11[64];
      if (v31 == 255)
      {
        id v33 = *v30;
        *(unsigned char *)(v10 + 64) = v11[64];
        *(void *)(v10 + 56) = v33;
      }
      else
      {
        id v32 = *v30;
        sub_1E3C2B46C(*v30, v11[64]);
        *(void *)(v10 + 56) = v32;
        *(unsigned char *)(v10 + 64) = v31;
      }
      uint64_t v34 = (id *)(v11 + 72);
      int v35 = v11[80];
      if (v35 == 255)
      {
        id v37 = *v34;
        *(unsigned char *)(v10 + 80) = v11[80];
        *(void *)(v10 + 72) = v37;
      }
      else
      {
        id v36 = *v34;
        sub_1E3C2B46C(*v34, v11[80]);
        *(void *)(v10 + 72) = v36;
        *(unsigned char *)(v10 + 80) = v35;
      }
      uint64_t v38 = (id *)(v11 + 88);
      int v39 = v11[96];
      if (v39 == 255)
      {
        id v41 = *v38;
        *(unsigned char *)(v10 + 96) = v11[96];
        *(void *)(v10 + 88) = v41;
      }
      else
      {
        id v40 = *v38;
        sub_1E3C2B46C(*v38, v11[96]);
        *(void *)(v10 + 88) = v40;
        *(unsigned char *)(v10 + 96) = v39;
      }
      uint64_t v42 = (id *)(v11 + 104);
      int v43 = v11[112];
      if (v43 == 255)
      {
        id v45 = *v42;
        *(unsigned char *)(v10 + 112) = v11[112];
        *(void *)(v10 + 104) = v45;
      }
      else
      {
        id v44 = *v42;
        sub_1E3C2B46C(*v42, v11[112]);
        *(void *)(v10 + 104) = v44;
        *(unsigned char *)(v10 + 112) = v43;
      }
      uint64_t v46 = (id *)(v11 + 120);
      int v47 = v11[128];
      if (v47 == 255)
      {
        id v49 = *v46;
        *(unsigned char *)(v10 + 128) = v11[128];
        *(void *)(v10 + 120) = v49;
      }
      else
      {
        id v48 = *v46;
        sub_1E3C2B46C(*v46, v11[128]);
        *(void *)(v10 + 120) = v48;
        *(unsigned char *)(v10 + 128) = v47;
      }
      *(unsigned char *)(v10 + 129) = v11[129];
      uint64_t v50 = v12[11];
      uint64_t v51 = v10 + v50;
      uint64_t v52 = &v11[v50];
      uint64_t v53 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v12[12];
      uint64_t v55 = (void *)(v10 + v54);
      uint64_t v56 = &v11[v54];
      *uint64_t v55 = *(void *)v56;
      v55[1] = *((void *)v56 + 1);
      *(unsigned char *)(v10 + v12[13]) = v11[v12[13]];
      *(unsigned char *)(v10 + v12[14]) = v11[v12[14]];
      *(unsigned char *)(v10 + v12[15]) = v11[v12[15]];
      uint64_t v57 = v12[16];
      uint64_t v58 = (void *)(v10 + v57);
      long long v59 = &v11[v57];
      *uint64_t v58 = *(void *)v59;
      v58[1] = *((void *)v59 + 1);
      uint64_t v60 = *(void (**)(uint64_t, void, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60(v10, 0, 1, v12);
      goto LABEL_68;
    }
LABEL_7:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_68;
  }
  if (v16)
  {
    sub_1E3DEA838(v10, MEMORY[0x1E4F915F0]);
    goto LABEL_7;
  }
  *(void *)uint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v21 = (long long *)(v10 + 16);
  uint64_t v22 = (long long *)(v11 + 16);
  int v23 = v11[32];
  if (*(unsigned __int8 *)(v10 + 32) == 255)
  {
    if (v23 == 255)
    {
      long long v64 = *v22;
      *(unsigned char *)(v10 + 32) = v11[32];
      *id v21 = v64;
    }
    else
    {
      uint64_t v61 = *((void *)v11 + 2);
      uint64_t v62 = *((void *)v11 + 3);
      sub_1E3C2B454(v61, v62, v11[32]);
      *(void *)(v10 + 16) = v61;
      *(void *)(v10 + 24) = v62;
      *(unsigned char *)(v10 + 32) = v23;
    }
  }
  else if (v23 == 255)
  {
    sub_1E3C2CB50(v10 + 16);
    char v63 = v11[32];
    *id v21 = *v22;
    *(unsigned char *)(v10 + 32) = v63;
  }
  else
  {
    uint64_t v24 = *((void *)v11 + 2);
    uint64_t v25 = *((void *)v11 + 3);
    sub_1E3C2B454(v24, v25, v11[32]);
    uint64_t v26 = *(void *)(v10 + 16);
    uint64_t v27 = *(void *)(v10 + 24);
    *(void *)(v10 + 16) = v24;
    *(void *)(v10 + 24) = v25;
    unsigned __int8 v28 = *(unsigned char *)(v10 + 32);
    *(unsigned char *)(v10 + 32) = v23;
    sub_1E3C2B7BC(v26, v27, v28);
  }
  *(void *)(v10 + 40) = *((void *)v11 + 5);
  *(void *)(v10 + 48) = *((void *)v11 + 6);
  long long v65 = (id *)(v10 + 56);
  long long v66 = (id *)(v11 + 56);
  int v67 = v11[64];
  if (*(unsigned __int8 *)(v10 + 64) == 255)
  {
    if (v67 == 255)
    {
      id v73 = *v66;
      *(unsigned char *)(v10 + 64) = v11[64];
      *long long v65 = v73;
    }
    else
    {
      id v71 = *v66;
      sub_1E3C2B46C(*v66, v11[64]);
      *(void *)(v10 + 56) = v71;
      *(unsigned char *)(v10 + 64) = v67;
    }
  }
  else if (v67 == 255)
  {
    sub_1E3C2CBA4(v10 + 56);
    char v72 = v11[64];
    *long long v65 = *v66;
    *(unsigned char *)(v10 + 64) = v72;
  }
  else
  {
    id v68 = *v66;
    sub_1E3C2B46C(*v66, v11[64]);
    uint64_t v69 = *(void **)(v10 + 56);
    *(void *)(v10 + 56) = v68;
    char v70 = *(unsigned char *)(v10 + 64);
    *(unsigned char *)(v10 + 64) = v67;
    sub_1E3C2B7D4(v69, v70);
  }
  uint64_t v74 = (id *)(v10 + 72);
  char v75 = (id *)(v11 + 72);
  int v76 = v11[80];
  if (*(unsigned __int8 *)(v10 + 80) == 255)
  {
    if (v76 == 255)
    {
      id v82 = *v75;
      *(unsigned char *)(v10 + 80) = v11[80];
      id *v74 = v82;
    }
    else
    {
      id v80 = *v75;
      sub_1E3C2B46C(*v75, v11[80]);
      *(void *)(v10 + 72) = v80;
      *(unsigned char *)(v10 + 80) = v76;
    }
  }
  else if (v76 == 255)
  {
    sub_1E3C2CBA4(v10 + 72);
    char v81 = v11[80];
    id *v74 = *v75;
    *(unsigned char *)(v10 + 80) = v81;
  }
  else
  {
    id v77 = *v75;
    sub_1E3C2B46C(*v75, v11[80]);
    long long v78 = *(void **)(v10 + 72);
    *(void *)(v10 + 72) = v77;
    char v79 = *(unsigned char *)(v10 + 80);
    *(unsigned char *)(v10 + 80) = v76;
    sub_1E3C2B7D4(v78, v79);
  }
  long long v83 = (id *)(v10 + 88);
  long long v84 = (id *)(v11 + 88);
  int v85 = v11[96];
  if (*(unsigned __int8 *)(v10 + 96) == 255)
  {
    if (v85 == 255)
    {
      id v91 = *v84;
      *(unsigned char *)(v10 + 96) = v11[96];
      *long long v83 = v91;
    }
    else
    {
      id v89 = *v84;
      sub_1E3C2B46C(*v84, v11[96]);
      *(void *)(v10 + 88) = v89;
      *(unsigned char *)(v10 + 96) = v85;
    }
  }
  else if (v85 == 255)
  {
    sub_1E3C2CBA4(v10 + 88);
    char v90 = v11[96];
    *long long v83 = *v84;
    *(unsigned char *)(v10 + 96) = v90;
  }
  else
  {
    id v86 = *v84;
    sub_1E3C2B46C(*v84, v11[96]);
    uint64_t v87 = *(void **)(v10 + 88);
    *(void *)(v10 + 88) = v86;
    char v88 = *(unsigned char *)(v10 + 96);
    *(unsigned char *)(v10 + 96) = v85;
    sub_1E3C2B7D4(v87, v88);
  }
  uint64_t v92 = (id *)(v10 + 104);
  uint64_t v93 = (id *)(v11 + 104);
  int v94 = v11[112];
  if (*(unsigned __int8 *)(v10 + 112) == 255)
  {
    if (v94 == 255)
    {
      id v100 = *v93;
      *(unsigned char *)(v10 + 112) = v11[112];
      *uint64_t v92 = v100;
    }
    else
    {
      id v98 = *v93;
      sub_1E3C2B46C(*v93, v11[112]);
      *(void *)(v10 + 104) = v98;
      *(unsigned char *)(v10 + 112) = v94;
    }
  }
  else if (v94 == 255)
  {
    sub_1E3C2CBA4(v10 + 104);
    char v99 = v11[112];
    *uint64_t v92 = *v93;
    *(unsigned char *)(v10 + 112) = v99;
  }
  else
  {
    id v95 = *v93;
    sub_1E3C2B46C(*v93, v11[112]);
    long long v96 = *(void **)(v10 + 104);
    *(void *)(v10 + 104) = v95;
    char v97 = *(unsigned char *)(v10 + 112);
    *(unsigned char *)(v10 + 112) = v94;
    sub_1E3C2B7D4(v96, v97);
  }
  long long v101 = (id *)(v10 + 120);
  long long v102 = (id *)(v11 + 120);
  int v103 = v11[128];
  if (*(unsigned __int8 *)(v10 + 128) == 255)
  {
    if (v103 == 255)
    {
      id v109 = *v102;
      *(unsigned char *)(v10 + 128) = v11[128];
      *long long v101 = v109;
    }
    else
    {
      id v107 = *v102;
      sub_1E3C2B46C(*v102, v11[128]);
      *(void *)(v10 + 120) = v107;
      *(unsigned char *)(v10 + 128) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_1E3C2CBA4(v10 + 120);
    char v108 = v11[128];
    *long long v101 = *v102;
    *(unsigned char *)(v10 + 128) = v108;
  }
  else
  {
    id v104 = *v102;
    sub_1E3C2B46C(*v102, v11[128]);
    uint64_t v105 = *(void **)(v10 + 120);
    *(void *)(v10 + 120) = v104;
    char v106 = *(unsigned char *)(v10 + 128);
    *(unsigned char *)(v10 + 128) = v103;
    sub_1E3C2B7D4(v105, v106);
  }
  *(unsigned char *)(v10 + 129) = v11[129];
  uint64_t v110 = v12[11];
  uint64_t v111 = v10 + v110;
  uint64_t v112 = &v11[v110];
  uint64_t v113 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v113 - 8) + 24))(v111, v112, v113);
  uint64_t v114 = v12[12];
  uint64_t v115 = (void *)(v10 + v114);
  uint64_t v116 = &v11[v114];
  void *v115 = *(void *)v116;
  v115[1] = *((void *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + v12[13]) = v11[v12[13]];
  *(unsigned char *)(v10 + v12[14]) = v11[v12[14]];
  *(unsigned char *)(v10 + v12[15]) = v11[v12[15]];
  uint64_t v117 = v12[16];
  uint64_t v118 = (void *)(v10 + v117);
  uint64_t v119 = &v11[v117];
  void *v118 = *(void *)v119;
  v118[1] = *((void *)v119 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  uint64_t v120 = a3[11];
  uint64_t v121 = (void *)((char *)a1 + v120);
  uint64_t v122 = (void *)((char *)a2 + v120);
  unint64_t v123 = *(void *)((char *)a2 + v120 + 8);
  if (*(void *)((char *)a1 + v120 + 8) >> 60 == 15)
  {
    if (v123 >> 60 != 15)
    {
      uint64_t v124 = *v122;
      sub_1E3C14F74(v124, v123);
      *uint64_t v121 = v124;
      v121[1] = v123;
      goto LABEL_75;
    }
    goto LABEL_73;
  }
  if (v123 >> 60 == 15)
  {
    sub_1E3C2CC54((uint64_t)v121);
LABEL_73:
    *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
    goto LABEL_75;
  }
  uint64_t v125 = *v122;
  sub_1E3C14F74(v125, v123);
  uint64_t v126 = *v121;
  unint64_t v127 = v121[1];
  *uint64_t v121 = v125;
  v121[1] = v123;
  sub_1E3C2B7E8(v126, v127);
LABEL_75:
  uint64_t v128 = a3[12];
  uint64_t v129 = (char *)a1 + v128;
  uint64_t v130 = (char *)a2 + v128;
  uint64_t v131 = sub_1E3E77D00();
  uint64_t v132 = *(void *)(v131 - 8);
  uint64_t v133 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v132 + 48);
  int v134 = v133(v129, 1, v131);
  int v135 = v133(v130, 1, v131);
  if (!v134)
  {
    if (!v135)
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 24))(v129, v130, v131);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v132 + 8))(v129, v131);
    goto LABEL_80;
  }
  if (v135)
  {
LABEL_80:
    uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v129, v130, *(void *)(*(void *)(v136 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v129, v130, v131);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
  return a1;
}

uint64_t initializeWithTake for ChannelEntity(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v8 = a3[10];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  uint64_t v11 = (int *)sub_1E3E78740();
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    long long v14 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v14;
    *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
    *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
    *((void *)v9 + 7) = *((void *)v10 + 7);
    *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
    *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
    *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
    *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
    *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
    *((unsigned char *)v9 + 129) = *((unsigned char *)v10 + 129);
    uint64_t v15 = v11[11];
    int v16 = (char *)v9 + v15;
    int v17 = (char *)v10 + v15;
    uint64_t v18 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
    *((unsigned char *)v9 + v11[13]) = *((unsigned char *)v10 + v11[13]);
    *((unsigned char *)v9 + v11[14]) = *((unsigned char *)v10 + v11[14]);
    *((unsigned char *)v9 + v11[15]) = *((unsigned char *)v10 + v11[15]);
    *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v19 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v20 = (void *)(a1 + v19);
  id v21 = (const void *)(a2 + v19);
  uint64_t v22 = sub_1E3E77D00();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

void *assignWithTake for ChannelEntity(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_release();
  a1[7] = a2[7];
  swift_release();
  uint64_t v10 = a3[10];
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)sub_1E3E78740();
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15((uint64_t)v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      long long v18 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_OWORD *)(v11 + 16) = v18;
      *(unsigned char *)(v11 + 32) = v12[32];
      *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
      *(void *)(v11 + 56) = *((void *)v12 + 7);
      *(unsigned char *)(v11 + 64) = v12[64];
      *(_OWORD *)(v11 + 113) = *(_OWORD *)(v12 + 113);
      *(_OWORD *)(v11 + 104) = *(_OWORD *)(v12 + 104);
      *(_OWORD *)(v11 + 88) = *(_OWORD *)(v12 + 88);
      *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
      *(unsigned char *)(v11 + 129) = v12[129];
      uint64_t v19 = v13[11];
      uint64_t v20 = v11 + v19;
      id v21 = &v12[v19];
      uint64_t v22 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      *(_OWORD *)(v11 + v13[12]) = *(_OWORD *)&v12[v13[12]];
      *(unsigned char *)(v11 + v13[13]) = v12[v13[13]];
      *(unsigned char *)(v11 + v13[14]) = v12[v13[14]];
      *(unsigned char *)(v11 + v13[15]) = v12[v13[15]];
      *(_OWORD *)(v11 + v13[16]) = *(_OWORD *)&v12[v13[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1E3DEA838(v11, MEMORY[0x1E4F915F0]);
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v11, v12, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v40 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v40;
  swift_bridgeObjectRelease();
  id v41 = v12 + 16;
  int v42 = *(unsigned __int8 *)(v11 + 32);
  if (v42 != 255)
  {
    int v43 = v12[32];
    if (v43 != 255)
    {
      uint64_t v44 = *(void *)(v11 + 16);
      uint64_t v45 = *(void *)(v11 + 24);
      *(_OWORD *)(v11 + 16) = *v41;
      *(unsigned char *)(v11 + 32) = v43;
      sub_1E3C2B7BC(v44, v45, v42);
      goto LABEL_25;
    }
    sub_1E3C2CB50(v11 + 16);
  }
  *(_OWORD *)(v11 + 16) = *v41;
  *(unsigned char *)(v11 + 32) = v12[32];
LABEL_25:
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
  uint64_t v46 = v12 + 56;
  int v47 = *(unsigned __int8 *)(v11 + 64);
  if (v47 != 255)
  {
    int v48 = v12[64];
    if (v48 != 255)
    {
      id v49 = *(void **)(v11 + 56);
      *(void *)(v11 + 56) = *v46;
      *(unsigned char *)(v11 + 64) = v48;
      sub_1E3C2B7D4(v49, v47);
      goto LABEL_30;
    }
    sub_1E3C2CBA4(v11 + 56);
  }
  *(void *)(v11 + 56) = *v46;
  *(unsigned char *)(v11 + 64) = v12[64];
LABEL_30:
  uint64_t v50 = v12 + 72;
  int v51 = *(unsigned __int8 *)(v11 + 80);
  if (v51 != 255)
  {
    int v52 = v12[80];
    if (v52 != 255)
    {
      uint64_t v53 = *(void **)(v11 + 72);
      *(void *)(v11 + 72) = *v50;
      *(unsigned char *)(v11 + 80) = v52;
      sub_1E3C2B7D4(v53, v51);
      goto LABEL_35;
    }
    sub_1E3C2CBA4(v11 + 72);
  }
  *(void *)(v11 + 72) = *v50;
  *(unsigned char *)(v11 + 80) = v12[80];
LABEL_35:
  uint64_t v54 = v12 + 88;
  int v55 = *(unsigned __int8 *)(v11 + 96);
  if (v55 != 255)
  {
    int v56 = v12[96];
    if (v56 != 255)
    {
      uint64_t v57 = *(void **)(v11 + 88);
      *(void *)(v11 + 88) = *v54;
      *(unsigned char *)(v11 + 96) = v56;
      sub_1E3C2B7D4(v57, v55);
      goto LABEL_40;
    }
    sub_1E3C2CBA4(v11 + 88);
  }
  *(void *)(v11 + 88) = *v54;
  *(unsigned char *)(v11 + 96) = v12[96];
LABEL_40:
  uint64_t v58 = v12 + 104;
  int v59 = *(unsigned __int8 *)(v11 + 112);
  if (v59 != 255)
  {
    int v60 = v12[112];
    if (v60 != 255)
    {
      uint64_t v61 = *(void **)(v11 + 104);
      *(void *)(v11 + 104) = *v58;
      *(unsigned char *)(v11 + 112) = v60;
      sub_1E3C2B7D4(v61, v59);
      goto LABEL_45;
    }
    sub_1E3C2CBA4(v11 + 104);
  }
  *(void *)(v11 + 104) = *v58;
  *(unsigned char *)(v11 + 112) = v12[112];
LABEL_45:
  uint64_t v62 = v12 + 120;
  int v63 = *(unsigned __int8 *)(v11 + 128);
  if (v63 == 255)
  {
LABEL_49:
    *(void *)(v11 + 120) = *v62;
    *(unsigned char *)(v11 + 128) = v12[128];
    goto LABEL_50;
  }
  int v64 = v12[128];
  if (v64 == 255)
  {
    sub_1E3C2CBA4(v11 + 120);
    goto LABEL_49;
  }
  long long v65 = *(void **)(v11 + 120);
  *(void *)(v11 + 120) = *v62;
  *(unsigned char *)(v11 + 128) = v64;
  sub_1E3C2B7D4(v65, v63);
LABEL_50:
  *(unsigned char *)(v11 + 129) = v12[129];
  uint64_t v66 = v13[11];
  uint64_t v67 = v11 + v66;
  id v68 = &v12[v66];
  uint64_t v69 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
  uint64_t v70 = v13[12];
  id v71 = (void *)(v11 + v70);
  char v72 = &v12[v70];
  uint64_t v74 = *(void *)v72;
  uint64_t v73 = *((void *)v72 + 1);
  void *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + v13[13]) = v12[v13[13]];
  *(unsigned char *)(v11 + v13[14]) = v12[v13[14]];
  *(unsigned char *)(v11 + v13[15]) = v12[v13[15]];
  uint64_t v75 = v13[16];
  int v76 = (void *)(v11 + v75);
  id v77 = &v12[v75];
  uint64_t v79 = *(void *)v77;
  uint64_t v78 = *((void *)v77 + 1);
  *int v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v24 = a3[11];
  uint64_t v25 = (uint64_t)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  unint64_t v27 = *(void *)((char *)a1 + v24 + 8);
  if (v27 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    goto LABEL_12;
  }
  unint64_t v28 = *((void *)v26 + 1);
  if (v28 >> 60 == 15)
  {
    sub_1E3C2CC54(v25);
    goto LABEL_10;
  }
  uint64_t v29 = *(void *)v25;
  *(void *)uint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = v28;
  sub_1E3C2B7E8(v29, v27);
LABEL_12:
  uint64_t v30 = a3[12];
  int v31 = (char *)a1 + v30;
  id v32 = (char *)a2 + v30;
  uint64_t v33 = sub_1E3E77D00();
  uint64_t v34 = *(void *)(v33 - 8);
  int v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_17;
  }
  if (v37)
  {
LABEL_17:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DEA3E8);
}

uint64_t sub_1E3DEA3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 40);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 48);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ChannelEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DEA530);
}

uint64_t sub_1E3DEA530(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 40);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1E3DEA664()
{
  sub_1E3DEA7A8(319, (unint64_t *)&qword_1EBFE4248, MEMORY[0x1E4F915F0]);
  if (v0 <= 0x3F)
  {
    sub_1E3DEA7A8(319, (unint64_t *)&qword_1EBFE0808, MEMORY[0x1E4F276F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1E3DEA7A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E3E7DB90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E3DEA7FC()
{
  return sub_1E3C10DE8(&qword_1EAE29088, &qword_1EAE29090);
}

uint64_t sub_1E3DEA838(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t UpdateEpisodeDownloadBehavior.init(contentIDs:newBehavior:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t static UpdateEpisodeDownloadBehavior.kind.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t UpdateEpisodeDownloadBehavior.contentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UpdateEpisodeDownloadBehavior.newBehavior.getter()
{
  return *(void *)(v0 + 8);
}

void sub_1E3DEA8CC(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x80000001E3E94330;
}

void *initializeBufferWithCopyOfBuffer for UpdateEpisodeDownloadBehavior(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for UpdateEpisodeDownloadBehavior()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for UpdateEpisodeDownloadBehavior(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for UpdateEpisodeDownloadBehavior(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for UpdateEpisodeDownloadBehavior()
{
  return &type metadata for UpdateEpisodeDownloadBehavior;
}

uint64_t BaseObjectGraph.addingMetricsFieldsContext(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7C2F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E7BA50();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v5, a1, v2, v8);
  sub_1E3E7BA40();
  uint64_t v11 = sub_1E3E7BE50();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v11;
}

uint64_t BaseObjectGraph.transformingMetricsFieldsContext(with:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t v2 = sub_1E3E7BA50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  MEMORY[0x1F4188790](v6 - 8);
  double v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E7C2F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v18 - v14;
  sub_1E3E7BE00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1E3E7C2E0();
    sub_1E3DEADE0((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  }
  v19(v15);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_1E3E7BA40();
  uint64_t v16 = sub_1E3E7BE50();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v16;
}

uint64_t sub_1E3DEADE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BaseObjectGraph.addingClickLocationTracker(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7C2F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v24 = sub_1E3E7BA50();
  uint64_t v11 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v14 = a1;
  }
  else
  {
    type metadata accessor for ClickLocationTracker();
    uint64_t v14 = swift_allocObject();
    unint64_t v15 = sub_1E3C80580(MEMORY[0x1E4FBC860]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B48);
    uint64_t v16 = swift_allocObject();
    *(_DWORD *)(v16 + 24) = 0;
    *(void *)(v16 + 16) = v15;
    *(void *)(v14 + 16) = v16;
  }
  type metadata accessor for ClickLocationTracker();
  uint64_t v25 = v14;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E7BA40();
  sub_1E3E7BE50();
  uint64_t v17 = v11 + 8;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v22 = v17;
  v18(v13, v24);
  sub_1E3E775E0();
  sub_1E3E7BE00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1E3E7C2E0();
    sub_1E3DEADE0((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  }
  uint64_t v25 = v14;
  if (qword_1EBFE4888 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48B8);
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBFE4870);
  sub_1E3E7C2D0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v23, v10, v5);
  sub_1E3E7BA40();
  uint64_t v20 = sub_1E3E7BE50();
  v18(v13, v24);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  swift_release();
  swift_release_n();
  return v20;
}

uint64_t BaseObjectGraph.addingChildClickLocation(_:)(uint64_t a1)
{
  return sub_1E3DEB24C(a1, (void (*)(void *))MetricsFieldsContext.addChildClickLocation(_:));
}

uint64_t BaseObjectGraph.addingSiblingClickLocation(_:)(uint64_t a1)
{
  return sub_1E3DEB24C(a1, (void (*)(void *))MetricsFieldsContext.addSiblingClickLocation(_:));
}

uint64_t BaseObjectGraph.replacingClickLocation(with:)(uint64_t a1)
{
  return sub_1E3DEB24C(a1, (void (*)(void *))MetricsFieldsContext.replacingClickLocation(with:));
}

uint64_t sub_1E3DEB24C(uint64_t a1, void (*a2)(void *))
{
  uint64_t v22 = a2;
  uint64_t v23 = sub_1E3E7BA50();
  uint64_t v3 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E7C2F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 56);
  v24[0] = *(void *)a1;
  v24[1] = v16;
  uint64_t v24[2] = v17;
  long long v25 = *(_OWORD *)(a1 + 24);
  long long v26 = *(_OWORD *)(a1 + 40);
  uint64_t v27 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1E3E7BE00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1E3E7C2E0();
    sub_1E3DEADE0((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  }
  v22(v24);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_1E3E7BA40();
  uint64_t v19 = sub_1E3E7BE50();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t BaseObjectGraph.addingImpressionsTracker(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48C0);
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  MEMORY[0x1F4188790](v2);
  long long v26 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v22 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E7C2F0();
  uint64_t v21 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v25 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = sub_1E3E7BA50();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7C5D0();
  uint64_t v29 = a1;
  sub_1E3E775E0();
  sub_1E3E7BA40();
  sub_1E3E7BE50();
  unint64_t v15 = *(void (**)(char *, uint64_t))(v12 + 8);
  v15(v14, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4868);
  uint64_t v29 = a1;
  uint64_t v30 = MEMORY[0x1E4F715B0];
  swift_retain_n();
  sub_1E3E7BA40();
  sub_1E3E7BE50();
  uint64_t v23 = v15;
  uint64_t v24 = v11;
  v15(v14, v11);
  uint64_t v16 = v21;
  swift_release();
  swift_release();
  sub_1E3E775E0();
  uint64_t v17 = (uint64_t)v22;
  sub_1E3E7BE00();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v6) == 1)
  {
    sub_1E3E7C2E0();
    sub_1E3DEADE0(v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v10, v17, v6);
  }
  uint64_t v29 = a1;
  uint64_t v30 = MEMORY[0x1E4F715B0];
  sub_1E3E775E0();
  uint64_t v18 = v26;
  sub_1E3E7C2B0();
  sub_1E3E7C2D0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v28);
  swift_unknownObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v10, v6);
  sub_1E3E7BA40();
  uint64_t v19 = sub_1E3E7BE50();
  v23(v14, v24);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v6);
  swift_release();
  swift_release();
  return v19;
}

uint64_t BaseObjectGraph.addingImpressionsTracker(with:)(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48C0);
  uint64_t v34 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v33 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  MEMORY[0x1F4188790](v3 - 8);
  int v31 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7C2F0();
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int v37 = (char *)&v29 - v8;
  uint64_t v36 = sub_1E3E7BA50();
  uint64_t v9 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E7C5A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v29 - v17;
  sub_1E3E7C5D0();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v19(v18, v30, v12);
  v19(v15, (uint64_t)v18, v12);
  uint64_t v20 = v29;
  uint64_t v21 = sub_1E3E7C5E0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  uint64_t v38 = v21;
  sub_1E3E775E0();
  sub_1E3E7BA40();
  sub_1E3E7BE50();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v23 = v36;
  v22(v11, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4868);
  uint64_t v38 = v21;
  uint64_t v39 = MEMORY[0x1E4F715B0];
  swift_retain_n();
  sub_1E3E7BA40();
  sub_1E3E7BE50();
  v22(v11, v23);
  swift_release();
  uint64_t v24 = (uint64_t)v31;
  sub_1E3E7BE00();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v24, 1, v5) == 1)
  {
    sub_1E3E7C2E0();
    sub_1E3DEADE0(v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v37, v24, v5);
  }
  uint64_t v38 = v21;
  uint64_t v39 = MEMORY[0x1E4F715B0];
  sub_1E3E775E0();
  long long v25 = v33;
  sub_1E3E7C2B0();
  long long v26 = v37;
  sub_1E3E7C2D0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v35);
  swift_unknownObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v32, v26, v5);
  sub_1E3E7BA40();
  uint64_t v27 = sub_1E3E7BE50();
  v22(v11, v36);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v5);
  swift_release();
  swift_release_n();
  return v27;
}

uint64_t BaseObjectGraph.addingImpressionsCalculator(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7BA50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicImpressionsCalculator();
  v8[1] = a1;
  sub_1E3E775E0();
  sub_1E3E7BA40();
  uint64_t v6 = sub_1E3E7BE50();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t BaseObjectGraph.addingImpressionsCalculator(with:)(uint64_t a1)
{
  uint64_t v61 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48C0);
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v58 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v57 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E7C2F0();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = (char *)&v51 - v10;
  uint64_t v11 = sub_1E3E7C5A0();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = sub_1E3E7BA50();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v63 = v17;
  uint64_t v64 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1E3E7C350();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7C5D0();
  uint64_t v62 = v1;
  sub_1E3E7BE00();
  uint64_t v25 = v65;
  if (v65)
  {
    type metadata accessor for DynamicImpressionsCalculator();
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v61, v21);
    long long v26 = self;
    sub_1E3E775E0();
    id v27 = objc_msgSend(v26, sel_defaultCenter);
    uint64_t v28 = sub_1E3D5B4C4((uint64_t)v24, v25, v27);
    swift_release();

    uint64_t v65 = v28;
    sub_1E3E775E0();
    sub_1E3E7BA40();
    uint64_t v29 = sub_1E3E7BE50();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v20, v63);
  }
  else
  {
    int v51 = v8;
    sub_1E3E7C590();
    uint64_t v31 = v52;
    uint64_t v30 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v13, v16, v53);
    uint64_t v32 = sub_1E3E7C5E0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v61, v21);
    uint64_t v33 = self;
    sub_1E3E775E0();
    id v34 = objc_msgSend(v33, sel_defaultCenter);
    uint64_t v61 = sub_1E3D5B4C4((uint64_t)v24, v32, v34);
    swift_release();

    uint64_t v65 = v32;
    sub_1E3E775E0();
    sub_1E3E7BA40();
    sub_1E3E7BE50();
    uint64_t v35 = v63;
    uint64_t v37 = v64 + 8;
    uint64_t v36 = *(void (**)(char *, uint64_t))(v64 + 8);
    v36(v20, v63);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4868);
    uint64_t v65 = v32;
    uint64_t v66 = MEMORY[0x1E4F715B0];
    swift_retain_n();
    sub_1E3E7BA40();
    uint64_t v38 = sub_1E3E7BE50();
    uint64_t v62 = v36;
    v36(v20, v35);
    swift_release();
    uint64_t v40 = v56;
    uint64_t v39 = (uint64_t)v57;
    uint64_t v53 = v38;
    sub_1E3E7BE00();
    uint64_t v41 = v55;
    int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v39, 1, v40);
    uint64_t v43 = v37;
    uint64_t v44 = v40;
    uint64_t v45 = v58;
    uint64_t v46 = v54;
    if (v42 == 1)
    {
      sub_1E3E7C2E0();
      sub_1E3DEADE0(v39);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v54, v39, v44);
    }
    uint64_t v47 = type metadata accessor for DynamicImpressionsCalculator();
    uint64_t v64 = v43;
    uint64_t v65 = v32;
    uint64_t v57 = (char *)v47;
    uint64_t v66 = MEMORY[0x1E4F715B0];
    sub_1E3E775E0();
    sub_1E3E7C2B0();
    sub_1E3E7C2D0();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v60);
    swift_unknownObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v51, v46, v44);
    sub_1E3E7BA40();
    sub_1E3E7BE50();
    id v49 = v62;
    uint64_t v48 = v63;
    v62(v20, v63);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v46, v44);
    swift_release();
    swift_release();
    uint64_t v65 = v61;
    sub_1E3E775E0();
    sub_1E3E7BA40();
    uint64_t v29 = sub_1E3E7BE50();
    v49(v20, v48);
    swift_release();
  }
  swift_release();
  swift_release();
  return v29;
}

uint64_t BaseObjectGraph.addingPageContextTracker(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7C2F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v19 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v20 = sub_1E3E7BA50();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v14 = a1;
  }
  else
  {
    sub_1E3E79690();
    uint64_t v14 = sub_1E3E79670();
  }
  sub_1E3E79690();
  uint64_t v21 = v14;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E7BA40();
  sub_1E3E7BE50();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v20);
  sub_1E3E775E0();
  sub_1E3E7BE00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1E3E7C2E0();
    sub_1E3DEADE0((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  }
  uint64_t v21 = v14;
  if (qword_1EBFE2D18 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D20);
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBFE2ED8);
  sub_1E3E7C2D0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v19, v10, v5);
  sub_1E3E7BA40();
  uint64_t v16 = sub_1E3E7BE50();
  v18(v13, v20);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  swift_release();
  swift_release_n();
  return v16;
}

uint64_t BaseObjectGraph.addingSearchFiltersTracker(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48D0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7C2F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v22 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v23 = sub_1E3E7BA50();
  uint64_t v11 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v14 = a1;
  }
  else
  {
    type metadata accessor for SearchFiltersTracker();
    uint64_t v14 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DB0);
    uint64_t v15 = swift_allocObject();
    *(_DWORD *)(v15 + 36) = 0;
    *(void *)(v15 + 16) = 0;
    *(void *)(v15 + 24) = 0;
    *(unsigned char *)(v15 + 32) = 2;
    *(void *)(v14 + 16) = v15;
  }
  type metadata accessor for SearchFiltersTracker();
  uint64_t v24 = v14;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E7BA40();
  sub_1E3E7BE50();
  uint64_t v16 = v11 + 8;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v21 = v16;
  v17(v13, v23);
  sub_1E3E775E0();
  sub_1E3E7BE00();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1E3E7C2E0();
    sub_1E3DEADE0((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  }
  uint64_t v24 = v14;
  if (qword_1EBFE5CF0 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5CF8);
  __swift_project_value_buffer(v18, (uint64_t)qword_1EBFE5CD8);
  sub_1E3E7C2D0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v10, v5);
  sub_1E3E7BA40();
  uint64_t v19 = sub_1E3E7BE50();
  v17(v13, v23);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  swift_release();
  swift_release_n();
  return v19;
}

ValueMetadata *type metadata accessor for QueryError()
{
  return &type metadata for QueryError;
}

uint64_t StationEntity.StationEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  *a1 = result;
  return result;
}

uint64_t StationEntity.StationEntityQuery.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t StationEntity.StationEntityQuery.objectGraph.setter()
{
  return swift_release();
}

void (*StationEntity.StationEntityQuery.objectGraph.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34D58;
}

uint64_t StationEntity.StationEntityQuery.$objectGraph.getter()
{
  return sub_1E3E77310();
}

id StationEntity.StationEntityQuery.predicate(forUuids:)()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1E3E7D300();
  id v2 = objc_msgSend(v0, sel_predicateForStationsWithUUIDs_, v1);

  return v2;
}

uint64_t StationEntity.StationEntityQuery.suggestedEntities()()
{
  uint64_t v2 = sub_1E3E7D8E0();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_1E3E7D1E0();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v0;
  v1[10] = v4;
  v1[11] = v5;
  return MEMORY[0x1F4188298](sub_1E3DED1F4, 0, 0);
}

uint64_t sub_1E3DED1F4()
{
  sub_1E3E775E0();
  sub_1E3E772F0();
  swift_release();
  v0[12] = v0[3];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3DED2DC;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3DED2DC()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3DED990;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3DED3F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3DED3F8()
{
  v0[15] = v0[2];
  uint64_t ObjectType = swift_getObjectType();
  sub_1E3C17C5C();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3DED4C0;
  uint64_t v3 = v0[10];
  return MEMORY[0x1F4145A40](v3, ObjectType);
}

uint64_t sub_1E3DED4C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1E3DED63C, 0, 0);
}

uint64_t sub_1E3DED63C()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = swift_allocObject();
  v0[18] = v5;
  *(void *)(v5 + 16) = v1;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4F1BD78], v4);
  id v6 = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[19] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE290D0);
  *uint64_t v7 = v0;
  v7[1] = sub_1E3DED770;
  uint64_t v9 = v0[7];
  return MEMORY[0x1F40D7080](v0 + 4, v9, sub_1E3DEDE40, v5, v8);
}

uint64_t sub_1E3DED770()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1E3DEDA08;
  }
  else {
    uint64_t v5 = sub_1E3DED904;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3DED904()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3DED990()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DEDA08()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1E3DEDA80(uint64_t *a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = type metadata accessor for StationEntity();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (void *)((char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E7CD30();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v6 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E3E8A550;
  sub_1E3E7CD30();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v10 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 1);

  *(void *)(v8 + 32) = v11;
  uint64_t v26 = v8;
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EAE292D0);
  uint64_t v12 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v12);

  sub_1E3C12B10(0, (unint64_t *)&unk_1EAE29190);
  id v13 = v25;
  unint64_t v14 = sub_1E3E7D900();
  if (v13)
  {

    return;
  }
  unint64_t v15 = v14;
  if (!(v14 >> 62))
  {
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v17 = v24;
    if (v16) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();

    *uint64_t v17 = MEMORY[0x1E4FBC860];
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  uint64_t v17 = v24;
  if (!v16) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1E3CC78B0(0, v16 & ~(v16 >> 63), 0);
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v23[1] = 0;
    id v25 = v7;
    uint64_t v18 = 0;
    uint64_t v19 = v26;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x1E4E77720](v18, v15);
      }
      else {
        id v20 = *(id *)(v15 + 8 * v18 + 32);
      }
      StationEntity.init(model:)(v20, v4);
      uint64_t v26 = v19;
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1E3CC78B0(v21 > 1, v22 + 1, 1);
        uint64_t v19 = v26;
      }
      ++v18;
      *(void *)(v19 + 16) = v22 + 1;
      sub_1E3D0B3F8((uint64_t)v4, v19+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v22);
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();

    *uint64_t v24 = v19;
  }
}

uint64_t sub_1E3DEDE08()
{
  return swift_deallocObject();
}

void sub_1E3DEDE40(uint64_t *a1@<X8>)
{
}

uint64_t StationEntity.StationEntityQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  void v3[3] = a1;
  v3[4] = a2;
  v3[2] = *v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[5] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1E3DEDEF8;
  return StationEntity.StationEntityQuery.suggestedEntities()();
}

uint64_t sub_1E3DEDEF8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1E3DEE110;
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    id v5 = sub_1E3DEE020;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3DEE020()
{
  uint64_t v10 = v0;
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  swift_bridgeObjectRetain();
  id v5 = (void *)sub_1E3DF0E08(v1, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v9 = v5;
  swift_bridgeObjectRetain();
  sub_1E3DEF31C(&v9);
  if (v2)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v9;
    uint64_t v8 = (uint64_t (*)(void *))v0[1];
    return v8(v7);
  }
}

uint64_t sub_1E3DEE110()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1E3DEE128()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1E3E7D300();
  id v2 = objc_msgSend(v0, sel_predicateForStationsWithUUIDs_, v1);

  return v2;
}

uint64_t sub_1E3DEE19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  void *v6 = v3;
  v6[1] = sub_1E3C856F4;
  return StationEntity.StationEntityQuery.entities(matching:)(a2, a3);
}

uint64_t sub_1E3DEE244(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE29150 + dword_1EAE29150);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1E3C85CD4;
  return v7(a1, v4);
}

uint64_t sub_1E3DEE2F8(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  _OWORD v2[2] = a2;
  return MEMORY[0x1F4188298](sub_1E3DEE31C, 0, 0);
}

uint64_t sub_1E3DEE31C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v0 + 2;
  sub_1E3E0A7D8((void (*)(long long *__return_ptr, void *))sub_1E3DF131C, v2, v1);
  swift_task_dealloc();
  sub_1E3E7D0A0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  v0[7] = v4;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1E3C504EC(v5);
  v0[8] = v6;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE29158 + dword_1EAE29158);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1E3DEE480;
  uint64_t v8 = v0[6];
  return v10(v4, v6, v8);
}

uint64_t sub_1E3DEE480(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3DEE6BC;
  }
  else
  {
    uint64_t v4 = sub_1E3DEE5A4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3DEE5A4()
{
  v0[4] = v0[10];
  uint64_t v1 = v0[11];
  sub_1E3E7D270();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[8];
    uint64_t v5 = sub_1E3C50B14(v0[7]);
    swift_bridgeObjectRelease();
    sub_1E3DF1950(v0 + 4, v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v0[4];
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v6);
  }
}

uint64_t sub_1E3DEE6BC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E3DEE6D4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C8CF14;
  return StationEntity.StationEntityQuery.suggestedEntities()();
}

uint64_t sub_1E3DEE764(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1E3DF109C();
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C19DC4;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t sub_1E3DEE818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = sub_1E3E7A880();
  v3[13] = v4;
  char v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3DEE8DC, 0, 0);
}

uint64_t sub_1E3DEE8DC()
{
  *(void *)(v0 + 40) = *(void *)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  swift_bridgeObjectRetain_n();
  sub_1E3E772F0();
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_privateQueueContext);
  *(void *)(v0 + 128) = v1;
  swift_unknownObjectRelease();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE29168 + dword_1EAE29168);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3DEEA24;
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  return v6(v4, v3, (uint64_t)v1);
}

uint64_t sub_1E3DEEA24(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1E3DEEB4C;
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3DEEBCC;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3DEEB4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DEEBCC()
{
  id v25 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = (void *)swift_task_alloc();
  *uint64_t v2 = &type metadata for StationEntity.StationEntityQuery;
  v2[1] = sub_1E3DF1ED4();
  swift_getKeyPath();
  swift_task_dealloc();
  sub_1E3E775E0();
  uint64_t v3 = sub_1E3DF0C94(v1);
  swift_release_n();
  uint64_t v4 = v0[5];
  if (*(void *)(v4 + 16) && (uint64_t v5 = v3[2]) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = v3 + 5;
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain();
      sub_1E3E12180(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    uint64_t v4 = v0[5];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[8] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE06C0);
  sub_1E3DF1F28();
  if (sub_1E3E7D3C0())
  {
    sub_1E3E7A740();
    id v9 = sub_1E3E7A860();
    os_log_type_t v10 = sub_1E3E7D4E0();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[14];
    uint64_t v13 = v0[15];
    uint64_t v14 = v0[13];
    if (v11)
    {
      uint64_t v23 = v0[15];
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = v16;
      *(_DWORD *)unint64_t v15 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1E3E7D320();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      v0[9] = sub_1E3C150B8(v17, v19, &v24);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v9, v10, "Failed to find requested local episodes with identifiers: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v16, -1, -1);
      MEMORY[0x1E4E79510](v15, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v14);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  id v20 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v21 = v0[18];
  return v20(v21);
}

uint64_t sub_1E3DEEF04(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E772F0();
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v5 = objc_msgSend(v10, sel_privateQueueContext);
  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1E3E7A510();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1E3E7A500();
  }
  else
  {
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
  }
  if (sub_1E3E7A520())
  {
    uint64_t v8 = sub_1E3D32170(a1, a2, v5);
    if (v8)
    {
      uint64_t v7 = (uint64_t)v8;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = a1;
    }
  }

  return v7;
}

uint64_t sub_1E3DEF060@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1E3E79AE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1E3DEF0F0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StationEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (void *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3C12B10(0, (unint64_t *)&unk_1EAE29190);
  uint64_t v7 = a1;
  unint64_t v8 = sub_1E3E7D900();
  if (v1) {
    return v7;
  }
  unint64_t v9 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_4:
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC78B0(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16[1] = 0;
    uint64_t v12 = 0;
    uint64_t v7 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1E4E77720](v12, v9);
      }
      else {
        id v13 = *(id *)(v9 + 8 * v12 + 32);
      }
      StationEntity.init(model:)(v13, v6);
      uint64_t v17 = v7;
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1E3CC78B0(v14 > 1, v15 + 1, 1);
        uint64_t v7 = v17;
      }
      ++v12;
      *(void *)(v7 + 16) = v15 + 1;
      sub_1E3D0B3F8((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v15);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

void sub_1E3DEF31C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for StationEntity() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1E3DF0C34(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1E3DEF3C4(v5);
  *a1 = v3;
}

void sub_1E3DEF3C4(void *a1)
{
  uint64_t v131 = type metadata accessor for StationEntity();
  uint64_t v2 = *(void *)(v131 - 8);
  MEMORY[0x1F4188790](v131);
  uint64_t v126 = (uint64_t)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v139 = (uint64_t)&v121 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v136 = (uint64_t)&v121 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v135 = (uint64_t)&v121 - v9;
  uint64_t v10 = a1[1];
  uint64_t v11 = sub_1E3E7E0D0();
  if (v11 >= v10)
  {
    if (v10 < 0) {
      goto LABEL_140;
    }
    if (v10) {
      sub_1E3DEFE88(0, v10, 1, a1);
    }
    return;
  }
  if (v10 >= 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (v10 < -1) {
    goto LABEL_148;
  }
  uint64_t v125 = v2;
  uint64_t v123 = v11;
  if (v10 < 2)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    unint64_t v129 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    if (v10 != 1)
    {
      unint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      unint64_t v18 = (char *)MEMORY[0x1E4FBC860];
LABEL_106:
      uint64_t v113 = v18;
      uint64_t v122 = v16;
      if (v19 >= 2)
      {
        uint64_t v114 = *a1;
        uint64_t v115 = v130;
        do
        {
          unint64_t v116 = v19 - 2;
          if (v19 < 2) {
            goto LABEL_135;
          }
          if (!v114) {
            goto LABEL_147;
          }
          uint64_t v117 = *(void *)&v113[16 * v116 + 32];
          uint64_t v118 = *(void *)&v113[16 * v19 + 24];
          sub_1E3DF0130(v114 + *(void *)(v125 + 72) * v117, v114 + *(void *)(v125 + 72) * *(void *)&v113[16 * v19 + 16], v114 + *(void *)(v125 + 72) * v118, v129);
          if (v115) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_1E3DF0BBC((uint64_t)v113);
          }
          if (v116 >= *((void *)v113 + 2)) {
            goto LABEL_137;
          }
          uint64_t v119 = &v113[16 * v116 + 32];
          *(void *)uint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v113 + 2);
          if (v19 > v120) {
            goto LABEL_138;
          }
          memmove(&v113[16 * v19 + 16], &v113[16 * v19 + 32], 16 * (v120 - v19));
          *((void *)v113 + 2) = v120 - 1;
          unint64_t v19 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v122 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v122 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = sub_1E3E7D0F0();
    *(void *)(v14 + 16) = v13;
    unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v122 = v14;
    unint64_t v129 = v14 + v15;
  }
  uint64_t v17 = 0;
  unint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v138 = a1;
  while (1)
  {
    uint64_t v20 = v17;
    uint64_t v21 = v17 + 1;
    uint64_t v128 = v17;
    if (v17 + 1 >= v10)
    {
      uint64_t v26 = v17 + 1;
    }
    else
    {
      uint64_t v22 = *a1;
      uint64_t v23 = *(void *)(v2 + 72);
      uint64_t v24 = v135;
      sub_1E3C55C68(v22 + v23 * v21, v135);
      uint64_t v25 = v136;
      sub_1E3C55C68(v22 + v23 * v20, v136);
      sub_1E3E774B0();
      uint64_t v142 = v141;
      sub_1E3E774B0();
      uint64_t v133 = v140;
      unint64_t v134 = sub_1E3C10C8C();
      uint64_t v137 = sub_1E3E7DC00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1E3DF1E5C(v25);
      sub_1E3DF1E5C(v24);
      uint64_t v26 = v20 + 2;
      uint64_t v127 = v22;
      uint64_t v142 = v23;
      if (v20 + 2 >= v10)
      {
        uint64_t v2 = v125;
      }
      else
      {
        uint64_t v124 = v18;
        uint64_t v27 = v22;
        uint64_t v132 = v23 * v26;
        uint64_t v133 = v23 * v21;
        while (1)
        {
          uint64_t v28 = v26;
          BOOL v29 = v137 == -1;
          uint64_t v30 = v135;
          sub_1E3C55C68(v27 + v132, v135);
          uint64_t v31 = v136;
          sub_1E3C55C68(v27 + v133, v136);
          sub_1E3E774B0();
          sub_1E3E774B0();
          uint64_t v32 = sub_1E3E7DC00();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1E3DF1E5C(v31);
          sub_1E3DF1E5C(v30);
          if (v29 == (v32 != -1)) {
            break;
          }
          uint64_t v26 = v28 + 1;
          v27 += v142;
          if (v10 == v28 + 1)
          {
            uint64_t v26 = v10;
            unint64_t v18 = v124;
            uint64_t v2 = v125;
            uint64_t v20 = v128;
            goto LABEL_25;
          }
        }
        unint64_t v18 = v124;
        uint64_t v2 = v125;
        uint64_t v26 = v28;
        uint64_t v20 = v128;
      }
LABEL_25:
      a1 = v138;
      if (v137 == -1)
      {
        if (v26 < v20) {
          goto LABEL_143;
        }
        if (v20 < v26)
        {
          uint64_t v137 = v10;
          uint64_t v124 = v18;
          uint64_t v33 = 0;
          uint64_t v34 = v142;
          uint64_t v35 = v142 * (v26 - 1);
          uint64_t v36 = v26 * v142;
          uint64_t v37 = v20;
          uint64_t v38 = v20 * v142;
          do
          {
            if (v37 != v26 + v33 - 1)
            {
              uint64_t v39 = v127;
              if (!v127) {
                goto LABEL_146;
              }
              uint64_t v40 = v26;
              unint64_t v41 = v127 + v38;
              uint64_t v42 = v127 + v35;
              sub_1E3D0B3F8(v127 + v38, v126);
              if (v38 < v35 || v41 >= v39 + v36)
              {
                swift_arrayInitWithTakeFrontToBack();
                uint64_t v34 = v142;
              }
              else
              {
                uint64_t v34 = v142;
                if (v38 != v35) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_1E3D0B3F8(v126, v42);
              a1 = v138;
              uint64_t v26 = v40;
              uint64_t v20 = v128;
            }
            ++v37;
            --v33;
            v35 -= v34;
            v36 -= v34;
            v38 += v34;
          }
          while (v37 < v26 + v33);
          unint64_t v18 = v124;
          uint64_t v2 = v125;
          uint64_t v10 = v137;
        }
      }
    }
    if (v26 >= v10) {
      goto LABEL_57;
    }
    if (__OFSUB__(v26, v20)) {
      goto LABEL_139;
    }
    if (v26 - v20 >= v123) {
      goto LABEL_57;
    }
    if (__OFADD__(v20, v123)) {
      goto LABEL_141;
    }
    uint64_t v43 = v20 + v123 >= v10 ? v10 : v20 + v123;
    if (v43 < v20) {
      break;
    }
    if (v26 != v43)
    {
      uint64_t v124 = v18;
      uint64_t v44 = *(void *)(v2 + 72);
      uint64_t v45 = v44 * (v26 - 1);
      uint64_t v132 = v44;
      uint64_t v46 = v26 * v44;
      uint64_t v127 = v43;
      do
      {
        uint64_t v48 = 0;
        uint64_t v49 = v128;
        uint64_t v137 = v26;
        uint64_t v133 = v46;
        unint64_t v134 = v45;
        while (1)
        {
          uint64_t v142 = v49;
          uint64_t v50 = *a1;
          uint64_t v51 = v46 + v48 + *a1;
          uint64_t v52 = v135;
          sub_1E3C55C68(v51, v135);
          uint64_t v53 = v45 + v48 + v50;
          uint64_t v54 = a1;
          uint64_t v55 = v136;
          sub_1E3C55C68(v53, v136);
          sub_1E3E774B0();
          sub_1E3E774B0();
          sub_1E3C10C8C();
          uint64_t v56 = sub_1E3E7DC00();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1E3DF1E5C(v55);
          sub_1E3DF1E5C(v52);
          if (v56 != -1) {
            break;
          }
          uint64_t v57 = *v54;
          if (!*v54) {
            goto LABEL_144;
          }
          uint64_t v46 = v133;
          uint64_t v45 = v134;
          uint64_t v58 = v57 + v134 + v48;
          sub_1E3D0B3F8(v57 + v133 + v48, v139);
          swift_arrayInitWithTakeFrontToBack();
          sub_1E3D0B3F8(v139, v58);
          v48 -= v132;
          uint64_t v49 = v142 + 1;
          uint64_t v47 = v137;
          a1 = v138;
          if (v137 == v142 + 1) {
            goto LABEL_50;
          }
        }
        uint64_t v47 = v137;
        a1 = v54;
        uint64_t v46 = v133;
        uint64_t v45 = v134;
LABEL_50:
        uint64_t v26 = v47 + 1;
        v45 += v132;
        v46 += v132;
      }
      while (v26 != v127);
      uint64_t v26 = v127;
      unint64_t v18 = v124;
      uint64_t v2 = v125;
      uint64_t v20 = v128;
    }
LABEL_57:
    if (v26 < v20) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v18 = sub_1E3DF0694(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v61 = *((void *)v18 + 2);
    unint64_t v60 = *((void *)v18 + 3);
    unint64_t v19 = v61 + 1;
    if (v61 >= v60 >> 1) {
      unint64_t v18 = sub_1E3DF0694((char *)(v60 > 1), v61 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v19;
    uint64_t v62 = v18 + 32;
    uint64_t v63 = &v18[16 * v61 + 32];
    uint64_t v64 = v137;
    *(void *)uint64_t v63 = v20;
    *((void *)v63 + 1) = v64;
    if (v61)
    {
      while (1)
      {
        unint64_t v65 = v19 - 1;
        if (v19 >= 4)
        {
          uint64_t v70 = &v62[16 * v19];
          uint64_t v71 = *((void *)v70 - 8);
          uint64_t v72 = *((void *)v70 - 7);
          BOOL v76 = __OFSUB__(v72, v71);
          uint64_t v73 = v72 - v71;
          if (v76) {
            goto LABEL_123;
          }
          uint64_t v75 = *((void *)v70 - 6);
          uint64_t v74 = *((void *)v70 - 5);
          BOOL v76 = __OFSUB__(v74, v75);
          uint64_t v68 = v74 - v75;
          char v69 = v76;
          if (v76) {
            goto LABEL_124;
          }
          unint64_t v77 = v19 - 2;
          uint64_t v78 = &v62[16 * v19 - 32];
          uint64_t v80 = *(void *)v78;
          uint64_t v79 = *((void *)v78 + 1);
          BOOL v76 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          if (v76) {
            goto LABEL_126;
          }
          BOOL v76 = __OFADD__(v68, v81);
          uint64_t v82 = v68 + v81;
          if (v76) {
            goto LABEL_129;
          }
          if (v82 >= v73)
          {
            id v100 = &v62[16 * v65];
            uint64_t v102 = *(void *)v100;
            uint64_t v101 = *((void *)v100 + 1);
            BOOL v76 = __OFSUB__(v101, v102);
            uint64_t v103 = v101 - v102;
            if (v76) {
              goto LABEL_133;
            }
            BOOL v93 = v68 < v103;
            goto LABEL_94;
          }
        }
        else
        {
          if (v19 != 3)
          {
            uint64_t v94 = *((void *)v18 + 4);
            uint64_t v95 = *((void *)v18 + 5);
            BOOL v76 = __OFSUB__(v95, v94);
            uint64_t v87 = v95 - v94;
            char v88 = v76;
            goto LABEL_88;
          }
          uint64_t v67 = *((void *)v18 + 4);
          uint64_t v66 = *((void *)v18 + 5);
          BOOL v76 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          char v69 = v76;
        }
        if (v69) {
          goto LABEL_125;
        }
        unint64_t v77 = v19 - 2;
        long long v83 = &v62[16 * v19 - 32];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v86 = __OFSUB__(v84, v85);
        uint64_t v87 = v84 - v85;
        char v88 = v86;
        if (v86) {
          goto LABEL_128;
        }
        id v89 = &v62[16 * v65];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v76 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v76) {
          goto LABEL_131;
        }
        if (__OFADD__(v87, v92)) {
          goto LABEL_132;
        }
        if (v87 + v92 >= v68)
        {
          BOOL v93 = v68 < v92;
LABEL_94:
          if (v93) {
            unint64_t v65 = v77;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v88) {
          goto LABEL_127;
        }
        long long v96 = &v62[16 * v65];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v76 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v76) {
          goto LABEL_130;
        }
        if (v99 < v87) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v104 = v65 - 1;
        if (v65 - 1 >= v19)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        uint64_t v105 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        char v106 = v18;
        id v107 = &v62[16 * v104];
        uint64_t v108 = *(void *)v107;
        id v109 = &v62[16 * v65];
        uint64_t v110 = *((void *)v109 + 1);
        uint64_t v111 = v130;
        sub_1E3DF0130(v105 + *(void *)(v2 + 72) * *(void *)v107, v105 + *(void *)(v2 + 72) * *(void *)v109, v105 + *(void *)(v2 + 72) * v110, v129);
        uint64_t v130 = v111;
        if (v111) {
          goto LABEL_117;
        }
        if (v110 < v108) {
          goto LABEL_120;
        }
        if (v65 > *((void *)v106 + 2)) {
          goto LABEL_121;
        }
        *(void *)id v107 = v108;
        *(void *)&v62[16 * v104 + 8] = v110;
        unint64_t v112 = *((void *)v106 + 2);
        if (v65 >= v112) {
          goto LABEL_122;
        }
        unint64_t v18 = v106;
        unint64_t v19 = v112 - 1;
        memmove(&v62[16 * v65], v109 + 16, 16 * (v112 - 1 - v65));
        *((void *)v106 + 2) = v112 - 1;
        a1 = v138;
        if (v112 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v19 = 1;
LABEL_15:
    uint64_t v10 = a1[1];
    uint64_t v17 = v137;
    if (v137 >= v10)
    {
      uint64_t v16 = v122;
      goto LABEL_106;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1E3E7DF70();
  __break(1u);
}

void sub_1E3DEFE88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v30 = a1;
  uint64_t v31 = type metadata accessor for StationEntity();
  MEMORY[0x1F4188790](v31);
  uint64_t v39 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (uint64_t)&v28 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v33 = (uint64_t)&v28 - v12;
  uint64_t v38 = a3;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v13 = *(void *)(v11 + 72);
    uint64_t v14 = v13 * (v38 - 1);
    uint64_t v35 = v13;
    uint64_t v15 = v13 * v38;
    uint64_t v32 = a4;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v30;
    uint64_t v36 = v15;
    uint64_t v37 = v14;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = v15 + v16 + *a4;
      uint64_t v20 = v33;
      sub_1E3C55C68(v19, v33);
      uint64_t v21 = v14 + v16 + v18;
      uint64_t v22 = v34;
      sub_1E3C55C68(v21, v34);
      sub_1E3E774B0();
      sub_1E3E774B0();
      sub_1E3C10C8C();
      uint64_t v23 = sub_1E3E7DC00();
      swift_bridgeObjectRelease();
      a4 = v32;
      swift_bridgeObjectRelease();
      uint64_t v24 = v22;
      uint64_t v14 = v37;
      sub_1E3DF1E5C(v24);
      uint64_t v25 = v20;
      uint64_t v15 = v36;
      sub_1E3DF1E5C(v25);
      if (v23 != -1)
      {
LABEL_4:
        v14 += v35;
        v15 += v35;
        if (++v38 == v29) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v14 + v16;
      sub_1E3D0B3F8(v26 + v15 + v16, v39);
      swift_arrayInitWithTakeFrontToBack();
      sub_1E3D0B3F8(v39, v27);
      v16 -= v35;
      if (v38 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1E3DF0130(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v41 = type metadata accessor for StationEntity();
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v46 = a1;
  unint64_t v45 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v44 = a4 + v18;
      unint64_t v46 = a2;
      unint64_t v40 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v39 = a4;
        do
        {
          unint64_t v42 = a3 - v13;
          sub_1E3C55C68(v26 - v13, (uint64_t)v11);
          unint64_t v28 = a2 - v13;
          unint64_t v29 = a3;
          uint64_t v30 = (uint64_t)v11;
          uint64_t v31 = v43;
          sub_1E3C55C68(a2 - v13, v43);
          sub_1E3E774B0();
          sub_1E3E774B0();
          sub_1E3C10C8C();
          uint64_t v32 = sub_1E3E7DC00();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v33 = v31;
          uint64_t v11 = (char *)v30;
          sub_1E3DF1E5C(v33);
          sub_1E3DF1E5C(v30);
          if (v32 == -1)
          {
            a3 = v42;
            if (v29 < a2 || v42 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v36 = v39;
            }
            else
            {
              BOOL v35 = v29 == a2;
              unint64_t v36 = v39;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v46 -= v13;
          }
          else
          {
            unint64_t v34 = v44;
            v44 -= v13;
            a3 = v42;
            if (v29 < v34 || v42 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v29 != v34)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v28 = a2;
            unint64_t v36 = v39;
          }
          unint64_t v26 = v44;
          if (v44 <= v36) {
            break;
          }
          a2 = v28;
        }
        while (v28 > v40);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v42 = a4 + v17;
    unint64_t v44 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        unint64_t v20 = a3;
        sub_1E3C55C68(a2, (uint64_t)v11);
        uint64_t v21 = v43;
        sub_1E3C55C68(a4, v43);
        sub_1E3E774B0();
        sub_1E3E774B0();
        sub_1E3C10C8C();
        uint64_t v22 = sub_1E3E7DC00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1E3DF1E5C(v21);
        sub_1E3DF1E5C((uint64_t)v11);
        unint64_t v23 = v46;
        if (v22 == -1)
        {
          unint64_t v25 = a2 + v13;
          if (v46 < a2 || v46 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v46 == a2) {
              unint64_t v23 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v24 = v45 + v13;
          if (v46 < v45 || v46 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v46 != v45) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v45 = v24;
          unint64_t v25 = a2;
        }
        unint64_t v46 = v23 + v13;
        a4 = v45;
        if (v45 >= v42) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_59:
    sub_1E3DF0A7C(&v46, &v45, (uint64_t *)&v44);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_1E3E7E010();
  __break(1u);
  return result;
}

char *sub_1E3DF0694(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE291A0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1E3DF0790(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1E3E7E010();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1E3DF084C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1E3E7E010();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1E3DF0908(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_1E3E7E010();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_1E3DF09D8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_1E3E7E010();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

uint64_t sub_1E3DF0A7C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for StationEntity();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1E3E7E010();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1E3DF0BBC(uint64_t a1)
{
  return sub_1E3DF0694(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1E3DF0BD0()
{
}

uint64_t sub_1E3DF0BE4(void *a1)
{
  return sub_1E3CC8334(0, a1[2], 0, a1);
}

uint64_t sub_1E3DF0BF8(uint64_t a1)
{
  return sub_1E3CC8664(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1E3DF0C0C(uint64_t a1)
{
  return sub_1E3CC87C4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1E3DF0C20(uint64_t a1)
{
  return sub_1E3CC894C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1E3DF0C34(void *a1)
{
  return sub_1E3CC8A9C(0, a1[2], 0, a1);
}

uint64_t sub_1E3DF0C48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1E3DEEF04(*a1, a1[1]);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

void *sub_1E3DF0C94(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = *(void *)(type metadata accessor for StationEntity() - 8);
  uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  char v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    swift_getAtKeyPath();
    if (v12)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v6 = sub_1E3CB7240(0, v6[2] + 1, 1, v6);
      }
      unint64_t v9 = v6[2];
      unint64_t v8 = v6[3];
      if (v9 >= v8 >> 1) {
        char v6 = sub_1E3CB7240((void *)(v8 > 1), v9 + 1, 1, v6);
      }
      uint64_t v6[2] = v9 + 1;
      uint64_t v7 = &v6[2 * v9];
      void v7[4] = v11;
      void v7[5] = v12;
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E3DF0E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for StationEntity() - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v25 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v22 = v3;
    uint64_t v15 = *(void *)(v10 + 72);
    unint64_t v24 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = a1 + v24;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v23 = a2;
    do
    {
      sub_1E3C55C68(v16, (uint64_t)v12);
      sub_1E3E774B0();
      uint64_t v26 = a2;
      uint64_t v27 = a3;
      sub_1E3C10C8C();
      char v18 = sub_1E3E7DC30();
      swift_bridgeObjectRelease();
      if (v18)
      {
        uint64_t v19 = a3;
        sub_1E3D0B3F8((uint64_t)v12, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1E3CC78B0(0, *(void *)(v17 + 16) + 1, 1);
        }
        uint64_t v17 = v28;
        unint64_t v21 = *(void *)(v28 + 16);
        unint64_t v20 = *(void *)(v28 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1E3CC78B0(v20 > 1, v21 + 1, 1);
          uint64_t v17 = v28;
        }
        *(void *)(v17 + 16) = v21 + 1;
        sub_1E3D0B3F8(v25, v17 + v24 + v21 * v15);
        a3 = v19;
        a2 = v23;
      }
      else
      {
        sub_1E3DF1E5C((uint64_t)v12);
      }
      v16 += v15;
      --v14;
    }
    while (v14);
    return v28;
  }
  return result;
}

uint64_t sub_1E3DF1030()
{
  return sub_1E3DF122C((unint64_t *)&qword_1EAE290E0);
}

uint64_t sub_1E3DF1064()
{
  return sub_1E3DF122C((unint64_t *)&unk_1EAE290E8);
}

unint64_t sub_1E3DF109C()
{
  unint64_t result = qword_1EAE290F8;
  if (!qword_1EAE290F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE290F8);
  }
  return result;
}

unint64_t sub_1E3DF10F4()
{
  unint64_t result = qword_1EAE29108;
  if (!qword_1EAE29108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29108);
  }
  return result;
}

unint64_t sub_1E3DF114C()
{
  unint64_t result = qword_1EAE29110[0];
  if (!qword_1EAE29110[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE29110);
  }
  return result;
}

unint64_t sub_1E3DF11A4()
{
  unint64_t result = qword_1EAE29128;
  if (!qword_1EAE29128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29128);
  }
  return result;
}

uint64_t sub_1E3DF11F8()
{
  return sub_1E3DF122C(&qword_1EAE29130);
}

uint64_t sub_1E3DF122C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StationEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3DF1274()
{
  unint64_t result = qword_1EAE29138[0];
  if (!qword_1EAE29138[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE290D0);
    sub_1E3DF122C(&qword_1EAE29130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE29138);
  }
  return result;
}

ValueMetadata *type metadata accessor for StationEntity.StationEntityQuery()
{
  return &type metadata for StationEntity.StationEntityQuery;
}

uint64_t sub_1E3DF131C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3DF0C48(a1, a2);
}

uint64_t sub_1E3DF133C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  void v3[3] = a1;
  uint64_t v4 = sub_1E3E7D8E0();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3DF1400, 0, 0);
}

uint64_t sub_1E3DF1400()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[7];
  uint64_t v22 = v0[8];
  uint64_t v23 = v0 + 2;
  uint64_t v5 = v0 + 5;
  uint64_t v3 = (void *)v0[5];
  uint64_t v4 = v5[1];
  sub_1E3E7CD30();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v7 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);
  v1[9] = v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1E3E89CC0;
  sub_1E3C12B10(0, &qword_1EBFDEE40);
  *(void *)(v9 + 32) = sub_1E3E7D580();
  uint64_t v10 = self;
  uint64_t v11 = (void *)sub_1E3E7D300();
  id v12 = objc_msgSend(v10, sel_predicateForStationsWithUUIDs_, v11);

  *(void *)(v9 + 40) = v12;
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EBFDEE38);
  uint64_t v13 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v13);

  objc_msgSend(v8, sel_setPredicate_, v14);
  uint64_t v15 = swift_allocObject();
  v1[10] = v15;
  *(void *)(v15 + 16) = v3;
  *(void *)(v15 + 24) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v22, *MEMORY[0x1E4F1BD78], v4);
  id v16 = v3;
  id v17 = v8;
  char v18 = (void *)swift_task_alloc();
  v1[11] = v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE290D0);
  *char v18 = v1;
  v18[1] = sub_1E3DF16DC;
  uint64_t v20 = v1[8];
  return MEMORY[0x1F40D7080](v23, v20, sub_1E3DF1FC4, v15, v19);
}

uint64_t sub_1E3DF16DC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1E3DF18E4;
  }
  else {
    uint64_t v5 = sub_1E3DF1870;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3DF1870()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3DF18E4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1E3DF1950(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a3;
  uint64_t v38 = a2;
  uint64_t v36 = sub_1E3E77D00();
  uint64_t v4 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  BOOL v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StationEntity();
  uint64_t v45 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v41 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v44 = (uint64_t)&v34 - v9;
  uint64_t v10 = *a1;
  uint64_t v43 = *(void *)(*a1 + 16);
  if (v43)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_46;
    }
    while (1)
    {
      unint64_t v11 = 0;
      uint64_t v12 = v42;
      *a1 = v10;
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
      if (v12 < 0) {
        uint64_t v13 = v12;
      }
      uint64_t v37 = v13;
      unint64_t v39 = v12 & 0xC000000000000001;
      uint64_t v40 = v12 + 56;
      unint64_t v34 = (void (**)(uint64_t, uint64_t))(v4 + 8);
      while (v11 < *(void *)(*a1 + 16))
      {
        uint64_t v10 = v44;
        unint64_t v14 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
        uint64_t v15 = *(void *)(v45 + 72) * v11;
        sub_1E3C55C68(*a1 + v14 + v15, v44);
        uint64_t v4 = *(void *)(v10 + 32);
        id v16 = (id)v4;
        sub_1E3DF1E5C(v10);
        if (v4)
        {
          sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE4AD0);
          if (v39)
          {
            uint64_t v4 = (uint64_t)v16;
            uint64_t v10 = sub_1E3E7DD30();

            if (v10) {
              goto LABEL_12;
            }
          }
          else if (*(void *)(v42 + 16))
          {
            uint64_t v10 = v42;
            uint64_t v4 = (uint64_t)v16;
            uint64_t v26 = sub_1E3E7DA70();
            uint64_t v27 = -1 << *(unsigned char *)(v10 + 32);
            unint64_t v28 = v26 & ~v27;
            if ((*(void *)(v40 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28))
            {
              uint64_t v10 = (uint64_t)*(id *)(*(void *)(v42 + 48) + 8 * v28);
              uint64_t v4 = sub_1E3E7DA80();

              if (v4)
              {
LABEL_12:
                uint64_t v10 = *a1;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *a1 = v10;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v10 = sub_1E3E12988(v10);
                  *a1 = v10;
                }
                if (v11 >= *(void *)(v10 + 16)) {
                  goto LABEL_44;
                }
                char v18 = (uint64_t *)(v10 + v14 + v15);
                uint64_t v19 = (void *)v18[4];
                if (v19
                  && (id v20 = v16,
                      id v21 = v19,
                      uint64_t v4 = sub_1E3E7DA80(),
                      v21,
                      v20,
                      (v4 & 1) != 0))
                {
                  id v22 = objc_msgSend(v20, sel_URIRepresentation);
                  uint64_t v10 = (uint64_t)v35;
                  sub_1E3E77C90();

                  uint64_t v23 = sub_1E3E77C00();
                  uint64_t v4 = v24;
                  (*v34)(v10, v36);
                  swift_bridgeObjectRelease();
                  *char v18 = v23;
                  v18[1] = v4;
                  uint64_t v25 = *a1;

                  *a1 = v25;
                }
                else
                {

                  *a1 = v10;
                }
                goto LABEL_7;
              }
              uint64_t v29 = ~v27;
              while (1)
              {
                unint64_t v28 = (v28 + 1) & v29;
                if (((*(void *)(v40 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
                  break;
                }
                uint64_t v10 = (uint64_t)*(id *)(*(void *)(v42 + 48) + 8 * v28);
                uint64_t v4 = sub_1E3E7DA80();

                if (v4) {
                  goto LABEL_12;
                }
              }
            }
          }
        }
        if (v11 >= *(void *)(*a1 + 16)) {
          goto LABEL_43;
        }
        uint64_t v10 = v41;
        sub_1E3C55C68(*a1 + v14 + v15, v41);
        uint64_t v30 = *(void *)(v10 + 16);
        uint64_t v4 = *(void *)(v10 + 24);
        swift_bridgeObjectRetain();
        sub_1E3DF1E5C(v10);
        if (v4)
        {
          if (sub_1E3D34688(v30, v4, v38))
          {
            unint64_t v31 = *a1;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v31 = sub_1E3E12988(v31);
            }
            if (v11 >= *(void *)(v31 + 16)) {
              goto LABEL_45;
            }
            uint64_t v10 = v31 + v14 + v15;
            uint64_t v32 = *(void *)(v10 + 24);
            if (v32)
            {
              BOOL v33 = *(void *)(v10 + 16) == v30 && v32 == v4;
              if (v33 || (sub_1E3E7E150() & 1) != 0)
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)uint64_t v10 = v30;
                *(void *)(v10 + 8) = v4;
              }
            }
            swift_bridgeObjectRelease();
            *a1 = v31;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
LABEL_7:
        if (++v11 == v43) {
          return;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      uint64_t v10 = sub_1E3E12988(v10);
    }
  }
}

uint64_t sub_1E3DF1E5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StationEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3DF1EBC()
{
  return 16;
}

__n128 sub_1E3DF1EC8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1E3DF1ED4()
{
  unint64_t result = qword_1EAE29170;
  if (!qword_1EAE29170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29170);
  }
  return result;
}

unint64_t sub_1E3DF1F28()
{
  unint64_t result = qword_1EAE29180;
  if (!qword_1EAE29180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE06C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29180);
  }
  return result;
}

uint64_t sub_1E3DF1F84()
{
  return swift_deallocObject();
}

uint64_t sub_1E3DF1FC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3DEF0F0(*(void *)(v1 + 16));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t StationEntity.title.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t StationEntity.init(model:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v3 = sub_1E3E77E20();
  MEMORY[0x1F4188790](v3 - 8);
  char v69 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E78740();
  uint64_t v72 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v70 = (uint64_t)&v60 - v12;
  uint64_t v13 = sub_1E3E77B90();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v67 = (uint64_t)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v21 = (char *)&v60 - v20;
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v68 = (uint64_t)&v60 - v24;
  id v25 = objc_msgSend(a1, sel_podcasts, v23);
  if (v25)
  {
    uint64_t v61 = v14;
    uint64_t v62 = v8;
    uint64_t v63 = v6;
    unint64_t v65 = a1;
    id v26 = v25;
    sub_1E3E7D490();
    id v60 = v26;

    sub_1E3DF4800((unint64_t *)&qword_1EAE268E0, MEMORY[0x1E4F27660]);
    uint64_t v71 = v13;
    sub_1E3E7DBC0();
    uint64_t v64 = v5;
    if (v78)
    {
      uint64_t v27 = v71;
      unint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
      uint64_t v29 = MEMORY[0x1E4FBC860];
      uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      do
      {
        sub_1E3C1B524(&v77, v76);
        sub_1E3C114A4((uint64_t)v76, (uint64_t)v75);
        sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE0750);
        if (swift_dynamicCast())
        {
          unint64_t v31 = v74;
          sub_1E3E7DB10();
        }
        else
        {
          (*v28)(v21, 1, 1, v9);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
        if ((*v30)(v21, 1, v9) == 1)
        {
          sub_1E3C71A48((uint64_t)v21);
        }
        else
        {
          uint64_t v32 = v70;
          sub_1E3C71AA8((uint64_t)v21, v70);
          sub_1E3C71AA8(v32, v73);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v29 = sub_1E3CB74BC(0, *(void *)(v29 + 16) + 1, 1, v29);
          }
          unint64_t v34 = *(void *)(v29 + 16);
          unint64_t v33 = *(void *)(v29 + 24);
          if (v34 >= v33 >> 1) {
            uint64_t v29 = sub_1E3CB74BC(v33 > 1, v34 + 1, 1, v29);
          }
          *(void *)(v29 + 16) = v34 + 1;
          sub_1E3C71AA8(v73, v29+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v34);
          uint64_t v27 = v71;
        }
        sub_1E3E7DBC0();
      }
      while (v78);
    }
    else
    {
      uint64_t v29 = MEMORY[0x1E4FBC860];
      uint64_t v27 = v71;
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v27);

    *(void *)&long long v77 = v29;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A10);
    sub_1E3C10DE8(&qword_1EAE291B0, (uint64_t *)&unk_1EBFE4A10);
    char v35 = sub_1E3E7D3C0();
    a1 = v65;
    uint64_t v6 = v63;
    if (v35)
    {
      ArtworkModel.init(composite:width:height:backgroundColor:)(v29, 0, 255, v68);
      uint64_t v5 = v64;
      uint64_t v8 = v62;
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v64;
    uint64_t v8 = v62;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v68, 1, 1, v9);
LABEL_20:
  id v36 = objc_msgSend(a1, sel_objectID);
  id v37 = objc_msgSend(v36, sel_URIRepresentation);

  sub_1E3E77C90();
  uint64_t v38 = sub_1E3E77C00();
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v41 = objc_msgSend(a1, sel_uuid);
  uint64_t v73 = v38;
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v72 = sub_1E3E7CD30();
    uint64_t v44 = v43;
  }
  else
  {
    uint64_t v72 = 0;
    uint64_t v44 = 0;
  }
  id v45 = objc_msgSend(a1, sel_objectID);
  id v46 = objc_msgSend(a1, sel_title);
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v48 = sub_1E3E7CD30();
    uint64_t v50 = v49;
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v50 = 0xE000000000000000;
  }
  objc_msgSend(a1, sel_generatedDate);
  sub_1E3E77D70();
  id v51 = objc_msgSend(a1, sel_defaultSettings);
  if (v51)
  {
    uint64_t v52 = v51;
    uint64_t v53 = v40;
    unsigned __int8 v54 = objc_msgSend(v51, sel_showPlayedEpisodes);

    unsigned __int8 v55 = v54 ^ 1;
  }
  else
  {
    uint64_t v53 = v40;
    unsigned __int8 v55 = 1;
  }
  uint64_t v57 = v66;
  uint64_t v56 = v67;
  uint64_t v58 = v68;
  sub_1E3C719E0(v68, v67);
  StationEntity.init(id:uuid:objectID:title:dateCreated:showUnplayedEpisodes:artworkModel:artworkData:)(v73, v53, v72, v44, v45, v48, v50, v69, v57, v55, v56, 0, 0xF000000000000000);

  return sub_1E3C71A48(v58);
}

uint64_t static StationEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t StationEntity.displayRepresentation.getter()
{
  return sub_1E3E77780();
}

uint64_t static StationEntity.databaseEntityName.getter()
{
  return sub_1E3E7CD30();
}

uint64_t sub_1E3DF2988()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  qword_1EAE291A8 = result;
  return result;
}

uint64_t static StationEntity.defaultQuery.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24530 != -1) {
    swift_once();
  }
  *a1 = qword_1EAE291A8;

  return sub_1E3E775E0();
}

uint64_t StationEntity.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StationEntity.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *StationEntity.objectID.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t StationEntity.title.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*StationEntity.title.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t StationEntity.$title.getter()
{
  return sub_1E3E774D0();
}

uint64_t StationEntity.dateCreated.getter()
{
  return sub_1E3E774B0();
}

uint64_t sub_1E3DF2BD4(uint64_t a1)
{
  uint64_t v2 = sub_1E3E77E20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1E3E774C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t StationEntity.dateCreated.setter(uint64_t a1)
{
  uint64_t v2 = sub_1E3E77E20();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_1E3E774C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*StationEntity.dateCreated.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t StationEntity.$dateCreated.getter()
{
  return sub_1E3E774D0();
}

uint64_t StationEntity.showUnplayedEpisodes.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t StationEntity.showUnplayedEpisodes.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*StationEntity.showUnplayedEpisodes.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t StationEntity.$showUnplayedEpisodes.getter()
{
  return sub_1E3E774D0();
}

uint64_t StationEntity.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StationEntity() + 40);

  return sub_1E3C719E0(v3, a1);
}

uint64_t StationEntity.artworkData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for StationEntity() + 44);
  uint64_t v2 = *(void *)v1;
  sub_1E3C8103C(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t StationEntity.init(id:uuid:objectID:title:dateCreated:showUnplayedEpisodes:artworkModel:artworkData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, void *a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v48 = a12;
  uint64_t v49 = a13;
  uint64_t v47 = a11;
  int v46 = a10;
  uint64_t v16 = sub_1E3E77E20();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v39 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v21 = (char *)&v36 - v20;
  uint64_t v22 = sub_1E3E77B60();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F00);
  sub_1E3E77B40();
  a9[5] = MEMORY[0x1E4E70E10](v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE291B8);
  sub_1E3E77B40();
  uint64_t v38 = MEMORY[0x1E4E70E00](v24);
  a9[6] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F08);
  sub_1E3E77B40();
  a9[7] = MEMORY[0x1E4E70E20](v24);
  uint64_t v25 = type metadata accessor for StationEntity();
  uint64_t v37 = (uint64_t)a9 + *(int *)(v25 + 40);
  uint64_t v26 = v37;
  uint64_t v27 = sub_1E3E78740();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  unint64_t v28 = (char *)a9 + *(int *)(v25 + 44);
  *(_OWORD *)unint64_t v28 = xmmword_1E3E93F80;
  uint64_t v29 = v41;
  *a9 = v40;
  a9[1] = v29;
  uint64_t v30 = v43;
  a9[2] = v42;
  a9[3] = v30;
  a9[4] = a5;
  uint64_t v50 = v44;
  uint64_t v51 = v45;
  id v31 = a5;
  sub_1E3E774C0();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v32(v21, (uint64_t)a8, v16);
  v32(v39, (uint64_t)v21, v16);
  sub_1E3E774C0();
  unint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
  v33(v21, v16);
  LOBYTE(v50) = v46;
  sub_1E3E774C0();

  v33(a8, v16);
  sub_1E3DF44D4(v47, v37);
  uint64_t result = sub_1E3C634A4(*(void *)v28, *((void *)v28 + 1));
  uint64_t v35 = v49;
  *(void *)unint64_t v28 = v48;
  *((void *)v28 + 1) = v35;
  return result;
}

Swift::Void __swiftcall StationEntity.alignID(with:)(Swift::String with)
{
  object = with._object;
  uint64_t v3 = (void *)v1[3];
  if (v3)
  {
    uint64_t countAndFlagsBits = with._countAndFlagsBits;
    BOOL v5 = v1[2] == with._countAndFlagsBits && v3 == object;
    if (v5 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t *v1 = countAndFlagsBits;
      v1[1] = (uint64_t)object;
    }
  }
}

Swift::Void __swiftcall StationEntity.alignID(with:)(NSManagedObjectID with)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)v2[4];
  if (v8)
  {
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE4AD0);
    uint64_t v9 = with.super.isa;
    id v10 = v8;
    char v11 = sub_1E3E7DA80();

    if (v11)
    {
      id v12 = [(objc_class *)v9 URIRepresentation];
      sub_1E3E77C90();

      uint64_t v13 = sub_1E3E77C00();
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      *uint64_t v2 = v13;
      v2[1] = v15;
    }
  }
}

uint64_t sub_1E3DF3520@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24530 != -1) {
    swift_once();
  }
  *a1 = qword_1EAE291A8;

  return sub_1E3E775E0();
}

uint64_t sub_1E3DF3590()
{
  return sub_1E3E7CD30();
}

uint64_t sub_1E3DF35A4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t sub_1E3DF36E4(uint64_t a1)
{
  uint64_t v2 = sub_1E3DF4800((unint64_t *)&qword_1EAE290E0, (void (*)(uint64_t))type metadata accessor for StationEntity);

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t sub_1E3DF3760()
{
  return sub_1E3E77780();
}

uint64_t sub_1E3DF37A0(uint64_t a1)
{
  uint64_t v2 = sub_1E3DF4800(&qword_1EAE291F8, (void (*)(uint64_t))type metadata accessor for StationEntity);

  return MEMORY[0x1F40D4970](a1, v2);
}

uint64_t StationEntity.mediaRepresentation.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v2[6] = swift_task_alloc();
  uint64_t v3 = sub_1E3E77520();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = type metadata accessor for StationEntity();
  v2[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3DF393C, 0, 0);
}

uint64_t sub_1E3DF393C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + 24);
  sub_1E3C55C68(v1, v0[11]);
  uint64_t v3 = v0[11];
  if (!v2) {
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v7 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  swift_bridgeObjectRetain();
  sub_1E3DF5CA4(v3, (uint64_t (*)(void))type metadata accessor for StationEntity);
  sub_1E3E774B0();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, *MEMORY[0x1E4F18470], v7);
  id v10 = (uint64_t *)(v9 + *(int *)(v4 + 44));
  uint64_t v12 = *v10;
  unint64_t v11 = v10[1];
  uint64_t v13 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  sub_1E3C8103C(v12, v11);
  sub_1E3E77530();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1E3DF3AEC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return StationEntity.mediaRepresentation.getter(a1);
}

uint64_t StationEntity.prepare(asPartOf:)()
{
  *(void *)(v1 + 56) = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3DF3C4C;
  return MEMORY[0x1F4127FF8](v1 + 16, v2, v2);
}

uint64_t sub_1E3DF3C4C()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3DF3FC4, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[7];
    uint64_t v4 = type metadata accessor for StationEntity();
    v2[10] = v4;
    uint64_t v5 = v3 + *(int *)(v4 + 40);
    uint64_t v8 = (char *)&dword_1EAE294A0 + dword_1EAE294A0;
    uint64_t v6 = (void *)swift_task_alloc();
    v2[11] = v6;
    void *v6 = v2;
    v6[1] = sub_1E3DF3E04;
    return ((uint64_t (*)(uint64_t, void *))v8)(v5, v2 + 2);
  }
}

uint64_t sub_1E3DF3E04(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1E3DF3FDC;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    uint64_t v7 = sub_1E3DF3F38;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3DF3F38()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v5 = v4 + *(int *)(v3 + 44);
  sub_1E3C634A4(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v1;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1E3DF3FC4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E3DF3FDC()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DF4040(uint64_t a1, uint64_t a2)
{
  v3[7] = v2;
  v3[8] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[9] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1E3DF4108;
  return MEMORY[0x1F4127FF8](v3 + 2, v4, v4);
}

uint64_t sub_1E3DF4108()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3DF43E8, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[7] + *(int *)(v2[8] + 40);
    uint64_t v6 = (char *)&dword_1EAE294A0 + dword_1EAE294A0;
    uint64_t v4 = (void *)swift_task_alloc();
    v2[11] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1E3DF42B4;
    return ((uint64_t (*)(uint64_t, void *))v6)(v3, v2 + 2);
  }
}

uint64_t sub_1E3DF42B4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1E3DF3FDC;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    uint64_t v7 = sub_1E3DF4400;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3DF43E8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E3DF4400()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v5 = v4 + *(int *)(v3 + 44);
  sub_1E3C634A4(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v1;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t type metadata accessor for StationEntity()
{
  uint64_t result = qword_1EBFE3178;
  if (!qword_1EBFE3178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3DF44D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3DF453C()
{
  return sub_1E3DF4800(&qword_1EAE291D0, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF4584()
{
  return sub_1E3DF4800(&qword_1EAE291D8, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF45CC()
{
  return sub_1E3DF4800(&qword_1EAE291E0, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF4614()
{
  return sub_1E3DF4800(&qword_1EAE291E8, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF465C()
{
  return sub_1E3DF4800(&qword_1EAE291F0, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF46A4()
{
  return sub_1E3DF4800(&qword_1EAE29130, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF46EC()
{
  return sub_1E3DF4800(&qword_1EAE291F8, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF4734()
{
  return sub_1E3C10DE8(&qword_1EAE29200, &qword_1EAE29208);
}

uint64_t sub_1E3DF4770()
{
  return sub_1E3DF4800((unint64_t *)&unk_1EAE29210, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF47B8()
{
  return sub_1E3DF4800((unint64_t *)&qword_1EAE290E0, (void (*)(uint64_t))type metadata accessor for StationEntity);
}

uint64_t sub_1E3DF4800(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3DF4848@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3DF4884()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3DF48C0()
{
  return sub_1E3E774B0();
}

uint64_t sub_1E3DF48E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DF4924()
{
  return sub_1E3E774C0();
}

uint64_t *initializeBufferWithCopyOfBuffer for StationEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v8 = (void *)a2[4];
    uint64_t v7 = a2[5];
    a1[4] = (uint64_t)v8;
    a1[5] = v7;
    uint64_t v9 = a2[7];
    uint64_t v10 = *(int *)(a3 + 40);
    __dst = (uint64_t *)((char *)a1 + v10);
    unint64_t v11 = (uint64_t *)((char *)a2 + v10);
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v12 = (int *)sub_1E3E78740();
    uint64_t v54 = *((void *)v12 - 1);
    unsigned __int8 v55 = *(unsigned int (**)(void *, uint64_t, int *))(v54 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v8;
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    if (v55(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = v11[1];
      void *__dst = *v11;
      __dst[1] = v16;
      int v17 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        *((_OWORD *)__dst + 1) = *((_OWORD *)v11 + 1);
        *((unsigned char *)__dst + 32) = *((unsigned char *)v11 + 32);
      }
      else
      {
        uint64_t v18 = v11[2];
        uint64_t v19 = v11[3];
        sub_1E3C2B454(v18, v19, v17);
        __dst[2] = v18;
        __dst[3] = v19;
        *((unsigned char *)__dst + 32) = v17;
      }
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(v11 + 5);
      uint64_t v20 = (id *)(v11 + 7);
      int v21 = *((unsigned __int8 *)v11 + 64);
      if (v21 == 255)
      {
        __dst[7] = *v20;
        *((unsigned char *)__dst + 64) = *((unsigned char *)v11 + 64);
      }
      else
      {
        id v22 = *v20;
        sub_1E3C2B46C(*v20, *((unsigned char *)v11 + 64));
        __dst[7] = v22;
        *((unsigned char *)__dst + 64) = v21;
      }
      uint64_t v23 = (id *)(v11 + 9);
      int v24 = *((unsigned __int8 *)v11 + 80);
      if (v24 == 255)
      {
        __dst[9] = *v23;
        *((unsigned char *)__dst + 80) = *((unsigned char *)v11 + 80);
      }
      else
      {
        id v25 = *v23;
        sub_1E3C2B46C(*v23, *((unsigned char *)v11 + 80));
        __dst[9] = v25;
        *((unsigned char *)__dst + 80) = v24;
      }
      uint64_t v26 = (id *)(v11 + 11);
      int v27 = *((unsigned __int8 *)v11 + 96);
      if (v27 == 255)
      {
        __dst[11] = *v26;
        *((unsigned char *)__dst + 96) = *((unsigned char *)v11 + 96);
      }
      else
      {
        id v28 = *v26;
        sub_1E3C2B46C(*v26, *((unsigned char *)v11 + 96));
        __dst[11] = v28;
        *((unsigned char *)__dst + 96) = v27;
      }
      uint64_t v29 = (id *)(v11 + 13);
      int v30 = *((unsigned __int8 *)v11 + 112);
      if (v30 == 255)
      {
        __dst[13] = *v29;
        *((unsigned char *)__dst + 112) = *((unsigned char *)v11 + 112);
      }
      else
      {
        id v31 = *v29;
        sub_1E3C2B46C(*v29, *((unsigned char *)v11 + 112));
        __dst[13] = v31;
        *((unsigned char *)__dst + 112) = v30;
      }
      uint64_t v32 = (id *)(v11 + 15);
      int v33 = *((unsigned __int8 *)v11 + 128);
      if (v33 == 255)
      {
        __dst[15] = *v32;
        *((unsigned char *)__dst + 128) = *((unsigned char *)v11 + 128);
      }
      else
      {
        id v34 = *v32;
        sub_1E3C2B46C(*v32, *((unsigned char *)v11 + 128));
        __dst[15] = v34;
        *((unsigned char *)__dst + 128) = v33;
      }
      *((unsigned char *)__dst + 129) = *((unsigned char *)v11 + 129);
      uint64_t v35 = v12[11];
      uint64_t v36 = (char *)__dst + v35;
      uint64_t v37 = (char *)v11 + v35;
      uint64_t v38 = sub_1E3E78630();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = v12[12];
      uint64_t v40 = (void *)((char *)__dst + v39);
      uint64_t v41 = (void *)((char *)v11 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      *((unsigned char *)__dst + v12[13]) = *((unsigned char *)v11 + v12[13]);
      *((unsigned char *)__dst + v12[14]) = *((unsigned char *)v11 + v12[14]);
      *((unsigned char *)__dst + v12[15]) = *((unsigned char *)v11 + v12[15]);
      uint64_t v43 = v12[16];
      uint64_t v44 = (void *)((char *)__dst + v43);
      uint64_t v45 = (void *)((char *)v11 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      uint64_t v47 = *(void (**)(void *, void, uint64_t, int *))(v54 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(__dst, 0, 1, v12);
    }
    uint64_t v48 = *(int *)(a3 + 44);
    uint64_t v49 = (char *)v3 + v48;
    uint64_t v50 = (char *)a2 + v48;
    unint64_t v51 = *((void *)v50 + 1);
    if (v51 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    }
    else
    {
      uint64_t v52 = *(void *)v50;
      sub_1E3C14F74(*(void *)v50, *((void *)v50 + 1));
      *(void *)uint64_t v49 = v52;
      *((void *)v49 + 1) = v51;
    }
  }
  return v3;
}

uint64_t destroy for StationEntity(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1E3E78740();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    int v7 = *(unsigned __int8 *)(v4 + 32);
    if (v7 != 255) {
      sub_1E3C2B7BC(*(void *)(v4 + 16), *(void *)(v4 + 24), v7);
    }
    int v8 = *(unsigned __int8 *)(v4 + 64);
    if (v8 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 56), v8);
    }
    int v9 = *(unsigned __int8 *)(v4 + 80);
    if (v9 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 72), v9);
    }
    int v10 = *(unsigned __int8 *)(v4 + 96);
    if (v10 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 88), v10);
    }
    int v11 = *(unsigned __int8 *)(v4 + 112);
    if (v11 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 104), v11);
    }
    int v12 = *(unsigned __int8 *)(v4 + 128);
    if (v12 != 255) {
      sub_1E3C2B7D4(*(id *)(v4 + 120), v12);
    }
    uint64_t v13 = v4 + *(int *)(v5 + 44);
    uint64_t v14 = sub_1E3E78630();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v15 = (uint64_t *)(a1 + *(int *)(a2 + 44));
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15)
  {
    uint64_t v17 = *v15;
    return sub_1E3C2B7E8(v17, v16);
  }
  return result;
}

void *initializeWithCopy for StationEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  uint64_t v6 = a2[5];
  a1[4] = v5;
  a1[5] = v6;
  uint64_t v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 40);
  __dst = (void *)((char *)a1 + v8);
  int v9 = (void *)((char *)a2 + v8);
  a1[6] = a2[6];
  a1[7] = v7;
  int v10 = (int *)sub_1E3E78740();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v53 = *(unsigned int (**)(void *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v5;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v53(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = a1;
  }
  else
  {
    uint64_t v15 = v9[1];
    void *__dst = *v9;
    __dst[1] = v15;
    int v16 = *((unsigned __int8 *)v9 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)__dst + 1) = *((_OWORD *)v9 + 1);
      *((unsigned char *)__dst + 32) = *((unsigned char *)v9 + 32);
    }
    else
    {
      uint64_t v17 = v9[2];
      uint64_t v18 = v9[3];
      sub_1E3C2B454(v17, v18, v16);
      __dst[2] = v17;
      __dst[3] = v18;
      *((unsigned char *)__dst + 32) = v16;
    }
    uint64_t v14 = a1;
    *(_OWORD *)(__dst + 5) = *(_OWORD *)(v9 + 5);
    uint64_t v19 = (id *)(v9 + 7);
    int v20 = *((unsigned __int8 *)v9 + 64);
    if (v20 == 255)
    {
      __dst[7] = *v19;
      *((unsigned char *)__dst + 64) = *((unsigned char *)v9 + 64);
    }
    else
    {
      id v21 = *v19;
      sub_1E3C2B46C(*v19, *((unsigned char *)v9 + 64));
      __dst[7] = v21;
      *((unsigned char *)__dst + 64) = v20;
    }
    id v22 = (id *)(v9 + 9);
    int v23 = *((unsigned __int8 *)v9 + 80);
    if (v23 == 255)
    {
      __dst[9] = *v22;
      *((unsigned char *)__dst + 80) = *((unsigned char *)v9 + 80);
    }
    else
    {
      id v24 = *v22;
      sub_1E3C2B46C(*v22, *((unsigned char *)v9 + 80));
      __dst[9] = v24;
      *((unsigned char *)__dst + 80) = v23;
    }
    id v25 = (id *)(v9 + 11);
    int v26 = *((unsigned __int8 *)v9 + 96);
    if (v26 == 255)
    {
      __dst[11] = *v25;
      *((unsigned char *)__dst + 96) = *((unsigned char *)v9 + 96);
    }
    else
    {
      id v27 = *v25;
      sub_1E3C2B46C(*v25, *((unsigned char *)v9 + 96));
      __dst[11] = v27;
      *((unsigned char *)__dst + 96) = v26;
    }
    id v28 = (id *)(v9 + 13);
    int v29 = *((unsigned __int8 *)v9 + 112);
    if (v29 == 255)
    {
      __dst[13] = *v28;
      *((unsigned char *)__dst + 112) = *((unsigned char *)v9 + 112);
    }
    else
    {
      id v30 = *v28;
      sub_1E3C2B46C(*v28, *((unsigned char *)v9 + 112));
      __dst[13] = v30;
      *((unsigned char *)__dst + 112) = v29;
    }
    id v31 = (id *)(v9 + 15);
    int v32 = *((unsigned __int8 *)v9 + 128);
    if (v32 == 255)
    {
      __dst[15] = *v31;
      *((unsigned char *)__dst + 128) = *((unsigned char *)v9 + 128);
    }
    else
    {
      id v33 = *v31;
      sub_1E3C2B46C(*v31, *((unsigned char *)v9 + 128));
      __dst[15] = v33;
      *((unsigned char *)__dst + 128) = v32;
    }
    *((unsigned char *)__dst + 129) = *((unsigned char *)v9 + 129);
    uint64_t v34 = v10[11];
    uint64_t v35 = (char *)__dst + v34;
    uint64_t v36 = (char *)v9 + v34;
    uint64_t v37 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    uint64_t v38 = v10[12];
    uint64_t v39 = (void *)((char *)__dst + v38);
    uint64_t v40 = (void *)((char *)v9 + v38);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    *((unsigned char *)__dst + v10[13]) = *((unsigned char *)v9 + v10[13]);
    *((unsigned char *)__dst + v10[14]) = *((unsigned char *)v9 + v10[14]);
    *((unsigned char *)__dst + v10[15]) = *((unsigned char *)v9 + v10[15]);
    uint64_t v42 = v10[16];
    uint64_t v43 = (void *)((char *)__dst + v42);
    uint64_t v44 = (void *)((char *)v9 + v42);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(__dst, 0, 1, v10);
  }
  uint64_t v47 = *(int *)(a3 + 44);
  uint64_t v48 = (char *)v14 + v47;
  uint64_t v49 = (char *)a2 + v47;
  unint64_t v50 = *((void *)v49 + 1);
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  }
  else
  {
    uint64_t v51 = *(void *)v49;
    sub_1E3C14F74(*(void *)v49, *((void *)v49 + 1));
    *(void *)uint64_t v48 = v51;
    *((void *)v48 + 1) = v50;
  }
  return v14;
}

void *assignWithCopy for StationEntity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[4];
  uint64_t v7 = (void *)a2[4];
  a1[4] = v7;
  id v8 = v7;

  a1[5] = a2[5];
  sub_1E3E775E0();
  swift_release();
  a1[6] = a2[6];
  sub_1E3E775E0();
  swift_release();
  a1[7] = a2[7];
  sub_1E3E775E0();
  swift_release();
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (uint64_t)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  id v12 = (int *)sub_1E3E78740();
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      *(void *)uint64_t v10 = *(void *)v11;
      *(void *)(v10 + 8) = *((void *)v11 + 1);
      int v17 = v11[32];
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        long long v29 = *((_OWORD *)v11 + 1);
        *(unsigned char *)(v10 + 32) = v11[32];
        *(_OWORD *)(v10 + 16) = v29;
      }
      else
      {
        uint64_t v18 = *((void *)v11 + 2);
        uint64_t v19 = *((void *)v11 + 3);
        sub_1E3C2B454(v18, v19, v17);
        *(void *)(v10 + 16) = v18;
        *(void *)(v10 + 24) = v19;
        *(unsigned char *)(v10 + 32) = v17;
      }
      *(void *)(v10 + 40) = *((void *)v11 + 5);
      *(void *)(v10 + 48) = *((void *)v11 + 6);
      id v30 = (id *)(v11 + 56);
      int v31 = v11[64];
      if (v31 == 255)
      {
        id v33 = *v30;
        *(unsigned char *)(v10 + 64) = v11[64];
        *(void *)(v10 + 56) = v33;
      }
      else
      {
        id v32 = *v30;
        sub_1E3C2B46C(*v30, v11[64]);
        *(void *)(v10 + 56) = v32;
        *(unsigned char *)(v10 + 64) = v31;
      }
      uint64_t v34 = (id *)(v11 + 72);
      int v35 = v11[80];
      if (v35 == 255)
      {
        id v37 = *v34;
        *(unsigned char *)(v10 + 80) = v11[80];
        *(void *)(v10 + 72) = v37;
      }
      else
      {
        id v36 = *v34;
        sub_1E3C2B46C(*v34, v11[80]);
        *(void *)(v10 + 72) = v36;
        *(unsigned char *)(v10 + 80) = v35;
      }
      uint64_t v38 = (id *)(v11 + 88);
      int v39 = v11[96];
      if (v39 == 255)
      {
        id v41 = *v38;
        *(unsigned char *)(v10 + 96) = v11[96];
        *(void *)(v10 + 88) = v41;
      }
      else
      {
        id v40 = *v38;
        sub_1E3C2B46C(*v38, v11[96]);
        *(void *)(v10 + 88) = v40;
        *(unsigned char *)(v10 + 96) = v39;
      }
      uint64_t v42 = (id *)(v11 + 104);
      int v43 = v11[112];
      if (v43 == 255)
      {
        id v45 = *v42;
        *(unsigned char *)(v10 + 112) = v11[112];
        *(void *)(v10 + 104) = v45;
      }
      else
      {
        id v44 = *v42;
        sub_1E3C2B46C(*v42, v11[112]);
        *(void *)(v10 + 104) = v44;
        *(unsigned char *)(v10 + 112) = v43;
      }
      uint64_t v46 = (id *)(v11 + 120);
      int v47 = v11[128];
      if (v47 == 255)
      {
        id v49 = *v46;
        *(unsigned char *)(v10 + 128) = v11[128];
        *(void *)(v10 + 120) = v49;
      }
      else
      {
        id v48 = *v46;
        sub_1E3C2B46C(*v46, v11[128]);
        *(void *)(v10 + 120) = v48;
        *(unsigned char *)(v10 + 128) = v47;
      }
      *(unsigned char *)(v10 + 129) = v11[129];
      uint64_t v50 = v12[11];
      uint64_t v51 = v10 + v50;
      uint64_t v52 = &v11[v50];
      uint64_t v53 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v12[12];
      unsigned __int8 v55 = (void *)(v10 + v54);
      uint64_t v56 = &v11[v54];
      *unsigned __int8 v55 = *(void *)v56;
      v55[1] = *((void *)v56 + 1);
      *(unsigned char *)(v10 + v12[13]) = v11[v12[13]];
      *(unsigned char *)(v10 + v12[14]) = v11[v12[14]];
      *(unsigned char *)(v10 + v12[15]) = v11[v12[15]];
      uint64_t v57 = v12[16];
      uint64_t v58 = (void *)(v10 + v57);
      uint64_t v59 = &v11[v57];
      *uint64_t v58 = *(void *)v59;
      v58[1] = *((void *)v59 + 1);
      id v60 = *(void (**)(uint64_t, void, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60(v10, 0, 1, v12);
      goto LABEL_68;
    }
LABEL_7:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_68;
  }
  if (v16)
  {
    sub_1E3DF5CA4(v10, MEMORY[0x1E4F915F0]);
    goto LABEL_7;
  }
  *(void *)uint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v21 = (long long *)(v10 + 16);
  id v22 = (long long *)(v11 + 16);
  int v23 = v11[32];
  if (*(unsigned __int8 *)(v10 + 32) == 255)
  {
    if (v23 == 255)
    {
      long long v64 = *v22;
      *(unsigned char *)(v10 + 32) = v11[32];
      *id v21 = v64;
    }
    else
    {
      uint64_t v61 = *((void *)v11 + 2);
      uint64_t v62 = *((void *)v11 + 3);
      sub_1E3C2B454(v61, v62, v11[32]);
      *(void *)(v10 + 16) = v61;
      *(void *)(v10 + 24) = v62;
      *(unsigned char *)(v10 + 32) = v23;
    }
  }
  else if (v23 == 255)
  {
    sub_1E3C2CB50(v10 + 16);
    char v63 = v11[32];
    *id v21 = *v22;
    *(unsigned char *)(v10 + 32) = v63;
  }
  else
  {
    uint64_t v24 = *((void *)v11 + 2);
    uint64_t v25 = *((void *)v11 + 3);
    sub_1E3C2B454(v24, v25, v11[32]);
    uint64_t v26 = *(void *)(v10 + 16);
    uint64_t v27 = *(void *)(v10 + 24);
    *(void *)(v10 + 16) = v24;
    *(void *)(v10 + 24) = v25;
    unsigned __int8 v28 = *(unsigned char *)(v10 + 32);
    *(unsigned char *)(v10 + 32) = v23;
    sub_1E3C2B7BC(v26, v27, v28);
  }
  *(void *)(v10 + 40) = *((void *)v11 + 5);
  *(void *)(v10 + 48) = *((void *)v11 + 6);
  unint64_t v65 = (id *)(v10 + 56);
  uint64_t v66 = (id *)(v11 + 56);
  int v67 = v11[64];
  if (*(unsigned __int8 *)(v10 + 64) == 255)
  {
    if (v67 == 255)
    {
      id v73 = *v66;
      *(unsigned char *)(v10 + 64) = v11[64];
      *unint64_t v65 = v73;
    }
    else
    {
      id v71 = *v66;
      sub_1E3C2B46C(*v66, v11[64]);
      *(void *)(v10 + 56) = v71;
      *(unsigned char *)(v10 + 64) = v67;
    }
  }
  else if (v67 == 255)
  {
    sub_1E3C2CBA4(v10 + 56);
    char v72 = v11[64];
    *unint64_t v65 = *v66;
    *(unsigned char *)(v10 + 64) = v72;
  }
  else
  {
    id v68 = *v66;
    sub_1E3C2B46C(*v66, v11[64]);
    char v69 = *(void **)(v10 + 56);
    *(void *)(v10 + 56) = v68;
    char v70 = *(unsigned char *)(v10 + 64);
    *(unsigned char *)(v10 + 64) = v67;
    sub_1E3C2B7D4(v69, v70);
  }
  uint64_t v74 = (id *)(v10 + 72);
  uint64_t v75 = (id *)(v11 + 72);
  int v76 = v11[80];
  if (*(unsigned __int8 *)(v10 + 80) == 255)
  {
    if (v76 == 255)
    {
      id v82 = *v75;
      *(unsigned char *)(v10 + 80) = v11[80];
      id *v74 = v82;
    }
    else
    {
      id v80 = *v75;
      sub_1E3C2B46C(*v75, v11[80]);
      *(void *)(v10 + 72) = v80;
      *(unsigned char *)(v10 + 80) = v76;
    }
  }
  else if (v76 == 255)
  {
    sub_1E3C2CBA4(v10 + 72);
    char v81 = v11[80];
    id *v74 = *v75;
    *(unsigned char *)(v10 + 80) = v81;
  }
  else
  {
    id v77 = *v75;
    sub_1E3C2B46C(*v75, v11[80]);
    uint64_t v78 = *(void **)(v10 + 72);
    *(void *)(v10 + 72) = v77;
    char v79 = *(unsigned char *)(v10 + 80);
    *(unsigned char *)(v10 + 80) = v76;
    sub_1E3C2B7D4(v78, v79);
  }
  long long v83 = (id *)(v10 + 88);
  uint64_t v84 = (id *)(v11 + 88);
  int v85 = v11[96];
  if (*(unsigned __int8 *)(v10 + 96) == 255)
  {
    if (v85 == 255)
    {
      id v91 = *v84;
      *(unsigned char *)(v10 + 96) = v11[96];
      *long long v83 = v91;
    }
    else
    {
      id v89 = *v84;
      sub_1E3C2B46C(*v84, v11[96]);
      *(void *)(v10 + 88) = v89;
      *(unsigned char *)(v10 + 96) = v85;
    }
  }
  else if (v85 == 255)
  {
    sub_1E3C2CBA4(v10 + 88);
    char v90 = v11[96];
    *long long v83 = *v84;
    *(unsigned char *)(v10 + 96) = v90;
  }
  else
  {
    id v86 = *v84;
    sub_1E3C2B46C(*v84, v11[96]);
    uint64_t v87 = *(void **)(v10 + 88);
    *(void *)(v10 + 88) = v86;
    char v88 = *(unsigned char *)(v10 + 96);
    *(unsigned char *)(v10 + 96) = v85;
    sub_1E3C2B7D4(v87, v88);
  }
  uint64_t v92 = (id *)(v10 + 104);
  BOOL v93 = (id *)(v11 + 104);
  int v94 = v11[112];
  if (*(unsigned __int8 *)(v10 + 112) == 255)
  {
    if (v94 == 255)
    {
      id v100 = *v93;
      *(unsigned char *)(v10 + 112) = v11[112];
      *uint64_t v92 = v100;
    }
    else
    {
      id v98 = *v93;
      sub_1E3C2B46C(*v93, v11[112]);
      *(void *)(v10 + 104) = v98;
      *(unsigned char *)(v10 + 112) = v94;
    }
  }
  else if (v94 == 255)
  {
    sub_1E3C2CBA4(v10 + 104);
    char v99 = v11[112];
    *uint64_t v92 = *v93;
    *(unsigned char *)(v10 + 112) = v99;
  }
  else
  {
    id v95 = *v93;
    sub_1E3C2B46C(*v93, v11[112]);
    long long v96 = *(void **)(v10 + 104);
    *(void *)(v10 + 104) = v95;
    char v97 = *(unsigned char *)(v10 + 112);
    *(unsigned char *)(v10 + 112) = v94;
    sub_1E3C2B7D4(v96, v97);
  }
  uint64_t v101 = (id *)(v10 + 120);
  uint64_t v102 = (id *)(v11 + 120);
  int v103 = v11[128];
  if (*(unsigned __int8 *)(v10 + 128) == 255)
  {
    if (v103 == 255)
    {
      id v109 = *v102;
      *(unsigned char *)(v10 + 128) = v11[128];
      *uint64_t v101 = v109;
    }
    else
    {
      id v107 = *v102;
      sub_1E3C2B46C(*v102, v11[128]);
      *(void *)(v10 + 120) = v107;
      *(unsigned char *)(v10 + 128) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_1E3C2CBA4(v10 + 120);
    char v108 = v11[128];
    *uint64_t v101 = *v102;
    *(unsigned char *)(v10 + 128) = v108;
  }
  else
  {
    id v104 = *v102;
    sub_1E3C2B46C(*v102, v11[128]);
    uint64_t v105 = *(void **)(v10 + 120);
    *(void *)(v10 + 120) = v104;
    char v106 = *(unsigned char *)(v10 + 128);
    *(unsigned char *)(v10 + 128) = v103;
    sub_1E3C2B7D4(v105, v106);
  }
  *(unsigned char *)(v10 + 129) = v11[129];
  uint64_t v110 = v12[11];
  uint64_t v111 = v10 + v110;
  unint64_t v112 = &v11[v110];
  uint64_t v113 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v113 - 8) + 24))(v111, v112, v113);
  uint64_t v114 = v12[12];
  uint64_t v115 = (void *)(v10 + v114);
  unint64_t v116 = &v11[v114];
  void *v115 = *(void *)v116;
  v115[1] = *((void *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + v12[13]) = v11[v12[13]];
  *(unsigned char *)(v10 + v12[14]) = v11[v12[14]];
  *(unsigned char *)(v10 + v12[15]) = v11[v12[15]];
  uint64_t v117 = v12[16];
  uint64_t v118 = (void *)(v10 + v117);
  uint64_t v119 = &v11[v117];
  void *v118 = *(void *)v119;
  v118[1] = *((void *)v119 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  uint64_t v120 = *(int *)(a3 + 44);
  uint64_t v121 = (void *)((char *)a1 + v120);
  uint64_t v122 = (void *)((char *)a2 + v120);
  unint64_t v123 = *(void *)((char *)a2 + v120 + 8);
  if (*(void *)((char *)a1 + v120 + 8) >> 60 != 15)
  {
    if (v123 >> 60 != 15)
    {
      uint64_t v125 = *v122;
      sub_1E3C14F74(v125, v123);
      uint64_t v126 = *v121;
      unint64_t v127 = v121[1];
      *uint64_t v121 = v125;
      v121[1] = v123;
      sub_1E3C2B7E8(v126, v127);
      return a1;
    }
    sub_1E3C2CC54((uint64_t)v121);
    goto LABEL_73;
  }
  if (v123 >> 60 == 15)
  {
LABEL_73:
    *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
    return a1;
  }
  uint64_t v124 = *v122;
  sub_1E3C14F74(v124, v123);
  *uint64_t v121 = v124;
  v121[1] = v123;
  return a1;
}

uint64_t sub_1E3DF5CA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for StationEntity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (_OWORD *)((char *)a1 + v8);
  uint64_t v10 = (_OWORD *)((char *)a2 + v8);
  uint64_t v11 = (int *)sub_1E3E78740();
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    long long v14 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v14;
    *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
    *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
    *((void *)v9 + 7) = *((void *)v10 + 7);
    *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
    *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
    *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
    *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
    *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
    *((unsigned char *)v9 + 129) = *((unsigned char *)v10 + 129);
    uint64_t v15 = v11[11];
    int v16 = (char *)v9 + v15;
    int v17 = (char *)v10 + v15;
    uint64_t v18 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
    *((unsigned char *)v9 + v11[13]) = *((unsigned char *)v10 + v11[13]);
    *((unsigned char *)v9 + v11[14]) = *((unsigned char *)v10 + v11[14]);
    *((unsigned char *)v9 + v11[15]) = *((unsigned char *)v10 + v11[15]);
    *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 44)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 44));
  return a1;
}

void *assignWithTake for StationEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)a1[4];
  a1[4] = a2[4];

  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (uint64_t)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)sub_1E3E78740();
  uint64_t v13 = *((void *)v12 - 1);
  long long v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      long long v17 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *(_OWORD *)(v10 + 16) = v17;
      *(unsigned char *)(v10 + 32) = v11[32];
      *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
      *(void *)(v10 + 56) = *((void *)v11 + 7);
      *(unsigned char *)(v10 + 64) = v11[64];
      *(_OWORD *)(v10 + 113) = *(_OWORD *)(v11 + 113);
      *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
      *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
      *(unsigned char *)(v10 + 129) = v11[129];
      uint64_t v18 = v12[11];
      uint64_t v19 = v10 + v18;
      uint64_t v20 = &v11[v18];
      uint64_t v21 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      *(_OWORD *)(v10 + v12[12]) = *(_OWORD *)&v11[v12[12]];
      *(unsigned char *)(v10 + v12[13]) = v11[v12[13]];
      *(unsigned char *)(v10 + v12[14]) = v11[v12[14]];
      *(unsigned char *)(v10 + v12[15]) = v11[v12[15]];
      *(_OWORD *)(v10 + v12[16]) = *(_OWORD *)&v11[v12[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1E3DF5CA4(v10, MEMORY[0x1E4F915F0]);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v10, v11, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = v30;
  swift_bridgeObjectRelease();
  int v31 = v11 + 16;
  int v32 = *(unsigned __int8 *)(v10 + 32);
  if (v32 != 255)
  {
    int v33 = v11[32];
    if (v33 != 255)
    {
      uint64_t v34 = *(void *)(v10 + 16);
      uint64_t v35 = *(void *)(v10 + 24);
      *(_OWORD *)(v10 + 16) = *v31;
      *(unsigned char *)(v10 + 32) = v33;
      sub_1E3C2B7BC(v34, v35, v32);
      goto LABEL_18;
    }
    sub_1E3C2CB50(v10 + 16);
  }
  *(_OWORD *)(v10 + 16) = *v31;
  *(unsigned char *)(v10 + 32) = v11[32];
LABEL_18:
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
  id v36 = v11 + 56;
  int v37 = *(unsigned __int8 *)(v10 + 64);
  if (v37 != 255)
  {
    int v38 = v11[64];
    if (v38 != 255)
    {
      int v39 = *(void **)(v10 + 56);
      *(void *)(v10 + 56) = *v36;
      *(unsigned char *)(v10 + 64) = v38;
      sub_1E3C2B7D4(v39, v37);
      goto LABEL_23;
    }
    sub_1E3C2CBA4(v10 + 56);
  }
  *(void *)(v10 + 56) = *v36;
  *(unsigned char *)(v10 + 64) = v11[64];
LABEL_23:
  id v40 = v11 + 72;
  int v41 = *(unsigned __int8 *)(v10 + 80);
  if (v41 != 255)
  {
    int v42 = v11[80];
    if (v42 != 255)
    {
      int v43 = *(void **)(v10 + 72);
      *(void *)(v10 + 72) = *v40;
      *(unsigned char *)(v10 + 80) = v42;
      sub_1E3C2B7D4(v43, v41);
      goto LABEL_28;
    }
    sub_1E3C2CBA4(v10 + 72);
  }
  *(void *)(v10 + 72) = *v40;
  *(unsigned char *)(v10 + 80) = v11[80];
LABEL_28:
  id v44 = v11 + 88;
  int v45 = *(unsigned __int8 *)(v10 + 96);
  if (v45 != 255)
  {
    int v46 = v11[96];
    if (v46 != 255)
    {
      int v47 = *(void **)(v10 + 88);
      *(void *)(v10 + 88) = *v44;
      *(unsigned char *)(v10 + 96) = v46;
      sub_1E3C2B7D4(v47, v45);
      goto LABEL_33;
    }
    sub_1E3C2CBA4(v10 + 88);
  }
  *(void *)(v10 + 88) = *v44;
  *(unsigned char *)(v10 + 96) = v11[96];
LABEL_33:
  id v48 = v11 + 104;
  int v49 = *(unsigned __int8 *)(v10 + 112);
  if (v49 != 255)
  {
    int v50 = v11[112];
    if (v50 != 255)
    {
      uint64_t v51 = *(void **)(v10 + 104);
      *(void *)(v10 + 104) = *v48;
      *(unsigned char *)(v10 + 112) = v50;
      sub_1E3C2B7D4(v51, v49);
      goto LABEL_38;
    }
    sub_1E3C2CBA4(v10 + 104);
  }
  *(void *)(v10 + 104) = *v48;
  *(unsigned char *)(v10 + 112) = v11[112];
LABEL_38:
  uint64_t v52 = v11 + 120;
  int v53 = *(unsigned __int8 *)(v10 + 128);
  if (v53 == 255)
  {
LABEL_42:
    *(void *)(v10 + 120) = *v52;
    *(unsigned char *)(v10 + 128) = v11[128];
    goto LABEL_43;
  }
  int v54 = v11[128];
  if (v54 == 255)
  {
    sub_1E3C2CBA4(v10 + 120);
    goto LABEL_42;
  }
  unsigned __int8 v55 = *(void **)(v10 + 120);
  *(void *)(v10 + 120) = *v52;
  *(unsigned char *)(v10 + 128) = v54;
  sub_1E3C2B7D4(v55, v53);
LABEL_43:
  *(unsigned char *)(v10 + 129) = v11[129];
  uint64_t v56 = v12[11];
  uint64_t v57 = v10 + v56;
  uint64_t v58 = &v11[v56];
  uint64_t v59 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v59 - 8) + 40))(v57, v58, v59);
  uint64_t v60 = v12[12];
  uint64_t v61 = (void *)(v10 + v60);
  uint64_t v62 = &v11[v60];
  uint64_t v64 = *(void *)v62;
  uint64_t v63 = *((void *)v62 + 1);
  *uint64_t v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + v12[13]) = v11[v12[13]];
  *(unsigned char *)(v10 + v12[14]) = v11[v12[14]];
  *(unsigned char *)(v10 + v12[15]) = v11[v12[15]];
  uint64_t v65 = v12[16];
  uint64_t v66 = (void *)(v10 + v65);
  int v67 = &v11[v65];
  uint64_t v69 = *(void *)v67;
  uint64_t v68 = *((void *)v67 + 1);
  *uint64_t v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v23 = *(int *)(a3 + 44);
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  unint64_t v26 = *(void *)((char *)a1 + v23 + 8);
  if (v26 >> 60 != 15)
  {
    unint64_t v27 = v25[1];
    if (v27 >> 60 != 15)
    {
      uint64_t v28 = *v24;
      *uint64_t v24 = *v25;
      v24[1] = v27;
      sub_1E3C2B7E8(v28, v26);
      return a1;
    }
    sub_1E3C2CC54((uint64_t)v24);
  }
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  return a1;
}

uint64_t getEnumTagSinglePayload for StationEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3DF647C);
}

uint64_t sub_1E3DF647C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3DF6544);
}

uint64_t sub_1E3DF6544(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1E3DF65F0()
{
  sub_1E3DF66B4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1E3DF66B4()
{
  if (!qword_1EBFE4248)
  {
    sub_1E3E78740();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE4248);
    }
  }
}

uint64_t ChannelEntity.ChannelEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  *a1 = result;
  return result;
}

uint64_t ChannelEntity.ChannelEntityQuery.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t ChannelEntity.ChannelEntityQuery.objectGraph.setter()
{
  return swift_release();
}

void (*ChannelEntity.ChannelEntityQuery.objectGraph.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34D58;
}

uint64_t ChannelEntity.ChannelEntityQuery.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t ChannelEntity.ChannelEntityQuery.predicate(forAdamIDs:)(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1E3CC7660(0, v1, 0);
    uint64_t v2 = v22;
    uint64_t result = sub_1E3DE3F98(a1);
    uint64_t v5 = result;
    uint64_t v7 = v6;
    char v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_13;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_14;
      }
      sub_1E3E7A530();
      sub_1E3C340DC();
      uint64_t v10 = sub_1E3E7DC90();
      uint64_t v12 = v11;
      unint64_t v14 = *(void *)(v2 + 16);
      unint64_t v13 = *(void *)(v2 + 24);
      uint64_t v15 = v2;
      if (v14 >= v13 >> 1)
      {
        sub_1E3CC7660(v13 > 1, v14 + 1, 1);
        uint64_t v15 = v2;
      }
      *(void *)(v15 + 16) = v14 + 1;
      unint64_t v16 = v15 + 16 * v14;
      *(void *)(v16 + 32) = v10;
      *(void *)(v16 + 40) = v12;
      uint64_t result = sub_1E3DE403C(v5, v7, v9 & 1, a1);
      uint64_t v5 = result;
      uint64_t v7 = v17;
      char v9 = v18 & 1;
      --v1;
      uint64_t v2 = v15;
      if (!v1)
      {
        sub_1E3D15688(result, v17, v18 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    uint64_t v19 = self;
    sub_1E3C504EC(v2);
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)sub_1E3E7D300();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v19, sel_predicateForChannelStoreIds_, v20);

    return (uint64_t)v21;
  }
  return result;
}

id ChannelEntity.ChannelEntityQuery.predicate(forUuids:)()
{
  id v0 = objc_msgSend(self, sel_falsePredicate);

  return v0;
}

uint64_t ChannelEntity.ChannelEntityQuery.suggestedEntities()()
{
  uint64_t v2 = sub_1E3E7D8E0();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = sub_1E3E7D1E0();
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v0;
  v1[11] = v4;
  v1[12] = v5;
  return MEMORY[0x1F4188298](sub_1E3DF6BE4, 0, 0);
}

uint64_t sub_1E3DF6BE4()
{
  sub_1E3E775E0();
  sub_1E3E772F0();
  swift_release();
  v0[13] = v0[3];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[14] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3DF6CCC;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3DF6CCC()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3DF7588;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3DF6DE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3DF6DE8()
{
  v0[16] = v0[2];
  uint64_t ObjectType = swift_getObjectType();
  sub_1E3C17C5C();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[17] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3DF6EB0;
  uint64_t v3 = v0[11];
  return MEMORY[0x1F4145A40](v3, ObjectType);
}

uint64_t sub_1E3DF6EB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 72);
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1E3DF702C, 0, 0);
}

uint64_t sub_1E3DF702C()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = swift_allocObject();
  v0[19] = v5;
  *(void *)(v5 + 16) = v1;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4F1BD78], v4);
  id v6 = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[20] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29238);
  v0[21] = v8;
  *uint64_t v7 = v0;
  v7[1] = sub_1E3DF7164;
  uint64_t v9 = v0[8];
  return MEMORY[0x1F40D7080](v0 + 4, v9, sub_1E3DF803C, v5, v8);
}

uint64_t sub_1E3DF7164()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1E3DF7600;
  }
  else {
    uint64_t v5 = sub_1E3DF72F8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3DF72F8()
{
  uint64_t v1 = v0[4];
  v0[23] = v1;
  v0[5] = v1;
  sub_1E3E775E0();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[24] = v2;
  unint64_t v3 = sub_1E3DF8104();
  *uint64_t v2 = v0;
  v2[1] = sub_1E3DF73CC;
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[12];
  return MEMORY[0x1F4145920](&unk_1EAE29248, v5, v4, v3);
}

uint64_t sub_1E3DF73CC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3DF7678;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v4 + 208) = a1;
    uint64_t v5 = sub_1E3DF7508;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3DF7508()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 208);
  return v1(v2);
}

uint64_t sub_1E3DF7588()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DF7600()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DF7678()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1E3DF7708(uint64_t *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = type metadata accessor for ChannelEntity();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (void *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E7CD30();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v7 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1E3E8A550;
  id v10 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v11 = (void *)sub_1E3E7CCF0();
  id v12 = objc_msgSend(v10, sel_initWithKey_ascending_, v11, 1);

  *(void *)(v9 + 32) = v12;
  uint64_t v26 = v9;
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EAE292D0);
  unint64_t v13 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSortDescriptors_, v13);

  sub_1E3C12B10(0, &qword_1EAE29600);
  unint64_t v14 = sub_1E3E7D900();
  if (v1)
  {

    return;
  }
  unint64_t v15 = v14;
  if (!(v14 >> 62))
  {
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v17 = v25;
    if (v16) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();

    *uint64_t v17 = MEMORY[0x1E4FBC860];
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  uint64_t v17 = v25;
  if (!v16) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1E3CC78EC(0, v16 & ~(v16 >> 63), 0);
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v23[1] = 0;
    id v24 = v8;
    uint64_t v18 = 0;
    uint64_t v19 = v26;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x1E4E77720](v18, v15);
      }
      else {
        id v20 = *(id *)(v15 + 8 * v18 + 32);
      }
      ChannelEntity.init(model:)(v20, v5);
      uint64_t v26 = v19;
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1E3CC78EC(v21 > 1, v22 + 1, 1);
        uint64_t v19 = v26;
      }
      ++v18;
      *(void *)(v19 + 16) = v22 + 1;
      sub_1E3DF83E4((uint64_t)v5, v19+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v22);
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();

    *uint64_t v25 = v19;
  }
}

uint64_t sub_1E3DF7A78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x1F4188298](sub_1E3DF7A98, 0, 0);
}

uint64_t sub_1E3DF7A98()
{
  sub_1E3E775E0();
  sub_1E3E772F0();
  swift_release();
  uint64_t v1 = v0[2];
  v0[5] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3DF7B5C;
  return ChannelEntity.prepare(asPartOf:)(v1);
}

uint64_t sub_1E3DF7B5C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3DF7C98, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1E3DF7C98()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3DF7CFC(uint64_t a1)
{
  return ChannelEntity.ChannelEntityQuery.predicate(forAdamIDs:)(a1);
}

id sub_1E3DF7D14()
{
  id v0 = objc_msgSend(self, sel_falsePredicate);

  return v0;
}

uint64_t sub_1E3DF7D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE29608 + dword_1EAE29608);
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  void *v6 = v3;
  v6[1] = sub_1E3C856F4;
  return v8(a2, a3);
}

uint64_t sub_1E3DF7E0C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE295C0 + dword_1EAE295C0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C85CD4;
  return v7(a1, v4);
}

uint64_t sub_1E3DF7EC0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C8CF14;
  return ChannelEntity.ChannelEntityQuery.suggestedEntities()();
}

uint64_t sub_1E3DF7F50(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1E3DE8034();
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C19DC4;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t sub_1E3DF8004()
{
  return swift_deallocObject();
}

void sub_1E3DF803C(uint64_t *a1@<X8>)
{
}

uint64_t sub_1E3DF8058(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1E3C19DC4;
  v4[3] = a1;
  v4[4] = v1;
  return MEMORY[0x1F4188298](sub_1E3DF7A98, 0, 0);
}

unint64_t sub_1E3DF8104()
{
  unint64_t result = qword_1EAE29250;
  if (!qword_1EAE29250)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE29238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29250);
  }
  return result;
}

uint64_t sub_1E3DF8160()
{
  return sub_1E3DA3C3C(&qword_1EAE28548);
}

uint64_t sub_1E3DF8194()
{
  return sub_1E3DA3C3C(&qword_1EAE29260);
}

uint64_t sub_1E3DF81C8()
{
  return sub_1E3DA3C3C(&qword_1EAE29268);
}

unint64_t sub_1E3DF8200()
{
  unint64_t result = qword_1EAE29280;
  if (!qword_1EAE29280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29280);
  }
  return result;
}

unint64_t sub_1E3DF8258()
{
  unint64_t result = qword_1EAE29288[0];
  if (!qword_1EAE29288[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE29288);
  }
  return result;
}

unint64_t sub_1E3DF82B0()
{
  unint64_t result = qword_1EAE292A0;
  if (!qword_1EAE292A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE292A0);
  }
  return result;
}

uint64_t sub_1E3DF8304()
{
  return sub_1E3DA3C3C(&qword_1EBFE2E58);
}

unint64_t sub_1E3DF833C()
{
  unint64_t result = qword_1EAE292B0[0];
  if (!qword_1EAE292B0[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE29238);
    sub_1E3DA3C3C(&qword_1EBFE2E58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE292B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelEntity.ChannelEntityQuery()
{
  return &type metadata for ChannelEntity.ChannelEntityQuery;
}

uint64_t sub_1E3DF83E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChannelEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ShowEntity.explicit.getter()
{
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  return v1;
}

uint64_t type metadata accessor for ShowEntity(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFE2F78);
}

uint64_t ShowEntity.preferredIdentifier()()
{
  unsigned __int8 v1 = *(void **)(v0 + 16);
  if (v1) {
    uint64_t v2 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v2 = *(void *)(v0 + 40);
  }
  id v3 = v1;
  return v2;
}

uint64_t sub_1E3DF84F0()
{
  uint64_t result = sub_1E3E7CD30();
  qword_1EAE292D8 = result;
  unk_1EAE292E0 = v1;
  return result;
}

uint64_t static ShowEntity.databaseEntityName.getter()
{
  if (qword_1EAE24538 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAE292D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1E3DF8588()
{
  uint64_t v0 = sub_1E3E78790();
  __swift_allocate_value_buffer(v0, qword_1EAE292E8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE292E8);
  uint64_t v2 = *MEMORY[0x1E4F91618];
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static ShowEntity.serverContentType.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24540 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E78790();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE292E8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3DF86B8()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  qword_1EAE29300 = result;
  return result;
}

uint64_t static ShowEntity.defaultQuery.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24548 != -1) {
    swift_once();
  }
  *a1 = qword_1EAE29300;

  return sub_1E3E775E0();
}

uint64_t static ShowEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t ShowEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F10);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1E3E77B60();
  uint64_t v7 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v8 = sub_1E3E7CCE0();
  MEMORY[0x1F4188790](v8 - 8);
  MEMORY[0x1F4188790](v9);
  sub_1E3E7CCD0();
  sub_1E3E7CCC0();
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  sub_1E3E7CCB0();
  swift_bridgeObjectRelease();
  sub_1E3E7CCC0();
  sub_1E3E77B50();
  sub_1E3E7CCD0();
  sub_1E3E7CCC0();
  sub_1E3E774B0();
  sub_1E3E7CCB0();
  swift_bridgeObjectRelease();
  sub_1E3E7CCC0();
  sub_1E3E77B50();
  (*(void (**)(char *, void, uint64_t, void))(v7 + 56))(v6, 0, 1, v12[0]);
  uint64_t v10 = sub_1E3E777B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  return sub_1E3E777C0();
}

uint64_t ShowEntity.title.getter()
{
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  return v1;
}

uint64_t ShowEntity.provider.getter()
{
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  return v1;
}

uint64_t ShowEntity.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *ShowEntity.objectID.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t ShowEntity.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShowEntity.adamID.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ShowEntity.feedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowEntity(0);
  return sub_1E3C34078(v1 + *(int *)(v3 + 32), a1, &qword_1EBFE6070);
}

uint64_t ShowEntity.explicit.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ShowEntity.explicit.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$explicit.getter()
{
  return sub_1E3E774D0();
}

uint64_t sub_1E3DF8E0C()
{
  return sub_1E3E774C0();
}

uint64_t ShowEntity.title.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ShowEntity.title.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$title.getter()
{
  return sub_1E3E774D0();
}

uint64_t ShowEntity.description.getter()
{
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  return v1;
}

uint64_t sub_1E3DF8F90()
{
  return sub_1E3E774C0();
}

uint64_t ShowEntity.description.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ShowEntity.description.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$description.getter()
{
  return sub_1E3E774D0();
}

uint64_t sub_1E3DF90D4()
{
  return sub_1E3E774C0();
}

uint64_t ShowEntity.provider.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ShowEntity.provider.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$provider.getter()
{
  return sub_1E3E774D0();
}

uint64_t ShowEntity.lastDatePlayed.getter()
{
  return sub_1E3E774B0();
}

uint64_t sub_1E3DF9250(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C34078(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_1EBFDEDF0);
  type metadata accessor for ShowEntity(0);
  sub_1E3C34078((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  return sub_1E3C10CE0((uint64_t)v7, (uint64_t *)&unk_1EBFDEDF0);
}

uint64_t ShowEntity.lastDatePlayed.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShowEntity(0);
  sub_1E3C34078(a1, (uint64_t)v4, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  return sub_1E3C10CE0(a1, (uint64_t *)&unk_1EBFDEDF0);
}

uint64_t (*ShowEntity.lastDatePlayed.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$lastDatePlayed.getter()
{
  return sub_1E3E774D0();
}

uint64_t ShowEntity.followed.getter()
{
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  return v1;
}

uint64_t ShowEntity.followed.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ShowEntity.followed.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$followed.getter()
{
  return sub_1E3E774D0();
}

uint64_t ShowEntity.notificationsEnabled.getter()
{
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  return v1;
}

uint64_t ShowEntity.notificationsEnabled.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ShowEntity.notificationsEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$notificationsEnabled.getter()
{
  return sub_1E3E774D0();
}

uint64_t ShowEntity.hidePlayedEpisodes.getter()
{
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  return v1;
}

uint64_t ShowEntity.hidePlayedEpisodes.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ShowEntity.hidePlayedEpisodes.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$hidePlayedEpisodes.getter()
{
  return sub_1E3E774D0();
}

uint64_t ShowEntity.removePlayedDownloads.getter()
{
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  return v1;
}

uint64_t ShowEntity.removePlayedDownloads.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*ShowEntity.removePlayedDownloads.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ShowEntity(0);
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t ShowEntity.$removePlayedDownloads.getter()
{
  return sub_1E3E774D0();
}

uint64_t ShowEntity.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowEntity(0);
  return sub_1E3C34078(v1 + *(int *)(v3 + 72), a1, &qword_1EBFE4240);
}

uint64_t ShowEntity.artworkData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ShowEntity(0) + 76);
  uint64_t v2 = *(void *)v1;
  sub_1E3C8103C(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t ShowEntity.shareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowEntity(0);
  return sub_1E3C34078(v1 + *(int *)(v3 + 80), a1, &qword_1EBFE6070);
}

uint64_t ShowEntity.init(id:objectID:uuid:adamID:feedURL:explicit:title:description:provider:lastDatePlayed:followed:notificationsEnabled:hidePlayedEpisodes:removePlayedDownloads:artworkModel:artworkData:shareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, unsigned __int8 a18, unsigned __int8 a19, unsigned __int8 a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v83 = a8;
  uint64_t v80 = a7;
  id v78 = a6;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  char v70 = a3;
  uint64_t v73 = a2;
  uint64_t v72 = a1;
  uint64_t v93 = a23;
  uint64_t v94 = a24;
  uint64_t v91 = a21;
  uint64_t v92 = a22;
  int v89 = a19;
  int v90 = a20;
  int v87 = a17;
  int v88 = a18;
  uint64_t v85 = a14;
  uint64_t v86 = a15;
  uint64_t v81 = a12;
  uint64_t v82 = a13;
  uint64_t v79 = a11;
  uint64_t v76 = a10;
  uint64_t v77 = a16;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v84 = (uint64_t)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v69 = (uint64_t)&v60 - v28;
  uint64_t v29 = sub_1E3E77B60();
  MEMORY[0x1F4188790](v29 - 8);
  int v31 = (char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v32 = (int *)type metadata accessor for ShowEntity(0);
  uint64_t v71 = (uint64_t)a9 + v32[8];
  uint64_t v33 = v71;
  uint64_t v34 = sub_1E3E77D00();
  uint64_t v35 = *(void *)(v34 - 8);
  id v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
  uint64_t v68 = v35 + 56;
  v36(v33, 1, 1, v34);
  uint64_t v37 = v32[9];
  uint64_t v67 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F08);
  sub_1E3E77B40();
  *(void *)((char *)a9 + v37) = MEMORY[0x1E4E70E20](v31);
  uint64_t v38 = v32[10];
  uint64_t v66 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F00);
  sub_1E3E77B40();
  *(void *)((char *)a9 + v38) = MEMORY[0x1E4E70E10](v31);
  uint64_t v39 = v32[11];
  uint64_t v65 = v39;
  sub_1E3E77B40();
  *(void *)((char *)a9 + v39) = MEMORY[0x1E4E70E10](v31);
  uint64_t v40 = v32[12];
  sub_1E3E77B40();
  *(void *)((char *)a9 + v40) = MEMORY[0x1E4E70E10](v31);
  uint64_t v41 = v32[13];
  uint64_t v63 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2EF8);
  sub_1E3E77B40();
  *(void *)((char *)a9 + v41) = MEMORY[0x1E4E70E00](v31);
  uint64_t v42 = v32[14];
  uint64_t v64 = v42;
  sub_1E3E77B40();
  *(void *)((char *)a9 + v42) = MEMORY[0x1E4E70E20](v31);
  uint64_t v43 = v32[15];
  uint64_t v62 = v43;
  sub_1E3E77B40();
  *(void *)((char *)a9 + v43) = MEMORY[0x1E4E70E20](v31);
  uint64_t v44 = v32[16];
  uint64_t v60 = v44;
  sub_1E3E77B40();
  *(void *)((char *)a9 + v44) = MEMORY[0x1E4E70E20](v31);
  uint64_t v45 = v32[17];
  sub_1E3E77B40();
  *(void *)((char *)a9 + v45) = MEMORY[0x1E4E70E20](v31);
  uint64_t v61 = (uint64_t)a9 + v32[18];
  uint64_t v46 = v61;
  uint64_t v47 = sub_1E3E78740();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
  id v48 = (char *)a9 + v32[19];
  *(_OWORD *)id v48 = xmmword_1E3E93F80;
  uint64_t v49 = (uint64_t)a9 + v32[20];
  v36(v49, 1, 1, v34);
  uint64_t v50 = v73;
  *a9 = v72;
  a9[1] = v50;
  uint64_t v51 = v70;
  uint64_t v52 = v74;
  a9[2] = v70;
  a9[3] = v52;
  id v53 = v78;
  a9[4] = v75;
  a9[5] = v53;
  id v78 = v51;
  uint64_t v54 = v80;
  sub_1E3DE7004(v80, v71);
  LOBYTE(v95) = v83;
  sub_1E3E774C0();
  uint64_t v95 = v76;
  uint64_t v96 = v79;
  sub_1E3E774C0();
  uint64_t v95 = v81;
  uint64_t v96 = v82;
  sub_1E3E774C0();
  uint64_t v95 = v85;
  uint64_t v96 = v86;
  sub_1E3E774C0();
  uint64_t v55 = v77;
  uint64_t v56 = v69;
  sub_1E3C34078(v77, v69, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3C34078(v56, v84, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  sub_1E3C10CE0(v56, (uint64_t *)&unk_1EBFDEDF0);
  LOBYTE(v95) = v87;
  sub_1E3E774C0();
  LOBYTE(v95) = v88;
  sub_1E3E774C0();
  LOBYTE(v95) = v89;
  sub_1E3E774C0();
  LOBYTE(v95) = v90;
  sub_1E3E774C0();

  sub_1E3C10CE0(v55, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3C10CE0(v54, &qword_1EBFE6070);
  sub_1E3CDA16C(v91, v61, &qword_1EBFE4240);
  sub_1E3C634A4(*(void *)v48, *((void *)v48 + 1));
  uint64_t v58 = v93;
  uint64_t v57 = v94;
  *(void *)id v48 = v92;
  *((void *)v48 + 1) = v58;
  return sub_1E3CDA16C(v57, v49, &qword_1EBFE6070);
}

void ShowEntity.init(model:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v9 - 8);
  id v78 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v81 = (char *)&v61 - v12;
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v61 - v14;
  uint64_t v16 = sub_1E3E77D00();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v64 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v20 = MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)&v61 - v21;
  id v23 = objc_msgSend(a1, sel_objectID, v20);
  id v24 = objc_msgSend(v23, sel_URIRepresentation);

  sub_1E3E77C90();
  uint64_t v25 = sub_1E3E77C00();
  uint64_t v27 = v26;
  uint64_t v83 = v17;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  uint64_t v28 = (char *)objc_msgSend(a1, sel_objectID);
  id v29 = objc_msgSend(a1, sel_uuid);
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = sub_1E3E7CD30();
    uint64_t v77 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v77 = 0;
  }
  if (((unint64_t)objc_msgSend(a1, sel_storeCollectionId) & 0x8000000000000000) == 0)
  {
    uint64_t v79 = v27;
    uint64_t v80 = v25;
    uint64_t v76 = (void *)sub_1E3E7A530();
    id v33 = objc_msgSend(a1, sel_feedURL);
    if (v33)
    {
      uint64_t v34 = v33;
      sub_1E3E7CD30();

      swift_bridgeObjectRetain();
      sub_1E3E77CD0();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v15, 1, 1, v16);
    }
    uint64_t v35 = v78;
    int v75 = objc_msgSend(a1, sel_isExplicit);
    id v36 = objc_msgSend(a1, sel_title);
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = sub_1E3E7CD30();
      uint64_t v73 = v39;
      uint64_t v74 = v38;
    }
    else
    {
      uint64_t v73 = 0xE000000000000000;
      uint64_t v74 = 0;
    }
    id v40 = objc_msgSend(a1, sel_description);
    uint64_t v41 = sub_1E3E7CD30();
    uint64_t v71 = v42;
    uint64_t v72 = v41;

    id v43 = objc_msgSend(a1, sel_provider);
    if (v43)
    {
      uint64_t v44 = v43;
      uint64_t v45 = sub_1E3E7CD30();
      uint64_t v69 = v46;
      uint64_t v70 = v45;
    }
    else
    {
      uint64_t v69 = 0xE000000000000000;
      uint64_t v70 = 0;
    }
    id v78 = v28;
    objc_msgSend(a1, sel_lastDatePlayed);
    sub_1E3E77D70();
    uint64_t v47 = sub_1E3E77E20();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v8, 0, 1, v47);
    unsigned int v68 = objc_msgSend(a1, sel_subscribed);
    unsigned int v67 = objc_msgSend(a1, sel_notifications);
    objc_msgSend(a1, sel_hidesPlayedEpisodes);
    int v66 = MTPodcastHidesPlayedEpisodesResolved();
    unsigned int v65 = objc_msgSend(a1, sel_deletePlayedEpisodesResolvedValue);
    sub_1E3E7DB10();
    id v48 = objc_msgSend(a1, sel_bestAvailableStoreCleanURL);
    if (v48)
    {
      uint64_t v49 = v48;
      uint64_t v62 = v31;
      uint64_t v63 = v15;
      uint64_t v50 = v8;
      uint64_t v51 = v5;
      uint64_t v52 = v64;
      sub_1E3E77C90();

      uint64_t v53 = v83;
      uint64_t v54 = *(void (**)(void *, char *, uint64_t))(v83 + 32);
      v54(v35, v52, v16);
      uint64_t v55 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v53 + 56);
      v55(v35, 0, 1, v16);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v53 + 48))(v35, 1, v16) != 1)
      {
        uint64_t v59 = (char *)v35;
        uint64_t v60 = v81;
        v54(v81, v59, v16);
        v55(v60, 0, 1, v16);
        uint64_t v58 = (uint64_t)v60;
        uint64_t v5 = v51;
        uint64_t v8 = v50;
        uint64_t v31 = v62;
        unint64_t v15 = v63;
LABEL_23:
        ShowEntity.init(id:objectID:uuid:adamID:feedURL:explicit:title:description:provider:lastDatePlayed:followed:notificationsEnabled:hidePlayedEpisodes:removePlayedDownloads:artworkModel:artworkData:shareURL:)(v80, v79, v78, v31, v77, v76, (uint64_t)v15, v75, v82, v74, v73, v72, v71, v70, v69, (uint64_t)v8, v68, v67, v66,
          v65,
          (uint64_t)v5,
          0,
          0xF000000000000000,
          v58);

        return;
      }
      uint64_t v5 = v51;
      uint64_t v8 = v50;
      uint64_t v31 = v62;
      unint64_t v15 = v63;
    }
    else
    {
      uint64_t v55 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v83 + 56);
      v55(v35, 1, 1, v16);
    }
    id v56 = objc_msgSend(a1, sel_feedURL);
    if (v56)
    {
      uint64_t v57 = v56;
      sub_1E3E7CD30();

      swift_bridgeObjectRetain();
      uint64_t v58 = (uint64_t)v81;
      sub_1E3E77CD0();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v58 = (uint64_t)v81;
      v55(v81, 1, 1, v16);
    }
    sub_1E3C10CE0((uint64_t)v35, &qword_1EBFE6070);
    goto LABEL_23;
  }
  sub_1E3E7DF70();
  __break(1u);
}

void *ShowEntity.init(mediaObject:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v3 - 8);
  int v75 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E78630();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v74 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v78 = (uint64_t)&v64 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v77 = (uint64_t)&v64 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v64 - v16;
  MEMORY[0x1F4188790](v18);
  double v20 = (char *)&v64 - v19;
  double v22 = MEMORY[0x1F4188790](v21);
  id v24 = (char *)&v64 - v23;
  id v25 = objc_msgSend(a1, sel_podcastStoreId, v22);
  uint64_t v73 = v12;
  if (v25)
  {
    uint64_t v26 = v25;
    sub_1E3E7CD30();

    uint64_t v29 = sub_1E3E7A510();
    swift_bridgeObjectRelease();
    uint64_t result = self;
    if (v29 < 0)
    {
      __break(1u);
      return result;
    }
    id v31 = objc_msgSend(result, sel_storeCleanURLForAdamID_, v29);
    if (v31)
    {
      uint64_t v32 = v31;
      sub_1E3E77C90();

      uint64_t v33 = sub_1E3E77D00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v20, 0, 1, v33);
    }
    else
    {
      uint64_t v34 = sub_1E3E77D00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v20, 1, 1, v34);
    }
  }
  else
  {
    id v27 = objc_msgSend(a1, sel_resolvedFeedURL);
    if (v27)
    {
      uint64_t v28 = v27;
      sub_1E3E7CD30();

      swift_bridgeObjectRetain();
      sub_1E3E77CD0();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v35 = sub_1E3E77D00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v17, 1, 1, v35);
    }
    double v20 = v17;
  }
  uint64_t v36 = (uint64_t)v24;
  sub_1E3C24558((uint64_t)v20, (uint64_t)v24);
  id v37 = objc_msgSend(a1, sel_artworkTemplateURL);
  if (v37)
  {
    uint64_t v38 = v37;
    sub_1E3E7CD30();

    long long v79 = xmmword_1E3E8CEA0;
    long long v80 = 0u;
    memset(v81, 0, sizeof(v81));
    swift_bridgeObjectRetain();
    sub_1E3E78600();
    sub_1E3E78AC0();
    uint64_t v39 = v78;
    sub_1E3E78730();
    uint64_t v40 = sub_1E3E78740();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = sub_1E3E78740();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v78, 1, 1, v41);
  }
  id v42 = a1;
  uint64_t v43 = sub_1E3E79560();
  uint64_t v71 = v44;
  uint64_t v72 = v43;

  id v45 = v42;
  sub_1E3E79560();

  uint64_t v70 = (void *)sub_1E3E7A510();
  swift_bridgeObjectRelease();
  id v46 = objc_msgSend(v45, (SEL)&selRef_initWithURL_options_ + 6);
  if (v46)
  {
    uint64_t v47 = v46;
    sub_1E3E7CD30();

    swift_bridgeObjectRetain();
    sub_1E3E77CD0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v48 = sub_1E3E77D00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v77, 1, 1, v48);
  }
  int v69 = objc_msgSend(v45, sel_isExplicit);
  id v49 = objc_msgSend(v45, sel_title);
  if (v49)
  {
    uint64_t v50 = v49;
    uint64_t v68 = sub_1E3E7CD30();
    uint64_t v67 = v51;
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v67 = 0xE000000000000000;
  }
  id v52 = objc_msgSend(v45, sel_description);
  uint64_t v66 = sub_1E3E7CD30();
  uint64_t v65 = v53;

  id v54 = objc_msgSend(v45, sel_provider);
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = sub_1E3E7CD30();
    uint64_t v58 = v57;
  }
  else
  {
    uint64_t v56 = 0;
    uint64_t v58 = 0xE000000000000000;
  }
  uint64_t v59 = sub_1E3E77E20();
  uint64_t v60 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v75, 1, 1, v59);
  uint64_t v61 = v78;
  uint64_t v62 = v74;
  sub_1E3C34078(v78, v74, &qword_1EBFE4240);
  uint64_t v63 = (uint64_t)v73;
  sub_1E3C34078(v36, (uint64_t)v73, &qword_1EBFE6070);
  ShowEntity.init(id:objectID:uuid:adamID:feedURL:explicit:title:description:provider:lastDatePlayed:followed:notificationsEnabled:hidePlayedEpisodes:removePlayedDownloads:artworkModel:artworkData:shareURL:)(v72, v71, 0, 0, 0, v70, v77, v69, v76, v68, v67, v66, v65, v56, v58, v60, 0, 0, 0,
    0,
    v62,
    0,
    0xF000000000000000,
    v63);

  sub_1E3C10CE0(v61, &qword_1EBFE4240);
  return (void *)sub_1E3C10CE0(v36, &qword_1EBFE6070);
}

uint64_t sub_1E3DFAFD4@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24548 != -1) {
    swift_once();
  }
  *a1 = qword_1EAE29300;

  return sub_1E3E775E0();
}

uint64_t sub_1E3DFB044()
{
  if (qword_1EAE24538 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAE292D8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1E3DFB0AC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1E3DFB0DC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_1E3DFB104(uint64_t result, uint64_t a2)
{
  uint64_t v4 = v2[4];
  if (v4)
  {
    uint64_t v5 = result;
    BOOL v6 = v2[3] == result && v4 == a2;
    if (v6 || (uint64_t result = sub_1E3E7E150(), (result & 1) != 0))
    {
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      *id v2 = v5;
      v2[1] = a2;
    }
  }
  return result;
}

Swift::Void __swiftcall ShowEntity.alignID(with:)(Swift::String with)
{
  object = with._object;
  uint64_t v3 = (void *)v1[4];
  if (v3)
  {
    uint64_t countAndFlagsBits = with._countAndFlagsBits;
    BOOL v5 = v1[3] == with._countAndFlagsBits && v3 == object;
    if (v5 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t *v1 = countAndFlagsBits;
      v1[1] = (uint64_t)object;
    }
  }
}

Swift::Void __swiftcall ShowEntity.alignID(with:)(NSManagedObjectID with)
{
  id v2 = v1;
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)v2[2];
  if (v8)
  {
    sub_1E3D35350();
    uint64_t v9 = with.super.isa;
    id v10 = v8;
    char v11 = sub_1E3E7DA80();

    if (v11)
    {
      id v12 = [(objc_class *)v9 URIRepresentation];
      sub_1E3E77C90();

      uint64_t v13 = sub_1E3E77C00();
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      *id v2 = v13;
      v2[1] = v15;
    }
  }
}

uint64_t sub_1E3DFB340@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24540 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E78790();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE292E8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t ShowEntity.alignID(with:)(uint64_t result)
{
  if (v1[5] == result)
  {
    uint64_t v2 = v1;
    sub_1E3C340DC();
    uint64_t v3 = sub_1E3E7DC90();
    uint64_t v5 = v4;
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v3;
    v2[1] = v5;
  }
  return result;
}

uint64_t sub_1E3DFB454()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t sub_1E3DFB594(uint64_t a1)
{
  uint64_t v2 = sub_1E3DFCE68((unint64_t *)&qword_1EBFE2F38, (void (*)(uint64_t))type metadata accessor for ShowEntity);

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t sub_1E3DFB614(uint64_t a1)
{
  uint64_t v2 = sub_1E3DFCE68(&qword_1EBFE2F60, (void (*)(uint64_t))type metadata accessor for ShowEntity);

  return MEMORY[0x1F40D4970](a1, v2);
}

unint64_t static ShowEntity.CustomRepresentation.bundleIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t static ShowEntity.CustomRepresentation.typeIdentifier.getter()
{
  return 0x69746E45776F6853;
}

uint64_t ShowEntity.CustomRepresentation.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78280();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_1E3E782E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t ShowEntity.CustomRepresentation.init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78280();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  uint64_t v6 = sub_1E3E782E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t ShowEntity.CustomRepresentation.__deallocating_deinit()
{
  _s10PodcastsUI10ShowEntityV20CustomRepresentationCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1E3DFB8F8()
{
  return sub_1E3E78240();
}

uint64_t sub_1E3DFB91C()
{
  return sub_1E3E78250();
}

uint64_t sub_1E3DFB940()
{
  return sub_1E3E78270() & 1;
}

uint64_t sub_1E3DFB968()
{
  return sub_1E3E78260();
}

unint64_t sub_1E3DFB98C()
{
  return 0xD000000000000012;
}

uint64_t sub_1E3DFB9A8()
{
  return 0x69746E45776F6853;
}

uint64_t sub_1E3DFB9C4(uint64_t a1)
{
  uint64_t v3 = sub_1E3DFCE68(&qword_1EAE29350, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);

  return MEMORY[0x1F4108D40](a1, v1, v3);
}

uint64_t sub_1E3DFBA34()
{
  uint64_t v1 = sub_1E3DFCE68(&qword_1EAE29340, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);

  return MEMORY[0x1F4108AC8](v0, v1);
}

uint64_t sub_1E3DFBA94()
{
  return sub_1E3E782C0();
}

uint64_t sub_1E3DFBAB8(uint64_t a1)
{
  uint64_t v3 = sub_1E3DFCE68(&qword_1EAE29350, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);

  return MEMORY[0x1F4108D30](a1, v1, v3);
}

uint64_t sub_1E3DFBB28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E782A0();
  *a1 = result;
  return result;
}

uint64_t sub_1E3DFBB50()
{
  return sub_1E3E782B0();
}

uint64_t sub_1E3DFBB74()
{
  return sub_1E3E78290();
}

uint64_t ShowEntity.debugDescription.getter()
{
  sub_1E3E7DDD0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  id v1 = *(id *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29308);
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26D8);
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3C340DC();
  sub_1E3E7DC90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  type metadata accessor for ShowEntity(0);
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  return 0;
}

uint64_t ShowEntity.mediaRepresentation.getter(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v2[9] = swift_task_alloc();
  uint64_t v3 = sub_1E3E77520();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for ShowEntity(0);
  v2[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3DFC074, 0, 0);
}

uint64_t sub_1E3DFC074()
{
  uint64_t v1 = *(void *)(v0[8] + 40);
  if (sub_1E3E7A520())
  {
    uint64_t v2 = v0[8];
    uint64_t v3 = *(void *)(v2 + 32);
    sub_1E3C3A130(v2, v0[14]);
    uint64_t v4 = v0[14];
    if (!v3) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_1E3DFF558(v4, type metadata accessor for ShowEntity);
  }
  else
  {
    v0[6] = v1;
    sub_1E3C340DC();
    sub_1E3E7DC90();
  }
  uint64_t v5 = v0[13];
  uint64_t v7 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[10];
  uint64_t v10 = v0[8];
  sub_1E3E774B0();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, *MEMORY[0x1E4F18458], v9);
  sub_1E3C8103C(*(void *)(v10 + *(int *)(v5 + 76)), *(void *)(v10 + *(int *)(v5 + 76) + 8));
  sub_1E3E774B0();
  uint64_t v11 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  sub_1E3E77530();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1E3DFC278(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return ShowEntity.mediaRepresentation.getter(a1);
}

uint64_t ShowEntity.prepare(asPartOf:)()
{
  *(void *)(v1 + 56) = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3DFC3D8;
  return MEMORY[0x1F4127FF8](v1 + 16, v2, v2);
}

uint64_t sub_1E3DFC3D8()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3DF3FC4, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[7];
    uint64_t v4 = type metadata accessor for ShowEntity(0);
    v2[10] = v4;
    uint64_t v5 = v3 + *(int *)(v4 + 72);
    uint64_t v8 = (char *)&dword_1EAE29498 + dword_1EAE29498;
    uint64_t v6 = (void *)swift_task_alloc();
    v2[11] = v6;
    void *v6 = v2;
    v6[1] = sub_1E3DFC590;
    return ((uint64_t (*)(uint64_t, void *))v8)(v5, v2 + 2);
  }
}

uint64_t sub_1E3DFC590(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1E3DF3FDC;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    uint64_t v7 = sub_1E3DFC6C4;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3DFC6C4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v5 = v4 + *(int *)(v3 + 76);
  sub_1E3C634A4(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v1;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1E3DFC750(uint64_t a1, uint64_t a2)
{
  v3[7] = v2;
  v3[8] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[9] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1E3DFC818;
  return MEMORY[0x1F4127FF8](v3 + 2, v4, v4);
}

uint64_t sub_1E3DFC818()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3DF43E8, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[7] + *(int *)(v2[8] + 72);
    uint64_t v6 = (char *)&dword_1EAE29498 + dword_1EAE29498;
    uint64_t v4 = (void *)swift_task_alloc();
    v2[11] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1E3DFC9C4;
    return ((uint64_t (*)(uint64_t, void *))v6)(v3, v2 + 2);
  }
}

uint64_t sub_1E3DFC9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1E3DF3FDC;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    uint64_t v7 = sub_1E3DFCAF8;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3DFCAF8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v5 = v4 + *(int *)(v3 + 76);
  sub_1E3C634A4(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v1;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t static ShowEntity.transferRepresentation.getter()
{
  uint64_t v0 = type metadata accessor for ShowEntity(0);
  uint64_t v1 = sub_1E3DFCE68(&qword_1EAE29320, (void (*)(uint64_t))type metadata accessor for ShowEntity);
  unint64_t v2 = sub_1E3DE7F40();
  uint64_t v3 = MEMORY[0x1E4FBB1A0];

  return MEMORY[0x1F40DFA60](sub_1E3DFCC30, 0, v0, v3, v1, v2);
}

uint64_t sub_1E3DFCC30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ShowEntity(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C34078(a1 + *(int *)(v4 + 80), (uint64_t)v9, &qword_1EBFE6070);
  uint64_t v10 = sub_1E3E77D00();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1E3C10CE0((uint64_t)v9, &qword_1EBFE6070);
    sub_1E3C3A130(a1, (uint64_t)v6);
LABEL_4:
    sub_1E3E774B0();
    uint64_t v12 = v16[0];
    uint64_t v14 = v16[1];
    goto LABEL_5;
  }
  uint64_t v12 = sub_1E3E77C00();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  sub_1E3C3A130(a1, (uint64_t)v6);
  if (!v14) {
    goto LABEL_4;
  }
LABEL_5:
  uint64_t result = sub_1E3DFF558((uint64_t)v6, type metadata accessor for ShowEntity);
  *a2 = v12;
  a2[1] = v14;
  return result;
}

uint64_t sub_1E3DFCE20()
{
  return sub_1E3DFCE68(&qword_1EBFE2F30, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3DFCE68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3DFCEB0()
{
  return sub_1E3DFCE68(&qword_1EBFE2F48, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3DFCEF8()
{
  return sub_1E3DFCE68(&qword_1EBFE2F70, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

unint64_t sub_1E3DFCF44()
{
  unint64_t result = qword_1EAE294E0;
  if (!qword_1EAE294E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE294E0);
  }
  return result;
}

uint64_t sub_1E3DFCF98()
{
  return sub_1E3DFCE68(&qword_1EBFE2F50, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3DFCFE0()
{
  return sub_1E3DFCE68(&qword_1EBFE2F58, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3DFD028()
{
  return sub_1E3DFCE68(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3DFD070()
{
  return sub_1E3DFCE68(&qword_1EBFE2F60, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3DFD0B8()
{
  return sub_1E3C10DE8(&qword_1EAE29328, &qword_1EAE29330);
}

uint64_t sub_1E3DFD0F4()
{
  return sub_1E3DFCE68(&qword_1EBFE2F68, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3DFD13C()
{
  return sub_1E3DFCE68(&qword_1EAE29338, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t type metadata accessor for ShowEntity.CustomRepresentation(uint64_t a1)
{
  return sub_1E3D2A998(a1, (uint64_t *)&unk_1EAE29388);
}

uint64_t sub_1E3DFD1A4()
{
  return sub_1E3DFCE68(&qword_1EAE29340, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t sub_1E3DFD1EC()
{
  return sub_1E3DFCE68(&qword_1EAE29348, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t sub_1E3DFD234()
{
  return sub_1E3DFCE68(&qword_1EAE29350, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t sub_1E3DFD27C()
{
  return sub_1E3DFCE68(&qword_1EAE276E0, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t sub_1E3DFD2C4()
{
  return sub_1E3DFCE68(&qword_1EAE29358, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t sub_1E3DFD30C()
{
  return sub_1E3DFCE68(&qword_1EAE29360, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t sub_1E3DFD354()
{
  return sub_1E3DFCE68(&qword_1EAE29368, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t sub_1E3DFD39C()
{
  return sub_1E3DFCE68((unint64_t *)&unk_1EAE29370, (void (*)(uint64_t))type metadata accessor for ShowEntity.CustomRepresentation);
}

uint64_t sub_1E3DFD3E4()
{
  return sub_1E3DFCE68((unint64_t *)&qword_1EBFE2F38, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3DFD42C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3DFD448(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1E3DE7F40();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];

  return MEMORY[0x1F40DFA60](sub_1E3DFCC30, 0, a1, v5, a2, v4);
}

uint64_t sub_1E3DFD4BC@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for ShowEntity(0);
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DFD510()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3DFD560@<X0>(void *a1@<X8>)
{
  type metadata accessor for ShowEntity(0);
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3DFD5B8@<X0>(void *a1@<X8>)
{
  type metadata accessor for ShowEntity(0);
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3DFD610@<X0>(void *a1@<X8>)
{
  type metadata accessor for ShowEntity(0);
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3DFD668()
{
  return sub_1E3E774B0();
}

uint64_t sub_1E3DFD6B0@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for ShowEntity(0);
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DFD704()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3DFD754@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for ShowEntity(0);
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DFD7A8()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3DFD7F8@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for ShowEntity(0);
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DFD84C()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3DFD89C@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for ShowEntity(0);
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3DFD8F0()
{
  return sub_1E3E774C0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ShowEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v9 = (void *)a2[2];
    uint64_t v8 = a2[3];
    a1[2] = (uint64_t)v9;
    a1[3] = v8;
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    uint64_t v11 = a3[8];
    long long v80 = (char *)a1 + v11;
    uint64_t v12 = (char *)a2 + v11;
    *a1 = v6;
    a1[1] = v7;
    uint64_t v13 = sub_1E3E77D00();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    id v16 = v9;
    swift_bridgeObjectRetain();
    uint64_t v78 = v15;
    uint64_t v79 = v13;
    if (v15(v12, 1, v13))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v80, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v80, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v80, 0, 1, v13);
    }
    uint64_t v19 = a3[10];
    *(uint64_t *)((char *)v3 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v3 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[12];
    *(uint64_t *)((char *)v3 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v3 + v20) = *(uint64_t *)((char *)a2 + v20);
    uint64_t v21 = a3[14];
    *(uint64_t *)((char *)v3 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v3 + v21) = *(uint64_t *)((char *)a2 + v21);
    uint64_t v22 = a3[16];
    *(uint64_t *)((char *)v3 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v3 + v22) = *(uint64_t *)((char *)a2 + v22);
    uint64_t v23 = a3[18];
    uint64_t v81 = a3;
    *(uint64_t *)((char *)v3 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    __dst = (uint64_t *)((char *)v3 + v23);
    uint64_t v74 = (uint64_t *)((char *)a2 + v23);
    id v24 = (int *)sub_1E3E78740();
    uint64_t v73 = *((void *)v24 - 1);
    int v75 = *(unsigned int (**)(void *, uint64_t, int *))(v73 + 48);
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    id v25 = v74;
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    if (v75(v74, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      memcpy(__dst, v74, *(void *)(*(void *)(v26 - 8) + 64));
      id v27 = v81;
      uint64_t v29 = v14;
      uint64_t v28 = v79;
    }
    else
    {
      uint64_t v30 = v74[1];
      void *__dst = *v74;
      __dst[1] = v30;
      int v31 = *((unsigned __int8 *)v74 + 32);
      swift_bridgeObjectRetain();
      if (v31 == 255)
      {
        *((_OWORD *)__dst + 1) = *((_OWORD *)v74 + 1);
        *((unsigned char *)__dst + 32) = *((unsigned char *)v74 + 32);
      }
      else
      {
        uint64_t v32 = v74[2];
        uint64_t v33 = v74[3];
        sub_1E3C2B454(v32, v33, v31);
        __dst[2] = v32;
        __dst[3] = v33;
        id v25 = v74;
        *((unsigned char *)__dst + 32) = v31;
      }
      id v27 = v81;
      uint64_t v29 = v14;
      uint64_t v28 = v79;
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(v25 + 5);
      uint64_t v34 = (id *)(v25 + 7);
      int v35 = *((unsigned __int8 *)v25 + 64);
      if (v35 == 255)
      {
        __dst[7] = *v34;
        *((unsigned char *)__dst + 64) = *((unsigned char *)v25 + 64);
      }
      else
      {
        id v36 = *v34;
        sub_1E3C2B46C(*v34, *((unsigned char *)v25 + 64));
        __dst[7] = v36;
        *((unsigned char *)__dst + 64) = v35;
      }
      id v37 = (id *)(v25 + 9);
      int v38 = *((unsigned __int8 *)v25 + 80);
      if (v38 == 255)
      {
        __dst[9] = *v37;
        *((unsigned char *)__dst + 80) = *((unsigned char *)v25 + 80);
      }
      else
      {
        id v39 = *v37;
        sub_1E3C2B46C(*v37, *((unsigned char *)v25 + 80));
        __dst[9] = v39;
        *((unsigned char *)__dst + 80) = v38;
      }
      uint64_t v40 = (id *)(v25 + 11);
      int v41 = *((unsigned __int8 *)v25 + 96);
      if (v41 == 255)
      {
        __dst[11] = *v40;
        *((unsigned char *)__dst + 96) = *((unsigned char *)v25 + 96);
      }
      else
      {
        id v42 = *v40;
        sub_1E3C2B46C(*v40, *((unsigned char *)v25 + 96));
        __dst[11] = v42;
        *((unsigned char *)__dst + 96) = v41;
      }
      uint64_t v43 = (id *)(v25 + 13);
      int v44 = *((unsigned __int8 *)v25 + 112);
      if (v44 == 255)
      {
        __dst[13] = *v43;
        *((unsigned char *)__dst + 112) = *((unsigned char *)v25 + 112);
      }
      else
      {
        id v45 = *v43;
        sub_1E3C2B46C(*v43, *((unsigned char *)v25 + 112));
        __dst[13] = v45;
        *((unsigned char *)__dst + 112) = v44;
      }
      id v46 = (id *)(v25 + 15);
      int v47 = *((unsigned __int8 *)v25 + 128);
      if (v47 == 255)
      {
        __dst[15] = *v46;
        *((unsigned char *)__dst + 128) = *((unsigned char *)v25 + 128);
      }
      else
      {
        id v48 = *v46;
        sub_1E3C2B46C(*v46, *((unsigned char *)v25 + 128));
        __dst[15] = v48;
        *((unsigned char *)__dst + 128) = v47;
      }
      *((unsigned char *)__dst + 129) = *((unsigned char *)v25 + 129);
      uint64_t v49 = v24[11];
      uint64_t v50 = (char *)__dst + v49;
      uint64_t v51 = v25;
      id v52 = (char *)v25 + v49;
      uint64_t v53 = sub_1E3E78630();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v50, v52, v53);
      uint64_t v54 = v24[12];
      uint64_t v55 = (void *)((char *)__dst + v54);
      uint64_t v56 = (void *)((char *)v51 + v54);
      uint64_t v57 = v56[1];
      *uint64_t v55 = *v56;
      v55[1] = v57;
      *((unsigned char *)__dst + v24[13]) = *((unsigned char *)v51 + v24[13]);
      *((unsigned char *)__dst + v24[14]) = *((unsigned char *)v51 + v24[14]);
      *((unsigned char *)__dst + v24[15]) = *((unsigned char *)v51 + v24[15]);
      uint64_t v58 = v24[16];
      uint64_t v59 = (void *)((char *)__dst + v58);
      uint64_t v60 = (void *)((char *)v51 + v58);
      uint64_t v61 = v60[1];
      *uint64_t v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = *(void (**)(void *, void, uint64_t, int *))(v73 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62(__dst, 0, 1, v24);
    }
    uint64_t v63 = v27[19];
    uint64_t v64 = (char *)v3 + v63;
    uint64_t v65 = (char *)a2 + v63;
    unint64_t v66 = *((void *)v65 + 1);
    if (v66 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
    }
    else
    {
      uint64_t v67 = *(void *)v65;
      sub_1E3C14F74(*(void *)v65, *((void *)v65 + 1));
      *(void *)uint64_t v64 = v67;
      *((void *)v64 + 1) = v66;
    }
    uint64_t v68 = v27[20];
    int v69 = (char *)v3 + v68;
    uint64_t v70 = (char *)a2 + v68;
    if (v78((char *)a2 + v68, 1, v28))
    {
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v69, v70, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v69, 0, 1, v28);
    }
  }
  return v3;
}

uint64_t destroy for ShowEntity(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v4, v5);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = a1 + a2[18];
  uint64_t v8 = sub_1E3E78740();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    int v9 = *(unsigned __int8 *)(v7 + 32);
    if (v9 != 255) {
      sub_1E3C2B7BC(*(void *)(v7 + 16), *(void *)(v7 + 24), v9);
    }
    int v10 = *(unsigned __int8 *)(v7 + 64);
    if (v10 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 56), v10);
    }
    int v11 = *(unsigned __int8 *)(v7 + 80);
    if (v11 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 72), v11);
    }
    int v12 = *(unsigned __int8 *)(v7 + 96);
    if (v12 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 88), v12);
    }
    int v13 = *(unsigned __int8 *)(v7 + 112);
    if (v13 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 104), v13);
    }
    int v14 = *(unsigned __int8 *)(v7 + 128);
    if (v14 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 120), v14);
    }
    uint64_t v15 = v7 + *(int *)(v8 + 44);
    uint64_t v16 = sub_1E3E78630();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (uint64_t *)(a1 + a2[19]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_1E3C2B7E8(*v17, v18);
  }
  uint64_t v19 = a1 + a2[20];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v19, 1, v5);
  if (!result)
  {
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    return v21(v19, v5);
  }
  return result;
}

void *initializeWithCopy for ShowEntity(void *a1, uint64_t *a2, int *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = (void *)a2[2];
  uint64_t v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  uint64_t v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  uint64_t v10 = a3[8];
  __dst = (char *)a1 + v10;
  int v11 = (char *)a2 + v10;
  *a1 = v5;
  a1[1] = v6;
  uint64_t v12 = sub_1E3E77D00();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  id v15 = v8;
  swift_bridgeObjectRetain();
  uint64_t v76 = v14;
  uint64_t v79 = v12;
  if (v14(v11, 1, v12))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v17 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  uint64_t v18 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
  uint64_t v19 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
  uint64_t v20 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
  uint64_t v21 = a3[18];
  __dsta = a3;
  *(void *)((char *)a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
  int v75 = (void *)((char *)a1 + v21);
  uint64_t v72 = (uint64_t *)((char *)a2 + v21);
  uint64_t v22 = (int *)sub_1E3E78740();
  uint64_t v71 = *((void *)v22 - 1);
  uint64_t v73 = *(unsigned int (**)(void *, uint64_t, int *))(v71 + 48);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  uint64_t v23 = v72;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v73(v72, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v75, v72, *(void *)(*(void *)(v24 - 8) + 64));
    uint64_t v25 = v79;
    id v27 = __dsta;
    uint64_t v26 = v13;
  }
  else
  {
    uint64_t v28 = v72[1];
    *int v75 = *v72;
    v75[1] = v28;
    int v29 = *((unsigned __int8 *)v72 + 32);
    swift_bridgeObjectRetain();
    if (v29 == 255)
    {
      *((_OWORD *)v75 + 1) = *((_OWORD *)v72 + 1);
      *((unsigned char *)v75 + 32) = *((unsigned char *)v72 + 32);
    }
    else
    {
      uint64_t v30 = v72[2];
      uint64_t v31 = v72[3];
      sub_1E3C2B454(v30, v31, v29);
      v75[2] = v30;
      v75[3] = v31;
      uint64_t v23 = v72;
      *((unsigned char *)v75 + 32) = v29;
    }
    uint64_t v25 = v79;
    id v27 = __dsta;
    uint64_t v26 = v13;
    *(_OWORD *)(v75 + 5) = *(_OWORD *)(v23 + 5);
    uint64_t v32 = (id *)(v23 + 7);
    int v33 = *((unsigned __int8 *)v23 + 64);
    if (v33 == 255)
    {
      v75[7] = *v32;
      *((unsigned char *)v75 + 64) = *((unsigned char *)v23 + 64);
    }
    else
    {
      id v34 = *v32;
      sub_1E3C2B46C(*v32, *((unsigned char *)v23 + 64));
      v75[7] = v34;
      *((unsigned char *)v75 + 64) = v33;
    }
    int v35 = (id *)(v23 + 9);
    int v36 = *((unsigned __int8 *)v23 + 80);
    if (v36 == 255)
    {
      v75[9] = *v35;
      *((unsigned char *)v75 + 80) = *((unsigned char *)v23 + 80);
    }
    else
    {
      id v37 = *v35;
      sub_1E3C2B46C(*v35, *((unsigned char *)v23 + 80));
      v75[9] = v37;
      *((unsigned char *)v75 + 80) = v36;
    }
    int v38 = (id *)(v23 + 11);
    int v39 = *((unsigned __int8 *)v23 + 96);
    if (v39 == 255)
    {
      v75[11] = *v38;
      *((unsigned char *)v75 + 96) = *((unsigned char *)v23 + 96);
    }
    else
    {
      id v40 = *v38;
      sub_1E3C2B46C(*v38, *((unsigned char *)v23 + 96));
      v75[11] = v40;
      *((unsigned char *)v75 + 96) = v39;
    }
    int v41 = (id *)(v23 + 13);
    int v42 = *((unsigned __int8 *)v23 + 112);
    if (v42 == 255)
    {
      v75[13] = *v41;
      *((unsigned char *)v75 + 112) = *((unsigned char *)v23 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_1E3C2B46C(*v41, *((unsigned char *)v23 + 112));
      v75[13] = v43;
      *((unsigned char *)v75 + 112) = v42;
    }
    int v44 = (id *)(v23 + 15);
    int v45 = *((unsigned __int8 *)v23 + 128);
    if (v45 == 255)
    {
      v75[15] = *v44;
      *((unsigned char *)v75 + 128) = *((unsigned char *)v23 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_1E3C2B46C(*v44, *((unsigned char *)v23 + 128));
      v75[15] = v46;
      *((unsigned char *)v75 + 128) = v45;
    }
    *((unsigned char *)v75 + 129) = *((unsigned char *)v23 + 129);
    uint64_t v47 = v22[11];
    id v48 = (char *)v75 + v47;
    uint64_t v49 = v23;
    uint64_t v50 = (char *)v23 + v47;
    uint64_t v51 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v48, v50, v51);
    uint64_t v52 = v22[12];
    uint64_t v53 = (void *)((char *)v75 + v52);
    uint64_t v54 = (void *)((char *)v49 + v52);
    uint64_t v55 = v54[1];
    *uint64_t v53 = *v54;
    v53[1] = v55;
    *((unsigned char *)v75 + v22[13]) = *((unsigned char *)v49 + v22[13]);
    *((unsigned char *)v75 + v22[14]) = *((unsigned char *)v49 + v22[14]);
    *((unsigned char *)v75 + v22[15]) = *((unsigned char *)v49 + v22[15]);
    uint64_t v56 = v22[16];
    uint64_t v57 = (void *)((char *)v75 + v56);
    uint64_t v58 = (void *)((char *)v49 + v56);
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = *(void (**)(void *, void, uint64_t, int *))(v71 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60(v75, 0, 1, v22);
  }
  uint64_t v61 = v27[19];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  unint64_t v64 = *((void *)v63 + 1);
  if (v64 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  }
  else
  {
    uint64_t v65 = *(void *)v63;
    sub_1E3C14F74(*(void *)v63, *((void *)v63 + 1));
    *(void *)uint64_t v62 = v65;
    *((void *)v62 + 1) = v64;
  }
  uint64_t v66 = v27[20];
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  if (v76((char *)a2 + v66, 1, v25))
  {
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v67, v68, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v67, 0, 1, v25);
  }
  return a1;
}