char *assignWithCopy for ShowEntity(char *a1, void *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  long long *v32;
  long long *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  long long v40;
  id *v41;
  int v42;
  id v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id v52;
  id *v53;
  int v54;
  id v55;
  id v56;
  id *v57;
  int v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  void (*v71)(uint64_t, void, uint64_t, int *);
  uint64_t v72;
  uint64_t v73;
  char v74;
  long long v75;
  id *v76;
  id *v77;
  int v78;
  id v79;
  void *v80;
  char v81;
  id v82;
  char v83;
  id v84;
  id *v85;
  id *v86;
  int v87;
  id v88;
  void *v89;
  char v90;
  id v91;
  char v92;
  id v93;
  id *v94;
  id *v95;
  int v96;
  id v97;
  void *v98;
  char v99;
  id v100;
  char v101;
  id v102;
  id *v103;
  id *v104;
  int v105;
  id v106;
  void *v107;
  char v108;
  id v109;
  char v110;
  id v111;
  id *v112;
  id *v113;
  int v114;
  id v115;
  void *v116;
  char v117;
  id v118;
  char v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  char *v127;
  uint64_t v128;
  void *v129;
  char *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  int v142;
  int v143;
  uint64_t v144;
  uint64_t v146;
  uint64_t (*v147)(char *, uint64_t, uint64_t);
  uint64_t v148;

  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)*((void *)a1 + 2);
  v7 = (void *)a2[2];
  *((void *)a1 + 2) = v7;
  v8 = v7;

  *((void *)a1 + 3) = a2[3];
  *((void *)a1 + 4) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 5) = a2[5];
  v9 = a3[8];
  v10 = &a1[v9];
  v11 = (char *)a2 + v9;
  v12 = sub_1E3E77D00();
  v13 = *(void *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  v148 = v12;
  v146 = v13;
  v147 = v14;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  *(void *)&a1[a3[9]] = *(void *)((char *)a2 + a3[9]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[a3[11]] = *(void *)((char *)a2 + a3[11]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[a3[12]] = *(void *)((char *)a2 + a3[12]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[a3[13]] = *(void *)((char *)a2 + a3[13]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[a3[14]] = *(void *)((char *)a2 + a3[14]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[a3[15]] = *(void *)((char *)a2 + a3[15]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[a3[16]] = *(void *)((char *)a2 + a3[16]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[a3[17]] = *(void *)((char *)a2 + a3[17]);
  sub_1E3E775E0();
  swift_release();
  v18 = a3[18];
  v19 = (uint64_t)&a1[v18];
  v20 = (char *)a2 + v18;
  v21 = (int *)sub_1E3E78740();
  v22 = *((void *)v21 - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23((uint64_t)v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      *(void *)v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v32 = (long long *)(v19 + 16);
      v33 = (long long *)(v20 + 16);
      v34 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v34 == 255)
        {
          v75 = *v33;
          *(unsigned char *)(v19 + 32) = v20[32];
          *v32 = v75;
        }
        else
        {
          v72 = *((void *)v20 + 2);
          v73 = *((void *)v20 + 3);
          sub_1E3C2B454(v72, v73, v20[32]);
          *(void *)(v19 + 16) = v72;
          *(void *)(v19 + 24) = v73;
          *(unsigned char *)(v19 + 32) = v34;
        }
      }
      else if (v34 == 255)
      {
        sub_1E3C2CB50(v19 + 16);
        v74 = v20[32];
        *v32 = *v33;
        *(unsigned char *)(v19 + 32) = v74;
      }
      else
      {
        v35 = *((void *)v20 + 2);
        v36 = *((void *)v20 + 3);
        sub_1E3C2B454(v35, v36, v20[32]);
        v37 = *(void *)(v19 + 16);
        v38 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v35;
        *(void *)(v19 + 24) = v36;
        v39 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v34;
        sub_1E3C2B7BC(v37, v38, v39);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      v76 = (id *)(v19 + 56);
      v77 = (id *)(v20 + 56);
      v78 = v20[64];
      v31 = v147;
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v78 == 255)
        {
          v84 = *v77;
          *(unsigned char *)(v19 + 64) = v20[64];
          *v76 = v84;
        }
        else
        {
          v82 = *v77;
          sub_1E3C2B46C(*v77, v20[64]);
          *(void *)(v19 + 56) = v82;
          *(unsigned char *)(v19 + 64) = v78;
        }
      }
      else if (v78 == 255)
      {
        sub_1E3C2CBA4(v19 + 56);
        v83 = v20[64];
        *v76 = *v77;
        *(unsigned char *)(v19 + 64) = v83;
      }
      else
      {
        v79 = *v77;
        sub_1E3C2B46C(*v77, v20[64]);
        v80 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v79;
        v81 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v78;
        sub_1E3C2B7D4(v80, v81);
      }
      v85 = (id *)(v19 + 72);
      v86 = (id *)(v20 + 72);
      v87 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v87 == 255)
        {
          v93 = *v86;
          *(unsigned char *)(v19 + 80) = v20[80];
          *v85 = v93;
        }
        else
        {
          v91 = *v86;
          sub_1E3C2B46C(*v86, v20[80]);
          *(void *)(v19 + 72) = v91;
          *(unsigned char *)(v19 + 80) = v87;
        }
      }
      else if (v87 == 255)
      {
        sub_1E3C2CBA4(v19 + 72);
        v92 = v20[80];
        *v85 = *v86;
        *(unsigned char *)(v19 + 80) = v92;
      }
      else
      {
        v88 = *v86;
        sub_1E3C2B46C(*v86, v20[80]);
        v89 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v88;
        v90 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v87;
        sub_1E3C2B7D4(v89, v90);
      }
      v94 = (id *)(v19 + 88);
      v95 = (id *)(v20 + 88);
      v96 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v96 == 255)
        {
          v102 = *v95;
          *(unsigned char *)(v19 + 96) = v20[96];
          *v94 = v102;
        }
        else
        {
          v100 = *v95;
          sub_1E3C2B46C(*v95, v20[96]);
          *(void *)(v19 + 88) = v100;
          *(unsigned char *)(v19 + 96) = v96;
        }
      }
      else if (v96 == 255)
      {
        sub_1E3C2CBA4(v19 + 88);
        v101 = v20[96];
        *v94 = *v95;
        *(unsigned char *)(v19 + 96) = v101;
      }
      else
      {
        v97 = *v95;
        sub_1E3C2B46C(*v95, v20[96]);
        v98 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v97;
        v99 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v96;
        sub_1E3C2B7D4(v98, v99);
      }
      v103 = (id *)(v19 + 104);
      v104 = (id *)(v20 + 104);
      v105 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v105 == 255)
        {
          v111 = *v104;
          *(unsigned char *)(v19 + 112) = v20[112];
          *v103 = v111;
        }
        else
        {
          v109 = *v104;
          sub_1E3C2B46C(*v104, v20[112]);
          *(void *)(v19 + 104) = v109;
          *(unsigned char *)(v19 + 112) = v105;
        }
      }
      else if (v105 == 255)
      {
        sub_1E3C2CBA4(v19 + 104);
        v110 = v20[112];
        *v103 = *v104;
        *(unsigned char *)(v19 + 112) = v110;
      }
      else
      {
        v106 = *v104;
        sub_1E3C2B46C(*v104, v20[112]);
        v107 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v106;
        v108 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v105;
        sub_1E3C2B7D4(v107, v108);
      }
      v112 = (id *)(v19 + 120);
      v113 = (id *)(v20 + 120);
      v114 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v114 == 255)
        {
          v120 = *v113;
          *(unsigned char *)(v19 + 128) = v20[128];
          *v112 = v120;
        }
        else
        {
          v118 = *v113;
          sub_1E3C2B46C(*v113, v20[128]);
          *(void *)(v19 + 120) = v118;
          *(unsigned char *)(v19 + 128) = v114;
        }
      }
      else if (v114 == 255)
      {
        sub_1E3C2CBA4(v19 + 120);
        v119 = v20[128];
        *v112 = *v113;
        *(unsigned char *)(v19 + 128) = v119;
      }
      else
      {
        v115 = *v113;
        sub_1E3C2B46C(*v113, v20[128]);
        v116 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v115;
        v117 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v114;
        sub_1E3C2B7D4(v116, v117);
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      v121 = v21[11];
      v122 = v19 + v121;
      v123 = &v20[v121];
      v124 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v124 - 8) + 24))(v122, v123, v124);
      v125 = v21[12];
      v126 = (void *)(v19 + v125);
      v127 = &v20[v125];
      *v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      v128 = v21[16];
      v129 = (void *)(v19 + v128);
      v130 = &v20[v128];
      *v129 = *(void *)v130;
      v129[1] = *((void *)v130 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_1E3DFF558(v19, MEMORY[0x1E4F915F0]);
LABEL_13:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v29 - 8) + 64));
    v30 = v148;
    v31 = v147;
    goto LABEL_76;
  }
  if (v25) {
    goto LABEL_13;
  }
  *(void *)v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  v26 = v20[32];
  swift_bridgeObjectRetain();
  if (v26 == 255)
  {
    v40 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v40;
  }
  else
  {
    v27 = *((void *)v20 + 2);
    v28 = *((void *)v20 + 3);
    sub_1E3C2B454(v27, v28, v26);
    *(void *)(v19 + 16) = v27;
    *(void *)(v19 + 24) = v28;
    *(unsigned char *)(v19 + 32) = v26;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  v41 = (id *)(v20 + 56);
  v42 = v20[64];
  if (v42 == 255)
  {
    v44 = *v41;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v44;
  }
  else
  {
    v43 = *v41;
    sub_1E3C2B46C(*v41, v20[64]);
    *(void *)(v19 + 56) = v43;
    *(unsigned char *)(v19 + 64) = v42;
  }
  v31 = v147;
  v45 = (id *)(v20 + 72);
  v46 = v20[80];
  if (v46 == 255)
  {
    v48 = *v45;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v48;
  }
  else
  {
    v47 = *v45;
    sub_1E3C2B46C(*v45, v20[80]);
    *(void *)(v19 + 72) = v47;
    *(unsigned char *)(v19 + 80) = v46;
  }
  v49 = (id *)(v20 + 88);
  v50 = v20[96];
  if (v50 == 255)
  {
    v52 = *v49;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v52;
  }
  else
  {
    v51 = *v49;
    sub_1E3C2B46C(*v49, v20[96]);
    *(void *)(v19 + 88) = v51;
    *(unsigned char *)(v19 + 96) = v50;
  }
  v53 = (id *)(v20 + 104);
  v54 = v20[112];
  if (v54 == 255)
  {
    v56 = *v53;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v56;
  }
  else
  {
    v55 = *v53;
    sub_1E3C2B46C(*v53, v20[112]);
    *(void *)(v19 + 104) = v55;
    *(unsigned char *)(v19 + 112) = v54;
  }
  v57 = (id *)(v20 + 120);
  v58 = v20[128];
  if (v58 == 255)
  {
    v60 = *v57;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v60;
  }
  else
  {
    v59 = *v57;
    sub_1E3C2B46C(*v57, v20[128]);
    *(void *)(v19 + 120) = v59;
    *(unsigned char *)(v19 + 128) = v58;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  v61 = v21[11];
  v62 = v19 + v61;
  v63 = &v20[v61];
  v64 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
  v65 = v21[12];
  v66 = (void *)(v19 + v65);
  v67 = &v20[v65];
  *v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  v68 = v21[16];
  v69 = (void *)(v19 + v68);
  v70 = &v20[v68];
  *v69 = *(void *)v70;
  v69[1] = *((void *)v70 + 1);
  v71 = *(void (**)(uint64_t, void, uint64_t, int *))(v22 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v71(v19, 0, 1, v21);
LABEL_75:
  v30 = v148;
LABEL_76:
  v131 = a3[19];
  v132 = (uint64_t *)&a1[v131];
  v133 = (void *)((char *)a2 + v131);
  v134 = *(void *)((char *)a2 + v131 + 8);
  if (*(void *)&a1[v131 + 8] >> 60 == 15)
  {
    if (v134 >> 60 != 15)
    {
      v135 = *v133;
      sub_1E3C14F74(*v133, v134);
      *v132 = v135;
      v132[1] = v134;
      goto LABEL_83;
    }
    goto LABEL_81;
  }
  if (v134 >> 60 == 15)
  {
    sub_1E3C2CC54((uint64_t)v132);
LABEL_81:
    *(_OWORD *)v132 = *(_OWORD *)v133;
    goto LABEL_83;
  }
  v136 = *v133;
  sub_1E3C14F74(*v133, v134);
  v137 = *v132;
  v138 = v132[1];
  *v132 = v136;
  v132[1] = v134;
  sub_1E3C2B7E8(v137, v138);
LABEL_83:
  v139 = a3[20];
  v140 = &a1[v139];
  v141 = (char *)a2 + v139;
  v142 = v31(&a1[v139], 1, v30);
  v143 = v31(v141, 1, v30);
  if (!v142)
  {
    if (!v143)
    {
      (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v140, v141, v30);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v146 + 8))(v140, v30);
    goto LABEL_88;
  }
  if (v143)
  {
LABEL_88:
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v140, v141, *(void *)(*(void *)(v144 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v140, v141, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v146 + 56))(v140, 0, 1, v30);
  return a1;
}

uint64_t sub_1E3DFF558(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for ShowEntity(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1E3E77D00();
  uint64_t v10 = *(void *)(v9 - 8);
  v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v34(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  v17 = (_OWORD *)(a1 + v16);
  v18 = (_OWORD *)(a2 + v16);
  v19 = (int *)sub_1E3E78740();
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    long long v22 = v18[1];
    _OWORD *v17 = *v18;
    v17[1] = v22;
    *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
    *(_OWORD *)((char *)v17 + 40) = *(_OWORD *)((char *)v18 + 40);
    *((void *)v17 + 7) = *((void *)v18 + 7);
    *((unsigned char *)v17 + 64) = *((unsigned char *)v18 + 64);
    *(_OWORD *)((char *)v17 + 113) = *(_OWORD *)((char *)v18 + 113);
    *(_OWORD *)((char *)v17 + 104) = *(_OWORD *)((char *)v18 + 104);
    *(_OWORD *)((char *)v17 + 88) = *(_OWORD *)((char *)v18 + 88);
    *(_OWORD *)((char *)v17 + 72) = *(_OWORD *)((char *)v18 + 72);
    *((unsigned char *)v17 + 129) = *((unsigned char *)v18 + 129);
    uint64_t v23 = v19[11];
    v32 = (char *)v17 + v23;
    uint64_t v33 = v10;
    v24 = (char *)v18 + v23;
    uint64_t v25 = sub_1E3E78630();
    v26 = v24;
    uint64_t v10 = v33;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v32, v26, v25);
    *(_OWORD *)((char *)v17 + v19[12]) = *(_OWORD *)((char *)v18 + v19[12]);
    *((unsigned char *)v17 + v19[13]) = *((unsigned char *)v18 + v19[13]);
    *((unsigned char *)v17 + v19[14]) = *((unsigned char *)v18 + v19[14]);
    *((unsigned char *)v17 + v19[15]) = *((unsigned char *)v18 + v19[15]);
    *(_OWORD *)((char *)v17 + v19[16]) = *(_OWORD *)((char *)v18 + v19[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v27 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  if (v34(v29, 1, v9))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v28, v29, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for ShowEntity(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)*((void *)a1 + 2);
  *((void *)a1 + 2) = a2[2];

  uint64_t v8 = a2[4];
  *((void *)a1 + 3) = a2[3];
  *((void *)a1 + 4) = v8;
  swift_bridgeObjectRelease();
  *((void *)a1 + 5) = a2[5];
  uint64_t v9 = a3[8];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1E3E77D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  v89 = v14;
  int v16 = v14(v11, 1, v12);
  uint64_t v87 = v13;
  uint64_t v88 = v12;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  *(void *)&a1[a3[9]] = *(void *)((char *)a2 + a3[9]);
  swift_release();
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  swift_release();
  *(void *)&a1[a3[11]] = *(void *)((char *)a2 + a3[11]);
  swift_release();
  *(void *)&a1[a3[12]] = *(void *)((char *)a2 + a3[12]);
  swift_release();
  *(void *)&a1[a3[13]] = *(void *)((char *)a2 + a3[13]);
  swift_release();
  *(void *)&a1[a3[14]] = *(void *)((char *)a2 + a3[14]);
  swift_release();
  *(void *)&a1[a3[15]] = *(void *)((char *)a2 + a3[15]);
  swift_release();
  *(void *)&a1[a3[16]] = *(void *)((char *)a2 + a3[16]);
  swift_release();
  *(void *)&a1[a3[17]] = *(void *)((char *)a2 + a3[17]);
  swift_release();
  uint64_t v18 = a3[18];
  uint64_t v19 = (uint64_t)&a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_1E3E78740();
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23((uint64_t)v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      long long v26 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 16) = v26;
      *(unsigned char *)(v19 + 32) = v20[32];
      *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
      *(void *)(v19 + 56) = *((void *)v20 + 7);
      *(unsigned char *)(v19 + 64) = v20[64];
      *(_OWORD *)(v19 + 113) = *(_OWORD *)(v20 + 113);
      *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
      *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
      *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v27 = v21[11];
      uint64_t v28 = v19 + v27;
      v29 = &v20[v27];
      uint64_t v30 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)(v19 + v21[12]) = *(_OWORD *)&v20[v21[12]];
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      *(_OWORD *)(v19 + v21[16]) = *(_OWORD *)&v20[v21[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
      uint64_t v33 = v87;
      uint64_t v32 = v88;
      goto LABEL_14;
    }
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  if (v25)
  {
    sub_1E3DFF558(v19, MEMORY[0x1E4F915F0]);
    goto LABEL_12;
  }
  uint64_t v47 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v47;
  swift_bridgeObjectRelease();
  v48 = v20 + 16;
  int v49 = *(unsigned __int8 *)(v19 + 32);
  if (v49 != 255)
  {
    int v50 = v20[32];
    if (v50 != 255)
    {
      uint64_t v51 = *(void *)(v19 + 16);
      uint64_t v52 = *(void *)(v19 + 24);
      *(_OWORD *)(v19 + 16) = *v48;
      *(unsigned char *)(v19 + 32) = v50;
      sub_1E3C2B7BC(v51, v52, v49);
      goto LABEL_33;
    }
    sub_1E3C2CB50(v19 + 16);
  }
  *(_OWORD *)(v19 + 16) = *v48;
  *(unsigned char *)(v19 + 32) = v20[32];
LABEL_33:
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
  v53 = v20 + 56;
  int v54 = *(unsigned __int8 *)(v19 + 64);
  if (v54 != 255)
  {
    int v55 = v20[64];
    if (v55 != 255)
    {
      v56 = *(void **)(v19 + 56);
      *(void *)(v19 + 56) = *v53;
      *(unsigned char *)(v19 + 64) = v55;
      sub_1E3C2B7D4(v56, v54);
      goto LABEL_38;
    }
    sub_1E3C2CBA4(v19 + 56);
  }
  *(void *)(v19 + 56) = *v53;
  *(unsigned char *)(v19 + 64) = v20[64];
LABEL_38:
  uint64_t v33 = v87;
  uint64_t v32 = v88;
  v57 = v20 + 72;
  int v58 = *(unsigned __int8 *)(v19 + 80);
  if (v58 != 255)
  {
    int v59 = v20[80];
    if (v59 != 255)
    {
      v60 = *(void **)(v19 + 72);
      *(void *)(v19 + 72) = *v57;
      *(unsigned char *)(v19 + 80) = v59;
      sub_1E3C2B7D4(v60, v58);
      goto LABEL_43;
    }
    sub_1E3C2CBA4(v19 + 72);
  }
  *(void *)(v19 + 72) = *v57;
  *(unsigned char *)(v19 + 80) = v20[80];
LABEL_43:
  v61 = v20 + 88;
  int v62 = *(unsigned __int8 *)(v19 + 96);
  if (v62 != 255)
  {
    int v63 = v20[96];
    if (v63 != 255)
    {
      v64 = *(void **)(v19 + 88);
      *(void *)(v19 + 88) = *v61;
      *(unsigned char *)(v19 + 96) = v63;
      sub_1E3C2B7D4(v64, v62);
      goto LABEL_48;
    }
    sub_1E3C2CBA4(v19 + 88);
  }
  *(void *)(v19 + 88) = *v61;
  *(unsigned char *)(v19 + 96) = v20[96];
LABEL_48:
  v65 = v20 + 104;
  int v66 = *(unsigned __int8 *)(v19 + 112);
  if (v66 != 255)
  {
    int v67 = v20[112];
    if (v67 != 255)
    {
      v68 = *(void **)(v19 + 104);
      *(void *)(v19 + 104) = *v65;
      *(unsigned char *)(v19 + 112) = v67;
      sub_1E3C2B7D4(v68, v66);
      goto LABEL_53;
    }
    sub_1E3C2CBA4(v19 + 104);
  }
  *(void *)(v19 + 104) = *v65;
  *(unsigned char *)(v19 + 112) = v20[112];
LABEL_53:
  v69 = v20 + 120;
  int v70 = *(unsigned __int8 *)(v19 + 128);
  if (v70 == 255)
  {
LABEL_57:
    *(void *)(v19 + 120) = *v69;
    *(unsigned char *)(v19 + 128) = v20[128];
    goto LABEL_58;
  }
  int v71 = v20[128];
  if (v71 == 255)
  {
    sub_1E3C2CBA4(v19 + 120);
    goto LABEL_57;
  }
  v72 = *(void **)(v19 + 120);
  *(void *)(v19 + 120) = *v69;
  *(unsigned char *)(v19 + 128) = v71;
  sub_1E3C2B7D4(v72, v70);
LABEL_58:
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v73 = v21[11];
  uint64_t v74 = v19 + v73;
  v75 = &v20[v73];
  uint64_t v76 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v76 - 8) + 40))(v74, v75, v76);
  uint64_t v77 = v21[12];
  v78 = (void *)(v19 + v77);
  v79 = &v20[v77];
  uint64_t v81 = *(void *)v79;
  uint64_t v80 = *((void *)v79 + 1);
  void *v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v82 = v21[16];
  v83 = (void *)(v19 + v82);
  v84 = &v20[v82];
  uint64_t v86 = *(void *)v84;
  uint64_t v85 = *((void *)v84 + 1);
  void *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v34 = a3[19];
  uint64_t v35 = (uint64_t)&a1[v34];
  v36 = (char *)a2 + v34;
  unint64_t v37 = *(void *)&a1[v34 + 8];
  if (v37 >> 60 == 15)
  {
LABEL_17:
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_19;
  }
  unint64_t v38 = *((void *)v36 + 1);
  if (v38 >> 60 == 15)
  {
    sub_1E3C2CC54(v35);
    goto LABEL_17;
  }
  uint64_t v39 = *(void *)v35;
  *(void *)uint64_t v35 = *(void *)v36;
  *(void *)(v35 + 8) = v38;
  sub_1E3C2B7E8(v39, v37);
LABEL_19:
  uint64_t v40 = a3[20];
  v41 = &a1[v40];
  v42 = (char *)a2 + v40;
  int v43 = v89(&a1[v40], 1, v32);
  int v44 = v89(v42, 1, v32);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v41, v42, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v32);
    goto LABEL_24;
  }
  if (v44)
  {
LABEL_24:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v41, v42, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E001F8);
}

uint64_t sub_1E3E001F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 72);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShowEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E00340);
}

uint64_t sub_1E3E00340(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 72);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1E3E00474()
{
  sub_1E3E005C8(319, (unint64_t *)&qword_1EBFE0808, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F)
  {
    sub_1E3E005C8(319, (unint64_t *)&qword_1EBFE4248, MEMORY[0x1E4F915F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1E3E005C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E3E7DB90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E3E0061C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1E3E0065C()
{
  return type metadata accessor for ShowEntity.CustomRepresentation(0);
}

uint64_t sub_1E3E00664()
{
  return sub_1E3C10DE8(&qword_1EAE29398, &qword_1EAE293A0);
}

uint64_t EpisodeEntity.title.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.preferredIdentifier()()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    uint64_t v2 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v2 = *(void *)(v0 + 40);
  }
  id v3 = v1;
  return v2;
}

uint64_t EpisodeEntity.prepare(asPartOf:)()
{
  *(void *)(v1 + 56) = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v3;
  *id v3 = v1;
  v3[1] = sub_1E3E007E4;
  return MEMORY[0x1F4127FF8](v1 + 16, v2, v2);
}

uint64_t sub_1E3E007E4()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3DF3FC4, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[7];
    uint64_t v4 = type metadata accessor for EpisodeEntity(0);
    v2[10] = v4;
    uint64_t v5 = v3 + *(int *)(v4 + 84);
    uint64_t v8 = (char *)&dword_1EAE293E8 + dword_1EAE293E8;
    uint64_t v6 = (void *)swift_task_alloc();
    v2[11] = v6;
    *uint64_t v6 = v2;
    v6[1] = sub_1E3E0099C;
    return ((uint64_t (*)(uint64_t, void *))v8)(v5, v2 + 2);
  }
}

uint64_t sub_1E3E0099C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    v7 = sub_1E3DF3FDC;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    v7 = sub_1E3E00AD0;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3E00AD0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v5 = v4 + *(int *)(v3 + 88);
  sub_1E3C634A4(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v1;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t type metadata accessor for EpisodeEntity(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFE30A0);
}

uint64_t sub_1E3E00B7C(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1E3E7A880();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_1E3E78E70();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_1E3E78740();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E00D34, 0, 0);
}

uint64_t sub_1E3E00D34()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  sub_1E3C34078(v0[3], v3, &qword_1EBFE4240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1E3C10CE0(v0[12], &qword_1EBFE4240);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void, unint64_t))v0[1];
    return v4(0, 0xF000000000000000);
  }
  else
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = (void *)v0[4];
    sub_1E3C71AA8(v0[12], v0[15]);
    ArtworkModel.preferredRequest.getter(v6);
    uint64_t v9 = v7[3];
    uint64_t v8 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v9);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[16] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1E3E00ED4;
    uint64_t v11 = v0[11];
    return ImageProvider.data(for:)(v11, v9, v8);
  }
}

uint64_t sub_1E3E00ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

    uint64_t v7 = sub_1E3E0100C;
  }
  else
  {
    *(void *)(v6 + 136) = a2;
    *(void *)(v6 + 144) = a1;
    uint64_t v7 = sub_1E3E0A7CC;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3E0100C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  sub_1E3E78D20();
  double v5 = v4;
  double v7 = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v8;
  void *v8 = v0;
  v8[1] = sub_1E3E010E4;
  return ImageProvider.placeholderData(with:)(v2, v3, v5, v7);
}

uint64_t sub_1E3E010E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

    double v7 = sub_1E3E0A7D4;
  }
  else
  {
    *(void *)(v6 + 160) = a2;
    *(void *)(v6 + 168) = a1;
    double v7 = sub_1E3E0A7D0;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3E0121C(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1E3E7A880();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_1E3E78E70();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_1E3E78740();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E013D4, 0, 0);
}

uint64_t sub_1E3E013D4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  sub_1E3C34078(v0[3], v3, &qword_1EBFE4240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1E3C10CE0(v0[12], &qword_1EBFE4240);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void, unint64_t))v0[1];
    return v4(0, 0xF000000000000000);
  }
  else
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = (void *)v0[4];
    sub_1E3C71AA8(v0[12], v0[15]);
    ArtworkModel.preferredRequest.getter(v6);
    uint64_t v9 = v7[3];
    uint64_t v8 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v9);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[16] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1E3E01574;
    uint64_t v11 = v0[11];
    return ImageProvider.data(for:)(v11, v9, v8);
  }
}

uint64_t sub_1E3E01574(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

    uint64_t v7 = sub_1E3E01790;
  }
  else
  {
    *(void *)(v6 + 136) = a2;
    *(void *)(v6 + 144) = a1;
    uint64_t v7 = sub_1E3E016AC;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3E016AC()
{
  uint64_t v1 = v0[15];
  (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);
  sub_1E3E09548(v1, MEMORY[0x1E4F915F0]);
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v3, v2);
}

uint64_t sub_1E3E01790()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  sub_1E3E78D20();
  double v5 = v4;
  double v7 = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v8;
  void *v8 = v0;
  v8[1] = sub_1E3E01868;
  return ImageProvider.placeholderData(with:)(v2, v3, v5, v7);
}

uint64_t sub_1E3E01868(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

    double v7 = sub_1E3E01A84;
  }
  else
  {
    *(void *)(v6 + 160) = a2;
    *(void *)(v6 + 168) = a1;
    double v7 = sub_1E3E019A0;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3E019A0()
{
  uint64_t v1 = v0[15];
  (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);
  sub_1E3E09548(v1, MEMORY[0x1E4F915F0]);
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[21];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v3, v2);
}

uint64_t sub_1E3E01A84()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  sub_1E3E7A740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  double v5 = sub_1E3E7A860();
  os_log_type_t v6 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = v0[9];
    uint64_t v7 = v0[10];
    uint64_t v21 = v0[8];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    uint64_t v11 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
    v0[2] = v11;
    sub_1E3E7DBD0();
    *uint64_t v10 = v11;
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v12(v7, v21);
    _os_log_impl(&dword_1E3BC5000, v5, v6, "Episode entity was unable to prepare artwork or placeholder for %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v10, -1, -1);
    MEMORY[0x1E4E79510](v9, -1, -1);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];

    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v12(v13, v15);
  }
  uint64_t v16 = v0[15];
  uint64_t v17 = v0[11];
  uint64_t v18 = v0[8];
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  v12(v17, v18);
  sub_1E3E09548(v16, MEMORY[0x1E4F915F0]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void, unint64_t))v0[1];
  return v19(0, 0xF000000000000000);
}

uint64_t sub_1E3E01CF4()
{
  uint64_t result = sub_1E3E7CD30();
  qword_1EAE293A8 = result;
  unk_1EAE293B0 = v1;
  return result;
}

uint64_t static EpisodeEntity.databaseEntityName.getter()
{
  if (qword_1EAE24550 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAE293A8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1E3E01D8C()
{
  uint64_t v0 = sub_1E3E78790();
  __swift_allocate_value_buffer(v0, qword_1EAE293B8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EAE293B8);
  uint64_t v2 = *MEMORY[0x1E4F91610];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static EpisodeEntity.serverContentType.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24558 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E78790();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE293B8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1E3E01EBC()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29CC0);
  uint64_t v0 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26020) - 8);
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v0 + 80);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1E3E86660;
  unint64_t v3 = v2 + v1;
  uint64_t v4 = v0[14];
  uint64_t v5 = *MEMORY[0x1E4F91610];
  uint64_t v6 = sub_1E3E78790();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v3, v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29CD0);
  uint64_t v7 = sub_1E3E787C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1E3E878F0;
  unint64_t v12 = v11 + v10;
  uint64_t v13 = *(void (**)(unint64_t, void, uint64_t))(v8 + 104);
  v13(v12, *MEMORY[0x1E4F91650], v7);
  v13(v12 + v9, *MEMORY[0x1E4F91658], v7);
  v13(v12 + 2 * v9, *MEMORY[0x1E4F91670], v7);
  v13(v12 + 3 * v9, *MEMORY[0x1E4F91668], v7);
  *(void *)(v3 + v4) = v11;
  unint64_t result = sub_1E3C7FAD8(v2);
  qword_1EAE293D0 = result;
  return result;
}

uint64_t static EpisodeEntity.typedIncludes.getter()
{
  if (qword_1EAE24560 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3E02160()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  qword_1EAE293D8 = result;
  return result;
}

uint64_t static EpisodeEntity.defaultQuery.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24568 != -1) {
    swift_once();
  }
  *a1 = qword_1EAE293D8;

  return sub_1E3E775E0();
}

uint64_t static EpisodeEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t EpisodeEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F10);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v32 = (char *)&v30 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = sub_1E3E77B60();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = sub_1E3E7CCE0();
  MEMORY[0x1F4188790](v14 - 8);
  MEMORY[0x1F4188790](v15);
  MEMORY[0x1F4188790](v16);
  sub_1E3E774B0();
  if (v36)
  {
    sub_1E3E7CCD0();
    sub_1E3E7CCC0();
    sub_1E3E774B0();
    sub_1E3E7CCB0();
    swift_bridgeObjectRelease();
    sub_1E3E7CCC0();
    sub_1E3E77B50();
    sub_1E3E7CCD0();
    sub_1E3E7CCC0();
    sub_1E3E7CCB0();
    swift_bridgeObjectRelease();
    sub_1E3E7CCC0();
    sub_1E3E77B50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v11, 0, 1, v34);
    uint64_t v17 = v1 + *(int *)(type metadata accessor for EpisodeEntity(0) + 88);
    unint64_t v18 = *(void *)(v17 + 8);
    if (v18 >> 60 == 15)
    {
      uint64_t v19 = sub_1E3E777B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v32, 1, 1, v19);
    }
    else
    {
      uint64_t v24 = *(void *)v17;
      sub_1E3C14F74(*(void *)v17, *(void *)(v17 + 8));
      sub_1E3C14F74(v24, v18);
      int v25 = v32;
      sub_1E3E777A0();
      uint64_t v26 = sub_1E3E777B0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
      sub_1E3C634A4(v24, v18);
    }
  }
  else
  {
    sub_1E3E7CCD0();
    sub_1E3E7CCC0();
    sub_1E3E774B0();
    sub_1E3E7CCB0();
    swift_bridgeObjectRelease();
    sub_1E3E7CCC0();
    sub_1E3E77B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v8, 1, 1, v34);
    uint64_t v20 = v1 + *(int *)(type metadata accessor for EpisodeEntity(0) + 88);
    unint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = v31;
    if (v21 >> 60 == 15)
    {
      uint64_t v23 = sub_1E3E777B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
    }
    else
    {
      uint64_t v27 = *(void *)v20;
      sub_1E3C14F74(*(void *)v20, *(void *)(v20 + 8));
      sub_1E3C14F74(v27, v21);
      sub_1E3E777A0();
      uint64_t v28 = sub_1E3E777B0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v22, 0, 1, v28);
      sub_1E3C634A4(v27, v21);
    }
  }
  return sub_1E3E777C0();
}

uint64_t EpisodeEntity.showName.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *EpisodeEntity.objectID.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t EpisodeEntity.uuid.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodeEntity.adamID.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t EpisodeEntity.title.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.title.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$title.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.description.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.description.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.description.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$description.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.category.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.category.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.category.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$category.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.creator.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.creator.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.creator.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$creator.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.showName.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.showName.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$showName.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.downloadDate.getter()
{
  return sub_1E3E774B0();
}

uint64_t sub_1E3E02E20(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C34078(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3C34078((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  return sub_1E3C10CE0((uint64_t)v7, (uint64_t *)&unk_1EBFDEDF0);
}

uint64_t EpisodeEntity.downloadDate.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C34078(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  return sub_1E3C10CE0(a1, (uint64_t *)&unk_1EBFDEDF0);
}

uint64_t (*EpisodeEntity.downloadDate.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$downloadDate.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.publishedDate.getter()
{
  return sub_1E3E774B0();
}

uint64_t sub_1E3E03040(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1E3C34078(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3C34078((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  return sub_1E3C10CE0((uint64_t)v7, (uint64_t *)&unk_1EBFDEDF0);
}

uint64_t EpisodeEntity.publishedDate.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3C34078(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  return sub_1E3C10CE0(a1, (uint64_t *)&unk_1EBFDEDF0);
}

uint64_t (*EpisodeEntity.publishedDate.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$publishedDate.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.episodeNumber.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.episodeNumber.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.episodeNumber.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$episodeNumber.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.isPlayed.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.isPlayed.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.isPlayed.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$isPlayed.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.isSaved.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.isSaved.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.isSaved.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$isSaved.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.isDownloaded.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.isDownloaded.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.isDownloaded.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$isDownloaded.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.isTranscriptAvailable.getter()
{
  sub_1E3E774B0();
  return v1;
}

uint64_t EpisodeEntity.isTranscriptAvailable.setter()
{
  return sub_1E3E774C0();
}

uint64_t (*EpisodeEntity.isTranscriptAvailable.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E774A0();
  return sub_1E3C34A04;
}

uint64_t EpisodeEntity.$isTranscriptAvailable.getter()
{
  return sub_1E3E774D0();
}

uint64_t EpisodeEntity.transcriptRequestInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EpisodeEntity(0);
  return sub_1E3C34078(v1 + *(int *)(v3 + 80), a1, qword_1EAE24FF8);
}

uint64_t EpisodeEntity.artworkModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EpisodeEntity(0);
  return sub_1E3C34078(v1 + *(int *)(v3 + 84), a1, &qword_1EBFE4240);
}

uint64_t EpisodeEntity.artworkData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for EpisodeEntity(0) + 88);
  uint64_t v2 = *(void *)v1;
  sub_1E3C8103C(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t EpisodeEntity.shareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EpisodeEntity(0);
  return sub_1E3C34078(v1 + *(int *)(v3 + 92), a1, &qword_1EBFE6070);
}

uint64_t EpisodeEntity.init(id:objectID:uuid:adamID:title:description:category:creator:showName:downloadDate:publishedDate:episodeNumber:isPlayed:isSaved:isDownloaded:isTranscriptAvailable:artworkModel:artworkData:shareURL:transcriptInformation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,unsigned __int8 a22,unsigned __int8 a23,unsigned __int8 a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v71 = a7;
  uint64_t v72 = a8;
  uint64_t v68 = a6;
  uint64_t v66 = a5;
  uint64_t v64 = a4;
  int v63 = a3;
  uint64_t v62 = a2;
  uint64_t v61 = a1;
  uint64_t v86 = a27;
  uint64_t v87 = a28;
  uint64_t v84 = a25;
  uint64_t v85 = a26;
  int v82 = a23;
  int v83 = a24;
  int v80 = a21;
  int v81 = a22;
  uint64_t v78 = a19;
  uint64_t v79 = a20;
  uint64_t v76 = a17;
  uint64_t v77 = a18;
  uint64_t v74 = a15;
  uint64_t v75 = a16;
  uint64_t v73 = a14;
  uint64_t v69 = a12;
  uint64_t v70 = a13;
  uint64_t v67 = a11;
  uint64_t v65 = a10;
  uint64_t v55 = a29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v55 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v55 - v34;
  uint64_t v36 = sub_1E3E77B60();
  MEMORY[0x1F4188790](v36 - 8);
  unint64_t v38 = (char *)&v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F00);
  sub_1E3E77B40();
  uint64_t v60 = MEMORY[0x1E4E70E10](v38);
  a9[6] = v60;
  sub_1E3E77B40();
  uint64_t v59 = MEMORY[0x1E4E70E10](v38);
  a9[7] = v59;
  sub_1E3E77B40();
  uint64_t v58 = MEMORY[0x1E4E70E10](v38);
  a9[8] = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE293F0);
  sub_1E3E77B40();
  uint64_t v57 = MEMORY[0x1E4E70E10](v38);
  a9[9] = v57;
  sub_1E3E77B40();
  a9[10] = MEMORY[0x1E4E70E10](v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2EF8);
  sub_1E3E77B40();
  a9[11] = MEMORY[0x1E4E70E00](v38);
  sub_1E3E77B40();
  a9[12] = MEMORY[0x1E4E70E00](v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE293F8);
  sub_1E3E77B40();
  a9[13] = MEMORY[0x1E4E70E30](v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F08);
  sub_1E3E77B40();
  a9[14] = MEMORY[0x1E4E70E20](v38);
  sub_1E3E77B40();
  a9[15] = MEMORY[0x1E4E70E20](v38);
  sub_1E3E77B40();
  a9[16] = MEMORY[0x1E4E70E20](v38);
  sub_1E3E77B40();
  a9[17] = MEMORY[0x1E4E70E20](v38);
  uint64_t v39 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v56 = (uint64_t)a9 + v39[21];
  uint64_t v40 = v56;
  uint64_t v41 = sub_1E3E78740();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
  v42 = (char *)a9 + v39[22];
  *(_OWORD *)v42 = xmmword_1E3E93F80;
  uint64_t v43 = (uint64_t)a9 + v39[23];
  uint64_t v44 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
  uint64_t v45 = v62;
  *a9 = v61;
  a9[1] = v45;
  v46 = v63;
  uint64_t v47 = v64;
  a9[2] = v63;
  a9[3] = v47;
  uint64_t v48 = v68;
  a9[4] = v66;
  a9[5] = v48;
  sub_1E3C34078(a29, (uint64_t)a9 + v39[20], qword_1EAE24FF8);
  uint64_t v88 = v71;
  uint64_t v89 = v72;
  id v49 = v46;
  sub_1E3E774C0();
  uint64_t v88 = v65;
  uint64_t v89 = v67;
  sub_1E3E774C0();
  uint64_t v88 = v69;
  uint64_t v89 = v70;
  sub_1E3E774C0();
  uint64_t v88 = v73;
  uint64_t v89 = v74;
  sub_1E3E774C0();
  uint64_t v88 = v75;
  uint64_t v89 = v76;
  sub_1E3E774C0();
  uint64_t v50 = v77;
  sub_1E3C34078(v77, (uint64_t)v35, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3C34078((uint64_t)v35, (uint64_t)v32, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  sub_1E3C10CE0((uint64_t)v35, (uint64_t *)&unk_1EBFDEDF0);
  uint64_t v51 = v78;
  sub_1E3C34078(v78, (uint64_t)v35, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3C34078((uint64_t)v35, (uint64_t)v32, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3E774C0();
  sub_1E3C10CE0((uint64_t)v35, (uint64_t *)&unk_1EBFDEDF0);
  uint64_t v88 = v79;
  sub_1E3E774C0();
  LOBYTE(v88) = v80;
  sub_1E3E774C0();
  LOBYTE(v88) = v81;
  sub_1E3E774C0();
  LOBYTE(v88) = v82;
  sub_1E3E774C0();
  LOBYTE(v88) = v83;
  sub_1E3E774C0();

  sub_1E3C10CE0(v55, qword_1EAE24FF8);
  sub_1E3C10CE0(v51, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3C10CE0(v50, (uint64_t *)&unk_1EBFDEDF0);
  sub_1E3CDA16C(v84, v56, &qword_1EBFE4240);
  sub_1E3C634A4(*(void *)v42, *((void *)v42 + 1));
  uint64_t v53 = v86;
  uint64_t v52 = v87;
  *(void *)v42 = v85;
  *((void *)v42 + 1) = v53;
  return sub_1E3CDA16C(v52, v43, &qword_1EBFE6070);
}

uint64_t EpisodeEntity.init(model:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  v112 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  MEMORY[0x1F4188790](v3 - 8);
  v111 = &v92[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v5 - 8);
  v117 = &v92[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  v116 = &v92[-v8];
  uint64_t v9 = sub_1E3E77D00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v92[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
  MEMORY[0x1F4188790](v13 - 8);
  v110 = &v92[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  v115 = &v92[-v16];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v17 - 8);
  v109 = &v92[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = &v92[-v20];
  double v23 = MEMORY[0x1F4188790](v22);
  int v25 = &v92[-v24];
  if (((unint64_t)objc_msgSend(a1, sel_storeTrackId, v23) & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1E3E7DF70();
    __break(1u);
  }
  else
  {
    uint64_t v113 = sub_1E3E7A530();
    uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v26(v25, 1, 1, v9);
    id v27 = objc_msgSend(a1, sel_podcast);
    v114 = v25;
    if (v27)
    {
      uint64_t v28 = v27;
      id v29 = objc_msgSend(v27, sel_storeCollectionId);

      id v30 = objc_msgSend(self, sel_productURLForStoreCollectionId_storeTrackId_, v29, objc_msgSend(a1, sel_storeTrackId));
      if (v30)
      {
        uint64_t v31 = v30;
        sub_1E3E77C90();

        uint64_t v32 = 0;
      }
      else
      {
        uint64_t v32 = 1;
      }
      uint64_t v33 = (uint64_t)v114;
      sub_1E3C10CE0((uint64_t)v114, &qword_1EBFE6070);
      v26(v21, v32, 1, v9);
      sub_1E3C24558((uint64_t)v21, v33);
    }
    id v34 = objc_msgSend(a1, sel_transcriptIdentifier);
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v36 = sub_1E3E7CD30();
      uint64_t v38 = v37;

      v118[0] = v36;
      v118[1] = v38;
      swift_bridgeObjectRetain();
      uint64_t v39 = v115;
      sub_1E3E04938((uint64_t)v118, v113, a1);
      swift_bridgeObjectRelease();
      uint64_t v40 = sub_1E3E7A2E0();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = sub_1E3E7A2E0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v115, 1, 1, v41);
    }
    v42 = v111;
    id v43 = objc_msgSend(a1, sel_objectID);
    id v44 = objc_msgSend(v43, sel_URIRepresentation);

    sub_1E3E77C90();
    uint64_t v45 = (unsigned char *)sub_1E3E77C00();
    uint64_t v108 = v46;
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    id v47 = objc_msgSend(a1, sel_objectID);
    id v48 = objc_msgSend(a1, sel_uuid);
    v111 = v45;
    if (v48)
    {
      id v49 = v48;
      uint64_t v50 = sub_1E3E7CD30();
      uint64_t v105 = v51;
      uint64_t v106 = v50;
    }
    else
    {
      uint64_t v105 = 0;
      uint64_t v106 = 0;
    }
    id v52 = objc_msgSend(a1, sel_title);
    if (v52)
    {
      uint64_t v53 = v52;
      uint64_t v54 = sub_1E3E7CD30();
      uint64_t v103 = v55;
      uint64_t v104 = v54;
    }
    else
    {
      uint64_t v103 = 0xE000000000000000;
      uint64_t v104 = 0;
    }
    id v56 = objc_msgSend(a1, sel_description);
    uint64_t v57 = sub_1E3E7CD30();
    uint64_t v101 = v58;

    id v59 = objc_msgSend(a1, sel_category);
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v100 = sub_1E3E7CD30();
      uint64_t v99 = v61;
    }
    else
    {
      uint64_t v100 = 0;
      uint64_t v99 = 0xE000000000000000;
    }
    id v62 = objc_msgSend(a1, sel_author);
    if (v62)
    {
      int v63 = v62;
      uint64_t v98 = sub_1E3E7CD30();
      uint64_t v97 = v64;
    }
    else
    {
      uint64_t v98 = 0;
      uint64_t v97 = 0;
    }
    id v65 = objc_msgSend(a1, sel_podcast);
    if (v65
      && (uint64_t v66 = v65, v67 = objc_msgSend(v65, sel_title), v66, v67))
    {
      uint64_t v96 = sub_1E3E7CD30();
      uint64_t v95 = v68;
    }
    else
    {
      uint64_t v96 = 0;
      uint64_t v95 = 0;
    }
    objc_msgSend(a1, sel_downloadDate);
    if (v69 <= 0.0)
    {
      uint64_t v72 = sub_1E3E77E20();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v116, 1, 1, v72);
    }
    else
    {
      objc_msgSend(a1, sel_downloadDate);
      uint64_t v70 = v116;
      sub_1E3E77D70();
      uint64_t v71 = sub_1E3E77E20();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
    }
    objc_msgSend(a1, sel_pubDate);
    if (v73 <= 0.0)
    {
      uint64_t v76 = sub_1E3E77E20();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v117, 1, 1, v76);
    }
    else
    {
      objc_msgSend(a1, sel_pubDate);
      uint64_t v74 = v117;
      sub_1E3E77D70();
      uint64_t v75 = sub_1E3E77E20();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
    }
    id v94 = objc_msgSend(a1, sel_episodeNumber);
    id v77 = objc_msgSend(a1, sel_playState);
    unsigned int v93 = objc_msgSend(a1, sel_isBookmarked);
    id v78 = objc_msgSend(a1, sel_assetURL);
    id v79 = v78;
    if (v78) {

    }
    id v80 = objc_msgSend(a1, sel_transcriptIdentifier);
    id v81 = v80;
    if (v80) {

    }
    id v82 = objc_msgSend(a1, sel_podcast);
    v107 = v47;
    uint64_t v102 = v57;
    if (v82)
    {
      int v83 = v82;
      sub_1E3E7DB10();
    }
    else
    {
      uint64_t v84 = sub_1E3E78740();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v42, 1, 1, v84);
    }
    uint64_t v85 = (uint64_t)v42;
    unsigned __int8 v86 = v79 != 0;
    uint64_t v87 = (uint64_t)v114;
    uint64_t v88 = v109;
    sub_1E3C34078((uint64_t)v114, (uint64_t)v109, &qword_1EBFE6070);
    uint64_t v89 = v115;
    v90 = v110;
    sub_1E3C34078((uint64_t)v115, (uint64_t)v110, qword_1EAE24FF8);
    EpisodeEntity.init(id:objectID:uuid:adamID:title:description:category:creator:showName:downloadDate:publishedDate:episodeNumber:isPlayed:isSaved:isDownloaded:isTranscriptAvailable:artworkModel:artworkData:shareURL:transcriptInformation:)((uint64_t)v111, v108, v107, v106, v105, v113, v104, v103, v112, v102, v101, v100, v99, v98, v97, v96, v95, (uint64_t)v116, (uint64_t)v117,
      (uint64_t)v94,
      v77 == 0,
      v93,
      v86,
      v81 != 0,
      v85,
      0,
      0xF000000000000000,
      (uint64_t)v88,
      (uint64_t)v90);

    sub_1E3C10CE0((uint64_t)v89, qword_1EAE24FF8);
    return sub_1E3C10CE0(v87, &qword_1EBFE6070);
  }
  return result;
}

uint64_t sub_1E3E04938(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29490);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1E3C340DC();
  sub_1E3E7DC90();
  id v5 = objc_msgSend(a3, sel_title);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1E3E7CD30();
  }
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(a3, sel_podcast);
  uint64_t v8 = v7;
  if (v7)
  {
    id v9 = objc_msgSend(v7, sel_title);

    if (v9)
    {
      sub_1E3E7CD30();
    }
  }
  id v10 = objc_msgSend(a3, sel_transcriptProvider);
  sub_1E3E7CD30();

  sub_1E3E793C0();
  return sub_1E3E7A2D0();
}

void EpisodeEntity.init(mediaObject:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v87 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v88 = (uint64_t)&v72 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v72 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1E3E79AB0();
  uint64_t v23 = sub_1E3E7A510();
  id v82 = a2;
  int v83 = v16;
  uint64_t v84 = v6;
  uint64_t v85 = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1E3E77D00();
  int v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  v25(v22, 1, 1, v24);
  uint64_t v26 = sub_1E3E79A90();
  unsigned __int8 v86 = v22;
  if (v26)
  {
    id v27 = (void *)v26;
    uint64_t v28 = (void *)sub_1E3E7A1F0();

    if (v28)
    {
      unint64_t v29 = sub_1E3E7A250();

      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1E3E7DFC0();
        swift_bridgeObjectRelease();
        if (v38)
        {
LABEL_5:
          if ((v29 & 0xC000000000000001) != 0)
          {
            id v30 = (id)MEMORY[0x1E4E77720](0, v29);
          }
          else
          {
            if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_36;
            }
            id v30 = *(id *)(v29 + 32);
          }
          uint64_t v31 = v30;
          swift_bridgeObjectRelease();
          sub_1E3E79560();

          uint64_t v32 = sub_1E3E7A510();
          swift_bridgeObjectRelease();
          uint64_t v33 = (uint64_t)v86;
          id v34 = self;
          if (((v32 | v85) & 0x8000000000000000) == 0)
          {
            id v35 = objc_msgSend(v34, sel_productURLForStoreCollectionId_storeTrackId_, v32);
            if (v35)
            {
              uint64_t v36 = v35;
              sub_1E3E77C90();

              uint64_t v37 = 0;
            }
            else
            {
              uint64_t v37 = 1;
            }
            sub_1E3C10CE0(v33, &qword_1EBFE6070);
            v25(v19, v37, 1, v24);
            sub_1E3C24558((uint64_t)v19, v33);
            goto LABEL_15;
          }
LABEL_36:
          __break(1u);
          return;
        }
      }
      else if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
    }
  }
LABEL_15:
  uint64_t v39 = sub_1E3E79AB0();
  uint64_t v41 = v40;
  id v42 = objc_msgSend(a1, sel_title);
  if (v42)
  {
    id v43 = v42;
    uint64_t v44 = sub_1E3E7CD30();
    uint64_t v78 = v45;
    uint64_t v79 = v44;
  }
  else
  {
    uint64_t v78 = 0xE000000000000000;
    uint64_t v79 = 0;
  }
  uint64_t v46 = v87;
  id v47 = objc_msgSend(a1, sel_itemSummary);
  if (v47)
  {
    id v48 = v47;
    uint64_t v49 = sub_1E3E7CD30();
    uint64_t v76 = v50;
    uint64_t v77 = v49;
  }
  else
  {
    uint64_t v76 = 0xE000000000000000;
    uint64_t v77 = 0;
  }
  id v51 = objc_msgSend(a1, sel_category);
  if (v51)
  {
    id v52 = v51;
    uint64_t v53 = sub_1E3E7CD30();
    uint64_t v74 = v54;
    uint64_t v75 = v53;
  }
  else
  {
    uint64_t v74 = 0xE000000000000000;
    uint64_t v75 = 0;
  }
  id v55 = objc_msgSend(a1, sel_author);
  uint64_t v80 = v41;
  uint64_t v81 = v39;
  if (v55)
  {
    id v56 = v55;
    uint64_t v57 = sub_1E3E7CD30();
    uint64_t v72 = v58;
    uint64_t v73 = v57;
  }
  else
  {
    uint64_t v72 = 0;
    uint64_t v73 = 0;
  }
  uint64_t v59 = sub_1E3E77E20();
  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
  uint64_t v61 = 1;
  v60(v88, 1, 1, v59);
  id v62 = objc_msgSend(a1, sel_pubDate);
  if (v62)
  {
    int v63 = v62;
    sub_1E3E77DF0();

    uint64_t v61 = 0;
  }
  v60(v46, v61, 1, v59);
  id v64 = objc_msgSend(a1, sel_episodeNumber);
  id v65 = objc_msgSend(a1, sel_freeTranscriptIdentifier);
  if (v65 || (id v65 = objc_msgSend(a1, sel_entitledTranscriptIdentifier)) != 0)
  {

    unsigned __int8 v66 = 1;
  }
  else
  {
    unsigned __int8 v66 = 0;
  }
  id v67 = v82;
  uint64_t v68 = sub_1E3E78740();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v9, 1, 1, v68);
  uint64_t v69 = (uint64_t)v86;
  uint64_t v70 = (uint64_t)v83;
  sub_1E3C34078((uint64_t)v86, (uint64_t)v83, &qword_1EBFE6070);
  uint64_t v71 = (uint64_t)v84;
  sub_1E3E79AA0();
  EpisodeEntity.init(id:objectID:uuid:adamID:title:description:category:creator:showName:downloadDate:publishedDate:episodeNumber:isPlayed:isSaved:isDownloaded:isTranscriptAvailable:artworkModel:artworkData:shareURL:transcriptInformation:)(v81, v80, 0, 0, 0, v85, v79, v78, v67, v77, v76, v75, v74, v73, v72, 0, 0, v88, v87,
    (uint64_t)v64,
    0,
    0,
    0,
    v66,
    (uint64_t)v9,
    0,
    0xF000000000000000,
    v70,
    v71);

  sub_1E3C10CE0(v69, &qword_1EBFE6070);
}

uint64_t sub_1E3E05220@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24568 != -1) {
    swift_once();
  }
  *a1 = qword_1EAE293D8;

  return sub_1E3E775E0();
}

uint64_t sub_1E3E05290()
{
  if (qword_1EAE24550 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAE293A8;
  swift_bridgeObjectRetain();
  return v0;
}

Swift::Void __swiftcall EpisodeEntity.alignID(with:)(Swift::String with)
{
  object = with._object;
  uint64_t v3 = (void *)v1[4];
  if (v3)
  {
    uint64_t countAndFlagsBits = with._countAndFlagsBits;
    BOOL v5 = v1[3] == with._countAndFlagsBits && v3 == object;
    if (v5 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *uint64_t v1 = countAndFlagsBits;
      v1[1] = (uint64_t)object;
    }
  }
}

Swift::Void __swiftcall EpisodeEntity.alignID(with:)(NSManagedObjectID with)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)v2[2];
  if (v8)
  {
    sub_1E3D35350();
    id v9 = with.super.isa;
    id v10 = v8;
    char v11 = sub_1E3E7DA80();

    if (v11)
    {
      id v12 = [(objc_class *)v9 URIRepresentation];
      sub_1E3E77C90();

      uint64_t v13 = sub_1E3E77C00();
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      *uint64_t v2 = v13;
      v2[1] = v15;
    }
  }
}

uint64_t sub_1E3E054C4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAE24558 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1E3E78790();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAE293B8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1E3E0556C()
{
  if (qword_1EAE24560 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t EpisodeEntity.alignID(with:)(uint64_t result)
{
  if (v1[5] == result)
  {
    uint64_t v2 = v1;
    sub_1E3C340DC();
    uint64_t v3 = sub_1E3E7DC90();
    uint64_t v5 = v4;
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v3;
    v2[1] = v5;
  }
  return result;
}

uint64_t sub_1E3E05634()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2F18);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1E3E77B60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  sub_1E3E77B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1E3E77890();
}

uint64_t sub_1E3E05774(uint64_t a1)
{
  uint64_t v2 = sub_1E3E06DD8((unint64_t *)&qword_1EBFE3060, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);

  return MEMORY[0x1F40D3BC8](a1, v2);
}

uint64_t sub_1E3E057F4(uint64_t a1)
{
  uint64_t v2 = sub_1E3E06DD8(&qword_1EBFE3088, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);

  return MEMORY[0x1F40D4970](a1, v2);
}

unint64_t static EpisodeEntity.CustomRepresentation.bundleIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t static EpisodeEntity.CustomRepresentation.typeIdentifier.getter()
{
  return 0x4565646F73697045;
}

uint64_t EpisodeEntity.CustomRepresentation.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78280();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_1E3E782E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t EpisodeEntity.CustomRepresentation.init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E78280();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  uint64_t v6 = sub_1E3E782E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t EpisodeEntity.CustomRepresentation.__deallocating_deinit()
{
  _s10PodcastsUI10ShowEntityV20CustomRepresentationCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1E3E05AE0()
{
  return 0x4565646F73697045;
}

uint64_t sub_1E3E05B04(uint64_t a1)
{
  uint64_t v3 = sub_1E3E06DD8(&qword_1EAE29438, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);

  return MEMORY[0x1F4108D40](a1, v1, v3);
}

uint64_t sub_1E3E05B74()
{
  uint64_t v1 = sub_1E3E06DD8(&qword_1EAE29428, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);

  return MEMORY[0x1F4108AC8](v0, v1);
}

uint64_t sub_1E3E05BD4(uint64_t a1)
{
  uint64_t v3 = sub_1E3E06DD8(&qword_1EAE29438, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);

  return MEMORY[0x1F4108D30](a1, v1, v3);
}

uint64_t EpisodeEntity.mediaRepresentation.getter(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v2[9] = swift_task_alloc();
  uint64_t v3 = sub_1E3E77520();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for EpisodeEntity(0);
  v2[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E05D64, 0, 0);
}

uint64_t sub_1E3E05D64()
{
  uint64_t v1 = *(void *)(v0[8] + 40);
  if (sub_1E3E7A520())
  {
    uint64_t v2 = v0[8];
    uint64_t v3 = *(void *)(v2 + 32);
    sub_1E3C2ACB0(v2, v0[14]);
    uint64_t v4 = v0[14];
    if (!v3) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_1E3E09548(v4, type metadata accessor for EpisodeEntity);
  }
  else
  {
    v0[6] = v1;
    sub_1E3C340DC();
    sub_1E3E7DC90();
  }
  uint64_t v5 = v0[13];
  uint64_t v7 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[10];
  uint64_t v10 = v0[8];
  sub_1E3E774B0();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, *MEMORY[0x1E4F18468], v9);
  sub_1E3C8103C(*(void *)(v10 + *(int *)(v5 + 88)), *(void *)(v10 + *(int *)(v5 + 88) + 8));
  sub_1E3E774B0();
  uint64_t v11 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  sub_1E3E77530();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1E3E05F60(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1E3C19DC4;
  return EpisodeEntity.mediaRepresentation.getter(a1);
}

uint64_t EpisodeEntity.debugDescription.getter()
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  MEMORY[0x1F4188790](v12);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1E3E7DDD0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  id v13 = (id)v0[2];
  id v7 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29308);
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  uint64_t v8 = v0[4];
  id v13 = (id)v0[3];
  uint64_t v14 = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26D8);
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  id v13 = (id)v0[5];
  sub_1E3C340DC();
  sub_1E3E7DC90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7E0E0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E774B0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  uint64_t v9 = type metadata accessor for EpisodeEntity(0);
  sub_1E3C34078((uint64_t)v0 + *(int *)(v9 + 92), (uint64_t)v5, &qword_1EBFE6070);
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3C34078((uint64_t)v0 + *(int *)(v9 + 84), (uint64_t)v2, &qword_1EBFE4240);
  sub_1E3E7CD90();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  return v15;
}

uint64_t static EpisodeEntity.transferRepresentation.getter()
{
  uint64_t v0 = type metadata accessor for EpisodeEntity(0);
  uint64_t v1 = sub_1E3E06DD8(&qword_1EAE29408, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
  unint64_t v2 = sub_1E3DE7F40();
  uint64_t v3 = MEMORY[0x1E4FBB1A0];

  return MEMORY[0x1F40DFA60](sub_1E3E066AC, 0, v0, v3, v1, v2);
}

uint64_t sub_1E3E066AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EpisodeEntity(0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C34078(a1 + *(int *)(v5 + 100), (uint64_t)v10, &qword_1EBFE6070);
  uint64_t v11 = sub_1E3E77D00();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE6070);
    sub_1E3C2ACB0(a1, (uint64_t)v7);
LABEL_4:
    sub_1E3E774B0();
    uint64_t v13 = v17[0];
    uint64_t v15 = v17[1];
    goto LABEL_5;
  }
  uint64_t v13 = sub_1E3E77C00();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  sub_1E3C2ACB0(a1, (uint64_t)v7);
  if (!v15) {
    goto LABEL_4;
  }
LABEL_5:
  uint64_t result = sub_1E3E09548((uint64_t)v7, type metadata accessor for EpisodeEntity);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_1E3E0688C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1E3DE7F40();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];

  return MEMORY[0x1F40DFA60](sub_1E3E066AC, 0, a1, v5, a2, v4);
}

uint64_t sub_1E3E06900(uint64_t a1, uint64_t a2)
{
  v3[7] = v2;
  v3[8] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[9] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1E3E069C8;
  return MEMORY[0x1F4127FF8](v3 + 2, v4, v4);
}

uint64_t sub_1E3E069C8()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3DF43E8, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[7] + *(int *)(v2[8] + 84);
    uint64_t v6 = (char *)&dword_1EAE293E8 + dword_1EAE293E8;
    uint64_t v4 = (void *)swift_task_alloc();
    v2[11] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1E3E06B74;
    return ((uint64_t (*)(uint64_t, void *))v6)(v3, v2 + 2);
  }
}

uint64_t sub_1E3E06B74(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1E3DF3FDC;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    uint64_t v7 = sub_1E3E06CA8;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3E06CA8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v5 = v4 + *(int *)(v3 + 88);
  sub_1E3C634A4(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v1;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t EpisodeEntity.episodeStateIdentifier.getter()
{
  uint64_t v1 = v0[5];
  if ((sub_1E3E7A520() & 1) != 0 && v0[4])
  {
    uint64_t v1 = v0[3];
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_1E3E06D90()
{
  return sub_1E3E06DD8(&qword_1EBFE3058, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E06DD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3E06E20()
{
  return sub_1E3E06DD8(&qword_1EBFE3070, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E06E68()
{
  return sub_1E3E06DD8(&qword_1EBFE3098, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E06EB0()
{
  return sub_1E3E06DD8(&qword_1EBFE3078, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E06EF8()
{
  return sub_1E3E06DD8(&qword_1EBFE3080, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E06F40()
{
  return sub_1E3E06DD8(&qword_1EBFE3068, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E06F88()
{
  return sub_1E3E06DD8(&qword_1EBFE3088, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E06FD0()
{
  return sub_1E3C10DE8(&qword_1EAE29410, &qword_1EAE29418);
}

uint64_t sub_1E3E0700C()
{
  return sub_1E3E06DD8(&qword_1EBFE3090, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E07054()
{
  return sub_1E3E06DD8(&qword_1EAE29420, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t type metadata accessor for EpisodeEntity.CustomRepresentation(uint64_t a1)
{
  return sub_1E3D2A998(a1, (uint64_t *)&unk_1EAE29470);
}

uint64_t sub_1E3E070BC()
{
  return sub_1E3E06DD8(&qword_1EAE29428, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t sub_1E3E07104()
{
  return sub_1E3E06DD8(&qword_1EAE29430, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t sub_1E3E0714C()
{
  return sub_1E3E06DD8(&qword_1EAE29438, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t sub_1E3E07194()
{
  return sub_1E3E06DD8(&qword_1EAE26860, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t sub_1E3E071DC()
{
  return sub_1E3E06DD8(&qword_1EAE29440, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t sub_1E3E07224()
{
  return sub_1E3E06DD8(&qword_1EAE29448, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t sub_1E3E0726C()
{
  return sub_1E3E06DD8(&qword_1EAE29450, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t sub_1E3E072B4()
{
  return sub_1E3E06DD8((unint64_t *)&unk_1EAE29458, (void (*)(uint64_t))type metadata accessor for EpisodeEntity.CustomRepresentation);
}

uint64_t sub_1E3E072FC()
{
  return sub_1E3E06DD8((unint64_t *)&qword_1EBFE3060, (void (*)(uint64_t))type metadata accessor for EpisodeEntity);
}

uint64_t sub_1E3E07344()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3E07360@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3E0739C()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3E073D8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3E07414()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3E07450@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3E0748C()
{
  return sub_1E3E774C0();
}

double sub_1E3E074C8@<D0>(_OWORD *a1@<X8>)
{
  sub_1E3E774B0();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E07504()
{
  return sub_1E3E774C0();
}

double sub_1E3E07540@<D0>(_OWORD *a1@<X8>)
{
  sub_1E3E774B0();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E0757C()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3E075B8()
{
  return sub_1E3E774B0();
}

uint64_t sub_1E3E075E0()
{
  return sub_1E3E774B0();
}

uint64_t sub_1E3E07608@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E07644()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3E0767C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E076B8()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3E076F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E0772C()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3E07764@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E077A0()
{
  return sub_1E3E774C0();
}

uint64_t sub_1E3E077D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E3E774B0();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E07814()
{
  return sub_1E3E774C0();
}

uint64_t *initializeBufferWithCopyOfBuffer for EpisodeEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v8 = (void *)a2[2];
    uint64_t v7 = a2[3];
    a1[2] = (uint64_t)v8;
    a1[3] = v7;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v74 = a2[11];
    a1[10] = a2[10];
    a1[11] = v74;
    uint64_t v12 = a2[13];
    a1[12] = a2[12];
    a1[13] = v12;
    uint64_t v13 = a2[15];
    uint64_t v14 = a2[16];
    a1[14] = a2[14];
    a1[15] = v13;
    uint64_t v15 = a2[17];
    uint64_t v16 = a3[20];
    __dst = (char *)a1 + v16;
    uint64_t v73 = (char *)a2 + v16;
    a1[16] = v14;
    a1[17] = v15;
    uint64_t v17 = sub_1E3E7A2E0();
    uint64_t v72 = *(void *)(v17 - 8);
    uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    id v19 = v8;
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    if (v75(v73, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
      memcpy(__dst, v73, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(__dst, v73, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v22 = a3[21];
    uint64_t v23 = (uint64_t *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    int v25 = (int *)sub_1E3E78740();
    uint64_t v26 = *((void *)v25 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v28;
      int v29 = *((unsigned __int8 *)v24 + 32);
      swift_bridgeObjectRetain();
      if (v29 == 255)
      {
        *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
        *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
      }
      else
      {
        uint64_t v30 = v24[2];
        uint64_t v31 = v24[3];
        sub_1E3C2B454(v30, v31, v29);
        v23[2] = v30;
        v23[3] = v31;
        *((unsigned char *)v23 + 32) = v29;
      }
      *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
      uint64_t v32 = (id *)(v24 + 7);
      int v33 = *((unsigned __int8 *)v24 + 64);
      if (v33 == 255)
      {
        v23[7] = *v32;
        *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
      }
      else
      {
        id v34 = *v32;
        sub_1E3C2B46C(*v32, *((unsigned char *)v24 + 64));
        v23[7] = v34;
        *((unsigned char *)v23 + 64) = v33;
      }
      id v35 = (id *)(v24 + 9);
      int v36 = *((unsigned __int8 *)v24 + 80);
      if (v36 == 255)
      {
        v23[9] = *v35;
        *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
      }
      else
      {
        id v37 = *v35;
        sub_1E3C2B46C(*v35, *((unsigned char *)v24 + 80));
        v23[9] = v37;
        *((unsigned char *)v23 + 80) = v36;
      }
      uint64_t v38 = (id *)(v24 + 11);
      int v39 = *((unsigned __int8 *)v24 + 96);
      if (v39 == 255)
      {
        v23[11] = *v38;
        *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
      }
      else
      {
        id v40 = *v38;
        sub_1E3C2B46C(*v38, *((unsigned char *)v24 + 96));
        v23[11] = v40;
        *((unsigned char *)v23 + 96) = v39;
      }
      uint64_t v41 = (id *)(v24 + 13);
      int v42 = *((unsigned __int8 *)v24 + 112);
      if (v42 == 255)
      {
        v23[13] = *v41;
        *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
      }
      else
      {
        id v43 = *v41;
        sub_1E3C2B46C(*v41, *((unsigned char *)v24 + 112));
        v23[13] = v43;
        *((unsigned char *)v23 + 112) = v42;
      }
      uint64_t v44 = (id *)(v24 + 15);
      int v45 = *((unsigned __int8 *)v24 + 128);
      if (v45 == 255)
      {
        v23[15] = *v44;
        *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
      }
      else
      {
        id v46 = *v44;
        sub_1E3C2B46C(*v44, *((unsigned char *)v24 + 128));
        v23[15] = v46;
        *((unsigned char *)v23 + 128) = v45;
      }
      *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
      uint64_t v47 = v25[11];
      id v48 = (char *)v23 + v47;
      uint64_t v49 = (char *)v24 + v47;
      uint64_t v50 = sub_1E3E78630();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v25[12];
      id v52 = (void *)((char *)v23 + v51);
      uint64_t v53 = (void *)((char *)v24 + v51);
      uint64_t v54 = v53[1];
      *id v52 = *v53;
      v52[1] = v54;
      *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
      *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
      *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
      uint64_t v55 = v25[16];
      id v56 = (void *)((char *)v23 + v55);
      uint64_t v57 = (void *)((char *)v24 + v55);
      uint64_t v58 = v57[1];
      void *v56 = *v57;
      v56[1] = v58;
      uint64_t v59 = *(void (**)(void *, void, uint64_t, int *))(v26 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59(v23, 0, 1, v25);
    }
    uint64_t v60 = a3[22];
    uint64_t v61 = (char *)v4 + v60;
    id v62 = (char *)a2 + v60;
    unint64_t v63 = *((void *)v62 + 1);
    if (v63 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    }
    else
    {
      uint64_t v64 = *(void *)v62;
      sub_1E3C14F74(*(void *)v62, *((void *)v62 + 1));
      *(void *)uint64_t v61 = v64;
      *((void *)v61 + 1) = v63;
    }
    uint64_t v65 = a3[23];
    unsigned __int8 v66 = (char *)v4 + v65;
    id v67 = (char *)a2 + v65;
    uint64_t v68 = sub_1E3E77D00();
    uint64_t v69 = *(void *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
  }
  return v4;
}

uint64_t destroy for EpisodeEntity(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[20];
  uint64_t v5 = sub_1E3E7A2E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[21];
  uint64_t v8 = sub_1E3E78740();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    int v9 = *(unsigned __int8 *)(v7 + 32);
    if (v9 != 255) {
      sub_1E3C2B7BC(*(void *)(v7 + 16), *(void *)(v7 + 24), v9);
    }
    int v10 = *(unsigned __int8 *)(v7 + 64);
    if (v10 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 56), v10);
    }
    int v11 = *(unsigned __int8 *)(v7 + 80);
    if (v11 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 72), v11);
    }
    int v12 = *(unsigned __int8 *)(v7 + 96);
    if (v12 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 88), v12);
    }
    int v13 = *(unsigned __int8 *)(v7 + 112);
    if (v13 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 104), v13);
    }
    int v14 = *(unsigned __int8 *)(v7 + 128);
    if (v14 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 120), v14);
    }
    uint64_t v15 = v7 + *(int *)(v8 + 44);
    uint64_t v16 = sub_1E3E78630();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (uint64_t *)(a1 + a2[22]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_1E3C2B7E8(*v17, v18);
  }
  uint64_t v19 = a1 + a2[23];
  uint64_t v20 = sub_1E3E77D00();
  uint64_t v23 = *(void *)(v20 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v19, 1, v20);
  if (!result)
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    return v22(v19, v20);
  }
  return result;
}

void *initializeWithCopy for EpisodeEntity(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v7 = (void *)a2[2];
  uint64_t v6 = a2[3];
  a1[2] = v7;
  a1[3] = v6;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  uint64_t v72 = a2[11];
  a1[10] = a2[10];
  a1[11] = v72;
  uint64_t v11 = a2[13];
  a1[12] = a2[12];
  a1[13] = v11;
  uint64_t v12 = a2[15];
  uint64_t v13 = a2[16];
  a1[14] = a2[14];
  a1[15] = v12;
  uint64_t v14 = a2[17];
  uint64_t v15 = a3[20];
  __dst = (char *)a1 + v15;
  uint64_t v71 = (char *)a2 + v15;
  a1[16] = v13;
  a1[17] = v14;
  uint64_t v16 = sub_1E3E7A2E0();
  uint64_t v70 = *(void *)(v16 - 8);
  uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  id v18 = v7;
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v73(v71, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(__dst, v71, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(__dst, v71, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v20 = a3[21];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = (int *)sub_1E3E78740();
  uint64_t v24 = *((void *)v23 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v26;
    int v27 = *((unsigned __int8 *)v22 + 32);
    swift_bridgeObjectRetain();
    if (v27 == 255)
    {
      *((_OWORD *)v21 + 1) = *((_OWORD *)v22 + 1);
      *((unsigned char *)v21 + 32) = *((unsigned char *)v22 + 32);
    }
    else
    {
      uint64_t v28 = v22[2];
      uint64_t v29 = v22[3];
      sub_1E3C2B454(v28, v29, v27);
      v21[2] = v28;
      v21[3] = v29;
      *((unsigned char *)v21 + 32) = v27;
    }
    *(_OWORD *)(v21 + 5) = *(_OWORD *)(v22 + 5);
    uint64_t v30 = (id *)(v22 + 7);
    int v31 = *((unsigned __int8 *)v22 + 64);
    if (v31 == 255)
    {
      v21[7] = *v30;
      *((unsigned char *)v21 + 64) = *((unsigned char *)v22 + 64);
    }
    else
    {
      id v32 = *v30;
      sub_1E3C2B46C(*v30, *((unsigned char *)v22 + 64));
      v21[7] = v32;
      *((unsigned char *)v21 + 64) = v31;
    }
    int v33 = (id *)(v22 + 9);
    int v34 = *((unsigned __int8 *)v22 + 80);
    if (v34 == 255)
    {
      v21[9] = *v33;
      *((unsigned char *)v21 + 80) = *((unsigned char *)v22 + 80);
    }
    else
    {
      id v35 = *v33;
      sub_1E3C2B46C(*v33, *((unsigned char *)v22 + 80));
      v21[9] = v35;
      *((unsigned char *)v21 + 80) = v34;
    }
    int v36 = (id *)(v22 + 11);
    int v37 = *((unsigned __int8 *)v22 + 96);
    if (v37 == 255)
    {
      v21[11] = *v36;
      *((unsigned char *)v21 + 96) = *((unsigned char *)v22 + 96);
    }
    else
    {
      id v38 = *v36;
      sub_1E3C2B46C(*v36, *((unsigned char *)v22 + 96));
      v21[11] = v38;
      *((unsigned char *)v21 + 96) = v37;
    }
    int v39 = (id *)(v22 + 13);
    int v40 = *((unsigned __int8 *)v22 + 112);
    if (v40 == 255)
    {
      v21[13] = *v39;
      *((unsigned char *)v21 + 112) = *((unsigned char *)v22 + 112);
    }
    else
    {
      id v41 = *v39;
      sub_1E3C2B46C(*v39, *((unsigned char *)v22 + 112));
      v21[13] = v41;
      *((unsigned char *)v21 + 112) = v40;
    }
    int v42 = (id *)(v22 + 15);
    int v43 = *((unsigned __int8 *)v22 + 128);
    if (v43 == 255)
    {
      v21[15] = *v42;
      *((unsigned char *)v21 + 128) = *((unsigned char *)v22 + 128);
    }
    else
    {
      id v44 = *v42;
      sub_1E3C2B46C(*v42, *((unsigned char *)v22 + 128));
      v21[15] = v44;
      *((unsigned char *)v21 + 128) = v43;
    }
    *((unsigned char *)v21 + 129) = *((unsigned char *)v22 + 129);
    uint64_t v45 = v23[11];
    id v46 = (char *)v21 + v45;
    uint64_t v47 = (char *)v22 + v45;
    uint64_t v48 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
    uint64_t v49 = v23[12];
    uint64_t v50 = (void *)((char *)v21 + v49);
    uint64_t v51 = (void *)((char *)v22 + v49);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    *((unsigned char *)v21 + v23[13]) = *((unsigned char *)v22 + v23[13]);
    *((unsigned char *)v21 + v23[14]) = *((unsigned char *)v22 + v23[14]);
    *((unsigned char *)v21 + v23[15]) = *((unsigned char *)v22 + v23[15]);
    uint64_t v53 = v23[16];
    uint64_t v54 = (void *)((char *)v21 + v53);
    uint64_t v55 = (void *)((char *)v22 + v53);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    uint64_t v57 = *(void (**)(void *, void, uint64_t, int *))(v24 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57(v21, 0, 1, v23);
  }
  uint64_t v58 = a3[22];
  uint64_t v59 = (char *)a1 + v58;
  uint64_t v60 = (char *)a2 + v58;
  unint64_t v61 = *((void *)v60 + 1);
  if (v61 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  }
  else
  {
    uint64_t v62 = *(void *)v60;
    sub_1E3C14F74(*(void *)v60, *((void *)v60 + 1));
    *(void *)uint64_t v59 = v62;
    *((void *)v59 + 1) = v61;
  }
  uint64_t v63 = a3[23];
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = sub_1E3E77D00();
  uint64_t v67 = *(void *)(v66 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  return a1;
}

void *assignWithCopy for EpisodeEntity(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[2];
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  id v8 = v7;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1E3E775E0();
  swift_release();
  a1[7] = a2[7];
  sub_1E3E775E0();
  swift_release();
  a1[8] = a2[8];
  sub_1E3E775E0();
  swift_release();
  a1[9] = a2[9];
  sub_1E3E775E0();
  swift_release();
  a1[10] = a2[10];
  sub_1E3E775E0();
  swift_release();
  a1[11] = a2[11];
  sub_1E3E775E0();
  swift_release();
  a1[12] = a2[12];
  sub_1E3E775E0();
  swift_release();
  a1[13] = a2[13];
  sub_1E3E775E0();
  swift_release();
  a1[14] = a2[14];
  sub_1E3E775E0();
  swift_release();
  a1[15] = a2[15];
  sub_1E3E775E0();
  swift_release();
  a1[16] = a2[16];
  sub_1E3E775E0();
  swift_release();
  a1[17] = a2[17];
  sub_1E3E775E0();
  swift_release();
  uint64_t v9 = a3[20];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1E3E7A2E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[21];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_1E3E78740();
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23((uint64_t)v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      int v26 = v20[32];
      swift_bridgeObjectRetain();
      if (v26 == 255)
      {
        long long v38 = *((_OWORD *)v20 + 1);
        *(unsigned char *)(v19 + 32) = v20[32];
        *(_OWORD *)(v19 + 16) = v38;
      }
      else
      {
        uint64_t v27 = *((void *)v20 + 2);
        uint64_t v28 = *((void *)v20 + 3);
        sub_1E3C2B454(v27, v28, v26);
        *(void *)(v19 + 16) = v27;
        *(void *)(v19 + 24) = v28;
        *(unsigned char *)(v19 + 32) = v26;
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      int v39 = (id *)(v20 + 56);
      int v40 = v20[64];
      if (v40 == 255)
      {
        id v42 = *v39;
        *(unsigned char *)(v19 + 64) = v20[64];
        *(void *)(v19 + 56) = v42;
      }
      else
      {
        id v41 = *v39;
        sub_1E3C2B46C(*v39, v20[64]);
        *(void *)(v19 + 56) = v41;
        *(unsigned char *)(v19 + 64) = v40;
      }
      int v43 = (id *)(v20 + 72);
      int v44 = v20[80];
      if (v44 == 255)
      {
        id v46 = *v43;
        *(unsigned char *)(v19 + 80) = v20[80];
        *(void *)(v19 + 72) = v46;
      }
      else
      {
        id v45 = *v43;
        sub_1E3C2B46C(*v43, v20[80]);
        *(void *)(v19 + 72) = v45;
        *(unsigned char *)(v19 + 80) = v44;
      }
      uint64_t v47 = (id *)(v20 + 88);
      int v48 = v20[96];
      if (v48 == 255)
      {
        id v50 = *v47;
        *(unsigned char *)(v19 + 96) = v20[96];
        *(void *)(v19 + 88) = v50;
      }
      else
      {
        id v49 = *v47;
        sub_1E3C2B46C(*v47, v20[96]);
        *(void *)(v19 + 88) = v49;
        *(unsigned char *)(v19 + 96) = v48;
      }
      uint64_t v51 = (id *)(v20 + 104);
      int v52 = v20[112];
      if (v52 == 255)
      {
        id v54 = *v51;
        *(unsigned char *)(v19 + 112) = v20[112];
        *(void *)(v19 + 104) = v54;
      }
      else
      {
        id v53 = *v51;
        sub_1E3C2B46C(*v51, v20[112]);
        *(void *)(v19 + 104) = v53;
        *(unsigned char *)(v19 + 112) = v52;
      }
      uint64_t v55 = (id *)(v20 + 120);
      int v56 = v20[128];
      if (v56 == 255)
      {
        id v58 = *v55;
        *(unsigned char *)(v19 + 128) = v20[128];
        *(void *)(v19 + 120) = v58;
      }
      else
      {
        id v57 = *v55;
        sub_1E3C2B46C(*v55, v20[128]);
        *(void *)(v19 + 120) = v57;
        *(unsigned char *)(v19 + 128) = v56;
      }
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v59 = v21[11];
      uint64_t v60 = v19 + v59;
      unint64_t v61 = &v20[v59];
      uint64_t v62 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      uint64_t v63 = v21[12];
      uint64_t v64 = (void *)(v19 + v63);
      uint64_t v65 = &v20[v63];
      void *v64 = *(void *)v65;
      v64[1] = *((void *)v65 + 1);
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v66 = v21[16];
      uint64_t v67 = (void *)(v19 + v66);
      uint64_t v68 = &v20[v66];
      *uint64_t v67 = *(void *)v68;
      v67[1] = *((void *)v68 + 1);
      uint64_t v69 = *(void (**)(uint64_t, void, uint64_t, int *))(v22 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(v19, 0, 1, v21);
      goto LABEL_75;
    }
LABEL_13:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_75;
  }
  if (v25)
  {
    sub_1E3E09548(v19, MEMORY[0x1E4F915F0]);
    goto LABEL_13;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = (long long *)(v19 + 16);
  int v31 = (long long *)(v20 + 16);
  int v32 = v20[32];
  if (*(unsigned __int8 *)(v19 + 32) == 255)
  {
    if (v32 == 255)
    {
      long long v73 = *v31;
      *(unsigned char *)(v19 + 32) = v20[32];
      *uint64_t v30 = v73;
    }
    else
    {
      uint64_t v70 = *((void *)v20 + 2);
      uint64_t v71 = *((void *)v20 + 3);
      sub_1E3C2B454(v70, v71, v20[32]);
      *(void *)(v19 + 16) = v70;
      *(void *)(v19 + 24) = v71;
      *(unsigned char *)(v19 + 32) = v32;
    }
  }
  else if (v32 == 255)
  {
    sub_1E3C2CB50(v19 + 16);
    char v72 = v20[32];
    *uint64_t v30 = *v31;
    *(unsigned char *)(v19 + 32) = v72;
  }
  else
  {
    uint64_t v33 = *((void *)v20 + 2);
    uint64_t v34 = *((void *)v20 + 3);
    sub_1E3C2B454(v33, v34, v20[32]);
    uint64_t v35 = *(void *)(v19 + 16);
    uint64_t v36 = *(void *)(v19 + 24);
    *(void *)(v19 + 16) = v33;
    *(void *)(v19 + 24) = v34;
    unsigned __int8 v37 = *(unsigned char *)(v19 + 32);
    *(unsigned char *)(v19 + 32) = v32;
    sub_1E3C2B7BC(v35, v36, v37);
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v74 = (id *)(v19 + 56);
  uint64_t v75 = (id *)(v20 + 56);
  int v76 = v20[64];
  if (*(unsigned __int8 *)(v19 + 64) == 255)
  {
    if (v76 == 255)
    {
      id v82 = *v75;
      *(unsigned char *)(v19 + 64) = v20[64];
      *uint64_t v74 = v82;
    }
    else
    {
      id v80 = *v75;
      sub_1E3C2B46C(*v75, v20[64]);
      *(void *)(v19 + 56) = v80;
      *(unsigned char *)(v19 + 64) = v76;
    }
  }
  else if (v76 == 255)
  {
    sub_1E3C2CBA4(v19 + 56);
    char v81 = v20[64];
    *uint64_t v74 = *v75;
    *(unsigned char *)(v19 + 64) = v81;
  }
  else
  {
    id v77 = *v75;
    sub_1E3C2B46C(*v75, v20[64]);
    uint64_t v78 = *(void **)(v19 + 56);
    *(void *)(v19 + 56) = v77;
    char v79 = *(unsigned char *)(v19 + 64);
    *(unsigned char *)(v19 + 64) = v76;
    sub_1E3C2B7D4(v78, v79);
  }
  int v83 = (id *)(v19 + 72);
  uint64_t v84 = (id *)(v20 + 72);
  int v85 = v20[80];
  if (*(unsigned __int8 *)(v19 + 80) == 255)
  {
    if (v85 == 255)
    {
      id v91 = *v84;
      *(unsigned char *)(v19 + 80) = v20[80];
      id *v83 = v91;
    }
    else
    {
      id v89 = *v84;
      sub_1E3C2B46C(*v84, v20[80]);
      *(void *)(v19 + 72) = v89;
      *(unsigned char *)(v19 + 80) = v85;
    }
  }
  else if (v85 == 255)
  {
    sub_1E3C2CBA4(v19 + 72);
    char v90 = v20[80];
    id *v83 = *v84;
    *(unsigned char *)(v19 + 80) = v90;
  }
  else
  {
    id v86 = *v84;
    sub_1E3C2B46C(*v84, v20[80]);
    uint64_t v87 = *(void **)(v19 + 72);
    *(void *)(v19 + 72) = v86;
    char v88 = *(unsigned char *)(v19 + 80);
    *(unsigned char *)(v19 + 80) = v85;
    sub_1E3C2B7D4(v87, v88);
  }
  v92 = (id *)(v19 + 88);
  unsigned int v93 = (id *)(v20 + 88);
  int v94 = v20[96];
  if (*(unsigned __int8 *)(v19 + 96) == 255)
  {
    if (v94 == 255)
    {
      id v100 = *v93;
      *(unsigned char *)(v19 + 96) = v20[96];
      id *v92 = v100;
    }
    else
    {
      id v98 = *v93;
      sub_1E3C2B46C(*v93, v20[96]);
      *(void *)(v19 + 88) = v98;
      *(unsigned char *)(v19 + 96) = v94;
    }
  }
  else if (v94 == 255)
  {
    sub_1E3C2CBA4(v19 + 88);
    char v99 = v20[96];
    id *v92 = *v93;
    *(unsigned char *)(v19 + 96) = v99;
  }
  else
  {
    id v95 = *v93;
    sub_1E3C2B46C(*v93, v20[96]);
    uint64_t v96 = *(void **)(v19 + 88);
    *(void *)(v19 + 88) = v95;
    char v97 = *(unsigned char *)(v19 + 96);
    *(unsigned char *)(v19 + 96) = v94;
    sub_1E3C2B7D4(v96, v97);
  }
  uint64_t v101 = (id *)(v19 + 104);
  uint64_t v102 = (id *)(v20 + 104);
  int v103 = v20[112];
  if (*(unsigned __int8 *)(v19 + 112) == 255)
  {
    if (v103 == 255)
    {
      id v109 = *v102;
      *(unsigned char *)(v19 + 112) = v20[112];
      *uint64_t v101 = v109;
    }
    else
    {
      id v107 = *v102;
      sub_1E3C2B46C(*v102, v20[112]);
      *(void *)(v19 + 104) = v107;
      *(unsigned char *)(v19 + 112) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_1E3C2CBA4(v19 + 104);
    char v108 = v20[112];
    *uint64_t v101 = *v102;
    *(unsigned char *)(v19 + 112) = v108;
  }
  else
  {
    id v104 = *v102;
    sub_1E3C2B46C(*v102, v20[112]);
    uint64_t v105 = *(void **)(v19 + 104);
    *(void *)(v19 + 104) = v104;
    char v106 = *(unsigned char *)(v19 + 112);
    *(unsigned char *)(v19 + 112) = v103;
    sub_1E3C2B7D4(v105, v106);
  }
  v110 = (id *)(v19 + 120);
  v111 = (id *)(v20 + 120);
  int v112 = v20[128];
  if (*(unsigned __int8 *)(v19 + 128) == 255)
  {
    if (v112 == 255)
    {
      id v118 = *v111;
      *(unsigned char *)(v19 + 128) = v20[128];
      id *v110 = v118;
    }
    else
    {
      id v116 = *v111;
      sub_1E3C2B46C(*v111, v20[128]);
      *(void *)(v19 + 120) = v116;
      *(unsigned char *)(v19 + 128) = v112;
    }
  }
  else if (v112 == 255)
  {
    sub_1E3C2CBA4(v19 + 120);
    char v117 = v20[128];
    id *v110 = *v111;
    *(unsigned char *)(v19 + 128) = v117;
  }
  else
  {
    id v113 = *v111;
    sub_1E3C2B46C(*v111, v20[128]);
    v114 = *(void **)(v19 + 120);
    *(void *)(v19 + 120) = v113;
    char v115 = *(unsigned char *)(v19 + 128);
    *(unsigned char *)(v19 + 128) = v112;
    sub_1E3C2B7D4(v114, v115);
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v119 = v21[11];
  uint64_t v120 = v19 + v119;
  v121 = &v20[v119];
  uint64_t v122 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v122 - 8) + 24))(v120, v121, v122);
  uint64_t v123 = v21[12];
  v124 = (void *)(v19 + v123);
  v125 = &v20[v123];
  void *v124 = *(void *)v125;
  v124[1] = *((void *)v125 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v126 = v21[16];
  v127 = (void *)(v19 + v126);
  v128 = &v20[v126];
  void *v127 = *(void *)v128;
  v127[1] = *((void *)v128 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  uint64_t v129 = a3[22];
  v130 = (void *)((char *)a1 + v129);
  v131 = (void *)((char *)a2 + v129);
  unint64_t v132 = *(void *)((char *)a2 + v129 + 8);
  if (*(void *)((char *)a1 + v129 + 8) >> 60 == 15)
  {
    if (v132 >> 60 != 15)
    {
      uint64_t v133 = *v131;
      sub_1E3C14F74(v133, v132);
      uint64_t *v130 = v133;
      v130[1] = v132;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v132 >> 60 == 15)
  {
    sub_1E3C2CC54((uint64_t)v130);
LABEL_80:
    *(_OWORD *)v130 = *(_OWORD *)v131;
    goto LABEL_82;
  }
  uint64_t v134 = *v131;
  sub_1E3C14F74(v134, v132);
  uint64_t v135 = *v130;
  unint64_t v136 = v130[1];
  uint64_t *v130 = v134;
  v130[1] = v132;
  sub_1E3C2B7E8(v135, v136);
LABEL_82:
  uint64_t v137 = a3[23];
  v138 = (char *)a1 + v137;
  v139 = (char *)a2 + v137;
  uint64_t v140 = sub_1E3E77D00();
  uint64_t v141 = *(void *)(v140 - 8);
  v142 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 48);
  int v143 = v142(v138, 1, v140);
  int v144 = v142(v139, 1, v140);
  if (!v143)
  {
    if (!v144)
    {
      (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v138, v139, v140);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v141 + 8))(v138, v140);
    goto LABEL_87;
  }
  if (v144)
  {
LABEL_87:
    uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v138, v139, *(void *)(*(void *)(v145 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v139, v140);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
  return a1;
}

uint64_t sub_1E3E09548(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for EpisodeEntity(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 128);
  uint64_t v9 = a3[20];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  uint64_t v12 = sub_1E3E7A2E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[21];
  int v16 = (_OWORD *)(a1 + v15);
  uint64_t v17 = (_OWORD *)(a2 + v15);
  uint64_t v18 = (int *)sub_1E3E78740();
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v17[1];
    *int v16 = *v17;
    v16[1] = v21;
    *((unsigned char *)v16 + 32) = *((unsigned char *)v17 + 32);
    *(_OWORD *)((char *)v16 + 40) = *(_OWORD *)((char *)v17 + 40);
    *((void *)v16 + 7) = *((void *)v17 + 7);
    *((unsigned char *)v16 + 64) = *((unsigned char *)v17 + 64);
    *(_OWORD *)((char *)v16 + 113) = *(_OWORD *)((char *)v17 + 113);
    *(_OWORD *)((char *)v16 + 104) = *(_OWORD *)((char *)v17 + 104);
    *(_OWORD *)((char *)v16 + 88) = *(_OWORD *)((char *)v17 + 88);
    *(_OWORD *)((char *)v16 + 72) = *(_OWORD *)((char *)v17 + 72);
    *((unsigned char *)v16 + 129) = *((unsigned char *)v17 + 129);
    uint64_t v22 = v18[11];
    uint64_t v23 = (char *)v16 + v22;
    int v24 = (char *)v17 + v22;
    uint64_t v25 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    *(_OWORD *)((char *)v16 + v18[12]) = *(_OWORD *)((char *)v17 + v18[12]);
    *((unsigned char *)v16 + v18[13]) = *((unsigned char *)v17 + v18[13]);
    *((unsigned char *)v16 + v18[14]) = *((unsigned char *)v17 + v18[14]);
    *((unsigned char *)v16 + v18[15]) = *((unsigned char *)v17 + v18[15]);
    *(_OWORD *)((char *)v16 + v18[16]) = *(_OWORD *)((char *)v17 + v18[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v26 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = sub_1E3E77D00();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

void *assignWithTake for EpisodeEntity(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  long long v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  a1[10] = a2[10];
  swift_release();
  a1[11] = a2[11];
  swift_release();
  a1[12] = a2[12];
  swift_release();
  a1[13] = a2[13];
  swift_release();
  a1[14] = a2[14];
  swift_release();
  a1[15] = a2[15];
  swift_release();
  a1[16] = a2[16];
  swift_release();
  a1[17] = a2[17];
  swift_release();
  uint64_t v10 = a3[20];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1E3E7A2E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[21];
  uint64_t v20 = (uint64_t)a1 + v19;
  long long v21 = (char *)a2 + v19;
  uint64_t v22 = (int *)sub_1E3E78740();
  uint64_t v23 = *((void *)v22 - 1);
  int v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24((uint64_t)v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      long long v27 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *(_OWORD *)(v20 + 16) = v27;
      *(unsigned char *)(v20 + 32) = v21[32];
      *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
      *(void *)(v20 + 56) = *((void *)v21 + 7);
      *(unsigned char *)(v20 + 64) = v21[64];
      *(_OWORD *)(v20 + 113) = *(_OWORD *)(v21 + 113);
      *(_OWORD *)(v20 + 104) = *(_OWORD *)(v21 + 104);
      *(_OWORD *)(v20 + 88) = *(_OWORD *)(v21 + 88);
      *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
      *(unsigned char *)(v20 + 129) = v21[129];
      uint64_t v28 = v22[11];
      uint64_t v29 = v20 + v28;
      uint64_t v30 = &v21[v28];
      uint64_t v31 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      *(_OWORD *)(v20 + v22[12]) = *(_OWORD *)&v21[v22[12]];
      *(unsigned char *)(v20 + v22[13]) = v21[v22[13]];
      *(unsigned char *)(v20 + v22[14]) = v21[v22[14]];
      *(unsigned char *)(v20 + v22[15]) = v21[v22[15]];
      *(_OWORD *)(v20 + v22[16]) = *(_OWORD *)&v21[v22[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    sub_1E3E09548(v20, MEMORY[0x1E4F915F0]);
LABEL_12:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v20, v21, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v49 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = v49;
  swift_bridgeObjectRelease();
  id v50 = v21 + 16;
  int v51 = *(unsigned __int8 *)(v20 + 32);
  if (v51 != 255)
  {
    int v52 = v21[32];
    if (v52 != 255)
    {
      uint64_t v53 = *(void *)(v20 + 16);
      uint64_t v54 = *(void *)(v20 + 24);
      *(_OWORD *)(v20 + 16) = *v50;
      *(unsigned char *)(v20 + 32) = v52;
      sub_1E3C2B7BC(v53, v54, v51);
      goto LABEL_32;
    }
    sub_1E3C2CB50(v20 + 16);
  }
  *(_OWORD *)(v20 + 16) = *v50;
  *(unsigned char *)(v20 + 32) = v21[32];
LABEL_32:
  *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
  uint64_t v55 = v21 + 56;
  int v56 = *(unsigned __int8 *)(v20 + 64);
  if (v56 != 255)
  {
    int v57 = v21[64];
    if (v57 != 255)
    {
      id v58 = *(void **)(v20 + 56);
      *(void *)(v20 + 56) = *v55;
      *(unsigned char *)(v20 + 64) = v57;
      sub_1E3C2B7D4(v58, v56);
      goto LABEL_37;
    }
    sub_1E3C2CBA4(v20 + 56);
  }
  *(void *)(v20 + 56) = *v55;
  *(unsigned char *)(v20 + 64) = v21[64];
LABEL_37:
  uint64_t v59 = v21 + 72;
  int v60 = *(unsigned __int8 *)(v20 + 80);
  if (v60 != 255)
  {
    int v61 = v21[80];
    if (v61 != 255)
    {
      uint64_t v62 = *(void **)(v20 + 72);
      *(void *)(v20 + 72) = *v59;
      *(unsigned char *)(v20 + 80) = v61;
      sub_1E3C2B7D4(v62, v60);
      goto LABEL_42;
    }
    sub_1E3C2CBA4(v20 + 72);
  }
  *(void *)(v20 + 72) = *v59;
  *(unsigned char *)(v20 + 80) = v21[80];
LABEL_42:
  uint64_t v63 = v21 + 88;
  int v64 = *(unsigned __int8 *)(v20 + 96);
  if (v64 != 255)
  {
    int v65 = v21[96];
    if (v65 != 255)
    {
      uint64_t v66 = *(void **)(v20 + 88);
      *(void *)(v20 + 88) = *v63;
      *(unsigned char *)(v20 + 96) = v65;
      sub_1E3C2B7D4(v66, v64);
      goto LABEL_47;
    }
    sub_1E3C2CBA4(v20 + 88);
  }
  *(void *)(v20 + 88) = *v63;
  *(unsigned char *)(v20 + 96) = v21[96];
LABEL_47:
  uint64_t v67 = v21 + 104;
  int v68 = *(unsigned __int8 *)(v20 + 112);
  if (v68 != 255)
  {
    int v69 = v21[112];
    if (v69 != 255)
    {
      uint64_t v70 = *(void **)(v20 + 104);
      *(void *)(v20 + 104) = *v67;
      *(unsigned char *)(v20 + 112) = v69;
      sub_1E3C2B7D4(v70, v68);
      goto LABEL_52;
    }
    sub_1E3C2CBA4(v20 + 104);
  }
  *(void *)(v20 + 104) = *v67;
  *(unsigned char *)(v20 + 112) = v21[112];
LABEL_52:
  uint64_t v71 = v21 + 120;
  int v72 = *(unsigned __int8 *)(v20 + 128);
  if (v72 == 255)
  {
LABEL_56:
    *(void *)(v20 + 120) = *v71;
    *(unsigned char *)(v20 + 128) = v21[128];
    goto LABEL_57;
  }
  int v73 = v21[128];
  if (v73 == 255)
  {
    sub_1E3C2CBA4(v20 + 120);
    goto LABEL_56;
  }
  uint64_t v74 = *(void **)(v20 + 120);
  *(void *)(v20 + 120) = *v71;
  *(unsigned char *)(v20 + 128) = v73;
  sub_1E3C2B7D4(v74, v72);
LABEL_57:
  *(unsigned char *)(v20 + 129) = v21[129];
  uint64_t v75 = v22[11];
  uint64_t v76 = v20 + v75;
  id v77 = &v21[v75];
  uint64_t v78 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
  uint64_t v79 = v22[12];
  id v80 = (void *)(v20 + v79);
  char v81 = &v21[v79];
  uint64_t v83 = *(void *)v81;
  uint64_t v82 = *((void *)v81 + 1);
  *id v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + v22[13]) = v21[v22[13]];
  *(unsigned char *)(v20 + v22[14]) = v21[v22[14]];
  *(unsigned char *)(v20 + v22[15]) = v21[v22[15]];
  uint64_t v84 = v22[16];
  int v85 = (void *)(v20 + v84);
  id v86 = &v21[v84];
  uint64_t v88 = *(void *)v86;
  uint64_t v87 = *((void *)v86 + 1);
  *int v85 = v88;
  v85[1] = v87;
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v33 = a3[22];
  uint64_t v34 = (uint64_t)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  unint64_t v36 = *(void *)((char *)a1 + v33 + 8);
  if (v36 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    goto LABEL_18;
  }
  unint64_t v37 = *((void *)v35 + 1);
  if (v37 >> 60 == 15)
  {
    sub_1E3C2CC54(v34);
    goto LABEL_16;
  }
  uint64_t v38 = *(void *)v34;
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v37;
  sub_1E3C2B7E8(v38, v36);
LABEL_18:
  uint64_t v39 = a3[23];
  int v40 = (char *)a1 + v39;
  id v41 = (char *)a2 + v39;
  uint64_t v42 = sub_1E3E77D00();
  uint64_t v43 = *(void *)(v42 - 8);
  int v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  int v45 = v44(v40, 1, v42);
  int v46 = v44(v41, 1, v42);
  if (!v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v40, v41, v42);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
    goto LABEL_23;
  }
  if (v46)
  {
LABEL_23:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v40, v41, *(void *)(*(void *)(v47 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E0A228);
}

uint64_t sub_1E3E0A228(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[20];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[21];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[23];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for EpisodeEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E0A3C0);
}

uint64_t sub_1E3E0A3C0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[20];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[21];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[23];

  return v15(v17, a2, a2, v16);
}

void sub_1E3E0A544()
{
  sub_1E3E0A6F4(319, &qword_1EBFE4430, MEMORY[0x1E4F91CD0]);
  if (v0 <= 0x3F)
  {
    sub_1E3E0A6F4(319, (unint64_t *)&qword_1EBFE4248, MEMORY[0x1E4F915F0]);
    if (v1 <= 0x3F)
    {
      sub_1E3E0A6F4(319, (unint64_t *)&qword_1EBFE0808, MEMORY[0x1E4F276F0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1E3E0A6F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E3E7DB90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E3E0A748()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1E3E0A788()
{
  return type metadata accessor for EpisodeEntity.CustomRepresentation(0);
}

uint64_t sub_1E3E0A790()
{
  return sub_1E3C10DE8(&qword_1EAE29480, &qword_1EAE29488);
}

uint64_t sub_1E3E0A7D8(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1E3CC7594(0, v5, 0);
    uint64_t v6 = v21;
    uint64_t v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *v9;
      v18[0] = *(v9 - 1);
      v18[1] = v10;
      swift_bridgeObjectRetain();
      a1(&v19, v18);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      long long v11 = v19;
      char v12 = v20;
      uint64_t v21 = v6;
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        long long v17 = v19;
        sub_1E3CC7594(v13 > 1, v14 + 1, 1);
        long long v11 = v17;
        uint64_t v6 = v21;
      }
      v9 += 2;
      *(void *)(v6 + 16) = v14 + 1;
      uint64_t v15 = v6 + 24 * v14;
      *(_OWORD *)(v15 + 32) = v11;
      *(unsigned char *)(v15 + 48) = v12;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1E3E0A918(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1E3CC75D4(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1E3CC75D4(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(void *)(result + 8 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1E3E0A9D8(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1E3E7DEB0();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1E4E77720](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1E3E7DE80();
        sub_1E3E7DEC0();
        sub_1E3E7DED0();
        sub_1E3E7DE90();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1E3E7DE80();
        sub_1E3E7DEC0();
        sub_1E3E7DED0();
        sub_1E3E7DE90();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    sub_1E3E7DEB0();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1E3E0ABC0(unint64_t a1, void (*a2)(void))
{
  uint64_t v3 = a1;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  sub_1E3E7DEB0();
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1E4E77720](i, v3);
        uint64_t v6 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        a2(0);
        if (!swift_dynamicCastClass()) {
          goto LABEL_14;
        }
        sub_1E3E7DE80();
        sub_1E3E7DEC0();
        sub_1E3E7DED0();
        sub_1E3E7DE90();
        if (v6 == v4) {
          return v11;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v8 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        a2(0);
        swift_unknownObjectRetain();
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_14:
          swift_unknownObjectRelease();
          swift_release();
          return 0;
        }
        uint64_t v3 = v9;
        sub_1E3E7DE80();
        sub_1E3E7DEC0();
        sub_1E3E7DED0();
        sub_1E3E7DE90();
        if (v8 == v4) {
          return v11;
        }
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    sub_1E3E7DEB0();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1E3E0ADB0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x1F4188298](sub_1E3E0ADD0, 0, 0);
}

uint64_t sub_1E3E0ADD0()
{
  uint64_t v1 = v0[6];
  v0[2] = v0[7];
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v0 + 2;
  sub_1E3E0A7D8((void (*)(long long *__return_ptr, void *))sub_1E3E18F5C, v2, v1);
  swift_task_dealloc();
  sub_1E3E7D0A0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  v0[8] = v4;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1E3C504EC(v5);
  v0[9] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1E3E0A918(v7);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1E3C50AA0(v8);
  v0[10] = v9;
  swift_bridgeObjectRelease();
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE29628 + dword_1EAE29628);
  id v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  *id v10 = v0;
  v10[1] = sub_1E3E0AF7C;
  uint64_t v11 = v0[7];
  return v13(v4, v6, v9, v11);
}

uint64_t sub_1E3E0AF7C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[12] = a1;
  v3[13] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v3[14] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3E19314;
  }
  else
  {
    uint64_t v4 = sub_1E3E0B0B8;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E0B0B8()
{
  uint64_t v1 = v0[13];
  sub_1E3E7D270();
  if (v1)
  {
    swift_bridgeObjectRelease();
    v0[14] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1E3E19314, 0, 0);
  }
  else
  {
    uint64_t v2 = v0[9];
    unint64_t v3 = v0[10];
    unint64_t v4 = v0[8];
    v0[5] = v0[12];
    uint64_t v5 = sub_1E3C50B14(v4);
    swift_bridgeObjectRelease();
    sub_1E3E184EC(v0 + 5, v2, v3, v5, (uint64_t (*)(void, double))type metadata accessor for EpisodeEntity, (uint64_t (*)(uint64_t *))sub_1E3E12974, type metadata accessor for EpisodeEntity);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v0[5];
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v6);
  }
}

uint64_t sub_1E3E0B230(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x1F4188298](sub_1E3E0B250, 0, 0);
}

uint64_t sub_1E3E0B250()
{
  uint64_t v1 = v0[6];
  v0[2] = v0[7];
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v0 + 2;
  sub_1E3E0A7D8((void (*)(long long *__return_ptr, void *))sub_1E3E18E30, v2, v1);
  swift_task_dealloc();
  sub_1E3E7D0A0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  v0[8] = v4;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1E3C504EC(v5);
  v0[9] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1E3E0A918(v7);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1E3C50AA0(v8);
  v0[10] = v9;
  swift_bridgeObjectRelease();
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE295C8 + dword_1EAE295C8);
  id v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  *id v10 = v0;
  v10[1] = sub_1E3E0B3FC;
  uint64_t v11 = v0[7];
  return v13(v4, v6, v9, v11);
}

uint64_t sub_1E3E0B3FC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[12] = a1;
  v3[13] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v3[14] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3E19314;
  }
  else
  {
    uint64_t v4 = sub_1E3E0B538;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E0B538()
{
  uint64_t v1 = v0[13];
  sub_1E3E7D270();
  if (v1)
  {
    swift_bridgeObjectRelease();
    v0[14] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1E3E19314, 0, 0);
  }
  else
  {
    uint64_t v2 = v0[9];
    unint64_t v3 = v0[10];
    unint64_t v4 = v0[8];
    v0[5] = v0[12];
    uint64_t v5 = sub_1E3C50B14(v4);
    swift_bridgeObjectRelease();
    sub_1E3E16718(v0 + 5, v2, v3, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v0[5];
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v6);
  }
}

uint64_t sub_1E3E0B674(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x1F4188298](sub_1E3E0B694, 0, 0);
}

uint64_t sub_1E3E0B694()
{
  uint64_t v1 = v0[6];
  v0[2] = v0[7];
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v0 + 2;
  sub_1E3E0A7D8((void (*)(long long *__return_ptr, void *))sub_1E3E130C8, v2, v1);
  swift_task_dealloc();
  sub_1E3E7D0A0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  v0[8] = v4;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1E3C504EC(v5);
  v0[9] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1E3E0A918(v7);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1E3C50AA0(v8);
  v0[10] = v9;
  swift_bridgeObjectRelease();
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE29540 + dword_1EAE29540);
  id v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  *id v10 = v0;
  v10[1] = sub_1E3E0B840;
  uint64_t v11 = v0[7];
  return v13(v4, v6, v9, v11);
}

uint64_t sub_1E3E0B840(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[12] = a1;
  v3[13] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v3[14] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3E0BAF4;
  }
  else
  {
    uint64_t v4 = sub_1E3E0B97C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E0B97C()
{
  uint64_t v1 = v0[13];
  sub_1E3E7D270();
  if (v1)
  {
    swift_bridgeObjectRelease();
    v0[14] = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1E3E0BAF4, 0, 0);
  }
  else
  {
    uint64_t v2 = v0[9];
    unint64_t v3 = v0[10];
    unint64_t v4 = v0[8];
    v0[5] = v0[12];
    uint64_t v5 = sub_1E3C50B14(v4);
    swift_bridgeObjectRelease();
    sub_1E3E184EC(v0 + 5, v2, v3, v5, (uint64_t (*)(void, double))type metadata accessor for ShowEntity, (uint64_t (*)(uint64_t *))sub_1E3E129B0, type metadata accessor for ShowEntity);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v0[5];
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v6);
  }
}

uint64_t sub_1E3E0BAF4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ShowEntity.ShowEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE290B0);
  sub_1E3C3513C();
  sub_1E3E7DD60();
  sub_1E3E77340();
  sub_1E3E77330();
  uint64_t result = sub_1E3E77320();
  *a1 = result;
  return result;
}

uint64_t ShowEntity.ShowEntityQuery.objectGraph.getter()
{
  sub_1E3E772F0();
  return v1;
}

uint64_t ShowEntity.ShowEntityQuery.objectGraph.setter()
{
  return swift_release();
}

void (*ShowEntity.ShowEntityQuery.objectGraph.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1E3E772E0();
  return sub_1E3C34D58;
}

uint64_t ShowEntity.ShowEntityQuery.$objectGraph.getter()
{
  return sub_1E3E77310();
}

uint64_t ShowEntity.ShowEntityQuery.predicate(forAdamIDs:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    unint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1E3E7DEB0();
    uint64_t result = sub_1E3DE3F98(a1);
    uint64_t v5 = result;
    uint64_t v7 = v6;
    char v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_11;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_12;
      }
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedLongLong_, *(void *)(*(void *)(a1 + 48) + 8 * v5));
      sub_1E3E7DE80();
      sub_1E3E7DEC0();
      sub_1E3E7DED0();
      sub_1E3E7DE90();
      uint64_t result = sub_1E3DE403C(v5, v7, v9 & 1, a1);
      uint64_t v5 = result;
      uint64_t v7 = v10;
      char v9 = v11 & 1;
      if (!--v1)
      {
        sub_1E3D15688(result, v10, v11 & 1);
        unint64_t v2 = v15;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_9:
    uint64_t v12 = self;
    sub_1E3C50A70(v2);
    swift_bridgeObjectRelease();
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
    sub_1E3E12CDC();
    unint64_t v13 = (void *)sub_1E3E7D300();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v12, sel_predicateForPodcastStoreIDs_, v13);

    return (uint64_t)v14;
  }
  return result;
}

id ShowEntity.ShowEntityQuery.predicate(forUuids:)()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1E3E7D300();
  id v2 = objc_msgSend(v0, sel_predicateForPodcastUuids_, v1);

  return v2;
}

uint64_t ShowEntity.ShowEntityQuery.suggestedEntities()()
{
  uint64_t v2 = sub_1E3E7D8E0();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_1E3E7D1E0();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v0;
  v1[10] = v4;
  v1[11] = v5;
  return MEMORY[0x1F4188298](sub_1E3E0C000, 0, 0);
}

uint64_t sub_1E3E0C000()
{
  sub_1E3E775E0();
  sub_1E3E772F0();
  swift_release();
  v0[12] = v0[3];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3E0C0E8;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3E0C0E8()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3DED990;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1E3E0C204;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E0C204()
{
  v0[15] = v0[2];
  uint64_t ObjectType = swift_getObjectType();
  sub_1E3C17C5C();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3E0C2CC;
  uint64_t v3 = v0[10];
  return MEMORY[0x1F4145A40](v3, ObjectType);
}

uint64_t sub_1E3E0C2CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1E3E0C448, 0, 0);
}

uint64_t sub_1E3E0C448()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = swift_allocObject();
  v0[18] = v5;
  *(void *)(v5 + 16) = v1;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E4F1BD78], v4);
  id v6 = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[19] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE294C0);
  void *v7 = v0;
  v7[1] = sub_1E3DED770;
  uint64_t v9 = v0[7];
  return MEMORY[0x1F40D7080](v0 + 4, v9, sub_1E3E12D7C, v5, v8);
}

void sub_1E3E0C57C(uint64_t *a1@<X8>)
{
  int v24 = a1;
  uint64_t v1 = type metadata accessor for ShowEntity(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (void *)((char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3E7CD30();
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v6 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E3E8A550;
  sub_1E3E7CD30();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v10 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 0);

  *(void *)(v8 + 32) = v11;
  uint64_t v26 = v8;
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EAE292D0);
  uint64_t v12 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v12);

  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE0750);
  id v13 = v25;
  unint64_t v14 = sub_1E3E7D900();
  if (v13)
  {

    return;
  }
  unint64_t v15 = v14;
  if (!(v14 >> 62))
  {
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    long long v17 = v24;
    if (v16) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();

    uint64_t *v17 = MEMORY[0x1E4FBC860];
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  long long v17 = v24;
  if (!v16) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1E3CC7928(0, v16 & ~(v16 >> 63), 0);
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v23[1] = 0;
    id v25 = v7;
    uint64_t v18 = 0;
    uint64_t v19 = v26;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x1E4E77720](v18, v15);
      }
      else {
        id v20 = *(id *)(v15 + 8 * v18 + 32);
      }
      ShowEntity.init(model:)(v20, v4);
      uint64_t v26 = v19;
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1E3CC7928(v21 > 1, v22 + 1, 1);
        uint64_t v19 = v26;
      }
      ++v18;
      *(void *)(v19 + 16) = v22 + 1;
      sub_1E3E190B8((uint64_t)v4, v19+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v22, type metadata accessor for ShowEntity);
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();

    uint64_t *v24 = v19;
  }
}

uint64_t sub_1E3E0C918(uint64_t a1)
{
  return ShowEntity.ShowEntityQuery.predicate(forAdamIDs:)(a1);
}

id sub_1E3E0C930()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1E3E7D300();
  id v2 = objc_msgSend(v0, sel_predicateForPodcastUuids_, v1);

  return v2;
}

uint64_t sub_1E3E0C9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE29598 + dword_1EAE29598);
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *id v6 = v3;
  v6[1] = sub_1E3C856F4;
  return v8(a2, a3);
}

uint64_t sub_1E3E0CA5C(uint64_t a1)
{
  uint64_t v4 = *v1;
  id v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAE29538 + dword_1EAE29538);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1E3C85CD4;
  return v7(a1, v4);
}

uint64_t sub_1E3E0CB10(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1E3C8CF14;
  return ShowEntity.ShowEntityQuery.suggestedEntities()();
}

uint64_t sub_1E3E0CBA0(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1E3DFCF44();
  *id v5 = v2;
  v5[1] = sub_1E3C19DC4;
  return MEMORY[0x1F40D3D68](a1, a2, v6);
}

uint64_t sub_1E3E0CC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  double v9 = MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1E3E78C40();
  return swift_release();
}

uint64_t sub_1E3E0CD98(uint64_t a1, id a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t *a6)
{
  if (a1)
  {
    id v9 = objc_msgSend((id)swift_unknownObjectRetain(), sel_itemsFor_, a3);
    unint64_t v10 = sub_1E3E7D060();

    uint64_t v11 = sub_1E3E0ABC0(v10, a5);
    swift_bridgeObjectRelease();
    if (v11)
    {
      __swift_instantiateConcreteTypeFromMangledName(a6);
      sub_1E3E7D150();
      return swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  if (a2)
  {
    id v13 = a2;
  }
  else
  {
    sub_1E3E18DDC();
    swift_allocError();
  }
  __swift_instantiateConcreteTypeFromMangledName(a6);
  return sub_1E3E7D140();
}

uint64_t sub_1E3E0CEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *(void *)(type metadata accessor for EpisodeEntity(0) - 8);
  v4[26] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7A880();
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E0CFFC, 0, 0);
}

uint64_t sub_1E3E0CFFC()
{
  uint64_t v1 = *(void *)(v0 + 184);
  *(void *)(v0 + 152) = *(void *)(v0 + 176);
  *(void *)(v0 + 136) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1E3E772F0();
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v2 = objc_msgSend(*(id *)(v0 + 64), sel_privateQueueContext);
  *(void *)(v0 + 264) = v2;
  swift_unknownObjectRelease();
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, id, uint64_t))((char *)&dword_1EAE29630 + dword_1EAE29630);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1E3E0D160;
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 176);
  return v9(v7, v6, v4, v2, v5);
}

uint64_t sub_1E3E0D160(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 280) = a1;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1E3E19330;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3E0D290;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E0D290()
{
  uint64_t v83 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[36];
  uint64_t v4 = (void *)swift_task_alloc();
  *uint64_t v4 = &type metadata for EpisodeEntity.EpisodeEntityQuery;
  unint64_t v5 = sub_1E3E19064();
  v4[1] = v5;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  sub_1E3E775E0();
  uint64_t v7 = sub_1E3E12A1C(v2, KeyPath, type metadata accessor for EpisodeEntity);
  swift_release_n();
  uint64_t v8 = v1 + 19;
  uint64_t v9 = (uint64_t)(v1 + 10);
  uint64_t v10 = v1 + 11;
  uint64_t v11 = v1 + 17;
  if (*(void *)(v1[19] + 16))
  {
    uint64_t v79 = v3;
    uint64_t v12 = v1 + 10;
    id v13 = v1 + 11;
    uint64_t v14 = v7[2];
    if (v14)
    {
      uint64_t v74 = v1;
      swift_bridgeObjectRetain();
      unint64_t v15 = v7 + 5;
      do
      {
        uint64_t v16 = *(v15 - 1);
        uint64_t v17 = *v15;
        swift_bridgeObjectRetain();
        sub_1E3E12180(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
      uint64_t v1 = v74;
      uint64_t v10 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v1 + 11;
    }
    uint64_t v9 = (uint64_t)v12;
    uint64_t v3 = v79;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v1[35];
  uint64_t v19 = (void *)swift_task_alloc();
  void *v19 = &type metadata for EpisodeEntity.EpisodeEntityQuery;
  v19[1] = v5;
  uint64_t v20 = swift_getKeyPath();
  swift_task_dealloc();
  sub_1E3E775E0();
  uint64_t v21 = sub_1E3E12B94(v18, v20, v9, type metadata accessor for EpisodeEntity);
  swift_release_n();
  if (*(void *)(v1[17] + 16) && (uint64_t v22 = *(void *)(v21 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v22; ++i)
    {
      uint64_t v24 = *(void *)(v21 + 8 * i + 32);
      sub_1E3E12074(v24);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *uint64_t v10 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE06C0);
  sub_1E3E18CB4((unint64_t *)&qword_1EAE29180, &qword_1EBFE06C0);
  if ((sub_1E3E7D3C0() & 1) != 0
    || (*(v8 - 7) = *v11,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29720),
        sub_1E3E18CB4(&qword_1EAE29560, (uint64_t *)&unk_1EAE29720),
        (sub_1E3E7D3C0() & 1) != 0))
  {
    sub_1E3E7D270();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v25 = (uint64_t (*)(void))v1[1];
      return v25();
    }
    else
    {
      sub_1E3E7A740();
      long long v27 = sub_1E3E7A860();
      uint64_t v28 = sub_1E3E7D4C0();
      if (os_log_type_enabled(v27, (os_log_type_t)v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1E3BC5000, v27, (os_log_type_t)v28, "Some entities are lingering, checking remote source for episode content.", v29, 2u);
        MEMORY[0x1E4E79510](v29, -1, -1);
      }
      uint64_t v30 = v1[32];
      uint64_t v31 = v1;
      uint64_t v32 = v1[28];
      uint64_t v33 = v31[27];

      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v31[37] = v34;
      v31[38] = (v32 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      id v80 = v34;
      v34(v30, v33);
      uint64_t v75 = v31;
      v31[13] = v31[19];
      if (sub_1E3E7D3C0())
      {
        sub_1E3E7A740();
        uint64_t v35 = sub_1E3E7A860();
        os_log_type_t v36 = sub_1E3E7D4E0();
        BOOL v37 = os_log_type_enabled(v35, v36);
        uint64_t v38 = v31[31];
        uint64_t v39 = v31[27];
        if (v37)
        {
          uint64_t v78 = v31[27];
          uint64_t v76 = v31[31];
          int v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v73 = swift_slowAlloc();
          uint64_t v82 = v73;
          *(_DWORD *)int v40 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          os_log_type_t type = v36;
          uint64_t v41 = sub_1E3E7D320();
          unint64_t v43 = v42;
          swift_bridgeObjectRelease();
          v31[20] = sub_1E3C150B8(v41, v43, &v82);
          sub_1E3E7DBD0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1E3BC5000, v35, type, "Failed to find requested local episodes with identifiers: %s", v40, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v73, -1, -1);
          MEMORY[0x1E4E79510](v40, -1, -1);

          uint64_t v44 = v76;
          uint64_t v45 = v78;
        }
        else
        {

          uint64_t v44 = v38;
          uint64_t v45 = v39;
        }
        v80(v44, v45);
      }
      uint64_t v54 = *v11;
      int64_t v55 = *(void *)(*v11 + 16);
      uint64_t v56 = MEMORY[0x1E4FBC860];
      if (v55)
      {
        id v77 = v8 - 5;
        uint64_t v82 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1E3CC7660(0, v55, 0);
        uint64_t v56 = v82;
        uint64_t result = sub_1E3DE3F98(v54);
        uint64_t v57 = result;
        uint64_t v59 = v58;
        char v61 = v60 & 1;
        while ((v57 & 0x8000000000000000) == 0 && v57 < 1 << *(unsigned char *)(v54 + 32))
        {
          if (((*(void *)(v54 + 56 + (((unint64_t)v57 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v57) & 1) == 0) {
            goto LABEL_47;
          }
          if (*(_DWORD *)(v54 + 36) != v59) {
            goto LABEL_48;
          }
          char v81 = v61;
          *id v77 = *(void *)(*(void *)(v54 + 48) + 8 * v57);
          uint64_t v62 = sub_1E3E7E0E0();
          uint64_t v64 = v63;
          uint64_t v82 = v56;
          unint64_t v66 = *(void *)(v56 + 16);
          unint64_t v65 = *(void *)(v56 + 24);
          if (v66 >= v65 >> 1)
          {
            sub_1E3CC7660(v65 > 1, v66 + 1, 1);
            uint64_t v56 = v82;
          }
          *(void *)(v56 + 16) = v66 + 1;
          uint64_t v67 = v56 + 16 * v66;
          *(void *)(v67 + 32) = v62;
          *(void *)(v67 + 40) = v64;
          uint64_t result = sub_1E3DE403C(v57, v59, v81 & 1, v54);
          uint64_t v57 = result;
          uint64_t v59 = v68;
          char v61 = v69 & 1;
          if (!--v55)
          {
            sub_1E3D15688(result, v68, v61);
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
        }
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
      }
      else
      {
LABEL_43:
        v75[39] = v56;
        sub_1E3E772F0();
        uint64_t v70 = v75[15];
        v75[40] = v70;
        uint64_t v71 = (void *)swift_task_alloc();
        v75[41] = v71;
        *uint64_t v71 = v75;
        v71[1] = sub_1E3E0DB58;
        return sub_1E3E14C94(v56, v70);
      }
    }
  }
  else
  {
    sub_1E3E7A740();
    int v46 = sub_1E3E7A860();
    os_log_type_t v47 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v46, v47))
    {
      int v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v48 = 0;
      _os_log_impl(&dword_1E3BC5000, v46, v47, "Found episodes using local-only identifiers", v48, 2u);
      MEMORY[0x1E4E79510](v48, -1, -1);
    }
    uint64_t v49 = v1[28];
    uint64_t v50 = v1[29];
    uint64_t v51 = v1[27];

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v1[35];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = (uint64_t (*)(uint64_t))v1[1];
    return v53(v52);
  }
  return result;
}

uint64_t sub_1E3E0DB58(uint64_t a1)
{
  *(void *)(*(void *)v1 + 336) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1E3E0DC94, 0, 0);
}

uint64_t sub_1E3E0DC94()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0 + 17;
  uint64_t v2 = v0[42];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v0[25];
    uint64_t v5 = v0[26];
    uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v7 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = v0[26];
      sub_1E3E18F9C(v6, v9, type metadata accessor for EpisodeEntity);
      uint64_t v10 = *(void *)(v5 + 40);
      sub_1E3E19004(v9, type metadata accessor for EpisodeEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1E3CB78B4(0, v8[2] + 1, 1, v8);
      }
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1) {
        uint64_t v8 = sub_1E3CB78B4((void *)(v11 > 1), v12 + 1, 1, v8);
      }
      v8[2] = v12 + 1;
      v8[v12 + 4] = v10;
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  }
  if (*(void *)(*v1 + 16) && (uint64_t v13 = v8[2]) != 0)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v13; ++i)
    {
      uint64_t v15 = v8[i + 4];
      sub_1E3E12074(v15);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[16] = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29720);
  sub_1E3E18CB4(&qword_1EAE29560, (uint64_t *)&unk_1EAE29720);
  if (sub_1E3E7D3C0())
  {
    sub_1E3E7A740();
    uint64_t v16 = sub_1E3E7A860();
    os_log_type_t v17 = sub_1E3E7D4E0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v20 = v0[30];
    uint64_t v21 = v0[27];
    if (v18)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v33 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1E3E7D320();
      uint64_t v31 = v19;
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      v0[18] = sub_1E3C150B8(v24, v26, &v33);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v16, v17, "Failed to find requested remote episodes with identifiers: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v23, -1, -1);
      MEMORY[0x1E4E79510](v22, -1, -1);

      v31(v20, v32);
    }
    else
    {

      v19(v20, v21);
    }
  }
  uint64_t v27 = v0[42];
  uint64_t v33 = v0[35];
  sub_1E3D3AB30(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v33;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(uint64_t))v0[1];
  return v29(v28);
}

uint64_t sub_1E3E0E084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *(void *)(type metadata accessor for ChannelEntity() - 8);
  v4[26] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7A880();
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E0E1C8, 0, 0);
}

uint64_t sub_1E3E0E1C8()
{
  uint64_t v1 = *(void *)(v0 + 184);
  *(void *)(v0 + 152) = *(void *)(v0 + 176);
  *(void *)(v0 + 136) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1E3E772F0();
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v2 = objc_msgSend(*(id *)(v0 + 64), sel_privateQueueContext);
  *(void *)(v0 + 264) = v2;
  swift_unknownObjectRelease();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, id, uint64_t))((char *)&dword_1EAE295D0 + dword_1EAE295D0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1E3E0E32C;
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 168);
  return v8(v6, v4, v2, v5);
}

uint64_t sub_1E3E0E32C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 280) = a1;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1E3E0ED24;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3E0E45C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E0E45C()
{
  uint64_t v83 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[36];
  uint64_t v4 = (void *)swift_task_alloc();
  *uint64_t v4 = &type metadata for ChannelEntity.ChannelEntityQuery;
  unint64_t v5 = sub_1E3E18E70();
  v4[1] = v5;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  sub_1E3E775E0();
  uint64_t v7 = sub_1E3E12A1C(v2, KeyPath, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  swift_release_n();
  uint64_t v8 = v1 + 19;
  uint64_t v9 = (uint64_t)(v1 + 10);
  uint64_t v10 = v1 + 11;
  unint64_t v11 = v1 + 17;
  if (*(void *)(v1[19] + 16))
  {
    uint64_t v79 = v3;
    unint64_t v12 = v1 + 10;
    uint64_t v13 = v1 + 11;
    uint64_t v14 = v7[2];
    if (v14)
    {
      uint64_t v74 = v1;
      swift_bridgeObjectRetain();
      uint64_t v15 = v7 + 5;
      do
      {
        uint64_t v16 = *(v15 - 1);
        uint64_t v17 = *v15;
        swift_bridgeObjectRetain();
        sub_1E3E12180(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
      uint64_t v1 = v74;
      uint64_t v10 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v1 + 11;
    }
    uint64_t v9 = (uint64_t)v12;
    uint64_t v3 = v79;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v1[35];
  uint64_t v19 = (void *)swift_task_alloc();
  void *v19 = &type metadata for ChannelEntity.ChannelEntityQuery;
  v19[1] = v5;
  uint64_t v20 = swift_getKeyPath();
  swift_task_dealloc();
  sub_1E3E775E0();
  uint64_t v21 = sub_1E3E12B94(v18, v20, v9, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  swift_release_n();
  if (*(void *)(v1[17] + 16) && (uint64_t v22 = *(void *)(v21 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v22; ++i)
    {
      uint64_t v24 = *(void *)(v21 + 8 * i + 32);
      sub_1E3E12074(v24);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *uint64_t v10 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE06C0);
  sub_1E3E18CB4((unint64_t *)&qword_1EAE29180, &qword_1EBFE06C0);
  if ((sub_1E3E7D3C0() & 1) != 0
    || (*(v8 - 7) = *v11,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29720),
        sub_1E3E18CB4(&qword_1EAE29560, (uint64_t *)&unk_1EAE29720),
        (sub_1E3E7D3C0() & 1) != 0))
  {
    sub_1E3E7D270();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v25 = (uint64_t (*)(void))v1[1];
      return v25();
    }
    else
    {
      sub_1E3E7A740();
      uint64_t v27 = sub_1E3E7A860();
      uint64_t v28 = sub_1E3E7D4C0();
      if (os_log_type_enabled(v27, (os_log_type_t)v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1E3BC5000, v27, (os_log_type_t)v28, "Some entities are lingering, checking remote source for episode content.", v29, 2u);
        MEMORY[0x1E4E79510](v29, -1, -1);
      }
      uint64_t v30 = v1[32];
      uint64_t v31 = v1;
      uint64_t v32 = v1[28];
      uint64_t v33 = v31[27];

      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v31[37] = v34;
      v31[38] = (v32 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      id v80 = v34;
      v34(v30, v33);
      uint64_t v75 = v31;
      v31[13] = v31[19];
      if (sub_1E3E7D3C0())
      {
        sub_1E3E7A740();
        uint64_t v35 = sub_1E3E7A860();
        os_log_type_t v36 = sub_1E3E7D4E0();
        BOOL v37 = os_log_type_enabled(v35, v36);
        uint64_t v38 = v31[31];
        uint64_t v39 = v31[27];
        if (v37)
        {
          uint64_t v78 = v31[27];
          uint64_t v76 = v31[31];
          int v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v73 = swift_slowAlloc();
          uint64_t v82 = v73;
          *(_DWORD *)int v40 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          os_log_type_t type = v36;
          uint64_t v41 = sub_1E3E7D320();
          unint64_t v43 = v42;
          swift_bridgeObjectRelease();
          v31[20] = sub_1E3C150B8(v41, v43, &v82);
          sub_1E3E7DBD0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1E3BC5000, v35, type, "Failed to find requested local episodes with identifiers: %s", v40, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v73, -1, -1);
          MEMORY[0x1E4E79510](v40, -1, -1);

          uint64_t v44 = v76;
          uint64_t v45 = v78;
        }
        else
        {

          uint64_t v44 = v38;
          uint64_t v45 = v39;
        }
        v80(v44, v45);
      }
      uint64_t v54 = *v11;
      int64_t v55 = *(void *)(*v11 + 16);
      uint64_t v56 = MEMORY[0x1E4FBC860];
      if (v55)
      {
        id v77 = v8 - 5;
        uint64_t v82 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1E3CC7660(0, v55, 0);
        uint64_t v56 = v82;
        uint64_t result = sub_1E3DE3F98(v54);
        uint64_t v57 = result;
        uint64_t v59 = v58;
        char v61 = v60 & 1;
        while ((v57 & 0x8000000000000000) == 0 && v57 < 1 << *(unsigned char *)(v54 + 32))
        {
          if (((*(void *)(v54 + 56 + (((unint64_t)v57 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v57) & 1) == 0) {
            goto LABEL_47;
          }
          if (*(_DWORD *)(v54 + 36) != v59) {
            goto LABEL_48;
          }
          char v81 = v61;
          *id v77 = *(void *)(*(void *)(v54 + 48) + 8 * v57);
          uint64_t v62 = sub_1E3E7E0E0();
          uint64_t v64 = v63;
          uint64_t v82 = v56;
          unint64_t v66 = *(void *)(v56 + 16);
          unint64_t v65 = *(void *)(v56 + 24);
          if (v66 >= v65 >> 1)
          {
            sub_1E3CC7660(v65 > 1, v66 + 1, 1);
            uint64_t v56 = v82;
          }
          *(void *)(v56 + 16) = v66 + 1;
          uint64_t v67 = v56 + 16 * v66;
          *(void *)(v67 + 32) = v62;
          *(void *)(v67 + 40) = v64;
          uint64_t result = sub_1E3DE403C(v57, v59, v81 & 1, v54);
          uint64_t v57 = result;
          uint64_t v59 = v68;
          char v61 = v69 & 1;
          if (!--v55)
          {
            sub_1E3D15688(result, v68, v61);
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
        }
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
      }
      else
      {
LABEL_43:
        v75[39] = v56;
        sub_1E3E772F0();
        uint64_t v70 = v75[15];
        v75[40] = v70;
        uint64_t v71 = (void *)swift_task_alloc();
        v75[41] = v71;
        *uint64_t v71 = v75;
        v71[1] = sub_1E3E0EDF0;
        return sub_1E3E162DC(v56, v70);
      }
    }
  }
  else
  {
    sub_1E3E7A740();
    int v46 = sub_1E3E7A860();
    os_log_type_t v47 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v46, v47))
    {
      int v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v48 = 0;
      _os_log_impl(&dword_1E3BC5000, v46, v47, "Found episodes using local-only identifiers", v48, 2u);
      MEMORY[0x1E4E79510](v48, -1, -1);
    }
    uint64_t v49 = v1[28];
    uint64_t v50 = v1[29];
    uint64_t v51 = v1[27];

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v1[35];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = (uint64_t (*)(uint64_t))v1[1];
    return v53(v52);
  }
  return result;
}

uint64_t sub_1E3E0ED24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E0EDF0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 336) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1E3E0EF2C, 0, 0);
}

uint64_t sub_1E3E0EF2C()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0 + 17;
  uint64_t v2 = v0[42];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v0[25];
    uint64_t v5 = v0[26];
    uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v7 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = v0[26];
      sub_1E3E18F9C(v6, v9, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
      uint64_t v10 = *(void *)(v5 + 40);
      sub_1E3E19004(v9, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1E3CB78B4(0, v8[2] + 1, 1, v8);
      }
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1) {
        uint64_t v8 = sub_1E3CB78B4((void *)(v11 > 1), v12 + 1, 1, v8);
      }
      v8[2] = v12 + 1;
      v8[v12 + 4] = v10;
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  }
  if (*(void *)(*v1 + 16) && (uint64_t v13 = v8[2]) != 0)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v13; ++i)
    {
      uint64_t v15 = v8[i + 4];
      sub_1E3E12074(v15);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[16] = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29720);
  sub_1E3E18CB4(&qword_1EAE29560, (uint64_t *)&unk_1EAE29720);
  if (sub_1E3E7D3C0())
  {
    sub_1E3E7A740();
    uint64_t v16 = sub_1E3E7A860();
    os_log_type_t v17 = sub_1E3E7D4E0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v20 = v0[30];
    uint64_t v21 = v0[27];
    if (v18)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v33 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1E3E7D320();
      uint64_t v31 = v19;
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      v0[18] = sub_1E3C150B8(v24, v26, &v33);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v16, v17, "Failed to find requested remote episodes with identifiers: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v23, -1, -1);
      MEMORY[0x1E4E79510](v22, -1, -1);

      v31(v20, v32);
    }
    else
    {

      v19(v20, v21);
    }
  }
  uint64_t v27 = v0[42];
  uint64_t v33 = v0[35];
  sub_1E3D3AD18(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v33;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(uint64_t))v0[1];
  return v29(v28);
}

uint64_t sub_1E3E0F31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *(void *)(type metadata accessor for ShowEntity(0) - 8);
  v4[26] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7A880();
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E0F460, 0, 0);
}

uint64_t sub_1E3E0F460()
{
  uint64_t v1 = *(void *)(v0 + 184);
  *(void *)(v0 + 152) = *(void *)(v0 + 176);
  *(void *)(v0 + 136) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1E3E772F0();
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v2 = objc_msgSend(*(id *)(v0 + 64), sel_privateQueueContext);
  *(void *)(v0 + 264) = v2;
  swift_unknownObjectRelease();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, id, uint64_t))((char *)&dword_1EAE29548 + dword_1EAE29548);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1E3E0F5C4;
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 176);
  return v9(v7, v6, v4, v2, v5);
}

uint64_t sub_1E3E0F5C4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 280) = a1;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1E3E0ED24;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3E0F6F4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E0F6F4()
{
  uint64_t v83 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[36];
  uint64_t v4 = (void *)swift_task_alloc();
  *uint64_t v4 = &type metadata for ShowEntity.ShowEntityQuery;
  unint64_t v5 = sub_1E3E18C44();
  v4[1] = v5;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  sub_1E3E775E0();
  uint64_t v7 = sub_1E3E12A1C(v2, KeyPath, type metadata accessor for ShowEntity);
  swift_release_n();
  uint64_t v8 = v1 + 19;
  uint64_t v9 = (uint64_t)(v1 + 10);
  uint64_t v10 = v1 + 11;
  unint64_t v11 = v1 + 17;
  if (*(void *)(v1[19] + 16))
  {
    uint64_t v79 = v3;
    unint64_t v12 = v1 + 10;
    uint64_t v13 = v1 + 11;
    uint64_t v14 = v7[2];
    if (v14)
    {
      uint64_t v74 = v1;
      swift_bridgeObjectRetain();
      uint64_t v15 = v7 + 5;
      do
      {
        uint64_t v16 = *(v15 - 1);
        uint64_t v17 = *v15;
        swift_bridgeObjectRetain();
        sub_1E3E12180(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
      uint64_t v1 = v74;
      uint64_t v10 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v1 + 11;
    }
    uint64_t v9 = (uint64_t)v12;
    uint64_t v3 = v79;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v1[35];
  uint64_t v19 = (void *)swift_task_alloc();
  void *v19 = &type metadata for ShowEntity.ShowEntityQuery;
  v19[1] = v5;
  uint64_t v20 = swift_getKeyPath();
  swift_task_dealloc();
  sub_1E3E775E0();
  uint64_t v21 = sub_1E3E12B94(v18, v20, v9, type metadata accessor for ShowEntity);
  swift_release_n();
  if (*(void *)(v1[17] + 16) && (uint64_t v22 = *(void *)(v21 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v22; ++i)
    {
      uint64_t v24 = *(void *)(v21 + 8 * i + 32);
      sub_1E3E12074(v24);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *uint64_t v10 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE06C0);
  sub_1E3E18CB4((unint64_t *)&qword_1EAE29180, &qword_1EBFE06C0);
  if ((sub_1E3E7D3C0() & 1) != 0
    || (*(v8 - 7) = *v11,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29720),
        sub_1E3E18CB4(&qword_1EAE29560, (uint64_t *)&unk_1EAE29720),
        (sub_1E3E7D3C0() & 1) != 0))
  {
    sub_1E3E7D270();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v25 = (uint64_t (*)(void))v1[1];
      return v25();
    }
    else
    {
      sub_1E3E7A740();
      uint64_t v27 = sub_1E3E7A860();
      uint64_t v28 = sub_1E3E7D4C0();
      if (os_log_type_enabled(v27, (os_log_type_t)v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1E3BC5000, v27, (os_log_type_t)v28, "Some entities are lingering, checking remote source for episode content.", v29, 2u);
        MEMORY[0x1E4E79510](v29, -1, -1);
      }
      uint64_t v30 = v1[32];
      uint64_t v31 = v1;
      uint64_t v32 = v1[28];
      uint64_t v33 = v31[27];

      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v31[37] = v34;
      v31[38] = (v32 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      id v80 = v34;
      v34(v30, v33);
      uint64_t v75 = v31;
      v31[13] = v31[19];
      if (sub_1E3E7D3C0())
      {
        sub_1E3E7A740();
        uint64_t v35 = sub_1E3E7A860();
        os_log_type_t v36 = sub_1E3E7D4E0();
        BOOL v37 = os_log_type_enabled(v35, v36);
        uint64_t v38 = v31[31];
        uint64_t v39 = v31[27];
        if (v37)
        {
          uint64_t v78 = v31[27];
          uint64_t v76 = v31[31];
          int v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v73 = swift_slowAlloc();
          uint64_t v82 = v73;
          *(_DWORD *)int v40 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          os_log_type_t type = v36;
          uint64_t v41 = sub_1E3E7D320();
          unint64_t v43 = v42;
          swift_bridgeObjectRelease();
          v31[20] = sub_1E3C150B8(v41, v43, &v82);
          sub_1E3E7DBD0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1E3BC5000, v35, type, "Failed to find requested local episodes with identifiers: %s", v40, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v73, -1, -1);
          MEMORY[0x1E4E79510](v40, -1, -1);

          uint64_t v44 = v76;
          uint64_t v45 = v78;
        }
        else
        {

          uint64_t v44 = v38;
          uint64_t v45 = v39;
        }
        v80(v44, v45);
      }
      uint64_t v54 = *v11;
      int64_t v55 = *(void *)(*v11 + 16);
      uint64_t v56 = MEMORY[0x1E4FBC860];
      if (v55)
      {
        id v77 = v8 - 5;
        uint64_t v82 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1E3CC7660(0, v55, 0);
        uint64_t v56 = v82;
        uint64_t result = sub_1E3DE3F98(v54);
        uint64_t v57 = result;
        uint64_t v59 = v58;
        char v61 = v60 & 1;
        while ((v57 & 0x8000000000000000) == 0 && v57 < 1 << *(unsigned char *)(v54 + 32))
        {
          if (((*(void *)(v54 + 56 + (((unint64_t)v57 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v57) & 1) == 0) {
            goto LABEL_47;
          }
          if (*(_DWORD *)(v54 + 36) != v59) {
            goto LABEL_48;
          }
          char v81 = v61;
          *id v77 = *(void *)(*(void *)(v54 + 48) + 8 * v57);
          uint64_t v62 = sub_1E3E7E0E0();
          uint64_t v64 = v63;
          uint64_t v82 = v56;
          unint64_t v66 = *(void *)(v56 + 16);
          unint64_t v65 = *(void *)(v56 + 24);
          if (v66 >= v65 >> 1)
          {
            sub_1E3CC7660(v65 > 1, v66 + 1, 1);
            uint64_t v56 = v82;
          }
          *(void *)(v56 + 16) = v66 + 1;
          uint64_t v67 = v56 + 16 * v66;
          *(void *)(v67 + 32) = v62;
          *(void *)(v67 + 40) = v64;
          uint64_t result = sub_1E3DE403C(v57, v59, v81 & 1, v54);
          uint64_t v57 = result;
          uint64_t v59 = v68;
          char v61 = v69 & 1;
          if (!--v55)
          {
            sub_1E3D15688(result, v68, v61);
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
        }
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
      }
      else
      {
LABEL_43:
        v75[39] = v56;
        sub_1E3E772F0();
        uint64_t v70 = v75[15];
        v75[40] = v70;
        uint64_t v71 = (void *)swift_task_alloc();
        v75[41] = v71;
        *uint64_t v71 = v75;
        v71[1] = sub_1E3E0FFBC;
        return sub_1E3E17A28(v56, v70);
      }
    }
  }
  else
  {
    sub_1E3E7A740();
    int v46 = sub_1E3E7A860();
    os_log_type_t v47 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v46, v47))
    {
      int v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v48 = 0;
      _os_log_impl(&dword_1E3BC5000, v46, v47, "Found episodes using local-only identifiers", v48, 2u);
      MEMORY[0x1E4E79510](v48, -1, -1);
    }
    uint64_t v49 = v1[28];
    uint64_t v50 = v1[29];
    uint64_t v51 = v1[27];

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v1[35];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = (uint64_t (*)(uint64_t))v1[1];
    return v53(v52);
  }
  return result;
}

uint64_t sub_1E3E0FFBC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 336) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1E3E100F8, 0, 0);
}

uint64_t sub_1E3E100F8()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0 + 17;
  uint64_t v2 = v0[42];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v0[25];
    uint64_t v5 = v0[26];
    uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v7 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = v0[26];
      sub_1E3E18F9C(v6, v9, type metadata accessor for ShowEntity);
      uint64_t v10 = *(void *)(v5 + 40);
      sub_1E3E19004(v9, type metadata accessor for ShowEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1E3CB78B4(0, v8[2] + 1, 1, v8);
      }
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1) {
        uint64_t v8 = sub_1E3CB78B4((void *)(v11 > 1), v12 + 1, 1, v8);
      }
      v8[2] = v12 + 1;
      v8[v12 + 4] = v10;
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  }
  if (*(void *)(*v1 + 16) && (uint64_t v13 = v8[2]) != 0)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v13; ++i)
    {
      uint64_t v15 = v8[i + 4];
      sub_1E3E12074(v15);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[16] = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29720);
  sub_1E3E18CB4(&qword_1EAE29560, (uint64_t *)&unk_1EAE29720);
  if (sub_1E3E7D3C0())
  {
    sub_1E3E7A740();
    uint64_t v16 = sub_1E3E7A860();
    os_log_type_t v17 = sub_1E3E7D4E0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v20 = v0[30];
    uint64_t v21 = v0[27];
    if (v18)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v33 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1E3E7D320();
      uint64_t v31 = v19;
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      v0[18] = sub_1E3C150B8(v24, v26, &v33);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v16, v17, "Failed to find requested remote episodes with identifiers: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v23, -1, -1);
      MEMORY[0x1E4E79510](v22, -1, -1);

      v31(v20, v32);
    }
    else
    {

      v19(v20, v21);
    }
  }
  uint64_t v27 = v0[42];
  uint64_t v33 = v0[35];
  sub_1E3D3AD44(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v33;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(uint64_t))v0[1];
  return v29(v28);
}

uint64_t sub_1E3E104E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (*a5 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  swift_bridgeObjectRetain();
  sub_1E3E772F0();
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v8 = objc_msgSend(v13, sel_privateQueueContext);
  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1E3E7A510();
  if (v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1E3E7A500();
  }
  else
  {
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
  }
  if (sub_1E3E7A520())
  {
    unint64_t v11 = sub_1E3D32170(a1, a2, v8);
    if (v11)
    {
      uint64_t v10 = (uint64_t)v11;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = a1;
    }
  }
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_1E3E10678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a3;
  v5[7] = a4;
  v5[4] = a1;
  v5[5] = a2;
  uint64_t v7 = sub_1E3E7D8E0();
  v5[8] = v7;
  v5[9] = *(void *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v5[2] = a5;
  return MEMORY[0x1F4188298](sub_1E3E10744, 0, 0);
}

uint64_t sub_1E3E10744()
{
  if (qword_1EAE24550 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v21 = v0[10];
  uint64_t v2 = v0[6];
  uint64_t v19 = (void *)v0[7];
  uint64_t v20 = v0[8];
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);
  v0[11] = v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1E3E8FA00;
  sub_1E3C12B10(0, &qword_1EBFDEE40);
  *(void *)(v6 + 32) = sub_1E3E7D580();
  *(void *)(v6 + 40) = EpisodeEntity.EpisodeEntityQuery.predicate(forAdamIDs:)(v2);
  uint64_t v7 = self;
  id v8 = (void *)sub_1E3E7D300();
  id v9 = objc_msgSend(v7, sel_predicateForEpisodeUuids_, v8);

  *(void *)(v6 + 48) = v9;
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EBFDEE38);
  uint64_t v10 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v10);

  objc_msgSend(v5, sel_setPredicate_, v11);
  uint64_t v12 = swift_allocObject();
  v0[12] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v21, *MEMORY[0x1E4F1BD78], v20);
  id v13 = v19;
  id v14 = v5;
  uint64_t v15 = (void *)swift_task_alloc();
  v0[13] = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE253F0);
  *uint64_t v15 = v0;
  v15[1] = sub_1E3E10A64;
  uint64_t v17 = v0[10];
  return MEMORY[0x1F40D7080](v0 + 3, v17, sub_1E3E19120, v12, v16);
}

uint64_t sub_1E3E10A64()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    id v5 = sub_1E3E19318;
  }
  else {
    id v5 = sub_1E3E19310;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E10BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a3;
  v5[7] = a4;
  v5[4] = a1;
  v5[5] = a2;
  uint64_t v7 = sub_1E3E7D8E0();
  v5[8] = v7;
  v5[9] = *(void *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v5[2] = a5;
  return MEMORY[0x1F4188298](sub_1E3E10CC4, 0, 0);
}

uint64_t sub_1E3E10CC4()
{
  if (qword_1EAE24538 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v21 = v0[10];
  uint64_t v2 = (void *)v0[7];
  uint64_t v20 = v0[8];
  uint64_t v3 = v0[6];
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  swift_bridgeObjectRetain();
  id v5 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);
  v0[11] = v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1E3E8FA00;
  sub_1E3C12B10(0, &qword_1EBFDEE40);
  *(void *)(v7 + 32) = sub_1E3E7D580();
  *(void *)(v7 + 40) = ShowEntity.ShowEntityQuery.predicate(forAdamIDs:)(v3);
  id v8 = self;
  uint64_t v9 = (void *)sub_1E3E7D300();
  id v10 = objc_msgSend(v8, sel_predicateForPodcastUuids_, v9);

  *(void *)(v7 + 48) = v10;
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EBFDEE38);
  id v11 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v11);

  objc_msgSend(v6, sel_setPredicate_, v12);
  uint64_t v13 = swift_allocObject();
  v0[12] = v13;
  *(void *)(v13 + 16) = v2;
  *(void *)(v13 + 24) = v6;
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v21, *MEMORY[0x1E4F1BD78], v20);
  id v14 = v2;
  id v15 = v6;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[13] = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE294C0);
  *uint64_t v16 = v0;
  v16[1] = sub_1E3E10FD8;
  uint64_t v18 = v0[10];
  return MEMORY[0x1F40D7080](v0 + 3, v18, sub_1E3E18D44, v13, v17);
}

uint64_t sub_1E3E10FD8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    id v5 = sub_1E3E111E0;
  }
  else {
    id v5 = sub_1E3E1116C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E1116C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3E111E0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E1124C@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1E3E79AE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1E3E112DC@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1E3E79490();
  *a1 = result;
  return result;
}

uint64_t sub_1E3E1136C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EpisodeEntity(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  id v6 = (void *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3C12B10(0, &qword_1EBFDF310);
  uint64_t v7 = a1;
  unint64_t v8 = sub_1E3E7D900();
  if (v1) {
    return v7;
  }
  unint64_t v9 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_4:
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC7874(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16[1] = 0;
    uint64_t v12 = 0;
    uint64_t v7 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1E4E77720](v12, v9);
      }
      else {
        id v13 = *(id *)(v9 + 8 * v12 + 32);
      }
      EpisodeEntity.init(model:)(v13, v6);
      uint64_t v17 = v7;
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1E3CC7874(v14 > 1, v15 + 1, 1);
        uint64_t v7 = v17;
      }
      ++v12;
      *(void *)(v7 + 16) = v15 + 1;
      sub_1E3E190B8((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v15, type metadata accessor for EpisodeEntity);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3E115AC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ChannelEntity();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  id v6 = (void *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3C12B10(0, &qword_1EAE29600);
  uint64_t v7 = a1;
  unint64_t v8 = sub_1E3E7D900();
  if (v1) {
    return v7;
  }
  unint64_t v9 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_4:
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC78EC(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16[1] = 0;
    uint64_t v12 = 0;
    uint64_t v7 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1E4E77720](v12, v9);
      }
      else {
        id v13 = *(id *)(v9 + 8 * v12 + 32);
      }
      ChannelEntity.init(model:)(v13, v6);
      uint64_t v17 = v7;
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1E3CC78EC(v14 > 1, v15 + 1, 1);
        uint64_t v7 = v17;
      }
      ++v12;
      *(void *)(v7 + 16) = v15 + 1;
      sub_1E3E190B8((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v15, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3E117EC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ShowEntity(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  id v6 = (void *)((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE0750);
  uint64_t v7 = a1;
  unint64_t v8 = sub_1E3E7D900();
  if (v1) {
    return v7;
  }
  unint64_t v9 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_4:
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC7928(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16[1] = 0;
    uint64_t v12 = 0;
    uint64_t v7 = v17;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1E4E77720](v12, v9);
      }
      else {
        id v13 = *(id *)(v9 + 8 * v12 + 32);
      }
      ShowEntity.init(model:)(v13, v6);
      uint64_t v17 = v7;
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1E3CC7928(v14 > 1, v15 + 1, 1);
        uint64_t v7 = v17;
      }
      ++v12;
      *(void *)(v7 + 16) = v15 + 1;
      sub_1E3E190B8((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v15, type metadata accessor for ShowEntity);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E3E11A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1E3E7C750();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1E3E12DE0(&qword_1EBFE4908, MEMORY[0x1E4F71658]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1E3E7CC20();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1E3E12DE0((unint64_t *)&unk_1EBFE4910, MEMORY[0x1E4F71658]);
      char v19 = sub_1E3E7CCA0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1E3DA85E8();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1E3E12310(v12, MEMORY[0x1E4F71658], &qword_1EBFE4908, MEMORY[0x1E4F71658], MEMORY[0x1E4F71660]);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1E3E11D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1E3E7C6D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1E3E12DE0(&qword_1EAE26728, MEMORY[0x1E4F71640]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1E3E7CC20();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1E3E12DE0(&qword_1EAE29670, MEMORY[0x1E4F71640]);
      char v19 = sub_1E3E7CCA0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1E3DA8608();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1E3E12310(v12, MEMORY[0x1E4F71640], &qword_1EAE26728, MEMORY[0x1E4F71640], MEMORY[0x1E4F71648]);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1E3E12074(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1E3E7E260();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1E3DA88D8();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_1E3E125FC(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1E3E12180(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1E3E7E270();
  swift_bridgeObjectRetain();
  sub_1E3E7CE50();
  uint64_t v6 = sub_1E3E7E2B0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1E3E7E150() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1E3E7E150() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1E3DA7F20();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1E3E12784(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1E3E12310(int64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t a5)
{
  unint64_t v42 = a4;
  uint64_t v43 = a5;
  uint64_t v41 = a3;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = *v5;
  uint64_t v12 = *v5 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(*v5 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    BOOL v37 = v5;
    uint64_t v15 = ~v13;
    sub_1E3E775E0();
    uint64_t v16 = sub_1E3E7DCD0();
    uint64_t v17 = v11;
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v39 = (v16 + 1) & v15;
      uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v18 = v8 + 16;
      uint64_t v38 = v19;
      uint64_t v44 = *(void *)(v18 + 56);
      uint64_t v40 = v18;
      uint64_t v20 = (void (**)(char *, uint64_t))(v18 - 8);
      do
      {
        uint64_t v21 = v12;
        int64_t v22 = v44 * v14;
        v38(v10, *(void *)(v17 + 48) + v44 * v14, v7);
        uint64_t v23 = v17;
        sub_1E3E12DE0(v41, v42);
        uint64_t v24 = sub_1E3E7CC20();
        (*v20)(v10, v7);
        unint64_t v25 = v24 & v15;
        if (a1 >= (uint64_t)v39)
        {
          if (v25 >= v39 && a1 >= (uint64_t)v25)
          {
LABEL_16:
            uint64_t v17 = v23;
            uint64_t v28 = *(void *)(v23 + 48);
            int64_t v29 = v44 * a1;
            unint64_t v30 = v28 + v44 * a1;
            unint64_t v31 = v28 + v22 + v44;
            if (v44 * a1 < v22 || v30 >= v31)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v14;
            }
            else
            {
              a1 = v14;
              if (v29 != v22)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v14;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v25 >= v39 || a1 >= (uint64_t)v25)
        {
          goto LABEL_16;
        }
        uint64_t v17 = v23;
LABEL_5:
        unint64_t v14 = (v14 + 1) & v15;
        uint64_t v12 = v21;
      }
      while (((*(void *)(v21 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
    }
    *(void *)(v12 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    uint64_t v5 = v37;
  }
  else
  {
    *(void *)(v12 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v33 = *v5;
  uint64_t v34 = *(void *)(*v5 + 16);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v33 + 16) = v36;
    ++*(_DWORD *)(v33 + 36);
  }
}

unint64_t sub_1E3E125FC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    sub_1E3E775E0();
    uint64_t v8 = sub_1E3E7DCD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_1E3E7E260() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *uint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1E3E12784(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    sub_1E3E775E0();
    uint64_t v8 = sub_1E3E7DCD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1E3E7E270();
        swift_bridgeObjectRetain();
        sub_1E3E7CE50();
        uint64_t v10 = sub_1E3E7E2B0();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1E3E1294C(unint64_t a1)
{
  return sub_1E3CB720C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1E3E12960(void *a1)
{
  return sub_1E3CB7E58(0, a1[2], 0, a1);
}

uint64_t sub_1E3E12974(unint64_t a1)
{
  return sub_1E3CB8430(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1E3E12988(unint64_t a1)
{
  return sub_1E3CB8464(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1E3E1299C(unint64_t a1)
{
  return sub_1E3CB8498(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1E3E129B0(unint64_t a1)
{
  return sub_1E3CB84CC(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1E3E129C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1E3E104E8(*a1, a1[1], *a2, (uint64_t)v9, a3);
  if (!v4)
  {
    *(void *)a4 = result;
    *(void *)(a4 + 8) = v7;
    *(unsigned char *)(a4 + 16) = v8;
  }
  return result;
}

void *sub_1E3E12A1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void *)(a3(0) - 8);
  uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  char v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    swift_getAtKeyPath();
    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v8 = sub_1E3CB7240(0, v8[2] + 1, 1, v8);
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1) {
        char v8 = sub_1E3CB7240((void *)(v10 > 1), v11 + 1, 1, v8);
      }
      v8[2] = v11 + 1;
      unint64_t v9 = &v8[2 * v11];
      v9[4] = v13;
      v9[5] = v14;
    }
    v6 += v7;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1E3E12B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1E3CC75D4(0, v4, 0);
    uint64_t v5 = v15;
    uint64_t v8 = *(void *)(a4(0) - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    do
    {
      swift_getAtKeyPath();
      unint64_t v12 = *(void *)(v15 + 16);
      unint64_t v11 = *(void *)(v15 + 24);
      if (v12 >= v11 >> 1) {
        sub_1E3CC75D4(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v15 + 16) = v12 + 1;
      *(void *)(v15 + 8 * v12 + 32) = v14;
      v9 += v10;
      --v4;
    }
    while (v4);
  }
  return v5;
}

unint64_t sub_1E3E12CDC()
{
  unint64_t result = qword_1EAE25720;
  if (!qword_1EAE25720)
  {
    sub_1E3C12B10(255, (unint64_t *)&qword_1EBFDEE80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25720);
  }
  return result;
}

uint64_t sub_1E3E12D44()
{
  return swift_deallocObject();
}

void sub_1E3E12D7C(uint64_t *a1@<X8>)
{
}

uint64_t sub_1E3E12D98()
{
  return sub_1E3E12DE0((unint64_t *)&qword_1EBFE2F38, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3E12DE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3E12E28()
{
  return sub_1E3E12DE0(&qword_1EAE294D0, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

uint64_t sub_1E3E12E70()
{
  return sub_1E3E12DE0(&qword_1EAE294D8, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

unint64_t sub_1E3E12EBC()
{
  unint64_t result = qword_1EAE294F0;
  if (!qword_1EAE294F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE294F0);
  }
  return result;
}

unint64_t sub_1E3E12F14()
{
  unint64_t result = qword_1EAE294F8[0];
  if (!qword_1EAE294F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE294F8);
  }
  return result;
}

unint64_t sub_1E3E12F6C()
{
  unint64_t result = qword_1EAE29510;
  if (!qword_1EAE29510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29510);
  }
  return result;
}

uint64_t sub_1E3E12FC0()
{
  return sub_1E3E12DE0(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
}

unint64_t sub_1E3E1300C()
{
  unint64_t result = qword_1EAE29520[0];
  if (!qword_1EAE29520[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EAE294C0);
    sub_1E3E12DE0(&qword_1EBFE2F40, (void (*)(uint64_t))type metadata accessor for ShowEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE29520);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowEntity.ShowEntityQuery()
{
  return &type metadata for ShowEntity.ShowEntityQuery;
}

uint64_t sub_1E3E130C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3E129C4(a1, *(uint64_t **)(v2 + 16), &qword_1EAE24538, a2);
}

uint64_t sub_1E3E13108(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  v2[5] = *(void *)(type metadata accessor for EpisodeEntity(0) - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E131C4, 0, 0);
}

uint64_t sub_1E3E131C4()
{
  if (qword_1EAE24558 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1E3E78790();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EAE293B8);
  uint64_t v2 = sub_1E3E78780();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2910);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E3E86660;
  swift_bridgeObjectRetain();
  *(void *)(v3 + 32) = sub_1E3E790A0();
  id v4 = objc_allocWithZone((Class)sub_1E3E78C50());
  uint64_t v5 = sub_1E3E78C30();
  v0[7] = v5;
  uint64_t v6 = swift_task_alloc();
  v0[8] = v6;
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29660);
  void *v7 = v0;
  v7[1] = sub_1E3E1338C;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000013, 0x80000001E3EA3320, sub_1E3E19184, v6, v8);
}

uint64_t sub_1E3E1338C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3E1932C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1E3E134A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E134A8()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC7874(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = v12;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1E4E77720](v4, v1);
    }
    else {
      id v7 = *(id *)(v1 + 8 * v4 + 32);
    }
    EpisodeEntity.init(mediaObject:)(v7, *(void **)(v0 + 48));
    unint64_t v9 = *(void *)(v12 + 16);
    unint64_t v8 = *(void *)(v12 + 24);
    if (v9 >= v8 >> 1) {
      sub_1E3CC7874(v8 > 1, v9 + 1, 1);
    }
    uint64_t v10 = *(void *)(v0 + 48);
    ++v4;
    *(void *)(v12 + 16) = v9 + 1;
    sub_1E3E190B8(v10, v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v9, type metadata accessor for EpisodeEntity);
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
LABEL_14:

  swift_task_dealloc();
  unint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v6);
}

uint64_t sub_1E3E13674(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  v2[5] = *(void *)(type metadata accessor for ChannelEntity() - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E13730, 0, 0);
}

uint64_t sub_1E3E13730()
{
  if (qword_1EAE24520 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1E3E78790();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EAE29028);
  uint64_t v2 = sub_1E3E78780();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2910);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E3E86660;
  swift_bridgeObjectRetain();
  *(void *)(v3 + 32) = sub_1E3E790A0();
  id v4 = objc_allocWithZone((Class)sub_1E3E78C50());
  uint64_t v5 = sub_1E3E78C30();
  v0[7] = v5;
  uint64_t v6 = swift_task_alloc();
  v0[8] = v6;
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v2;
  id v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29610);
  void *v7 = v0;
  v7[1] = sub_1E3E138F8;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000013, 0x80000001E3EA3320, sub_1E3E18EF0, v6, v8);
}

uint64_t sub_1E3E138F8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3E1932C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1E3E13A14;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E13A14()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC78EC(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = v12;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1E4E77720](v4, v1);
    }
    else {
      id v7 = *(id *)(v1 + 8 * v4 + 32);
    }
    ChannelEntity.init(mediaObject:)(v7, *(void **)(v0 + 48));
    unint64_t v9 = *(void *)(v12 + 16);
    unint64_t v8 = *(void *)(v12 + 24);
    if (v9 >= v8 >> 1) {
      sub_1E3CC78EC(v8 > 1, v9 + 1, 1);
    }
    uint64_t v10 = *(void *)(v0 + 48);
    ++v4;
    *(void *)(v12 + 16) = v9 + 1;
    sub_1E3E190B8(v10, v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v9, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
LABEL_14:

  swift_task_dealloc();
  unint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v6);
}

uint64_t sub_1E3E13BE0(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  v2[5] = *(void *)(type metadata accessor for ShowEntity(0) - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E13C9C, 0, 0);
}

uint64_t sub_1E3E13C9C()
{
  if (qword_1EAE24540 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1E3E78790();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EAE292E8);
  uint64_t v2 = sub_1E3E78780();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2910);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E3E86660;
  swift_bridgeObjectRetain();
  *(void *)(v3 + 32) = sub_1E3E790A0();
  id v4 = objc_allocWithZone((Class)sub_1E3E78C50());
  uint64_t v5 = sub_1E3E78C30();
  v0[7] = v5;
  uint64_t v6 = swift_task_alloc();
  v0[8] = v6;
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v2;
  id v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE295A8);
  void *v7 = v0;
  v7[1] = sub_1E3E13E64;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000013, 0x80000001E3EA3320, sub_1E3E18D70, v6, v8);
}

uint64_t sub_1E3E13E64()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3E1414C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1E3E13F80;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E13F80()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC7928(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = v12;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1E4E77720](v4, v1);
    }
    else {
      id v7 = *(id *)(v1 + 8 * v4 + 32);
    }
    ShowEntity.init(mediaObject:)(v7, *(void **)(v0 + 48));
    unint64_t v9 = *(void *)(v12 + 16);
    unint64_t v8 = *(void *)(v12 + 24);
    if (v9 >= v8 >> 1) {
      sub_1E3CC7928(v8 > 1, v9 + 1, 1);
    }
    uint64_t v10 = *(void *)(v0 + 48);
    ++v4;
    *(void *)(v12 + 16) = v9 + 1;
    sub_1E3E190B8(v10, v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v9, type metadata accessor for ShowEntity);
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
LABEL_14:

  swift_task_dealloc();
  unint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v6);
}

uint64_t sub_1E3E1414C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E141C4(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  v2[9] = *(void *)(type metadata accessor for EpisodeEntity(0) - 8);
  v2[10] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29650);
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273B0);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29580);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273C0);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29590);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273D0);
  v2[19] = swift_task_alloc();
  uint64_t v4 = sub_1E3E78770();
  v2[20] = v4;
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_1E3E78800();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E144B8, 0, 0);
}

uint64_t sub_1E3E144B8()
{
  (*(void (**)(void, void, void))(v0[21] + 104))(v0[22], *MEMORY[0x1E4F91600], v0[20]);
  if (qword_1EAE24558 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = sub_1E3E78790();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EAE293B8);
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v8, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v7);
  uint64_t v10 = sub_1E3E78820();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v1, 1, 1, v10);
  uint64_t v11 = sub_1E3E787B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  uint64_t v12 = sub_1E3E787A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  uint64_t v13 = sub_1E3E78810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  uint64_t v14 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  swift_bridgeObjectRetain();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1E3E5398C(MEMORY[0x1E4FBC860]);
  sub_1E3E5398C(v15);
  sub_1E3E539C8(v15);
  sub_1E3E53BBC(v15);
  sub_1E3E53BBC(v15);
  sub_1E3E53DF8(v15);
  sub_1E3E53E34(v15);
  sub_1E3E787F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E79AC0();
  BOOL v16 = (void *)swift_task_alloc();
  v0[26] = v16;
  *BOOL v16 = v0;
  v16[1] = sub_1E3E14908;
  uint64_t v17 = v0[25];
  uint64_t v18 = v0[13];
  return MEMORY[0x1F4145690](v18, v17);
}

uint64_t sub_1E3E14908()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3E1930C;
  }
  else {
    uint64_t v2 = sub_1E3E14A1C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E14A1C()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  unint64_t v4 = sub_1E3E79390();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC7874(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v0[9];
  uint64_t v9 = v15;
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x1E4E77720](v7, v4);
    }
    else {
      id v10 = *(id *)(v4 + 8 * v7 + 32);
    }
    EpisodeEntity.init(mediaObject:)(v10, (void *)v0[10]);
    unint64_t v12 = *(void *)(v15 + 16);
    unint64_t v11 = *(void *)(v15 + 24);
    if (v12 >= v11 >> 1) {
      sub_1E3CC7874(v11 > 1, v12 + 1, 1);
    }
    uint64_t v13 = v0[10];
    ++v7;
    *(void *)(v15 + 16) = v12 + 1;
    sub_1E3E190B8(v13, v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v12, type metadata accessor for EpisodeEntity);
  }
  while (v5 != v7);
  swift_bridgeObjectRelease();
LABEL_14:
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(v9);
}

uint64_t sub_1E3E14C94(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_1E3E7A6E0();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_1E3E7A640();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7A6D0();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E14E6C, 0, 0);
}

uint64_t sub_1E3E14E6C()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  sub_1E3E7A650();
  sub_1E3E7A650();
  sub_1E3E7A6A0();
  sub_1E3E7A610();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = v4;
  v0[21] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v26 = v4;
  v4(v1, v2);
  uint64_t v5 = sub_1E3E7A6A0();
  os_signpost_type_t v6 = sub_1E3E7D760();
  if (sub_1E3E7DB50())
  {
    uint64_t v7 = v0[12];
    uint64_t v9 = v0[8];
    uint64_t v8 = v0[9];
    id v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    unint64_t v11 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v10(v7, v0[13], v9);
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v12 = 0;
    os_signpost_id_t v13 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v5, v6, v13, "LibraryAppIntentMediaAPIFetch", "", v12, 2u);
    MEMORY[0x1E4E79510](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    uint64_t v14 = v0[9];

    id v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    unint64_t v11 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v15 = v0[19];
  uint64_t v17 = v0[13];
  uint64_t v16 = v0[14];
  uint64_t v18 = v0[12];
  uint64_t v19 = v0[8];
  uint64_t v20 = v0[9];
  v0[22] = v10;
  v0[23] = v11;
  v10(v18, v17, v19);
  sub_1E3E7A720();
  swift_allocObject();
  v0[24] = sub_1E3E7A710();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v0[25] = v21;
  v0[26] = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v21(v17, v19);
  v26(v15, v16);
  int64_t v22 = (void *)swift_task_alloc();
  v0[27] = v22;
  *int64_t v22 = v0;
  v22[1] = sub_1E3E150D0;
  uint64_t v24 = v0[2];
  uint64_t v23 = v0[3];
  return sub_1E3E141C4(v24, v23);
}

uint64_t sub_1E3E150D0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 224) = a1;
  *(void *)(v3 + 232) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1E3E1931C;
  }
  else {
    uint64_t v4 = sub_1E3E19320;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E151E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a2;
  v4[6] = a3;
  v4[4] = a1;
  uint64_t v6 = sub_1E3E7D8E0();
  v4[7] = v6;
  v4[8] = *(void *)(v6 - 8);
  v4[9] = swift_task_alloc();
  v4[2] = a4;
  return MEMORY[0x1F4188298](sub_1E3E152B0, 0, 0);
}

uint64_t sub_1E3E152B0()
{
  if (qword_1EAE24518 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v18 = v0[9];
  uint64_t v2 = (void *)v0[6];
  uint64_t v17 = v0[7];
  uint64_t v3 = v0[5];
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);
  v0[10] = v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1E3E8FA00;
  sub_1E3C12B10(0, &qword_1EBFDEE40);
  *(void *)(v7 + 32) = sub_1E3E7D580();
  *(void *)(v7 + 40) = ChannelEntity.ChannelEntityQuery.predicate(forAdamIDs:)(v3);
  *(void *)(v7 + 48) = objc_msgSend(self, sel_falsePredicate);
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EBFDEE38);
  uint64_t v8 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v8);

  objc_msgSend(v6, sel_setPredicate_, v9);
  uint64_t v10 = swift_allocObject();
  v0[11] = v10;
  *(void *)(v10 + 16) = v2;
  *(void *)(v10 + 24) = v6;
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v18, *MEMORY[0x1E4F1BD78], v17);
  id v11 = v2;
  id v12 = v6;
  os_signpost_id_t v13 = (void *)swift_task_alloc();
  v0[12] = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29238);
  *os_signpost_id_t v13 = v0;
  v13[1] = sub_1E3E15598;
  uint64_t v15 = v0[9];
  return MEMORY[0x1F40D7080](v0 + 3, v15, sub_1E3E18EC4, v10, v14);
}

uint64_t sub_1E3E15598()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1E3E157A0;
  }
  else {
    uint64_t v5 = sub_1E3E1572C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E1572C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3E157A0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E1580C(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  v2[9] = *(void *)(type metadata accessor for ChannelEntity() - 8);
  v2[10] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE295F0);
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273B0);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29580);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273C0);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29590);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273D0);
  v2[19] = swift_task_alloc();
  uint64_t v4 = sub_1E3E78770();
  v2[20] = v4;
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_1E3E78800();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E15B00, 0, 0);
}

uint64_t sub_1E3E15B00()
{
  (*(void (**)(void, void, void))(v0[21] + 104))(v0[22], *MEMORY[0x1E4F91600], v0[20]);
  if (qword_1EAE24520 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = sub_1E3E78790();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EAE29028);
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v8, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v7);
  uint64_t v10 = sub_1E3E78820();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v1, 1, 1, v10);
  uint64_t v11 = sub_1E3E787B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  uint64_t v12 = sub_1E3E787A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  uint64_t v13 = sub_1E3E78810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  uint64_t v14 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  swift_bridgeObjectRetain();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1E3E5398C(MEMORY[0x1E4FBC860]);
  sub_1E3E5398C(v15);
  sub_1E3E539C8(v15);
  sub_1E3E53BBC(v15);
  sub_1E3E53BBC(v15);
  sub_1E3E53DF8(v15);
  sub_1E3E53E34(v15);
  sub_1E3E787F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E78CB0();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[26] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1E3E15F50;
  uint64_t v17 = v0[25];
  uint64_t v18 = v0[13];
  return MEMORY[0x1F4145690](v18, v17);
}

uint64_t sub_1E3E15F50()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3E1930C;
  }
  else {
    uint64_t v2 = sub_1E3E16064;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E16064()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  unint64_t v4 = sub_1E3E79390();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC78EC(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v0[9];
  uint64_t v9 = v15;
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x1E4E77720](v7, v4);
    }
    else {
      id v10 = *(id *)(v4 + 8 * v7 + 32);
    }
    ChannelEntity.init(mediaObject:)(v10, (void *)v0[10]);
    unint64_t v12 = *(void *)(v15 + 16);
    unint64_t v11 = *(void *)(v15 + 24);
    if (v12 >= v11 >> 1) {
      sub_1E3CC78EC(v11 > 1, v12 + 1, 1);
    }
    uint64_t v13 = v0[10];
    ++v7;
    *(void *)(v15 + 16) = v12 + 1;
    sub_1E3E190B8(v13, v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v12, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
  }
  while (v5 != v7);
  swift_bridgeObjectRelease();
LABEL_14:
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(v9);
}

uint64_t sub_1E3E162DC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_1E3E7A6E0();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_1E3E7A640();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7A6D0();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E164B4, 0, 0);
}

uint64_t sub_1E3E164B4()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  sub_1E3E7A650();
  sub_1E3E7A650();
  sub_1E3E7A6A0();
  sub_1E3E7A610();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = v4;
  v0[21] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v26 = v4;
  v4(v1, v2);
  uint64_t v5 = sub_1E3E7A6A0();
  os_signpost_type_t v6 = sub_1E3E7D760();
  if (sub_1E3E7DB50())
  {
    uint64_t v7 = v0[12];
    uint64_t v9 = v0[8];
    uint64_t v8 = v0[9];
    id v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    unint64_t v11 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v10(v7, v0[13], v9);
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v12 = 0;
    os_signpost_id_t v13 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v5, v6, v13, "LibraryAppIntentMediaAPIFetch", "", v12, 2u);
    MEMORY[0x1E4E79510](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    uint64_t v14 = v0[9];

    id v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    unint64_t v11 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v15 = v0[19];
  uint64_t v17 = v0[13];
  uint64_t v16 = v0[14];
  uint64_t v18 = v0[12];
  uint64_t v19 = v0[8];
  uint64_t v20 = v0[9];
  v0[22] = v10;
  v0[23] = v11;
  v10(v18, v17, v19);
  sub_1E3E7A720();
  swift_allocObject();
  v0[24] = sub_1E3E7A710();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v0[25] = v21;
  v0[26] = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v21(v17, v19);
  v26(v15, v16);
  int64_t v22 = (void *)swift_task_alloc();
  v0[27] = v22;
  *int64_t v22 = v0;
  v22[1] = sub_1E3E150D0;
  uint64_t v24 = v0[2];
  uint64_t v23 = v0[3];
  return sub_1E3E1580C(v24, v23);
}

void sub_1E3E16718(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v63 = a4;
  uint64_t v55 = a2;
  uint64_t v53 = sub_1E3E77D00();
  uint64_t v6 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ChannelEntity();
  uint64_t v66 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v57 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v54 = (uint64_t)&v50 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (uint64_t)&v50 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v65 = (uint64_t)&v50 - v15;
  uint64_t v16 = (char *)*a1;
  uint64_t v64 = *(void *)(*a1 + 16);
  if (v64)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_63;
    }
    while (1)
    {
      unint64_t v17 = 0;
      *a1 = (unint64_t)v16;
      uint64_t v18 = v63 & 0xFFFFFFFFFFFFFF8;
      if (v63 < 0) {
        uint64_t v18 = v63;
      }
      uint64_t v56 = v18;
      unint64_t v60 = v63 & 0xC000000000000001;
      uint64_t v61 = v63 + 56;
      uint64_t v51 = (void (**)(char *, uint64_t))(v6 + 8);
      unint64_t v19 = a3 + 56;
      unint64_t v58 = a3 + 56;
      unint64_t v59 = a3;
      while (v17 < *(void *)(*a1 + 16))
      {
        uint64_t v20 = v65;
        unint64_t v21 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
        uint64_t v22 = *(void *)(v66 + 72) * v17;
        uint64_t v16 = (char *)type metadata accessor for ChannelEntity;
        sub_1E3E18F9C(*a1 + v21 + v22, v65, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
        uint64_t v6 = *(void *)(v20 + 32);
        id v23 = (id)v6;
        sub_1E3E19004(v20, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
        if (v6)
        {
          sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE4AD0);
          if (v60)
          {
            uint64_t v16 = (char *)v23;
            uint64_t v6 = sub_1E3E7DD30();

            if (v6) {
              goto LABEL_14;
            }
          }
          else if (*(void *)(v63 + 16))
          {
            uint64_t v16 = (char *)v63;
            uint64_t v6 = (uint64_t)v23;
            uint64_t v33 = sub_1E3E7DA70();
            uint64_t v34 = -1 << v16[32];
            a3 = v33 & ~v34;
            if ((*(void *)(v61 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
            {
              uint64_t v16 = (char *)*(id *)(*(void *)(v63 + 48) + 8 * a3);
              uint64_t v6 = sub_1E3E7DA80();

              if (v6)
              {
LABEL_14:
                unint64_t v24 = *a1;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *a1 = v24;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  unint64_t v24 = sub_1E3E1299C(v24);
                  *a1 = v24;
                }
                if (v17 >= *(void *)(v24 + 16)) {
                  goto LABEL_59;
                }
                unint64_t v26 = (uint64_t *)(v24 + v21 + v22);
                uint64_t v6 = v26[4];
                if (v6
                  && (uint64_t v16 = (char *)v23,
                      id v27 = (id)v6,
                      uint64_t v6 = sub_1E3E7DA80(),
                      v27,
                      v16,
                      (v6 & 1) != 0))
                {
                  id v28 = objc_msgSend(v16, sel_URIRepresentation);
                  int64_t v29 = v52;
                  sub_1E3E77C90();

                  uint64_t v30 = sub_1E3E77C00();
                  uint64_t v32 = v31;
                  (*v51)(v29, v53);
                  swift_bridgeObjectRelease();
                  uint64_t *v26 = v30;
                  v26[1] = v32;
                  uint64_t v6 = *a1;

                  *a1 = v6;
                }
                else
                {

                  *a1 = v24;
                }
                unint64_t v19 = v58;
                a3 = v59;
                goto LABEL_9;
              }
              uint64_t v35 = ~v34;
              while (1)
              {
                a3 = (a3 + 1) & v35;
                if (((*(void *)(v61 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
                  break;
                }
                uint64_t v16 = (char *)*(id *)(*(void *)(v63 + 48) + 8 * a3);
                uint64_t v6 = sub_1E3E7DA80();

                if (v6) {
                  goto LABEL_14;
                }
              }
            }
          }

          unint64_t v19 = v58;
          a3 = v59;
        }
        if (v17 >= *(void *)(*a1 + 16)) {
          goto LABEL_57;
        }
        uint64_t v6 = (uint64_t)type metadata accessor for ChannelEntity;
        uint64_t v36 = v62;
        sub_1E3E18F9C(*a1 + v21 + v22, v62, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
        uint64_t v16 = *(char **)(v36 + 40);
        sub_1E3E19004(v36, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
        if (*(void *)(a3 + 16))
        {
          uint64_t v37 = sub_1E3E7E260();
          uint64_t v38 = -1 << *(unsigned char *)(a3 + 32);
          unint64_t v39 = v37 & ~v38;
          if ((*(void *)(v19 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39))
          {
            uint64_t v40 = *(void *)(a3 + 48);
            if (*(char **)(v40 + 8 * v39) == v16)
            {
LABEL_35:
              if (v17 >= *(void *)(*a1 + 16)) {
                goto LABEL_60;
              }
              uint64_t v42 = v54;
              sub_1E3E18F9C(*a1 + v21 + v22, v54, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
              uint64_t v6 = *(void *)(v42 + 40);
              sub_1E3E19004(v42, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
              uint64_t v16 = (char *)*a1;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v16 = (char *)sub_1E3E1299C((unint64_t)v16);
              }
              if (v17 >= *((void *)v16 + 2)) {
                goto LABEL_61;
              }
              uint64_t v43 = (uint64_t *)&v16[v21 + v22];
              if (v43[5] == v6)
              {
                uint64_t v67 = v6;
                sub_1E3C340DC();
                uint64_t v6 = sub_1E3E7DC90();
                uint64_t v45 = v44;
                swift_bridgeObjectRelease();
                *uint64_t v43 = v6;
                v43[1] = v45;
              }
LABEL_8:
              *a1 = (unint64_t)v16;
              goto LABEL_9;
            }
            uint64_t v41 = ~v38;
            while (1)
            {
              unint64_t v39 = (v39 + 1) & v41;
              if (((*(void *)(v19 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
                break;
              }
              if (*(char **)(v40 + 8 * v39) == v16) {
                goto LABEL_35;
              }
            }
          }
        }
        if (v17 >= *(void *)(*a1 + 16)) {
          goto LABEL_58;
        }
        uint64_t v16 = (char *)type metadata accessor for ChannelEntity;
        uint64_t v46 = v57;
        sub_1E3E18F9C(*a1 + v21 + v22, v57, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
        uint64_t v47 = *(void *)(v46 + 16);
        uint64_t v6 = *(void *)(v46 + 24);
        swift_bridgeObjectRetain();
        sub_1E3E19004(v46, (uint64_t (*)(void))type metadata accessor for ChannelEntity);
        if (v6)
        {
          if ((sub_1E3D34688(v47, v6, v55) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
          uint64_t v16 = (char *)*a1;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = (char *)sub_1E3E1299C((unint64_t)v16);
          }
          if (v17 >= *((void *)v16 + 2)) {
            goto LABEL_62;
          }
          int v48 = (uint64_t *)&v16[v21 + v22];
          uint64_t v49 = v48[3];
          if (v49 && (v48[2] == v47 && v49 == v6 || (sub_1E3E7E150() & 1) != 0))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t *v48 = v47;
            v48[1] = v6;
          }
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
LABEL_9:
        if (++v17 == v64) {
          return;
        }
      }
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      uint64_t v16 = (char *)sub_1E3E1299C((unint64_t)v16);
    }
  }
}

uint64_t sub_1E3E16E4C(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  v2[9] = *(void *)(type metadata accessor for ShowEntity(0) - 8);
  v2[10] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29578);
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273B0);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29580);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273C0);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29590);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273D0);
  v2[19] = swift_task_alloc();
  uint64_t v4 = sub_1E3E78770();
  v2[20] = v4;
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_1E3E78800();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E17140, 0, 0);
}

uint64_t sub_1E3E17140()
{
  (*(void (**)(void, void, void))(v0[21] + 104))(v0[22], *MEMORY[0x1E4F91600], v0[20]);
  if (qword_1EAE24540 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = sub_1E3E78790();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EAE292E8);
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v8, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v7);
  uint64_t v10 = sub_1E3E78820();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v1, 1, 1, v10);
  uint64_t v11 = sub_1E3E787B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  uint64_t v12 = sub_1E3E787A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  uint64_t v13 = sub_1E3E78810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  uint64_t v14 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  swift_bridgeObjectRetain();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1E3E5398C(MEMORY[0x1E4FBC860]);
  sub_1E3E5398C(v15);
  sub_1E3E539C8(v15);
  sub_1E3E53BBC(v15);
  sub_1E3E53BBC(v15);
  sub_1E3E53DF8(v15);
  sub_1E3E53E34(v15);
  sub_1E3E787F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_1E3E78CC0();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[26] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1E3E17590;
  uint64_t v17 = v0[25];
  uint64_t v18 = v0[13];
  return MEMORY[0x1F4145690](v18, v17);
}

uint64_t sub_1E3E17590()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3E1791C;
  }
  else {
    uint64_t v2 = sub_1E3E176A4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E176A4()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  unint64_t v4 = sub_1E3E79390();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1E3CC7928(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v0[9];
  uint64_t v9 = v15;
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x1E4E77720](v7, v4);
    }
    else {
      id v10 = *(id *)(v4 + 8 * v7 + 32);
    }
    ShowEntity.init(mediaObject:)(v10, (void *)v0[10]);
    unint64_t v12 = *(void *)(v15 + 16);
    unint64_t v11 = *(void *)(v15 + 24);
    if (v12 >= v11 >> 1) {
      sub_1E3CC7928(v11 > 1, v12 + 1, 1);
    }
    uint64_t v13 = v0[10];
    ++v7;
    *(void *)(v15 + 16) = v12 + 1;
    sub_1E3E190B8(v13, v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v12, type metadata accessor for ShowEntity);
  }
  while (v5 != v7);
  swift_bridgeObjectRelease();
LABEL_14:
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(v9);
}

uint64_t sub_1E3E1791C()
{
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3E17A28(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_1E3E7A6E0();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_1E3E7A640();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_1E3E7A6D0();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E17C00, 0, 0);
}

uint64_t sub_1E3E17C00()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  sub_1E3E7A650();
  sub_1E3E7A650();
  sub_1E3E7A6A0();
  sub_1E3E7A610();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[20] = v4;
  v0[21] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v26 = v4;
  v4(v1, v2);
  uint64_t v5 = sub_1E3E7A6A0();
  os_signpost_type_t v6 = sub_1E3E7D760();
  if (sub_1E3E7DB50())
  {
    uint64_t v7 = v0[12];
    uint64_t v9 = v0[8];
    uint64_t v8 = v0[9];
    id v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    unint64_t v11 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v10(v7, v0[13], v9);
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v12 = 0;
    os_signpost_id_t v13 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v5, v6, v13, "LibraryAppIntentMediaAPIFetch", "", v12, 2u);
    MEMORY[0x1E4E79510](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    uint64_t v14 = v0[9];

    id v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    unint64_t v11 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v15 = v0[19];
  uint64_t v17 = v0[13];
  uint64_t v16 = v0[14];
  uint64_t v18 = v0[12];
  uint64_t v19 = v0[8];
  uint64_t v20 = v0[9];
  v0[22] = v10;
  v0[23] = v11;
  v10(v18, v17, v19);
  sub_1E3E7A720();
  swift_allocObject();
  v0[24] = sub_1E3E7A710();
  unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v0[25] = v21;
  v0[26] = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v21(v17, v19);
  v26(v15, v16);
  uint64_t v22 = (void *)swift_task_alloc();
  v0[27] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1E3E17E64;
  uint64_t v24 = v0[2];
  uint64_t v23 = v0[3];
  return sub_1E3E16E4C(v24, v23);
}

uint64_t sub_1E3E17E64(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 224) = a1;
  *(void *)(v3 + 232) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1E3E18220;
  }
  else {
    uint64_t v4 = sub_1E3E17F78;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E17F78()
{
  sub_1E3E7A650();
  uint64_t v1 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  os_signpost_type_t v2 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 40);
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 32));
      uint64_t v6 = "SUCCESS";
    }
    os_signpost_id_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    uint64_t v22 = *(void *)(v0 + 136);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 176))(v14, v15, v16);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    os_signpost_id_t v18 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v1, v2, v18, "LibraryAppIntentMediaAPIFetch", v6, v17, 2u);
    MEMORY[0x1E4E79510](v17, -1, -1);

    v13(v15, v16);
    v23(v22, v21);
    swift_release();
    v13(v14, v16);
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 64);

    v7(v11, v12);
    v8(v9, v10);
    swift_release();
  }
  uint64_t v24 = *(void *)(v0 + 224);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v19(v24);
}

uint64_t sub_1E3E18220()
{
  uint64_t v1 = (uint64_t *)(v0 + 128);
  os_signpost_type_t v2 = (void *)(v0 + 80);
  sub_1E3E7A650();
  uint64_t v3 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  os_signpost_type_t v4 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    os_signpost_type_t v26 = v4;
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v7 = *(void *)(v0 + 32);
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v6, v7) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
      uint64_t v8 = "FAILURE";
    }
    format = (char *)v8;
    uint64_t v10 = (void (**)(uint64_t, uint64_t))(v0 + 200);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    uint64_t v24 = *(void *)(v0 + 80);
    uint64_t v11 = (uint64_t *)(v0 + 64);
    uint64_t v13 = *(void *)(v0 + 64);
    (*(void (**)(void))(v0 + 176))(*(void *)(v0 + 96));
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v3, v26, v15, "LibraryAppIntentMediaAPIFetch", format, v14, 2u);
    MEMORY[0x1E4E79510](v14, -1, -1);

    v25(v24, v13);
    uint64_t v9 = (void (**)(void, void))(v0 + 160);
    uint64_t v12 = 112;
    os_signpost_type_t v2 = (void *)(v0 + 128);
    uint64_t v1 = (uint64_t *)(v0 + 96);
  }
  else
  {

    uint64_t v9 = (void (**)(void, void))(v0 + 200);
    uint64_t v10 = (void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v11 = (uint64_t *)(v0 + 112);
    uint64_t v12 = 64;
  }
  uint64_t v16 = *v1;
  uint64_t v17 = *v11;
  os_signpost_id_t v18 = *v10;
  uint64_t v19 = *(void **)(v0 + 232);
  (*v9)(*v2, *(void *)(v0 + v12));
  v18(v16, v17);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  return v20(v21);
}

void sub_1E3E184EC(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void, double), uint64_t (*a6)(uint64_t *), uint64_t (*a7)(void))
{
  unint64_t v58 = a6;
  uint64_t v72 = a4;
  uint64_t v63 = a2;
  uint64_t v61 = sub_1E3E77D00();
  uint64_t v11 = *(void *)(v61 - 8);
  double v12 = MEMORY[0x1F4188790](v61);
  unint64_t v60 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a5(0, v12);
  uint64_t v75 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v65 = (uint64_t)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v62 = (uint64_t)&v58 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v70 = (uint64_t)&v58 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v74 = (uint64_t)&v58 - v21;
  uint64_t v22 = *a1;
  uint64_t v73 = *(void *)(*a1 + 16);
  if (v73)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_62;
    }
    while (1)
    {
      unint64_t v23 = 0;
      *a1 = v22;
      uint64_t v24 = v72 & 0xFFFFFFFFFFFFFF8;
      if (v72 < 0) {
        uint64_t v24 = v72;
      }
      uint64_t v64 = v24;
      unint64_t v67 = v72 & 0xC000000000000001;
      uint64_t v68 = v72 + 56;
      unint64_t v59 = (void (**)(uint64_t, uint64_t))(v11 + 8);
      unint64_t v66 = a3;
      uint64_t v71 = (uint64_t **)a1;
      unint64_t v69 = a3 + 56;
      while (v23 < *(void *)(*a1 + 16))
      {
        uint64_t v22 = v74;
        unint64_t v25 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        unint64_t v26 = *(void *)(v75 + 72) * v23;
        sub_1E3E18F9C(*a1 + v25 + v26, v74, a7);
        uint64_t v11 = *(void *)(v22 + 16);
        id v27 = (id)v11;
        sub_1E3E19004(v22, a7);
        if (v11)
        {
          uint64_t v22 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE4AD0);
          if (v67)
          {
            uint64_t v11 = (uint64_t)v27;
            char v28 = sub_1E3E7DD30();

            if (v28) {
              goto LABEL_12;
            }
          }
          else if (*(void *)(v72 + 16))
          {
            uint64_t v37 = v72;
            uint64_t v11 = (uint64_t)v27;
            uint64_t v38 = sub_1E3E7DA70();
            uint64_t v39 = -1 << *(unsigned char *)(v37 + 32);
            a3 = v38 & ~v39;
            if ((*(void *)(v68 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
            {
              id v40 = *(id *)(*(void *)(v72 + 48) + 8 * a3);
              uint64_t v11 = sub_1E3E7DA80();

              if (v11)
              {
LABEL_12:
                uint64_t v11 = (uint64_t)v71;
                a1 = *v71;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(void *)uint64_t v11 = a1;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  a1 = (uint64_t *)v58(a1);
                  *uint64_t v71 = a1;
                }
                if (v23 >= a1[2]) {
                  goto LABEL_58;
                }
                uint64_t v30 = (uint64_t *)((char *)a1 + v25 + v26);
                uint64_t v11 = v30[2];
                if (v11
                  && (id v31 = v27,
                      id v32 = (id)v11,
                      uint64_t v11 = sub_1E3E7DA80(),
                      v32,
                      v31,
                      (v11 & 1) != 0))
                {
                  id v33 = objc_msgSend(v31, sel_URIRepresentation);
                  uint64_t v22 = (uint64_t)v60;
                  sub_1E3E77C90();

                  uint64_t v34 = sub_1E3E77C00();
                  uint64_t v36 = v35;
                  (*v59)(v22, v61);
                  swift_bridgeObjectRelease();
                  *uint64_t v30 = v34;
                  v30[1] = v36;
                  a1 = (uint64_t *)v71;
                  uint64_t v11 = (uint64_t)*v71;

                  *a1 = v11;
                }
                else
                {

                  uint64_t v57 = (uint64_t *)v71;
                  *uint64_t v71 = a1;
                  a1 = v57;
                }
                a3 = v66;
                goto LABEL_7;
              }
              uint64_t v41 = ~v39;
              while (1)
              {
                a3 = (a3 + 1) & v41;
                if (((*(void *)(v68 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
                  break;
                }
                id v42 = *(id *)(*(void *)(v72 + 48) + 8 * a3);
                uint64_t v11 = sub_1E3E7DA80();

                if (v11) {
                  goto LABEL_12;
                }
              }
            }
          }

          a3 = v66;
          a1 = (uint64_t *)v71;
        }
        unint64_t v43 = v69;
        if (v23 >= *(void *)(*a1 + 16)) {
          goto LABEL_56;
        }
        uint64_t v22 = v70;
        sub_1E3E18F9C(*a1 + v25 + v26, v70, a7);
        uint64_t v11 = *(void *)(v22 + 40);
        sub_1E3E19004(v22, a7);
        if (!*(void *)(a3 + 16)) {
          goto LABEL_39;
        }
        uint64_t v44 = sub_1E3E7E260();
        uint64_t v45 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v46 = v44 & ~v45;
        if (((*(void *)(v43 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
          goto LABEL_39;
        }
        uint64_t v47 = *(void *)(a3 + 48);
        if (*(void *)(v47 + 8 * v46) != v11)
        {
          uint64_t v48 = ~v45;
          while (1)
          {
            unint64_t v46 = (v46 + 1) & v48;
            if (((*(void *)(v43 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
              break;
            }
            if (*(void *)(v47 + 8 * v46) == v11) {
              goto LABEL_33;
            }
          }
LABEL_39:
          if (v23 >= *(void *)(*a1 + 16)) {
            goto LABEL_57;
          }
          uint64_t v53 = v65;
          sub_1E3E18F9C(*a1 + v25 + v26, v65, a7);
          uint64_t v22 = *(void *)(v53 + 24);
          uint64_t v11 = *(void *)(v53 + 32);
          swift_bridgeObjectRetain();
          sub_1E3E19004(v53, a7);
          if (v11)
          {
            if (sub_1E3D34688(v22, v11, v63))
            {
              uint64_t v54 = *a1;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v54 = v58((uint64_t *)v54);
              }
              if (v23 >= *(void *)(v54 + 16)) {
                goto LABEL_61;
              }
              uint64_t v55 = (uint64_t *)(v54 + v25 + v26);
              uint64_t v56 = v55[4];
              if (v56 && (v55[3] == v22 && v56 == v11 || (sub_1E3E7E150() & 1) != 0))
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *uint64_t v55 = v22;
                v55[1] = v11;
              }
              swift_bridgeObjectRelease();
              *a1 = v54;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          goto LABEL_7;
        }
LABEL_33:
        if (v23 >= *(void *)(*a1 + 16)) {
          goto LABEL_59;
        }
        uint64_t v49 = v62;
        sub_1E3E18F9C(*a1 + v25 + v26, v62, a7);
        uint64_t v11 = *(void *)(v49 + 40);
        sub_1E3E19004(v49, a7);
        uint64_t v22 = *a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = v58((uint64_t *)v22);
        }
        if (v23 >= *(void *)(v22 + 16)) {
          goto LABEL_60;
        }
        uint64_t v50 = (uint64_t *)(v22 + v25 + v26);
        if (v50[5] == v11)
        {
          uint64_t v76 = v11;
          sub_1E3C340DC();
          uint64_t v11 = sub_1E3E7DC90();
          uint64_t v52 = v51;
          swift_bridgeObjectRelease();
          *uint64_t v50 = v11;
          v50[1] = v52;
        }
        *a1 = v22;
LABEL_7:
        if (++v23 == v73) {
          return;
        }
      }
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      uint64_t v22 = v58((uint64_t *)v22);
    }
  }
}

uint64_t sub_1E3E18C2C()
{
  return 16;
}

__n128 sub_1E3E18C38(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1E3E18C44()
{
  unint64_t result = qword_1EAE29550;
  if (!qword_1EAE29550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29550);
  }
  return result;
}

uint64_t sub_1E3E18C9C()
{
  return 16;
}

__n128 sub_1E3E18CA8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1E3E18CB4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3E18D04()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E18D44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E1914C((uint64_t (*)(void, void))sub_1E3E117EC, a1);
}

uint64_t sub_1E3E18D70(uint64_t a1)
{
  return sub_1E3E0CC54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t *)&unk_1EAE295B0);
}

uint64_t sub_1E3E18DB0()
{
  return objectdestroy_36Tm((uint64_t *)&unk_1EAE295B0);
}

uint64_t sub_1E3E18DBC(uint64_t a1, void *a2)
{
  return sub_1E3E1927C(a1, a2, (uint64_t *)&unk_1EAE295B0, MEMORY[0x1E4F91768]);
}

unint64_t sub_1E3E18DDC()
{
  unint64_t result = qword_1EAE29740[0];
  if (!qword_1EAE29740[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE29740);
  }
  return result;
}

uint64_t sub_1E3E18E30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3E129C4(a1, *(uint64_t **)(v2 + 16), &qword_1EAE24518, a2);
}

unint64_t sub_1E3E18E70()
{
  unint64_t result = qword_1EAE295D8;
  if (!qword_1EAE295D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAE295D8);
  }
  return result;
}

uint64_t sub_1E3E18EC4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E1914C((uint64_t (*)(void, void))sub_1E3E115AC, a1);
}

uint64_t sub_1E3E18EF0(uint64_t a1)
{
  return sub_1E3E0CC54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), &qword_1EAE29618);
}

uint64_t sub_1E3E18F30()
{
  return objectdestroy_36Tm(&qword_1EAE29618);
}

uint64_t sub_1E3E18F3C(uint64_t a1, void *a2)
{
  return sub_1E3E1927C(a1, a2, &qword_1EAE29618, MEMORY[0x1E4F91760]);
}

uint64_t sub_1E3E18F5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3E129C4(a1, *(uint64_t **)(v2 + 16), &qword_1EAE24550, a2);
}

uint64_t sub_1E3E18F9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3E19004(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1E3E19064()
{
  unint64_t result = qword_1EAE29638;
  if (!qword_1EAE29638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAE29638);
  }
  return result;
}

uint64_t sub_1E3E190B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E3E19120@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E1914C((uint64_t (*)(void, void))sub_1E3E1136C, a1);
}

uint64_t sub_1E3E1914C@<X0>(uint64_t (*a1)(void, void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1(*(void *)(v2 + 16), *(void *)(v2 + 24));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1E3E19184(uint64_t a1)
{
  return sub_1E3E0CC54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), &qword_1EAE29668);
}

uint64_t sub_1E3E191C4()
{
  return objectdestroy_36Tm(&qword_1EAE29668);
}

uint64_t objectdestroy_36Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t sub_1E3E1925C(uint64_t a1, void *a2)
{
  return sub_1E3E1927C(a1, a2, &qword_1EAE29668, MEMORY[0x1E4F91B50]);
}

uint64_t sub_1E3E1927C(uint64_t a1, void *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  return sub_1E3E0CD98(a1, a2, *(void *)(v4 + 16), v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a4, a3);
}

id sub_1E3E19334()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E772F0();
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v0 = objc_msgSend(v2, sel_privateQueueContext);
  swift_unknownObjectRelease();
  return v0;
}

id LocalLibraryEntityQuery.managedObjectContext.getter(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v4 = objc_msgSend(v6, sel_privateQueueContext);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t LocalLibraryEntityQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[3] = a2;
  uint64_t v8 = (void *)swift_task_alloc();
  v4[6] = v8;
  void *v8 = v4;
  v8[1] = sub_1E3E1954C;
  v8[5] = a3;
  v8[6] = v3;
  v8[3] = a1;
  v8[4] = a2;
  return MEMORY[0x1F4188298](sub_1E3E1994C, 0, 0);
}

uint64_t sub_1E3E1954C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v2;
  id v6 = (void *)*v2;
  v5[7] = a1;
  v5[8] = a2;
  swift_task_dealloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[9] = v7;
  void *v7 = v6;
  v7[1] = sub_1E3E196D0;
  uint64_t v8 = v5[4];
  uint64_t v9 = v5[3];
  return sub_1E3E19A64(a1, a2, v9, v8);
}

uint64_t sub_1E3E196D0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v4 = sub_1E3DEE6BC;
  }
  else
  {
    id v4 = sub_1E3E197F4;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E197F4()
{
  v0[2] = v0[10];
  uint64_t v1 = v0[11];
  sub_1E3E7D270();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[8];
    uint64_t v6 = v0[3];
    uint64_t v5 = v0[4];
    uint64_t v7 = sub_1E3C50B14(v0[7]);
    swift_bridgeObjectRelease();
    sub_1E3E1C1D4(v0 + 2, v4, v7, v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v0[2];
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
}

uint64_t sub_1E3E19928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1E3E1994C, 0, 0);
}

uint64_t sub_1E3E1994C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v3 + 32) = v1;
  sub_1E3E0A7D8((void (*)(long long *__return_ptr, void *))sub_1E3E1C634, v3, v2);
  swift_task_dealloc();
  sub_1E3E7D0A0();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1E3C504EC(v6);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v8(v5, v7);
}

uint64_t sub_1E3E19A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  uint64_t v6 = sub_1E3E7A880();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E19B2C, 0, 0);
}

uint64_t sub_1E3E19B2C()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[11];
  v0[5] = v0[10];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = v3(v2, v1);
  v0[17] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[18] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1E3E19C14;
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[11];
  uint64_t v9 = v0[9];
  return sub_1E3E1A2E4(v9, v7, v4, v8, v6);
}

uint64_t sub_1E3E19C14(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1E3E1A0EC;
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1E3E19D3C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E19D3C()
{
  char v28 = v0;
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  v0[6] = v0[19];
  uint64_t v3 = (void *)swift_task_alloc();
  *uint64_t v3 = v2;
  v3[1] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = KeyPath;
  swift_getAssociatedTypeWitness();
  sub_1E3E7D110();
  swift_getWitnessTable();
  uint64_t v6 = sub_1E3E7CFB0();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = v0[5];
  if (*(void *)(v7 + 16) && (uint64_t v8 = *(void *)(v6 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(v6 + 40);
    do
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      swift_bridgeObjectRetain();
      sub_1E3E12180(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
    uint64_t v7 = v0[5];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[7] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE06C0);
  sub_1E3DF1F28();
  if (sub_1E3E7D3C0())
  {
    sub_1E3E7A740();
    double v12 = sub_1E3E7A860();
    os_log_type_t v13 = sub_1E3E7D4E0();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[16];
    uint64_t v17 = v0[14];
    if (v14)
    {
      uint64_t v26 = v0[16];
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v27 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1E3E7D320();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      v0[8] = sub_1E3C150B8(v20, v22, &v27);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v12, v13, "Failed to find requested local episodes with identifiers: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v19, -1, -1);
      MEMORY[0x1E4E79510](v18, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v17);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v23 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v24 = v0[19];
  return v23(v24);
}

uint64_t sub_1E3E1A0EC()
{
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1E3E1A168(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1E3E79AD0();
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1E3E7A510();
  if (v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1E3E7A500();
  }
  else
  {
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
  }
  if (sub_1E3E7A520())
  {
    os_log_type_t v13 = sub_1E3D32170(v9, v8, v10);
    if (v13)
    {
      uint64_t v12 = (uint64_t)v13;
      uint64_t v8 = 0;
      char v14 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      char v14 = 2;
      uint64_t v12 = v9;
    }
  }
  else
  {
    uint64_t v8 = 0;
    char v14 = 0;
  }
  swift_bridgeObjectRelease();

  *(void *)a4 = v12;
  *(void *)(a4 + 8) = v8;
  *(unsigned char *)(a4 + 16) = v14;
}

uint64_t sub_1E3E1A2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = sub_1E3E7D8E0();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E1A3AC, 0, 0);
}

uint64_t sub_1E3E1A3AC()
{
  uint64_t v1 = v0;
  uint64_t v17 = v0[11];
  uint64_t v18 = v0 + 2;
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[6];
  uint64_t v16 = (void *)v0[5];
  uint64_t v4 = v0[4];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE296B0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1E3E79AD0();
  swift_getAssociatedTypeWitness();
  id v5 = sub_1E3E1CACC();
  v0[12] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1E3E89CC0;
  sub_1E3C12B10(0, &qword_1EBFDEE40);
  *(void *)(v6 + 32) = sub_1E3E7D580();
  *(void *)(v6 + 40) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, v3, v2);
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EBFDEE38);
  uint64_t v7 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v7);

  objc_msgSend(v5, sel_setPredicate_, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v1[13] = v9;
  v9[2] = v3;
  v9[3] = v2;
  v9[4] = v16;
  v9[5] = v5;
  uint64_t v10 = sub_1E3E7D110();
  sub_1E3E1C658(v17);
  id v11 = v16;
  id v12 = v5;
  os_log_type_t v13 = (void *)swift_task_alloc();
  v1[14] = v13;
  *os_log_type_t v13 = v1;
  v13[1] = sub_1E3E1A698;
  uint64_t v14 = v1[11];
  return MEMORY[0x1F40D7080](v18, v14, sub_1E3E1C5A8, v9, v10);
}

uint64_t sub_1E3E1A698()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 72);
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    id v5 = sub_1E3E1A8A0;
  }
  else {
    id v5 = sub_1E3E1A82C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E1A82C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3E1A8A0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E1A90C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_1E3E7D900();
  if (!v3)
  {
    v14[7] = result;
    uint64_t v8 = swift_checkMetadataState();
    MEMORY[0x1F4188790](v8);
    v14[2] = a1;
    v14[3] = a2;
    v14[4] = v9;
    uint64_t v10 = sub_1E3E7D110();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v13 = sub_1E3E1C6CC((void (*)(char *, char *))sub_1E3E1C5C8, (uint64_t)v14, v10, v8, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v12);
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v13;
  }
  return result;
}

uint64_t sub_1E3E1AAAC(void **a1)
{
  uint64_t v1 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  id v2 = v1;
  return sub_1E3E79AF0();
}

uint64_t LocalLibraryEntityQuery.fetchEntities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_1E3E7D1E0();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E1AC1C, 0, 0);
}

uint64_t sub_1E3E1AC1C()
{
  v0[10] = (*(uint64_t (**)(void))(v0[5] + 32))(v0[4]);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  id v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *id v2 = v0;
  v2[1] = sub_1E3E1ACFC;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3E1ACFC()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1E3E1B304;
  }
  else
  {
    swift_release();
    id v2 = sub_1E3E1AE18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E1AE18()
{
  v0[13] = v0[2];
  uint64_t ObjectType = swift_getObjectType();
  sub_1E3C17C5C();
  id v2 = (void *)swift_task_alloc();
  v0[14] = v2;
  *id v2 = v0;
  v2[1] = sub_1E3E1AEE0;
  uint64_t v3 = v0[9];
  return MEMORY[0x1F4145A40](v3, ObjectType);
}

uint64_t sub_1E3E1AEE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1E3E1B05C, 0, 0);
}

uint64_t sub_1E3E1B05C()
{
  uint64_t v1 = sub_1E3E7D0A0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v0[16] = v1;
  v0[17] = v2;
  v0[18] = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1E3C504EC(v5);
  v0[19] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[20] = v7;
  void *v7 = v0;
  v7[1] = sub_1E3E1B13C;
  uint64_t v8 = v0[15];
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[4];
  return sub_1E3E1A2E4(v3, v6, v8, v10, v9);
}

uint64_t sub_1E3E1B13C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3E1B370;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_1E3E1B290;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E1B290()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 176);
  return v1(v2);
}

uint64_t sub_1E3E1B304()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E1B370()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t LocalLibraryEntityQuery.artworkData(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = sub_1E3E7A880();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = sub_1E3E78E70();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  v4[19] = swift_task_alloc();
  uint64_t v7 = sub_1E3E78740();
  v4[20] = v7;
  v4[21] = *(void *)(v7 - 8);
  v4[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E1B5C4, 0, 0);
}

uint64_t sub_1E3E1B5C4()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  sub_1E3C719E0(v0[8], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1E3C71A48(v0[19]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void, unint64_t))v0[1];
    return v4(0, 0xF000000000000000);
  }
  else
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = v0[9];
    sub_1E3C71AA8(v0[19], v0[22]);
    v0[23] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v7, v6);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[24] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1E3E1B76C;
    return MEMORY[0x1F4127FF8](v0 + 2, v8, v8);
  }
}

uint64_t sub_1E3E1B76C()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1E3E1C0D4;
  }
  else {
    uint64_t v2 = sub_1E3E1B89C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E1B89C()
{
  ArtworkModel.preferredRequest.getter(v0[18]);
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[26] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1E3E1B96C;
  uint64_t v4 = v0[18];
  return ImageProvider.data(for:)(v4, v1, v2);
}

uint64_t sub_1E3E1B96C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

    uint64_t v7 = sub_1E3E1BB80;
  }
  else
  {
    *(void *)(v6 + 216) = a2;
    *(void *)(v6 + 224) = a1;
    uint64_t v7 = sub_1E3E1BAA4;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3E1BAA4()
{
  uint64_t v1 = v0[22];
  (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[15]);
  sub_1E3C2CBF8(v1);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[28];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v3, v2);
}

uint64_t sub_1E3E1BB80()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  sub_1E3E78D20();
  double v4 = v3;
  double v6 = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[29] = v7;
  void *v7 = v0;
  v7[1] = sub_1E3E1BC58;
  return ImageProvider.placeholderData(with:)(v1, v2, v4, v6);
}

uint64_t sub_1E3E1BC58(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

    uint64_t v7 = sub_1E3E1BE6C;
  }
  else
  {
    *(void *)(v6 + 240) = a2;
    *(void *)(v6 + 248) = a1;
    uint64_t v7 = sub_1E3E1BD90;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1E3E1BD90()
{
  uint64_t v1 = v0[22];
  (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[15]);
  sub_1E3C2CBF8(v1);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v3, v2);
}

uint64_t sub_1E3E1BE6C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  sub_1E3E7A740();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  double v5 = sub_1E3E7A860();
  os_log_type_t v6 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = v0[16];
    uint64_t v7 = v0[17];
    uint64_t v21 = v0[15];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    uint64_t v11 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
    v0[7] = v11;
    sub_1E3E7DBD0();
    *uint64_t v10 = v11;
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v12(v7, v21);
    _os_log_impl(&dword_1E3BC5000, v5, v6, "Episode entity was unable to prepare artwork or placeholder for %@.", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v10, -1, -1);
    MEMORY[0x1E4E79510](v9, -1, -1);
  }
  else
  {
    uint64_t v14 = v0[16];
    uint64_t v13 = v0[17];
    uint64_t v15 = v0[15];

    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v12(v13, v15);
  }
  uint64_t v16 = v0[22];
  uint64_t v17 = v0[18];
  uint64_t v18 = v0[15];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  v12(v17, v18);
  sub_1E3C2CBF8(v16);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void, unint64_t))v0[1];
  return v19(0, 0xF000000000000000);
}

uint64_t sub_1E3E1C0D4()
{
  sub_1E3C2CBF8(*(void *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E1C180(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

void sub_1E3E1C1D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a3;
  uint64_t v25 = a2;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v29 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = *a1;
  id v32 = a1;
  uint64_t v33 = v11;
  uint64_t v12 = sub_1E3E7D110();
  swift_getWitnessTable();
  uint64_t v26 = v12;
  sub_1E3E7D3A0();
  unint64_t v13 = v34;
  int64_t v14 = v35;
  if (v34 != v35)
  {
    if (v35 < v34)
    {
      __break(1u);
    }
    else if (v34 < v35)
    {
      uint64_t v15 = (void (**)(char *, uint64_t))(v27 + 8);
      while (1)
      {
        sub_1E3E7D120();
        swift_getAssociatedConformanceWitness();
        uint64_t v16 = (void *)sub_1E3E79B20();
        uint64_t v17 = *v15;
        (*v15)(v10, AssociatedTypeWitness);
        if (!v16) {
          goto LABEL_12;
        }
        if ((sub_1E3D348B0(v16, v28) & 1) == 0) {
          break;
        }
        uint64_t v18 = v32;
        sub_1E3E7D0D0();
        sub_1E3E1C180(v13, *v18);
        _swift_isClassOrObjCExistentialType();
        sub_1E3E79B10();

LABEL_7:
        if (v14 == ++v13) {
          return;
        }
      }

LABEL_12:
      uint64_t v19 = v29;
      sub_1E3E7D120();
      uint64_t v20 = sub_1E3E79AE0();
      uint64_t v22 = v21;
      v17(v19, AssociatedTypeWitness);
      if (v22)
      {
        if (sub_1E3D34688(v20, v22, v25))
        {
          unint64_t v23 = v32;
          sub_1E3E7D0D0();
          sub_1E3E1C180(v13, *v23);
          _swift_isClassOrObjCExistentialType();
          sub_1E3E79B00();
        }
        swift_bridgeObjectRelease();
      }
      goto LABEL_7;
    }
    __break(1u);
  }
}

uint64_t dispatch thunk of LocalLibraryEntityQuery.objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of LocalLibraryEntityQuery.managedObjectContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of LocalLibraryEntityQuery.predicate(forUuids:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1E3E1C568()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E1C5A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E1A90C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1E3E1C5C8(void **a1)
{
  return sub_1E3E1AAAC(a1);
}

uint64_t sub_1E3E1C5F0()
{
  return 16;
}

__n128 sub_1E3E1C5FC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1E3E1C608()
{
  return swift_getAtKeyPath();
}

void sub_1E3E1C634(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1E3E1A168(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1E3E1C658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F1BD78];
  uint64_t v3 = sub_1E3E7D8E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1E3E1C6CC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  id v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x1F4188790](v12);
  int64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1E3E7D3E0();
  if (!v18) {
    return sub_1E3E7D0E0();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1E3E7DEF0();
  uint64_t v32 = sub_1E3E7DF00();
  sub_1E3E7DEA0();
  uint64_t v36 = v8;
  uint64_t result = sub_1E3E7D3B0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    int64_t v34 = (void (**)(char *))(v33 + 2);
    int64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1E3E7D420();
      uint64_t v22 = v11;
      unint64_t v23 = v11;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1E3E7DEE0();
      sub_1E3E7D400();
      --v19;
      uint64_t v11 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

id sub_1E3E1CACC()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1E3E20BF0();
}

uint64_t LibraryEntityQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = sub_1E3E78790();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E1CBE0, 0, 0);
}

uint64_t sub_1E3E1CBE0()
{
  uint64_t v1 = v0;
  uint64_t v15 = v0 + 2;
  uint64_t v2 = v0[10];
  uint64_t v4 = v1[8];
  uint64_t v3 = v1[9];
  uint64_t v6 = v1[6];
  uint64_t v5 = v1[7];
  v1[11] = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1E3E79480();
  uint64_t v7 = sub_1E3E78780();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2910);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E3E86660;
  swift_bridgeObjectRetain();
  *(void *)(v8 + 32) = sub_1E3E790A0();
  id v9 = objc_allocWithZone((Class)sub_1E3E78C50());
  uint64_t v10 = sub_1E3E78C30();
  v1[12] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v1[13] = v11;
  v11[2] = v6;
  v11[3] = v5;
  v11[4] = v10;
  v11[5] = v7;
  uint64_t v12 = (void *)swift_task_alloc();
  v1[14] = v12;
  swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1E3E7D110();
  v1[15] = v13;
  *uint64_t v12 = v1;
  v12[1] = sub_1E3E1CE1C;
  return MEMORY[0x1F4188160](v15, 0, 0, 0xD000000000000013, 0x80000001E3EA3320, sub_1E3E1D8BC, v11, v13);
}

uint64_t sub_1E3E1CE1C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1E3E1D2A4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1E3E1CF38;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E1CF38()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 88);
  *(void *)(v0 + 24) = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1E3E1C6CC((void (*)(char *, char *))sub_1E3E1DBCC, v3, v1, v2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  *(void *)(v0 + 136) = v6;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v7;
  void *v7 = v0;
  v7[1] = sub_1E3E1D078;
  return sub_1E3E1D078(v6);
}

uint64_t sub_1E3E1D078(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3E1D230;
  }
  else
  {
    *(void *)(v4 + 160) = a1;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1E3E1D1B4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E1D1B4()
{
  uint64_t v1 = (void *)v0[12];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[20];
  return v2(v3);
}

uint64_t sub_1E3E1D230()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3E1D2A4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t LibraryEntityQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1E3E1D33C, 0, 0);
}

uint64_t sub_1E3E1D33C()
{
  uint64_t v1 = sub_1E3E1DBEC(v0[3], v0[4], v0[5]);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v0[7] = v1;
  v0[8] = v2;
  v0[9] = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[10] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1E3E1D404;
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[4];
  return LibraryEntityQuery.findAndPrepareEntities(for:adamIDs:uuids:)(v1, v5, v3, v8, v7);
}

uint64_t sub_1E3E1D404(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1E3C68E78;
  }
  else
  {
    *(void *)(v4 + 96) = a1;
    uint64_t v5 = sub_1E3E1D544;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E1D544()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  unint64_t v3 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  v0[2] = v0[12];
  uint64_t v6 = sub_1E3C50B14(v3);
  swift_bridgeObjectRelease();
  sub_1E3E222A0(v0 + 2, v1, v2, v6, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0[2];
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v7);
}

id LibraryEntityQuery.managedObjectContext.getter(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  swift_release();
  id v4 = objc_msgSend(v6, sel_privateQueueContext);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1E3E1D6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1E3E7D110();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6400);
  uint64_t v9 = sub_1E3E7D160();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v17 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v17 - v12, a1, v9, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a4;
  *((void *)v15 + 3) = a5;
  *((void *)v15 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v15[v14], v13, v9);
  sub_1E3E78C40();
  return swift_release();
}

uint64_t sub_1E3E1D8BC(uint64_t a1)
{
  return sub_1E3E1D6D4(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1E3E1D8C8(uint64_t a1, id a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_itemsFor_, a3);
    sub_1E3E7D060();

    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    uint64_t v5 = sub_1E3E7E040();
    swift_bridgeObjectRelease();
    if (v5)
    {
      sub_1E3E7D110();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6400);
      sub_1E3E7D160();
      sub_1E3E7D150();
      return swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  if (a2)
  {
    id v7 = a2;
  }
  else
  {
    sub_1E3E18DDC();
    swift_allocError();
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1E3E7D110();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6400);
  sub_1E3E7D160();
  return sub_1E3E7D140();
}

uint64_t sub_1E3E1DB1C()
{
  return sub_1E3E79470();
}

uint64_t sub_1E3E1DBCC()
{
  return sub_1E3E1DB1C();
}

uint64_t sub_1E3E1DBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[2] = a2;
  v9[3] = a3;
  sub_1E3E0A7D8((void (*)(long long *__return_ptr, void *))sub_1E3E229E0, (uint64_t)v9, a1);
  sub_1E3E7D0A0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1E3C504EC(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1E3E0A918(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1E3C50AA0(v7);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t LibraryEntityQuery.findAndPrepareEntities(for:adamIDs:uuids:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *double v11 = v5;
  v11[1] = sub_1E3E1DDA4;
  return sub_1E3E1DF8C(a1, a3, a2, a4, a5);
}

uint64_t sub_1E3E1DDA4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[3] = a1;
  v3[4] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1E3E1DED8, 0, 0);
  }
}

uint64_t sub_1E3E1DED8()
{
  uint64_t v1 = v0[4];
  sub_1E3E7D270();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v5 = v0[3];
    return v4(v5);
  }
}

uint64_t sub_1E3E1DF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[24] = a5;
  v6[25] = v5;
  v6[22] = a3;
  v6[23] = a4;
  v6[20] = a1;
  v6[21] = a2;
  uint64_t v7 = sub_1E3E7A880();
  v6[26] = v7;
  v6[27] = *(void *)(v7 - 8);
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E1E07C, 0, 0);
}

uint64_t sub_1E3E1E07C()
{
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v2 = v0[23];
  v0[18] = v0[21];
  v0[16] = v3;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v4 = LibraryEntityQuery.managedObjectContext.getter(v2, v1);
  v0[32] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[33] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1E3E1E160;
  uint64_t v6 = v0[24];
  uint64_t v7 = v0[22];
  uint64_t v8 = v0[23];
  uint64_t v10 = v0[20];
  uint64_t v9 = v0[21];
  return sub_1E3E1F290(v10, v9, v7, (uint64_t)v4, v8, v6);
}

uint64_t sub_1E3E1E160(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1E3E1F068;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v4 = sub_1E3E1E290;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E1E290()
{
  uint64_t v83 = v0;
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[24];
  v0[8] = v0[34];
  id v4 = (void *)swift_task_alloc();
  *id v4 = v2;
  v4[1] = v3;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v6[2] = v2;
  v6[3] = v3;
  v6[4] = KeyPath;
  v0[36] = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1E3E7D110();
  v0[37] = v7;
  v0[38] = swift_getWitnessTable();
  uint64_t v8 = sub_1E3E7CFB0();
  swift_release();
  swift_task_dealloc();
  uint64_t v76 = v0;
  uint64_t v9 = v0 + 18;
  uint64_t v79 = v0 + 10;
  uint64_t v10 = v0 + 16;
  if (*(void *)(v0[18] + 16) && (uint64_t v11 = *(void *)(v8 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t *)(v8 + 40);
    do
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      swift_bridgeObjectRetain();
      sub_1E3E12180(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = v76[23];
  uint64_t v15 = v76[24];
  v76[9] = v76[34];
  uint64_t v17 = (void *)swift_task_alloc();
  void *v17 = v16;
  v17[1] = v15;
  uint64_t v18 = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v19 = (void *)swift_task_alloc();
  v19[2] = v16;
  v19[3] = v15;
  v19[4] = v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_1E3E1C6CC((void (*)(char *, char *))sub_1E3E1C608, (uint64_t)v19, v7, MEMORY[0x1E4FBC538], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v21);
  swift_release();
  swift_task_dealloc();
  if (*(void *)(v76[16] + 16) && (uint64_t v23 = *(void *)(v22 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v23; ++i)
    {
      uint64_t v25 = *(void *)(v22 + 8 * i + 32);
      sub_1E3E12074(v25);
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  void *v79 = *v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE06C0);
  sub_1E3E18CB4((unint64_t *)&qword_1EAE29180, &qword_1EBFE06C0);
  if ((sub_1E3E7D3C0() & 1) != 0
    || (*(v9 - 7) = *v10,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29720),
        sub_1E3E18CB4(&qword_1EAE29560, (uint64_t *)&unk_1EAE29720),
        (sub_1E3E7D3C0() & 1) != 0))
  {
    sub_1E3E7D270();
    v76[39] = v1;
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v26 = (uint64_t (*)(void))v76[1];
      return v26();
    }
    else
    {
      sub_1E3E7A740();
      uint64_t v28 = sub_1E3E7A860();
      os_log_type_t v29 = sub_1E3E7D4C0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_1E3BC5000, v28, v29, "Some entities are lingering, checking remote source for episode content.", v30, 2u);
        MEMORY[0x1E4E79510](v30, -1, -1);
      }
      uint64_t v31 = v76[31];
      uint64_t v32 = v76[26];
      uint64_t v33 = v76[27];

      int64_t v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v76[40] = v34;
      v76[41] = (v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      id v80 = v34;
      v34(v31, v32);
      v76[12] = v76[18];
      if (sub_1E3E7D3C0())
      {
        sub_1E3E7A740();
        int64_t v35 = sub_1E3E7A860();
        os_log_type_t v36 = sub_1E3E7D4E0();
        BOOL v37 = os_log_type_enabled(v35, v36);
        uint64_t v38 = v76[30];
        uint64_t v39 = v76[26];
        if (v37)
        {
          uint64_t v77 = v76[26];
          id v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v75 = swift_slowAlloc();
          uint64_t v82 = v75;
          *(_DWORD *)id v40 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          os_log_type_t type = v36;
          uint64_t v41 = sub_1E3E7D320();
          unint64_t v43 = v42;
          swift_bridgeObjectRelease();
          v76[19] = sub_1E3C150B8(v41, v43, &v82);
          sub_1E3E7DBD0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1E3BC5000, v35, type, "Failed to find requested local episodes with identifiers: %s", v40, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v75, -1, -1);
          MEMORY[0x1E4E79510](v40, -1, -1);

          uint64_t v45 = v77;
          uint64_t v44 = v38;
        }
        else
        {

          uint64_t v44 = v38;
          uint64_t v45 = v39;
        }
        v80(v44, v45);
      }
      uint64_t v54 = *v10;
      int64_t v55 = *(void *)(*v10 + 16);
      uint64_t v56 = MEMORY[0x1E4FBC860];
      if (v55)
      {
        uint64_t v78 = v9 - 5;
        uint64_t v82 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1E3CC7660(0, v55, 0);
        uint64_t v56 = v82;
        uint64_t result = sub_1E3DE3F98(v54);
        uint64_t v57 = result;
        uint64_t v59 = v58;
        char v61 = v60 & 1;
        while ((v57 & 0x8000000000000000) == 0 && v57 < 1 << *(unsigned char *)(v54 + 32))
        {
          if (((*(void *)(v54 + 56 + (((unint64_t)v57 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v57) & 1) == 0) {
            goto LABEL_45;
          }
          if (*(_DWORD *)(v54 + 36) != v59) {
            goto LABEL_46;
          }
          char v81 = v61;
          void *v78 = *(void *)(*(void *)(v54 + 48) + 8 * v57);
          uint64_t v62 = sub_1E3E7E0E0();
          uint64_t v64 = v63;
          uint64_t v82 = v56;
          unint64_t v66 = *(void *)(v56 + 16);
          unint64_t v65 = *(void *)(v56 + 24);
          if (v66 >= v65 >> 1)
          {
            sub_1E3CC7660(v65 > 1, v66 + 1, 1);
            uint64_t v56 = v82;
          }
          *(void *)(v56 + 16) = v66 + 1;
          uint64_t v67 = v56 + 16 * v66;
          *(void *)(v67 + 32) = v62;
          *(void *)(v67 + 40) = v64;
          uint64_t result = sub_1E3DE403C(v57, v59, v81 & 1, v54);
          uint64_t v57 = result;
          uint64_t v59 = v68;
          char v61 = v69 & 1;
          if (!--v55)
          {
            sub_1E3D15688(result, v68, v61);
            swift_bridgeObjectRelease();
            goto LABEL_41;
          }
        }
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
      }
      else
      {
LABEL_41:
        v76[42] = v56;
        uint64_t v70 = (*(uint64_t (**)(void))(v76[24] + 40))(v76[23]);
        v76[43] = v70;
        uint64_t v71 = (void *)swift_task_alloc();
        v76[44] = v71;
        *uint64_t v71 = v76;
        v71[1] = sub_1E3E1EBD4;
        uint64_t v72 = v76[23];
        uint64_t v73 = v76[24];
        return sub_1E3E217A4(v56, v70, v72, v73);
      }
    }
  }
  else
  {
    sub_1E3E7A740();
    unint64_t v46 = sub_1E3E7A860();
    os_log_type_t v47 = sub_1E3E7D4C0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_1E3BC5000, v46, v47, "Found episodes using local-only identifiers", v48, 2u);
      MEMORY[0x1E4E79510](v48, -1, -1);
    }
    uint64_t v49 = v76[27];
    uint64_t v50 = v76[28];
    uint64_t v51 = v76[26];

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v76[34];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v53 = (uint64_t (*)(uint64_t))v76[1];
    return v53(v52);
  }
  return result;
}

uint64_t sub_1E3E1EBD4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 360) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1E3E1ED10, 0, 0);
}

uint64_t sub_1E3E1ED10()
{
  uint64_t v23 = v0;
  *(void *)(v0 + 112) = *(void *)(v0 + 360);
  *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 184);
  uint64_t v1 = sub_1E3E7CFB0();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v0 + 128);
  if (*(void *)(v2 + 16) && (uint64_t v3 = *(void *)(v1 + 16)) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void *)(v1 + 8 * i + 32);
      sub_1E3E12074(v5);
    }
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v0 + 128);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 120) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29720);
  sub_1E3E18CB4(&qword_1EAE29560, (uint64_t *)&unk_1EAE29720);
  if (sub_1E3E7D3C0())
  {
    sub_1E3E7A740();
    uint64_t v6 = sub_1E3E7A860();
    os_log_type_t v7 = sub_1E3E7D4E0();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v11 = *(void *)(v0 + 208);
    if (v8)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = v11;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v22 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1E3E7D320();
      uint64_t v20 = v9;
      unint64_t v16 = v15;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 136) = sub_1E3C150B8(v14, v16, &v22);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v6, v7, "Failed to find requested remote episodes with identifiers: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v13, -1, -1);
      MEMORY[0x1E4E79510](v12, -1, -1);

      v20(v10, v21);
    }
    else
    {

      v9(v10, v11);
    }
  }
  uint64_t v17 = sub_1E3E7D0C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(v17);
}

uint64_t sub_1E3E1F068()
{
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1E3E1F124(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1E3E79AD0();
  id v10 = LibraryEntityQuery.managedObjectContext.getter(a2, a3);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1E3E7A510();
  if (v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1E3E7A500();
  }
  else
  {
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
  }
  if (sub_1E3E7A520())
  {
    uint64_t v13 = sub_1E3D32170(v9, v8, v10);
    if (v13)
    {
      uint64_t v12 = (uint64_t)v13;
      uint64_t v8 = 0;
      char v14 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      char v14 = 2;
      uint64_t v12 = v9;
    }
  }
  else
  {
    uint64_t v8 = 0;
    char v14 = 0;
  }
  swift_bridgeObjectRelease();

  *(void *)a4 = v12;
  *(void *)(a4 + 8) = v8;
  *(unsigned char *)(a4 + 16) = v14;
}

uint64_t sub_1E3E1F290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[8] = a6;
  v7[9] = v6;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  uint64_t v8 = sub_1E3E7D8E0();
  v7[10] = v8;
  v7[11] = *(void *)(v8 - 8);
  v7[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E1F35C, 0, 0);
}

uint64_t sub_1E3E1F35C()
{
  uint64_t v1 = v0;
  uint64_t v21 = v0[12];
  uint64_t v22 = v0 + 2;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[7];
  uint64_t v18 = v0[5];
  uint64_t v19 = v0[4];
  uint64_t v20 = (void *)v0[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE296B0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1E3E79AD0();
  swift_getAssociatedTypeWitness();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = sub_1E3E20BF0();
  v0[13] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1E3E8FA00;
  sub_1E3C12B10(0, &qword_1EBFDEE40);
  *(void *)(v6 + 32) = sub_1E3E7D580();
  *(void *)(v6 + 40) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v18, v3, v2);
  *(void *)(v6 + 48) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 56))(v19, v3, v2);
  sub_1E3E7D080();
  sub_1E3C12B10(0, &qword_1EBFDEE38);
  os_log_type_t v7 = (void *)sub_1E3E7D050();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v7);

  objc_msgSend(v5, sel_setPredicate_, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v1[14] = v9;
  v9[2] = v3;
  v9[3] = v2;
  void v9[4] = v20;
  v9[5] = v5;
  uint64_t v10 = sub_1E3E7D110();
  uint64_t v11 = *MEMORY[0x1E4F1BD78];
  uint64_t v12 = sub_1E3E7D8E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v21, v11, v12);
  id v13 = v20;
  id v14 = v5;
  unint64_t v15 = (void *)swift_task_alloc();
  v1[15] = v15;
  *unint64_t v15 = v1;
  v15[1] = sub_1E3E1F6C8;
  uint64_t v16 = v1[12];
  return MEMORY[0x1F40D7080](v22, v16, sub_1E3E22924, v9, v10);
}

uint64_t sub_1E3E1F6C8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    id v5 = sub_1E3E1F8D0;
  }
  else {
    id v5 = sub_1E3E1F85C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E1F85C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1E3E1F8D0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E1F93C@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1E3E79490();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_1E3E1F9E4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_1E3E7D900();
  if (!v3)
  {
    v14[7] = result;
    uint64_t v8 = swift_checkMetadataState();
    MEMORY[0x1F4188790](v8);
    v14[2] = a1;
    v14[3] = a2;
    v14[4] = v9;
    uint64_t v10 = sub_1E3E7D110();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v13 = sub_1E3E1C6CC((void (*)(char *, char *))sub_1E3E22944, (uint64_t)v14, v10, v8, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v12);
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v13;
  }
  return result;
}

uint64_t sub_1E3E1FB84(void **a1)
{
  uint64_t v1 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  id v2 = v1;
  return sub_1E3E79AF0();
}

uint64_t sub_1E3E1FC30()
{
  return sub_1E3E79470();
}

uint64_t LibraryEntityQuery.fetchEntities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = sub_1E3E7D1E0();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E1FDA4, 0, 0);
}

uint64_t sub_1E3E1FDA4()
{
  v0[11] = (*(uint64_t (**)(void))(v0[6] + 40))(v0[5]);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  id v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *id v2 = v0;
  v2[1] = sub_1E3E1FE84;
  return MEMORY[0x1F4127FF8](v0 + 2, v1, v1);
}

uint64_t sub_1E3E1FE84()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1E3E20704;
  }
  else
  {
    swift_release();
    id v2 = sub_1E3E1FFA0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E1FFA0()
{
  v0[14] = v0[2];
  uint64_t ObjectType = swift_getObjectType();
  sub_1E3C17C5C();
  id v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *id v2 = v0;
  v2[1] = sub_1E3E20068;
  uint64_t v3 = v0[10];
  return MEMORY[0x1F4145A40](v3, ObjectType);
}

uint64_t sub_1E3E20068(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1E3E201E4, 0, 0);
}

uint64_t sub_1E3E201E4()
{
  uint64_t v1 = sub_1E3E7D0A0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v0[17] = v1;
  v0[18] = v2;
  v0[19] = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1E3C504EC(v5);
  v0[20] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1E3E0A918(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1E3C50AA0(v8);
  v0[21] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[22] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1E3E20318;
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[6];
  uint64_t v13 = v0[5];
  return sub_1E3E1F290(v3, v6, v9, v11, v13, v12);
}

uint64_t sub_1E3E20318(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[23] = a1;
  v4[24] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1E3E20770, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)swift_task_alloc();
    v4[25] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1E3E204D8;
    return sub_1E3E204D8(a1);
  }
}

uint64_t sub_1E3E204D8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3E20690;
  }
  else
  {
    *(void *)(v4 + 216) = a1;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1E3E20614;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E20614()
{
  uint64_t v1 = (void *)v0[16];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[27];
  return v2(v3);
}

uint64_t sub_1E3E20690()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3E20704()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E20770()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t LibraryEntityQuery.artworkData(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = sub_1E3E7A880();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = sub_1E3E78E70();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  v4[19] = swift_task_alloc();
  uint64_t v7 = sub_1E3E78740();
  v4[20] = v7;
  v4[21] = *(void *)(v7 - 8);
  v4[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E209D4, 0, 0);
}

uint64_t sub_1E3E209D4()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  sub_1E3C719E0(v0[8], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1E3C71A48(v0[19]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void, unint64_t))v0[1];
    return v4(0, 0xF000000000000000);
  }
  else
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = v0[9];
    sub_1E3C71AA8(v0[19], v0[22]);
    v0[23] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v7, v6);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[24] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1E3E1B76C;
    return MEMORY[0x1F4127FF8](v0 + 2, v8, v8);
  }
}

uint64_t static LibraryEntityStringQueryError.== infix(_:_:)()
{
  return 1;
}

uint64_t LibraryEntityStringQueryError.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t LibraryEntityStringQueryError.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

id sub_1E3E20BF0()
{
  uint64_t v1 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1E3E20C48(uint64_t a1)
{
  return sub_1E3D90FFC(*(uint64_t (**)(uint64_t))(v1 + 8), v1, a1);
}

uint64_t sub_1E3E20C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = swift_getAssociatedTypeWitness();
  v4[13] = swift_getAssociatedConformanceWitness();
  v4[14] = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1E3E793A0();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273B0);
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29580);
  v4[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273C0);
  v4[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29590);
  v4[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273D0);
  v4[23] = swift_task_alloc();
  uint64_t v6 = sub_1E3E78770();
  v4[24] = v6;
  v4[25] = *(void *)(v6 - 8);
  v4[26] = swift_task_alloc();
  uint64_t v7 = sub_1E3E78800();
  v4[27] = v7;
  v4[28] = *(void *)(v7 - 8);
  v4[29] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E20FA0, 0, 0);
}

uint64_t sub_1E3E20FA0()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v3 = v0[21];
  uint64_t v6 = v0[18];
  uint64_t v5 = v0[19];
  (*(void (**)(void))(v0[25] + 104))();
  v0[30] = swift_checkMetadataState();
  sub_1E3E79480();
  uint64_t v7 = sub_1E3E78790();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 0, 1, v7);
  uint64_t v8 = sub_1E3E78820();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v1, 1, 1, v8);
  uint64_t v9 = sub_1E3E787B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  uint64_t v10 = sub_1E3E787A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  uint64_t v11 = sub_1E3E78810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  uint64_t v12 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  swift_bridgeObjectRetain();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1E3E5398C(MEMORY[0x1E4FBC860]);
  sub_1E3E5398C(v13);
  sub_1E3E539C8(v13);
  sub_1E3E53BBC(v13);
  sub_1E3E53BBC(v13);
  sub_1E3E53DF8(v13);
  sub_1E3E53E34(v13);
  sub_1E3E787F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  sub_1E3E7BE80();
  sub_1E3E7C8C0();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  id v14 = (void *)swift_task_alloc();
  v0[31] = v14;
  *id v14 = v0;
  v14[1] = sub_1E3E21394;
  uint64_t v15 = v0[29];
  uint64_t v16 = v0[17];
  return MEMORY[0x1F4145690](v16, v15);
}

uint64_t sub_1E3E21394()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3E216A4;
  }
  else {
    uint64_t v2 = sub_1E3E214A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E214A8()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v16 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  long long v14 = *(_OWORD *)(v0 + 80);
  uint64_t v6 = sub_1E3E79390();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  *(void *)(v0 + 56) = v6;
  uint64_t v7 = swift_task_alloc();
  *(_OWORD *)(v7 + 16) = v14;
  *(void *)(v7 + 32) = v1;
  uint64_t v8 = sub_1E3E7D110();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_1E3E1C6CC((void (*)(char *, char *))sub_1E3E229BC, v7, v8, v1, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v10);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v16, v15);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v12(v11);
}

uint64_t sub_1E3E216A4()
{
  (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1E3E217A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_1E3E7A6E0();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_1E3E7A640();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  uint64_t v7 = sub_1E3E7A6D0();
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E21980, 0, 0);
}

uint64_t sub_1E3E21980()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  sub_1E3E7A650();
  sub_1E3E7A650();
  sub_1E3E7A6A0();
  sub_1E3E7A610();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[22] = v4;
  v0[23] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v28 = v4;
  v4(v1, v2);
  uint64_t v5 = sub_1E3E7A6A0();
  os_signpost_type_t v6 = sub_1E3E7D760();
  if (sub_1E3E7DB50())
  {
    uint64_t v7 = v0[14];
    uint64_t v9 = v0[10];
    uint64_t v8 = v0[11];
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    unint64_t v11 = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v10(v7, v0[15], v9);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    os_signpost_id_t v13 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v5, v6, v13, "LibraryAppIntentMediaAPIFetch", "", v12, 2u);
    MEMORY[0x1E4E79510](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    uint64_t v14 = v0[11];

    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    unint64_t v11 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v15 = v0[21];
  uint64_t v17 = v0[15];
  uint64_t v16 = v0[16];
  uint64_t v18 = v0[14];
  uint64_t v19 = v0[10];
  uint64_t v20 = v0[11];
  v0[24] = v10;
  v0[25] = v11;
  v10(v18, v17, v19);
  sub_1E3E7A720();
  swift_allocObject();
  v0[26] = sub_1E3E7A710();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v0[27] = v21;
  v0[28] = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v21(v17, v19);
  v28(v15, v16);
  uint64_t v22 = (void *)swift_task_alloc();
  v0[29] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1E3E21BE8;
  uint64_t v23 = v0[4];
  uint64_t v24 = v0[5];
  uint64_t v26 = v0[2];
  uint64_t v25 = v0[3];
  return sub_1E3E20C84(v26, v25, v23, v24);
}

uint64_t sub_1E3E21BE8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1E3E21FA4;
  }
  else {
    uint64_t v4 = sub_1E3E21CFC;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1E3E21CFC()
{
  sub_1E3E7A650();
  uint64_t v1 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  os_signpost_type_t v2 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 48));
      uint64_t v6 = "SUCCESS";
    }
    os_signpost_id_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 80);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192))(v14, v15, v16);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    os_signpost_id_t v18 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v1, v2, v18, "LibraryAppIntentMediaAPIFetch", v6, v17, 2u);
    MEMORY[0x1E4E79510](v17, -1, -1);

    v13(v15, v16);
    v23(v22, v21);
    swift_release();
    v13(v14, v16);
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 80);

    v7(v11, v12);
    v8(v9, v10);
    swift_release();
  }
  uint64_t v24 = *(void *)(v0 + 240);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v19(v24);
}

uint64_t sub_1E3E21FA4()
{
  uint64_t v1 = (uint64_t *)(v0 + 144);
  os_signpost_type_t v2 = (void *)(v0 + 96);
  sub_1E3E7A650();
  uint64_t v3 = sub_1E3E7A6A0();
  sub_1E3E7A700();
  os_signpost_type_t v4 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    os_signpost_type_t v25 = v4;
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 48);
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v6, v7) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
      uint64_t v8 = "FAILURE";
    }
    format = (char *)v8;
    uint64_t v10 = (void (**)(uint64_t, uint64_t))(v0 + 216);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    uint64_t v23 = *(void *)(v0 + 96);
    uint64_t v11 = (uint64_t *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 80);
    (*(void (**)(void))(v0 + 192))(*(void *)(v0 + 112));
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v3, v25, v15, "LibraryAppIntentMediaAPIFetch", format, v14, 2u);
    MEMORY[0x1E4E79510](v14, -1, -1);

    v24(v23, v13);
    uint64_t v9 = (void (**)(void, void))(v0 + 176);
    uint64_t v12 = 128;
    os_signpost_type_t v2 = (void *)(v0 + 144);
    uint64_t v1 = (uint64_t *)(v0 + 112);
  }
  else
  {

    uint64_t v9 = (void (**)(void, void))(v0 + 216);
    uint64_t v10 = (void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v11 = (uint64_t *)(v0 + 128);
    uint64_t v12 = 80;
  }
  uint64_t v16 = *v1;
  uint64_t v17 = *v11;
  os_signpost_id_t v18 = *v10;
  uint64_t v19 = *(void **)(v0 + 248);
  (*v9)(*v2, *(void *)(v0 + v12));
  v18(v16, v17);
  swift_getAssociatedTypeWitness();
  uint64_t v26 = sub_1E3E7D0E0();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v26);
}

void sub_1E3E222A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a4;
  uint64_t v35 = a3;
  uint64_t v30 = a2;
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v31 = (char *)&v30 - v10;
  MEMORY[0x1F4188790](v11);
  int64_t v34 = (char *)&v30 - v12;
  MEMORY[0x1F4188790](v13);
  os_signpost_id_t v15 = (char *)&v30 - v14;
  uint64_t v41 = *a1;
  uint64_t v16 = sub_1E3E7D110();
  swift_getWitnessTable();
  uint64_t v36 = v16;
  sub_1E3E7D3A0();
  unint64_t v17 = v42;
  if (v42 != v43)
  {
    if (v43 < v42)
    {
      __break(1u);
    }
    else if (v42 < v43)
    {
      os_signpost_id_t v18 = (void (**)(char *, uint64_t))(v37 + 8);
      int64_t v38 = v43;
      while (1)
      {
        sub_1E3E7D120();
        swift_getAssociatedConformanceWitness();
        uint64_t v20 = (void *)sub_1E3E79B20();
        uint64_t v21 = *v18;
        (*v18)(v15, AssociatedTypeWitness);
        if (v20)
        {
          if (sub_1E3D348B0(v20, v33))
          {
            uint64_t v19 = v36;
            sub_1E3E7D0D0();
            sub_1E3E1C180(v17, *a1);
            _swift_isClassOrObjCExistentialType();
            sub_1E3E79B10();
            nullsub_1(v19);

            goto LABEL_7;
          }
        }
        uint64_t v22 = v34;
        sub_1E3E7D120();
        swift_getAssociatedConformanceWitness();
        uint64_t v23 = sub_1E3E79490();
        v21(v22, AssociatedTypeWitness);
        if (sub_1E3D34A00(v23, v35))
        {
          uint64_t v24 = v31;
          sub_1E3E7D120();
          sub_1E3E79490();
          v21(v24, AssociatedTypeWitness);
          uint64_t v25 = v36;
          sub_1E3E7D0D0();
          sub_1E3E1C180(v17, *a1);
          _swift_isClassOrObjCExistentialType();
          sub_1E3E794A0();
LABEL_16:
          nullsub_1(v25);
          goto LABEL_7;
        }
        uint64_t v26 = v32;
        sub_1E3E7D120();
        uint64_t v27 = sub_1E3E79AE0();
        uint64_t v29 = v28;
        v21(v26, AssociatedTypeWitness);
        if (v29)
        {
          if ((sub_1E3D34688(v27, v29, v30) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          uint64_t v25 = v36;
          sub_1E3E7D0D0();
          sub_1E3E1C180(v17, *a1);
          _swift_isClassOrObjCExistentialType();
          sub_1E3E79B00();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
LABEL_7:
        if (v38 == ++v17) {
          return;
        }
      }
    }
    __break(1u);
  }
}

unint64_t sub_1E3E22780()
{
  unint64_t result = qword_1EAE29718;
  if (!qword_1EAE29718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29718);
  }
  return result;
}

uint64_t dispatch thunk of LibraryEntityQuery.objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of LibraryEntityQuery.predicate(forAdamIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of LibraryEntityQuery.predicate(forUuids:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

unsigned char *storeEnumTagSinglePayload for LibraryEntityStringQueryError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3E228ACLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEntityStringQueryError()
{
  return &type metadata for LibraryEntityStringQueryError;
}

uint64_t sub_1E3E228E4()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E22924@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E1F9E4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1E3E22944(void **a1)
{
  return sub_1E3E1FB84(a1);
}

uint64_t sub_1E3E2296C()
{
  return 16;
}

__n128 sub_1E3E22978(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1E3E22988()
{
  return 16;
}

__n128 sub_1E3E22994(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1E3E229A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E1F93C(a1);
}

uint64_t sub_1E3E229BC()
{
  return sub_1E3E1FC30();
}

void sub_1E3E229E0(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1E3E1F124(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1E3E22A04()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1E3E7D110();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6400);
  uint64_t v1 = sub_1E3E7D160();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1E3E22B30(uint64_t a1, void *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1E3E7D110();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6400);
  sub_1E3E7D160();
  uint64_t v5 = *(void *)(v2 + 32);

  return sub_1E3E1D8C8(a1, a2, v5);
}

uint64_t AssetProcessingStep.mapMetadata<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v15 = *(void *)(a3 - 8);
  double v16 = MEMORY[0x1F4188790](a1);
  os_signpost_id_t v18 = (char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v15 + 16))(v18, v7, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a7, v18, a3);
  v21[0] = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  uint64_t v19 = (void *)(a7 + *(int *)(type metadata accessor for MapMetadataProcessingStep() + 52));
  void *v19 = a1;
  v19[1] = a2;
  return sub_1E3E775E0();
}

uint64_t MapMetadataProcessingStep.init(upstream:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for MapMetadataProcessingStep();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 52));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for MapMetadataProcessingStep()
{
  return swift_getGenericMetadata();
}

uint64_t MapMetadataProcessingStep.metadata.getter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = *(void (**)(char *))(v1 + *(int *)(a1 + 52));
  sub_1E3E79780();
  v7(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
}

uint64_t MapMetadataProcessingStep.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MapMetadataProcessingStep.transform.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 52));
  sub_1E3E775E0();
  return v2;
}

uint64_t MapMetadataProcessingStep.publisher.getter()
{
  return sub_1E3E79790();
}

uint64_t sub_1E3E22FF0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1E3E23018()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1E3E230B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v10;
    v12[1] = v11;
  }
  sub_1E3E775E0();
  return v4;
}

uint64_t sub_1E3E231AC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

uint64_t sub_1E3E2321C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  void *v7 = *v8;
  v7[1] = v9;
  sub_1E3E775E0();
  return a1;
}

uint64_t sub_1E3E2329C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  void *v7 = *v8;
  v7[1] = v9;
  sub_1E3E775E0();
  swift_release();
  return a1;
}

uint64_t sub_1E3E23328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1E3E233A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1E3E23428(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1E3E23574);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1E3E23588(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1E3E23768);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          os_signpost_id_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          void *v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1E3E23790()
{
  return sub_1E3E237CC();
}

uint64_t sub_1E3E237A4()
{
  return sub_1E3E237CC();
}

uint64_t sub_1E3E237B8()
{
  return sub_1E3E237CC();
}

uint64_t sub_1E3E237CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  return v1;
}

void sub_1E3E23838()
{
}

void sub_1E3E23860()
{
}

void sub_1E3E23888()
{
}

void sub_1E3E238B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(self, sel_sharedInstance);
  id v6 = objc_msgSend(v5, sel_privateQueueContext);

  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  v11[4] = a2;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1E3CE65F8;
  v11[3] = a3;
  uint64_t v9 = _Block_copy(v11);
  id v10 = v6;
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v9);
  _Block_release(v9);
}

uint64_t sub_1E3E239EC@<X0>(void *a1@<X8>)
{
  return sub_1E3E23A50(a1);
}

uint64_t sub_1E3E23A00()
{
  return sub_1E3E23AE0();
}

uint64_t sub_1E3E23A14@<X0>(void *a1@<X8>)
{
  return sub_1E3E23A50(a1);
}

uint64_t sub_1E3E23A28()
{
  return sub_1E3E23AE0();
}

uint64_t sub_1E3E23A3C@<X0>(void *a1@<X8>)
{
  return sub_1E3E23A50(a1);
}

uint64_t sub_1E3E23A50@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E23ACC()
{
  return sub_1E3E23AE0();
}

uint64_t sub_1E3E23AE0()
{
  return sub_1E3E7AB00();
}

uint64_t sub_1E3E23B58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    unint64_t v8 = sub_1E3E26F9C();
    unint64_t v9 = v8;
    if (v8 >> 62)
    {
      uint64_t result = sub_1E3E7DFC0();
      uint64_t v35 = v7;
      uint64_t v36 = v5;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t result = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v35 = v7;
      uint64_t v36 = v5;
      if (result)
      {
LABEL_4:
        if (result < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v10 = 0;
        unint64_t v37 = v9 & 0xC000000000000001;
        unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
        unint64_t v39 = v9;
        uint64_t v40 = a2;
        uint64_t v38 = result;
        do
        {
          if (v37) {
            id v12 = (id)MEMORY[0x1E4E77720](v10, v9);
          }
          else {
            id v12 = *(id *)(v9 + 8 * v10 + 32);
          }
          unsigned int v13 = v12;
          uint64_t v14 = (void *)sub_1E3E270B4(v12);
          BOOL v15 = sub_1E3E273F4(v13);
          id v43 = objc_msgSend(v13, sel_storeTrackId);
          id v16 = objc_msgSend(v13, sel_cleanedTitle);
          if (v16)
          {
            unint64_t v17 = v16;
            uint64_t v41 = sub_1E3E7CD30();
            unint64_t v42 = v18;
          }
          else
          {
            uint64_t v41 = 0x656C746954206F4ELL;
            unint64_t v42 = 0xE800000000000000;
          }
          id v19 = objc_msgSend(v13, sel_author, v35);
          if (v19)
          {
            uint64_t v20 = v19;
            uint64_t v21 = sub_1E3E7CD30();
            unint64_t v23 = v22;
          }
          else
          {
            unint64_t v23 = 0xE900000000000072;
            uint64_t v21 = 0x6F68747541206F4ELL;
          }
          id v24 = v14;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned int v11 = sub_1E3CB8500(0, v11[2] + 1, 1, v11);
          }
          unint64_t v26 = v11[2];
          unint64_t v25 = v11[3];
          if (v26 >= v25 >> 1) {
            unsigned int v11 = sub_1E3CB8500((void *)(v25 > 1), v26 + 1, 1, v11);
          }
          ++v10;
          v11[2] = v26 + 1;
          uint64_t v27 = &v11[7 * v26];
          uint64_t v28 = v41;
          v27[4] = v43;
          v27[5] = v28;
          v27[6] = v42;
          v27[7] = v21;
          v27[8] = v23;
          *((unsigned char *)v27 + 72) = v14 != 0;
          *((unsigned char *)v27 + 73) = v15;
          v27[10] = v14;

          unint64_t v9 = v39;
        }
        while (v38 != v10);
        goto LABEL_23;
      }
    }
    unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1E3E7D1E0();
    uint64_t v30 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v36, 1, 1, v29);
    sub_1E3E7D1A0();
    uint64_t v31 = v35;
    sub_1E3E775E0();
    uint64_t v32 = sub_1E3E7D190();
    uint64_t v33 = (void *)swift_allocObject();
    uint64_t v34 = MEMORY[0x1E4FBCFD8];
    v33[2] = v32;
    v33[3] = v34;
    v33[4] = v31;
    v33[5] = v11;
    sub_1E3C4CD5C(v30, (uint64_t)&unk_1EAE29828, (uint64_t)v33);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3E23EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  sub_1E3E7D1A0();
  v5[5] = sub_1E3E7D190();
  uint64_t v7 = sub_1E3E7D130();
  return MEMORY[0x1F4188298](sub_1E3E23F7C, v7, v6);
}

uint64_t sub_1E3E23F7C()
{
  uint64_t v1 = v0[4];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v1;
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E7AB00();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3E2403C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_1E3E27A34();
    uint64_t v6 = sub_1E3E7D1E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
    sub_1E3E7D1A0();
    sub_1E3E775E0();
    uint64_t v7 = sub_1E3E7D190();
    unint64_t v8 = (void *)swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBCFD8];
    v8[2] = v7;
    v8[3] = v9;
    v8[4] = v4;
    v8[5] = v5;
    sub_1E3C4CD5C((uint64_t)v2, (uint64_t)&unk_1EAE29848, (uint64_t)v8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3E24198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  sub_1E3E7D1A0();
  v5[5] = sub_1E3E7D190();
  uint64_t v7 = sub_1E3E7D130();
  return MEMORY[0x1F4188298](sub_1E3E24230, v7, v6);
}

uint64_t sub_1E3E24230()
{
  uint64_t v1 = v0[4];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v1;
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E7AB00();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3E242F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    MEMORY[0x1F4188790](result);
    *(&v13 - 2) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24DB8);
    sub_1E3E7D8B0();
    uint64_t v8 = v13;
    uint64_t v9 = sub_1E3E7D1E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
    sub_1E3E7D1A0();
    sub_1E3E775E0();
    uint64_t v10 = sub_1E3E7D190();
    unsigned int v11 = (void *)swift_allocObject();
    uint64_t v12 = MEMORY[0x1E4FBCFD8];
    v11[2] = v10;
    v11[3] = v12;
    v11[4] = v7;
    v11[5] = v8;
    sub_1E3C4CD5C((uint64_t)v5, (uint64_t)&unk_1EAE29838, (uint64_t)v11);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3E244A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  sub_1E3E7D1A0();
  v5[5] = sub_1E3E7D190();
  uint64_t v7 = sub_1E3E7D130();
  return MEMORY[0x1F4188298](sub_1E3E24540, v7, v6);
}

uint64_t sub_1E3E24540()
{
  uint64_t v1 = v0[4];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v1;
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E7AB00();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E3E24600(unint64_t a1)
{
  v51[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1E3E7A880();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  os_log_type_t v47 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v49 = (char *)&v42 - v11;
  uint64_t v12 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  BOOL v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  uint64_t v16 = *((void *)v51[0] + 2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v16 <= (uint64_t)a1) {
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
  }
  if (*((void *)v51[0] + 2) <= a1) {
    goto LABEL_14;
  }
  sub_1E3C1A728((uint64_t)v51[0]+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * a1, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_1E3C242A0((uint64_t)&v15[*(int *)(v12 + 32)], (uint64_t)v6);
  uint64_t v18 = v8;
  uint64_t v19 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1E3C10CE0((uint64_t)v6, &qword_1EBFE6070);
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v21 = v49;
    v20(v49, v6, v7);
    id v22 = objc_msgSend(self, sel_defaultManager);
    unint64_t v23 = (void *)sub_1E3E77C40();
    v51[0] = 0;
    unsigned __int8 v24 = objc_msgSend(v22, sel_removeItemAtURL_error_, v23, v51);

    if (v24)
    {
      unint64_t v25 = *(void (**)(char *, uint64_t))(v18 + 8);
      id v26 = v51[0];
      v25(v21, v7);
    }
    else
    {
      id v27 = v51[0];
      uint64_t v28 = (void *)sub_1E3E77B30();

      swift_willThrow();
      uint64_t v29 = v48;
      sub_1E3E7A820();
      uint64_t v30 = v47;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v47, v21, v19);
      uint64_t v31 = sub_1E3E7A860();
      os_log_type_t v32 = sub_1E3E7D4D0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        id v44 = v28;
        uint64_t v34 = (uint8_t *)v33;
        uint64_t v35 = (void *)swift_slowAlloc();
        uint64_t v43 = v19;
        uint64_t v36 = v35;
        v51[0] = v35;
        *(_DWORD *)uint64_t v34 = 136315138;
        uint64_t v37 = sub_1E3E77CB0();
        uint64_t v50 = sub_1E3C150B8(v37, v38, (uint64_t *)v51);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease();
        unint64_t v39 = *(void (**)(char *, uint64_t))(v18 + 8);
        uint64_t v40 = v43;
        v39(v30, v43);
        _os_log_impl(&dword_1E3BC5000, v31, v32, "FairPlayDebugController: Unable to delete key @ %s.", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E4E79510](v36, -1, -1);
        MEMORY[0x1E4E79510](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v46);
        v39(v49, v40);
      }
      else
      {

        uint64_t v41 = *(void (**)(char *, uint64_t))(v18 + 8);
        v41(v30, v19);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v46);
        v41(v21, v19);
      }
    }
  }
  return sub_1E3E27EE4((uint64_t)v15);
}

uint64_t sub_1E3E24C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B770();
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E3E7B7C0();
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  uint64_t v14 = *(void *)(aBlock + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v14 > a1)
  {
    unint64_t KeyPath = swift_getKeyPath();
    swift_getKeyPath();
    sub_1E3E7AAF0();
    swift_release();
    swift_release();
    if (a1 < 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t KeyPath = aBlock;
      if (*(void *)(aBlock + 16) > (unint64_t)a1)
      {
        sub_1E3C1A728(aBlock+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * a1, (uint64_t)v13);
        uint64_t result = swift_bridgeObjectRelease();
        a1 = *v13;
        unint64_t KeyPath = v13[1];
        uint64_t v17 = HIBYTE(KeyPath) & 0xF;
        uint64_t v18 = *v13 & 0xFFFFFFFFFFFFLL;
        if ((KeyPath & 0x2000000000000000) != 0) {
          uint64_t v19 = HIBYTE(KeyPath) & 0xF;
        }
        else {
          uint64_t v19 = *v13 & 0xFFFFFFFFFFFFLL;
        }
        if (!v19) {
          return sub_1E3E27EE4((uint64_t)v13);
        }
        if ((KeyPath & 0x1000000000000000) == 0)
        {
          if ((KeyPath & 0x2000000000000000) == 0)
          {
            if ((a1 & 0x1000000000000000) != 0) {
              uint64_t v20 = (unsigned __int8 *)((KeyPath & 0xFFFFFFFFFFFFFFFLL) + 32);
            }
            else {
              uint64_t v20 = (unsigned __int8 *)sub_1E3E7DE50();
            }
            uint64_t v21 = (uint64_t)sub_1E3CF42CC(v20, v18, 10);
            LOBYTE(a1) = v22 & 1;
            goto LABEL_47;
          }
          unint64_t aBlock = *v13;
          uint64_t v43 = KeyPath & 0xFFFFFFFFFFFFFFLL;
          if (a1 == 43)
          {
            if (!v17) {
              goto LABEL_62;
            }
            if (v17 == 1 || (BYTE1(a1) - 48) > 9u) {
              goto LABEL_34;
            }
            uint64_t v21 = (BYTE1(a1) - 48);
            if (v17 != 2)
            {
              if ((BYTE2(a1) - 48) > 9u) {
                goto LABEL_34;
              }
              uint64_t v21 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
              uint64_t v23 = v17 - 3;
              if (v23)
              {
                unsigned __int8 v24 = (unsigned __int8 *)&aBlock + 3;
                while (1)
                {
                  unsigned int v25 = *v24 - 48;
                  if (v25 > 9) {
                    goto LABEL_34;
                  }
                  uint64_t v26 = 10 * v21;
                  if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63) {
                    goto LABEL_34;
                  }
                  uint64_t v21 = v26 + v25;
                  if (__OFADD__(v26, v25)) {
                    goto LABEL_34;
                  }
                  LOBYTE(a1) = 0;
                  ++v24;
                  if (!--v23) {
                    goto LABEL_47;
                  }
                }
              }
            }
          }
          else
          {
            if (a1 == 45)
            {
              if (v17)
              {
                if (v17 != 1 && (BYTE1(a1) - 48) <= 9u)
                {
                  if (v17 == 2)
                  {
                    LOBYTE(a1) = 0;
                    uint64_t v21 = -(uint64_t)(BYTE1(a1) - 48);
                    goto LABEL_47;
                  }
                  if ((BYTE2(a1) - 48) <= 9u)
                  {
                    uint64_t v21 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
                    uint64_t v31 = v17 - 3;
                    if (!v31) {
                      goto LABEL_46;
                    }
                    uint64_t v35 = (unsigned __int8 *)&aBlock + 3;
                    while (1)
                    {
                      unsigned int v36 = *v35 - 48;
                      if (v36 > 9) {
                        break;
                      }
                      uint64_t v37 = 10 * v21;
                      if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63) {
                        break;
                      }
                      uint64_t v21 = v37 - v36;
                      if (__OFSUB__(v37, v36)) {
                        break;
                      }
                      LOBYTE(a1) = 0;
                      ++v35;
                      if (!--v31) {
                        goto LABEL_47;
                      }
                    }
                  }
                }
LABEL_34:
                uint64_t v21 = 0;
                LOBYTE(a1) = 1;
                goto LABEL_47;
              }
              __break(1u);
LABEL_62:
              __break(1u);
              return result;
            }
            if (!v17 || (a1 - 48) > 9u) {
              goto LABEL_34;
            }
            uint64_t v21 = (a1 - 48);
            if (v17 != 1)
            {
              if ((BYTE1(a1) - 48) > 9u) {
                goto LABEL_34;
              }
              uint64_t v21 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
              uint64_t v27 = v17 - 2;
              if (v27)
              {
                uint64_t v28 = (unsigned __int8 *)&aBlock + 2;
                while (1)
                {
                  unsigned int v29 = *v28 - 48;
                  if (v29 > 9) {
                    goto LABEL_34;
                  }
                  uint64_t v30 = 10 * v21;
                  if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63) {
                    goto LABEL_34;
                  }
                  uint64_t v21 = v30 + v29;
                  if (__OFADD__(v30, v29)) {
                    goto LABEL_34;
                  }
                  LOBYTE(a1) = 0;
                  ++v28;
                  if (!--v27) {
                    goto LABEL_47;
                  }
                }
              }
            }
          }
LABEL_46:
          LOBYTE(a1) = 0;
          goto LABEL_47;
        }
LABEL_59:
        swift_bridgeObjectRetain();
        uint64_t v21 = (uint64_t)sub_1E3CF42E4(a1, KeyPath, 10);
        LOBYTE(a1) = v38;
        swift_bridgeObjectRelease();
LABEL_47:
        if ((a1 & 1) == 0)
        {
          sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
          os_log_type_t v32 = (void *)sub_1E3E7D6A0();
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = a2;
          *(void *)(v33 + 24) = v21;
          uint64_t v46 = sub_1E3E27F78;
          uint64_t v47 = v33;
          unint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v43 = 1107296256;
          id v44 = sub_1E3CE65F8;
          uint64_t v45 = &block_descriptor_70_0;
          uint64_t v34 = _Block_copy(&aBlock);
          sub_1E3E775E0();
          sub_1E3E7B7A0();
          uint64_t v41 = MEMORY[0x1E4FBC860];
          sub_1E3C33F04();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
          sub_1E3C10DE8((unint64_t *)&qword_1EBFDEE20, (uint64_t *)&unk_1EBFDEE10);
          sub_1E3E7DCC0();
          MEMORY[0x1E4E76FF0](0, v9, v6, v34);
          _Block_release(v34);

          (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v7);
          swift_release();
        }
        return sub_1E3E27EE4((uint64_t)v13);
      }
    }
    __break(1u);
    goto LABEL_59;
  }
  return result;
}

uint64_t sub_1E3E252D8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__keys;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29810);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__legacyKeys, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__episodes;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocClassInstance();
}

uint64_t sub_1E3E25404()
{
  return type metadata accessor for FairPlayDebugController();
}

uint64_t type metadata accessor for FairPlayDebugController()
{
  uint64_t result = qword_1EAE297F0;
  if (!qword_1EAE297F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3E25458()
{
  sub_1E3C95450(319, &qword_1EAE29800, &qword_1EAE24DB8);
  if (v0 <= 0x3F)
  {
    sub_1E3C95450(319, &qword_1EAE29808, &qword_1EAE24DD0);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1E3E2554C()
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29818);
  uint64_t v1 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__keys;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24DB8);
  sub_1E3E7AAB0();
  uint64_t v10 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v10(v8, v7, v4);
  uint64_t v11 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__legacyKeys;
  uint64_t v16 = v9;
  sub_1E3E7AAB0();
  v10(v11, v7, v4);
  uint64_t v12 = v0 + OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController__episodes;
  uint64_t v16 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24DD0);
  sub_1E3E7AAB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v12, v3, v15);
  uint64_t v13 = OBJC_IVAR____TtC10PodcastsUI23FairPlayDebugController_legacyKeyStorage;
  *(void *)(v0 + v13) = objc_msgSend(objc_allocWithZone((Class)sub_1E3E7A000()), sel_init);
  return v0;
}

uint64_t sub_1E3E25784@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E7A9A0();
  *a1 = result;
  return result;
}

uint64_t sub_1E3E257D4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3E25810()
{
  return sub_1E3E23B58(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1E3E25818(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_1E3E25874(void *a1@<X8>)
{
  uint64_t v2 = v1;
  v155[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  v130 = (char *)v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v127 - v7;
  uint64_t v137 = sub_1E3E7A880();
  uint64_t v138 = *(void *)(v137 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v137);
  uint64_t v11 = (char *)v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v134 = (char *)v127 - v13;
  MEMORY[0x1F4188790](v12);
  v131 = (char *)v127 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  unint64_t v132 = (char *)v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v150 = (char *)v127 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v127 - v20;
  uint64_t v22 = sub_1E3E77D00();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v133 = (char *)v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v141 = (char *)v127 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v149 = (char *)v127 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  os_log_type_t v32 = (char *)v127 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)v127 - v33;
  id v136 = v2;
  id v35 = objc_msgSend(v2, sel_assetURL);
  if (!v35) {
    goto LABEL_35;
  }
  unsigned int v36 = v35;
  uint64_t v129 = v8;
  v139 = v34;
  sub_1E3E7CD30();
  uint64_t v153 = v23;

  uint64_t v37 = v153;
  sub_1E3E77CD0();
  swift_bridgeObjectRelease();
  v147 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  uint64_t v148 = v37 + 48;
  if (v147(v21, 1, v22) == 1)
  {
LABEL_3:
    sub_1E3C10CE0((uint64_t)v21, &qword_1EBFE6070);
LABEL_35:
    uint64_t v94 = type metadata accessor for FairPlayKeyViewModel();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(a1, 1, 1, v94);
    return;
  }
  v151 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  uint64_t v152 = v37 + 32;
  v151(v139, v21, v22);
  id v38 = objc_msgSend(self, sel_defaultManager);
  uint64_t v39 = (void *)sub_1E3E77C40();
  type metadata accessor for URLResourceKey(0);
  uint64_t v40 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v41 = (void *)sub_1E3E7D050();
  aBlock[0] = 0;
  id v42 = objc_msgSend(v38, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v39, v41, 0, aBlock);

  id v43 = aBlock[0];
  uint64_t v135 = v22;
  if (!v42)
  {
    id v65 = aBlock[0];
    unint64_t v66 = (void *)sub_1E3E77B30();

    swift_willThrow();
    sub_1E3E7A820();
    id v67 = v66;
    id v68 = v66;
    char v69 = sub_1E3E7A860();
    os_log_type_t v70 = sub_1E3E7D4D0();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = (void *)swift_slowAlloc();
      aBlock[0] = v72;
      *(_DWORD *)uint64_t v71 = 136315138;
      swift_getErrorValue();
      uint64_t v73 = sub_1E3E7E210();
      v155[0] = sub_1E3C150B8(v73, v74, (uint64_t *)aBlock);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1E3BC5000, v69, v70, "FairPlayDebugController: %s", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v72, -1, -1);
      MEMORY[0x1E4E79510](v71, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v138 + 8))(v11, v137);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v139, v135);
    goto LABEL_35;
  }
  uint64_t v44 = sub_1E3E7D060();
  id v45 = v43;

  aBlock[0] = v40;
  uint64_t v46 = v22;
  uint64_t v145 = *(void *)(v44 + 16);
  if (v145)
  {
    v128 = a1;
    unint64_t v47 = 0;
    uint64_t v48 = v153;
    uint64_t v144 = v153 + 56;
    v127[1] = (v153 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v142 = (void (**)(char *, uint64_t))(v153 + 8);
    uint64_t v140 = (v153 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v49 = (uint64_t)v150;
    uint64_t v143 = v44;
    while (1)
    {
      if (v47 >= *(void *)(v44 + 16))
      {
        __break(1u);
LABEL_54:
        __break(1u);
      }
      unint64_t v52 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      uint64_t v53 = *(void *)(v48 + 72);
      uint64_t v54 = *(void (**)(uint64_t, unint64_t, uint64_t))(v48 + 16);
      v54(v49, v44 + v52 + v53 * v47, v46);
      v146 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56);
      v146(v49, 0, 1, v46);
      if (v147((char *)v49, 1, v46) == 1)
      {
        a1 = v128;
        goto LABEL_25;
      }
      v151(v32, (char *)v49, v46);
      uint64_t v55 = v46;
      sub_1E3E77C30();
      char v56 = sub_1E3E7CF30();
      swift_bridgeObjectRelease();
      uint64_t v57 = v149;
      v54((uint64_t)v149, (unint64_t)v32, v55);
      if (v56)
      {
        sub_1E3E77C30();
        uint64_t v58 = v57;
        char v59 = sub_1E3E7CF40();
        swift_bridgeObjectRelease();
        uint64_t v51 = *v142;
        (*v142)(v58, v55);
        if (v59)
        {
          v151(v141, v32, v55);
          char v60 = aBlock[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1E3CC7964(0, v60[2] + 1, 1);
            char v60 = aBlock[0];
          }
          uint64_t v48 = v153;
          unint64_t v62 = v60[2];
          unint64_t v61 = v60[3];
          if (v62 >= v61 >> 1)
          {
            sub_1E3CC7964(v61 > 1, v62 + 1, 1);
            char v60 = aBlock[0];
          }
          v60[2] = v62 + 1;
          uint64_t v63 = (char *)v60 + v52 + v62 * v53;
          uint64_t v64 = v135;
          v151(v63, v141, v135);
          aBlock[0] = v60;
          uint64_t v46 = v64;
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v50 = v57;
        uint64_t v51 = *v142;
        (*v142)(v50, v55);
      }
      uint64_t v46 = v55;
      v51(v32, v55);
      uint64_t v48 = v153;
LABEL_9:
      ++v47;
      uint64_t v44 = v143;
      uint64_t v49 = (uint64_t)v150;
      if (v145 == v47)
      {
        a1 = v128;
        uint64_t v75 = v146;
        goto LABEL_24;
      }
    }
  }
  uint64_t v48 = v153;
  uint64_t v75 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56);
  uint64_t v49 = (uint64_t)v150;
LABEL_24:
  v146 = v75;
  v75(v49, 1, 1, v46);
LABEL_25:
  swift_bridgeObjectRelease();
  sub_1E3C10CE0(v49, &qword_1EBFE6070);
  uint64_t v76 = aBlock[0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE26D78);
  sub_1E3C10DE8(&qword_1EAE29858, (uint64_t *)&unk_1EAE26D78);
  if ((sub_1E3E7D3C0() & 1) == 0)
  {
    swift_release();
    id v86 = v134;
    sub_1E3E7A820();
    id v87 = v136;
    uint64_t v88 = sub_1E3E7A860();
    os_log_type_t v89 = sub_1E3E7D4D0();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = swift_slowAlloc();
      id v91 = (void *)swift_slowAlloc();
      aBlock[0] = v91;
      *(_DWORD *)uint64_t v90 = 141558275;
      v155[0] = 1752392040;
      sub_1E3E7DBD0();
      *(_WORD *)(v90 + 12) = 2081;
      v155[0] = objc_msgSend(v87, sel_storeTrackId);
      uint64_t v92 = sub_1E3E7E0E0();
      v155[0] = sub_1E3C150B8(v92, v93, (uint64_t *)aBlock);
      sub_1E3E7DBD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v88, v89, "FairPlayDebugController: No key file found for asset: %{private,mask.hash}s", (uint8_t *)v90, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v91, -1, -1);
      MEMORY[0x1E4E79510](v90, -1, -1);

      (*(void (**)(char *, uint64_t))(v138 + 8))(v134, v137);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v138 + 8))(v86, v137);
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v139, v135);
    goto LABEL_35;
  }
  unint64_t v77 = v76[2];
  if (v77 >= 2)
  {
    uint64_t v78 = v131;
    sub_1E3E7A820();
    id v79 = v136;
    id v80 = sub_1E3E7A860();
    os_log_type_t v81 = sub_1E3E7D4D0();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = swift_slowAlloc();
      uint64_t v83 = (void *)swift_slowAlloc();
      aBlock[0] = v83;
      *(_DWORD *)uint64_t v82 = 141558275;
      v155[0] = 1752392040;
      sub_1E3E7DBD0();
      *(_WORD *)(v82 + 12) = 2081;
      uint64_t v153 = v82 + 14;
      v155[0] = objc_msgSend(v79, sel_storeTrackId);
      uint64_t v84 = sub_1E3E7E0E0();
      v155[0] = sub_1E3C150B8(v84, v85, (uint64_t *)aBlock);
      sub_1E3E7DBD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E3BC5000, v80, v81, "FairPlayDebugController: More than 1 key file found for asset: %{private,mask.hash}s", (uint8_t *)v82, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v83, -1, -1);
      MEMORY[0x1E4E79510](v82, -1, -1);

      (*(void (**)(char *, uint64_t))(v138 + 8))(v131, v137);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v138 + 8))(v78, v137);
    }
    unint64_t v77 = v76[2];
  }
  uint64_t v95 = v135;
  uint64_t v96 = v133;
  uint64_t v21 = v132;
  if (v77)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v132, (unint64_t)v76+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80)), v135);
    uint64_t v97 = 0;
  }
  else
  {
    uint64_t v97 = 1;
  }
  v146((uint64_t)v21, v97, 1, v95);
  swift_release();
  if (v147(v21, 1, v95) == 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v139, v95);
    goto LABEL_3;
  }
  v151(v96, v21, v95);
  sub_1E3E77CB0();
  id v98 = objc_allocWithZone(MEMORY[0x1E4FB8620]);
  char v99 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v100 = objc_msgSend(v98, sel_initWithPath_, v99);

  v155[0] = 0;
  uint64_t v101 = swift_allocObject();
  *(void *)(v101 + 16) = v155;
  uint64_t v102 = (void *)swift_allocObject();
  v102[2] = sub_1E3E27FCC;
  v102[3] = v101;
  aBlock[4] = sub_1E3E27FD0;
  aBlock[5] = v102;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1E3E25818;
  aBlock[3] = &block_descriptor_64;
  int v103 = _Block_copy(aBlock);
  sub_1E3E775E0();
  swift_release();
  objc_msgSend(v100, sel_enumerateKeyEntriesUsingBlock_, v103);
  _Block_release(v103);
  LOBYTE(v103) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v103) {
    goto LABEL_54;
  }
  id v104 = v136;
  aBlock[0] = objc_msgSend(v136, sel_storeTrackId);
  uint64_t v105 = sub_1E3E7E0E0();
  v149 = v106;
  v150 = (char *)v105;
  uint64_t v153 = sub_1E3E77C30();
  uint64_t v108 = v107;
  id v109 = objc_msgSend(v104, sel_cleanedTitle);
  if (v109)
  {
    v110 = v109;
    uint64_t v111 = sub_1E3E7CD30();
    unint64_t v113 = v112;

    v114 = (void *)v155[0];
    if (v155[0])
    {
LABEL_46:
      id v115 = objc_msgSend(v114, sel_renewalDate);
      if (v115)
      {
        id v116 = v115;
        uint64_t v117 = (uint64_t)v130;
        sub_1E3E77DF0();

        (*(void (**)(char *, uint64_t))(v48 + 8))(v139, v135);
        uint64_t v118 = sub_1E3E77E20();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v117, 0, 1, v118);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v48 + 8))(v139, v135);
        uint64_t v122 = sub_1E3E77E20();
        uint64_t v117 = (uint64_t)v130;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v130, 1, 1, v122);
      }
      uint64_t v121 = (uint64_t)v129;
      sub_1E3E27E7C(v117, (uint64_t)v129);
      uint64_t v119 = v135;
      goto LABEL_52;
    }
  }
  else
  {
    unint64_t v113 = 0xE800000000000000;
    uint64_t v111 = 0x656C746954206F4ELL;
    v114 = (void *)v155[0];
    if (v155[0]) {
      goto LABEL_46;
    }
  }
  uint64_t v119 = v135;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v139, v135);

  uint64_t v120 = sub_1E3E77E20();
  uint64_t v121 = (uint64_t)v129;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v129, 1, 1, v120);
LABEL_52:
  uint64_t v123 = type metadata accessor for FairPlayKeyViewModel();
  v124 = (char *)a1 + *(int *)(v123 + 32);
  v151(v124, v133, v119);
  v146((uint64_t)v124, 0, 1, v119);
  v125 = v149;
  *a1 = v150;
  a1[1] = v125;
  a1[2] = v153;
  a1[3] = v108;
  a1[4] = v111;
  a1[5] = v113;
  sub_1E3E27E7C(v121, (uint64_t)a1 + *(int *)(v123 + 28));
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(a1, 0, 1, v123);
  uint64_t v126 = (void *)v155[0];
  swift_release();
}

void sub_1E3E26BC8(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7CD30();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v7 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_1E3C12B10(0, &qword_1EBFDEE48);
  unint64_t v9 = sub_1E3E7D900();
  unint64_t v10 = v9;
  if (!(v9 >> 62))
  {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();

    uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_12:
    *a1 = v13;
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1E3CC79A0(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    id v29 = v8;
    uint64_t v30 = a1;
    uint64_t v12 = 0;
    uint64_t v13 = v38;
    unint64_t v33 = v10 & 0xC000000000000001;
    long long v31 = xmmword_1E3E95B80;
    unint64_t v35 = v10;
    uint64_t v36 = v3;
    uint64_t v34 = v11;
    uint64_t v32 = v2;
    do
    {
      if (v33) {
        id v14 = (id)MEMORY[0x1E4E77720](v12, v10);
      }
      else {
        id v14 = *(id *)(v10 + 8 * v12 + 32);
      }
      uint64_t v15 = v14;
      id v37 = objc_msgSend(v14, sel_storeTrackId, v29);
      uint64_t v16 = sub_1E3E7E0E0();
      uint64_t v18 = v17;
      id v37 = objc_msgSend(v15, sel_storeTrackId);
      uint64_t v19 = sub_1E3E7E0E0();
      uint64_t v21 = v20;
      uint64_t v22 = v32;
      uint64_t v23 = &v5[*(int *)(v32 + 28)];
      objc_msgSend(v15, sel_expirationDate);
      sub_1E3E77D70();
      uint64_t v24 = sub_1E3E77E20();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
      uint64_t v25 = &v5[*(int *)(v22 + 32)];
      uint64_t v26 = sub_1E3E77D00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);

      *(void *)uint64_t v5 = v16;
      *((void *)v5 + 1) = v18;
      *((void *)v5 + 2) = v19;
      *((void *)v5 + 3) = v21;
      *((_OWORD *)v5 + 2) = v31;
      uint64_t v38 = v13;
      unint64_t v28 = *(void *)(v13 + 16);
      unint64_t v27 = *(void *)(v13 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1E3CC79A0(v27 > 1, v28 + 1, 1);
        uint64_t v13 = v38;
      }
      ++v12;
      *(void *)(v13 + 16) = v28 + 1;
      sub_1E3E27984((uint64_t)v5, v13+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v28);
      unint64_t v10 = v35;
    }
    while (v34 != v12);
    swift_bridgeObjectRelease();

    a1 = v30;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1E3E26F9C()
{
  sub_1E3E7CD30();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  id v3 = objc_msgSend(self, sel_predicateForDownloadedFairPlayEpisodes);
  objc_msgSend(v2, sel_setPredicate_, v3);

  sub_1E3C12B10(0, &qword_1EBFDF310);
  uint64_t v4 = sub_1E3E7D900();

  return v4;
}

uint64_t sub_1E3E270B4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E77D00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_assetURL);
  if (!v9) {
    return 0;
  }
  unint64_t v10 = v9;
  sub_1E3E7CD30();

  sub_1E3E77CD0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1E3C10CE0((uint64_t)v4, &qword_1EBFE6070);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_1E3E77CB0();
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB8620]);
  uint64_t v13 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithPath_, v13);

  uint64_t v22 = 0;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = &v22;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1E3E277E0;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_1E3E27834;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1E3E25818;
  aBlock[3] = &block_descriptor_20_0;
  uint64_t v17 = _Block_copy(aBlock);
  sub_1E3E775E0();
  swift_release();
  objc_msgSend(v14, sel_enumerateKeyEntriesUsingBlock_, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v11 = v22;
    swift_release();
    return v11;
  }
  __break(1u);
  return result;
}

BOOL sub_1E3E273F4(void *a1)
{
  sub_1E3E7CD30();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v3 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_1E3C12B10(0, &qword_1EBFDEE38);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE6108);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E3E86650;
  uint64_t v6 = sub_1E3E7CD30();
  uint64_t v8 = v7;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1E3CDDA5C();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  id v9 = objc_msgSend(a1, sel_storeTrackId);
  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v9);
  *(void *)(v5 + 96) = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
  *(void *)(v5 + 104) = sub_1E3E27768();
  *(void *)(v5 + 72) = v10;
  uint64_t v11 = (void *)sub_1E3E7D450();
  objc_msgSend(v4, sel_setPredicate_, v11);

  objc_msgSend(v4, sel_setFetchLimit_, 1);
  sub_1E3C12B10(0, &qword_1EBFDEE48);
  unint64_t v12 = sub_1E3E7D900();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1E3E7DFC0();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  return v13 == 1;
}

uint64_t sub_1E3E27658(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1E3C50ED4;
  return sub_1E3E23EE4(a1, v4, v5, v7, v6);
}

uint64_t sub_1E3E27718@<X0>(void *a1@<X8>)
{
  return sub_1E3E23A50(a1);
}

uint64_t sub_1E3E27740()
{
  return sub_1E3E23AE0();
}

unint64_t sub_1E3E27768()
{
  unint64_t result = qword_1EBFDEE88;
  if (!qword_1EBFDEE88)
  {
    sub_1E3C12B10(255, (unint64_t *)&qword_1EBFDEE80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFDEE88);
  }
  return result;
}

uint64_t sub_1E3E277D0()
{
  return swift_deallocObject();
}

void sub_1E3E277E0(void *a1)
{
  uint64_t v2 = *(id **)(v1 + 16);
  id v4 = *v2;
  *uint64_t v2 = a1;
  id v3 = a1;
}

uint64_t sub_1E3E27824()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E27834()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1E3E27860()
{
  return sub_1E3E242F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1E3E27868(void *a1@<X8>)
{
}

uint64_t sub_1E3E27874(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1E3C19DC4;
  return sub_1E3E244A8(a1, v4, v5, v7, v6);
}

uint64_t sub_1E3E27934@<X0>(void *a1@<X8>)
{
  return sub_1E3E23A50(a1);
}

uint64_t sub_1E3E2795C()
{
  return sub_1E3E23AE0();
}

uint64_t sub_1E3E27984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FairPlayKeyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_4Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E27A2C()
{
  return sub_1E3E2403C();
}

uint64_t sub_1E3E27A34()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29850);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (uint64_t *)((char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v22 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - v6;
  unint64_t v8 = sub_1E3E26F9C();
  unint64_t v9 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_17:
    unint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease_n();
    return v14;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E3E7DFC0();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = (unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48);
    unint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t v20 = v3;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v15 = (id)MEMORY[0x1E4E77720](v12, v9);
      }
      else {
        id v15 = *(id *)(v9 + 8 * v12 + 32);
      }
      uint64_t v16 = v15;
      sub_1E3E25874(v2);

      if ((*v13)(v2, 1, v3) == 1)
      {
        sub_1E3C10CE0((uint64_t)v2, &qword_1EAE29850);
      }
      else
      {
        sub_1E3E27984((uint64_t)v2, (uint64_t)v7);
        sub_1E3E27984((uint64_t)v7, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v14 = sub_1E3CB862C(0, *(void *)(v14 + 16) + 1, 1, v14);
        }
        unint64_t v18 = *(void *)(v14 + 16);
        unint64_t v17 = *(void *)(v14 + 24);
        if (v18 >= v17 >> 1) {
          unint64_t v14 = sub_1E3CB862C(v17 > 1, v18 + 1, 1, v14);
        }
        *(void *)(v14 + 16) = v18 + 1;
        sub_1E3E27984(v22, v14+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v18);
        uint64_t v3 = v20;
      }
      ++v12;
    }
    while (v10 != v12);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t objectdestroy_7Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3E27D4C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1E3C50ED4;
  return sub_1E3E24198(a1, v4, v5, v7, v6);
}

uint64_t sub_1E3E27E0C@<X0>(void *a1@<X8>)
{
  return sub_1E3E23A50(a1);
}

uint64_t sub_1E3E27E34()
{
  return sub_1E3E23AE0();
}

uint64_t sub_1E3E27E5C()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E27E6C()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E27E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3E27EE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FairPlayKeyViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3E27F40()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E27F78()
{
  return sub_1E3E79FF0();
}

double MTPodcastEpisodeLimit.jsRepresentation(in:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  double result = (double)a1;
  uint64_t v3 = MEMORY[0x1E4F71848];
  *(void *)(a2 + 24) = MEMORY[0x1E4FBB3D0];
  *(void *)(a2 + 32) = v3;
  *(double *)a2 = (double)a1;
  return result;
}

double sub_1E3E27FF4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4F71848];
  double result = (double)*v1;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
  *(void *)(a1 + 32) = v2;
  *(double *)a1 = result;
  return result;
}

void *sub_1E3E28018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  double result = sub_1E3C2386C(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t dispatch thunk of ContextMenuProviding.menu(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t PlayerArtwork.artworkModel(libraryEntity:fallbackWidth:fallbackHeight:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1E3E78630();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E78C10();
  uint64_t v12 = v11;
  uint64_t v40 = sub_1E3E78BD0();
  int v39 = v13;
  uint64_t v38 = sub_1E3E78BF0();
  int v37 = v14;
  sub_1E3E78B80();
  uint64_t v45 = v12;
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1E3E7A4B0();
    int v41 = v19;
    uint64_t v42 = v16;
    swift_bridgeObjectRelease();
    sub_1E3E78B90();
    if (!v20) {
      goto LABEL_6;
    }
LABEL_4:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1E3E7A4B0();
    int v35 = v21;
    uint64_t v36 = v18;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v42 = 0;
  int v41 = 255;
  sub_1E3E78B90();
  if (v17) {
    goto LABEL_4;
  }
LABEL_6:
  uint64_t v36 = 0;
  int v35 = 255;
LABEL_7:
  sub_1E3E78BB0();
  uint64_t v44 = v10;
  if (v22)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1E3E7A4B0();
    int v33 = v24;
    uint64_t v34 = v23;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = 0;
    int v33 = 255;
  }
  sub_1E3E78BA0();
  uint64_t v43 = a4;
  if (!v25)
  {
    uint64_t v26 = a1;
    uint64_t v27 = a2;
    unsigned __int8 v28 = a3;
    sub_1E3E78BC0();
    if (!v29) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  unsigned __int8 v28 = a3;
  swift_bridgeObjectRetain();
  sub_1E3E7A4B0();
  swift_bridgeObjectRelease();
  sub_1E3E78BC0();
  if (v30)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    sub_1E3E7A4B0();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  sub_1E3E793F0();
  uint64_t v54 = v46;
  uint64_t v55 = v47;
  uint64_t v56 = v48;
  uint64_t v57 = v49;
  uint64_t v58 = v50;
  uint64_t v59 = v51;
  uint64_t v60 = v52;
  char v61 = v53;
  sub_1E3E78600();
  sub_1E3E78AC0();
  sub_1E3CE6568(v26, v27, v28);
  return sub_1E3E78730();
}

uint64_t unrecognizedEnumValueEncountered(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1E3E7A880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7A800();
  sub_1E3C114A4(a1, (uint64_t)v19);
  sub_1E3C114A4(a1, (uint64_t)v18);
  uint64_t v6 = sub_1E3E7A860();
  os_log_type_t v7 = sub_1E3E7D4F0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    swift_getDynamicType();
    uint64_t v10 = sub_1E3E7E330();
    v16[0] = sub_1E3C150B8(v10, v11, &v17);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    *(_WORD *)(v8 + 12) = 2080;
    sub_1E3C114A4((uint64_t)v18, (uint64_t)v16);
    uint64_t v12 = sub_1E3E7CD90();
    v16[0] = sub_1E3C150B8(v12, v13, &v17);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
    _os_log_impl(&dword_1E3BC5000, v6, v7, "Unrecognized %s encountered => %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v9, -1, -1);
    MEMORY[0x1E4E79510](v8, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1E3E2872C(void (*a1)(void))
{
  a1();

  return sub_1E3E7E330();
}

uint64_t FetchShowLatestEpisodesIntent.init(show:limit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1E3C3A248(a1, a3);
  uint64_t result = type metadata accessor for FetchShowLatestEpisodesIntent();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for FetchShowLatestEpisodesIntent()
{
  uint64_t result = qword_1EBFE3CC8;
  if (!qword_1EBFE3CC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t static FetchShowLatestEpisodesIntent.kind.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t FetchShowLatestEpisodesIntent.show.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C3A130(v1, a1);
}

uint64_t FetchShowLatestEpisodesIntent.limit.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FetchShowLatestEpisodesIntent() + 20));
}

void sub_1E3E2883C(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x80000001E3E95D60;
}

void *initializeBufferWithCopyOfBuffer for FetchShowLatestEpisodesIntent(void *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v6;
    uint64_t v8 = (void *)*((void *)a2 + 2);
    uint64_t v7 = *((void *)a2 + 3);
    a1[2] = v8;
    a1[3] = v7;
    uint64_t v9 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v9;
    uint64_t v10 = (int *)type metadata accessor for ShowEntity(0);
    uint64_t v11 = v10[8];
    __dst = (char *)v4 + v11;
    char v69 = a2;
    uint64_t v12 = &a2[v11];
    uint64_t v13 = sub_1E3E77D00();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    id v16 = v8;
    swift_bridgeObjectRetain();
    uint64_t v71 = v15;
    uint64_t v74 = v13;
    uint64_t v67 = v14;
    if (v15(v12, 1, v13))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    *(void *)((char *)v4 + v10[9]) = *(void *)&v69[v10[9]];
    *(void *)((char *)v4 + v10[10]) = *(void *)&v69[v10[10]];
    *(void *)((char *)v4 + v10[11]) = *(void *)&v69[v10[11]];
    *(void *)((char *)v4 + v10[12]) = *(void *)&v69[v10[12]];
    *(void *)((char *)v4 + v10[13]) = *(void *)&v69[v10[13]];
    *(void *)((char *)v4 + v10[14]) = *(void *)&v69[v10[14]];
    *(void *)((char *)v4 + v10[15]) = *(void *)&v69[v10[15]];
    *(void *)((char *)v4 + v10[16]) = *(void *)&v69[v10[16]];
    *(void *)((char *)v4 + v10[17]) = *(void *)&v69[v10[17]];
    __dsta = v10;
    uint64_t v19 = v10[18];
    os_log_type_t v70 = (void *)((char *)v4 + v19);
    uint64_t v20 = &v69[v19];
    int v21 = (int *)sub_1E3E78740();
    uint64_t v66 = *((void *)v21 - 1);
    id v68 = *(unsigned int (**)(char *, uint64_t, int *))(v66 + 48);
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    if (v68(v20, 1, v21))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      memcpy(v70, v20, *(void *)(*(void *)(v22 - 8) + 64));
      uint64_t v23 = __dsta;
    }
    else
    {
      uint64_t v24 = *((void *)v20 + 1);
      *os_log_type_t v70 = *(void *)v20;
      v70[1] = v24;
      int v25 = v20[32];
      swift_bridgeObjectRetain();
      if (v25 == 255)
      {
        *((_OWORD *)v70 + 1) = *((_OWORD *)v20 + 1);
        *((unsigned char *)v70 + 32) = v20[32];
      }
      else
      {
        uint64_t v26 = *((void *)v20 + 2);
        uint64_t v27 = *((void *)v20 + 3);
        sub_1E3C2B454(v26, v27, v25);
        v70[2] = v26;
        v70[3] = v27;
        *((unsigned char *)v70 + 32) = v25;
      }
      uint64_t v23 = __dsta;
      *(_OWORD *)(v70 + 5) = *(_OWORD *)(v20 + 40);
      unsigned __int8 v28 = (id *)(v20 + 56);
      int v29 = v20[64];
      if (v29 == 255)
      {
        v70[7] = *v28;
        *((unsigned char *)v70 + 64) = v20[64];
      }
      else
      {
        id v30 = *v28;
        sub_1E3C2B46C(*v28, v20[64]);
        v70[7] = v30;
        *((unsigned char *)v70 + 64) = v29;
      }
      long long v31 = (id *)(v20 + 72);
      int v32 = v20[80];
      if (v32 == 255)
      {
        v70[9] = *v31;
        *((unsigned char *)v70 + 80) = v20[80];
      }
      else
      {
        id v33 = *v31;
        sub_1E3C2B46C(*v31, v20[80]);
        v70[9] = v33;
        *((unsigned char *)v70 + 80) = v32;
      }
      uint64_t v34 = (id *)(v20 + 88);
      int v35 = v20[96];
      if (v35 == 255)
      {
        v70[11] = *v34;
        *((unsigned char *)v70 + 96) = v20[96];
      }
      else
      {
        id v36 = *v34;
        sub_1E3C2B46C(*v34, v20[96]);
        v70[11] = v36;
        *((unsigned char *)v70 + 96) = v35;
      }
      int v37 = (id *)(v20 + 104);
      int v38 = v20[112];
      if (v38 == 255)
      {
        v70[13] = *v37;
        *((unsigned char *)v70 + 112) = v20[112];
      }
      else
      {
        id v39 = *v37;
        sub_1E3C2B46C(*v37, v20[112]);
        v70[13] = v39;
        *((unsigned char *)v70 + 112) = v38;
      }
      uint64_t v40 = (id *)(v20 + 120);
      int v41 = v20[128];
      if (v41 == 255)
      {
        v70[15] = *v40;
        *((unsigned char *)v70 + 128) = v20[128];
      }
      else
      {
        id v42 = *v40;
        sub_1E3C2B46C(*v40, v20[128]);
        v70[15] = v42;
        *((unsigned char *)v70 + 128) = v41;
      }
      *((unsigned char *)v70 + 129) = v20[129];
      uint64_t v43 = v21[11];
      uint64_t v44 = (char *)v70 + v43;
      uint64_t v45 = &v20[v43];
      uint64_t v46 = sub_1E3E78630();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      uint64_t v47 = v21[12];
      uint64_t v48 = (void *)((char *)v70 + v47);
      unsigned __int8 v49 = &v20[v47];
      uint64_t v50 = *((void *)v49 + 1);
      void *v48 = *(void *)v49;
      v48[1] = v50;
      *((unsigned char *)v70 + v21[13]) = v20[v21[13]];
      *((unsigned char *)v70 + v21[14]) = v20[v21[14]];
      *((unsigned char *)v70 + v21[15]) = v20[v21[15]];
      uint64_t v51 = v21[16];
      uint64_t v52 = (void *)((char *)v70 + v51);
      char v53 = &v20[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *uint64_t v52 = *(void *)v53;
      v52[1] = v54;
      uint64_t v55 = *(void (**)(void *, void, uint64_t, int *))(v66 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(v70, 0, 1, v21);
    }
    uint64_t v56 = v23[19];
    uint64_t v57 = (char *)v4 + v56;
    uint64_t v58 = &v69[v56];
    unint64_t v59 = *((void *)v58 + 1);
    if (v59 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    }
    else
    {
      uint64_t v60 = *(void *)v58;
      sub_1E3C14F74(*(void *)v58, *((void *)v58 + 1));
      *(void *)uint64_t v57 = v60;
      *((void *)v57 + 1) = v59;
    }
    uint64_t v61 = v23[20];
    unint64_t v62 = (char *)v4 + v61;
    uint64_t v63 = &v69[v61];
    if (v71(&v69[v61], 1, v74))
    {
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v62, v63, v74);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v62, 0, 1, v74);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(void *)&v69[*(int *)(a3 + 20)];
  }
  return v4;
}

uint64_t destroy for FetchShowLatestEpisodesIntent(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for ShowEntity(0);
  uint64_t v3 = a1 + v2[8];
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v21 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (!v5(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v3, v4);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = a1 + v2[18];
  uint64_t v7 = sub_1E3E78740();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    int v8 = *(unsigned __int8 *)(v6 + 32);
    if (v8 != 255) {
      sub_1E3C2B7BC(*(void *)(v6 + 16), *(void *)(v6 + 24), v8);
    }
    int v9 = *(unsigned __int8 *)(v6 + 64);
    if (v9 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 56), v9);
    }
    int v10 = *(unsigned __int8 *)(v6 + 80);
    if (v10 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 72), v10);
    }
    int v11 = *(unsigned __int8 *)(v6 + 96);
    if (v11 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 88), v11);
    }
    int v12 = *(unsigned __int8 *)(v6 + 112);
    if (v12 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 104), v12);
    }
    int v13 = *(unsigned __int8 *)(v6 + 128);
    if (v13 != 255) {
      sub_1E3C2B7D4(*(id *)(v6 + 120), v13);
    }
    uint64_t v14 = v6 + *(int *)(v7 + 44);
    uint64_t v15 = sub_1E3E78630();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v16 = (uint64_t *)(a1 + v2[19]);
  unint64_t v17 = v16[1];
  if (v17 >> 60 != 15) {
    sub_1E3C2B7E8(*v16, v17);
  }
  uint64_t v18 = a1 + v2[20];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v18, 1, v4);
  if (!result)
  {
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    return v20(v18, v4);
  }
  return result;
}

void *initializeWithCopy for FetchShowLatestEpisodesIntent(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v7 = (void *)*((void *)a2 + 2);
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = v7;
  a1[3] = v6;
  uint64_t v8 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v8;
  int v9 = (int *)type metadata accessor for ShowEntity(0);
  uint64_t v10 = v9[8];
  uint64_t v67 = a1;
  __dst = (char *)a1 + v10;
  int v11 = &a2[v10];
  uint64_t v12 = sub_1E3E77D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  id v15 = v7;
  swift_bridgeObjectRetain();
  char v69 = v14;
  uint64_t v72 = v12;
  uint64_t v65 = v13;
  if (v14(v11, 1, v12))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(__dst, v11, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  *(void *)((char *)v67 + v9[9]) = *(void *)&a2[v9[9]];
  *(void *)((char *)v67 + v9[10]) = *(void *)&a2[v9[10]];
  *(void *)((char *)v67 + v9[11]) = *(void *)&a2[v9[11]];
  *(void *)((char *)v67 + v9[12]) = *(void *)&a2[v9[12]];
  *(void *)((char *)v67 + v9[13]) = *(void *)&a2[v9[13]];
  *(void *)((char *)v67 + v9[14]) = *(void *)&a2[v9[14]];
  *(void *)((char *)v67 + v9[15]) = *(void *)&a2[v9[15]];
  *(void *)((char *)v67 + v9[16]) = *(void *)&a2[v9[16]];
  *(void *)((char *)v67 + v9[17]) = *(void *)&a2[v9[17]];
  __dsta = v9;
  uint64_t v17 = v9[18];
  id v68 = (void *)((char *)v67 + v17);
  uint64_t v18 = &a2[v17];
  uint64_t v19 = (int *)sub_1E3E78740();
  uint64_t v64 = *((void *)v19 - 1);
  uint64_t v66 = *(unsigned int (**)(char *, uint64_t, int *))(v64 + 48);
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v66(v18, 1, v19))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v68, v18, *(void *)(*(void *)(v20 - 8) + 64));
    uint64_t v21 = __dsta;
  }
  else
  {
    uint64_t v22 = *((void *)v18 + 1);
    void *v68 = *(void *)v18;
    v68[1] = v22;
    int v23 = v18[32];
    swift_bridgeObjectRetain();
    if (v23 == 255)
    {
      *((_OWORD *)v68 + 1) = *((_OWORD *)v18 + 1);
      *((unsigned char *)v68 + 32) = v18[32];
    }
    else
    {
      uint64_t v24 = *((void *)v18 + 2);
      uint64_t v25 = *((void *)v18 + 3);
      sub_1E3C2B454(v24, v25, v23);
      v68[2] = v24;
      v68[3] = v25;
      *((unsigned char *)v68 + 32) = v23;
    }
    uint64_t v21 = __dsta;
    *(_OWORD *)(v68 + 5) = *(_OWORD *)(v18 + 40);
    uint64_t v26 = (id *)(v18 + 56);
    int v27 = v18[64];
    if (v27 == 255)
    {
      v68[7] = *v26;
      *((unsigned char *)v68 + 64) = v18[64];
    }
    else
    {
      id v28 = *v26;
      sub_1E3C2B46C(*v26, v18[64]);
      v68[7] = v28;
      *((unsigned char *)v68 + 64) = v27;
    }
    int v29 = (id *)(v18 + 72);
    int v30 = v18[80];
    if (v30 == 255)
    {
      v68[9] = *v29;
      *((unsigned char *)v68 + 80) = v18[80];
    }
    else
    {
      id v31 = *v29;
      sub_1E3C2B46C(*v29, v18[80]);
      v68[9] = v31;
      *((unsigned char *)v68 + 80) = v30;
    }
    int v32 = (id *)(v18 + 88);
    int v33 = v18[96];
    if (v33 == 255)
    {
      v68[11] = *v32;
      *((unsigned char *)v68 + 96) = v18[96];
    }
    else
    {
      id v34 = *v32;
      sub_1E3C2B46C(*v32, v18[96]);
      v68[11] = v34;
      *((unsigned char *)v68 + 96) = v33;
    }
    int v35 = (id *)(v18 + 104);
    int v36 = v18[112];
    if (v36 == 255)
    {
      v68[13] = *v35;
      *((unsigned char *)v68 + 112) = v18[112];
    }
    else
    {
      id v37 = *v35;
      sub_1E3C2B46C(*v35, v18[112]);
      v68[13] = v37;
      *((unsigned char *)v68 + 112) = v36;
    }
    int v38 = (id *)(v18 + 120);
    int v39 = v18[128];
    if (v39 == 255)
    {
      v68[15] = *v38;
      *((unsigned char *)v68 + 128) = v18[128];
    }
    else
    {
      id v40 = *v38;
      sub_1E3C2B46C(*v38, v18[128]);
      v68[15] = v40;
      *((unsigned char *)v68 + 128) = v39;
    }
    *((unsigned char *)v68 + 129) = v18[129];
    uint64_t v41 = v19[11];
    id v42 = (char *)v68 + v41;
    uint64_t v43 = &v18[v41];
    uint64_t v44 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    uint64_t v45 = v19[12];
    uint64_t v46 = (void *)((char *)v68 + v45);
    uint64_t v47 = &v18[v45];
    uint64_t v48 = *((void *)v47 + 1);
    void *v46 = *(void *)v47;
    v46[1] = v48;
    *((unsigned char *)v68 + v19[13]) = v18[v19[13]];
    *((unsigned char *)v68 + v19[14]) = v18[v19[14]];
    *((unsigned char *)v68 + v19[15]) = v18[v19[15]];
    uint64_t v49 = v19[16];
    uint64_t v50 = (void *)((char *)v68 + v49);
    uint64_t v51 = &v18[v49];
    uint64_t v52 = *((void *)v51 + 1);
    *uint64_t v50 = *(void *)v51;
    v50[1] = v52;
    char v53 = *(void (**)(void *, void, uint64_t, int *))(v64 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53(v68, 0, 1, v19);
  }
  uint64_t v54 = v21[19];
  uint64_t v55 = (char *)v67 + v54;
  uint64_t v56 = &a2[v54];
  unint64_t v57 = *((void *)v56 + 1);
  if (v57 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  }
  else
  {
    uint64_t v58 = *(void *)v56;
    sub_1E3C14F74(*(void *)v56, *((void *)v56 + 1));
    *(void *)uint64_t v55 = v58;
    *((void *)v55 + 1) = v57;
  }
  uint64_t v59 = v21[20];
  uint64_t v60 = (char *)v67 + v59;
  uint64_t v61 = &a2[v59];
  if (v69(&a2[v59], 1, v72))
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v60, v61, v72);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v60, 0, 1, v72);
  }
  *(void *)((char *)v67 + *(int *)(a3 + 20)) = *(void *)&a2[*(int *)(a3 + 20)];
  return v67;
}

char *assignWithCopy for FetchShowLatestEpisodesIntent(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)*((void *)a1 + 2);
  uint64_t v7 = (void *)a2[2];
  *((void *)a1 + 2) = v7;
  id v8 = v7;

  *((void *)a1 + 3) = a2[3];
  *((void *)a1 + 4) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 5) = a2[5];
  uint64_t v148 = (int *)type metadata accessor for ShowEntity(0);
  uint64_t v9 = v148[8];
  uint64_t v10 = &a1[v9];
  int v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1E3E77D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  v149 = v14;
  int v16 = v14(v11, 1, v12);
  uint64_t v150 = a3;
  uint64_t v146 = v13;
  uint64_t v147 = v12;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  *(void *)&a1[v148[9]] = *(void *)((char *)a2 + v148[9]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[v148[10]] = *(void *)((char *)a2 + v148[10]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[v148[11]] = *(void *)((char *)a2 + v148[11]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[v148[12]] = *(void *)((char *)a2 + v148[12]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[v148[13]] = *(void *)((char *)a2 + v148[13]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[v148[14]] = *(void *)((char *)a2 + v148[14]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[v148[15]] = *(void *)((char *)a2 + v148[15]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[v148[16]] = *(void *)((char *)a2 + v148[16]);
  sub_1E3E775E0();
  swift_release();
  *(void *)&a1[v148[17]] = *(void *)((char *)a2 + v148[17]);
  sub_1E3E775E0();
  swift_release();
  uint64_t v18 = v148[18];
  uint64_t v19 = (uint64_t)&a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_1E3E78740();
  uint64_t v22 = *((void *)v21 - 1);
  int v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23((uint64_t)v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v32 = (long long *)(v19 + 16);
      int v33 = (long long *)(v20 + 16);
      int v34 = v20[32];
      if (*(unsigned __int8 *)(v19 + 32) == 255)
      {
        if (v34 == 255)
        {
          long long v75 = *v33;
          *(unsigned char *)(v19 + 32) = v20[32];
          long long *v32 = v75;
        }
        else
        {
          uint64_t v72 = *((void *)v20 + 2);
          uint64_t v73 = *((void *)v20 + 3);
          sub_1E3C2B454(v72, v73, v20[32]);
          *(void *)(v19 + 16) = v72;
          *(void *)(v19 + 24) = v73;
          *(unsigned char *)(v19 + 32) = v34;
        }
      }
      else if (v34 == 255)
      {
        sub_1E3C2CB50(v19 + 16);
        char v74 = v20[32];
        long long *v32 = *v33;
        *(unsigned char *)(v19 + 32) = v74;
      }
      else
      {
        uint64_t v36 = *((void *)v20 + 2);
        uint64_t v35 = *((void *)v20 + 3);
        sub_1E3C2B454(v36, v35, v20[32]);
        uint64_t v37 = *(void *)(v19 + 16);
        uint64_t v38 = *(void *)(v19 + 24);
        *(void *)(v19 + 16) = v36;
        *(void *)(v19 + 24) = v35;
        unsigned __int8 v39 = *(unsigned char *)(v19 + 32);
        *(unsigned char *)(v19 + 32) = v34;
        sub_1E3C2B7BC(v37, v38, v39);
      }
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      *(void *)(v19 + 48) = *((void *)v20 + 6);
      uint64_t v76 = (void **)(v19 + 56);
      unint64_t v77 = (void **)(v20 + 56);
      int v78 = v20[64];
      if (*(unsigned __int8 *)(v19 + 64) == 255)
      {
        if (v78 == 255)
        {
          uint64_t v84 = *v77;
          *(unsigned char *)(v19 + 64) = v20[64];
          *uint64_t v76 = v84;
        }
        else
        {
          uint64_t v82 = *v77;
          sub_1E3C2B46C(v82, v20[64]);
          *(void *)(v19 + 56) = v82;
          *(unsigned char *)(v19 + 64) = v78;
        }
      }
      else if (v78 == 255)
      {
        sub_1E3C2CBA4(v19 + 56);
        char v83 = v20[64];
        *uint64_t v76 = *v77;
        *(unsigned char *)(v19 + 64) = v83;
      }
      else
      {
        id v79 = *v77;
        sub_1E3C2B46C(v79, v20[64]);
        id v80 = *(void **)(v19 + 56);
        *(void *)(v19 + 56) = v79;
        char v81 = *(unsigned char *)(v19 + 64);
        *(unsigned char *)(v19 + 64) = v78;
        sub_1E3C2B7D4(v80, v81);
      }
      unint64_t v85 = (void **)(v19 + 72);
      id v86 = (void **)(v20 + 72);
      int v87 = v20[80];
      if (*(unsigned __int8 *)(v19 + 80) == 255)
      {
        if (v87 == 255)
        {
          unint64_t v93 = *v86;
          *(unsigned char *)(v19 + 80) = v20[80];
          *unint64_t v85 = v93;
        }
        else
        {
          id v91 = *v86;
          sub_1E3C2B46C(v91, v20[80]);
          *(void *)(v19 + 72) = v91;
          *(unsigned char *)(v19 + 80) = v87;
        }
      }
      else if (v87 == 255)
      {
        sub_1E3C2CBA4(v19 + 72);
        char v92 = v20[80];
        *unint64_t v85 = *v86;
        *(unsigned char *)(v19 + 80) = v92;
      }
      else
      {
        uint64_t v88 = *v86;
        sub_1E3C2B46C(v88, v20[80]);
        os_log_type_t v89 = *(void **)(v19 + 72);
        *(void *)(v19 + 72) = v88;
        char v90 = *(unsigned char *)(v19 + 80);
        *(unsigned char *)(v19 + 80) = v87;
        sub_1E3C2B7D4(v89, v90);
      }
      uint64_t v94 = (void **)(v19 + 88);
      uint64_t v95 = (void **)(v20 + 88);
      int v96 = v20[96];
      if (*(unsigned __int8 *)(v19 + 96) == 255)
      {
        if (v96 == 255)
        {
          uint64_t v102 = *v95;
          *(unsigned char *)(v19 + 96) = v20[96];
          *uint64_t v94 = v102;
        }
        else
        {
          id v100 = *v95;
          sub_1E3C2B46C(v100, v20[96]);
          *(void *)(v19 + 88) = v100;
          *(unsigned char *)(v19 + 96) = v96;
        }
      }
      else if (v96 == 255)
      {
        sub_1E3C2CBA4(v19 + 88);
        char v101 = v20[96];
        *uint64_t v94 = *v95;
        *(unsigned char *)(v19 + 96) = v101;
      }
      else
      {
        uint64_t v97 = *v95;
        sub_1E3C2B46C(v97, v20[96]);
        id v98 = *(void **)(v19 + 88);
        *(void *)(v19 + 88) = v97;
        char v99 = *(unsigned char *)(v19 + 96);
        *(unsigned char *)(v19 + 96) = v96;
        sub_1E3C2B7D4(v98, v99);
      }
      int v103 = (void **)(v19 + 104);
      id v104 = (void **)(v20 + 104);
      int v105 = v20[112];
      if (*(unsigned __int8 *)(v19 + 112) == 255)
      {
        if (v105 == 255)
        {
          uint64_t v111 = *v104;
          *(unsigned char *)(v19 + 112) = v20[112];
          *int v103 = v111;
        }
        else
        {
          id v109 = *v104;
          sub_1E3C2B46C(v109, v20[112]);
          *(void *)(v19 + 104) = v109;
          *(unsigned char *)(v19 + 112) = v105;
        }
      }
      else if (v105 == 255)
      {
        sub_1E3C2CBA4(v19 + 104);
        char v110 = v20[112];
        *int v103 = *v104;
        *(unsigned char *)(v19 + 112) = v110;
      }
      else
      {
        char v106 = *v104;
        sub_1E3C2B46C(v106, v20[112]);
        uint64_t v107 = *(void **)(v19 + 104);
        *(void *)(v19 + 104) = v106;
        char v108 = *(unsigned char *)(v19 + 112);
        *(unsigned char *)(v19 + 112) = v105;
        sub_1E3C2B7D4(v107, v108);
      }
      unint64_t v112 = (void **)(v19 + 120);
      unint64_t v113 = (void **)(v20 + 120);
      int v114 = v20[128];
      if (*(unsigned __int8 *)(v19 + 128) == 255)
      {
        if (v114 == 255)
        {
          uint64_t v120 = *v113;
          *(unsigned char *)(v19 + 128) = v20[128];
          void *v112 = v120;
        }
        else
        {
          uint64_t v118 = *v113;
          sub_1E3C2B46C(v118, v20[128]);
          *(void *)(v19 + 120) = v118;
          *(unsigned char *)(v19 + 128) = v114;
        }
      }
      else if (v114 == 255)
      {
        sub_1E3C2CBA4(v19 + 120);
        char v119 = v20[128];
        void *v112 = *v113;
        *(unsigned char *)(v19 + 128) = v119;
      }
      else
      {
        id v115 = *v113;
        sub_1E3C2B46C(v115, v20[128]);
        id v116 = *(void **)(v19 + 120);
        *(void *)(v19 + 120) = v115;
        char v117 = *(unsigned char *)(v19 + 128);
        *(unsigned char *)(v19 + 128) = v114;
        sub_1E3C2B7D4(v116, v117);
      }
      uint64_t v31 = v147;
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v121 = v21[11];
      uint64_t v122 = v19 + v121;
      uint64_t v123 = &v20[v121];
      uint64_t v124 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v124 - 8) + 24))(v122, v123, v124);
      uint64_t v125 = v21[12];
      uint64_t v126 = (void *)(v19 + v125);
      v127 = &v20[v125];
      *uint64_t v126 = *(void *)v127;
      v126[1] = *((void *)v127 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      uint64_t v128 = v21[16];
      uint64_t v129 = (void *)(v19 + v128);
      v130 = &v20[v128];
      *uint64_t v129 = *(void *)v130;
      v129[1] = *((void *)v130 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_1E3C2CBF8(v19);
LABEL_13:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v29 - 8) + 64));
    uint64_t v30 = v150;
    uint64_t v31 = v12;
    goto LABEL_76;
  }
  if (v25) {
    goto LABEL_13;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  int v26 = v20[32];
  swift_bridgeObjectRetain();
  if (v26 == 255)
  {
    long long v40 = *((_OWORD *)v20 + 1);
    *(unsigned char *)(v19 + 32) = v20[32];
    *(_OWORD *)(v19 + 16) = v40;
  }
  else
  {
    uint64_t v27 = *((void *)v20 + 2);
    uint64_t v28 = *((void *)v20 + 3);
    sub_1E3C2B454(v27, v28, v26);
    *(void *)(v19 + 16) = v27;
    *(void *)(v19 + 24) = v28;
    *(unsigned char *)(v19 + 32) = v26;
  }
  *(void *)(v19 + 40) = *((void *)v20 + 5);
  *(void *)(v19 + 48) = *((void *)v20 + 6);
  uint64_t v41 = (id *)(v20 + 56);
  int v42 = v20[64];
  if (v42 == 255)
  {
    id v44 = *v41;
    *(unsigned char *)(v19 + 64) = v20[64];
    *(void *)(v19 + 56) = v44;
  }
  else
  {
    id v43 = *v41;
    sub_1E3C2B46C(*v41, v20[64]);
    *(void *)(v19 + 56) = v43;
    *(unsigned char *)(v19 + 64) = v42;
  }
  uint64_t v31 = v147;
  uint64_t v45 = (id *)(v20 + 72);
  int v46 = v20[80];
  if (v46 == 255)
  {
    id v48 = *v45;
    *(unsigned char *)(v19 + 80) = v20[80];
    *(void *)(v19 + 72) = v48;
  }
  else
  {
    id v47 = *v45;
    sub_1E3C2B46C(*v45, v20[80]);
    *(void *)(v19 + 72) = v47;
    *(unsigned char *)(v19 + 80) = v46;
  }
  uint64_t v49 = (id *)(v20 + 88);
  int v50 = v20[96];
  if (v50 == 255)
  {
    id v52 = *v49;
    *(unsigned char *)(v19 + 96) = v20[96];
    *(void *)(v19 + 88) = v52;
  }
  else
  {
    id v51 = *v49;
    sub_1E3C2B46C(*v49, v20[96]);
    *(void *)(v19 + 88) = v51;
    *(unsigned char *)(v19 + 96) = v50;
  }
  char v53 = (id *)(v20 + 104);
  int v54 = v20[112];
  if (v54 == 255)
  {
    id v56 = *v53;
    *(unsigned char *)(v19 + 112) = v20[112];
    *(void *)(v19 + 104) = v56;
  }
  else
  {
    id v55 = *v53;
    sub_1E3C2B46C(*v53, v20[112]);
    *(void *)(v19 + 104) = v55;
    *(unsigned char *)(v19 + 112) = v54;
  }
  unint64_t v57 = (id *)(v20 + 120);
  int v58 = v20[128];
  if (v58 == 255)
  {
    id v60 = *v57;
    *(unsigned char *)(v19 + 128) = v20[128];
    *(void *)(v19 + 120) = v60;
  }
  else
  {
    id v59 = *v57;
    sub_1E3C2B46C(*v57, v20[128]);
    *(void *)(v19 + 120) = v59;
    *(unsigned char *)(v19 + 128) = v58;
  }
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v61 = v21[11];
  uint64_t v62 = v19 + v61;
  uint64_t v63 = &v20[v61];
  uint64_t v64 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
  uint64_t v65 = v21[12];
  uint64_t v66 = (void *)(v19 + v65);
  uint64_t v67 = &v20[v65];
  *uint64_t v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v68 = v21[16];
  char v69 = (void *)(v19 + v68);
  os_log_type_t v70 = &v20[v68];
  void *v69 = *(void *)v70;
  v69[1] = *((void *)v70 + 1);
  uint64_t v71 = *(void (**)(uint64_t, void, uint64_t, int *))(v22 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v71(v19, 0, 1, v21);
LABEL_75:
  uint64_t v30 = v150;
LABEL_76:
  uint64_t v131 = v148[19];
  unint64_t v132 = (uint64_t *)&a1[v131];
  uint64_t v133 = (void *)((char *)a2 + v131);
  unint64_t v134 = *(void *)((char *)a2 + v131 + 8);
  if (*(void *)&a1[v131 + 8] >> 60 == 15)
  {
    if (v134 >> 60 != 15)
    {
      uint64_t v135 = *v133;
      sub_1E3C14F74(v135, v134);
      *unint64_t v132 = v135;
      v132[1] = v134;
      goto LABEL_83;
    }
    goto LABEL_81;
  }
  if (v134 >> 60 == 15)
  {
    sub_1E3C2CC54((uint64_t)v132);
LABEL_81:
    *(_OWORD *)unint64_t v132 = *(_OWORD *)v133;
    goto LABEL_83;
  }
  uint64_t v136 = *v133;
  sub_1E3C14F74(v136, v134);
  uint64_t v137 = *v132;
  unint64_t v138 = v132[1];
  *unint64_t v132 = v136;
  v132[1] = v134;
  sub_1E3C2B7E8(v137, v138);
LABEL_83:
  uint64_t v139 = v148[20];
  uint64_t v140 = &a1[v139];
  uint64_t v141 = (char *)a2 + v139;
  int v142 = v149(&a1[v139], 1, v31);
  int v143 = v149(v141, 1, v31);
  if (!v142)
  {
    if (!v143)
    {
      (*(void (**)(char *, char *, uint64_t))(v146 + 24))(v140, v141, v31);
      goto LABEL_89;
    }
    (*(void (**)(char *, uint64_t))(v146 + 8))(v140, v31);
    goto LABEL_88;
  }
  if (v143)
  {
LABEL_88:
    uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v140, v141, *(void *)(*(void *)(v144 - 8) + 64));
    goto LABEL_89;
  }
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v140, v141, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v146 + 56))(v140, 0, 1, v31);
LABEL_89:
  *(void *)&a1[*(int *)(v30 + 20)] = *(void *)((char *)a2 + *(int *)(v30 + 20));
  return a1;
}

uint64_t initializeWithTake for FetchShowLatestEpisodesIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = (int *)type metadata accessor for ShowEntity(0);
  uint64_t v7 = v6[8];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1E3E77D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v32 = v11;
  if (v31(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  *(void *)(a1 + v6[10]) = *(void *)(a2 + v6[10]);
  *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
  *(void *)(a1 + v6[14]) = *(void *)(a2 + v6[14]);
  *(void *)(a1 + v6[15]) = *(void *)(a2 + v6[15]);
  *(void *)(a1 + v6[16]) = *(void *)(a2 + v6[16]);
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  uint64_t v13 = v6[18];
  uint64_t v14 = (_OWORD *)(a1 + v13);
  int v15 = (_OWORD *)(a2 + v13);
  int v16 = (int *)sub_1E3E78740();
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    long long v19 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v19;
    *((unsigned char *)v14 + 32) = *((unsigned char *)v15 + 32);
    *(_OWORD *)((char *)v14 + 40) = *(_OWORD *)((char *)v15 + 40);
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((unsigned char *)v14 + 64) = *((unsigned char *)v15 + 64);
    *(_OWORD *)((char *)v14 + 113) = *(_OWORD *)((char *)v15 + 113);
    *(_OWORD *)((char *)v14 + 104) = *(_OWORD *)((char *)v15 + 104);
    *(_OWORD *)((char *)v14 + 88) = *(_OWORD *)((char *)v15 + 88);
    *(_OWORD *)((char *)v14 + 72) = *(_OWORD *)((char *)v15 + 72);
    *((unsigned char *)v14 + 129) = *((unsigned char *)v15 + 129);
    uint64_t v20 = v16[11];
    uint64_t v29 = (char *)v14 + v20;
    uint64_t v30 = a3;
    uint64_t v21 = (char *)v15 + v20;
    uint64_t v22 = sub_1E3E78630();
    int v23 = v21;
    a3 = v30;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v29, v23, v22);
    *(_OWORD *)((char *)v14 + v16[12]) = *(_OWORD *)((char *)v15 + v16[12]);
    *((unsigned char *)v14 + v16[13]) = *((unsigned char *)v15 + v16[13]);
    *((unsigned char *)v14 + v16[14]) = *((unsigned char *)v15 + v16[14]);
    *((unsigned char *)v14 + v16[15]) = *((unsigned char *)v15 + v16[15]);
    *(_OWORD *)((char *)v14 + v16[16]) = *(_OWORD *)((char *)v15 + v16[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)(a1 + v6[19]) = *(_OWORD *)(a2 + v6[19]);
  uint64_t v24 = v6[20];
  int v25 = (void *)(a1 + v24);
  int v26 = (const void *)(a2 + v24);
  if (v31((const void *)(a2 + v24), 1, v10))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v25, v26, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v25, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

char *assignWithTake for FetchShowLatestEpisodesIntent(char *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)*((void *)a1 + 2);
  *((void *)a1 + 2) = a2[2];

  uint64_t v7 = a2[4];
  *((void *)a1 + 3) = a2[3];
  *((void *)a1 + 4) = v7;
  swift_bridgeObjectRelease();
  *((void *)a1 + 5) = a2[5];
  id v8 = (int *)type metadata accessor for ShowEntity(0);
  uint64_t v9 = v8[8];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1E3E77D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  os_log_type_t v89 = v14;
  int v16 = v14(v11, 1, v12);
  uint64_t v87 = v13;
  uint64_t v88 = v12;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  *(void *)&a1[v8[9]] = *(void *)((char *)a2 + v8[9]);
  swift_release();
  *(void *)&a1[v8[10]] = *(void *)((char *)a2 + v8[10]);
  swift_release();
  *(void *)&a1[v8[11]] = *(void *)((char *)a2 + v8[11]);
  swift_release();
  *(void *)&a1[v8[12]] = *(void *)((char *)a2 + v8[12]);
  swift_release();
  *(void *)&a1[v8[13]] = *(void *)((char *)a2 + v8[13]);
  swift_release();
  *(void *)&a1[v8[14]] = *(void *)((char *)a2 + v8[14]);
  swift_release();
  *(void *)&a1[v8[15]] = *(void *)((char *)a2 + v8[15]);
  swift_release();
  *(void *)&a1[v8[16]] = *(void *)((char *)a2 + v8[16]);
  swift_release();
  *(void *)&a1[v8[17]] = *(void *)((char *)a2 + v8[17]);
  swift_release();
  uint64_t v18 = v8[18];
  uint64_t v19 = (uint64_t)&a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)sub_1E3E78740();
  uint64_t v22 = *((void *)v21 - 1);
  int v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23((uint64_t)v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      long long v26 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 16) = v26;
      *(unsigned char *)(v19 + 32) = v20[32];
      *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
      *(void *)(v19 + 56) = *((void *)v20 + 7);
      *(unsigned char *)(v19 + 64) = v20[64];
      *(_OWORD *)(v19 + 113) = *(_OWORD *)(v20 + 113);
      *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
      *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
      *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
      *(unsigned char *)(v19 + 129) = v20[129];
      uint64_t v27 = v21[11];
      uint64_t v28 = v19 + v27;
      uint64_t v29 = &v20[v27];
      uint64_t v30 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)(v19 + v21[12]) = *(_OWORD *)&v20[v21[12]];
      *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
      *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
      *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
      *(_OWORD *)(v19 + v21[16]) = *(_OWORD *)&v20[v21[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
      uint64_t v32 = a3;
      goto LABEL_14;
    }
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v19, v20, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  if (v25)
  {
    sub_1E3C2CBF8(v19);
    goto LABEL_12;
  }
  uint64_t v46 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v46;
  swift_bridgeObjectRelease();
  id v47 = v20 + 16;
  int v48 = *(unsigned __int8 *)(v19 + 32);
  if (v48 != 255)
  {
    int v49 = v20[32];
    if (v49 != 255)
    {
      uint64_t v50 = *(void *)(v19 + 16);
      uint64_t v51 = *(void *)(v19 + 24);
      *(_OWORD *)(v19 + 16) = *v47;
      *(unsigned char *)(v19 + 32) = v49;
      sub_1E3C2B7BC(v50, v51, v48);
      goto LABEL_33;
    }
    sub_1E3C2CB50(v19 + 16);
  }
  *(_OWORD *)(v19 + 16) = *v47;
  *(unsigned char *)(v19 + 32) = v20[32];
LABEL_33:
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
  id v52 = v20 + 56;
  int v53 = *(unsigned __int8 *)(v19 + 64);
  if (v53 != 255)
  {
    int v54 = v20[64];
    if (v54 != 255)
    {
      id v55 = *(void **)(v19 + 56);
      *(void *)(v19 + 56) = *v52;
      *(unsigned char *)(v19 + 64) = v54;
      sub_1E3C2B7D4(v55, v53);
      goto LABEL_38;
    }
    sub_1E3C2CBA4(v19 + 56);
  }
  *(void *)(v19 + 56) = *v52;
  *(unsigned char *)(v19 + 64) = v20[64];
LABEL_38:
  uint64_t v32 = a3;
  id v56 = v20 + 72;
  int v57 = *(unsigned __int8 *)(v19 + 80);
  if (v57 != 255)
  {
    int v58 = v20[80];
    if (v58 != 255)
    {
      id v59 = *(void **)(v19 + 72);
      *(void *)(v19 + 72) = *v56;
      *(unsigned char *)(v19 + 80) = v58;
      sub_1E3C2B7D4(v59, v57);
      goto LABEL_43;
    }
    sub_1E3C2CBA4(v19 + 72);
  }
  *(void *)(v19 + 72) = *v56;
  *(unsigned char *)(v19 + 80) = v20[80];
LABEL_43:
  id v60 = v20 + 88;
  int v61 = *(unsigned __int8 *)(v19 + 96);
  if (v61 != 255)
  {
    int v62 = v20[96];
    if (v62 != 255)
    {
      uint64_t v63 = *(void **)(v19 + 88);
      *(void *)(v19 + 88) = *v60;
      *(unsigned char *)(v19 + 96) = v62;
      sub_1E3C2B7D4(v63, v61);
      goto LABEL_48;
    }
    sub_1E3C2CBA4(v19 + 88);
  }
  *(void *)(v19 + 88) = *v60;
  *(unsigned char *)(v19 + 96) = v20[96];
LABEL_48:
  uint64_t v64 = v20 + 104;
  int v65 = *(unsigned __int8 *)(v19 + 112);
  if (v65 != 255)
  {
    int v66 = v20[112];
    if (v66 != 255)
    {
      uint64_t v67 = *(void **)(v19 + 104);
      *(void *)(v19 + 104) = *v64;
      *(unsigned char *)(v19 + 112) = v66;
      sub_1E3C2B7D4(v67, v65);
      goto LABEL_53;
    }
    sub_1E3C2CBA4(v19 + 104);
  }
  *(void *)(v19 + 104) = *v64;
  *(unsigned char *)(v19 + 112) = v20[112];
LABEL_53:
  uint64_t v68 = v20 + 120;
  int v69 = *(unsigned __int8 *)(v19 + 128);
  if (v69 == 255)
  {
LABEL_57:
    *(void *)(v19 + 120) = *v68;
    *(unsigned char *)(v19 + 128) = v20[128];
    goto LABEL_58;
  }
  int v70 = v20[128];
  if (v70 == 255)
  {
    sub_1E3C2CBA4(v19 + 120);
    goto LABEL_57;
  }
  uint64_t v71 = *(void **)(v19 + 120);
  *(void *)(v19 + 120) = *v68;
  *(unsigned char *)(v19 + 128) = v70;
  sub_1E3C2B7D4(v71, v69);
LABEL_58:
  *(unsigned char *)(v19 + 129) = v20[129];
  uint64_t v72 = v21[11];
  uint64_t v73 = v19 + v72;
  char v74 = &v20[v72];
  uint64_t v75 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v75 - 8) + 40))(v73, v74, v75);
  uint64_t v76 = v21[12];
  unint64_t v77 = (void *)(v19 + v76);
  int v78 = &v20[v76];
  uint64_t v80 = *(void *)v78;
  uint64_t v79 = *((void *)v78 + 1);
  *unint64_t v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + v21[13]) = v20[v21[13]];
  *(unsigned char *)(v19 + v21[14]) = v20[v21[14]];
  *(unsigned char *)(v19 + v21[15]) = v20[v21[15]];
  uint64_t v81 = v21[16];
  uint64_t v82 = (void *)(v19 + v81);
  char v83 = &v20[v81];
  uint64_t v85 = *(void *)v83;
  uint64_t v84 = *((void *)v83 + 1);
  *uint64_t v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v33 = v8[19];
  uint64_t v34 = (uint64_t)&a1[v33];
  uint64_t v35 = (char *)a2 + v33;
  unint64_t v36 = *(void *)&a1[v33 + 8];
  if (v36 >> 60 == 15)
  {
LABEL_17:
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    goto LABEL_19;
  }
  unint64_t v37 = *((void *)v35 + 1);
  if (v37 >> 60 == 15)
  {
    sub_1E3C2CC54(v34);
    goto LABEL_17;
  }
  uint64_t v38 = *(void *)v34;
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v37;
  sub_1E3C2B7E8(v38, v36);
LABEL_19:
  uint64_t v39 = v8[20];
  long long v40 = &a1[v39];
  uint64_t v41 = (char *)a2 + v39;
  int v42 = v89(&a1[v39], 1, v88);
  int v43 = v89(v41, 1, v88);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v40, v41, v88);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v87 + 8))(v40, v88);
    goto LABEL_24;
  }
  if (v43)
  {
LABEL_24:
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v40, v41, v88);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v40, 0, 1, v88);
LABEL_25:
  *(void *)&a1[*(int *)(v32 + 20)] = *(void *)((char *)a2 + *(int *)(v32 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchShowLatestEpisodesIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E2B158);
}

uint64_t sub_1E3E2B158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShowEntity(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FetchShowLatestEpisodesIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E2B1D8);
}

uint64_t sub_1E3E2B1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShowEntity(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1E3E2B248()
{
  uint64_t result = type metadata accessor for ShowEntity(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *static Dependencies.allDependencies()()
{
  uint64_t v108 = sub_1E3E7BA50();
  uint64_t v88 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v95 = (char *)v80 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v94 = (char *)v80 - v2;
  MEMORY[0x1F4188790](v3);
  uint64_t v87 = (char *)v80 - v4;
  MEMORY[0x1F4188790](v5);
  id v86 = (char *)v80 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v85 = (char *)v80 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v84 = (char *)v80 - v10;
  MEMORY[0x1F4188790](v11);
  unint64_t v93 = (char *)v80 - v12;
  MEMORY[0x1F4188790](v13);
  char v83 = (char *)v80 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v82 = (char *)v80 - v16;
  MEMORY[0x1F4188790](v17);
  char v92 = (char *)v80 - v18;
  MEMORY[0x1F4188790](v19);
  id v91 = (char *)v80 - v20;
  MEMORY[0x1F4188790](v21);
  char v90 = (char *)v80 - v22;
  MEMORY[0x1F4188790](v23);
  os_log_type_t v89 = (char *)v80 - v24;
  MEMORY[0x1F4188790](v25);
  int v96 = (char *)v80 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v97 = (char *)v80 - v28;
  MEMORY[0x1F4188790](v29);
  id v98 = (char *)v80 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v111 = (char *)v80 - v32;
  MEMORY[0x1F4188790](v33);
  char v110 = (char *)v80 - v34;
  MEMORY[0x1F4188790](v35);
  id v109 = (char *)v80 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)v80 - v38;
  MEMORY[0x1F4188790](v40);
  int v42 = (char *)v80 - v41;
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)v80 - v44;
  MEMORY[0x1F4188790](v46);
  int v48 = (char *)v80 - v47;
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)v80 - v50;
  MEMORY[0x1F4188790](v52);
  int v54 = (char *)v80 - v53;
  MEMORY[0x1F4188790](v55);
  int v57 = (char *)v80 - v56;
  MEMORY[0x1F4188790](v58);
  id v60 = (char *)v80 - v59;
  int v61 = _s18PodcastsFoundation12DependenciesO0A2UIE03allC09JetEngine15BaseObjectGraphCyFZ_0();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2730);
  char v99 = v61;
  sub_1E3E775E0();
  id v100 = v60;
  sub_1E3E7BA30();
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE2740);
  char v101 = v57;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25D0);
  uint64_t v102 = v54;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25B8);
  int v103 = v51;
  sub_1E3E7BA30();
  sub_1E3E7C810();
  id v104 = v48;
  sub_1E3E7BA30();
  type metadata accessor for ExplicitContentPresenter();
  int v105 = v45;
  sub_1E3E7BA30();
  type metadata accessor for LazyJSStack();
  char v106 = v42;
  sub_1E3E7BA30();
  type metadata accessor for AssetCaches();
  uint64_t v107 = v39;
  sub_1E3E7BA30();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2718);
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0830);
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE39B0);
  sub_1E3E7BA30();
  if (objc_msgSend(self, sel_supportsLocalLibrary))
  {
    sub_1E3E799F0();
    int v62 = v98;
    sub_1E3E7BA30();
    sub_1E3E7A090();
    uint64_t v63 = v97;
    sub_1E3E7BA30();
    type metadata accessor for DownloadRemovalObserver();
    uint64_t v64 = v96;
    sub_1E3E7BA30();
    sub_1E3E7BE80();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE0);
    uint64_t v65 = v88;
    unint64_t v66 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1E3E86660;
    unint64_t v68 = v67 + v66;
    uint64_t v69 = v108;
    (*(void (**)(unint64_t, char *, uint64_t))(v65 + 16))(v68, v62, v108);
    sub_1E3E7BE40();
    sub_1E3E7BE50();
    uint64_t v81 = sub_1E3E7BE50();
    swift_release();
    swift_release();
    int v70 = *(void (**)(char *, uint64_t))(v65 + 8);
    v70(v64, v69);
    v70(v63, v69);
    v70(v62, v69);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267D8);
    sub_1E3E7BA30();
    type metadata accessor for DonationRepository();
    sub_1E3E7BA30();
    type metadata accessor for DonationController();
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA0);
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA8);
    sub_1E3E7BA30();
    sub_1E3E7A3C0();
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29860);
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29868);
    sub_1E3E7BA30();
    sub_1E3E7A460();
    sub_1E3E7BA30();
    sub_1E3E79CE0();
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267C8);
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267D0);
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25E30);
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29870);
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29878);
    sub_1E3E7BA30();
    sub_1E3E7A340();
    sub_1E3E7BA30();
    sub_1E3E7BE80();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE0);
    uint64_t v71 = v88;
    unint64_t v72 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1E3E86660;
    unint64_t v74 = v73 + v72;
    uint64_t v75 = v108;
    (*(void (**)(unint64_t, char *, uint64_t))(v71 + 16))(v74, v98, v108);
    v80[7] = sub_1E3E7BE40();
    v80[6] = sub_1E3E7BE50();
    v80[5] = sub_1E3E7BE50();
    v80[4] = sub_1E3E7BE50();
    v80[3] = sub_1E3E7BE50();
    v80[2] = sub_1E3E7BE50();
    v80[1] = sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    uint64_t v81 = sub_1E3E7BE50();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    int v70 = *(void (**)(char *, uint64_t))(v71 + 8);
    v70(v95, v75);
    v70(v94, v75);
    v70(v87, v75);
    v70(v86, v75);
    v70(v85, v75);
    v70(v84, v75);
    v70(v93, v75);
    v70(v83, v75);
    v70(v82, v75);
    v70(v92, v75);
    v70(v91, v75);
    v70(v90, v75);
    v70(v89, v75);
    v70(v96, v75);
    v70(v97, v75);
    v70(v98, v75);
  }
  sub_1E3E775E0();
  id v98 = (char *)sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  uint64_t v76 = sub_1E3E7BE50();
  swift_release();
  uint64_t v97 = (char *)v76;
  sub_1E3E775E0();
  int v96 = (char *)sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  uint64_t v77 = sub_1E3E7BE50();
  swift_release();
  uint64_t v94 = (char *)v77;
  sub_1E3E775E0();
  sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  sub_1E3E7BE50();
  swift_release();
  sub_1E3E775E0();
  uint64_t v95 = (char *)sub_1E3E7BE60();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  uint64_t v78 = v108;
  v70(v111, v108);
  v70(v110, v78);
  v70(v109, v78);
  v70(v107, v78);
  v70(v106, v78);
  v70(v105, v78);
  v70(v104, v78);
  v70(v103, v78);
  v70(v102, v78);
  v70(v101, v78);
  v70(v100, v78);
  return v95;
}

id sub_1E3E2C490@<X0>(void *a1@<X8>)
{
  return sub_1E3E2C4B8((SEL *)&selRef_ams_sharedAccountStore, a1);
}

id sub_1E3E2C4A4@<X0>(void *a1@<X8>)
{
  return sub_1E3E2C4B8((SEL *)&selRef_currentProcess, a1);
}

id sub_1E3E2C4B8@<X0>(SEL *a1@<X1>, void *a2@<X8>)
{
  id result = [self *a1];
  *a2 = result;
  return result;
}

uint64_t sub_1E3E2C4F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E2C8D4((unint64_t *)&qword_1EBFE2730, MEMORY[0x1E4F71858], a1);
}

unint64_t sub_1E3E2C514@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1E3E7D560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F91E48], v2);
  uint64_t v6 = sub_1E3C6EAEC((uint64_t)v5);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for UserPreferences();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  unint64_t result = sub_1E3E2D254();
  *a1 = v7;
  a1[1] = result;
  return result;
}

uint64_t sub_1E3E2C64C()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_bagProfileName);
  sub_1E3E7CD30();

  id v2 = objc_msgSend(v0, sel_bagProfileVersion);
  sub_1E3E7CD30();

  uint64_t v3 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_bagForProfile_profileVersion_, v3, v4);

  return sub_1E3E7C7A0();
}

uint64_t sub_1E3E2C75C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ExplicitContentPresenter();
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0770);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 20) = 0;
  *(unsigned char *)(result + 16) = 2;
  *(void *)(v2 + 16) = result;
  *a1 = v2;
  return result;
}

uint64_t sub_1E3E2C7C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CA20((void (*)(void))type metadata accessor for LazyJSStack, LazyJSStack.__allocating_init(asPartOf:), a1);
}

uint64_t sub_1E3E2C7EC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBFE0850 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for AssetCaches();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBFE0838);

  return sub_1E3D72D8C(v3, a1);
}

id sub_1E3E2C864@<X0>(void *a1@<X8>)
{
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2718);
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultStore);
  *a1 = result;
  return result;
}

uint64_t sub_1E3E2C8B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E2C8D4((unint64_t *)&qword_1EBFE2718, (uint64_t)&protocol witness table for MTImageStore, a1);
}

uint64_t sub_1E3E2C8D4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  *(void *)(a3 + 24) = sub_1E3C12B10(0, a1);
  *(void *)(a3 + 32) = a2;
  sub_1E3E7BE20();

  return swift_release();
}

uint64_t sub_1E3E2C958@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0B20);
  sub_1E3E7BE20();
  swift_release();
  uint64_t v2 = type metadata accessor for NowPlayingArtworkProvider();
  uint64_t v3 = swift_allocObject();
  uint64_t result = sub_1E3C1B644(&v5, v3 + 16);
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for NowPlayingArtworkProvider;
  *a1 = v3;
  return result;
}

uint64_t sub_1E3E2C9F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CA20(MEMORY[0x1E4F91B38], (uint64_t (*)(uint64_t))MediaSpaceCalculator.init(asPartOf:), a1);
}

uint64_t sub_1E3E2CA20@<X0>(void (*a1)(void)@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  a1(0);
  sub_1E3E7BE80();
  uint64_t v5 = sub_1E3E7BE70();
  uint64_t result = a2(v5);
  *a3 = result;
  return result;
}

uint64_t sub_1E3E2CA80()
{
  return swift_release();
}

uint64_t sub_1E3E2CB0C@<X0>(void *a1@<X8>)
{
  sub_1E3E7BE80();
  uint64_t v2 = sub_1E3E7BE70();
  uint64_t v3 = sub_1E3E7CD30();
  uint64_t v5 = v4;
  type metadata accessor for DownloadRemovalObserver();
  swift_allocObject();
  uint64_t v6 = sub_1E3C501D0(v2, v3, v5);
  uint64_t result = swift_release();
  *a1 = v6;
  return result;
}

uint64_t sub_1E3E2CB9C@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  a1[3] = (uint64_t)&type metadata for ThinClientStateNetworking;
  a1[4] = sub_1E3E2D1C8();
  *a1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  sub_1E3E7BE20();

  return swift_release();
}

uint64_t sub_1E3E2CC34@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  sub_1E3E7BE20();
  type metadata accessor for DonationRepository();
  uint64_t v2 = swift_allocObject();
  unint64_t v3 = sub_1E3C81364(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27990);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v3;
  *(void *)(v2 + 16) = v4;
  sub_1E3C1B644(&v6, v2 + 24);
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1E3E2CCF4@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  uint64_t v2 = sub_1E3E4EBDC();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1E3E2CD44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CD5C(&qword_1EAE24CA0, a1);
}

uint64_t sub_1E3E2CD50@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CD5C(&qword_1EAE24CA8, a1);
}

uint64_t sub_1E3E2CD5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE267D8);
  sub_1E3E7BE20();
  uint64_t v4 = sub_1E3E7A0A0();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_1E3E2CDE8@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E7A3C0();
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA0);
  sub_1E3E7BE20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA8);
  sub_1E3E7BE20();
  uint64_t v2 = sub_1E3E7A3A0();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1E3E2CE98@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CEB0(&qword_1EAE29860, a1);
}

uint64_t sub_1E3E2CEA4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CEB0(&qword_1EAE29868, a1);
}

uint64_t sub_1E3E2CEB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA0);
  sub_1E3E7BE20();
  uint64_t v4 = sub_1E3E7A450();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_1E3E2CF3C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2D118(MEMORY[0x1E4F91D70], &qword_1EAE24CA8, MEMORY[0x1E4F91D68], a1);
}

uint64_t sub_1E3E2CF70@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E79CE0();
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  uint64_t v2 = sub_1E3CAC458();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1E3E2CFD0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CFF4(&qword_1EAE267C8, a1);
}

uint64_t sub_1E3E2CFDC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CFF4(&qword_1EAE267D0, a1);
}

uint64_t sub_1E3E2CFE8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2CFF4(&qword_1EAE25E30, a1);
}

uint64_t sub_1E3E2CFF4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_allocObject();
  uint64_t result = sub_1E3E79640();
  *a2 = result;
  return result;
}

uint64_t sub_1E3E2D030@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2D058(&qword_1EAE29870, &qword_1EAE267D0, a1);
}

uint64_t sub_1E3E2D044@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2D058(&qword_1EAE29878, &qword_1EAE267C8, a1);
}

uint64_t sub_1E3E2D058@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1E3E7BE20();
  uint64_t v5 = sub_1E3E7A320();
  uint64_t result = swift_release();
  *a3 = v5;
  return result;
}

uint64_t sub_1E3E2D0E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E2D118(MEMORY[0x1E4F91D00], &qword_1EAE25E30, MEMORY[0x1E4F91CF8], a1);
}

uint64_t sub_1E3E2D118@<X0>(void (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)()@<X2>, uint64_t *a4@<X8>)
{
  a1(0);
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1E3E7BE20();
  uint64_t v7 = a3();
  uint64_t result = swift_release();
  *a4 = v7;
  return result;
}

ValueMetadata *type metadata accessor for Dependencies()
{
  return &type metadata for Dependencies;
}

unint64_t sub_1E3E2D1C8()
{
  unint64_t result = qword_1EAE29880;
  if (!qword_1EAE29880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29880);
  }
  return result;
}

uint64_t sub_1E3E2D21C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return swift_deallocObject();
}

unint64_t sub_1E3E2D254()
{
  unint64_t result = qword_1EBFE0EE0;
  if (!qword_1EBFE0EE0)
  {
    type metadata accessor for UserPreferences();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE0EE0);
  }
  return result;
}

uint64_t TipProvider.tips(for:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE59E0);
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  v13[1] = (*(uint64_t (**)(uint64_t, uint64_t, double))(a3 + 8))(a2, a3, v8);
  *(unsigned char *)(swift_allocObject() + 16) = (_BYTE)a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D10);
  sub_1E3C10DE8(&qword_1EBFE5BA0, &qword_1EBFE5BA8);
  sub_1E3E7ABF0();
  swift_release();
  swift_release();
  sub_1E3C10DE8(&qword_1EBFE59D8, &qword_1EBFE59E0);
  uint64_t v11 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v11;
}

uint64_t sub_1E3E2D490@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t *a3@<X8>)
{
  if (*(void *)(*(void *)a1 + 16) && (sub_1E3C2E740(a2), (v4 & 1) != 0)) {
    uint64_t result = swift_bridgeObjectRetain();
  }
  else {
    uint64_t result = MEMORY[0x1E4FBC860];
  }
  *a3 = result;
  return result;
}

uint64_t sub_1E3E2D4E4()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E2D4F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E3E2D490(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t TipProvider.firstTip(for:of:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE59F0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5990);
  uint64_t v13 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v23 = *a1;
  uint64_t v22 = TipProvider.tips(for:)(&v23, a4, a5);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20;
  *(void *)(v16 + 24) = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57B0);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BC0, &qword_1EBFE5BD0);
  sub_1E3E7ABF0();
  swift_release();
  swift_release();
  sub_1E3C10DE8(&qword_1EBFE59E8, (uint64_t *)&unk_1EBFE59F0);
  sub_1E3E7ABD0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1E3C10DE8(&qword_1EBFE5988, &qword_1EBFE5990);
  uint64_t v17 = v21;
  uint64_t v18 = sub_1E3E7AB70();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v17);
  return v18;
}

uint64_t sub_1E3E2D7E0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)result + 16);
  if (v5)
  {
    uint64_t v8 = *(void *)result + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1E3C1B2BC(v8, (uint64_t)&v14);
      uint64_t v9 = v15;
      uint64_t v10 = v16;
      __swift_project_boxed_opaque_existential_1(&v14, v15);
      if (_s10PodcastsUI8TipModelPAAE4kindAA0C4KindVvg_0(v9, v10) == a2 && v11 == a3) {
        break;
      }
      char v13 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_12;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
      v8 += 40;
      if (!--v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    return sub_1E3C1B644(&v14, a4);
  }
  else
  {
LABEL_10:
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1E3E2D8E8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3E2D920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3E2D7E0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

BOOL sub_1E3E2D928(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  sub_1E3C76588(a2, (uint64_t)v5);
  BOOL v3 = (v2 | v6) == 0;
  sub_1E3E2D9A4((uint64_t)v5);
  return v3;
}

uint64_t dispatch thunk of TipProvider.tips.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TipProvider.requestRefresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1E3E2D9A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t static PlayNextChapterIntent.kind.getter()
{
  return 0xD000000000000015;
}

void sub_1E3E2DA24(void *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001E3E95E30;
}

ValueMetadata *type metadata accessor for PlayNextChapterIntent()
{
  return &type metadata for PlayNextChapterIntent;
}

uint64_t HSBColor.init(uiColor:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1E3E2DDA0(a1, (uint64_t)v4);
  return sub_1E3DB70FC((uint64_t)v4, a2);
}

id HSBColor.uiColor.getter(double a1, double a2, double a3, double a4)
{
  id v8 = objc_allocWithZone(MEMORY[0x1E4FB1618]);

  return objc_msgSend(v8, sel_initWithHue_saturation_brightness_alpha_, a1, a2, a3, a4);
}

BOOL static HSBColor.== infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  BOOL v8 = a1 == a5;
  if (a2 != a6) {
    BOOL v8 = 0;
  }
  if (a3 != a7) {
    BOOL v8 = 0;
  }
  return a4 == a8 && v8;
}

void HSBColor.hue.setter(double a1)
{
  *id v1 = a1;
}

uint64_t (*HSBColor.hue.modify())()
{
  return nullsub_1;
}

double HSBColor.saturation.getter(double a1, double a2)
{
  return a2;
}

void HSBColor.saturation.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*HSBColor.saturation.modify())()
{
  return nullsub_1;
}

double HSBColor.brightness.getter(double a1, double a2, double a3)
{
  return a3;
}

void HSBColor.brightness.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*HSBColor.brightness.modify())()
{
  return nullsub_1;
}

double HSBColor.alpha.getter(double a1, double a2, double a3, double a4)
{
  return a4;
}

void HSBColor.alpha.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*HSBColor.alpha.modify())()
{
  return nullsub_1;
}

uint64_t HSBColor.hash(into:)()
{
  return sub_1E3E7E2A0();
}

uint64_t HSBColor.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E2DCC8()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E2DD30()
{
  return HSBColor.hash(into:)();
}

uint64_t sub_1E3E2DD3C()
{
  return sub_1E3E7E2B0();
}

void sub_1E3E2DDA0(void *a1@<X0>, uint64_t a2@<X8>)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  unint64_t v11 = 0xBFF0000000000000;
  v12[0] = 0xBFF0000000000000;
  unint64_t v9 = 0xBFF0000000000000;
  unint64_t v10 = 0xBFF0000000000000;
  unsigned int v4 = objc_msgSend(a1, sel_getHue_saturation_brightness_alpha_, v12, &v11, &v10, &v9);

  if (v4)
  {
    unint64_t v6 = v11;
    uint64_t v5 = v12[0];
    unint64_t v8 = v9;
    unint64_t v7 = v10;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    unint64_t v7 = 0;
    unint64_t v8 = 0;
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v8;
  *(unsigned char *)(a2 + 32) = v4 ^ 1;
}

unint64_t sub_1E3E2DE64()
{
  unint64_t result = qword_1EAE29888;
  if (!qword_1EAE29888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29888);
  }
  return result;
}

ValueMetadata *type metadata accessor for HSBColor()
{
  return &type metadata for HSBColor;
}

id AMSDialogResult.selectedAction.getter()
{
  id v1 = objc_msgSend(v0, sel_originalRequest);
  id v2 = objc_msgSend(v0, sel_selectedActionIdentifier);
  if (!v2)
  {
    sub_1E3E7CD30();
    id v2 = (id)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  id v3 = objc_msgSend(v1, sel_locateActionWithIdentifier_, v2);

  return v3;
}

char *sub_1E3E2DF6C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = &v1[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_playbackPositionTracker];
  *(_OWORD *)unint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  unint64_t v7 = &v1[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_observer];
  *((void *)v7 + 4) = 0;
  *(_OWORD *)unint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F76E78]);
  unint64_t v9 = v1;
  swift_bridgeObjectRetain();
  unint64_t v10 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithPlayerID_, v10);

  *(void *)&v9[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine] = v11;
  uint64_t v12 = *(void *)(a1 + 32);
  objc_msgSend(v11, sel_setStateRestorationSupported_, sub_1E3D347C0(0, v12));
  objc_msgSend(v11, sel_setVideoSupported_, sub_1E3D347C0(1u, v12));
  LOBYTE(v12) = sub_1E3D347C0(2u, v12);
  id v13 = v11;
  objc_msgSend(v13, sel_setPictureInPictureSupported_, v12 & 1);

  long long v14 = (objc_class *)_s9MPCPlayerCMa();
  v22.receiver = v9;
  v22.super_class = v14;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v22, sel_init);
  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine];
  uint64_t v17 = v15;
  objc_msgSend(v16, sel_setDelegate_, v17);
  objc_msgSend(v16, sel_becomeActive);
  sub_1E3E7D1B0();
  uint64_t v18 = sub_1E3E7D1E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 0, 1, v18);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  long long v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 48) = v20;
  *(void *)(v19 + 64) = *(void *)(a1 + 32);
  *(void *)(v19 + 72) = v17;
  sub_1E3C4CD5C((uint64_t)v5, (uint64_t)&unk_1EAE29920, v19);
  swift_release();
  return v17;
}

uint64_t sub_1E3E2E1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a4;
  v5[17] = a5;
  uint64_t v6 = sub_1E3E7A880();
  v5[18] = v6;
  v5[19] = *(void *)(v6 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E2E2B8, 0, 0);
}

uint64_t sub_1E3E2E2B8()
{
  if (sub_1E3D347C0(0, *(void *)(v0[16] + 32)))
  {
    id v1 = *(void **)(v0[17] + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine);
    v0[2] = v0;
    v0[7] = v0 + 26;
    v0[3] = sub_1E3E2E458;
    uint64_t v2 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1E3E2EA74;
    v0[13] = &block_descriptor_1;
    v0[14] = v2;
    objc_msgSend(v1, sel_restoreStateWithCompletion_, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    v0[24] = *(void *)(v0[17] + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine);
    sub_1E3E7D1A0();
    v0[25] = sub_1E3E7D190();
    uint64_t v4 = sub_1E3E7D130();
    return MEMORY[0x1F4188298](sub_1E3E2E6A8, v4, v3);
  }
}

uint64_t sub_1E3E2E458()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_1E3E2E83C;
  }
  else {
    uint64_t v2 = sub_1E3E2E568;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E2E568()
{
  sub_1E3E7A7B0();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D500();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1E3BC5000, v1, v2, "Engine successfully restored a playback queue", v3, 2u);
    MEMORY[0x1E4E79510](v3, -1, -1);
  }

  (*(void (**)(void, void))(v0[19] + 8))(v0[22], v0[18]);
  v0[24] = *(void *)(v0[17] + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine);
  sub_1E3E7D1A0();
  v0[25] = sub_1E3E7D190();
  uint64_t v5 = sub_1E3E7D130();
  return MEMORY[0x1F4188298](sub_1E3E2E6A8, v5, v4);
}

uint64_t sub_1E3E2E6A8()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();
  objc_msgSend(v1, sel_start);
  return MEMORY[0x1F4188298](sub_1E3E2E720, 0, 0);
}

uint64_t sub_1E3E2E720()
{
  sub_1E3E7A7B0();
  uint64_t v1 = sub_1E3E7A860();
  os_log_type_t v2 = sub_1E3E7D500();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1E3BC5000, v1, v2, "MPC Playback Engine started", v3, 2u);
    MEMORY[0x1E4E79510](v3, -1, -1);
  }
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[18];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1E3E2E83C()
{
  uint64_t v1 = (void *)v0[23];
  swift_willThrow();
  sub_1E3E7A7B0();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D500();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[23];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138543362;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[15] = v10;
    sub_1E3E7DBD0();
    void *v8 = v10;

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Error restoring playback queue: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v8, -1, -1);
    MEMORY[0x1E4E79510](v7, -1, -1);
  }
  else
  {
    id v11 = (void *)v0[23];
  }
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  v0[24] = *(void *)(v0[17] + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine);
  sub_1E3E7D1A0();
  v0[25] = sub_1E3E7D190();
  uint64_t v13 = sub_1E3E7D130();
  return MEMORY[0x1F4188298](sub_1E3E2E6A8, v13, v12);
}

uint64_t sub_1E3E2EA74(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return MEMORY[0x1F4188200](v3);
  }
}

id sub_1E3E2EB58()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9MPCPlayerCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

float sub_1E3E2EBEC()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  objc_msgSend(v0, sel_floatForKey_, @"IMAVPlayerVolumeUserDefaultKey");
  float v2 = v1;

  return v2;
}

uint64_t (*sub_1E3E2EC58(_DWORD *a1))(void)
{
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  objc_msgSend(v2, sel_floatForKey_, @"IMAVPlayerVolumeUserDefaultKey");
  int v4 = v3;

  *a1 = v4;
  return nullsub_1;
}

uint64_t sub_1E3E2ECE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3E2ED5C(a1, a2, a3, &OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_playbackPositionTracker, &qword_1EBFE00C8);
}

void sub_1E3E2ECF8(void *a1)
{
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_engine), sel_setFallbackPlaybackIntent_, a1);
}

uint64_t sub_1E3E2ED48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3E2ED5C(a1, a2, a3, &OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_observer, &qword_1EBFE4E70);
}

uint64_t sub_1E3E2ED5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v8 = v5 + *a4;
  swift_beginAccess();
  sub_1E3CDA16C(a1, v8, a5);
  return swift_endAccess();
}

void sub_1E3E2EEC4(void *a1, char a2)
{
  uint64_t v4 = sub_1E3E7A880();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v8 = a1;
    sub_1E3E7A7D0();
    id v9 = a1;
    id v10 = a1;
    id v11 = sub_1E3E7A860();
    os_log_type_t v12 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      id v14 = a1;
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      v17[1] = v15;
      sub_1E3E7DBD0();
      uint64_t v16 = v17[0];
      *(void *)v17[0] = v15;
      sub_1E3E30050(a1, 1);
      sub_1E3E30050(a1, 1);
      _os_log_impl(&dword_1E3BC5000, v11, v12, "Error updating playback position: %@", v13, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v16, -1, -1);
      MEMORY[0x1E4E79510](v13, -1, -1);

      sub_1E3E30050(a1, 1);
    }
    else
    {
      sub_1E3E30050(a1, 1);
      sub_1E3E30050(a1, 1);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id sub_1E3E2F108(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_episodeUUID);
  if (v4)
  {
    uint64_t v5 = sub_1E3E7CD30();
    uint64_t v7 = v6;
  }
  else
  {
    id result = objc_msgSend(a1, sel_episodeAdamID);
    if (!result) {
      return result;
    }
    id v10 = result;
    sub_1E3E7CD30();

    id result = (id)sub_1E3E7A540();
    if (v11) {
      return result;
    }
    uint64_t v5 = (uint64_t)result;
    uint64_t v7 = 0;
  }
  if (objc_msgSend(a1, sel_completed))
  {
    uint64_t v8 = v2 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_observer;
    swift_beginAccess();
    sub_1E3C34078(v8, (uint64_t)v14, &qword_1EBFE4E70);
    if (v15)
    {
      sub_1E3C1B2BC((uint64_t)v14, (uint64_t)v13);
      sub_1E3C10CE0((uint64_t)v14, &qword_1EBFE4E70);
      __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_1E3CD9EE4(v5, v7, v4 != 0);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
    }
    else
    {
      sub_1E3C10CE0((uint64_t)v14, &qword_1EBFE4E70);
    }
  }
  uint64_t v12 = v2 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_observer;
  swift_beginAccess();
  sub_1E3C34078(v12, (uint64_t)v14, &qword_1EBFE4E70);
  if (v15)
  {
    sub_1E3C10CE0((uint64_t)v14, &qword_1EBFE4E70);
    return (id)sub_1E3C30D24(v5, v7, v4 != 0);
  }
  else
  {
    sub_1E3C30D24(v5, v7, v4 != 0);
    return (id)sub_1E3C10CE0((uint64_t)v14, &qword_1EBFE4E70);
  }
}

uint64_t sub_1E3E2F378()
{
  sub_1E3C10CE0(v0 + 24, &qword_1EBFE00C8);
  sub_1E3C10CE0(v0 + 64, &qword_1EBFE4E70);

  return swift_deallocClassInstance();
}

double sub_1E3E2F3D0()
{
  return 0.0;
}

uint64_t (*sub_1E3E2F3D8(_DWORD *a1))()
{
  *a1 = 0;
  return nullsub_1;
}

uint64_t sub_1E3E2F3FC(uint64_t a1)
{
  swift_beginAccess();
  sub_1E3CDA16C(a1, v1 + 24, &qword_1EBFE00C8);
  return swift_endAccess();
}

uint64_t sub_1E3E2F458(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1E3E2F464(uint64_t a1)
{
  swift_beginAccess();
  sub_1E3CDA16C(a1, v1 + 64, &qword_1EBFE4E70);
  return swift_endAccess();
}

uint64_t sub_1E3E2F4C0(uint64_t a1, uint64_t a2)
{
  return sub_1E3E2F4F0(a1, a2, (SEL *)&selRef_podcastAdamID);
}

uint64_t sub_1E3E2F4CC(uint64_t a1, uint64_t a2)
{
  return sub_1E3E2F4F0(a1, a2, (SEL *)&selRef_episodeAdamID);
}

uint64_t sub_1E3E2F4D8(uint64_t a1, uint64_t a2)
{
  return sub_1E3E2F4F0(a1, a2, (SEL *)&selRef_episodeUUID);
}

uint64_t sub_1E3E2F4E4(uint64_t a1, uint64_t a2)
{
  return sub_1E3E2F4F0(a1, a2, (SEL *)&selRef_feedURL);
}

uint64_t sub_1E3E2F4F0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1E3E7CD30();

  return v6;
}

id sub_1E3E2F554()
{
  id v1 = objc_msgSend(*v0, sel_accountID);

  return v1;
}

id sub_1E3E2F58C()
{
  return objc_msgSend(*v0, sel_timestamp);
}

id sub_1E3E2F59C()
{
  return objc_msgSend(*v0, sel_duration);
}

id sub_1E3E2F5AC()
{
  return objc_msgSend(*v0, sel_position);
}

id sub_1E3E2F5BC()
{
  return objc_msgSend(*v0, sel_subscribable);
}

id sub_1E3E2F5E0()
{
  return objc_msgSend(*v0, sel_completed);
}

uint64_t sub_1E3E2F604(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 8))(a1, a2, a3 & 1);
}

uint64_t sub_1E3E2F61C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 16))(a1, a2, a3 & 1);
}

uint64_t _s9MPCPlayerCMa()
{
  return self;
}

uint64_t type metadata accessor for EmptyPlayer()
{
  return self;
}

uint64_t sub_1E3E2F67C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1E3E2F690(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1E3E2F6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1E3E2F6B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1E3E2F6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1E3E2F6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1E3E2F6F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1E3E2F708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1E3E2F71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1E3E2F730(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1E3E2F744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_1E3E2F758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_1E3E2F76C(void *a1)
{
  uint64_t v2 = sub_1E3E7A880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7A7B0();
  id v6 = a1;
  id v7 = a1;
  uint64_t v8 = sub_1E3E7A860();
  os_log_type_t v9 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v2;
    char v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = (uint64_t)a1;
    uint64_t v20 = v12;
    *(_DWORD *)char v11 = 136446210;
    id v13 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v14 = sub_1E3E7CD90();
    uint64_t v19 = sub_1E3C150B8(v14, v15, &v20);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v8, v9, "engine:didFailToPlay: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v12, -1, -1);
    MEMORY[0x1E4E79510](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1E3E2F9A0(void *a1)
{
  uint64_t v2 = sub_1E3E7A880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7A7B0();
  id v6 = a1;
  id v7 = a1;
  uint64_t v8 = sub_1E3E7A860();
  os_log_type_t v9 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v17[0] = v2;
    char v11 = (uint8_t *)v10;
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)char v11 = 138412290;
    id v13 = a1;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v17[1] = v14;
    sub_1E3E7DBD0();
    *uint64_t v12 = v14;

    _os_log_impl(&dword_1E3BC5000, v8, v9, "engine:didFailToPlayFirstItem: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v12, -1, -1);
    unint64_t v15 = v11;
    uint64_t v2 = v17[0];
    MEMORY[0x1E4E79510](v15, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1E3E2FBAC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E7A880();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = v2 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController9MPCPlayer_playbackPositionTracker;
  swift_beginAccess();
  sub_1E3C34078(v11, (uint64_t)&v41, &qword_1EBFE00C8);
  if (v42)
  {
    uint64_t v38 = v5;
    uint64_t v39 = v4;
    sub_1E3C1B644(&v41, (uint64_t)v44);
    uint64_t v12 = v45;
    uint64_t v13 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    unint64_t v14 = sub_1E3E30010();
    unint64_t v42 = v14;
    uint64_t v43 = &protocol witness table for MPCPodcastPlaybackPositionEvent;
    *(void *)&long long v41 = a1;
    unint64_t v15 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v13 + 8);
    id v16 = a1;
    char v17 = v15(&v41, v12, v13);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v41);
    if (v17)
    {
      uint64_t v18 = v45;
      uint64_t v19 = v46;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      unint64_t v42 = v14;
      uint64_t v43 = &protocol witness table for MPCPodcastPlaybackPositionEvent;
      *(void *)&long long v41 = v16;
      uint64_t v20 = *(void (**)(long long *, void (*)(void *, char), void, uint64_t, uint64_t))(v19 + 16);
      id v21 = v16;
      v20(&v41, sub_1E3E2EEC4, 0, v18, v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v41);
      sub_1E3E2F108(v21);
    }
    else
    {
      sub_1E3E7A7D0();
      id v26 = v16;
      uint64_t v27 = sub_1E3E7A860();
      os_log_type_t v28 = sub_1E3E7D500();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v40 = v30;
        *(_DWORD *)uint64_t v29 = 141558275;
        *(void *)&long long v41 = 1752392040;
        sub_1E3E7DBD0();
        *(_WORD *)(v29 + 12) = 2081;
        id v31 = objc_msgSend(v26, sel_episodeAdamID);
        if (v31)
        {
          uint64_t v32 = v31;
          uint64_t v33 = sub_1E3E7CD30();
          uint64_t v35 = v34;
        }
        else
        {
          uint64_t v33 = 0;
          uint64_t v35 = 0;
        }
        *(void *)&long long v41 = v33;
        *((void *)&v41 + 1) = v35;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE26D8);
        uint64_t v36 = sub_1E3E7CD90();
        *(void *)&long long v41 = sub_1E3C150B8(v36, v37, &v40);
        sub_1E3E7DBD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1E3BC5000, v27, v28, "Not allowing sync for episode adam id %{private,mask.hash}s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E4E79510](v30, -1, -1);
        MEMORY[0x1E4E79510](v29, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v41, &qword_1EBFE00C8);
    sub_1E3E7A7D0();
    objc_super v22 = sub_1E3E7A860();
    os_log_type_t v23 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1E3BC5000, v22, v23, "No playback positon tracker setup.", v24, 2u);
      MEMORY[0x1E4E79510](v24, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

unint64_t sub_1E3E30010()
{
  unint64_t result = qword_1EAE29910;
  if (!qword_1EAE29910)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EAE29910);
  }
  return result;
}

void sub_1E3E30050(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_1E3E3005C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1E3E300B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1E3C19DC4;
  return sub_1E3E2E1DC(a1, v4, v5, v6, v7);
}

uint64_t ConcurrencyActionImplmenetation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v31 = a4;
  uint64_t v32 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v27 = (char *)&v25 - v8;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24FB8);
  uint64_t v28 = sub_1E3E7CA10();
  uint64_t v17 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v29, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v30, AssociatedTypeWitness);
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v19 = (v11 + v18 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = 0;
  *((void *)v21 + 3) = 0;
  uint64_t v22 = v31;
  *((void *)v21 + 4) = a3;
  *((void *)v21 + 5) = v22;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v18], v13, a3);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v21[v19], v27, v26);
  *(void *)&v21[v20] = v32;
  uint64_t v23 = v28;
  *(void *)&v21[(v20 + 15) & 0xFFFFFFFFFFFFFFF8] = v28;
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E30978((uint64_t)v16, (uint64_t)&unk_1EAE29998, (uint64_t)v21);
  sub_1E3C1DE20((uint64_t)v16);
  swift_release();
  return v23;
}

uint64_t sub_1E3E3048C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  uint64_t v12 = sub_1E3E7BD40();
  v8[3] = v12;
  v8[4] = *(void *)(v12 - 8);
  uint64_t v13 = swift_task_alloc();
  v8[5] = v13;
  id v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 16) + **(int **)(v18 + 16));
  uint64_t v14 = (void *)swift_task_alloc();
  v8[6] = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_1E3C8B6E4;
  return v16(v13, a5, a6, a8);
}

uint64_t sub_1E3E30618()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, AssociatedTypeWitness);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E307B0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = v1[4];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v7 = v6 + *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v9;
  uint64_t v15 = *(void *)((char *)v1 + v10);
  uint64_t v16 = *(void *)((char *)v1 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  void *v17 = v3;
  v17[1] = sub_1E3C19DC4;
  return sub_1E3E3048C(a1, v11, v12, v13, v14, v15, v16, v5);
}

uint64_t sub_1E3E30978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C8CD9C(a1, (uint64_t)v8);
  uint64_t v9 = sub_1E3E7D1E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1E3C1DE20((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1E3E7D130();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1E3E7D1D0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t dispatch thunk of ConcurrencyActionImplmenetation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1E3C19DC4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1E3E30C7C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t static PageRenderEvent.resourceFetchStarted(onScreen:)@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  return sub_1E3E30D90(a1, a2);
}

uint64_t type metadata accessor for PageRenderEvent()
{
  uint64_t result = qword_1EBFE0CD8;
  if (!qword_1EBFE0CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static PageRenderEvent.resourceFetchCompleted(onScreen:)@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  return sub_1E3E30D90(a1, a2);
}

id static PageRenderEvent.resourceFetchFailed(_:onScreen:)@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = a2;
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();
  swift_storeEnumTagMultiPayload();

  return a1;
}

uint64_t static PageRenderEvent.resourceFetchCancelled(onScreen:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1E3E30F0C(a1, 0, a2);
}

uint64_t static PageRenderEvent.primaryDataFetchStarted(withUI:)@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  return sub_1E3E30D90(a1, a2);
}

uint64_t sub_1E3E30D90@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();

  return swift_storeEnumTagMultiPayload();
}

uint64_t static PageRenderEvent.primaryDataFetchCompleted(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E3E7BCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();

  return swift_storeEnumTagMultiPayload();
}

id static PageRenderEvent.primaryDataFetchFailed(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();
  swift_storeEnumTagMultiPayload();

  return a1;
}

uint64_t static PageRenderEvent.primaryDataRendered.getter()
{
  return sub_1E3E30FA8();
}

uint64_t static PageRenderEvent.resourceNotFound(onScreen:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1E3E30F0C(a1, 1, a2);
}

uint64_t sub_1E3E30F0C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1E3D7EAC0();
  uint64_t v6 = swift_allocError();
  unsigned char *v7 = a2;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 8) = a1;
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();

  return swift_storeEnumTagMultiPayload();
}

uint64_t static PageRenderEvent.resourceRendered.getter()
{
  return sub_1E3E30FA8();
}

uint64_t sub_1E3E30FA8()
{
  type metadata accessor for PageRenderActivity();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PageRenderEvent();

  return swift_storeEnumTagMultiPayload();
}

uint64_t static PageRenderEvent.reload.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for PageRenderEvent();

  return swift_storeEnumTagMultiPayload();
}

char *initializeBufferWithCopyOfBuffer for PageRenderEvent(char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for PageRenderActivity();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          uint64_t v11 = *(void *)a2;
          id v12 = *(id *)a2;
          *(void *)a1 = v11;
          a1[8] = a2[8];
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          uint64_t v13 = *(void **)a2;
          id v14 = v13;
          *(void *)a1 = v13;
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          uint64_t v10 = sub_1E3E7BCA0();
          (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void destroy for PageRenderEvent(void **a1)
{
  if (!swift_getEnumCaseMultiPayload())
  {
    type metadata accessor for PageRenderActivity();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 2)
    {
      int v5 = *a1;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v3 = sub_1E3E7BCA0();
      uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
    }
  }
}

unsigned char *initializeWithCopy for PageRenderEvent(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for PageRenderActivity();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        id v9 = *(id *)a2;
        id v10 = *(id *)a2;
        *(void *)a1 = v9;
        a1[8] = a2[8];
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v11 = *(void **)a2;
        id v12 = v11;
        *(void *)a1 = v11;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v8 = sub_1E3E7BCA0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *assignWithCopy for PageRenderEvent(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E315B8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for PageRenderActivity();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          id v9 = *(id *)a2;
          id v10 = *(id *)a2;
          *(void *)a1 = v9;
          a1[8] = a2[8];
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          uint64_t v11 = *(void **)a2;
          id v12 = v11;
          *(void *)a1 = v11;
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          uint64_t v8 = sub_1E3E7BCA0();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1E3E315B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageRenderEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for PageRenderEvent(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for PageRenderActivity();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1E3E7BCA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for PageRenderEvent(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E315B8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for PageRenderActivity();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v7 = sub_1E3E7BCA0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1E3E31834()
{
  uint64_t result = type metadata accessor for PageRenderActivity();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t ArtworkModel.preferredRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  uint64_t v29 = sub_1E3E793D0();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  int v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1E3E7A880();
  uint64_t v6 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6418);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v27 - v13;
  uint64_t v15 = sub_1E3E78740();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v27 - v19;
  id v21 = (uint64_t (*)(void))MEMORY[0x1E4F915F0];
  sub_1E3D0B074(v2, (uint64_t)&v27 - v19, MEMORY[0x1E4F915F0]);
  double v22 = *MEMORY[0x1E4F92098];
  id v23 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v23, sel_scale);

  uint64_t v24 = sub_1E3E7A5A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
  sub_1E3E7A7F0();
  sub_1E3E7D4C0();
  sub_1E3E79930();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
  sub_1E3D0B074((uint64_t)v20, (uint64_t)v17, v21);
  sub_1E3E78720();
  uint64_t v25 = v29;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F91A08], v29);
  CGSize.fitting(_:aspectRule:)((uint64_t)v5, v22, v22);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
  sub_1E3C34078((uint64_t)v14, (uint64_t)v11, &qword_1EBFE6418);
  sub_1E3C34078((uint64_t)v32, (uint64_t)v31, &qword_1EBFE6360);
  sub_1E3DDA928((uint64_t)v17, 0, (uint64_t)v11, 0, MEMORY[0x1E4FBC860], (uint64_t)v31, v30);
  sub_1E3C10CE0((uint64_t)v32, &qword_1EBFE6360);
  sub_1E3C10CE0((uint64_t)v14, &qword_1EBFE6418);
  return sub_1E3E34FE8((uint64_t)v20, v21);
}

id sub_1E3E31CC4()
{
  id result = sub_1E3E31CE4();
  qword_1EAE299A8 = (uint64_t)result;
  return result;
}

id sub_1E3E31CE4()
{
  uint64_t v0 = type metadata accessor for AssetCaches();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LibraryImageProvider();
  MEMORY[0x1F4188790](v3);
  int v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - v7;
  if (qword_1EBFE37C8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBFE37A8);
  sub_1E3D0B074(v9, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LibraryImageProvider);
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2718);
  id v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultStore);
  sub_1E3C12B10(0, &qword_1EAE299E0);
  id v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sharedInstance);
  id v12 = objc_msgSend(self, sel_defaultManager);
  if (qword_1EBFE0850 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBFE0838);
  sub_1E3D0B074(v13, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for AssetCaches);
  id v14 = (char *)objc_allocWithZone((Class)type metadata accessor for FeedManagerArtworkBridge());
  sub_1E3D0B074((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LibraryImageProvider);
  id v15 = sub_1E3E33C60((uint64_t)v5, (uint64_t)v10, v11, (uint64_t)v12, (uint64_t)v2, v14);

  sub_1E3E34FE8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LibraryImageProvider);
  return v15;
}

id FeedManagerArtworkBridge.__allocating_init(imageProvider:imageStore:imageDownloader:fileManager:caches:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 32);
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1(a2, v11);
  uint64_t v13 = *(void *)(a4 + 24);
  uint64_t v14 = *(void *)(a4 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a4, v13);
  *((void *)&v18 + 1) = v10;
  *(void *)&long long v18 = v20;
  id v16 = sub_1E3E34160(v19, v12, a3, v15, a5, v22, v9, v11, v13, v18, v14);

  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v16;
}

id static FeedManagerArtworkBridge.shared.getter()
{
  if (qword_1EAE24570 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_1EAE299A8;

  return v0;
}

void static FeedManagerArtworkBridge.shared.setter(uint64_t a1)
{
  if (qword_1EAE24570 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_1EAE299A8;
  qword_1EAE299A8 = a1;
}

uint64_t (*static FeedManagerArtworkBridge.shared.modify())()
{
  if (qword_1EAE24570 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FeedManagerArtworkBridge.imageProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider, a1);
}

uint64_t FeedManagerArtworkBridge.caches.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3D0B074(v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_caches, a1, (uint64_t (*)(void))type metadata accessor for AssetCaches);
}

uint64_t FeedManagerArtworkBridge.imageStore.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore, a1);
}

uint64_t FeedManagerArtworkBridge.fileManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3C1B2BC(v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_fileManager, a1);
}

id FeedManagerArtworkBridge.imageDownloader.getter()
{
  return *(id *)(v0 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageDownloader);
}

id FeedManagerArtworkBridge.init(imageProvider:imageStore:imageDownloader:fileManager:caches:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v33 = *(void *)(a1 + 32);
  uint64_t v34 = a3;
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  double v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v13 + 16))(v12, v10);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v32 = *(void *)(a2 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a2, v14);
  double v16 = MEMORY[0x1F4188790](v15);
  long long v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v19 + 16))(v18, v16);
  uint64_t v21 = *(void *)(a4 + 24);
  uint64_t v20 = *(void *)(a4 + 32);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1(a4, v21);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v26 + 16))(v25, v23);
  uint64_t v30 = v20;
  uint64_t v27 = v34;
  id v28 = sub_1E3E33EB8((uint64_t)v12, (uint64_t)v18, v34, (uint64_t)v25, v35, v36, v8, v14, v21, v33, v32, v30);

  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v28;
}

uint64_t sub_1E3E3262C(void (*a1)(void, void, void))
{
  v173 = a1;
  uint64_t v140 = sub_1E3E7A6E0();
  uint64_t v2 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  uint64_t v131 = (char *)&v130 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v136 = (char *)&v130 - v5;
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE41F0);
  uint64_t v133 = *(void *)(v155 - 8);
  MEMORY[0x1F4188790](v155);
  v154 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_1E3E7A880();
  uint64_t v132 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  uint64_t v153 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v151 = (char *)&v130 - v9;
  MEMORY[0x1F4188790](v10);
  v165 = (char *)&v130 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27130);
  MEMORY[0x1F4188790](v12 - 8);
  v174 = (uint64_t *)((char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1E3E78E70();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v166 = v14;
  uint64_t v167 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v150 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v156 = (char *)&v130 - v18;
  MEMORY[0x1F4188790](v19);
  v163 = (char *)&v130 - v20;
  MEMORY[0x1F4188790](v21);
  v170 = (char *)&v130 - v22;
  MEMORY[0x1F4188790](v23);
  *(void *)&long long v160 = (char *)&v130 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v159 = (uint64_t)&v130 - v26;
  MEMORY[0x1F4188790](v27);
  v158 = (char *)&v130 - v28;
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  uint64_t v172 = *(void *)(v147 - 8);
  MEMORY[0x1F4188790](v147);
  *(void *)&long long v162 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v130 - v31;
  uint64_t v33 = sub_1E3E7A640();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v130 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v135 = (char *)&v130 - v38;
  MEMORY[0x1F4188790](v39);
  long long v41 = (char *)&v130 - v40;
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v130 - v43;
  uint64_t v134 = v1;
  uint64_t v45 = v1 + OBJC_IVAR___PUIFeedManagerArtworkBridge_signposter;
  sub_1E3E7A6A0();
  sub_1E3E7A610();
  uint64_t v142 = v45;
  uint64_t v46 = sub_1E3E7A6A0();
  os_signpost_type_t v47 = sub_1E3E7D760();
  char v48 = sub_1E3E7DB50();
  v149 = v41;
  uint64_t v161 = (uint64_t)v32;
  uint64_t v141 = v2;
  uint64_t v137 = v36;
  if (v48)
  {
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    os_signpost_type_t v50 = v47;
    unint64_t v51 = (v34 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v49(v41, v44, v33);
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    os_signpost_id_t v53 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v46, v50, v53, "InvalidateShowArtwork", "", v52, 2u);
    int v54 = v52;
    uint64_t v32 = (char *)v161;
    long long v41 = v149;
    MEMORY[0x1E4E79510](v54, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v33);
  }
  else
  {

    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    unint64_t v51 = (v34 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v139 = v49;
  unint64_t v138 = v51;
  v49(v41, v44, v33);
  sub_1E3E7A720();
  swift_allocObject();
  uint64_t v144 = sub_1E3E7A710();
  uint64_t v55 = *(void (**)(void, void))(v34 + 8);
  uint64_t v145 = v33;
  uint64_t v148 = v34 + 8;
  int v143 = v55;
  v55(v44, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE299B8);
  uint64_t v56 = *(void *)(v172 + 72);
  unint64_t v57 = (*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1E3E86650;
  uint64_t v146 = v58;
  unint64_t v59 = v58 + v57;
  sub_1E3E7DB10();
  uint64_t v60 = v56;
  unint64_t v171 = v59;
  sub_1E3E7DB30();
  int v61 = 0;
  uint64_t v62 = 0;
  uint64_t v63 = v166;
  uint64_t v172 = v167 + 8;
  uint64_t v64 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v167 + 56);
  v168 = (void (*)(char *, uint64_t))(v167 + 32);
  v169 = (void (**)(char *, uint64_t))(v167 + 48);
  unint64_t v65 = MEMORY[0x1E4FBC860];
  uint64_t v66 = v162;
  v157 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v167 + 56);
  do
  {
    LODWORD(v173) = v61;
    sub_1E3C34078(v171 + v62 * v60, (uint64_t)v32, &qword_1EBFE4240);
    sub_1E3C34078((uint64_t)v32, v66, &qword_1EBFE4240);
    uint64_t v67 = sub_1E3E78740();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v66, 1, v67) == 1)
    {
      sub_1E3C10CE0(v66, &qword_1EBFE4240);
      uint64_t v68 = 1;
    }
    else
    {
      uint64_t v69 = v159;
      ArtworkModel.preferredRequest.getter(v159);
      sub_1E3E34FE8(v66, MEMORY[0x1E4F915F0]);
      uint64_t v70 = v160;
      sub_1E3E78DA0();
      uint64_t v71 = *(void (**)(char *, uint64_t))v172;
      uint64_t v72 = v69;
      uint64_t v32 = (char *)v161;
      (*(void (**)(uint64_t, uint64_t))v172)(v72, v63);
      sub_1E3E78D50();
      uint64_t v64 = v157;
      v71((char *)v70, v63);
      uint64_t v66 = v162;
      uint64_t v68 = 0;
    }
    uint64_t v73 = v174;
    (*v64)(v174, v68, 1, v63);
    sub_1E3C10CE0((uint64_t)v32, &qword_1EBFE4240);
    if (((unsigned int (*)(void *, uint64_t, uint64_t))*v169)(v73, 1, v63) == 1)
    {
      sub_1E3C10CE0((uint64_t)v174, &qword_1EAE27130);
    }
    else
    {
      uint64_t v74 = v63;
      uint64_t v75 = *(void (**)(char *, char *, uint64_t))v168;
      uint64_t v76 = v158;
      (*(void (**)(char *, void *, uint64_t))v168)(v158, v174, v74);
      v75(v170, v76, v74);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v65 = sub_1E3CB8660(0, *(void *)(v65 + 16) + 1, 1, v65);
      }
      unint64_t v78 = *(void *)(v65 + 16);
      unint64_t v77 = *(void *)(v65 + 24);
      if (v78 >= v77 >> 1) {
        unint64_t v65 = sub_1E3CB8660(v77 > 1, v78 + 1, 1, v65);
      }
      *(void *)(v65 + 16) = v78 + 1;
      uint64_t v79 = v166;
      v75((char *)(v65+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v78), v170, v166);
      uint64_t v63 = v79;
    }
    int v61 = 1;
    uint64_t v62 = 1;
  }
  while ((v173 & 1) == 0);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v175 = v65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE299C0);
  sub_1E3E343B0();
  if (sub_1E3E7D3C0())
  {
    uint64_t v81 = *(void *)(v65 + 16);
    if (v81)
    {
      unint64_t v171 = v134 + OBJC_IVAR___PUIFeedManagerArtworkBridge_caches;
      v173 = *(void (**)(void, void, void))(v167 + 16);
      unint64_t v82 = v65 + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80));
      v167 += 16;
      v170 = *(char **)(v167 + 56);
      v174 = (void *)(v132 + 8);
      v169 = (void (**)(char *, uint64_t))(v133 + 8);
      *(void *)&long long v80 = 138412290;
      long long v162 = v80;
      uint64_t v161 = v172 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      *(void *)&long long v80 = 136315138;
      long long v160 = v80;
      uint64_t v159 = MEMORY[0x1E4FBC840] + 8;
      char v83 = v156;
      uint64_t v84 = v163;
      unint64_t v152 = v65;
      do
      {
        uint64_t v85 = (void (*)(char *, char *, uint64_t))v173;
        v173(v84, v82, v63);
        sub_1E3E7A7F0();
        v85(v83, v84, v63);
        id v86 = sub_1E3E7A860();
        os_log_type_t v87 = sub_1E3E7D4C0();
        if (os_log_type_enabled(v86, v87))
        {
          uint64_t v88 = swift_slowAlloc();
          os_log_type_t v89 = v83;
          char v90 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v88 = v162;
          uint64_t v91 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
          *(void *)(v88 + 4) = v91;
          void *v90 = v91;
          char v92 = *(void (**)(char *, uint64_t))v172;
          (*(void (**)(char *, uint64_t))v172)(v89, v63);
          _os_log_impl(&dword_1E3BC5000, v86, v87, "Attempting to invalidate request: %@", (uint8_t *)v88, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v90, -1, -1);
          MEMORY[0x1E4E79510](v88, -1, -1);
        }
        else
        {
          char v92 = *(void (**)(char *, uint64_t))v172;
          (*(void (**)(char *, uint64_t))v172)(v83, v63);
        }
        uint64_t v93 = v155;
        uint64_t v94 = v154;

        uint64_t v95 = (void (**)(char *, void *, uint64_t))*v174;
        ((void (*)(char *, uint64_t))*v174)(v165, v164);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
        sub_1E3E786A0();
        int v96 = v163;
        sub_1E3E78650();
        (*v169)(v94, v93);
        sub_1E3E7A7F0();
        uint64_t v97 = v150;
        uint64_t v63 = v166;
        v173(v150, v96, v166);
        id v98 = sub_1E3E7A860();
        os_log_type_t v99 = sub_1E3E7D4C0();
        BOOL v100 = os_log_type_enabled(v98, v99);
        v168 = (void (*)(char *, uint64_t))v95;
        if (v100)
        {
          char v101 = v97;
          uint64_t v102 = swift_slowAlloc();
          int v103 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v102 = v162;
          uint64_t v104 = _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
          *(void *)(v102 + 4) = v104;
          *int v103 = v104;
          v92(v101, v63);
          _os_log_impl(&dword_1E3BC5000, v98, v99, "Invalidated request: %@", (uint8_t *)v102, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
          swift_arrayDestroy();
          MEMORY[0x1E4E79510](v103, -1, -1);
          MEMORY[0x1E4E79510](v102, -1, -1);
        }
        else
        {

          v92(v97, v63);
        }
        char v83 = v156;
        uint64_t v84 = v163;
        v168(v151, v164);
        v92(v84, v63);
        v82 += (unint64_t)v170;
        --v81;
      }
      while (v81);
    }
    swift_bridgeObjectRelease();
    uint64_t v115 = v141;
    uint64_t v112 = v145;
    id v116 = v136;
    char v117 = v135;
    unint64_t v113 = (void (*)(char *, uint64_t))v143;
    uint64_t v118 = sub_1E3E7A6A0();
    sub_1E3E7A700();
    os_signpost_type_t v119 = sub_1E3E7D750();
    if ((sub_1E3E7DB50() & 1) == 0)
    {

      uint64_t v122 = v117;
LABEL_40:
      v113(v122, v112);
      return swift_release();
    }
    sub_1E3E775E0();
    sub_1E3E7A730();
    swift_release();
    uint64_t v120 = v140;
    if ((*(unsigned int (**)(char *, uint64_t))(v115 + 88))(v116, v140) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v121 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v120);
      uint64_t v121 = "";
    }
    uint64_t v122 = v149;
    v139(v149, v117, v112);
    v127 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v127 = 0;
    os_signpost_id_t v128 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v118, v119, v128, "InvalidateShowArtwork", v121, v127, 2u);
    MEMORY[0x1E4E79510](v127, -1, -1);

    uint64_t v125 = v117;
    uint64_t v126 = v112;
LABEL_39:
    v113(v125, v126);
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  int v105 = sub_1E3E7A6A0();
  char v106 = v137;
  sub_1E3E7A700();
  os_signpost_type_t v107 = sub_1E3E7D750();
  if (sub_1E3E7DB50())
  {
    sub_1E3E775E0();
    uint64_t v108 = v131;
    sub_1E3E7A730();
    swift_release();
    uint64_t v109 = v141;
    uint64_t v110 = v140;
    int v111 = (*(uint64_t (**)(char *, uint64_t))(v141 + 88))(v108, v140);
    uint64_t v112 = v145;
    unint64_t v113 = (void (*)(char *, uint64_t))v143;
    if (v111 == *MEMORY[0x1E4FBD340])
    {
      int v114 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
      int v114 = "";
    }
    uint64_t v122 = v149;
    v139(v149, v106, v112);
    uint64_t v123 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v123 = 0;
    os_signpost_id_t v124 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v105, v107, v124, "InvalidateShowArtwork", v114, v123, 2u);
    MEMORY[0x1E4E79510](v123, -1, -1);

    uint64_t v125 = v106;
    uint64_t v126 = v112;
    goto LABEL_39;
  }

  v143(v106, v145);
  return swift_release();
}

uint64_t sub_1E3E33A48(void (*a1)(void, void), uint64_t a2, int a3)
{
  return sub_1E3E3440C(a1, a3);
}

id FeedManagerArtworkBridge.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void FeedManagerArtworkBridge.init()()
{
}

id FeedManagerArtworkBridge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedManagerArtworkBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1E3E33C60(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v12 = sub_1E3E7A6D0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[3] = type metadata accessor for LibraryImageProvider();
  v26[4] = (uint64_t)&protocol witness table for LibraryImageProvider;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  sub_1E3E35048(a1, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for LibraryImageProvider);
  v25[3] = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE2718);
  v25[4] = &protocol witness table for MTImageStore;
  v25[0] = a2;
  v24[3] = sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE4A90);
  v24[4] = MEMORY[0x1E4F91E40];
  v24[0] = a4;
  sub_1E3C1B2BC((uint64_t)v26, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider]);
  sub_1E3C1B2BC((uint64_t)v25, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore]);
  *(void *)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageDownloader] = a3;
  sub_1E3C1B2BC((uint64_t)v24, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_fileManager]);
  sub_1E3D0B074(a5, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_caches], (uint64_t (*)(void))type metadata accessor for AssetCaches);
  uint64_t v17 = a6;
  id v18 = a3;
  sub_1E3E7A680();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[OBJC_IVAR___PUIFeedManagerArtworkBridge_signposter], v15, v12);

  uint64_t v19 = (objc_class *)type metadata accessor for FeedManagerArtworkBridge();
  v23.receiver = v17;
  v23.super_class = v19;
  id v20 = objc_msgSendSuper2(&v23, sel_init);
  sub_1E3E34FE8(a5, (uint64_t (*)(void))type metadata accessor for AssetCaches);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  return v20;
}

id sub_1E3E33EB8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v33 = a3;
  uint64_t v34 = a5;
  uint64_t v32 = a4;
  uint64_t v31 = a12;
  uint64_t v35 = sub_1E3E7A6D0();
  uint64_t v17 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[3] = a7;
  v39[4] = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  v38[3] = a8;
  v38[4] = a11;
  uint64_t v21 = __swift_allocate_boxed_opaque_existential_1(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(v21, a2, a8);
  v37[3] = a9;
  v37[4] = v31;
  uint64_t v22 = __swift_allocate_boxed_opaque_existential_1(v37);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(v22, v32, a9);
  sub_1E3C1B2BC((uint64_t)v39, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider]);
  sub_1E3C1B2BC((uint64_t)v38, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore]);
  objc_super v23 = v33;
  *(void *)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_imageDownloader] = v33;
  sub_1E3C1B2BC((uint64_t)v37, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_fileManager]);
  uint64_t v24 = v34;
  sub_1E3D0B074(v34, (uint64_t)&a6[OBJC_IVAR___PUIFeedManagerArtworkBridge_caches], (uint64_t (*)(void))type metadata accessor for AssetCaches);
  uint64_t v25 = a6;
  id v26 = v23;
  sub_1E3E7A680();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[OBJC_IVAR___PUIFeedManagerArtworkBridge_signposter], v19, v35);

  uint64_t v27 = (objc_class *)type metadata accessor for FeedManagerArtworkBridge();
  v36.receiver = v25;
  v36.super_class = v27;
  id v28 = objc_msgSendSuper2(&v36, sel_init);
  sub_1E3E34FE8(v24, (uint64_t (*)(void))type metadata accessor for AssetCaches);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  return v28;
}

id sub_1E3E34160(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, uint64_t a11)
{
  uint64_t v33 = a3;
  uint64_t v34 = a5;
  uint64_t v31 = a4;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  long long v32 = a10;
  uint64_t v13 = *(void *)(a9 - 8);
  uint64_t v30 = a11;
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = (char *)objc_allocWithZone((Class)type metadata accessor for FeedManagerArtworkBridge());
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v28, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v29, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v31, a9);
  return sub_1E3E33EB8((uint64_t)v25, (uint64_t)v20, v33, (uint64_t)v15, v34, v26, a7, a8, a9, v32, *((uint64_t *)&v32 + 1), v30);
}

unint64_t sub_1E3E343B0()
{
  unint64_t result = qword_1EAE299C8;
  if (!qword_1EAE299C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE299C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE299C8);
  }
  return result;
}

uint64_t sub_1E3E3440C(void (*a1)(void, void), int a2)
{
  uint64_t v109 = a1;
  uint64_t v4 = sub_1E3E7A6E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v103 = v4;
  uint64_t v104 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v92 = (char *)&v87 - v9;
  uint64_t v10 = sub_1E3E78E70();
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v96 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v94 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
  MEMORY[0x1F4188790](v12 - 8);
  id v98 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  char v101 = (char *)&v87 - v15;
  uint64_t v106 = sub_1E3E78740();
  uint64_t v102 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v91 = (uint64_t)&v87 - v19;
  uint64_t v20 = sub_1E3E7A640();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v93 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  BOOL v100 = (char *)&v87 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v87 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v87 - v29;
  uint64_t v31 = v2 + OBJC_IVAR___PUIFeedManagerArtworkBridge_signposter;
  sub_1E3E7A6A0();
  sub_1E3E7A610();
  uint64_t v108 = v31;
  long long v32 = sub_1E3E7A6A0();
  os_signpost_type_t v33 = sub_1E3E7D760();
  char v34 = sub_1E3E7DB50();
  int v99 = a2;
  os_log_type_t v89 = v17;
  if (v34)
  {
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    unint64_t v36 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v35(v27, v30, v20);
    uint64_t v37 = v27;
    uint64_t v38 = v7;
    uint64_t v39 = v21;
    uint64_t v40 = v20;
    long long v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v41 = 0;
    os_signpost_id_t v42 = sub_1E3E7A620();
    _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v32, v33, v42, "PrefetchShowArtworkInterval", "", v41, 2u);
    uint64_t v43 = v41;
    uint64_t v20 = v40;
    uint64_t v21 = v39;
    uint64_t v7 = v38;
    uint64_t v27 = v37;
    MEMORY[0x1E4E79510](v43, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v37, v20);
  }
  else
  {

    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    unint64_t v36 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v44 = v109;
  uint64_t v97 = v35;
  v35(v27, v30, v20);
  sub_1E3E7A720();
  swift_allocObject();
  sub_1E3E7A710();
  os_signpost_type_t v47 = *(void (**)(void, void))(v21 + 8);
  uint64_t v46 = (char *)(v21 + 8);
  uint64_t v45 = v47;
  v47(v30, v20);
  id v48 = objc_msgSend(v44, sel_uuid);
  uint64_t v107 = v20;
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v88 = v27;
    unint64_t v90 = v36;
    uint64_t v93 = v46;
    uint64_t v50 = sub_1E3E7CD30();
    uint64_t v52 = v51;

    uint64_t v53 = v105;
    uint64_t v54 = *(void *)(v105 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore + 24);
    uint64_t v55 = *(void *)(v105 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v105 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageStore), v54);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v50, v52, v54, v55);
    swift_bridgeObjectRelease();
    uint64_t v56 = (uint64_t)v101;
    sub_1E3E7DB10();
    unint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
    if (v57(v56, 1, v106) == 1)
    {
      sub_1E3C10CE0(v56, &qword_1EBFE4240);
    }
    else
    {
      uint64_t v62 = v91;
      sub_1E3E35048(v56, v91, MEMORY[0x1E4F915F0]);
      uint64_t v63 = *(void *)(v53 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider + 24);
      uint64_t v64 = *(void *)(v53 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v53 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider), v63);
      uint64_t v65 = v94;
      ArtworkModel.preferredRequest.getter(v94);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v65, v63, v64);
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v65, v96);
      sub_1E3E34FE8(v62, MEMORY[0x1E4F915F0]);
    }
    uint64_t v66 = v100;
    uint64_t v67 = (uint64_t)v98;
    if (v99)
    {
      sub_1E3E7DB30();
      if (v57(v67, 1, v106) == 1)
      {
        sub_1E3C10CE0(v67, &qword_1EBFE4240);
      }
      else
      {
        uint64_t v70 = v67;
        uint64_t v71 = (uint64_t)v89;
        sub_1E3E35048(v70, (uint64_t)v89, MEMORY[0x1E4F915F0]);
        uint64_t v72 = *(void *)(v105 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider + 24);
        uint64_t v73 = *(void *)(v105 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider + 32);
        __swift_project_boxed_opaque_existential_1((void *)(v105 + OBJC_IVAR___PUIFeedManagerArtworkBridge_imageProvider), v72);
        uint64_t v74 = v94;
        ArtworkModel.preferredRequest.getter(v94);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v74, v72, v73);
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v74, v96);
        sub_1E3E34FE8(v71, MEMORY[0x1E4F915F0]);
      }
    }
    uint64_t v75 = sub_1E3E7A6A0();
    sub_1E3E7A700();
    os_signpost_type_t v76 = sub_1E3E7D750();
    if (sub_1E3E7DB50())
    {
      uint64_t v109 = v45;
      sub_1E3E775E0();
      unint64_t v77 = v92;
      sub_1E3E7A730();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v104 + 88))(v77, v103) == *MEMORY[0x1E4FBD340])
      {
        unint64_t v78 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v104 + 8))(v77, v103);
        unint64_t v78 = "";
      }
      uint64_t v68 = v88;
      uint64_t v69 = v107;
      v97(v88, v66, v107);
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      os_signpost_id_t v80 = sub_1E3E7A620();
      _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v75, v76, v80, "PrefetchShowArtworkInterval", v78, v79, 2u);
      MEMORY[0x1E4E79510](v79, -1, -1);

      uint64_t v81 = v66;
      uint64_t v82 = v69;
LABEL_24:
      uint64_t v45 = v109;
      v109(v81, v82);
      goto LABEL_25;
    }

    uint64_t v68 = v66;
    uint64_t v69 = v107;
  }
  else
  {
    uint64_t v58 = sub_1E3E7A6A0();
    unint64_t v59 = v93;
    sub_1E3E7A700();
    int v60 = sub_1E3E7D750();
    if (sub_1E3E7DB50())
    {
      LODWORD(v108) = v60;
      uint64_t v109 = v45;
      sub_1E3E775E0();
      sub_1E3E7A730();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v104 + 88))(v7, v103) == *MEMORY[0x1E4FBD340])
      {
        int v61 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v104 + 8))(v7, v103);
        int v61 = "";
      }
      uint64_t v83 = v107;
      v97(v27, v59, v107);
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v84 = 0;
      uint64_t v68 = v27;
      os_signpost_id_t v85 = sub_1E3E7A620();
      _os_signpost_emit_with_name_impl(&dword_1E3BC5000, v58, (os_signpost_type_t)v108, v85, "PrefetchShowArtworkInterval", v61, v84, 2u);
      MEMORY[0x1E4E79510](v84, -1, -1);

      uint64_t v69 = v83;
      uint64_t v81 = v59;
      uint64_t v82 = v83;
      goto LABEL_24;
    }

    uint64_t v68 = v59;
    uint64_t v69 = v107;
  }
LABEL_25:
  v45(v68, v69);
  return swift_release();
}

uint64_t type metadata accessor for FeedManagerArtworkBridge()
{
  uint64_t result = qword_1EAE299D0;
  if (!qword_1EAE299D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3E34E64()
{
  return type metadata accessor for FeedManagerArtworkBridge();
}

uint64_t sub_1E3E34E6C()
{
  uint64_t result = type metadata accessor for AssetCaches();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E3E7A6D0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for FeedManagerArtworkBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedManagerArtworkBridge);
}

uint64_t dispatch thunk of FeedManagerArtworkBridge.__allocating_init(imageProvider:imageStore:imageDownloader:fileManager:caches:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedManagerArtworkBridge.invalidateArtwork(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FeedManagerArtworkBridge.updateArtwork(for:useBackgroundFetch:fetchUber:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t sub_1E3E34FE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E3E35048(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of PlaybackPositionEvent.podcastAdamID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.episodeAdamID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.episodeUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.feedURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.accountID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.position.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.subscribable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PlaybackPositionEvent.completed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of PlaybackPositionTracker.shouldTrackPosition(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PlaybackPositionTracker.updatePlaybackPosition(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

unsigned char *storeEnumTagSinglePayload for PlaybackPositionTrackerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E3526CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackPositionTrackerError()
{
  return &type metadata for PlaybackPositionTrackerError;
}

unint64_t sub_1E3E352A8()
{
  unint64_t result = qword_1EAE299E8[0];
  if (!qword_1EAE299E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAE299E8);
  }
  return result;
}

uint64_t FetchMAPIRepresentableIntent.contentType.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1E3E78CB0();
  if (swift_dynamicCastMetatype())
  {
    unint64_t v2 = (unsigned int *)MEMORY[0x1E4F91608];
LABEL_7:
    uint64_t v3 = *v2;
    uint64_t v4 = sub_1E3E78790();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104))(a1, v3, v4);
  }
  sub_1E3E78CC0();
  if (swift_dynamicCastMetatype())
  {
    unint64_t v2 = (unsigned int *)MEMORY[0x1E4F91618];
    goto LABEL_7;
  }
  sub_1E3E79AC0();
  if (swift_dynamicCastMetatype())
  {
    unint64_t v2 = (unsigned int *)MEMORY[0x1E4F91610];
    goto LABEL_7;
  }
  type metadata accessor for FetchMAPIRepresentableIntent.FetchMAPIRepresentableError();
  swift_getWitnessTable();
  swift_allocError();
  return swift_willThrow();
}

uint64_t type metadata accessor for FetchMAPIRepresentableIntent.FetchMAPIRepresentableError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FetchMAPIRepresentableIntent.init(entityIDs:typeIncludes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t static FetchMAPIRepresentableIntent.kind.getter()
{
  return 0xD000000000000019;
}

uint64_t FetchMAPIRepresentableIntent.entityIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchMAPIRepresentableIntent.typeIncludes.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1E3E354E0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = static FetchMAPIRepresentableIntent.kind.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1E3E35510()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1E3E3554C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1E3E35584(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1E3E355E4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for FetchMAPIRepresentableIntent()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1E3E3563C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3E356D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E3E35700()
{
  return swift_getWitnessTable();
}

void *ClickLocationFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(void *a1)
{
  uint64_t v52 = a1;
  uint64_t v2 = sub_1E3E7BB40();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1E3E7CA90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBFE4888 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48B8);
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBFE4870);
  uint64_t v9 = type metadata accessor for ClickLocationTracker();
  unint64_t result = MEMORY[0x1E4E75C20](&v57, v8, v9);
  uint64_t v11 = v57;
  if ((void)v57)
  {
    if (qword_1EBFE48B0 != -1) {
      swift_once();
    }
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE48C8);
    uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBFE4890);
    MEMORY[0x1E4E75C20](&v57, v13, MEMORY[0x1E4FBB1A0]);
    uint64_t v14 = *((void *)&v57 + 1);
    if (!*((void *)&v57 + 1)) {
      return (void *)swift_release();
    }
    uint64_t v15 = v57;
    uint64_t v16 = ClickLocationTracker.locationStack(for:)(v57, *((uint64_t *)&v57 + 1));
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v51 = v11;
    if (v17)
    {
      uint64_t v49 = v16;
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(v52, v52[3]);
      uint64_t v18 = sub_1E3E7C280();
      uint64_t v19 = sub_1E3E789B0();
      if (*(void *)(v18 + 16) && (unint64_t v21 = sub_1E3D352D8(v19, v20), (v22 & 1) != 0))
      {
        sub_1E3C114A4(*(void *)(v18 + 56) + 32 * v21, (uint64_t)v56);
        sub_1E3C1B524(v56, &v57);
        sub_1E3C114A4((uint64_t)&v57, (uint64_t)v56);
        uint64_t v23 = sub_1E3E35FB0((uint64_t)v56);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23)
        {
          uint64_t v24 = v49;
          swift_bridgeObjectRetain();
          uint64_t v25 = sub_1E3E36140((uint64_t)v23, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          *(void *)&long long v57 = v25;
          sub_1E3E789B0();
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v52[3]);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A48);
          sub_1E3E35EE0();
LABEL_30:
          MetricsFieldsBuilder.addValue<A>(_:forField:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (void *)swift_release();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v50 = v1;
      uint64_t v26 = v49;
      int64_t v27 = *(void *)(v49 + 16);
      if (v27)
      {
        uint64_t v59 = MEMORY[0x1E4FBC860];
        sub_1E3CC79DC(0, v27, 0);
        uint64_t v28 = (uint64_t *)(v26 + 88);
        do
        {
          uint64_t v29 = *(v28 - 7);
          uint64_t v30 = *(v28 - 6);
          uint64_t v31 = *(v28 - 4);
          uint64_t v53 = *(v28 - 1);
          uint64_t v54 = v31;
          if (*v28) {
            uint64_t v32 = *v28;
          }
          else {
            uint64_t v32 = MEMORY[0x1E4FBC868];
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_1E3E78980();
          uint64_t v35 = v34;
          unint64_t v58 = MEMORY[0x1E4FBB1A0];
          *(void *)&long long v57 = v29;
          *((void *)&v57 + 1) = v30;
          sub_1E3C1B524(&v57, v56);
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v55 = v32;
          sub_1E3C9EA30(v56, v33, v35, isUniquelyReferenced_nonNull_native);
          uint64_t v37 = v55;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v38 = sub_1E3E789E0();
          uint64_t v40 = v39;
          id v41 = objc_allocWithZone(NSNumber);
          swift_bridgeObjectRetain();
          id v42 = objc_msgSend(v41, sel_initWithInteger_, v53);
          unint64_t v58 = sub_1E3C90B00();
          *(void *)&long long v57 = v42;
          sub_1E3C1B524(&v57, v56);
          char v43 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v55 = v37;
          sub_1E3C9EA30(v56, v38, v40, v43);
          uint64_t v44 = v55;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v45 = v59;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1E3CC79DC(0, *(void *)(v45 + 16) + 1, 1);
            uint64_t v45 = v59;
          }
          unint64_t v47 = *(void *)(v45 + 16);
          unint64_t v46 = *(void *)(v45 + 24);
          if (v47 >= v46 >> 1)
          {
            sub_1E3CC79DC(v46 > 1, v47 + 1, 1);
            uint64_t v45 = v59;
          }
          *(void *)(v45 + 16) = v47 + 1;
          *(void *)(v45 + 8 * v47 + 32) = v44;
          v28 += 8;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = MEMORY[0x1E4FBC860];
      }
      *(void *)&long long v57 = v45;
      sub_1E3E789B0();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v52[3]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A48);
      sub_1E3E35EE0();
      goto LABEL_30;
    }
    uint64_t v50 = v1;
    swift_bridgeObjectRelease();
    if (qword_1EBFE2DB8 != -1) {
      swift_once();
    }
    uint64_t v48 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBFE49B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v48, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
    sub_1E3E7BB60();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
    sub_1E3E7BB30();
    sub_1E3E7BB20();
    unint64_t v58 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v57 = v15;
    *((void *)&v57 + 1) = v14;
    sub_1E3E7BB10();
    sub_1E3C2AC28((uint64_t)&v57);
    sub_1E3E7BB20();
    sub_1E3E7BB50();
    sub_1E3E7C870();
    swift_bridgeObjectRelease();
    swift_release();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

void *sub_1E3E35EC8(void *a1)
{
  return ClickLocationFieldsProvider.addTimeSensitiveMetricsFields(into:using:)(a1);
}

unint64_t sub_1E3E35EE0()
{
  unint64_t result = qword_1EBFE4A50;
  if (!qword_1EBFE4A50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE4A48);
    sub_1E3E35F54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4A50);
  }
  return result;
}

unint64_t sub_1E3E35F54()
{
  unint64_t result = qword_1EBFE49E0;
  if (!qword_1EBFE49E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE49D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE49E0);
  }
  return result;
}

void *sub_1E3E35FB0(uint64_t a1)
{
  sub_1E3C114A4(a1, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A68);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v8 + 16);
    if (v2)
    {
      uint64_t v3 = v8 + 32;
      swift_bridgeObjectRetain();
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        sub_1E3C114A4(v3, (uint64_t)v9);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE49D8);
        if (swift_dynamicCast())
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v4 = sub_1E3CB87A4(0, v4[2] + 1, 1, v4);
          }
          unint64_t v6 = v4[2];
          unint64_t v5 = v4[3];
          if (v6 >= v5 >> 1) {
            uint64_t v4 = sub_1E3CB87A4((void *)(v5 > 1), v6 + 1, 1, v4);
          }
          v4[2] = v6 + 1;
          v4[v6 + 4] = v8;
        }
        v3 += 32;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    }
    __swift_destroy_boxed_opaque_existential_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    return 0;
  }
  return v4;
}

uint64_t sub_1E3E36140(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v38 = MEMORY[0x1E4FBC860];
    sub_1E3CC79DC(0, v2, 0);
    uint64_t v6 = 0;
    uint64_t v3 = v38;
    uint64_t v7 = a1 + 32;
    uint64_t v28 = a2;
    uint64_t v29 = a2 + 88;
    int64_t v27 = v2;
    uint64_t v30 = a1 + 32;
    do
    {
      uint64_t v31 = v6;
      uint64_t v8 = *(void *)(v7 + 8 * v6);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1E3E78980();
      if (*(void *)(v8 + 16))
      {
        uint64_t v32 = v8;
        unint64_t v11 = sub_1E3D352D8(v9, v10);
        if (v12)
        {
          sub_1E3C114A4(*(void *)(v8 + 56) + 32 * v11, (uint64_t)v35);
          sub_1E3C1B524(v35, &v36);
          sub_1E3C114A4((uint64_t)&v36, (uint64_t)v35);
          if (swift_dynamicCast())
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v36);
            swift_bridgeObjectRelease();
            uint64_t v13 = *(void *)(a2 + 16);
            if (v13)
            {
              uint64_t v14 = v29;
              while (1)
              {
                uint64_t v15 = *(void *)(v14 - 8);
                BOOL v16 = *(void *)(v14 - 56) == v33 && *(void *)(v14 - 48) == v34;
                if (v16 || (sub_1E3E7E150() & 1) != 0) {
                  break;
                }
                v14 += 64;
                if (!--v13)
                {
                  swift_bridgeObjectRelease();
                  int64_t v2 = v27;
                  a2 = v28;
                  goto LABEL_22;
                }
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v20 = sub_1E3E789E0();
              uint64_t v22 = v21;
              id v23 = objc_allocWithZone(NSNumber);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v24 = objc_msgSend(v23, sel_initWithInteger_, v15);
              unint64_t v37 = sub_1E3C90B00();
              *(void *)&long long v36 = v24;
              sub_1E3C1B524(&v36, v35);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v33 = v32;
              sub_1E3C9EA30(v35, v20, v22, isUniquelyReferenced_nonNull_native);
              uint64_t v8 = v32;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int64_t v2 = v27;
              a2 = v28;
              uint64_t v7 = v30;
            }
            else
            {
              swift_bridgeObjectRelease();
LABEL_22:
              uint64_t v7 = v30;
            }
            goto LABEL_17;
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v36);
        }
      }
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v17 = v31;
      uint64_t v38 = v3;
      unint64_t v19 = *(void *)(v3 + 16);
      unint64_t v18 = *(void *)(v3 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1E3CC79DC(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v31;
        uint64_t v3 = v38;
      }
      uint64_t v6 = v17 + 1;
      *(void *)(v3 + 16) = v19 + 1;
      *(void *)(v3 + 8 * v19 + 32) = v8;
    }
    while (v6 != v2);
  }
  return v3;
}

ValueMetadata *type metadata accessor for ClickLocationFieldsProvider()
{
  return &type metadata for ClickLocationFieldsProvider;
}

uint64_t dispatch thunk of SettingsBridge.open(destination:)(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))(a1 & 1);
}

void sub_1E3E365A4()
{
  id v1 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v1, sel_displayScale);
  double v3 = v2;

  id v4 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v4, sel_setBorderWidth_, ceil(v3 * 0.5) / v3);

  id v5 = objc_msgSend(v0, sel_layer);
  id v6 = objc_msgSend(self, sel__textFieldBorderColor);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_CGColor);

    objc_msgSend(v5, sel_setBorderColor_, v8);
  }
  else
  {
    __break(1u);
  }
}

id sub_1E3E36824()
{
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v0, sel_convertRect_toView_, 0);
  id v5 = objc_msgSend(self, sel_bezierPathWithRect_, v1, v2, v3, v4);

  return v5;
}

id MacTextView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MacTextView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MacTextView()
{
  return self;
}

uint64_t method lookup function for MacTextView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MacTextView);
}

id UITraitCollection.suggestedTextBlendModeFilter.getter()
{
  objc_msgSend(v0, sel_userInterfaceStyle);
  sub_1E3E7CD30();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F39BC0]);
  objc_super v2 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithType_, v2);

  return v3;
}

void sub_1E3E369D8(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  sub_1E3E775E0();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1E3E36A40(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, a1 & 1);
}

BOOL RestrictionsController.RestrictionsIntent.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t sub_1E3E36A7C()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E36AC4()
{
  return sub_1E3E7E2B0();
}

void *sub_1E3E36B08@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t RestrictionsController.presentAlertIfNeeded(_:presentationCompletion:actionCompletion:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1E3E79C40();
  switch(result)
  {
    case 0:
      if (a2) {
        return a2(0);
      }
      return result;
    case 1:
      uint64_t v12 = (uint64_t)a2;
      uint64_t v13 = a4;
      uint64_t v32 = sub_1E3E79530();
      uint64_t v15 = v19;
      uint64_t v31 = sub_1E3E79530();
      uint64_t v17 = v20;
      uint64_t v29 = sub_1E3E79530();
      uint64_t v18 = v21;
      goto LABEL_9;
    case 2:
      uint64_t v12 = (uint64_t)a2;
      uint64_t v13 = a4;
      uint64_t v32 = sub_1E3E79530();
      uint64_t v15 = v14;
      uint64_t v31 = sub_1E3E79530();
      uint64_t v17 = v16;
      uint64_t v29 = 0;
      uint64_t v18 = 0;
LABEL_9:
      uint64_t v30 = 0;
      uint64_t v22 = 0;
      goto LABEL_13;
    case 3:
      if (a1 == 1)
      {
        uint64_t v12 = (uint64_t)a2;
      }
      else
      {
        if (a1)
        {
          while (1)
          {
LABEL_16:
            sub_1E3E7E1C0();
            __break(1u);
          }
        }
        uint64_t v12 = (uint64_t)a2;
      }
      uint64_t v32 = sub_1E3E79530();
      uint64_t v15 = v23;
      uint64_t v13 = a4;
      uint64_t v30 = sub_1E3E79530();
      uint64_t v22 = v24;
      uint64_t v31 = sub_1E3E79530();
      uint64_t v17 = v25;
      uint64_t v29 = 0;
      uint64_t v18 = 0;
LABEL_13:
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v12;
      *(void *)(v26 + 24) = a3;
      int64_t v27 = (void *)swift_allocObject();
      v27[2] = v5;
      v27[3] = v13;
      v27[4] = a5;
      sub_1E3C19A6C(v12);
      id v28 = v5;
      sub_1E3C19A6C(v13);
      sub_1E3E37788(v32, v15, v30, v22, v31, v17, v29, v18, (uint64_t)sub_1E3E36EF8, v26, (uint64_t)sub_1E3E370B8, (uint64_t)v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      goto LABEL_16;
  }
}

uint64_t sub_1E3E36EB8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1E3E36EF8()
{
  id v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  if (v1) {
    return v1(1);
  }
  return result;
}

uint64_t sub_1E3E36F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7D1B0();
  uint64_t v8 = sub_1E3E7D1E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v9;
  v10[5] = a2;
  v10[6] = a3;
  sub_1E3C19A6C(a2);
  sub_1E3C4CD5C((uint64_t)v7, (uint64_t)&unk_1EAE29A90, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1E3E37070()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1E3E370B8()
{
  return sub_1E3E36F2C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1E3E370C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  uint64_t v7 = sub_1E3E7B770();
  v6[15] = v7;
  v6[16] = *(void *)(v7 - 8);
  v6[17] = swift_task_alloc();
  uint64_t v8 = sub_1E3E7B7C0();
  v6[18] = v8;
  v6[19] = *(void *)(v8 - 8);
  v6[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E371E4, 0, 0);
}

uint64_t sub_1E3E371E4()
{
  uint64_t v1 = v0[12] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1E4E79630](v1);
  v0[21] = v2;
  if (v2)
  {
    v0[22] = sub_1E3E79C40();
    id v3 = (void *)swift_task_alloc();
    v0[23] = v3;
    *id v3 = v0;
    v3[1] = sub_1E3E372F0;
    return MEMORY[0x1F41452E0]();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    id v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1E3E372F0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E3E373F0, 0, 0);
}

uint64_t sub_1E3E373F0()
{
  if (*(void *)(v0 + 104))
  {
    uint64_t v1 = *(void *)(v0 + 112);
    sub_1E3E775E0();
    uint64_t v2 = sub_1E3E79C20();
    if (v2 == sub_1E3E79C20())
    {
      uint64_t v3 = *(void *)(v0 + 104);

      sub_1E3C1A3C4(v3);
    }
    else
    {
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = *(void *)(v0 + 160);
      uint64_t v15 = *(void **)(v0 + 168);
      uint64_t v6 = *(void *)(v0 + 136);
      uint64_t v17 = *(void *)(v0 + 144);
      uint64_t v7 = *(void *)(v0 + 120);
      uint64_t v8 = *(void *)(v0 + 128);
      uint64_t v9 = *(void *)(v0 + 104);
      uint64_t v16 = *(void *)(v0 + 152);
      sub_1E3C8E038();
      uint64_t v14 = (void *)sub_1E3E7D6A0();
      uint64_t v10 = (void *)swift_allocObject();
      v10[2] = v9;
      v10[3] = v1;
      v10[4] = v4;
      *(void *)(v0 + 48) = sub_1E3E37F68;
      *(void *)(v0 + 56) = v10;
      *(void *)(v0 + 16) = MEMORY[0x1E4F143A8];
      *(void *)(v0 + 24) = 1107296256;
      *(void *)(v0 + 32) = sub_1E3CE65F8;
      *(void *)(v0 + 40) = &block_descriptor_32;
      unint64_t v11 = _Block_copy((const void *)(v0 + 16));
      sub_1E3E775E0();
      sub_1E3E7B7A0();
      *(void *)(v0 + 88) = MEMORY[0x1E4FBC860];
      sub_1E3C33F04();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
      sub_1E3C8E088();
      sub_1E3E7DCC0();
      MEMORY[0x1E4E76FF0](0, v5, v6, v11);

      _Block_release(v11);
      sub_1E3C1A3C4(v9);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v5, v17);
      swift_release();
    }
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

void sub_1E3E37664(void *a1, int a2, uint64_t a3, void *aBlock, const void *a5)
{
  uint64_t v8 = (uint64_t (*)(void))_Block_copy(aBlock);
  uint64_t v9 = (uint64_t (*)())_Block_copy(a5);
  uint64_t v10 = v9;
  if (v8)
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v8;
    uint64_t v8 = (uint64_t (*)(void))sub_1E3E37D90;
    if (v10)
    {
LABEL_3:
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v10;
      uint64_t v10 = sub_1E3D9E0F0;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v11 = 0;
    if (v9) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
LABEL_6:
  id v13 = a1;
  RestrictionsController.presentAlertIfNeeded(_:presentationCompletion:actionCompletion:)(a3, v8, v11, (uint64_t)v10, v12);
  sub_1E3C1A3C4((uint64_t)v10);
  sub_1E3C1A3C4((uint64_t)v8);
}

void sub_1E3E37788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = sub_1E3E7A880();
  MEMORY[0x1F4188790](v15);
  uint64_t v44 = v17;
  uint64_t v45 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v43 = v15;
  if (a4)
  {
    uint64_t v19 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  id v20 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v18, v19, 1);

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a9;
  *(void *)(v21 + 24) = a10;
  sub_1E3E775E0();
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_1E3E37F98;
  uint64_t v51 = v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v47 = 1107296256;
  uint64_t v48 = sub_1E3E369D8;
  uint64_t v49 = &block_descriptor_34;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v24 = self;
  uint64_t v25 = objc_msgSend(v24, sel_actionWithTitle_style_handler_, v22, 1, v23);
  _Block_release(v23);

  objc_msgSend(v20, sel_addAction_, v25);
  if (a8)
  {
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a11;
    *(void *)(v26 + 24) = a12;
    sub_1E3E775E0();
    swift_bridgeObjectRetain();
    int64_t v27 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1E3CE67A4;
    uint64_t v51 = v26;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v47 = 1107296256;
    uint64_t v48 = sub_1E3E369D8;
    uint64_t v49 = &block_descriptor_18;
    id v28 = _Block_copy(&aBlock);
    swift_release();
    id v29 = objc_msgSend(v24, sel_actionWithTitle_style_handler_, v27, 0, v28);
    _Block_release(v28);

    objc_msgSend(v20, sel_addAction_, v29);
    objc_msgSend(v20, sel_setPreferredAction_, v29);
  }
  else
  {
    objc_msgSend(v20, sel_setPreferredAction_, v25);
  }
  uint64_t v30 = v45;
  uint64_t v31 = self;
  uint64_t v32 = v20;
  id v33 = objc_msgSend(v31, sel_sharedApplication);
  id v34 = objc_msgSend(v33, sel_delegate);

  if (v34)
  {
    if ((objc_msgSend(v34, sel_respondsToSelector_, sel_window) & 1) == 0)
    {

      swift_unknownObjectRelease();
      goto LABEL_17;
    }
    id v35 = objc_msgSend(v34, sel_window);
    swift_unknownObjectRelease();
    if (v35)
    {
      id v36 = objc_msgSend(v35, sel_rootViewController);

      if (v36)
      {
        objc_msgSend(v36, sel_presentViewController_animated_completion_, v32, 1, 0);

        return;
      }
    }
  }

LABEL_17:
  sub_1E3E7A780();
  unint64_t v37 = sub_1E3E7A860();
  os_log_type_t v38 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl(&dword_1E3BC5000, v37, v38, "Failed to present restrictions alert due to missing root view controller", v39, 2u);
    MEMORY[0x1E4E79510](v39, -1, -1);
    uint64_t v40 = v25;
    uint64_t v25 = v32;
  }
  else
  {
    uint64_t v40 = v37;
    unint64_t v37 = v32;
  }
  uint64_t v41 = v43;

  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v41);
}

unint64_t sub_1E3E37CF4()
{
  unint64_t result = qword_1EAE29A80;
  if (!qword_1EAE29A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAE29A80);
  }
  return result;
}

ValueMetadata *type metadata accessor for RestrictionsController.RestrictionsIntent()
{
  return &type metadata for RestrictionsController.RestrictionsIntent;
}

uint64_t sub_1E3E37D58()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1E3E37D90(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1E3E37DA8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E37DE0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3E37E18()
{
  swift_unknownObjectRelease();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1E3E37E68(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1E3C19DC4;
  return sub_1E3E370C4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1E3E37F30()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E37F68()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t UpdateEpisodePlayStateIntent.init(episode:playState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a2;
  uint64_t v4 = (uint64_t)a3 + *(int *)(type metadata accessor for UpdateEpisodePlayStateIntent() + 20);

  return sub_1E3C2AD1C(a1, v4);
}

uint64_t type metadata accessor for UpdateEpisodePlayStateIntent()
{
  uint64_t result = qword_1EBFE3C38;
  if (!qword_1EBFE3C38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t static UpdateEpisodePlayStateIntent.kind.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t UpdateEpisodePlayStateIntent.playState.getter()
{
  return *(void *)v0;
}

uint64_t UpdateEpisodePlayStateIntent.episode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UpdateEpisodePlayStateIntent() + 20);

  return sub_1E3C2ACB0(v3, a1);
}

void sub_1E3E380B4(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000001E3EA37D0;
}

uint64_t *initializeBufferWithCopyOfBuffer for UpdateEpisodePlayStateIntent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = v18 + ((v4 + 16) & ~(unint64_t)v4);
    sub_1E3E775E0();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    uint64_t v8 = *(uint64_t *)((char *)a2 + v5 + 8);
    *uint64_t v6 = *(uint64_t *)((char *)a2 + v5);
    v6[1] = v8;
    uint64_t v10 = *(void **)((char *)a2 + v5 + 16);
    uint64_t v9 = *(uint64_t *)((char *)a2 + v5 + 24);
    v6[2] = v10;
    v6[3] = v9;
    uint64_t v11 = v7[5];
    v6[4] = v7[4];
    v6[5] = v11;
    uint64_t v12 = v7[7];
    v6[6] = v7[6];
    v6[7] = v12;
    uint64_t v13 = v7[9];
    v6[8] = v7[8];
    v6[9] = v13;
    uint64_t v73 = v7[11];
    v6[10] = v7[10];
    v6[11] = v73;
    uint64_t v74 = v7[13];
    v6[12] = v7[12];
    v6[13] = v74;
    uint64_t v75 = v7[15];
    v6[14] = v7[14];
    v6[15] = v75;
    uint64_t v76 = v7[17];
    v6[16] = v7[16];
    v6[17] = v76;
    unint64_t v78 = (int *)type metadata accessor for EpisodeEntity(0);
    uint64_t v14 = v78[20];
    __dst = (char *)v6 + v14;
    uint64_t v71 = (char *)v7 + v14;
    uint64_t v15 = sub_1E3E7A2E0();
    uint64_t v70 = *(void *)(v15 - 8);
    uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
    swift_bridgeObjectRetain();
    id v16 = v10;
    swift_bridgeObjectRetain();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    sub_1E3E775E0();
    if (v72(v71, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
      memcpy(__dst, v71, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(__dst, v71, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v20 = v78[21];
    uint64_t v21 = (void *)((char *)v6 + v20);
    uint64_t v22 = (void *)((char *)v7 + v20);
    uint64_t v23 = (int *)sub_1E3E78740();
    uint64_t v24 = *((void *)v23 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v26;
      int v27 = *((unsigned __int8 *)v22 + 32);
      swift_bridgeObjectRetain();
      if (v27 == 255)
      {
        *((_OWORD *)v21 + 1) = *((_OWORD *)v22 + 1);
        *((unsigned char *)v21 + 32) = *((unsigned char *)v22 + 32);
      }
      else
      {
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        sub_1E3C2B454(v28, v29, v27);
        v21[2] = v28;
        v21[3] = v29;
        *((unsigned char *)v21 + 32) = v27;
      }
      *(_OWORD *)(v21 + 5) = *(_OWORD *)(v22 + 5);
      uint64_t v30 = (id *)(v22 + 7);
      int v31 = *((unsigned __int8 *)v22 + 64);
      if (v31 == 255)
      {
        v21[7] = *v30;
        *((unsigned char *)v21 + 64) = *((unsigned char *)v22 + 64);
      }
      else
      {
        id v32 = *v30;
        sub_1E3C2B46C(*v30, *((unsigned char *)v22 + 64));
        v21[7] = v32;
        *((unsigned char *)v21 + 64) = v31;
      }
      id v33 = (id *)(v22 + 9);
      int v34 = *((unsigned __int8 *)v22 + 80);
      if (v34 == 255)
      {
        v21[9] = *v33;
        *((unsigned char *)v21 + 80) = *((unsigned char *)v22 + 80);
      }
      else
      {
        id v35 = *v33;
        sub_1E3C2B46C(*v33, *((unsigned char *)v22 + 80));
        v21[9] = v35;
        *((unsigned char *)v21 + 80) = v34;
      }
      id v36 = (id *)(v22 + 11);
      int v37 = *((unsigned __int8 *)v22 + 96);
      if (v37 == 255)
      {
        v21[11] = *v36;
        *((unsigned char *)v21 + 96) = *((unsigned char *)v22 + 96);
      }
      else
      {
        id v38 = *v36;
        sub_1E3C2B46C(*v36, *((unsigned char *)v22 + 96));
        v21[11] = v38;
        *((unsigned char *)v21 + 96) = v37;
      }
      uint64_t v39 = (id *)(v22 + 13);
      int v40 = *((unsigned __int8 *)v22 + 112);
      if (v40 == 255)
      {
        v21[13] = *v39;
        *((unsigned char *)v21 + 112) = *((unsigned char *)v22 + 112);
      }
      else
      {
        id v41 = *v39;
        sub_1E3C2B46C(*v39, *((unsigned char *)v22 + 112));
        v21[13] = v41;
        *((unsigned char *)v21 + 112) = v40;
      }
      uint64_t v42 = (id *)(v22 + 15);
      int v43 = *((unsigned __int8 *)v22 + 128);
      if (v43 == 255)
      {
        v21[15] = *v42;
        *((unsigned char *)v21 + 128) = *((unsigned char *)v22 + 128);
      }
      else
      {
        id v44 = *v42;
        sub_1E3C2B46C(*v42, *((unsigned char *)v22 + 128));
        v21[15] = v44;
        *((unsigned char *)v21 + 128) = v43;
      }
      *((unsigned char *)v21 + 129) = *((unsigned char *)v22 + 129);
      uint64_t v45 = v23[11];
      unint64_t v46 = (char *)v21 + v45;
      uint64_t v47 = (char *)v22 + v45;
      uint64_t v48 = sub_1E3E78630();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
      uint64_t v49 = v23[12];
      uint64_t v50 = (void *)((char *)v21 + v49);
      uint64_t v51 = (void *)((char *)v22 + v49);
      uint64_t v52 = v51[1];
      *uint64_t v50 = *v51;
      v50[1] = v52;
      *((unsigned char *)v21 + v23[13]) = *((unsigned char *)v22 + v23[13]);
      *((unsigned char *)v21 + v23[14]) = *((unsigned char *)v22 + v23[14]);
      *((unsigned char *)v21 + v23[15]) = *((unsigned char *)v22 + v23[15]);
      uint64_t v53 = v23[16];
      uint64_t v54 = (void *)((char *)v21 + v53);
      uint64_t v55 = (void *)((char *)v22 + v53);
      uint64_t v56 = v55[1];
      *uint64_t v54 = *v55;
      v54[1] = v56;
      long long v57 = *(void (**)(void *, void, uint64_t, int *))(v24 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v21, 0, 1, v23);
    }
    uint64_t v58 = v78[22];
    uint64_t v59 = (char *)v6 + v58;
    int v60 = (char *)v7 + v58;
    unint64_t v61 = *((void *)v60 + 1);
    if (v61 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
    }
    else
    {
      uint64_t v62 = *(void *)v60;
      sub_1E3C14F74(*(void *)v60, *((void *)v60 + 1));
      *(void *)uint64_t v59 = v62;
      *((void *)v59 + 1) = v61;
    }
    uint64_t v63 = v78[23];
    uint64_t v64 = (char *)v6 + v63;
    uint64_t v65 = (char *)v7 + v63;
    uint64_t v66 = sub_1E3E77D00();
    uint64_t v67 = *(void *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
    {
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    return a1;
  }
  return (uint64_t *)v19;
}

uint64_t destroy for UpdateEpisodePlayStateIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v4 = v2 + v3[20];
  uint64_t v5 = sub_1E3E7A2E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = v2 + v3[21];
  uint64_t v8 = sub_1E3E78740();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    int v9 = *(unsigned __int8 *)(v7 + 32);
    if (v9 != 255) {
      sub_1E3C2B7BC(*(void *)(v7 + 16), *(void *)(v7 + 24), v9);
    }
    int v10 = *(unsigned __int8 *)(v7 + 64);
    if (v10 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 56), v10);
    }
    int v11 = *(unsigned __int8 *)(v7 + 80);
    if (v11 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 72), v11);
    }
    int v12 = *(unsigned __int8 *)(v7 + 96);
    if (v12 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 88), v12);
    }
    int v13 = *(unsigned __int8 *)(v7 + 112);
    if (v13 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 104), v13);
    }
    int v14 = *(unsigned __int8 *)(v7 + 128);
    if (v14 != 255) {
      sub_1E3C2B7D4(*(id *)(v7 + 120), v14);
    }
    uint64_t v15 = v7 + *(int *)(v8 + 44);
    uint64_t v16 = sub_1E3E78630();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (uint64_t *)(v2 + v3[22]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_1E3C2B7E8(*v17, v18);
  }
  uint64_t v19 = v2 + v3[23];
  uint64_t v20 = sub_1E3E77D00();
  uint64_t v23 = *(void *)(v20 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v19, 1, v20);
  if (!result)
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    return v22(v19, v20);
  }
  return result;
}

void *initializeWithCopy for UpdateEpisodePlayStateIntent(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (void *)((char *)a1 + v3);
  uint64_t v5 = (void *)((char *)a2 + v3);
  uint64_t v6 = *(void *)((char *)a2 + v3 + 8);
  *uint64_t v4 = *(void *)((char *)a2 + v3);
  v4[1] = v6;
  uint64_t v8 = *(void **)((char *)a2 + v3 + 16);
  uint64_t v7 = *(void *)((char *)a2 + v3 + 24);
  v4[2] = v8;
  v4[3] = v7;
  uint64_t v9 = v5[5];
  v4[4] = v5[4];
  v4[5] = v9;
  uint64_t v10 = v5[7];
  v4[6] = v5[6];
  v4[7] = v10;
  uint64_t v67 = v5[9];
  v4[8] = v5[8];
  v4[9] = v67;
  uint64_t v69 = v5[11];
  v4[10] = v5[10];
  v4[11] = v69;
  uint64_t v70 = v5[13];
  v4[12] = v5[12];
  v4[13] = v70;
  uint64_t v71 = v5[15];
  v4[14] = v5[14];
  v4[15] = v71;
  uint64_t v72 = v5[17];
  v4[16] = v5[16];
  v4[17] = v72;
  uint64_t v74 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v11 = v74[20];
  __dst = (char *)v4 + v11;
  int v12 = (char *)v5 + v11;
  uint64_t v13 = sub_1E3E7A2E0();
  uint64_t v66 = *(void *)(v13 - 8);
  uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
  swift_bridgeObjectRetain();
  id v14 = v8;
  swift_bridgeObjectRetain();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  sub_1E3E775E0();
  if (v68(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(__dst, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v16 = v74[21];
  uint64_t v17 = (void *)((char *)v4 + v16);
  unint64_t v18 = (void *)((char *)v5 + v16);
  uint64_t v19 = (int *)sub_1E3E78740();
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = v18[1];
    void *v17 = *v18;
    v17[1] = v22;
    int v23 = *((unsigned __int8 *)v18 + 32);
    swift_bridgeObjectRetain();
    if (v23 == 255)
    {
      *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
      *((unsigned char *)v17 + 32) = *((unsigned char *)v18 + 32);
    }
    else
    {
      uint64_t v24 = v18[2];
      uint64_t v25 = v18[3];
      sub_1E3C2B454(v24, v25, v23);
      void v17[2] = v24;
      v17[3] = v25;
      *((unsigned char *)v17 + 32) = v23;
    }
    *(_OWORD *)(v17 + 5) = *(_OWORD *)(v18 + 5);
    uint64_t v26 = (id *)(v18 + 7);
    int v27 = *((unsigned __int8 *)v18 + 64);
    if (v27 == 255)
    {
      v17[7] = *v26;
      *((unsigned char *)v17 + 64) = *((unsigned char *)v18 + 64);
    }
    else
    {
      id v28 = *v26;
      sub_1E3C2B46C(*v26, *((unsigned char *)v18 + 64));
      v17[7] = v28;
      *((unsigned char *)v17 + 64) = v27;
    }
    uint64_t v29 = (id *)(v18 + 9);
    int v30 = *((unsigned __int8 *)v18 + 80);
    if (v30 == 255)
    {
      v17[9] = *v29;
      *((unsigned char *)v17 + 80) = *((unsigned char *)v18 + 80);
    }
    else
    {
      id v31 = *v29;
      sub_1E3C2B46C(*v29, *((unsigned char *)v18 + 80));
      v17[9] = v31;
      *((unsigned char *)v17 + 80) = v30;
    }
    id v32 = (id *)(v18 + 11);
    int v33 = *((unsigned __int8 *)v18 + 96);
    if (v33 == 255)
    {
      v17[11] = *v32;
      *((unsigned char *)v17 + 96) = *((unsigned char *)v18 + 96);
    }
    else
    {
      id v34 = *v32;
      sub_1E3C2B46C(*v32, *((unsigned char *)v18 + 96));
      v17[11] = v34;
      *((unsigned char *)v17 + 96) = v33;
    }
    id v35 = (id *)(v18 + 13);
    int v36 = *((unsigned __int8 *)v18 + 112);
    if (v36 == 255)
    {
      v17[13] = *v35;
      *((unsigned char *)v17 + 112) = *((unsigned char *)v18 + 112);
    }
    else
    {
      id v37 = *v35;
      sub_1E3C2B46C(*v35, *((unsigned char *)v18 + 112));
      v17[13] = v37;
      *((unsigned char *)v17 + 112) = v36;
    }
    id v38 = (id *)(v18 + 15);
    int v39 = *((unsigned __int8 *)v18 + 128);
    if (v39 == 255)
    {
      v17[15] = *v38;
      *((unsigned char *)v17 + 128) = *((unsigned char *)v18 + 128);
    }
    else
    {
      id v40 = *v38;
      sub_1E3C2B46C(*v38, *((unsigned char *)v18 + 128));
      v17[15] = v40;
      *((unsigned char *)v17 + 128) = v39;
    }
    *((unsigned char *)v17 + 129) = *((unsigned char *)v18 + 129);
    uint64_t v41 = v19[11];
    uint64_t v42 = (char *)v17 + v41;
    int v43 = (char *)v18 + v41;
    uint64_t v44 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    uint64_t v45 = v19[12];
    unint64_t v46 = (void *)((char *)v17 + v45);
    uint64_t v47 = (void *)((char *)v18 + v45);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    *((unsigned char *)v17 + v19[13]) = *((unsigned char *)v18 + v19[13]);
    *((unsigned char *)v17 + v19[14]) = *((unsigned char *)v18 + v19[14]);
    *((unsigned char *)v17 + v19[15]) = *((unsigned char *)v18 + v19[15]);
    uint64_t v49 = v19[16];
    uint64_t v50 = (void *)((char *)v17 + v49);
    uint64_t v51 = (void *)((char *)v18 + v49);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    uint64_t v53 = *(void (**)(void *, void, uint64_t, int *))(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53(v17, 0, 1, v19);
  }
  uint64_t v54 = v74[22];
  uint64_t v55 = (char *)v4 + v54;
  uint64_t v56 = (char *)v5 + v54;
  unint64_t v57 = *((void *)v56 + 1);
  if (v57 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  }
  else
  {
    uint64_t v58 = *(void *)v56;
    sub_1E3C14F74(*(void *)v56, *((void *)v56 + 1));
    *(void *)uint64_t v55 = v58;
    *((void *)v55 + 1) = v57;
  }
  uint64_t v59 = v74[23];
  int v60 = (char *)v4 + v59;
  unint64_t v61 = (char *)v5 + v59;
  uint64_t v62 = sub_1E3E77D00();
  uint64_t v63 = *(void *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  return a1;
}

void *assignWithCopy for UpdateEpisodePlayStateIntent(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (void *)((char *)a1 + v3);
  uint64_t v5 = (void *)((char *)a2 + v3);
  *uint64_t v4 = *(void *)((char *)a2 + v3);
  v4[1] = *(void *)((char *)a2 + v3 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)v4[2];
  uint64_t v7 = (void *)v5[2];
  v4[2] = v7;
  id v8 = v7;

  v4[3] = v5[3];
  v4[4] = v5[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[5] = v5[5];
  v4[6] = v5[6];
  sub_1E3E775E0();
  swift_release();
  v4[7] = v5[7];
  sub_1E3E775E0();
  swift_release();
  v4[8] = v5[8];
  sub_1E3E775E0();
  swift_release();
  v4[9] = v5[9];
  sub_1E3E775E0();
  swift_release();
  v4[10] = v5[10];
  sub_1E3E775E0();
  swift_release();
  v4[11] = v5[11];
  sub_1E3E775E0();
  swift_release();
  v4[12] = v5[12];
  sub_1E3E775E0();
  swift_release();
  v4[13] = v5[13];
  sub_1E3E775E0();
  swift_release();
  v4[14] = v5[14];
  sub_1E3E775E0();
  swift_release();
  v4[15] = v5[15];
  sub_1E3E775E0();
  swift_release();
  v4[16] = v5[16];
  sub_1E3E775E0();
  swift_release();
  v4[17] = v5[17];
  sub_1E3E775E0();
  swift_release();
  uint64_t v9 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v10 = v9[20];
  uint64_t v11 = (char *)v4 + v10;
  int v12 = (char *)v5 + v10;
  uint64_t v13 = sub_1E3E7A2E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = v9[21];
  uint64_t v20 = (uint64_t)v4 + v19;
  uint64_t v21 = (char *)v5 + v19;
  uint64_t v22 = (int *)sub_1E3E78740();
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24((uint64_t)v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      *(void *)uint64_t v20 = *(void *)v21;
      *(void *)(v20 + 8) = *((void *)v21 + 1);
      int v27 = v21[32];
      swift_bridgeObjectRetain();
      if (v27 == 255)
      {
        long long v39 = *((_OWORD *)v21 + 1);
        *(unsigned char *)(v20 + 32) = v21[32];
        *(_OWORD *)(v20 + 16) = v39;
      }
      else
      {
        uint64_t v28 = *((void *)v21 + 2);
        uint64_t v29 = *((void *)v21 + 3);
        sub_1E3C2B454(v28, v29, v27);
        *(void *)(v20 + 16) = v28;
        *(void *)(v20 + 24) = v29;
        *(unsigned char *)(v20 + 32) = v27;
      }
      *(void *)(v20 + 40) = *((void *)v21 + 5);
      *(void *)(v20 + 48) = *((void *)v21 + 6);
      id v40 = (id *)(v21 + 56);
      int v41 = v21[64];
      if (v41 == 255)
      {
        id v43 = *v40;
        *(unsigned char *)(v20 + 64) = v21[64];
        *(void *)(v20 + 56) = v43;
      }
      else
      {
        id v42 = *v40;
        sub_1E3C2B46C(*v40, v21[64]);
        *(void *)(v20 + 56) = v42;
        *(unsigned char *)(v20 + 64) = v41;
      }
      uint64_t v44 = (id *)(v21 + 72);
      int v45 = v21[80];
      if (v45 == 255)
      {
        id v47 = *v44;
        *(unsigned char *)(v20 + 80) = v21[80];
        *(void *)(v20 + 72) = v47;
      }
      else
      {
        id v46 = *v44;
        sub_1E3C2B46C(*v44, v21[80]);
        *(void *)(v20 + 72) = v46;
        *(unsigned char *)(v20 + 80) = v45;
      }
      uint64_t v48 = (id *)(v21 + 88);
      int v49 = v21[96];
      if (v49 == 255)
      {
        id v51 = *v48;
        *(unsigned char *)(v20 + 96) = v21[96];
        *(void *)(v20 + 88) = v51;
      }
      else
      {
        id v50 = *v48;
        sub_1E3C2B46C(*v48, v21[96]);
        *(void *)(v20 + 88) = v50;
        *(unsigned char *)(v20 + 96) = v49;
      }
      uint64_t v52 = (id *)(v21 + 104);
      int v53 = v21[112];
      if (v53 == 255)
      {
        id v55 = *v52;
        *(unsigned char *)(v20 + 112) = v21[112];
        *(void *)(v20 + 104) = v55;
      }
      else
      {
        id v54 = *v52;
        sub_1E3C2B46C(*v52, v21[112]);
        *(void *)(v20 + 104) = v54;
        *(unsigned char *)(v20 + 112) = v53;
      }
      uint64_t v56 = (id *)(v21 + 120);
      int v57 = v21[128];
      if (v57 == 255)
      {
        id v59 = *v56;
        *(unsigned char *)(v20 + 128) = v21[128];
        *(void *)(v20 + 120) = v59;
      }
      else
      {
        id v58 = *v56;
        sub_1E3C2B46C(*v56, v21[128]);
        *(void *)(v20 + 120) = v58;
        *(unsigned char *)(v20 + 128) = v57;
      }
      *(unsigned char *)(v20 + 129) = v21[129];
      uint64_t v60 = v22[11];
      uint64_t v61 = v20 + v60;
      uint64_t v62 = &v21[v60];
      uint64_t v63 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
      uint64_t v64 = v22[12];
      uint64_t v65 = (void *)(v20 + v64);
      uint64_t v66 = &v21[v64];
      void *v65 = *(void *)v66;
      v65[1] = *((void *)v66 + 1);
      *(unsigned char *)(v20 + v22[13]) = v21[v22[13]];
      *(unsigned char *)(v20 + v22[14]) = v21[v22[14]];
      *(unsigned char *)(v20 + v22[15]) = v21[v22[15]];
      uint64_t v67 = v22[16];
      uint64_t v68 = (void *)(v20 + v67);
      uint64_t v69 = &v21[v67];
      void *v68 = *(void *)v69;
      v68[1] = *((void *)v69 + 1);
      uint64_t v70 = *(void (**)(uint64_t, void, uint64_t, int *))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70(v20, 0, 1, v22);
      goto LABEL_75;
    }
LABEL_13:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v20, v21, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_75;
  }
  if (v26)
  {
    sub_1E3C2CBF8(v20);
    goto LABEL_13;
  }
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v31 = (long long *)(v20 + 16);
  id v32 = (long long *)(v21 + 16);
  int v33 = v21[32];
  if (*(unsigned __int8 *)(v20 + 32) == 255)
  {
    if (v33 == 255)
    {
      long long v74 = *v32;
      *(unsigned char *)(v20 + 32) = v21[32];
      *id v31 = v74;
    }
    else
    {
      uint64_t v71 = *((void *)v21 + 2);
      uint64_t v72 = *((void *)v21 + 3);
      sub_1E3C2B454(v71, v72, v21[32]);
      *(void *)(v20 + 16) = v71;
      *(void *)(v20 + 24) = v72;
      *(unsigned char *)(v20 + 32) = v33;
    }
  }
  else if (v33 == 255)
  {
    sub_1E3C2CB50(v20 + 16);
    char v73 = v21[32];
    *id v31 = *v32;
    *(unsigned char *)(v20 + 32) = v73;
  }
  else
  {
    uint64_t v34 = *((void *)v21 + 2);
    uint64_t v35 = *((void *)v21 + 3);
    sub_1E3C2B454(v34, v35, v21[32]);
    uint64_t v36 = *(void *)(v20 + 16);
    uint64_t v37 = *(void *)(v20 + 24);
    *(void *)(v20 + 16) = v34;
    *(void *)(v20 + 24) = v35;
    unsigned __int8 v38 = *(unsigned char *)(v20 + 32);
    *(unsigned char *)(v20 + 32) = v33;
    sub_1E3C2B7BC(v36, v37, v38);
  }
  *(void *)(v20 + 40) = *((void *)v21 + 5);
  *(void *)(v20 + 48) = *((void *)v21 + 6);
  uint64_t v75 = (id *)(v20 + 56);
  uint64_t v76 = (id *)(v21 + 56);
  int v77 = v21[64];
  if (*(unsigned __int8 *)(v20 + 64) == 255)
  {
    if (v77 == 255)
    {
      id v83 = *v76;
      *(unsigned char *)(v20 + 64) = v21[64];
      id *v75 = v83;
    }
    else
    {
      id v81 = *v76;
      sub_1E3C2B46C(*v76, v21[64]);
      *(void *)(v20 + 56) = v81;
      *(unsigned char *)(v20 + 64) = v77;
    }
  }
  else if (v77 == 255)
  {
    sub_1E3C2CBA4(v20 + 56);
    char v82 = v21[64];
    id *v75 = *v76;
    *(unsigned char *)(v20 + 64) = v82;
  }
  else
  {
    id v78 = *v76;
    sub_1E3C2B46C(*v76, v21[64]);
    uint64_t v79 = *(void **)(v20 + 56);
    *(void *)(v20 + 56) = v78;
    char v80 = *(unsigned char *)(v20 + 64);
    *(unsigned char *)(v20 + 64) = v77;
    sub_1E3C2B7D4(v79, v80);
  }
  uint64_t v84 = (id *)(v20 + 72);
  os_signpost_id_t v85 = (id *)(v21 + 72);
  int v86 = v21[80];
  if (*(unsigned __int8 *)(v20 + 80) == 255)
  {
    if (v86 == 255)
    {
      id v92 = *v85;
      *(unsigned char *)(v20 + 80) = v21[80];
      id *v84 = v92;
    }
    else
    {
      id v90 = *v85;
      sub_1E3C2B46C(*v85, v21[80]);
      *(void *)(v20 + 72) = v90;
      *(unsigned char *)(v20 + 80) = v86;
    }
  }
  else if (v86 == 255)
  {
    sub_1E3C2CBA4(v20 + 72);
    char v91 = v21[80];
    id *v84 = *v85;
    *(unsigned char *)(v20 + 80) = v91;
  }
  else
  {
    id v87 = *v85;
    sub_1E3C2B46C(*v85, v21[80]);
    uint64_t v88 = *(void **)(v20 + 72);
    *(void *)(v20 + 72) = v87;
    char v89 = *(unsigned char *)(v20 + 80);
    *(unsigned char *)(v20 + 80) = v86;
    sub_1E3C2B7D4(v88, v89);
  }
  uint64_t v93 = (id *)(v20 + 88);
  uint64_t v94 = (id *)(v21 + 88);
  int v95 = v21[96];
  if (*(unsigned __int8 *)(v20 + 96) == 255)
  {
    if (v95 == 255)
    {
      id v101 = *v94;
      *(unsigned char *)(v20 + 96) = v21[96];
      *uint64_t v93 = v101;
    }
    else
    {
      id v99 = *v94;
      sub_1E3C2B46C(*v94, v21[96]);
      *(void *)(v20 + 88) = v99;
      *(unsigned char *)(v20 + 96) = v95;
    }
  }
  else if (v95 == 255)
  {
    sub_1E3C2CBA4(v20 + 88);
    char v100 = v21[96];
    *uint64_t v93 = *v94;
    *(unsigned char *)(v20 + 96) = v100;
  }
  else
  {
    id v96 = *v94;
    sub_1E3C2B46C(*v94, v21[96]);
    uint64_t v97 = *(void **)(v20 + 88);
    *(void *)(v20 + 88) = v96;
    char v98 = *(unsigned char *)(v20 + 96);
    *(unsigned char *)(v20 + 96) = v95;
    sub_1E3C2B7D4(v97, v98);
  }
  uint64_t v102 = (id *)(v20 + 104);
  uint64_t v103 = (id *)(v21 + 104);
  int v104 = v21[112];
  if (*(unsigned __int8 *)(v20 + 112) == 255)
  {
    if (v104 == 255)
    {
      id v110 = *v103;
      *(unsigned char *)(v20 + 112) = v21[112];
      *uint64_t v102 = v110;
    }
    else
    {
      id v108 = *v103;
      sub_1E3C2B46C(*v103, v21[112]);
      *(void *)(v20 + 104) = v108;
      *(unsigned char *)(v20 + 112) = v104;
    }
  }
  else if (v104 == 255)
  {
    sub_1E3C2CBA4(v20 + 104);
    char v109 = v21[112];
    *uint64_t v102 = *v103;
    *(unsigned char *)(v20 + 112) = v109;
  }
  else
  {
    id v105 = *v103;
    sub_1E3C2B46C(*v103, v21[112]);
    uint64_t v106 = *(void **)(v20 + 104);
    *(void *)(v20 + 104) = v105;
    char v107 = *(unsigned char *)(v20 + 112);
    *(unsigned char *)(v20 + 112) = v104;
    sub_1E3C2B7D4(v106, v107);
  }
  int v111 = (id *)(v20 + 120);
  uint64_t v112 = (id *)(v21 + 120);
  int v113 = v21[128];
  if (*(unsigned __int8 *)(v20 + 128) == 255)
  {
    if (v113 == 255)
    {
      id v119 = *v112;
      *(unsigned char *)(v20 + 128) = v21[128];
      id *v111 = v119;
    }
    else
    {
      id v117 = *v112;
      sub_1E3C2B46C(*v112, v21[128]);
      *(void *)(v20 + 120) = v117;
      *(unsigned char *)(v20 + 128) = v113;
    }
  }
  else if (v113 == 255)
  {
    sub_1E3C2CBA4(v20 + 120);
    char v118 = v21[128];
    id *v111 = *v112;
    *(unsigned char *)(v20 + 128) = v118;
  }
  else
  {
    id v114 = *v112;
    sub_1E3C2B46C(*v112, v21[128]);
    uint64_t v115 = *(void **)(v20 + 120);
    *(void *)(v20 + 120) = v114;
    char v116 = *(unsigned char *)(v20 + 128);
    *(unsigned char *)(v20 + 128) = v113;
    sub_1E3C2B7D4(v115, v116);
  }
  *(unsigned char *)(v20 + 129) = v21[129];
  uint64_t v120 = v22[11];
  uint64_t v121 = v20 + v120;
  uint64_t v122 = &v21[v120];
  uint64_t v123 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v123 - 8) + 24))(v121, v122, v123);
  uint64_t v124 = v22[12];
  uint64_t v125 = (void *)(v20 + v124);
  uint64_t v126 = &v21[v124];
  void *v125 = *(void *)v126;
  v125[1] = *((void *)v126 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + v22[13]) = v21[v22[13]];
  *(unsigned char *)(v20 + v22[14]) = v21[v22[14]];
  *(unsigned char *)(v20 + v22[15]) = v21[v22[15]];
  uint64_t v127 = v22[16];
  os_signpost_id_t v128 = (void *)(v20 + v127);
  uint64_t v129 = &v21[v127];
  void *v128 = *(void *)v129;
  v128[1] = *((void *)v129 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_75:
  uint64_t v130 = v9[22];
  uint64_t v131 = (void *)((char *)v4 + v130);
  uint64_t v132 = (void *)((char *)v5 + v130);
  unint64_t v133 = *(void *)((char *)v5 + v130 + 8);
  if (*(void *)((char *)v4 + v130 + 8) >> 60 == 15)
  {
    if (v133 >> 60 != 15)
    {
      uint64_t v134 = *v132;
      sub_1E3C14F74(*v132, v133);
      uint64_t *v131 = v134;
      v131[1] = v133;
      goto LABEL_82;
    }
    goto LABEL_80;
  }
  if (v133 >> 60 == 15)
  {
    sub_1E3C2CC54((uint64_t)v131);
LABEL_80:
    *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
    goto LABEL_82;
  }
  uint64_t v135 = *v132;
  sub_1E3C14F74(*v132, v133);
  uint64_t v136 = *v131;
  unint64_t v137 = v131[1];
  uint64_t *v131 = v135;
  v131[1] = v133;
  sub_1E3C2B7E8(v136, v137);
LABEL_82:
  uint64_t v138 = v9[23];
  uint64_t v139 = (char *)v4 + v138;
  uint64_t v140 = (char *)v5 + v138;
  uint64_t v141 = sub_1E3E77D00();
  uint64_t v142 = *(void *)(v141 - 8);
  int v143 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 48);
  int v144 = v143(v139, 1, v141);
  int v145 = v143(v140, 1, v141);
  if (!v144)
  {
    if (!v145)
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 24))(v139, v140, v141);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v142 + 8))(v139, v141);
    goto LABEL_87;
  }
  if (v145)
  {
LABEL_87:
    uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v139, v140, *(void *)(*(void *)(v146 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v139, v140, v141);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v139, 0, 1, v141);
  return a1;
}

void *initializeWithTake for UpdateEpisodePlayStateIntent(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_OWORD *)uint64_t v5 = *(_OWORD *)((char *)a2 + v4);
  *((void *)v5 + 2) = *(void *)((char *)a2 + v4 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)((char *)a2 + v4 + 24);
  *((void *)v5 + 5) = *(void *)((char *)a2 + v4 + 40);
  long long v7 = *(_OWORD *)((char *)a2 + v4 + 64);
  *((_OWORD *)v5 + 3) = *(_OWORD *)((char *)a2 + v4 + 48);
  *((_OWORD *)v5 + 4) = v7;
  long long v8 = *(_OWORD *)((char *)a2 + v4 + 96);
  *((_OWORD *)v5 + 5) = *(_OWORD *)((char *)a2 + v4 + 80);
  *((_OWORD *)v5 + 6) = v8;
  long long v9 = *(_OWORD *)((char *)a2 + v4 + 128);
  *((_OWORD *)v5 + 7) = *(_OWORD *)((char *)a2 + v4 + 112);
  *((_OWORD *)v5 + 8) = v9;
  uint64_t v10 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v11 = v10[20];
  int v12 = &v5[v11];
  uint64_t v13 = &v6[v11];
  uint64_t v14 = sub_1E3E7A2E0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = v10[21];
  uint64_t v18 = &v5[v17];
  uint64_t v19 = &v6[v17];
  uint64_t v20 = (int *)sub_1E3E78740();
  uint64_t v21 = *((void *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    long long v23 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v23;
    unsigned char v18[32] = v19[32];
    *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
    *((void *)v18 + 7) = *((void *)v19 + 7);
    v18[64] = v19[64];
    *(_OWORD *)(v18 + 113) = *(_OWORD *)(v19 + 113);
    *(_OWORD *)(v18 + 104) = *(_OWORD *)(v19 + 104);
    *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
    *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
    v18[129] = v19[129];
    uint64_t v24 = v20[11];
    int v25 = &v18[v24];
    int v26 = &v19[v24];
    uint64_t v27 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    *(_OWORD *)&v18[v20[12]] = *(_OWORD *)&v19[v20[12]];
    v18[v20[13]] = v19[v20[13]];
    v18[v20[14]] = v19[v20[14]];
    v18[v20[15]] = v19[v20[15]];
    *(_OWORD *)&v18[v20[16]] = *(_OWORD *)&v19[v20[16]];
    (*(void (**)(char *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_OWORD *)&v5[v10[22]] = *(_OWORD *)&v6[v10[22]];
  uint64_t v28 = v10[23];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  uint64_t v31 = sub_1E3E77D00();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

void *assignWithTake for UpdateEpisodePlayStateIntent(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (void *)((char *)a1 + v3);
  uint64_t v5 = (void *)((char *)a2 + v3);
  uint64_t v6 = *(void *)((char *)a2 + v3 + 8);
  *uint64_t v4 = *(void *)((char *)a2 + v3);
  v4[1] = v6;
  swift_bridgeObjectRelease();
  long long v7 = (void *)v4[2];
  v4[2] = v5[2];

  uint64_t v8 = v5[4];
  v4[3] = v5[3];
  v4[4] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = v5[6];
  v4[5] = v5[5];
  v4[6] = v9;
  swift_release();
  v4[7] = v5[7];
  swift_release();
  v4[8] = v5[8];
  swift_release();
  v4[9] = v5[9];
  swift_release();
  v4[10] = v5[10];
  swift_release();
  v4[11] = v5[11];
  swift_release();
  v4[12] = v5[12];
  swift_release();
  v4[13] = v5[13];
  swift_release();
  v4[14] = v5[14];
  swift_release();
  v4[15] = v5[15];
  swift_release();
  v4[16] = v5[16];
  swift_release();
  v4[17] = v5[17];
  swift_release();
  uint64_t v10 = (int *)type metadata accessor for EpisodeEntity(0);
  uint64_t v11 = v10[20];
  int v12 = (char *)v4 + v11;
  uint64_t v13 = (char *)v5 + v11;
  uint64_t v14 = sub_1E3E7A2E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1EAE24FF8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = v10[21];
  uint64_t v21 = (uint64_t)v4 + v20;
  uint64_t v22 = (char *)v5 + v20;
  long long v23 = (int *)sub_1E3E78740();
  uint64_t v24 = *((void *)v23 - 1);
  int v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25((uint64_t)v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      long long v28 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *(_OWORD *)(v21 + 16) = v28;
      *(unsigned char *)(v21 + 32) = v22[32];
      *(_OWORD *)(v21 + 40) = *(_OWORD *)(v22 + 40);
      *(void *)(v21 + 56) = *((void *)v22 + 7);
      *(unsigned char *)(v21 + 64) = v22[64];
      *(_OWORD *)(v21 + 113) = *(_OWORD *)(v22 + 113);
      *(_OWORD *)(v21 + 104) = *(_OWORD *)(v22 + 104);
      *(_OWORD *)(v21 + 88) = *(_OWORD *)(v22 + 88);
      *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
      *(unsigned char *)(v21 + 129) = v22[129];
      uint64_t v29 = v23[11];
      uint64_t v30 = v21 + v29;
      uint64_t v31 = &v22[v29];
      uint64_t v32 = sub_1E3E78630();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      *(_OWORD *)(v21 + v23[12]) = *(_OWORD *)&v22[v23[12]];
      *(unsigned char *)(v21 + v23[13]) = v22[v23[13]];
      *(unsigned char *)(v21 + v23[14]) = v22[v23[14]];
      *(unsigned char *)(v21 + v23[15]) = v22[v23[15]];
      *(_OWORD *)(v21 + v23[16]) = *(_OWORD *)&v22[v23[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
LABEL_13:
      uint64_t v34 = a1;
      goto LABEL_14;
    }
LABEL_12:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4240);
    memcpy((void *)v21, v22, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  if (v27)
  {
    sub_1E3C2CBF8(v21);
    goto LABEL_12;
  }
  uint64_t v51 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = v22 + 16;
  int v53 = *(unsigned __int8 *)(v21 + 32);
  if (v53 != 255)
  {
    int v54 = v22[32];
    if (v54 != 255)
    {
      uint64_t v55 = *(void *)(v21 + 16);
      uint64_t v56 = *(void *)(v21 + 24);
      *(_OWORD *)(v21 + 16) = *v52;
      *(unsigned char *)(v21 + 32) = v54;
      sub_1E3C2B7BC(v55, v56, v53);
      goto LABEL_33;
    }
    sub_1E3C2CB50(v21 + 16);
  }
  *(_OWORD *)(v21 + 16) = *v52;
  *(unsigned char *)(v21 + 32) = v22[32];
LABEL_33:
  *(_OWORD *)(v21 + 40) = *(_OWORD *)(v22 + 40);
  int v57 = v22 + 56;
  int v58 = *(unsigned __int8 *)(v21 + 64);
  if (v58 != 255)
  {
    int v59 = v22[64];
    if (v59 != 255)
    {
      uint64_t v60 = *(void **)(v21 + 56);
      *(void *)(v21 + 56) = *v57;
      *(unsigned char *)(v21 + 64) = v59;
      sub_1E3C2B7D4(v60, v58);
      goto LABEL_38;
    }
    sub_1E3C2CBA4(v21 + 56);
  }
  *(void *)(v21 + 56) = *v57;
  *(unsigned char *)(v21 + 64) = v22[64];
LABEL_38:
  uint64_t v34 = a1;
  uint64_t v61 = v22 + 72;
  int v62 = *(unsigned __int8 *)(v21 + 80);
  if (v62 != 255)
  {
    int v63 = v22[80];
    if (v63 != 255)
    {
      uint64_t v64 = *(void **)(v21 + 72);
      *(void *)(v21 + 72) = *v61;
      *(unsigned char *)(v21 + 80) = v63;
      sub_1E3C2B7D4(v64, v62);
      goto LABEL_43;
    }
    sub_1E3C2CBA4(v21 + 72);
  }
  *(void *)(v21 + 72) = *v61;
  *(unsigned char *)(v21 + 80) = v22[80];
LABEL_43:
  uint64_t v65 = v22 + 88;
  int v66 = *(unsigned __int8 *)(v21 + 96);
  if (v66 != 255)
  {
    int v67 = v22[96];
    if (v67 != 255)
    {
      uint64_t v68 = *(void **)(v21 + 88);
      *(void *)(v21 + 88) = *v65;
      *(unsigned char *)(v21 + 96) = v67;
      sub_1E3C2B7D4(v68, v66);
      goto LABEL_48;
    }
    sub_1E3C2CBA4(v21 + 88);
  }
  *(void *)(v21 + 88) = *v65;
  *(unsigned char *)(v21 + 96) = v22[96];
LABEL_48:
  uint64_t v69 = v22 + 104;
  int v70 = *(unsigned __int8 *)(v21 + 112);
  if (v70 != 255)
  {
    int v71 = v22[112];
    if (v71 != 255)
    {
      uint64_t v72 = *(void **)(v21 + 104);
      *(void *)(v21 + 104) = *v69;
      *(unsigned char *)(v21 + 112) = v71;
      sub_1E3C2B7D4(v72, v70);
      goto LABEL_53;
    }
    sub_1E3C2CBA4(v21 + 104);
  }
  *(void *)(v21 + 104) = *v69;
  *(unsigned char *)(v21 + 112) = v22[112];
LABEL_53:
  char v73 = v22 + 120;
  int v74 = *(unsigned __int8 *)(v21 + 128);
  if (v74 == 255)
  {
LABEL_57:
    *(void *)(v21 + 120) = *v73;
    *(unsigned char *)(v21 + 128) = v22[128];
    goto LABEL_58;
  }
  int v75 = v22[128];
  if (v75 == 255)
  {
    sub_1E3C2CBA4(v21 + 120);
    goto LABEL_57;
  }
  uint64_t v76 = *(void **)(v21 + 120);
  *(void *)(v21 + 120) = *v73;
  *(unsigned char *)(v21 + 128) = v75;
  sub_1E3C2B7D4(v76, v74);
LABEL_58:
  *(unsigned char *)(v21 + 129) = v22[129];
  uint64_t v77 = v23[11];
  uint64_t v78 = v21 + v77;
  uint64_t v79 = &v22[v77];
  uint64_t v80 = sub_1E3E78630();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v80 - 8) + 40))(v78, v79, v80);
  uint64_t v81 = v23[12];
  char v82 = (void *)(v21 + v81);
  id v83 = &v22[v81];
  uint64_t v85 = *(void *)v83;
  uint64_t v84 = *((void *)v83 + 1);
  *char v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v21 + v23[13]) = v22[v23[13]];
  *(unsigned char *)(v21 + v23[14]) = v22[v23[14]];
  *(unsigned char *)(v21 + v23[15]) = v22[v23[15]];
  uint64_t v86 = v23[16];
  id v87 = (void *)(v21 + v86);
  uint64_t v88 = &v22[v86];
  uint64_t v90 = *(void *)v88;
  uint64_t v89 = *((void *)v88 + 1);
  *id v87 = v90;
  v87[1] = v89;
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v35 = v10[22];
  uint64_t v36 = (uint64_t)v4 + v35;
  uint64_t v37 = (char *)v5 + v35;
  unint64_t v38 = *(void *)((char *)v4 + v35 + 8);
  if (v38 >> 60 == 15)
  {
LABEL_17:
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    goto LABEL_19;
  }
  unint64_t v39 = *((void *)v37 + 1);
  if (v39 >> 60 == 15)
  {
    sub_1E3C2CC54(v36);
    goto LABEL_17;
  }
  uint64_t v40 = *(void *)v36;
  *(void *)uint64_t v36 = *(void *)v37;
  *(void *)(v36 + 8) = v39;
  sub_1E3C2B7E8(v40, v38);
LABEL_19:
  uint64_t v41 = v10[23];
  id v42 = (char *)v4 + v41;
  id v43 = (char *)v5 + v41;
  uint64_t v44 = sub_1E3E77D00();
  uint64_t v45 = *(void *)(v44 - 8);
  id v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46(v43, 1, v44);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
      return v34;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
    goto LABEL_24;
  }
  if (v48)
  {
LABEL_24:
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v42, v43, *(void *)(*(void *)(v49 - 8) + 64));
    return v34;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  return v34;
}

uint64_t getEnumTagSinglePayload for UpdateEpisodePlayStateIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E3AAB4);
}

uint64_t sub_1E3E3AAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for EpisodeEntity(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for UpdateEpisodePlayStateIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E3AB38);
}

uint64_t sub_1E3E3AB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for EpisodeEntity(0);
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1E3E3ABAC()
{
  uint64_t result = type metadata accessor for EpisodeEntity(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ThinClientStateNetworking.init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  sub_1E3E7BE20();

  return swift_release();
}

uint64_t ThinClientStateNetworking.init(mediaRequestController:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3C1B644(a1, a2);
}

uint64_t ThinClientStateNetworking.fetchNewEpisodeStates(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3E3AD34(a1, a2, a3, (void (*)(void))sub_1E3E3ACC0);
}

unint64_t sub_1E3E3ACC0()
{
  unint64_t result = qword_1EAE29A98;
  if (!qword_1EAE29A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29A98);
  }
  return result;
}

uint64_t ThinClientStateNetworking.fetchNewPodcastStates(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E3E3AD34(a1, a2, a3, (void (*)(void))sub_1E3E3ADD8);
}

uint64_t sub_1E3E3AD34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  a4();
  swift_bridgeObjectRetain();
  sub_1E3E7A370();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1E3E3ADD8()
{
  unint64_t result = qword_1EAE29AA0;
  if (!qword_1EAE29AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29AA0);
  }
  return result;
}

uint64_t sub_1E3E3AE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1E3E3AE6C(a1, a2, a3, a4, a5, (void (*)(void))sub_1E3E3ACC0);
}

uint64_t sub_1E3E3AE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1E3E3AE6C(a1, a2, a3, a4, a5, (void (*)(void))sub_1E3E3ADD8);
}

uint64_t sub_1E3E3AE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  a6();
  swift_bridgeObjectRetain();
  sub_1E3E7A370();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for ThinClientStateNetworking()
{
  return &type metadata for ThinClientStateNetworking;
}

double TipType.adHocImpression.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 2;
  return result;
}

BOOL TipType.init(rawValue:)()
{
  uint64_t v0 = sub_1E3E7E050();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

unint64_t TipType.rawValue.getter()
{
  return 0xD000000000000012;
}

unint64_t sub_1E3E3AFAC()
{
  unint64_t result = qword_1EAE29AA8;
  if (!qword_1EAE29AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29AA8);
  }
  return result;
}

uint64_t sub_1E3E3B000()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E3B058()
{
  return sub_1E3E7CE50();
}

uint64_t sub_1E3E3B074()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E3B0C8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1E3E7E050();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1E3E3B11C(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001E3E9B340;
}

unsigned char *storeEnumTagSinglePayload for TipType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1E3E3B1D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TipType()
{
  return &type metadata for TipType;
}

uint64_t dispatch thunk of SidebarSearchFieldKeyDelegate.handleDownArrow()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SidebarSearchFieldKeyDelegate.handleUpArrow()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SidebarSearchFieldKeyDelegate.handleEsc()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for PodcastStateMediaAPIRequest()
{
  return &type metadata for PodcastStateMediaAPIRequest;
}

uint64_t sub_1E3E3B25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v3 - 8);
  int v71 = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273B0);
  MEMORY[0x1F4188790](v5 - 8);
  int v70 = (char *)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29580);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v69 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273C0);
  MEMORY[0x1F4188790](v9 - 8);
  int v75 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29590);
  MEMORY[0x1F4188790](v11 - 8);
  int v74 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273D0);
  MEMORY[0x1F4188790](v13 - 8);
  char v73 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E78770();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  int v18 = (char *)v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1E3E7A880();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7A7C0();
  swift_bridgeObjectRetain();
  long long v23 = sub_1E3E7A860();
  os_log_type_t v24 = sub_1E3E7D4D0();
  if (os_log_type_enabled(v23, v24))
  {
    int v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int v25 = 134217984;
    uint64_t v78 = *(void *)(a1 + 16);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v23, v24, "Fetching state for %ld podcasts", v25, 0xCu);
    MEMORY[0x1E4E79510](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4F91600], v15);
  uint64_t v26 = *MEMORY[0x1E4F91618];
  uint64_t v27 = sub_1E3E78790();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 104);
  uint64_t v30 = v73;
  v29(v73, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v27);
  uint64_t v31 = sub_1E3E78820();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v74, 1, 1, v31);
  uint64_t v32 = sub_1E3E787B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v75, 1, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29CC0);
  uint64_t v33 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26020) - 8);
  unint64_t v34 = (*(unsigned __int8 *)(*(void *)v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v76 = xmmword_1E3E86660;
  *(_OWORD *)(v35 + 16) = xmmword_1E3E86660;
  unint64_t v36 = v35 + v34;
  uint64_t v37 = v33[14];
  v29((char *)v36, v26, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29CD0);
  uint64_t v38 = sub_1E3E787C0();
  uint64_t v39 = *(void *)(v38 - 8);
  unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v76;
  (*(void (**)(unint64_t, void, uint64_t))(v39 + 104))(v41 + v40, *MEMORY[0x1E4F91678], v38);
  *(void *)(v36 + v37) = v41;
  v68[2] = sub_1E3C7FAD8(v35);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273E0);
  uint64_t v42 = sub_1E3E787D0();
  uint64_t v43 = *(void *)(v42 - 8);
  unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v76;
  v68[1] = v45;
  (*(void (**)(unint64_t, void, uint64_t))(v43 + 104))(v45 + v44, *MEMORY[0x1E4F916B0], v42);
  int64_t v46 = *(void *)(a1 + 16);
  int v47 = v18;
  uint64_t v48 = MEMORY[0x1E4FBC860];
  if (v46)
  {
    v68[0] = v47;
    uint64_t v78 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1E3CC7660(0, v46, 0);
    uint64_t v49 = v78;
    uint64_t result = sub_1E3DE3F98(a1);
    uint64_t v51 = result;
    uint64_t v53 = v52;
    char v55 = v54 & 1;
    *(void *)&long long v76 = a1 + 56;
    while ((v51 & 0x8000000000000000) == 0 && v51 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v76 + (((unint64_t)v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(a1 + 36) != v53) {
        goto LABEL_18;
      }
      uint64_t v77 = *(void *)(*(void *)(a1 + 48) + 8 * v51);
      sub_1E3C340DC();
      uint64_t v56 = sub_1E3E7DC90();
      uint64_t v58 = v57;
      uint64_t v78 = v49;
      uint64_t v59 = a1;
      unint64_t v61 = *(void *)(v49 + 16);
      unint64_t v60 = *(void *)(v49 + 24);
      if (v61 >= v60 >> 1)
      {
        sub_1E3CC7660(v60 > 1, v61 + 1, 1);
        uint64_t v49 = v78;
      }
      *(void *)(v49 + 16) = v61 + 1;
      uint64_t v62 = v49 + 16 * v61;
      *(void *)(v62 + 32) = v56;
      *(void *)(v62 + 40) = v58;
      uint64_t result = sub_1E3DE403C(v51, v53, v55 & 1, v59);
      uint64_t v51 = result;
      uint64_t v53 = v63;
      char v55 = v64 & 1;
      --v46;
      a1 = v59;
      if (!v46)
      {
        sub_1E3D15688(result, v63, v64 & 1);
        swift_bridgeObjectRelease();
        uint64_t v48 = MEMORY[0x1E4FBC860];
        *(void *)&long long v76 = v49;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
    *(void *)&long long v76 = MEMORY[0x1E4FBC860];
LABEL_15:
    uint64_t v65 = sub_1E3E787A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v69, 1, 1, v65);
    uint64_t v66 = sub_1E3E78810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v70, 1, 1, v66);
    uint64_t v67 = sub_1E3E77D00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v71, 1, 1, v67);
    sub_1E3E5398C(v48);
    sub_1E3E5398C(v48);
    sub_1E3E539C8(v48);
    sub_1E3E53BBC(v48);
    sub_1E3E53DF8(v48);
    sub_1E3E53E34(v48);
    return sub_1E3E787F0();
  }
  return result;
}

uint64_t sub_1E3E3BC90@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E3B25C(*v1, a1);
}

uint64_t sub_1E3E3BC98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E3C0FC();
  *a1 = result;
  return result;
}

void sub_1E3E3BCC0(uint64_t a1, char a2, uint64_t *a3)
{
  if (!*(void *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v52 = *(void *)(a1 + 16);
  uint64_t v4 = (void *)swift_bridgeObjectRetain();
  uint64_t v5 = v4[5];
  uint64_t v7 = v4[6];
  unint64_t v6 = v4[7];
  uint64_t v9 = v4[8];
  uint64_t v8 = v4[9];
  id v50 = v4;
  uint64_t v10 = *a3;
  uint64_t v55 = v4[4];
  uint64_t v11 = sub_1E3C2E728(v55);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v12 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_25;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  uint64_t v18 = *(void *)(v10 + 24);
  uint64_t v57 = v5;
  sub_1E3D15694(v5, v7, v6);
  if (v18 >= v15)
  {
    if (a2)
    {
      if (v17) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1E3D148FC();
      if (v17) {
        goto LABEL_10;
      }
    }
LABEL_13:
    long long v23 = a3;
    os_log_type_t v24 = (void *)*a3;
    *(void *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    *(void *)(v24[6] + 8 * v16) = v55;
    int v25 = (uint64_t *)(v24[7] + 40 * v16);
    *int v25 = v5;
    v25[1] = v7;
    v25[2] = v6;
    v25[3] = v9;
    v25[4] = v8;
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v24[2] = v28;
    uint64_t v29 = v52 - 1;
    if (v52 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v30 = v50 + 15;
    while (1)
    {
      uint64_t v51 = v29;
      uint64_t v31 = *(v30 - 4);
      uint64_t v32 = *(v30 - 3);
      unint64_t v33 = *(v30 - 2);
      uint64_t v35 = *(v30 - 1);
      uint64_t v34 = *v30;
      uint64_t v36 = *v23;
      uint64_t v56 = *(v30 - 5);
      uint64_t v37 = sub_1E3C2E728(v56);
      uint64_t v38 = *(void *)(v36 + 16);
      char v54 = v39;
      BOOL v40 = (v39 & 1) == 0;
      uint64_t v41 = v38 + v40;
      if (__OFADD__(v38, v40)) {
        break;
      }
      unint64_t v42 = v37;
      uint64_t v43 = *(void *)(v36 + 24);
      uint64_t v57 = v31;
      sub_1E3D15694(v31, v32, v33);
      if (v43 < v41)
      {
        sub_1E3D12748(v41, 1);
        uint64_t v44 = sub_1E3C2E728(v56);
        if ((v54 & 1) != (v45 & 1)) {
          goto LABEL_27;
        }
        unint64_t v42 = v44;
      }
      if (v54)
      {
        unint64_t v6 = v33;
        uint64_t v7 = v32;
        goto LABEL_10;
      }
      long long v23 = a3;
      int64_t v46 = (void *)*a3;
      *(void *)(*a3 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      *(void *)(v46[6] + 8 * v42) = v56;
      int v47 = (uint64_t *)(v46[7] + 40 * v42);
      *int v47 = v31;
      v47[1] = v32;
      v47[2] = v33;
      v47[3] = v35;
      v47[4] = v34;
      uint64_t v48 = v46[2];
      BOOL v27 = __OFADD__(v48, 1);
      uint64_t v49 = v48 + 1;
      if (v27) {
        goto LABEL_26;
      }
      v30 += 6;
      v46[2] = v49;
      uint64_t v29 = v51 - 1;
      if (v51 == 1) {
        goto LABEL_23;
      }
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1E3D12748(v15, a2 & 1);
  uint64_t v19 = sub_1E3C2E728(v55);
  if ((v17 & 1) == (v20 & 1))
  {
    unint64_t v16 = v19;
    if ((v17 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v21 = (void *)swift_allocError();
    swift_willThrow();
    id v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1E3E3C360(v57, v7, v6);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_28;
  }
LABEL_27:
  sub_1E3E7E200();
  __break(1u);
LABEL_28:
  sub_1E3E7DDD0();
  sub_1E3E7CEA0();
  sub_1E3E7DF20();
  sub_1E3E7CEA0();
  sub_1E3E7DF80();
  __break(1u);
}

uint64_t sub_1E3E3C0FC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27378);
  unint64_t v0 = sub_1E3E79B30();
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E3E7DFC0();
    if (v2) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_18;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  uint64_t v3 = 0;
  unint64_t v4 = v1 & 0xC000000000000001;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v24 = v2;
  unint64_t v25 = v1;
  unint64_t v23 = v1 & 0xC000000000000001;
  do
  {
    if (v4) {
      id v6 = (id)MEMORY[0x1E4E77720](v3, v1);
    }
    else {
      id v6 = *(id *)(v1 + 8 * v3 + 32);
    }
    uint64_t v7 = v6;
    sub_1E3E79AB0();
    uint64_t v8 = sub_1E3E7A540();
    if ((v9 & 1) != 0 || (uint64_t v10 = v8, sub_1E3E79A80(), v11 = sub_1E3E79F80(), swift_release(), v11 == 2))
    {
    }
    else
    {
      sub_1E3E78A20();
      uint64_t v12 = v26[1];
      uint64_t v13 = v26[2];
      uint64_t v15 = v26[3];
      uint64_t v14 = v26[4];
      uint64_t v16 = v26[5];

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_1E3CB88D4(0, v5[2] + 1, 1, v5);
      }
      unint64_t v18 = v5[2];
      unint64_t v17 = v5[3];
      if (v18 >= v17 >> 1) {
        uint64_t v5 = sub_1E3CB88D4((void *)(v17 > 1), v18 + 1, 1, v5);
      }
      v5[2] = v18 + 1;
      uint64_t v19 = &v5[6 * v18];
      void v19[4] = v10;
      v19[5] = v12;
      v19[6] = v13;
      v19[7] = v15;
      v19[8] = v14;
      v19[9] = v16;
      uint64_t v2 = v24;
      unint64_t v1 = v25;
      unint64_t v4 = v23;
    }
    ++v3;
  }
  while (v2 != v3);
LABEL_19:
  swift_bridgeObjectRelease_n();
  if (v5[2])
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273F0);
    uint64_t v20 = sub_1E3E7E000();
  }
  else
  {
    uint64_t v20 = MEMORY[0x1E4FBC868];
  }
  v26[0] = v20;
  uint64_t v21 = swift_bridgeObjectRetain();
  sub_1E3E3BCC0(v21, 1, v26);
  swift_bridgeObjectRelease();
  return v26[0];
}

uint64_t sub_1E3E3C360(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1E3E3C374()
{
  qword_1EAE29AB0 = 0x4030000000000000;
}

double ContextActionPreviewPaddingInset.getter()
{
  if (qword_1EAE24578 != -1) {
    swift_once();
  }
  return *(double *)&qword_1EAE29AB0;
}

uint64_t ContextMenuPreviewBackgroundColor.hash(into:)()
{
  return sub_1E3E7E280();
}

BOOL static ContextMenuPreviewBackgroundColor.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContextMenuPreviewBackgroundColor.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

void sub_1E3E3C464(uint64_t a1@<X8>)
{
}

void ContextMenuPreviewView.previewMargins.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
}

void sub_1E3E3C490(unsigned char *a1@<X8>)
{
}

void ContextMenuPreviewView.previewBackgroundColor.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

BOOL _s10PodcastsUI25ContextMenuPreviewMarginsO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float64x2_t v3 = *(float64x2_t *)a1;
  float64x2_t v2 = *(float64x2_t *)(a1 + 16);
  float64x2_t v5 = *(float64x2_t *)a2;
  float64x2_t v4 = *(float64x2_t *)(a2 + 16);
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    uint64_t v6 = vorrq_s8((int8x16_t)vdupq_lane_s64(*(uint64_t *)&v2, 0), *(int8x16_t *)&v3).i64[1] | *(void *)&v3.f64[0] | *(void *)&v2.f64[1];
    int8x16_t v7 = vorrq_s8((int8x16_t)v5, (int8x16_t)v4);
    int8x8_t v8 = (int8x8_t)vextq_s8(v7, v7, 8uLL).u64[0];
    BOOL v9 = vorr_s8(*(int8x8_t *)v7.i8, v8) == 0;
    if (!*(unsigned char *)(a2 + 32)) {
      BOOL v9 = 0;
    }
    BOOL v10 = vorr_s8(*(int8x8_t *)v7.i8, v8) != 0;
    BOOL v11 = (*(unsigned char *)(a2 + 32) & 1) != 0 && v10;
    if (!v6) {
      return v9;
    }
    return v11;
  }
  else
  {
    char v13 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v3, v5), (int32x4_t)vceqq_f64(v2, v4))), 0xFuLL)));
    if (*(unsigned char *)(a2 + 32)) {
      char v14 = 0;
    }
    else {
      char v14 = v13;
    }
    return v14 & 1;
  }
}

unint64_t sub_1E3E3C560()
{
  unint64_t result = qword_1EAE29AB8;
  if (!qword_1EAE29AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29AB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContextMenuPreviewMargins(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ContextMenuPreviewMargins(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

uint64_t sub_1E3E3C608(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1E3E3C624(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 32) = 1;
  }
  else
  {
    *(unsigned char *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextMenuPreviewMargins()
{
  return &type metadata for ContextMenuPreviewMargins;
}

unsigned char *storeEnumTagSinglePayload for ContextMenuPreviewBackgroundColor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E3C724);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextMenuPreviewBackgroundColor()
{
  return &type metadata for ContextMenuPreviewBackgroundColor;
}

uint64_t dispatch thunk of ContextMenuPreviewView.setInContextMenu(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ContextMenuPreviewView.previewMargins.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContextMenuPreviewView.previewBackgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

BOOL UIScrollView.isScrolledToTop.getter()
{
  objc_msgSend(v0, sel_contentOffset);
  double v2 = v1;
  objc_msgSend(v0, sel_adjustedContentInset);
  return v2 + v3 <= 0.001;
}

BOOL static UIEdgeInsets.Edge.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t UIEdgeInsets.Edge.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t UIEdgeInsets.Edge.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

double UIEdgeInsets.updating(edge:by:)(unsigned char *a1, double a2, double a3)
{
  switch(*a1)
  {
    case 1:
    case 2:
    case 3:
      return a3;
    default:
      a3 = a2 + a3;
      break;
  }
  return a3;
}

double UIEdgeInsets.replacing(edge:with:)(unsigned char *a1, double a2, double a3)
{
  switch(*a1)
  {
    case 1:
    case 2:
    case 3:
      double result = a3;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1E3E3C938()
{
  unint64_t result = qword_1EAE29AC0;
  if (!qword_1EAE29AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29AC0);
  }
  return result;
}

unsigned char *_s4EdgeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E3CA58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIEdgeInsets.Edge()
{
  return &type metadata for UIEdgeInsets.Edge;
}

uint64_t FindOrCreateLocalEpisodeContentIDsIntent.init(identifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t static FindOrCreateLocalEpisodeContentIDsIntent.kind.getter()
{
  return 0xD000000000000013;
}

uint64_t FindOrCreateLocalEpisodeContentIDsIntent.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1E3E3CABC(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001E3EA37F0;
}

ValueMetadata *type metadata accessor for FindOrCreateLocalEpisodeContentIDsIntent()
{
  return &type metadata for FindOrCreateLocalEpisodeContentIDsIntent;
}

id NSLayoutAnchor.constraint(equalTo:constant:priority:)(uint64_t a1, double a2, float a3)
{
  id v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, a1);
  *(float *)&double v6 = a3;
  objc_msgSend(v5, sel_setPriority_, v6);
  return v5;
}

id sub_1E3E3CB48(void *a1, double a2, float a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  id v9 = a1;
  id v10 = NSLayoutAnchor.constraint(equalTo:constant:priority:)((uint64_t)v8, a2, a3);

  return v10;
}

NSLayoutConstraint __swiftcall NSLayoutConstraint.withPriority(priority:)(UILayoutPriority priority)
{
  objc_msgSend(v1, sel_setPriority_);

  return (NSLayoutConstraint)v3;
}

void sub_1E3E3CC04()
{
  dword_1EBFDF098 = 1148829696;
}

float static UILayoutPriority.highestBreakable.getter()
{
  if (qword_1EBFDF0A0 != -1) {
    swift_once();
  }
  return *(float *)&dword_1EBFDF098;
}

void ClickLocationTracker.addElement(_:)()
{
  double v1 = *(os_unfair_lock_s **)(v0 + 16);
  double v2 = (uint64_t *)&v1[4];
  id v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1E3D34048(v2);
  os_unfair_lock_unlock(v3);
}

double ClickLocationTracker.parent(of:)@<D0>(uint64_t a1@<X8>)
{
  id v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  id v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  uint64_t v16 = v4;
  sub_1E3D34064(v4, (uint64_t)&v17);
  os_unfair_lock_unlock(v5);
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  uint64_t v10 = v19;
  uint64_t v9 = v20;
  uint64_t v11 = v21;
  uint64_t v12 = v22;
  uint64_t v14 = v23;
  uint64_t v13 = v24;
  if (v18)
  {
    if (v22)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1E3C1B578(v7, v8);
      MEMORY[0x1F4188790](v15);
      os_unfair_lock_lock(v5);
      sub_1E3D34080(v16, a1);
      os_unfair_lock_unlock(v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1E3C1B578(v17, v18);
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
  else
  {
    *(void *)a1 = v17;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v13;
  }
  return result;
}

void ClickLocationTracker.element(for:)(uint64_t a1@<X8>)
{
  id v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  id v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1E3D34080(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t ClickLocationTracker.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  unint64_t v1 = sub_1E3C80580(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B48);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = v1;
  *(void *)(v0 + 16) = v2;
  return v0;
}

uint64_t ClickLocationTracker.locationStack(for:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE49D0);
  sub_1E3E78A90();
  uint64_t v4 = sub_1E3E3DB7C(a1, a2, v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t ClickLocationTracker.init()()
{
  unint64_t v1 = sub_1E3C80580(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B48);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = v1;
  *(void *)(v0 + 16) = v2;
  return v0;
}

uint64_t ClickLocationTracker.deinit()
{
  swift_release();
  return v0;
}

uint64_t ClickLocationTracker.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1E3E3D058@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1E3C2E48C(a2, a3);
    if (v9)
    {
      unint64_t v10 = *(void *)(v5 + 56) + (v8 << 6);
      uint64_t v11 = *(void *)(v10 + 8);
      uint64_t v12 = *(void *)(v10 + 16);
      uint64_t v13 = *(void *)(v10 + 56);
      *(void *)a4 = *(void *)v10;
      *(void *)(a4 + 8) = v11;
      *(void *)(a4 + 16) = v12;
      *(_OWORD *)(a4 + 24) = *(_OWORD *)(v10 + 24);
      *(_OWORD *)(a4 + 40) = *(_OWORD *)(v10 + 40);
      *(void *)(a4 + 56) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRelease();
    }
    double result = swift_bridgeObjectRelease();
  }
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

Swift::Bool __swiftcall ClickLocationTracker.containsElement(for:)(Swift::String a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1E3D34080(v3, (uint64_t)&v6);
  os_unfair_lock_unlock(v4);
  LOBYTE(v3) = v7 != 0;
  sub_1E3C1B578(v6, v7);
  return v3;
}

BOOL ClickLocationTracker.containsElement(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (!v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = 0;
  }
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 6;
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v4);
  sub_1E3D34080(v3, (uint64_t)&v7);
  os_unfair_lock_unlock(v4);
  BOOL v5 = v8 != 0;
  sub_1E3C1B578(v7, v8);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1E3E3D288(uint64_t *a1, uint64_t a2)
{
  if (*(void *)(a2 + 24))
  {
    uint64_t v4 = *(void *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 24);
  }
  else
  {
    uint64_t v4 = *(void *)a2;
    uint64_t v5 = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
  }
  sub_1E3E3DD64(a2);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_1E3E6878C((long long *)a2, v4, v5, isUniquelyReferenced_nonNull_native);
  *a1 = v8;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void ClickLocationTracker.removeElement(for:)(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1E3E3DCDC(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1E3E3D3AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1E3C2E48C(a2, a3);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *a1;
    uint64_t v16 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1E3D14AC0();
      uint64_t v12 = v16;
    }
    swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v12 + 56) + (v8 << 6);
    uint64_t v14 = *(void *)(v13 + 8);
    *(void *)a4 = *(void *)v13;
    *(void *)(a4 + 8) = v14;
    long long v15 = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(a4 + 16) = *(_OWORD *)(v13 + 16);
    *(_OWORD *)(a4 + 32) = v15;
    *(_OWORD *)(a4 + 48) = *(_OWORD *)(v13 + 48);
    sub_1E3D5B2E4(v8, v12);
    *a1 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t ClickLocationTracker.removeElement(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)(v4 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(v4 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v6);
  sub_1E3E3DDBC(v5, a2);
  os_unfair_lock_unlock(v6);
  return swift_bridgeObjectRelease();
}

uint64_t ClickLocationTracker.removeElements(where:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1E3E3DCF8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1E3E3D5CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = a1;
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E3E3D7D8(a2, a3, v8);
  uint64_t v10 = result;
  uint64_t v11 = *(void *)(result + 16);
  if (v11)
  {
    uint64_t v21 = a4;
    swift_bridgeObjectRetain();
    uint64_t v20 = v10;
    uint64_t v12 = v10 + 56;
    uint64_t v22 = v6;
    do
    {
      uint64_t v23 = v11;
      uint64_t v13 = *(void *)(v12 - 24);
      uint64_t v14 = *(void *)(v12 - 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_1E3C2E48C(v13, v14);
      char v17 = v16;
      swift_bridgeObjectRelease();
      if (v17)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = *v6;
        uint64_t v24 = *v6;
        *uint64_t v6 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1E3D14AC0();
          uint64_t v19 = v24;
        }
        swift_bridgeObjectRelease();
        sub_1E3D5B2E4(v15, v19);
        *uint64_t v6 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      v12 += 64;
      uint64_t v6 = v22;
      uint64_t v11 = v23 - 1;
    }
    while (v23 != 1);
    uint64_t v10 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    a4 = v21;
  }
  *a4 = v10;
  return result;
}

uint64_t sub_1E3E3D7D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = (uint64_t (*)(void *))result;
  int64_t v4 = 0;
  uint64_t v7 = *(void *)(a3 + 64);
  uint64_t v5 = a3 + 64;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v6;
  uint64_t v29 = v5;
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v10)
    {
      uint64_t v35 = (v10 - 1) & v10;
      unint64_t v12 = __clz(__rbit64(v10)) | (v4 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v4++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v4 >= v30) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v4);
    if (!v14) {
      break;
    }
LABEL_20:
    uint64_t v35 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_21:
    char v16 = (uint64_t *)(*(void *)(a3 + 56) + (v12 << 6));
    uint64_t v17 = v16[1];
    uint64_t v18 = v16[2];
    uint64_t v19 = v16[3];
    uint64_t v20 = v16[4];
    uint64_t v21 = v16[5];
    uint64_t v23 = v16[6];
    uint64_t v22 = v16[7];
    uint64_t v33 = *v16;
    v36[0] = *v16;
    v36[1] = v17;
    v36[2] = v18;
    v36[3] = v19;
    v36[4] = v20;
    v36[5] = v21;
    v36[6] = v23;
    v36[7] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v24 = v31(v36);
    if (v3)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11;
    }
    int64_t v34 = v4;
    if (v24)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v37 = v11;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1E3CC79FC(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v37;
      }
      unint64_t v26 = *(void *)(v11 + 16);
      unint64_t v25 = *(void *)(v11 + 24);
      unint64_t v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        uint64_t result = sub_1E3CC79FC(v25 > 1, v26 + 1, 1);
        unint64_t v27 = v26 + 1;
        uint64_t v11 = v37;
      }
      *(void *)(v11 + 16) = v27;
      uint64_t v28 = (void *)(v11 + (v26 << 6));
      v28[4] = v33;
      v28[5] = v17;
      v28[6] = v18;
      v28[7] = v19;
      v28[8] = v20;
      v28[9] = v21;
      v28[10] = v23;
      v28[11] = v22;
      uint64_t v3 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v3 = 0;
    }
    int64_t v4 = v34;
    unint64_t v10 = v35;
  }
  int64_t v15 = v4 + 1;
  if (v4 + 1 >= v30) {
    goto LABEL_33;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14) {
    goto LABEL_19;
  }
  int64_t v15 = v4 + 2;
  if (v4 + 2 >= v30) {
    goto LABEL_33;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14) {
    goto LABEL_19;
  }
  int64_t v15 = v4 + 3;
  if (v4 + 3 >= v30) {
    goto LABEL_33;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14) {
    goto LABEL_19;
  }
  int64_t v15 = v4 + 4;
  if (v4 + 4 >= v30)
  {
LABEL_33:
    swift_release();
    return v11;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14)
  {
LABEL_19:
    int64_t v4 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v30) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

Swift::Void __swiftcall ClickLocationTracker.removeAllElements()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1E3E3DB40(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_1E3E3DB40(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E4FBC868];
  return result;
}

uint64_t sub_1E3E3DB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1E3C2E48C(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = (uint64_t *)(*(void *)(a3 + 56) + (v6 << 6));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v12 = v8[2];
  uint64_t v11 = v8[3];
  uint64_t v14 = v8[4];
  uint64_t v13 = v8[5];
  uint64_t v15 = v8[7];
  uint64_t v20 = v8[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BC8);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_1E3E86660;
  *(void *)(v16 + 32) = v10;
  *(void *)(v16 + 40) = v9;
  *(void *)(v16 + 48) = v12;
  *(void *)(v16 + 56) = v11;
  *(void *)(v16 + 64) = v14;
  if (v13)
  {
    *(void *)(v16 + 72) = v13;
    *(void *)(v16 + 80) = v20;
    *(void *)(v16 + 88) = v15;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1E3E3DB7C(v14, v13, a3);
    swift_bridgeObjectRelease();
    sub_1E3D3AF30(v18);
  }
  else
  {
    *(void *)(v16 + 72) = 0;
    *(void *)(v16 + 80) = v20;
    *(void *)(v16 + 88) = v15;
  }
  return v17;
}

uint64_t sub_1E3E3DCDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3E3D3AC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1E3E3DCF8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E3E3D5CC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t type metadata accessor for ClickLocationTracker()
{
  return self;
}

uint64_t method lookup function for ClickLocationTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClickLocationTracker);
}

uint64_t dispatch thunk of ClickLocationTracker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1E3E3DD64(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3E3DDBC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1E3E3DCDC(a1, a2);
}

id LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = sub_1E3E42C84(a1, a2, a3, a4);

  return v10;
}

id LanguageAwareString.__allocating_init(_:baseParagraphStyle:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_1E3E43400(a1, a2);

  return v6;
}

id sub_1E3E3DED4()
{
  uint64_t v1 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString);
  }
  else
  {
    id v4 = sub_1E3E3DFB8(*(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString_baseAttributedString), *(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString_paragraphs));
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1E3E3DFA4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString) = a1;
  return MEMORY[0x1F41817F8]();
}

id sub_1E3E3DFB8(void *a1, void *a2)
{
  if (a1)
  {
    return a1;
  }
  else
  {
    uint64_t v4 = a2[2];
    if (v4 == 1)
    {
      uint64_t v6 = a2[4];
      uint64_t v5 = a2[5];
      uint64_t v7 = a2[6];
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1E3E7CF10();
      swift_bridgeObjectRelease();
      if (!v6 && v5 == v8)
      {
        if (v7 == -1)
        {
          if (qword_1EBFE6278 != -1) {
            swift_once();
          }
          id v9 = &qword_1EBFE6150;
        }
        else if (v7 == 1)
        {
          if (qword_1EBFE6040 != -1) {
            swift_once();
          }
          id v9 = &qword_1EBFE6038;
        }
        else
        {
          if (v7)
          {
LABEL_35:
            id result = (id)sub_1E3E7DF80();
            __break(1u);
            return result;
          }
          if (qword_1EBFE6270 != -1) {
            swift_once();
          }
          id v9 = &qword_1EBFE6148;
        }
        uint64_t v20 = (void *)*v9;
        __swift_instantiateConcreteTypeFromMangledName(qword_1EAE29BC0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
        uint64_t v22 = (void *)*MEMORY[0x1E4FB0738];
        *(void *)(inited + 32) = *MEMORY[0x1E4FB0738];
        *(void *)(inited + 64) = sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE6160);
        *(void *)(inited + 40) = v20;
        id v23 = v20;
        swift_bridgeObjectRetain();
        id v24 = v23;
        id v25 = v22;
        sub_1E3C7FC88(inited);
        id v26 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        unint64_t v27 = (void *)sub_1E3E7CCF0();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1E3D20770();
        uint64_t v28 = (void *)sub_1E3E7CB50();
        swift_bridgeObjectRelease();
        id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

        return v29;
      }
    }
    id v10 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithString_, v11);

    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = a2 + 6;
      uint64_t v14 = *MEMORY[0x1E4FB0738];
      do
      {
        uint64_t v16 = *(v13 - 2);
        uint64_t v17 = *(v13 - 1);
        uint64_t v18 = *v13;
        if (*v13 == -1)
        {
          uint64_t v15 = &qword_1EBFE6150;
          if (qword_1EBFE6278 != -1)
          {
            swift_once();
            uint64_t v15 = &qword_1EBFE6150;
          }
        }
        else if (v18 == 1)
        {
          uint64_t v15 = &qword_1EBFE6038;
          if (qword_1EBFE6040 != -1)
          {
            swift_once();
            uint64_t v15 = &qword_1EBFE6038;
          }
        }
        else
        {
          if (v18) {
            goto LABEL_35;
          }
          uint64_t v15 = &qword_1EBFE6148;
          if (qword_1EBFE6270 != -1)
          {
            swift_once();
            uint64_t v15 = &qword_1EBFE6148;
          }
        }
        v13 += 4;
        objc_msgSend(v12, sel_addAttribute_value_range_, v14, *v15, v16, v17);
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_initWithAttributedString_, v12);

    return v19;
  }
}

void (*sub_1E3E3E430(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1E3E3DED4();
  return sub_1E3E3E478;
}

void sub_1E3E3E478(uint64_t *a1, uint64_t a2)
{
}

uint64_t LanguageAwareString.string.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1E3E3E564()
{
  return sub_1E3E3E698(&OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase, MEMORY[0x1E4F280D8]);
}

uint64_t sub_1E3E3E5CC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase) = a1;
  return MEMORY[0x1F41817F8]();
}

void (*sub_1E3E3E5E0(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1E3E3E564();
  return sub_1E3E3E628;
}

void sub_1E3E3E628(uint64_t *a1, uint64_t a2)
{
}

id sub_1E3E3E678()
{
  return sub_1E3E3E698(&OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase, MEMORY[0x1E4F280E0]);
}

id sub_1E3E3E698(uint64_t *a1, uint64_t (*a2)(void, unint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v7 = v2;
    unint64_t v8 = sub_1E3C10C8C();
    uint64_t v9 = a2(MEMORY[0x1E4FBB1A0], v8);
    uint64_t v11 = v10;
    swift_beginAccess();
    char v12 = byte_1EAE29AD0;
    id v13 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    id v14 = sub_1E3E42C84(v9, v11, 0, v12);
    uint64_t v15 = *(void **)(v7 + v3);
    *(void *)(v7 + v3) = v14;
    id v5 = v14;

    uint64_t v4 = 0;
  }
  id v16 = v4;
  return v5;
}

uint64_t sub_1E3E3E7CC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase) = a1;
  return MEMORY[0x1F41817F8]();
}

void (*sub_1E3E3E7E0(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1E3E3E678();
  return sub_1E3E3E828;
}

void sub_1E3E3E828(uint64_t *a1, uint64_t a2)
{
}

id sub_1E3E3E878()
{
  uint64_t v1 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace);
  }
  else
  {
    uint64_t v4 = v0;
    sub_1E3C10C8C();
    uint64_t v5 = sub_1E3E7DC20();
    uint64_t v7 = v6;
    swift_beginAccess();
    char v8 = byte_1EAE29AD0;
    id v9 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    id v10 = sub_1E3E42C84(v5, v7, 0, v8);
    uint64_t v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v10;
    id v3 = v10;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

uint64_t sub_1E3E3E9EC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace) = a1;
  return MEMORY[0x1F41817F8]();
}

void (*sub_1E3E3EA00(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1E3E3E878();
  return sub_1E3E3EA48;
}

void sub_1E3E3EA48(uint64_t *a1, uint64_t a2)
{
}

id sub_1E3E3EA98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E77990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed);
  if (v7)
  {
    id v8 = *(id *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string + 8);
    v19[1] = *(void *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string);
    v19[2] = v9;
    swift_bridgeObjectRetain();
    sub_1E3E77960();
    sub_1E3C10C8C();
    uint64_t v10 = sub_1E3E7DC10();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v13 = byte_1EAE29AD0;
    id v14 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    id v15 = sub_1E3E42C84(v10, v12, 0, v13);
    id v16 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v15;
    id v8 = v15;

    uint64_t v7 = 0;
  }
  id v17 = v7;
  return v8;
}

uint64_t sub_1E3E3EC78(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed) = a1;
  return MEMORY[0x1F41817F8]();
}

void (*sub_1E3E3EC8C(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1E3E3EA98();
  return sub_1E3E3ECD4;
}

void sub_1E3E3ECD4(uint64_t *a1, uint64_t a2)
{
}

void sub_1E3E3ECE0(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(void **)(v3 + *a3);
  *(void *)(v3 + *a3) = v4;
}

uint64_t LanguageAwareString.numbers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3E3EDAC()
{
  uint64_t v1 = v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange;
  if (*(unsigned char *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange + 16) != 1) {
    return *(void *)v1;
  }
  uint64_t v2 = sub_1E3E3EFC0();
  uint64_t result = 0;
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = 0;
  return result;
}

uint64_t sub_1E3E3EE14(uint64_t result, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange;
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(unsigned char *)(v3 + 16) = 0;
  return result;
}

__n128 (*sub_1E3E3EE2C(uint64_t *a1))(__n128 *a1)
{
  a1[2] = v1;
  *a1 = sub_1E3E3EDAC();
  a1[1] = v3;
  return sub_1E3E3EE74;
}

__n128 sub_1E3E3EE74(__n128 *a1)
{
  uint64_t v1 = a1[1].n128_u64[0] + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange;
  __n128 result = *a1;
  *(__n128 *)uint64_t v1 = *a1;
  *(unsigned char *)(v1 + 16) = 0;
  return result;
}

BOOL sub_1E3E3EEBC()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty);
  if (v1 != 2) {
    return v1 & 1;
  }
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string + 8);
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(v2) & 0xF;
  }
  else {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR___AMPLanguageAwareString_string) & 0xFFFFFFFFFFFFLL;
  }
  BOOL result = v3 == 0;
  *(unsigned char *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty) = result;
  return result;
}

uint64_t sub_1E3E3EF18(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty) = result;
  return result;
}

uint64_t (*sub_1E3E3EF28(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1E3E3EEBC();
  return sub_1E3E3EF74;
}

uint64_t sub_1E3E3EF74(uint64_t result)
{
  *(unsigned char *)(*(void *)result + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty) = *(unsigned char *)(result + 8);
  return result;
}

uint64_t sub_1E3E3EFC0()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count);
  if (*(unsigned char *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count + 8) != 1) {
    return *(void *)v1;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1E3E7CF10();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v2;
  v1[8] = 0;
  return v2;
}

uint64_t sub_1E3E3F058(uint64_t result)
{
  uint64_t v2 = v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count;
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

void *(*sub_1E3E3F070(uint64_t *a1))(void *result)
{
  a1[1] = v1;
  *a1 = sub_1E3E3EFC0();
  return sub_1E3E3F0B8;
}

void *sub_1E3E3F0B8(void *result)
{
  uint64_t v1 = result[1] + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count;
  *(void *)uint64_t v1 = *result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_1E3E3F108()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count);
  if (*(unsigned char *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count + 8) != 1) {
    return *(void *)v1;
  }
  uint64_t result = sub_1E3E7CE60();
  *(void *)uint64_t v1 = result;
  v1[8] = 0;
  return result;
}

uint64_t sub_1E3E3F178(uint64_t result)
{
  uint64_t v2 = v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count;
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

void *(*sub_1E3E3F190(uint64_t *a1))(void *result)
{
  a1[1] = v1;
  *a1 = sub_1E3E3F108();
  return sub_1E3E3F1D8;
}

void *sub_1E3E3F1D8(void *result)
{
  uint64_t v1 = result[1] + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count;
  *(void *)uint64_t v1 = *result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t static LanguageAwareString.alwaysGenerateAttributedString.getter()
{
  return byte_1EAE29AD0;
}

uint64_t static LanguageAwareString.alwaysGenerateAttributedString.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1EAE29AD0 = a1;
  return result;
}

uint64_t (*static LanguageAwareString.alwaysGenerateAttributedString.modify())()
{
  return j__swift_endAccess;
}

uint64_t static LanguageAwareString.delegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t static LanguageAwareString.delegate.setter(uint64_t a1)
{
  qword_1EBFDF088 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*static LanguageAwareString.delegate.modify())()
{
  return j_j__swift_endAccess;
}

id sub_1E3E3F510()
{
  swift_beginAccess();
  char v0 = byte_1EAE29AD0;
  id v1 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
  id result = sub_1E3E42C84(0, 0xE000000000000000, 0, v0);
  qword_1EAE29AE0 = (uint64_t)result;
  return result;
}

id static LanguageAwareString.empty.getter()
{
  if (qword_1EAE24588 != -1) {
    swift_once();
  }
  char v0 = (void *)qword_1EAE29AE0;

  return v0;
}

id LanguageAwareString.init(_:baseParagraphStyle:)(void *a1, void *a2)
{
  id v4 = sub_1E3E43400(a1, a2);

  return v4;
}

id LanguageAwareString.__allocating_init(_:attributes:baseParagraphStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = sub_1E3E43780(a1, a2, a3, a4);

  return v10;
}

id LanguageAwareString.init(_:attributes:baseParagraphStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = sub_1E3E43780(a1, a2, a3, a4);

  return v5;
}

uint64_t LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v5 = v4;
  id v10 = objc_allocWithZone(v5);
  if (a2)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, void *, void))(ObjectType + 464))(a1, a2, a3, a4 & 1);
    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v12;
}

uint64_t LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a2)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, void *, void))(ObjectType + 464))(a1, a2, a3, a4 & 1);
    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v9;
}

id LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v5 = sub_1E3E42C84(a1, a2, a3, a4);

  return v5;
}

id LanguageAwareString.__allocating_init(_:attributes:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_1E3E43E4C((uint64_t)a1, a2);

  return v6;
}

id LanguageAwareString.init(_:attributes:)(void *a1, uint64_t a2)
{
  id v3 = sub_1E3E43E4C((uint64_t)a1, a2);

  return v3;
}

id LanguageAwareString.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return LanguageAwareString.init(from:)(a1);
}

id LanguageAwareString.init(from:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  uint64_t v4 = OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  uint64_t v5 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  uint64_t v6 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  uint64_t v84 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  uint64_t v86 = OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  uint64_t v7 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  id v8 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(void *)id v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(void *)uint64_t v9 = 0;
  unsigned char v9[8] = 1;
  id v10 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(void *)id v10 = 0;
  v10[8] = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v89 = v1;
  sub_1E3E7E2D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v91, v92);
    uint64_t v14 = sub_1E3E7E160();
    uint64_t v16 = v15;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
    swift_beginAccess();
    id v17 = (void *)qword_1EBFDF088;
    if (qword_1EBFDF088)
    {
      swift_unknownObjectRetain();
      uint64_t v18 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
      id v19 = objc_msgSend(v17, sel_preprocessForLanguageAwarenessString_, v18);

      uint64_t v87 = sub_1E3E7CD30();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      uint64_t v16 = v21;
    }
    else
    {
      uint64_t v87 = v14;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (byte_1EAE29AD0 == 1)
    {
      id v22 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
      swift_bridgeObjectRetain();
      uint64_t v23 = v87;
      id v24 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
      id v25 = objc_msgSend(v22, sel_initWithString_, v24);

      id v26 = 0;
    }
    else
    {
      uint64_t v23 = v87;
      id v26 = (void *)sub_1E3E7CCF0();
      id v25 = 0;
    }
    id v27 = v25;
    sub_1E3E41C44(v25, v26, 0, (uint64_t)v91);
    uint64_t v28 = v91[0];
    uint64_t v85 = (void *)v91[1];
    uint64_t v29 = v91[2];
    int v82 = v92;
    uint64_t v30 = v93;

    uint64_t v81 = v28;
    id v83 = v26;
    if (v25)
    {
      if (v30)
      {
        uint64_t v31 = *(void *)(v30 + 16);
        if (v31)
        {
          id v74 = v25;
          id v75 = v27;
          uint64_t v78 = v29;
          id v32 = v27;
          swift_bridgeObjectRetain();
          uint64_t v33 = 0;
          do
          {
            uint64_t v34 = *(void *)(v30 + 8 * v33++ + 32);
            uint64_t v35 = (void *)sub_1E3E7CCF0();
            objc_msgSend(v32, sel_replaceCharactersInRange_withString_, v34, 1, v35);
          }
          while (v31 != v33);
          swift_bridgeObjectRelease_n();

          id v27 = v75;
          uint64_t v29 = v78;
LABEL_23:
          uint64_t v23 = v87;
          int v45 = v82;
          if (!v74)
          {
            if (v82)
            {
LABEL_25:
              uint64_t v80 = v29;
              id v46 = v27;
              id v47 = sub_1E3E3DFB8(0, v85);
              uint64_t v48 = v89;
              *(void *)&v89[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v47;
              id v49 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
              id v50 = v47;
              id v51 = objc_msgSend(v49, sel_initWithAttributedString_, v50);
              if (qword_1EAE24158 != -1) {
                swift_once();
              }
              uint64_t v52 = qword_1EAE26DE8;
              id v53 = v51;
              objc_msgSend(v53, sel_performSelector_, v52);
              id v54 = objc_msgSend(v53, sel_string);
              uint64_t v55 = sub_1E3E7CD30();
              uint64_t v57 = v56;

              swift_bridgeObjectRelease();
              uint64_t v58 = &v89[OBJC_IVAR___AMPLanguageAwareString_string];
              *(void *)&v89[OBJC_IVAR___AMPLanguageAwareString_string] = v55;
              uint64_t v16 = v57;
              id v27 = v46;
LABEL_37:
              uint64_t v29 = v80;
              uint64_t v28 = v81;
LABEL_44:
              *((void *)v58 + 1) = v16;
              *(void *)&v48[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v85;
              *(void *)&v48[OBJC_IVAR___AMPLanguageAwareString_numbers] = v28;
              *(void *)&v48[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v29;

              v90.receiver = v48;
              v90.super_class = (Class)type metadata accessor for LanguageAwareString();
              id v12 = objc_msgSendSuper2(&v90, sel_init);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
              return v12;
            }
            goto LABEL_42;
          }
LABEL_30:
          objc_msgSend(v27, sel_copy, v74);
          sub_1E3E7DCA0();
          swift_unknownObjectRelease();
          sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE6170);
          if (swift_dynamicCast()) {
            uint64_t v59 = v94;
          }
          else {
            uint64_t v59 = 0;
          }
          *(void *)&v89[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v59;
          if (v45)
          {
            id v77 = v27;
            uint64_t v80 = v29;
            uint64_t v60 = qword_1EAE24158;
            id v61 = v27;
            id v62 = v59;
            if (v60 != -1) {
              swift_once();
            }
            uint64_t v63 = qword_1EAE26DE8;
            id v64 = v61;
            objc_msgSend(v64, sel_performSelector_, v63);
            id v65 = objc_msgSend(v64, sel_string);
            uint64_t v66 = sub_1E3E7CD30();
            uint64_t v68 = v67;
            swift_bridgeObjectRelease();

            uint64_t v48 = v89;
            uint64_t v58 = &v89[OBJC_IVAR___AMPLanguageAwareString_string];
            *(void *)&v89[OBJC_IVAR___AMPLanguageAwareString_string] = v66;
            uint64_t v16 = v68;
            id v27 = v77;
            goto LABEL_37;
          }
          if (v59)
          {
            id v69 = v59;
            id v70 = objc_msgSend(v69, sel_string);
            uint64_t v71 = sub_1E3E7CD30();
            uint64_t v73 = v72;

            swift_bridgeObjectRelease();
            uint64_t v16 = v73;
            uint64_t v23 = v71;
          }
          uint64_t v48 = v89;
LABEL_43:

          uint64_t v58 = &v48[OBJC_IVAR___AMPLanguageAwareString_string];
          *(void *)&v48[OBJC_IVAR___AMPLanguageAwareString_string] = v23;
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
      }
      int v45 = v82;
      goto LABEL_30;
    }
    if (!v30)
    {
      if (v82) {
        goto LABEL_25;
      }
LABEL_42:
      uint64_t v48 = v89;
      *(void *)&v89[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = 0;
      goto LABEL_43;
    }
    id v74 = 0;
    uint64_t v36 = (void *)sub_1E3E7CCF0();
    objc_msgSend(v36, sel_mutableCopy);

    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
    sub_1E3C12B10(0, (unint64_t *)&unk_1EAE29B80);
    swift_dynamicCast();
    uint64_t v37 = v94;
    uint64_t v38 = *(void *)(v30 + 16);
    if (v38)
    {
      id v76 = v27;
      uint64_t v79 = v29;
      swift_bridgeObjectRetain();
      uint64_t v39 = 0;
      do
      {
        uint64_t v40 = *(void *)(v30 + 8 * v39++ + 32);
        uint64_t v41 = (void *)sub_1E3E7CCF0();
        objc_msgSend(v37, sel_replaceCharactersInRange_withString_, v40, 1, v41);
      }
      while (v38 != v39);
      swift_bridgeObjectRelease();
      id v27 = v76;
      uint64_t v29 = v79;
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_copy);
    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
    sub_1E3C12B10(0, &qword_1EBFE2830);
    swift_dynamicCast();
    unint64_t v42 = v94;
    uint64_t v87 = sub_1E3E7CD30();
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();

    uint64_t v16 = v44;
    goto LABEL_23;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

  uint64_t v11 = *(void **)&v1[v86];
  id v12 = v89;

  type metadata accessor for LanguageAwareString();
  swift_deallocPartialClassInstance();
  return v12;
}

uint64_t sub_1E3E40478(uint64_t a1)
{
  id v2 = sub_1E3E3DED4();
  id v3 = NSAttributedString.baseWritingDirection(forCharacterAt:)(a1);
  char v5 = v4;

  if (v5) {
    return -1;
  }
  else {
    return (uint64_t)v3;
  }
}

uint64_t sub_1E3E40544()
{
  id v1 = (unsigned char *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection);
  if (*(unsigned char *)(v0 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection + 8) != 1) {
    return *(void *)v1;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections);
  if (*(unsigned char *)(v2 + OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts) == 1) {
    uint64_t result = *(unsigned __int8 *)(v2 + OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough);
  }
  else {
    uint64_t result = -1;
  }
  *(void *)id v1 = result;
  v1[8] = 0;
  return result;
}

uint64_t sub_1E3E405C4(uint64_t result)
{
  uint64_t v2 = v1 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection;
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

void *(*sub_1E3E405DC(uint64_t *a1))(void *result)
{
  a1[1] = v1;
  *a1 = sub_1E3E40544();
  return sub_1E3E40624;
}

void *sub_1E3E40624(void *result)
{
  uint64_t v1 = result[1] + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection;
  *(void *)uint64_t v1 = *result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

void sub_1E3E40640(uint64_t a1, id a2, id a3, char a4, double a5)
{
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections);
  if (*(unsigned char *)(v6 + OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts) == 1)
  {
    uint64_t v12 = *(void *)(v6 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
    uint64_t v13 = *(void *)(v6 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
    if (v12)
    {
      if (!v13) {
        return;
      }
    }
    else if (v13)
    {
      return;
    }
    if ((a4 & 1) == 0 || (uint64_t v14 = *(void **)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage)) == 0)
    {
      id v35 = sub_1E3E3DED4();
      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB08B8]), sel_initWithAttributedString_, v35);

      id v37 = objc_allocWithZone(MEMORY[0x1E4FB0840]);
      id v15 = v36;
      id v18 = objc_msgSend(v37, sel_init);
      objc_msgSend(v15, sel_addLayoutManager_, v18);
      id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0880]), sel_initWithSize_, a5, 1.79769313e308);
      objc_msgSend(v24, sel_setLineFragmentPadding_, 0.0);
      objc_msgSend(v24, sel_setMaximumNumberOfLines_, a2);
      objc_msgSend(v24, sel_setLineBreakMode_, a3);
      objc_msgSend(v18, sel_addTextContainer_, v24);

      if (a4)
      {
        uint64_t v34 = *(void **)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage);
        *(void *)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage) = v15;
      }
      else
      {

        uint64_t v34 = *(void **)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage);
        *(void *)(v5 + OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage) = 0;
      }
      goto LABEL_35;
    }
    id v15 = v14;
    id v16 = objc_msgSend(v15, sel_layoutManagers);
    sub_1E3C12B10(0, &qword_1EAE29B90);
    unint64_t v17 = sub_1E3E7D060();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      id v18 = (id)sub_1E3E7DFC0();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_11:
        if ((v17 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_41;
          }
          id v19 = *(id *)(v17 + 32);
LABEL_14:
          uint64_t v20 = v19;
          swift_bridgeObjectRelease();
          id v18 = v20;
          id v21 = objc_msgSend(v18, sel_textContainers);
          sub_1E3C12B10(0, &qword_1EAE29B98);
          unint64_t v17 = sub_1E3E7D060();

          if (!(v17 >> 62))
          {
            if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_16;
            }
            goto LABEL_42;
          }
LABEL_41:
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_1E3E7DFC0();
          swift_bridgeObjectRelease();
          if (v40)
          {
LABEL_16:
            if ((v17 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return;
              }
              id v22 = *(id *)(v17 + 32);
LABEL_19:
              uint64_t v23 = v22;
              swift_bridgeObjectRelease();
              id v24 = v23;
              objc_msgSend(v24, sel_size);
              double v26 = v25;
              double v28 = v27;
              objc_msgSend(v24, sel_lineFragmentPadding);
              double v30 = v29;
              id v31 = objc_msgSend(v24, sel_maximumNumberOfLines);
              id v32 = objc_msgSend(v24, sel_lineBreakMode);
              id v33 = v32;
              if (v26 == a5 && v28 == 1.79769313e308)
              {
                if (v30 == 0.0)
                {
                  if (v31 == a2)
                  {
                    if (v32 == a3)
                    {

                      uint64_t v34 = v24;
LABEL_35:

                      objc_msgSend(v15, sel_writingDirectionOfLine_usingLayoutManager_textContainer_, a1, v18, v24);
                      return;
                    }
                    goto LABEL_33;
                  }
LABEL_31:
                  objc_msgSend(v24, sel_setMaximumNumberOfLines_, a2);
LABEL_32:
                  if (v33 == a3)
                  {
LABEL_34:

                    id v38 = objc_msgSend(v15, sel_fullRange);
                    objc_msgSend(v18, sel_invalidateLayoutForCharacterRange_actualCharacterRange_, v38, v39, 0);

                    uint64_t v34 = v15;
                    goto LABEL_35;
                  }
LABEL_33:
                  objc_msgSend(v24, sel_setLineBreakMode_, a3);
                  goto LABEL_34;
                }
              }
              else
              {
                objc_msgSend(v24, sel_setSize_, a5, 1.79769313e308);
                if (v30 == 0.0) {
                  goto LABEL_30;
                }
              }
              objc_msgSend(v24, sel_setLineFragmentPadding_, 0.0);
LABEL_30:
              if (v31 == a2) {
                goto LABEL_32;
              }
              goto LABEL_31;
            }
LABEL_43:
            id v22 = (id)MEMORY[0x1E4E77720](0, v17);
            goto LABEL_19;
          }
LABEL_42:
          swift_bridgeObjectRelease();
          __break(1u);
          goto LABEL_43;
        }
LABEL_39:
        id v19 = (id)MEMORY[0x1E4E77720](0, v17);
        goto LABEL_14;
      }
    }
    else
    {
      id v18 = *(id *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_39;
  }
}

id sub_1E3E40BCC()
{
  return *(id *)(v0 + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections);
}

id LanguageAwareString.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void LanguageAwareString.init()()
{
}

id LanguageAwareString.__deallocating_deinit()
{
  return sub_1E3E41510(type metadata accessor for LanguageAwareString);
}

uint64_t sub_1E3E40D78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 488))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

id sub_1E3E40E00()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___AMPLanguageAwareTextStorage_textStorage);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void sub_1E3E40EB8(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR___AMPLanguageAwareTextStorage_textStorage);
  swift_beginAccess();
  char v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
}

id LanguageAwareTextStorage.__allocating_init(_:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return LanguageAwareTextStorage.init(_:)(a1);
}

id LanguageAwareTextStorage.init(_:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareTextStorage_textStorage] = a1;
  id v3 = v1;
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_delegate);
  *(void *)&v3[OBJC_IVAR___AMPLanguageAwareTextStorage_originalTextStorageDelegate] = v5;
  objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
  id v6 = v4;
  id v7 = sub_1E3E43B5C(v6);

  *(void *)&v3[OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString] = v7;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for LanguageAwareTextStorage();
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(v6, sel_setDelegate_, v8);

  return v8;
}

id sub_1E3E41058(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = *(void **)(v5 + OBJC_IVAR___AMPLanguageAwareTextStorage_originalTextStorageDelegate);
  if (v6)
  {
    id v11 = result;
    uint64_t result = objc_msgSend(v6, sel_respondsToSelector_, sel_textStorage_willProcessEditing_range_changeInLength_);
    if (result)
    {
      return objc_msgSend(v6, sel_textStorage_willProcessEditing_range_changeInLength_, v11, a2, a3, a4, a5);
    }
  }
  return result;
}

void sub_1E3E411C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = a2;
  if ((a2 & 2) != 0)
  {
    id v12 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString());
    id v13 = a1;
    id v14 = sub_1E3E43B5C(v13);

    id v15 = *(void **)(v6 + OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString);
    *(void *)(v6 + OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString) = v14;

    v10 |= 1uLL;
  }
  id v16 = *(void **)(v6 + OBJC_IVAR___AMPLanguageAwareTextStorage_originalTextStorageDelegate);
  if (v16
    && (objc_msgSend(v16, sel_respondsToSelector_, sel_textStorage_didProcessEditing_range_changeInLength_) & 1) != 0)
  {
    objc_msgSend(v16, sel_textStorage_didProcessEditing_range_changeInLength_, a1, v10, a3, a4, a5);
  }
}

id sub_1E3E41350()
{
  return objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString)
                           + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections));
}

uint64_t sub_1E3E41388(uint64_t a1, void *a2, void *a3, char a4, double a5)
{
  id v11 = *(id *)(v5 + OBJC_IVAR___AMPLanguageAwareTextStorage_languageAwareString);
  sub_1E3E40640(a1, a2, a3, a4, a5);
  uint64_t v13 = v12;

  return v13;
}

void LanguageAwareTextStorage.init()()
{
}

id LanguageAwareTextStorage.__deallocating_deinit()
{
  return sub_1E3E41510(type metadata accessor for LanguageAwareTextStorage);
}

id sub_1E3E41510(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1E3E415A4()
{
  uint64_t result = sub_1E3E415EC(0);
  qword_1EBFE6148 = result;
  return result;
}

uint64_t sub_1E3E415C8()
{
  uint64_t result = sub_1E3E415EC(-1);
  qword_1EBFE6150 = result;
  return result;
}

uint64_t sub_1E3E415EC(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v2, sel_setAlignment_, 4);
  objc_msgSend(v2, sel_setBaseWritingDirection_, a1);
  objc_msgSend(v2, sel_setLineBreakMode_, 0);
  objc_msgSend(v2, sel_copy);
  sub_1E3E7DCA0();

  swift_unknownObjectRelease();
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE6160);
  swift_dynamicCast();
  return v4;
}

uint64_t sub_1E3E416CC()
{
  uint64_t result = sub_1E3E415EC(1);
  qword_1EBFE6038 = result;
  return result;
}

uint64_t sub_1E3E416F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1E3E7CF20();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4E767F0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_1E3E4176C(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1E3E4184C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_1E3E7DDC0();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_1E3E7DE50();
      }
      unsigned int v5 = sub_1E3E7DE60();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1E3E4184C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1E3E418EC(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1E3E4195C(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1E3E418EC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_1E3E416F0(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1E3E4195C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      void v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_1E3E7DE50();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

id sub_1E3E41A80(void *a1, uint64_t a2, uint64_t a3, id a4, id a5, void *a6)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (a5) {
    return objc_msgSend(a5, sel_paragraphStyleWithBaseWritingDirection_, a4);
  }
  v18[0] = 0;
  v18[1] = 0;
  if (objc_msgSend(a1, sel_attribute_atIndex_effectiveRange_, *MEMORY[0x1E4FB0738], a2, v18))
  {
    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_1E3C6FF50((uint64_t)v19, (uint64_t)v20);
  if (!v21)
  {
    sub_1E3C2AC28((uint64_t)v20);
    return a6;
  }
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE6160);
  if ((swift_dynamicCast() & 1) == 0) {
    return a6;
  }
  int v11 = v17;
  uint64_t v12 = sub_1E3E7DAA0();
  if ((v14 & 1) != 0 || v12 != a2 || v13 != a3 || objc_msgSend(v17, sel_baseWritingDirection) != a4)
  {
    id v16 = objc_msgSend(v17, sel_paragraphStyleWithBaseWritingDirection_, a4);

    return v16;
  }
  return v11;
}

void sub_1E3E41C44(id a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v140 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    id v7 = objc_msgSend(a1, sel_mutableString);
  }
  else
  {
    if (!a2)
    {
      if (qword_1EAE24498 != -1) {
        goto LABEL_255;
      }
      goto LABEL_236;
    }
    id v7 = a2;
  }
  int v8 = v7;
  uint64_t v9 = (uint64_t)objc_msgSend(v7, sel_length);
  if (v9 < 1)
  {
    if (qword_1EAE24498 != -1) {
      swift_once();
    }
    char v14 = (char *)(id)qword_1EBFDEEA8;

    goto LABEL_237;
  }
  int64_t v10 = v9;
  id v87 = a1;
  CFStringRef v11 = v8;
  uint64_t CharactersPtr = (uint64_t)CFStringGetCharactersPtr(v11);
  uint64_t v86 = a3;
  if (CharactersPtr) {
    CStringPtr = 0;
  }
  else {
    CStringPtr = CFStringGetCStringPtr(v11, 0x600u);
  }
  long long v131 = 0u;
  long long v132 = 0u;
  long long v129 = 0u;
  long long v130 = 0u;
  long long v127 = 0u;
  long long v128 = 0u;
  long long v125 = 0u;
  long long v126 = 0u;
  long long v123 = 0u;
  long long v124 = 0u;
  long long v121 = 0u;
  long long v122 = 0u;
  long long v119 = 0u;
  long long v120 = 0u;
  *(_OWORD *)buffer = 0u;
  long long v118 = 0u;
  uint64_t v93 = (__CFString *)v11;
  CFStringRef theString = v11;
  uint64_t v134 = (UniChar *)CharactersPtr;
  uint64_t v135 = CStringPtr;
  uint64_t v136 = 0;
  int64_t v139 = 0;
  int64_t v137 = v10;
  int64_t v138 = 0;
  uint64_t v15 = sub_1E3E778C0();
  uint64_t v100 = sub_1E3E778C0();
  char v107 = 0;
  uint64_t v108 = 0;
  int64_t v17 = 0;
  int v95 = 0;
  uint64_t v96 = 0;
  unint64_t v97 = 0;
  uint64_t v113 = 0;
  uint64_t v103 = 0;
  char v94 = 0;
  uint64_t v85 = *MEMORY[0x1E4FB0818];
  uint64_t v84 = *MEMORY[0x1E4FB0738];
  uint64_t v102 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v114 = v15;
  uint64_t v115 = v15;
  uint64_t v112 = v15;
  char v98 = (void *)MEMORY[0x1E4FBC860];
LABEL_13:
  id v18 = 0;
  unint64_t v91 = 0;
  uint64_t v92 = 0;
  char v19 = 0;
  uint64_t v20 = 0;
  uint64_t v89 = v17;
LABEL_14:
  char v88 = v19;
  int64_t v21 = v17;
LABEL_15:
  int64_t v99 = v21;
  id v101 = v18;
  int v109 = 0;
  uint64_t v22 = 0;
  LOBYTE(v21) = -1;
  uint64_t v104 = -1;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v17 < 0 || (int64_t v21 = v137, v137 <= v17))
        {
          uint64_t CharactersPtr = 0;
LABEL_23:
          uint64_t v26 = 1;
          BOOL v27 = __OFADD__(v17++, 1);
          if (v27) {
            goto LABEL_242;
          }
          goto LABEL_24;
        }
        uint64_t v23 = v134;
        if (v134)
        {
          int64_t v24 = v136 + v17;
LABEL_21:
          UniChar v25 = v23[v24];
          goto LABEL_33;
        }
        if (!v135)
        {
          if (v139 <= v17 || (int64_t v47 = v138, v138 > v17))
          {
            int64_t v48 = v17 - 4;
            if ((unint64_t)v17 < 4) {
              int64_t v48 = 0;
            }
            if (v48 + 128 < v137) {
              int64_t v21 = v48 + 128;
            }
            int64_t v138 = v48;
            int64_t v139 = v21;
            v141.location = v136 + v48;
            v141.length = v21 - v48;
            CFStringGetCharacters(theString, v141, buffer);
            int64_t v47 = v138;
          }
          int64_t v24 = v17 - v47;
          uint64_t v23 = buffer;
          goto LABEL_21;
        }
        UniChar v25 = v135[v136 + v17];
LABEL_33:
        if ((unsigned __int16)((unsigned __int16)(v25 + 9216) >> 10) <= 0x3Eu)
        {
          LODWORD(v21) = v25 >> 11;
          if (v21 == 27) {
            goto LABEL_90;
          }
          uint64_t CharactersPtr = v25;
          goto LABEL_23;
        }
        int64_t v21 = v137;
        if (__OFSUB__(v137, 1)) {
          goto LABEL_244;
        }
        if (v17 >= v137 - 1 || (uint64_t CharactersPtr = v17 + 1, v137 <= v17 + 1))
        {
LABEL_90:
          int v28 = 0;
          ++v17;
          LODWORD(v21) = 1;
          unsigned int v29 = 1;
          int v30 = 1;
          uint64_t v26 = 1;
          goto LABEL_91;
        }
        uint64_t v34 = v134;
        if (v134)
        {
          uint64_t v35 = v136 + CharactersPtr;
        }
        else
        {
          if (v135)
          {
            UniChar v36 = v135[v136 + CharactersPtr];
            goto LABEL_89;
          }
          if (v139 <= CharactersPtr || (int64_t v59 = v138, v138 > CharactersPtr))
          {
            int64_t v60 = v17 - 3;
            if ((unint64_t)v17 < 3) {
              int64_t v60 = 0;
            }
            if (v60 + 128 < v137) {
              int64_t v21 = v60 + 128;
            }
            int64_t v138 = v60;
            int64_t v139 = v21;
            v142.location = v136 + v60;
            v142.length = v21 - v60;
            CFStringGetCharacters(theString, v142, buffer);
            int64_t v59 = v138;
          }
          uint64_t v35 = CharactersPtr - v59;
          uint64_t v34 = buffer;
        }
        UniChar v36 = v34[v35];
LABEL_89:
        if ((unsigned __int16)((unsigned __int16)(v36 + 0x2000) >> 10) < 0x3Fu) {
          goto LABEL_90;
        }
        LODWORD(v21) = ((unsigned __int16)(v25 + 10240) << 10) + (unsigned __int16)(v36 + 9216);
        uint64_t CharactersPtr = (v21 + 0x10000);
        uint64_t v26 = 2;
        BOOL v27 = __OFADD__(v17, 2);
        v17 += 2;
        if (v27)
        {
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
LABEL_244:
          __break(1u);
LABEL_245:
          __break(1u);
LABEL_246:
          __break(1u);
          goto LABEL_247;
        }
LABEL_24:
        if (CharactersPtr >> 1 == 4103)
        {
LABEL_25:
          int v28 = 0;
LABEL_26:
          LODWORD(v21) = 1;
LABEL_27:
          unsigned int v29 = 1;
          int v30 = 1;
        }
        else
        {
          uint64_t v31 = AMPGetBidiClass(CharactersPtr, v16);
          int v28 = 0;
          LODWORD(v21) = 1;
          unsigned int v29 = 1;
          int v30 = 1;
          switch(v31)
          {
            case 8:
              uint64_t v32 = v113 + 1;
              if (v113 == -1) {
                goto LABEL_245;
              }
              BOOL v33 = v32 == 1;
              goto LABEL_59;
            case 9:
              uint64_t v32 = v113;
              if (v113)
              {
                uint64_t v32 = v113 - 1;
                BOOL v33 = v113 == 1;
LABEL_59:
                int v28 = v33;
              }
              else
              {
                int v28 = 0;
              }
              uint64_t CharactersPtr = 1;
              BOOL v27 = __OFADD__(v22, v26);
              v22 += v26;
              if (v27) {
                goto LABEL_243;
              }
LABEL_66:
              if (v32) {
                int v45 = 1;
              }
              else {
                int v45 = v28;
              }
              if (v45 == 1)
              {
                uint64_t v113 = v32;
                int v28 = 0;
                LODWORD(v21) = 0;
                v109 |= v104 != -1;
              }
              else
              {
                uint64_t v113 = 0;
                int v28 = 0;
                LODWORD(v21) = 0;
                unsigned int v29 = 1;
                int v30 = 1;
                switch(v31)
                {
                  case 0:
                  case 7:
                  case 13:
                  case 14:
                    goto LABEL_91;
                  case 1:
                    if (v104 != -1)
                    {
                      uint64_t v113 = 0;
                      int v28 = 0;
                      LODWORD(v21) = 0;
                      BOOL v57 = v104 == 0;
                      goto LABEL_143;
                    }
                    uint64_t v113 = 0;
                    uint64_t v104 = 0;
                    int v28 = 0;
                    LODWORD(v21) = 0;
                    unsigned int v29 = 1;
                    goto LABEL_91;
                  case 2:
                    if (v104 == -1)
                    {
                      uint64_t v113 = 0;
                      int v28 = 0;
                      LODWORD(v21) = 0;
                      uint64_t v104 = 1;
                      unsigned int v29 = 1;
                      goto LABEL_91;
                    }
                    uint64_t v113 = 0;
                    int v28 = 0;
                    LODWORD(v21) = 0;
                    BOOL v57 = v104 == 1;
LABEL_143:
                    int v58 = !v57;
                    v109 |= v58;
                    goto LABEL_27;
                  case 3:
                    if (sub_1E3E778C0() != v114) {
                      goto LABEL_131;
                    }
                    if (sub_1E3E778C0() == v115)
                    {
                      uint64_t v114 = v17 - v26;
                      if (__OFSUB__(v17, v26)) {
                        goto LABEL_262;
                      }
LABEL_131:
                      int v30 = CharactersPtr;
                    }
                    else
                    {
                      int v30 = 1;
                      uint64_t v103 = v108;
                      uint64_t v114 = v115;
                    }
                    uint64_t v61 = v103 + v26;
                    if (__OFADD__(v103, v26)) {
                      goto LABEL_251;
                    }
                    v103 += v26;
                    uint64_t v62 = v61 + v114;
                    uint64_t v100 = v62 - 1;
                    if (__OFSUB__(v62, 1)) {
                      goto LABEL_252;
                    }
                    uint64_t v113 = 0;
                    int v28 = 0;
                    LODWORD(v21) = 0;
                    unsigned int v29 = CharactersPtr;
                    goto LABEL_91;
                  case 4:
                    if (sub_1E3E778C0() == v114)
                    {
                      uint64_t v113 = 0;
                      int v28 = 0;
                      LODWORD(v21) = 0;
                      int v30 = 1;
                      unsigned int v29 = CharactersPtr;
                      goto LABEL_91;
                    }
                    BOOL v27 = __OFADD__(v103, v26);
                    v103 += v26;
                    if (v27) {
                      goto LABEL_258;
                    }
                    goto LABEL_72;
                  case 5:
                    if (sub_1E3E778C0() == v114)
                    {
                      if (sub_1E3E778C0() == v115)
                      {
                        if (__OFSUB__(v17, v26)) {
                          goto LABEL_260;
                        }
                        uint64_t v115 = v17 - v26;
                        BOOL v27 = __OFADD__(v108, v26);
                        v108 += v26;
                        if (v27) {
                          goto LABEL_265;
                        }
                      }
                      else
                      {
                        BOOL v27 = __OFADD__(v108, v26);
                        v108 += v26;
                        if (v27) {
                          goto LABEL_264;
                        }
                      }
                    }
                    else
                    {
                      BOOL v27 = __OFADD__(v103, v26);
                      v103 += v26;
                      if (v27) {
                        goto LABEL_257;
                      }
                    }
LABEL_72:
                    uint64_t v113 = 0;
                    int v28 = 0;
                    LODWORD(v21) = 0;
                    break;
                  case 6:
                    if (sub_1E3E778C0() == v114)
                    {
                      if (sub_1E3E778C0() == v115)
                      {
                        uint64_t v115 = v17 - v26;
                        if (__OFSUB__(v17, v26)) {
                          goto LABEL_261;
                        }
                      }
                      else
                      {
                        BOOL v27 = __OFADD__(v108, v26);
                        v108 += v26;
                        if (v27) {
                          goto LABEL_263;
                        }
                      }
                    }
                    else
                    {
                      BOOL v27 = __OFADD__(v103, v26);
                      v103 += v26;
                      if (v27) {
                        goto LABEL_259;
                      }
                    }
                    goto LABEL_72;
                  case 8:
                  case 9:
                    goto LABEL_72;
                  default:
                    goto LABEL_270;
                }
              }
              unsigned int v29 = CharactersPtr;
              int v30 = CharactersPtr;
              break;
            case 10:
              goto LABEL_48;
            case 11:
              break;
            case 12:
              if (CharactersPtr > 0x7F)
              {
                int v63 = (CharactersPtr & 0x3F) << 8;
                if (CharactersPtr >= 0x800)
                {
                  unsigned int v64 = (v63 | (CharactersPtr >> 6) & 0x3F) << 8;
                  unsigned int v65 = (((v64 | (CharactersPtr >> 12) & 0x3F) << 8) | (CharactersPtr >> 18))
                      - 2122219023;
                  unsigned int v37 = (v64 | (CharactersPtr >> 12)) + 8487393;
                  if (WORD1(CharactersPtr)) {
                    unsigned int v37 = v65;
                  }
                }
                else
                {
                  unsigned int v37 = (v63 | (CharactersPtr >> 6)) + 33217;
                }
              }
              else
              {
                unsigned int v37 = CharactersPtr + 1;
              }
              uint64_t v116 = (v37 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v37) >> 3))));
              unint64_t v38 = MEMORY[0x1E4E76760](&v116);
              unint64_t v40 = sub_1E3E4176C(v38, v39);
              if ((v40 & 0x100000000) != 0) {
                goto LABEL_269;
              }
              int v41 = v40;
              swift_bridgeObjectRelease();
              if ((v41 - 14) <= 0xFFFFFFFB && (v41 - 8232) >= 2 && v41 != 133) {
                goto LABEL_25;
              }
LABEL_48:
              LOBYTE(v21) = 40;
              if (CharactersPtr == 8232)
              {
                if (__OFSUB__(v17, v26)) {
                  goto LABEL_246;
                }
                unint64_t v42 = v107;
                if (!v107) {
                  unint64_t v42 = (void *)MEMORY[0x1E4FBC860];
                }
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v42 = sub_1E3CB8318(0, v42[2] + 1, 1, v42);
                }
                unint64_t v44 = v42[2];
                unint64_t v43 = v42[3];
                char v107 = v42;
                uint64_t CharactersPtr = v44 + 1;
                if (v44 >= v43 >> 1) {
                  char v107 = sub_1E3CB8318((void *)(v43 > 1), v44 + 1, 1, v107);
                }
                v107[2] = CharactersPtr;
                v107[v44 + 4] = v17 - v26;
                int v28 = 1;
              }
              else
              {
                int v28 = 1;
                if (v10 > v17 && CharactersPtr == 13)
                {
                  uint64_t CharactersPtr = (uint64_t)buffer;
                  AMPCFStringInlineBuffer.character(at:)(v17);
                  if ((v46 & 0x1FFFFFFFFLL) == 0xA)
                  {
                    ++v26;
                    ++v17;
                  }
                }
              }
              goto LABEL_26;
            default:
              uint64_t CharactersPtr = 0;
              uint64_t v32 = v113;
              BOOL v27 = __OFADD__(v22, v26);
              v22 += v26;
              if (!v27) {
                goto LABEL_66;
              }
              goto LABEL_243;
          }
        }
LABEL_91:
        BOOL v27 = __OFADD__(v20, v26);
        v20 += v26;
        if (v27)
        {
          __break(1u);
LABEL_239:
          uint64_t v102 = (void *)CharactersPtr;
          goto LABEL_240;
        }
        BOOL v49 = v17 == v10;
        if (v17 == v10)
        {
          int v30 = 1;
          int v50 = 1;
        }
        else
        {
          int v50 = v21;
        }
        uint64_t CharactersPtr = v17 == v10 ? 1 : v29;
        if (v30 != 1) {
          break;
        }
        uint64_t v51 = sub_1E3E778C0();
        LOBYTE(v21) = v115;
        if (v51 == v115)
        {
          if (v17 == v10) {
            int v28 = 1;
          }
          if ((CharactersPtr & 1) == 0) {
            goto LABEL_111;
          }
          goto LABEL_110;
        }
        if (CharactersPtr)
        {
          uint64_t v108 = 0;
          if (v17 == v10) {
            int v28 = 1;
          }
          uint64_t v115 = v112;
          goto LABEL_110;
        }
        uint64_t v108 = 0;
        LOBYTE(v21) = v112;
        uint64_t v115 = v112;
        if (v50)
        {
          BOOL v49 = 0;
          uint64_t v115 = v112;
          goto LABEL_188;
        }
      }
      BOOL v49 = 0;
      int v50 = v21;
      if ((v29 & 1) == 0) {
        goto LABEL_111;
      }
LABEL_110:
      uint64_t v52 = sub_1E3E778C0();
      LOBYTE(v21) = v114;
      if (v52 != v114) {
        break;
      }
LABEL_111:
      if (v50) {
        goto LABEL_188;
      }
      if (v49) {
        goto LABEL_240;
      }
    }
    if (__OFSUB__(v114 + v103, 1)) {
      break;
    }
    if (v100 < v114 + v103 - 1)
    {
      uint64_t v53 = v100 - v114;
      if (__OFSUB__(v100, v114)) {
        goto LABEL_253;
      }
      uint64_t v103 = v53 + 1;
      if (__OFADD__(v53, 1)) {
        goto LABEL_254;
      }
    }
    uint64_t v90 = a4;
    uint64_t CharactersPtr = (uint64_t)v102;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t CharactersPtr = (uint64_t)sub_1E3CB8208(0, v102[2] + 1, 1, v102);
    }
    unint64_t v55 = *(void *)(CharactersPtr + 16);
    unint64_t v54 = *(void *)(CharactersPtr + 24);
    if (v55 >= v54 >> 1) {
      uint64_t CharactersPtr = (uint64_t)sub_1E3CB8208((void *)(v54 > 1), v55 + 1, 1, (void *)CharactersPtr);
    }
    *(void *)(CharactersPtr + 16) = v55 + 1;
    uint64_t v56 = CharactersPtr + 16 * v55;
    *(void *)(v56 + 32) = v114;
    *(void *)(v56 + 40) = v103;
    swift_bridgeObjectRelease();
    uint64_t v100 = sub_1E3E778C0();
    if (v50)
    {
      uint64_t v102 = (void *)CharactersPtr;
      uint64_t v103 = 0;
      uint64_t v114 = v112;
      a4 = v90;
LABEL_188:
      uint64_t CharactersPtr = v104;
      id v18 = v101;
      if (v104 == 1)
      {
        BOOL v66 = __CFADD__(v91++, 1);
        if (!v66) {
          goto LABEL_194;
        }
        goto LABEL_249;
      }
      if (!v104)
      {
        BOOL v66 = __CFADD__(v92++, 1);
        if (v66) {
          goto LABEL_250;
        }
LABEL_194:
        if (v22 >= 1) {
          goto LABEL_198;
        }
LABEL_199:
        if (v28) {
          goto LABEL_209;
        }
        int64_t v21 = v17;
        if (v49) {
          goto LABEL_240;
        }
        goto LABEL_15;
      }
      if (v22 < 1) {
        goto LABEL_199;
      }
      id v18 = v101 + 1;
      if (v101 == (char *)-1)
      {
        __break(1u);
LABEL_257:
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
LABEL_263:
        __break(1u);
LABEL_264:
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
      }
LABEL_198:
      if ((v109 & 1) == 0) {
        goto LABEL_199;
      }
      if (v87)
      {
        id v67 = objc_allocWithZone(NSNumber);
        id v110 = v87;
        id v105 = objc_msgSend(v67, sel_initWithInteger_, v104);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
        uint64_t v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_1E3E8A550;
        *(void *)(v68 + 32) = v105;
        uint64_t v116 = v68;
        sub_1E3E7D080();
        sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
        id v106 = v105;
        id v69 = (void *)sub_1E3E7D050();
        swift_bridgeObjectRelease();
        uint64_t CharactersPtr = (uint64_t)v110;
        objc_msgSend(v110, sel_addAttribute_value_range_, v85, v69, v99, v22);
      }
      if ((v28 & 1) == 0)
      {
        char v19 = 1;
        LOBYTE(v21) = 1;
        char v94 = 1;
        if (v49)
        {
LABEL_247:
          char v94 = v21;
          goto LABEL_240;
        }
        goto LABEL_14;
      }
      char v88 = 1;
      char v94 = 1;
LABEL_209:
      if (__CFADD__(v96, v92)) {
        goto LABEL_266;
      }
      if (__CFADD__(v97, v91)) {
        goto LABEL_267;
      }
      BOOL v66 = __CFADD__(v95, v18);
      int v95 = &v18[(void)v95];
      if (v66) {
        goto LABEL_268;
      }
      v96 += v92;
      uint64_t CharactersPtr = (uint64_t)objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
      int v111 = WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v18, v92, v91);
      if (v111[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough]) {
        uint64_t v70 = 1;
      }
      else {
        uint64_t v70 = v111[OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts] - 1;
      }
      v97 += v91;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v98 = sub_1E3CB80F8(0, v98[2] + 1, 1, v98);
      }
      unint64_t v72 = v98[2];
      unint64_t v71 = v98[3];
      if (v72 >= v71 >> 1) {
        char v98 = sub_1E3CB80F8((void *)(v71 > 1), v72 + 1, 1, v98);
      }
      v98[2] = v72 + 1;
      uint64_t v73 = &v98[4 * v72];
      v73[4] = v89;
      v73[5] = v20;
      v73[6] = v70;
      *((unsigned char *)v73 + 56) = v88 & 1;
      if (v87)
      {
        if (v70 == -1)
        {
          id v74 = &qword_1EBFE6150;
          if (qword_1EBFE6278 != -1)
          {
            swift_once();
            id v74 = &qword_1EBFE6150;
          }
        }
        else if (v70 == 1)
        {
          id v74 = &qword_1EBFE6038;
          if (qword_1EBFE6040 != -1)
          {
            swift_once();
            id v74 = &qword_1EBFE6038;
          }
        }
        else
        {
          if (v70)
          {
            while (1)
            {
LABEL_270:
              sub_1E3E7DF80();
              __break(1u);
            }
          }
          id v74 = &qword_1EBFE6148;
          if (qword_1EBFE6270 != -1)
          {
            swift_once();
            id v74 = &qword_1EBFE6148;
          }
        }
        id v75 = (id)*v74;
        uint64_t CharactersPtr = v89;
        id v76 = sub_1E3E41A80(v87, v89, v20, (id)v70, v86, v75);
        char v78 = v77;

        if (v78)
        {
          objc_msgSend(v87, sel_addAttribute_value_range_, v84, v76, v89, v20);

          goto LABEL_231;
        }

        if (v49)
        {
LABEL_240:
          id v83 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
          char v14 = WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v95, v96, v97);

          uint64_t v80 = v107;
          uint64_t v81 = v102;
          int v82 = v98;
          char v79 = v94;
          goto LABEL_241;
        }
      }
      else
      {
LABEL_231:

        if (v49) {
          goto LABEL_240;
        }
      }
      goto LABEL_13;
    }
    uint64_t v102 = (void *)CharactersPtr;
    uint64_t v103 = 0;
    LOBYTE(v21) = v112;
    uint64_t v114 = v112;
    a4 = v90;
    if (v49) {
      goto LABEL_239;
    }
  }
  __break(1u);
LABEL_249:
  __break(1u);
LABEL_250:
  __break(1u);
LABEL_251:
  __break(1u);
LABEL_252:
  __break(1u);
LABEL_253:
  __break(1u);
LABEL_254:
  __break(1u);
LABEL_255:
  swift_once();
LABEL_236:
  char v14 = (char *)(id)qword_1EBFDEEA8;
LABEL_237:
  char v79 = 0;
  uint64_t v80 = 0;
  uint64_t v81 = (void *)MEMORY[0x1E4FBC860];
  int v82 = (void *)MEMORY[0x1E4FBC860];
LABEL_241:
  *(void *)a4 = v81;
  *(void *)(a4 + 8) = v82;
  *(void *)(a4 + 16) = v14;
  *(unsigned char *)(a4 + 24) = v79 & 1;
  *(void *)(a4 + 32) = v80;
}

id sub_1E3E42C84(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  uint64_t v9 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  int64_t v10 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(void *)int64_t v10 = 0;
  v10[8] = 1;
  CFStringRef v11 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(void *)CFStringRef v11 = 0;
  v11[8] = 1;
  uint64_t v12 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  swift_beginAccess();
  uint64_t v13 = (void *)qword_1EBFDF088;
  if (qword_1EBFDF088)
  {
    char v14 = v4;
    swift_unknownObjectRetain();
    uint64_t v15 = (void *)sub_1E3E7CCF0();
    id v16 = objc_msgSend(v13, sel_preprocessForLanguageAwarenessString_, v15);

    a1 = sub_1E3E7CD30();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    a2 = v18;
    if (a4) {
      goto LABEL_7;
    }
  }
  else
  {
    char v19 = v4;
    if (a4) {
      goto LABEL_7;
    }
  }
  if (!a3)
  {
    uint64_t v20 = (void *)sub_1E3E7CCF0();
    id v21 = 0;
    goto LABEL_8;
  }
LABEL_7:
  id v22 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  swift_bridgeObjectRetain();
  uint64_t v23 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v22, sel_initWithString_, v23);

  uint64_t v20 = 0;
LABEL_8:
  id v24 = v21;
  id v76 = v20;
  sub_1E3E41C44(v21, v20, a3, (uint64_t)v80);
  uint64_t v25 = v80[0];
  char v77 = (void *)v80[1];
  uint64_t v26 = v80[2];
  int v75 = v81;
  uint64_t v27 = v82;

  if (!v21)
  {
    if (!v27)
    {
      if (v75) {
        goto LABEL_22;
      }
LABEL_37:
      *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = 0;
LABEL_38:

      uint64_t v53 = &v4[OBJC_IVAR___AMPLanguageAwareString_string];
      *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_string] = a1;
      goto LABEL_39;
    }
    unint64_t v72 = v24;
    uint64_t v73 = v25;
    BOOL v33 = (void *)sub_1E3E7CCF0();
    objc_msgSend(v33, sel_mutableCopy);

    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
    sub_1E3C12B10(0, (unint64_t *)&unk_1EAE29B80);
    uint64_t v34 = MEMORY[0x1E4FBC840] + 8;
    swift_dynamicCast();
    uint64_t v35 = *(void *)(v27 + 16);
    if (v35)
    {
      uint64_t v69 = v34;
      swift_bridgeObjectRetain();
      uint64_t v36 = 0;
      do
      {
        uint64_t v37 = *(void *)(v27 + 8 * v36++ + 32);
        unint64_t v38 = (void *)sub_1E3E7CCF0();
        objc_msgSend(v79, sel_replaceCharactersInRange_withString_, v37, 1, v38);
      }
      while (v35 != v36);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v79, sel_copy);
    sub_1E3E7DCA0();
    swift_unknownObjectRelease();
    sub_1E3C12B10(0, &qword_1EBFE2830);
    swift_dynamicCast();
    a1 = sub_1E3E7CD30();
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();

    a2 = v40;
    goto LABEL_20;
  }
  if (!v27)
  {
LABEL_26:
    int v41 = v75;
    goto LABEL_27;
  }
  unint64_t v72 = v24;
  uint64_t v28 = *(void *)(v27 + 16);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    id v24 = v72;
    goto LABEL_26;
  }
  uint64_t v73 = v25;
  uint64_t v69 = a2;
  uint64_t v70 = v26;
  id v29 = v72;
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  do
  {
    uint64_t v31 = *(void *)(v27 + 8 * v30++ + 32);
    uint64_t v32 = (void *)sub_1E3E7CCF0();
    objc_msgSend(v29, sel_replaceCharactersInRange_withString_, v31, 1, v32);
  }
  while (v28 != v30);
  swift_bridgeObjectRelease_n();

  a2 = v69;
  uint64_t v26 = v70;
LABEL_20:
  id v24 = v72;
  uint64_t v25 = v73;
  int v41 = v75;
  if (!v21)
  {
    if (v75)
    {
LABEL_22:
      uint64_t v42 = v25;
      id v43 = sub_1E3E3DFB8(0, v77);
      *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v43;
      id v44 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
      id v45 = v43;
      id v46 = objc_msgSend(v44, sel_initWithAttributedString_, v45);
      if (qword_1EAE24158 != -1) {
        swift_once();
      }
      uint64_t v47 = qword_1EAE26DE8;
      id v48 = v46;
      objc_msgSend(v48, sel_performSelector_, v47);
      id v49 = objc_msgSend(v48, sel_string);
      uint64_t v50 = sub_1E3E7CD30();
      uint64_t v52 = v51;

      swift_bridgeObjectRelease();
      uint64_t v53 = &v4[OBJC_IVAR___AMPLanguageAwareString_string];
      *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_string] = v50;
      a2 = v52;
      uint64_t v25 = v42;
      goto LABEL_39;
    }
    goto LABEL_37;
  }
LABEL_27:
  objc_msgSend(v24, sel_copy, v69);
  sub_1E3E7DCA0();
  swift_unknownObjectRelease();
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE6170);
  if (swift_dynamicCast()) {
    id v54 = v79;
  }
  else {
    id v54 = 0;
  }
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v54;
  if (!v41)
  {
    if (v54)
    {
      id v64 = v54;
      id v65 = objc_msgSend(v64, sel_string);
      a1 = sub_1E3E7CD30();
      uint64_t v67 = v66;

      swift_bridgeObjectRelease();
      a2 = v67;
    }
    goto LABEL_38;
  }
  uint64_t v74 = v25;
  uint64_t v71 = v26;
  uint64_t v55 = qword_1EAE24158;
  id v56 = v24;
  id v57 = v54;
  if (v55 != -1) {
    swift_once();
  }
  uint64_t v58 = qword_1EAE26DE8;
  id v59 = v56;
  objc_msgSend(v59, sel_performSelector_, v58);
  id v60 = objc_msgSend(v59, sel_string);
  uint64_t v61 = sub_1E3E7CD30();
  uint64_t v63 = v62;
  swift_bridgeObjectRelease();

  uint64_t v53 = &v4[OBJC_IVAR___AMPLanguageAwareString_string];
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_string] = v61;
  a2 = v63;
  uint64_t v26 = v71;
  uint64_t v25 = v74;
LABEL_39:
  *((void *)v53 + 1) = a2;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v77;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_numbers] = v25;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v26;

  v78.receiver = v4;
  v78.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v78, sel_init);
}

id sub_1E3E43400(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  unint64_t v5 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(void *)unint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  uint64_t v6 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  id v7 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(void *)id v7 = 0;
  v7[8] = 1;
  int v8 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(void *)int v8 = 0;
  v8[8] = 1;
  swift_beginAccess();
  uint64_t v9 = (void *)qword_1EBFDF088;
  if (qword_1EBFDF088
    && (objc_msgSend((id)qword_1EBFDF088, sel_respondsToSelector_, sel_preprocessForLanguageAwarenessAttributedString_) & 1) != 0)
  {
    int64_t v10 = v2;
    id v11 = objc_msgSend(v9, sel_preprocessForLanguageAwarenessAttributedString_, a1);
  }
  else
  {
    uint64_t v12 = v2;
    id v11 = a1;
  }
  uint64_t v13 = v11;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v11);
  id v15 = v14;
  sub_1E3E41C44(v14, 0, a2, (uint64_t)v41);
  uint64_t v16 = v41[0];
  uint64_t v39 = v41[1];
  uint64_t v17 = v41[2];
  int v18 = v42;
  uint64_t v19 = v43;

  if (v19)
  {
    unint64_t v38 = v13;
    uint64_t v20 = v16;
    uint64_t v21 = *(void *)(v19 + 16);
    if (v21)
    {
      uint64_t v37 = v17;
      swift_bridgeObjectRetain();
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void *)(v19 + 8 * v22++ + 32);
        id v24 = (void *)sub_1E3E7CCF0();
        objc_msgSend(v15, sel_replaceCharactersInRange_withString_, v23, 1, v24);
      }
      while (v21 != v22);
      swift_bridgeObjectRelease();
      uint64_t v17 = v37;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v20;
    uint64_t v13 = v38;
  }
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_initWithAttributedString_, v15);
  uint64_t v26 = v25;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v25;
  if (v18)
  {
    uint64_t v27 = qword_1EAE24158;
    id v28 = v25;
    if (v27 != -1) {
      swift_once();
    }
    uint64_t v29 = qword_1EAE26DE8;
    id v30 = v15;
    objc_msgSend(v30, sel_performSelector_, v29);
  }
  else
  {
    id v30 = v25;
  }
  id v31 = objc_msgSend(v30, sel_string);
  uint64_t v32 = sub_1E3E7CD30();
  uint64_t v34 = v33;

  uint64_t v35 = (uint64_t *)&v2[OBJC_IVAR___AMPLanguageAwareString_string];
  *uint64_t v35 = v32;
  v35[1] = v34;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v39;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString_numbers] = v16;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v17;

  v40.receiver = v2;
  v40.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v40, sel_init);
}

uint64_t type metadata accessor for LanguageAwareString()
{
  return self;
}

id sub_1E3E43780(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  id v7 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  int v8 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(void *)int v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(void *)uint64_t v9 = 0;
  unsigned char v9[8] = 1;
  int64_t v10 = &v4[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(void *)int64_t v10 = 0;
  v10[8] = 1;
  swift_beginAccess();
  id v11 = (void *)qword_1EBFDF088;
  if (qword_1EBFDF088)
  {
    uint64_t v12 = v4;
    swift_unknownObjectRetain();
    uint64_t v13 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v11, sel_preprocessForLanguageAwarenessString_, v13);

    sub_1E3E7CD30();
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = v4;
  }
  uint64_t v16 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  if (a3)
  {
    type metadata accessor for Key(0);
    sub_1E3D20770();
    uint64_t v17 = (void *)sub_1E3E7CB50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithString_attributes_, v16, v17);

  id v19 = v18;
  sub_1E3E41C44(v18, 0, a4, (uint64_t)v45);
  uint64_t v20 = v45[0];
  uint64_t v21 = v45[1];
  uint64_t v22 = v45[2];
  int v23 = v46;
  uint64_t v24 = v47;

  if (v24)
  {
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      uint64_t v42 = v21;
      uint64_t v43 = v20;
      uint64_t v26 = v22;
      swift_bridgeObjectRetain();
      uint64_t v27 = 0;
      do
      {
        uint64_t v28 = *(void *)(v24 + 8 * v27++ + 32);
        uint64_t v29 = (void *)sub_1E3E7CCF0();
        objc_msgSend(v19, sel_replaceCharactersInRange_withString_, v28, 1, v29);
      }
      while (v25 != v27);
      swift_bridgeObjectRelease();
      uint64_t v22 = v26;
      uint64_t v21 = v42;
    }
    swift_bridgeObjectRelease();
  }
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_initWithAttributedString_, v19);
  id v31 = v30;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v30;
  if (v23)
  {
    uint64_t v32 = qword_1EAE24158;
    id v33 = v30;
    if (v32 != -1) {
      swift_once();
    }
    uint64_t v34 = qword_1EAE26DE8;
    id v35 = v19;
    objc_msgSend(v35, sel_performSelector_, v34);
  }
  else
  {
    id v35 = v30;
  }
  id v36 = objc_msgSend(v35, sel_string, v42, v43);
  uint64_t v37 = sub_1E3E7CD30();
  uint64_t v39 = v38;

  objc_super v40 = (uint64_t *)&v4[OBJC_IVAR___AMPLanguageAwareString_string];
  *objc_super v40 = v37;
  v40[1] = v39;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v21;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_numbers] = v20;
  *(void *)&v4[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v22;

  v44.receiver = v4;
  v44.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v44, sel_init);
}

id sub_1E3E43B5C(void *a1)
{
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  uint64_t v3 = OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(void *)&v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  uint64_t v4 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  unint64_t v5 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(void *)unint64_t v5 = 0;
  v5[8] = 1;
  uint64_t v6 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  id v7 = &v1[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(void *)id v7 = 0;
  v7[8] = 1;
  int v8 = v1;
  sub_1E3E41C44(a1, 0, 0, (uint64_t)v33);
  uint64_t v9 = v33[0];
  uint64_t v31 = v33[1];
  uint64_t v10 = v34;
  int v11 = v35;
  uint64_t v12 = v36;
  if (v36)
  {
    uint64_t v30 = v33[0];
    uint64_t v13 = *(void *)(v36 + 16);
    if (v13)
    {
      uint64_t v29 = v34;
      swift_bridgeObjectRetain();
      uint64_t v14 = 0;
      do
      {
        uint64_t v15 = *(void *)(v12 + 8 * v14++ + 32);
        uint64_t v16 = (void *)sub_1E3E7CCF0();
        objc_msgSend(a1, sel_replaceCharactersInRange_withString_, v15, 1, v16);
      }
      while (v13 != v14);
      swift_bridgeObjectRelease();
      uint64_t v10 = v29;
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v30;
  }
  *(void *)&v8[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = a1;
  if (v11)
  {
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, a1);
    if (qword_1EAE24158 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_1EAE26DE8;
    id v19 = v17;
    objc_msgSend(v19, sel_performSelector_, v18);
    id v20 = objc_msgSend(v19, sel_string);
    uint64_t v21 = sub_1E3E7CD30();
    uint64_t v23 = v22;
  }
  else
  {
    id v20 = objc_msgSend(a1, sel_string);
    uint64_t v21 = sub_1E3E7CD30();
    uint64_t v23 = v24;
  }

  uint64_t v25 = (uint64_t *)&v8[OBJC_IVAR___AMPLanguageAwareString_string];
  *uint64_t v25 = v21;
  v25[1] = v23;
  uint64_t v26 = *(void **)&v1[v3];
  *(void *)&v1[v3] = a1;
  id v27 = a1;

  *(void *)&v8[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = v31;
  *(void *)&v8[OBJC_IVAR___AMPLanguageAwareString_numbers] = v9;
  *(void *)&v8[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v10;

  v32.receiver = v8;
  v32.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v32, sel_init);
}

id sub_1E3E43E4C(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___attributedString] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString_cachedTextStorage] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedLowercase] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___localizedUppercase] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___newlinesCollapsedToSpace] = 0;
  *(void *)&v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___trimmed] = 0;
  unint64_t v5 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange];
  *(void *)unint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty] = 2;
  uint64_t v6 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  id v7 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count];
  *(void *)id v7 = 0;
  v7[8] = 1;
  int v8 = &v2[OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection];
  *(void *)int v8 = 0;
  v8[8] = 1;
  uint64_t v9 = v2;
  id v10 = sub_1E3E3DED4();
  int v11 = v10;
  if (a2)
  {
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v10);
    type metadata accessor for Key(0);
    sub_1E3D20770();
    uint64_t v13 = (void *)sub_1E3E7CB50();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v11, sel_fullRange);
    objc_msgSend(v12, sel_addAttributes_range_, v13, v14, v15);

    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_initWithAttributedString_, v12);
  }
  else
  {
    id v16 = v10;
  }
  *(void *)&v9[OBJC_IVAR___AMPLanguageAwareString_baseAttributedString] = v16;
  id v17 = v16;
  id v18 = objc_msgSend(v17, sel_string);
  uint64_t v19 = sub_1E3E7CD30();
  uint64_t v21 = v20;

  uint64_t v22 = (uint64_t *)&v9[OBJC_IVAR___AMPLanguageAwareString_string];
  *uint64_t v22 = v19;
  v22[1] = v21;
  *(void *)&v9[OBJC_IVAR___AMPLanguageAwareString_paragraphs] = *(void *)(a1
                                                                            + OBJC_IVAR___AMPLanguageAwareString_paragraphs);
  *(void *)&v9[OBJC_IVAR___AMPLanguageAwareString_numbers] = *(void *)(a1
                                                                         + OBJC_IVAR___AMPLanguageAwareString_numbers);
  uint64_t v23 = *(void **)(a1 + OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections);
  *(void *)&v9[OBJC_IVAR___AMPLanguageAwareString_knownBaseWritingDirections] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = v23;

  v26.receiver = v9;
  v26.super_class = (Class)type metadata accessor for LanguageAwareString();
  return objc_msgSendSuper2(&v26, sel_init);
}

uint64_t type metadata accessor for LanguageAwareTextStorage()
{
  return self;
}

id sub_1E3E440DC@<X0>(void *a1@<X8>)
{
  id result = sub_1E3E3DED4();
  *a1 = result;
  return result;
}

void sub_1E3E44108(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_1E3E44114@<X0>(void *a1@<X8>)
{
  id result = sub_1E3E3E564();
  *a1 = result;
  return result;
}

void sub_1E3E44140(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_1E3E4414C@<X0>(void *a1@<X8>)
{
  id result = sub_1E3E3E678();
  *a1 = result;
  return result;
}

void sub_1E3E44178(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_1E3E44184@<X0>(void *a1@<X8>)
{
  id result = sub_1E3E3E878();
  *a1 = result;
  return result;
}

void sub_1E3E441B0(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_1E3E441BC@<X0>(void *a1@<X8>)
{
  id result = sub_1E3E3EA98();
  *a1 = result;
  return result;
}

void sub_1E3E441E8(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

void keypath_setTm(void **a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v5 = *a1;
  id v7 = *(id *)(*a2 + *a5);
  *(void *)(*a2 + *a5) = *a1;
  id v6 = v5;
}

uint64_t sub_1E3E44240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E3EDAC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

__n128 sub_1E3E4426C(__n128 *a1, void *a2)
{
  uint64_t v2 = *a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___fullRange;
  __n128 result = *a1;
  *(__n128 *)uint64_t v2 = *a1;
  *(unsigned char *)(v2 + 16) = 0;
  return result;
}

BOOL sub_1E3E4428C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1E3E3EEBC();
  *a1 = result;
  return result;
}

unsigned char *sub_1E3E442BC(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___isEmpty) = *result;
  return result;
}

uint64_t sub_1E3E442D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E3EFC0();
  *a1 = result;
  return result;
}

void *sub_1E3E44300(void *result, void *a2)
{
  uint64_t v2 = *a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf16Count;
  *(void *)uint64_t v2 = *result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

uint64_t sub_1E3E44320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E3F108();
  *a1 = result;
  return result;
}

void *sub_1E3E4434C(void *result, void *a2)
{
  uint64_t v2 = *a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___utf32Count;
  *(void *)uint64_t v2 = *result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

uint64_t sub_1E3E4436C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E3E40544();
  *a1 = result;
  return result;
}

void *sub_1E3E44398(void *result, void *a2)
{
  uint64_t v2 = *a2 + OBJC_IVAR___AMPLanguageAwareString____lazy_storage___thresholdBaseWritingDirection;
  *(void *)uint64_t v2 = *result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

id sub_1E3E443B8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR___AMPLanguageAwareTextStorage_textStorage);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t method lookup function for LanguageAwareString(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LanguageAwareString);
}

uint64_t dispatch thunk of LanguageAwareString.attributedString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of LanguageAwareString.attributedString.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of LanguageAwareString.attributedString.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedLowercase.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedLowercase.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedLowercase.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedUppercase.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedUppercase.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of LanguageAwareString.localizedUppercase.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of LanguageAwareString.newlinesCollapsedToSpace.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of LanguageAwareString.newlinesCollapsedToSpace.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of LanguageAwareString.newlinesCollapsedToSpace.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of LanguageAwareString.trimmed.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of LanguageAwareString.trimmed.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of LanguageAwareString.trimmed.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of LanguageAwareString.fullRange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of LanguageAwareString.fullRange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of LanguageAwareString.fullRange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of LanguageAwareString.isEmpty.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of LanguageAwareString.isEmpty.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of LanguageAwareString.isEmpty.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of LanguageAwareString.utf16Count.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of LanguageAwareString.utf16Count.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of LanguageAwareString.utf16Count.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of LanguageAwareString.utf32Count.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of LanguageAwareString.utf32Count.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of LanguageAwareString.utf32Count.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(_:baseParagraphStyle:)()
{
  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(_:attributes:baseParagraphStyle:)()
{
  return (*(uint64_t (**)(void))(v0 + 456))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:)()
{
  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(_:attributes:)()
{
  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t dispatch thunk of LanguageAwareString.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 488))();
}

uint64_t dispatch thunk of LanguageAwareString.baseWritingDirection(forCharacterAt:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of LanguageAwareString.thresholdBaseWritingDirection.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of LanguageAwareString.thresholdBaseWritingDirection.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of LanguageAwareString.thresholdBaseWritingDirection.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of LanguageAwareString.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of LanguageAwareString.writingDirectionsQuantities()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x230))();
}

uint64_t method lookup function for LanguageAwareTextStorage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LanguageAwareTextStorage);
}

uint64_t dispatch thunk of LanguageAwareTextStorage.textStorage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.textStorage(_:willProcessEditing:range:changeInLength:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.textStorage(_:didProcessEditing:range:changeInLength:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.writingDirectionsQuantities()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LanguageAwareTextStorage.writingDirectionOfLine(_:maximumLinesShown:withWidth:lineBreakMode:cacheLayoutInfo:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DirectionalRange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DirectionalRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectionalRange()
{
  return &type metadata for DirectionalRange;
}

uint64_t UIButton.pui_shouldBeHidden.getter()
{
  id v1 = objc_msgSend(v0, sel_titleForState_, 0);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1E3E7CD30();
    unint64_t v5 = v4;

    swift_bridgeObjectRelease();
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v7 = v6 == 0;
  }
  else
  {
    BOOL v7 = 1;
  }
  id v8 = objc_msgSend(v0, sel_imageForState_, 0);
  if (v8)
  {
  }
  else if (v7)
  {
    return 1;
  }
  return 0;
}

unint64_t ContentMode.init(contentMode:)(unint64_t result)
{
  if (result >= 0xD) {
    return 13;
  }
  return result;
}

uint64_t ContentMode.viewContentMode.getter(uint64_t result)
{
  return result;
}

id sub_1E3E44F20@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (objc_class *)sub_1E3E79C10();
  id result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v4 = MEMORY[0x1E4F91B90];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1E3E44F6C@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E796B0();
  uint64_t result = sub_1E3E796A0();
  *a1 = result;
  return result;
}

id sub_1E3E44FA0@<X0>(void *a1@<X8>)
{
  return sub_1E3E2C4B8((SEL *)&selRef_defaultCenter, a1);
}

uint64_t sub_1E3E44FB4@<X0>(void *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_defaultManager);
  uint64_t result = sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE4A90);
  uint64_t v4 = MEMORY[0x1E4F91E40];
  a1[3] = result;
  a1[4] = v4;
  *a1 = v2;
  return result;
}

id sub_1E3E45028@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F91FD0]), sel_init);
  *a1 = result;
  return result;
}

id sub_1E3E45064@<X0>(void *a1@<X8>)
{
  return sub_1E3E2C4B8((SEL *)&selRef_defaultMediaLibrary, a1);
}

uint64_t sub_1E3E45078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1E3E78E90();
  uint64_t v3 = MEMORY[0x1E4F917E0];
  a1[3] = v2;
  a1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1E3E78E80();
}

uint64_t sub_1E3E450BC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBFE0850 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for AssetCaches();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBFE0838);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1E3E45170@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBFE0850 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for AssetCaches();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBFE0838) + *(int *)(v2 + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1E3E4522C()
{
  return sub_1E3E4525C(MEMORY[0x1E4F91CB8]);
}

uint64_t sub_1E3E45244()
{
  return sub_1E3E4525C(MEMORY[0x1E4F91CC0]);
}

uint64_t sub_1E3E4525C(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_1E3E7A2B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E7A2A0();
  a1(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1E3E4533C@<X0>(void *a1@<X8>)
{
  if (qword_1EBFE0F90 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBFE0F88;
  *a1 = qword_1EBFE0F88;

  return v2;
}

unint64_t sub_1E3E453A8()
{
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  type metadata accessor for AssetDownloaders();
  sub_1E3E7BE20();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29BF0);
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26040) - 8;
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v0 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1E3E878F0;
  uint64_t v2 = *MEMORY[0x1E4F91AE8];
  uint64_t v3 = sub_1E3E79920();
  uint64_t v4 = *(void (**)(void))(*(void *)(v3 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v4)(v7 + v1, v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4320);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE4310, &qword_1EBFE4320);
  sub_1E3E78640();
  v4();
  sub_1E3E78640();
  v4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE43A0);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE4390, &qword_1EBFE43A0);
  sub_1E3E78640();
  v4();
  sub_1E3E78640();
  unint64_t v5 = sub_1E3C80B24(v7);

  return v5;
}

id sub_1E3E45684@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(self, sel_sharedInstance);
  *a1 = result;
  return result;
}

uint64_t sub_1E3E456C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E457F4(MEMORY[0x1E4F91BF0], MEMORY[0x1E4F91BE8], a1);
}

uint64_t sub_1E3E456F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E457F4(MEMORY[0x1E4F91730], MEMORY[0x1E4F91728], a1);
}

uint64_t sub_1E3E45720@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E79660();
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  sub_1E3E78B50();
  sub_1E3E7BE20();
  sub_1E3E796B0();
  sub_1E3E7BE20();
  uint64_t v2 = sub_1E3E79650();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1E3E457C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E457F4(MEMORY[0x1E4F91C10], MEMORY[0x1E4F91C08], a1);
}

uint64_t sub_1E3E457F4@<X0>(void (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  a1(0);
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v5 = objc_msgSend(v8, sel_privateQueueContext);
  uint64_t v6 = a2();
  swift_unknownObjectRelease();

  uint64_t result = swift_release();
  *a3 = v6;
  return result;
}

uint64_t sub_1E3E458C8@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3E79D00();
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  sub_1E3E7A360();
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_1E3E7A350();
  sub_1E3E775E0();
  uint64_t v2 = sub_1E3E79CF0();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

id sub_1E3E4599C@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F91F88]), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1E3E459D8()
{
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (char *)v30 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2D50);
  uint64_t v1 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  id v45 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  objc_super v44 = (char *)v30 - v4;
  uint64_t v49 = sub_1E3E79920();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v43 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v42 = (char *)v30 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25DF0);
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  MEMORY[0x1F4188790](v9);
  int v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E79910();
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v53 = MEMORY[0x1E4FBC860];
    sub_1E3CC7A4C(0, v13, 0);
    uint64_t v37 = sub_1E3E7BE80();
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4308);
    uint64_t v35 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v14 = v5 + 16;
    uint64_t v34 = v15;
    unint64_t v16 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
    v30[1] = v12;
    unint64_t v17 = v12 + v16;
    uint64_t v33 = *(void *)(v14 + 56);
    objc_super v32 = (void (**)(uint64_t, uint64_t))(v14 - 8);
    uint64_t v31 = (void (**)(uint64_t, uint64_t))(v1 + 8);
    uint64_t v38 = v11;
    uint64_t v39 = v14;
    id v18 = v42;
    uint64_t v19 = v49;
    uint64_t v20 = (uint64_t)v44;
    do
    {
      int64_t v51 = v13;
      uint64_t v21 = v34;
      v34(v18, (char *)v17, v19);
      uint64_t v50 = &v11[*(int *)(v41 + 48)];
      v21(v11, v18, v19);
      sub_1E3E7BE70();
      uint64_t v22 = (uint64_t)v43;
      v21(v43, v18, v19);
      sub_1E3C6ED80(v22, v20);
      sub_1E3E7BE20();
      sub_1E3C10DE8((unint64_t *)&qword_1EBFE4290, (uint64_t *)&unk_1EBFE2D50);
      uint64_t v23 = v46;
      sub_1E3E78640();
      sub_1E3E7BE20();
      sub_1E3E7D5D0();
      sub_1E3E7A170();
      swift_release();
      id v24 = *v32;
      (*v32)(v22, v19);
      (*v31)(v20, v23);
      v24((uint64_t)v18, v19);
      uint64_t v25 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E3CC7A4C(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v53;
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      int v11 = v38;
      if (v27 >= v26 >> 1)
      {
        sub_1E3CC7A4C(v26 > 1, v27 + 1, 1);
        uint64_t v25 = v53;
      }
      *(void *)(v25 + 16) = v27 + 1;
      sub_1E3E47218((uint64_t)v11, v25+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v27);
      v17 += v33;
      int64_t v13 = v51 - 1;
    }
    while (v51 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
  }
  uint64_t v28 = sub_1E3C65650(v25);
  swift_bridgeObjectRelease();
  uint64_t v52 = v28;
  sub_1E3E7A180();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29BD8);
  sub_1E3E47280();
  sub_1E3C10DE8(&qword_1EAE29BE8, (uint64_t *)&unk_1EAE29BD8);
  return sub_1E3E7CB90();
}

uint64_t sub_1E3E45FA4()
{
  return sub_1E3E45FD4(MEMORY[0x1E4F91C78]);
}

uint64_t sub_1E3E45FBC()
{
  return sub_1E3E45FD4(MEMORY[0x1E4F91D30]);
}

uint64_t sub_1E3E45FD4(void (*a1)(id, uint64_t, uint64_t, double))
{
  uint64_t v2 = sub_1E3E7D560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v6 = objc_msgSend(v10[1], sel_importContext);
  swift_unknownObjectRelease();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v7 = sub_1E3E7D5F0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F91E48], v2);
  uint64_t v8 = sub_1E3C6EAEC((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  a1(v6, v7, v8, 10.0);
  return swift_release();
}

uint64_t sub_1E3E46188()
{
  uint64_t v0 = sub_1E3E7A560();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1E3E7A550();
  return sub_1E3E79050();
}

char *_s18PodcastsFoundation12DependenciesO0A2UIE03allC09JetEngine15BaseObjectGraphCyFZ_0()
{
  uint64_t v102 = sub_1E3E7BA50();
  uint64_t v91 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  int v95 = (char *)v80 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  char v94 = (char *)v80 - v2;
  MEMORY[0x1F4188790](v3);
  uint64_t v93 = (char *)v80 - v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v90 = (char *)v80 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v89 = (char *)v80 - v8;
  MEMORY[0x1F4188790](v9);
  char v88 = (char *)v80 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v92 = (char *)v80 - v12;
  MEMORY[0x1F4188790](v13);
  id v87 = (char *)v80 - v14;
  MEMORY[0x1F4188790](v15);
  unint64_t v97 = (char *)v80 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v96 = (char *)v80 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v113 = (char *)v80 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v112 = (char *)v80 - v22;
  MEMORY[0x1F4188790](v23);
  int v111 = (char *)v80 - v24;
  MEMORY[0x1F4188790](v25);
  id v110 = (char *)v80 - v26;
  MEMORY[0x1F4188790](v27);
  int v109 = (char *)v80 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v80 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)v80 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)v80 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)v80 - v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)v80 - v42;
  MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)v80 - v45;
  MEMORY[0x1F4188790](v47);
  uint64_t v49 = (char *)v80 - v48;
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (char *)v80 - v51;
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)v80 - v54;
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (char *)v80 - v57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  char v98 = v58;
  sub_1E3E7BA30();
  sub_1E3E796B0();
  int64_t v99 = v55;
  sub_1E3E7BA30();
  sub_1E3C12B10(0, &qword_1EBFE4AF0);
  uint64_t v100 = v52;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2D40);
  id v101 = v49;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4AE8);
  uint64_t v103 = v46;
  sub_1E3E7BA30();
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE4AA0);
  uint64_t v104 = v43;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE3380);
  id v105 = v40;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE3370);
  id v106 = v37;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4308);
  char v107 = v34;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4210);
  uint64_t v108 = v31;
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4220);
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4230);
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4208);
  sub_1E3E7BA30();
  type metadata accessor for AssetDownloaders();
  sub_1E3E7BA30();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE3350);
  sub_1E3E7BA30();
  id v59 = "NSURLResourceKey";
  if (objc_msgSend(self, sel_supportsLocalLibrary))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
    id v60 = v96;
    sub_1E3E7BA30();
    sub_1E3E79EB0();
    sub_1E3E7BA30();
    sub_1E3E78B50();
    sub_1E3E7BA30();
    sub_1E3E79660();
    sub_1E3E7BA30();
    sub_1E3E79F20();
    sub_1E3E7BA30();
    sub_1E3E79D00();
    sub_1E3E7BA30();
    sub_1E3C12B10(0, &qword_1EBFE0718);
    sub_1E3E7BA30();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE3360);
    sub_1E3E7BA30();
    sub_1E3E7A050();
    sub_1E3E7BA30();
    sub_1E3E7A3E0();
    sub_1E3E7BA30();
    v80[2] = sub_1E3E7BE80();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE0);
    uint64_t v61 = v91;
    uint64_t v62 = *(unsigned __int8 *)(v91 + 80);
    uint64_t v63 = (v62 + 32) & ~v62;
    uint64_t v84 = v63 + *(void *)(v91 + 72);
    uint64_t v83 = v62 | 7;
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_1E3E86660;
    uint64_t v85 = v63;
    id v65 = *(void (**)(uint64_t, char *, uint64_t))(v61 + 16);
    unint64_t v81 = (v61 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v66 = v60;
    uint64_t v67 = v102;
    uint64_t v82 = v65;
    v65(v64 + v63, v66, v102);
    v80[1] = sub_1E3E7BE40();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    sub_1E3E7BE50();
    uint64_t v86 = sub_1E3E7BE50();
    swift_release();
    swift_release();
    swift_release();
    id v59 = "NNSURLResourceKey" + 1;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v68 = *(void (**)(char *, uint64_t))(v61 + 8);
    v68(v95, v67);
    v68(v94, v67);
    v68(v93, v67);
    v68(v90, v67);
    v68(v89, v67);
    v68(v88, v67);
    v68(v92, v67);
    v68(v87, v67);
    v68(v97, v67);
    v68(v96, v67);
  }
  else
  {
    id v114 = objc_msgSend(objc_allocWithZone((Class)sub_1E3E7A130()), sel_init);
    uint64_t v69 = v96;
    sub_1E3E7BA40();
    sub_1E3E79060();
    uint64_t v70 = v97;
    sub_1E3E7BA30();
    sub_1E3E7BE80();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE0);
    uint64_t v71 = v91;
    uint64_t v72 = *(unsigned __int8 *)(v91 + 80);
    uint64_t v73 = (v72 + 32) & ~v72;
    uint64_t v84 = v73 + *(void *)(v91 + 72);
    uint64_t v83 = v72 | 7;
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_1E3E86660;
    uint64_t v85 = v73;
    int v75 = *(void (**)(uint64_t, char *, uint64_t))(v71 + 16);
    unint64_t v81 = (v71 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v76 = v102;
    uint64_t v82 = v75;
    v75(v74 + v73, v69, v102);
    sub_1E3E7BE40();
    uint64_t v86 = sub_1E3E7BE50();
    swift_release();
    uint64_t v68 = *(void (**)(char *, uint64_t))(v71 + 8);
    v68(v70, v76);
    v68(v69, v76);
  }
  sub_1E3E7BE80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE0);
  uint64_t v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = *((_OWORD *)v59 + 102);
  uint64_t v78 = v102;
  v82(v77 + v85, v98, v102);
  uint64_t v96 = (char *)sub_1E3E7BE40();
  int v95 = (char *)sub_1E3E7BE50();
  char v94 = (char *)sub_1E3E7BE50();
  uint64_t v93 = (char *)sub_1E3E7BE50();
  uint64_t v92 = (char *)sub_1E3E7BE50();
  uint64_t v91 = sub_1E3E7BE50();
  uint64_t v90 = (char *)sub_1E3E7BE50();
  uint64_t v89 = (char *)sub_1E3E7BE50();
  char v88 = (char *)sub_1E3E7BE50();
  sub_1E3E7BE50();
  sub_1E3E7BE50();
  sub_1E3E7BE50();
  sub_1E3E7BE50();
  sub_1E3E7BE50();
  sub_1E3E7BE50();
  unint64_t v97 = (char *)sub_1E3E7BE60();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v68(v113, v78);
  v68(v112, v78);
  v68(v111, v78);
  v68(v110, v78);
  v68(v109, v78);
  v68(v108, v78);
  v68(v107, v78);
  v68(v106, v78);
  v68(v105, v78);
  v68(v104, v78);
  v68(v103, v78);
  v68(v101, v78);
  v68(v100, v78);
  v68(v99, v78);
  v68(v98, v78);
  return v97;
}

uint64_t sub_1E3E47218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE25DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1E3E47280()
{
  unint64_t result = qword_1EAE25E90;
  if (!qword_1EAE25E90)
  {
    sub_1E3E79920();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE25E90);
  }
  return result;
}

UIImage_optional __swiftcall ArtworkContent.image()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E77D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E78D00();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3DBA4A8(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    id v9 = objc_msgSend(self, sel_defaultManager);
    sub_1E3E77CC0();
    uint64_t v10 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel_contentsAtPath_, v10);

    if (v11)
    {
      uint64_t v12 = sub_1E3E77D50();
      unint64_t v14 = v13;

      id v15 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
      uint64_t v16 = (void *)sub_1E3E77D30();
      id v11 = objc_msgSend(v15, sel_initWithData_, v16);
      sub_1E3C2B7E8(v12, v14);
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v18 = *v8;
    unint64_t v19 = v8[1];
    id v20 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
    uint64_t v21 = (void *)sub_1E3E77D30();
    id v11 = objc_msgSend(v20, sel_initWithData_, v21);
    sub_1E3C2B7E8(v18, v19);
  }
  uint64_t v22 = (objc_class *)v11;
  result.value.super.isa = v22;
  result.is_nil = v17;
  return result;
}

char *sub_1E3E47548(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_1E3E7BCA0();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *a2;
      id v9 = v8;
      *(void *)a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

void sub_1E3E47670(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v4 = sub_1E3E7BCA0();
    int v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = *a1;
  }
}

void *sub_1E3E47714(void *a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = sub_1E3E7BCA0();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = *a2;
    id v8 = v7;
    *a1 = v7;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void **sub_1E3E477F8(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E478EC((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_1E3E7BCA0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *a2;
      id v8 = v7;
      *a1 = v7;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1E3E478EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PageRenderState.PrimaryDataState(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFE0DA8);
}

void *sub_1E3E47968(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1E3E7BCA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1E3E47A20(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E478EC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1E3E7BCA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1E3E47AE8()
{
  uint64_t result = sub_1E3E7BCA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_1E3E47B84(id *a1, id *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = (char *)*a2;
    *a1 = *a2;
    a1 = (id *)&v11[(v5 + 16) & ~(unint64_t)v5];
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = type metadata accessor for PageRenderState.PrimaryDataState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = sub_1E3E7BCA0();
      (*(void (**)(id *, id *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      id v9 = *a2;
      id v10 = *a2;
      *a1 = v9;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    uint64_t v13 = *(int *)(a3 + 20);
    unint64_t v14 = (char *)a1 + v13;
    id v15 = (char *)a2 + v13;
    *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
    *((void *)v14 + 2) = *((void *)v15 + 2);
  }
  return a1;
}

void sub_1E3E47CE8(void **a1)
{
  type metadata accessor for PageRenderState.PrimaryDataState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v4 = sub_1E3E7BCA0();
    int v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = *a1;
  }
}

void *sub_1E3E47D9C(void *a1, id *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = sub_1E3E7BCA0();
    (*(void (**)(void *, id *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    id v8 = *a2;
    id v9 = *a2;
    *a1 = v8;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((void *)v12 + 2) = *((void *)v13 + 2);
  return a1;
}

id *sub_1E3E47EB0(id *a1, id *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E478EC((uint64_t)a1);
    uint64_t v6 = type metadata accessor for PageRenderState.PrimaryDataState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_1E3E7BCA0();
      (*(void (**)(id *, id *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      id v8 = *a2;
      id v9 = *a2;
      *a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (id *)((char *)a1 + v11);
  uint64_t v13 = (id *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  void v12[2] = v13[2];
  return a1;
}

char *sub_1E3E47FDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = sub_1E3E7BCA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  id v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)id v9 = *(_OWORD *)v10;
  *((void *)v9 + 2) = *((void *)v10 + 2);
  return a1;
}

char *sub_1E3E480BC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E478EC((uint64_t)a1);
    uint64_t v6 = type metadata accessor for PageRenderState.PrimaryDataState(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = sub_1E3E7BCA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  id v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)id v9 = *(_OWORD *)v10;
  *((void *)v9 + 2) = *((void *)v10 + 2);
  return a1;
}

uint64_t sub_1E3E481AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E481C0);
}

uint64_t sub_1E3E481C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1E3E4822C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E48240);
}

uint64_t sub_1E3E48240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PageRenderState(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFE0E50);
}

uint64_t sub_1E3E482D0()
{
  uint64_t result = type metadata accessor for PageRenderState.PrimaryDataState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1E3E48364()
{
  uint64_t v0 = sub_1E3E7CA70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7CA90();
  __swift_allocate_value_buffer(v4, qword_1EBFE0E28);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBFE0E28);
  if (qword_1EBFE0688 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBFDF4D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_1E3E7CA80();
}

uint64_t sub_1E3E484B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7BB40();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1E3E7CA90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBFE0E48 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBFE0E28);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BB30();
  sub_1E3E7BB20();
  uint64_t v12 = MEMORY[0x1E4FBB808];
  uint64_t v15 = MEMORY[0x1E4FBB808];
  v14[0] = a1;
  sub_1E3E7BB00();
  sub_1E3C2AC28((uint64_t)v14);
  sub_1E3E7BB20();
  uint64_t v15 = v12;
  v14[0] = a2;
  sub_1E3E7BB00();
  sub_1E3C2AC28((uint64_t)v14);
  sub_1E3E7BB20();
  uint64_t v15 = v12;
  v14[0] = a3;
  sub_1E3E7BB00();
  sub_1E3C2AC28((uint64_t)v14);
  sub_1E3E7BB20();
  sub_1E3E7BB50();
  sub_1E3E7C870();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1E3E487B8()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    uint64_t v2 = v1 - 1;
    *uint64_t v0 = v1 - 1;
    uint64_t v3 = v0[1];
    uint64_t v4 = v3 + 1;
    if (v3 != -1)
    {
      v0[1] = v4;
      uint64_t v5 = v0[2];
      return sub_1E3E484B8(v2, v4, v5);
    }
    __break(1u);
    goto LABEL_11;
  }
  if (qword_1EBFE0E48 != -1) {
LABEL_11:
  }
    swift_once();
  uint64_t v7 = sub_1E3E7CA90();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBFE0E28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BAF0();
  sub_1E3E7C880();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3E4893C()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    uint64_t v2 = v1 - 1;
    *uint64_t v0 = v1 - 1;
    uint64_t v3 = v0[2];
    uint64_t v4 = v3 + 1;
    if (v3 != -1)
    {
      v0[2] = v4;
      uint64_t v5 = v0[1];
      return sub_1E3E484B8(v2, v5, v4);
    }
    __break(1u);
    goto LABEL_11;
  }
  if (qword_1EBFE0E48 != -1) {
LABEL_11:
  }
    swift_once();
  uint64_t v7 = sub_1E3E7CA90();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBFE0E28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BAF0();
  sub_1E3E7C880();

  return swift_bridgeObjectRelease();
}

id sub_1E3E48AC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v60 = a2;
  uint64_t v3 = sub_1E3E7BCA0();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v57 - v7;
  uint64_t v9 = type metadata accessor for PageRenderState.PrimaryDataState(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v57 - v13;
  MEMORY[0x1F4188790](v15);
  Swift::Bool v17 = (char *)&v57 - v16;
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)&v57 - v19;
  uint64_t v21 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E491E0(a1, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for PageRenderActivity);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = v57;
      uint64_t v29 = v58;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
      v31(v8, v23, v58);
      uint64_t v32 = (uint64_t)v59;
      sub_1E3E491E0((uint64_t)v59, (uint64_t)v17, type metadata accessor for PageRenderState.PrimaryDataState);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v29);
        uint64_t v33 = (uint64_t)v17;
        goto LABEL_18;
      }
      sub_1E3E478EC(v32);
      v31((char *)v32, v8, v29);
      swift_storeEnumTagMultiPayload();
      goto LABEL_19;
    case 2u:
      uint64_t v34 = *(void **)v23;
      uint64_t v35 = v59;
      sub_1E3E491E0((uint64_t)v59, (uint64_t)v14, type metadata accessor for PageRenderState.PrimaryDataState);
      if (swift_getEnumCaseMultiPayload())
      {

        uint64_t v33 = (uint64_t)v14;
        goto LABEL_18;
      }
      sub_1E3E478EC((uint64_t)v35);
      *uint64_t v35 = v34;
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = v60;
      void *v60 = v34;
      uint64_t v54 = *MEMORY[0x1E4F715D0];
      uint64_t v55 = sub_1E3E7C600();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 104))(v53, v54, v55);
      uint64_t v56 = _s8ActivityOMa();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v53, 0, 1, v56);
      id result = v34;
      break;
    case 3u:
      uint64_t v36 = (void *)((char *)v59 + *(int *)(type metadata accessor for PageRenderState(0) + 20));
      uint64_t v37 = *v36 + 1;
      if (*v36 == -1)
      {
        __break(1u);
        JUMPOUT(0x1E3E49190);
      }
      char v38 = *v23;
      uint64_t *v36 = v37;
      sub_1E3E484B8(v37, v36[1], v36[2]);
      uint64_t v27 = v60;
      *(unsigned char *)id v60 = v38;
      uint64_t v28 = (unsigned int *)MEMORY[0x1E4F715E8];
      goto LABEL_10;
    case 4u:
      char v42 = *v23;
      type metadata accessor for PageRenderState(0);
      sub_1E3E487B8();
      uint64_t v27 = v60;
      *(unsigned char *)id v60 = v42;
      uint64_t v43 = (unsigned int *)MEMORY[0x1E4F715D8];
      goto LABEL_15;
    case 5u:
      uint64_t v44 = *(void *)v23;
      char v45 = v23[8];
      type metadata accessor for PageRenderState(0);
      sub_1E3E4893C();
      uint64_t v27 = v60;
      void *v60 = v44;
      *((unsigned char *)v27 + 8) = v45;
      uint64_t v43 = (unsigned int *)MEMORY[0x1E4F715C8];
      goto LABEL_15;
    case 6u:
      uint64_t v46 = (uint64_t)v59;
      sub_1E3E491E0((uint64_t)v59, (uint64_t)v11, type metadata accessor for PageRenderState.PrimaryDataState);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v47 = v58;
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
        v48(v5, v11, v58);
        sub_1E3E478EC(v46);
        swift_storeEnumTagMultiPayload();
        uint64_t v27 = v60;
        v48((char *)v60, v5, v47);
        uint64_t v43 = (unsigned int *)MEMORY[0x1E4F715E0];
LABEL_15:
        uint64_t v49 = *v43;
        uint64_t v50 = sub_1E3E7C600();
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v27, v49, v50);
        uint64_t v41 = _s8ActivityOMa();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        id result = (id)(*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v27, 0, 1, v41);
      }
      else
      {
        uint64_t v33 = (uint64_t)v11;
LABEL_18:
        sub_1E3E478EC(v33);
LABEL_19:
        uint64_t v52 = _s8ActivityOMa();
        id result = (id)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v60, 1, 1, v52);
      }
      break;
    case 7u:
      goto LABEL_19;
    default:
      char v24 = *v23;
      uint64_t v25 = v59;
      sub_1E3E491E0((uint64_t)v59, (uint64_t)v20, type metadata accessor for PageRenderState.PrimaryDataState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      sub_1E3E478EC((uint64_t)v20);
      if (EnumCaseMultiPayload != 3) {
        goto LABEL_19;
      }
      sub_1E3E478EC((uint64_t)v25);
      *uint64_t v25 = v24;
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = v60;
      *(unsigned char *)id v60 = v24;
      uint64_t v28 = (unsigned int *)MEMORY[0x1E4F715F0];
LABEL_10:
      uint64_t v39 = *v28;
      uint64_t v40 = sub_1E3E7C620();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v27, v39, v40);
      uint64_t v41 = _s8ActivityOMa();
      goto LABEL_16;
  }
  return result;
}

id sub_1E3E491B0@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_1E3E48AC0(a1, a2);
}

uint64_t sub_1E3E491E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for PageRenderState.ResourceCounter()
{
  return &type metadata for PageRenderState.ResourceCounter;
}

uint64_t LibraryStorageTipSuggestedLimitIntent.init(globalLimit:supportedLimits:storageUsed:storageAvailable:previousIgnoredStorage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  *(void *)a6 = a1;
  *((void *)a6 + 1) = a2;
  uint64_t v10 = (int *)type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  uint64_t v11 = &a6[v10[6]];
  uint64_t v12 = sub_1E3E78A70();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v11, a3, v12);
  v13(&a6[v10[7]], a4, v12);
  uint64_t v14 = (uint64_t)&a6[v10[8]];

  return sub_1E3E49380(a5, v14);
}

uint64_t type metadata accessor for LibraryStorageTipSuggestedLimitIntent()
{
  uint64_t result = qword_1EBFE4070;
  if (!qword_1EBFE4070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3E49380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3E493E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1E4E77720](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)MEMORY[0x1E4E77720](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    sub_1E3E4BC68();
    char v14 = sub_1E3E7DA80();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)MEMORY[0x1E4E77720](i - 4, a1);
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)MEMORY[0x1E4E77720](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v18 = v17;
        char v19 = sub_1E3E7DA80();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

BOOL sub_1E3E49658(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

unint64_t static LibraryStorageTipSuggestedLimitIntent.kind.getter()
{
  return 0xD000000000000025;
}

uint64_t LibraryStorageTipSuggestedLimitIntent.globalLimit.getter()
{
  return *(void *)v0;
}

uint64_t LibraryStorageTipSuggestedLimitIntent.supportedLimits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryStorageTipSuggestedLimitIntent.storageUsed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryStorageTipSuggestedLimitIntent() + 24);
  uint64_t v4 = sub_1E3E78A70();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LibraryStorageTipSuggestedLimitIntent.storageAvailable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryStorageTipSuggestedLimitIntent() + 28);
  uint64_t v4 = sub_1E3E78A70();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LibraryStorageTipSuggestedLimitIntent.previousIgnoredStorage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryStorageTipSuggestedLimitIntent() + 32);

  return sub_1E3E4982C(v3, a1);
}

uint64_t sub_1E3E4982C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1E3E49898(char a1)
{
  unint64_t result = 0x694C6C61626F6C67;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574726F70707573;
      break;
    case 2:
      unint64_t result = 0x55656761726F7473;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1E3E49970()
{
  return sub_1E3E49898(*v0);
}

uint64_t sub_1E3E49978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E3E4B9B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1E3E499A0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1E3E499AC(uint64_t a1)
{
  unint64_t v2 = sub_1E3E4A7D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1E3E499E8(uint64_t a1)
{
  unint64_t v2 = sub_1E3E4A7D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LibraryStorageTipSuggestedLimitIntent.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E4A7D4();
  sub_1E3E7E300();
  uint64_t v12 = *v3;
  char v11 = 0;
  type metadata accessor for MTPodcastEpisodeLimit(0);
  sub_1E3E4BC20(&qword_1EBFE4B08, type metadata accessor for MTPodcastEpisodeLimit);
  sub_1E3E7E0B0();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A58);
    sub_1E3E4A828(&qword_1EBFE4A60, &qword_1EBFE4B08);
    sub_1E3E7E0B0();
    type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
    LOBYTE(v12) = 2;
    sub_1E3E78A70();
    sub_1E3E4BC20((unint64_t *)&unk_1EBFE4250, MEMORY[0x1E4F916D8]);
    sub_1E3E7E0B0();
    LOBYTE(v12) = 3;
    sub_1E3E7E0B0();
    LOBYTE(v12) = 4;
    sub_1E3E7E090();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LibraryStorageTipSuggestedLimitIntent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E78A70();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29BF8);
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  char v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1E3E4A7D4();
  uint64_t v41 = v12;
  id v17 = v43;
  sub_1E3E7E2E0();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  }
  uint64_t v43 = v10;
  uint64_t v35 = v7;
  uint64_t v18 = v15;
  uint64_t v19 = v38;
  uint64_t v20 = v39;
  type metadata accessor for MTPodcastEpisodeLimit(0);
  char v44 = 0;
  sub_1E3E4BC20(&qword_1EBFE4B10, type metadata accessor for MTPodcastEpisodeLimit);
  uint64_t v21 = v40;
  sub_1E3E7E080();
  uint64_t v22 = v18;
  *(void *)uint64_t v18 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A58);
  char v44 = 1;
  sub_1E3E4A828(&qword_1EAE29C00, &qword_1EBFE4B10);
  sub_1E3E7E080();
  *((void *)v18 + 1) = v45;
  LOBYTE(v45) = 2;
  uint64_t v23 = sub_1E3E4BC20(&qword_1EAE24EB0, MEMORY[0x1E4F916D8]);
  char v24 = v43;
  uint64_t v34 = v23;
  sub_1E3E7E080();
  uint64_t v32 = v13;
  uint64_t v33 = (uint64_t)v22;
  uint64_t v25 = v24;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v26(&v22[*(int *)(v13 + 24)], v25, v5);
  LOBYTE(v45) = 3;
  uint64_t v27 = v35;
  uint64_t v43 = 0;
  sub_1E3E7E080();
  v26((char *)(v33 + *(int *)(v32 + 28)), v27, v5);
  LOBYTE(v45) = 4;
  uint64_t v28 = (uint64_t)v37;
  sub_1E3E7E060();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v41, v21);
  uint64_t v29 = v33;
  sub_1E3E49380(v28, v33 + *(int *)(v32 + 32));
  sub_1E3E4A8BC(v29, v36);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return sub_1E3E4A920(v29);
}

uint64_t sub_1E3E4A2F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryStorageTipSuggestedLimitIntent.init(from:)(a1, a2);
}

uint64_t sub_1E3E4A308(void *a1)
{
  return LibraryStorageTipSuggestedLimitIntent.encode(to:)(a1);
}

void sub_1E3E4A324(void *a1@<X8>)
{
  *a1 = 0xD000000000000025;
  a1[1] = 0x80000001E3E96B70;
}

uint64_t sub_1E3E4A344()
{
  return sub_1E3E7C560();
}

BOOL _s10PodcastsUI37LibraryStorageTipSuggestedLimitIntentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78A70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29C20);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v27 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v27 - v18;
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  if (!sub_1E3E49658(*(void **)(a1 + 8), *(void **)(a2 + 8))) {
    return 0;
  }
  uint64_t v28 = v5;
  uint64_t v20 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  if ((sub_1E3E78A30() & 1) == 0 || (sub_1E3E78A30() & 1) == 0) {
    return 0;
  }
  sub_1E3E4982C(a1 + *(int *)(v20 + 32), (uint64_t)v19);
  sub_1E3E4982C(a2 + *(int *)(v20 + 32), (uint64_t)v16);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1E3E4982C((uint64_t)v19, (uint64_t)v10);
  sub_1E3E4982C((uint64_t)v16, v21);
  uint64_t v22 = v28;
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_1E3C10CE0((uint64_t)v16, &qword_1EBFE4260);
    sub_1E3C10CE0((uint64_t)v19, &qword_1EBFE4260);
    if (v23(v21, 1, v4) == 1)
    {
      sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE4260);
      return 1;
    }
    goto LABEL_10;
  }
  sub_1E3E4982C((uint64_t)v10, (uint64_t)v13);
  if (v23(v21, 1, v4) == 1)
  {
    sub_1E3C10CE0((uint64_t)v16, &qword_1EBFE4260);
    sub_1E3C10CE0((uint64_t)v19, &qword_1EBFE4260);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v4);
LABEL_10:
    sub_1E3C10CE0((uint64_t)v10, &qword_1EAE29C20);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v7, v21, v4);
  sub_1E3E4BC20(&qword_1EAE29C28, MEMORY[0x1E4F916D8]);
  char v24 = sub_1E3E7CCA0();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  v25(v7, v4);
  sub_1E3C10CE0((uint64_t)v16, &qword_1EBFE4260);
  sub_1E3C10CE0((uint64_t)v19, &qword_1EBFE4260);
  v25(v13, v4);
  sub_1E3C10CE0((uint64_t)v10, &qword_1EBFE4260);
  return (v24 & 1) != 0;
}

unint64_t sub_1E3E4A7D4()
{
  unint64_t result = qword_1EBFE4050;
  if (!qword_1EBFE4050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4050);
  }
  return result;
}

uint64_t sub_1E3E4A828(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE4A58);
    sub_1E3E4BC20(a2, type metadata accessor for MTPodcastEpisodeLimit);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3E4A8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3E4A920(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E3E4A97C()
{
  return sub_1E3E4BC20(&qword_1EAE29C08, (void (*)(uint64_t))type metadata accessor for LibraryStorageTipSuggestedLimitIntent);
}

uint64_t sub_1E3E4A9C4()
{
  return sub_1E3E4BC20((unint64_t *)&qword_1EBFE4068, (void (*)(uint64_t))type metadata accessor for LibraryStorageTipSuggestedLimitIntent);
}

unint64_t sub_1E3E4AA10()
{
  unint64_t result = qword_1EAE29C10;
  if (!qword_1EAE29C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29C10);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for LibraryStorageTipSuggestedLimitIntent(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1E3E78A70();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v13(&v4[a3[7]], (char *)a2 + a3[7], v11);
    uint64_t v14 = a3[8];
    uint64_t v15 = &v4[v14];
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t destroy for LibraryStorageTipSuggestedLimitIntent(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1E3E78A70();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v9(a1 + a2[7], v5);
  uint64_t v7 = a1 + a2[8];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

char *initializeWithCopy for LibraryStorageTipSuggestedLimitIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1E3E78A70();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  return a1;
}

char *assignWithCopy for LibraryStorageTipSuggestedLimitIntent(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1E3E78A70();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v15(&a1[v12], 1, v9);
  int v16 = v15(v14, 1, v9);
  if (!v7)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  return a1;
}

char *initializeWithTake for LibraryStorageTipSuggestedLimitIntent(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1E3E78A70();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for LibraryStorageTipSuggestedLimitIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1E3E78A70();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v16(&a1[v13], 1, v10);
  int v17 = v16(v15, 1, v10);
  if (!v8)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryStorageTipSuggestedLimitIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E4B3FC);
}

uint64_t sub_1E3E4B3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E78A70();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for LibraryStorageTipSuggestedLimitIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E4B540);
}

uint64_t sub_1E3E4B540(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E78A70();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4260);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1E3E4B670()
{
  sub_1E3E78A70();
  if (v0 <= 0x3F)
  {
    sub_1E3E4B754();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1E3E4B754()
{
  if (!qword_1EBFE4268)
  {
    sub_1E3E78A70();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE4268);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LibraryStorageTipSuggestedLimitIntent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E4B878);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryStorageTipSuggestedLimitIntent.CodingKeys()
{
  return &type metadata for LibraryStorageTipSuggestedLimitIntent.CodingKeys;
}

unint64_t sub_1E3E4B8B4()
{
  unint64_t result = qword_1EAE29C18;
  if (!qword_1EAE29C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29C18);
  }
  return result;
}

unint64_t sub_1E3E4B90C()
{
  unint64_t result = qword_1EBFE4060;
  if (!qword_1EBFE4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4060);
  }
  return result;
}

unint64_t sub_1E3E4B964()
{
  unint64_t result = qword_1EBFE4058;
  if (!qword_1EBFE4058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4058);
  }
  return result;
}

uint64_t sub_1E3E4B9B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x694C6C61626F6C67 && a2 == 0xEB0000000074696DLL;
  if (v2 || (sub_1E3E7E150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574726F70707573 && a2 == 0xEF7374696D694C64 || (sub_1E3E7E150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x55656761726F7473 && a2 == 0xEB00000000646573 || (sub_1E3E7E150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001E3EA3F60 || (sub_1E3E7E150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001E3EA3F80)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1E3E4BC20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3E4BC68()
{
  unint64_t result = qword_1EBFE2C98;
  if (!qword_1EBFE2C98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFE2C98);
  }
  return result;
}

Swift::Void __swiftcall EpisodeLimitRecommendation.markAsIgnored(in:)(NSUserDefaults in)
{
  Class isa = in.super.isa;
  uint64_t v2 = sub_1E3E78A70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EpisodeLimitRecommendation();
  sub_1E3E799A0();
  uint64_t v6 = sub_1E3E78A50();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    [(objc_class *)isa setInteger:v6 forKey:*MEMORY[0x1E4F92040]];
    uint64_t v7 = (void *)sub_1E3E7CCF0();
    [(objc_class *)isa setObject:v7 forKey:*MEMORY[0x1E4F92050]];

    uint64_t v8 = (void *)sub_1E3E7CCF0();
    [(objc_class *)isa setObject:v8 forKey:*MEMORY[0x1E4F92058]];

    if (qword_1EBFE47F8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4800);
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBFECDE8);
  sub_1E3E7BD70();
  uint64_t v10 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  [(objc_class *)isa removeObjectForKey:v10];

  if (qword_1EBFE47F0 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE25C8);
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBFECD98);
  sub_1E3E7BD70();
  uint64_t v12 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  [(objc_class *)isa removeObjectForKey:v12];
}

uint64_t type metadata accessor for EpisodeLimitRecommendation()
{
  uint64_t result = qword_1EBFE5610;
  if (!qword_1EBFE5610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EpisodeLimitRecommendation.init(episodeLimit:reclaimedSpace:episodesDeleted:spaceDistribution:osVersion:restoreToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  int v17 = (int *)type metadata accessor for EpisodeLimitRecommendation();
  uint64_t v18 = (char *)a9 + v17[5];
  uint64_t v19 = sub_1E3E78A70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  *(void *)((char *)a9 + v17[6]) = a3;
  uint64_t v20 = (char *)a9 + v17[7];
  uint64_t v21 = sub_1E3E799C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a4, v21);
  uint64_t v23 = (void *)((char *)a9 + v17[8]);
  *uint64_t v23 = a5;
  v23[1] = a6;
  char v24 = (void *)((char *)a9 + v17[9]);
  void *v24 = a7;
  v24[1] = a8;
  return result;
}

uint64_t EpisodeLimitRecommendation.episodeLimit.getter()
{
  return *(void *)v0;
}

uint64_t EpisodeLimitRecommendation.reclaimedSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 20);
  uint64_t v4 = sub_1E3E78A70();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EpisodeLimitRecommendation.episodesDeleted.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 24));
}

uint64_t EpisodeLimitRecommendation.spaceDistribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 28);
  uint64_t v4 = sub_1E3E799C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EpisodeLimitRecommendation.osVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodeLimitRecommendation.restoreToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EpisodeLimitRecommendation() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for EpisodeLimitRecommendation(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1E3E78A70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1E3E799C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    int v17 = (uint64_t *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)v4 + v16);
    uint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for EpisodeLimitRecommendation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1E3E78A70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_1E3E799C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EpisodeLimitRecommendation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  int v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EpisodeLimitRecommendation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  void *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for EpisodeLimitRecommendation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

void *assignWithTake for EpisodeLimitRecommendation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E78A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1E3E799C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeLimitRecommendation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E4C8CC);
}

uint64_t sub_1E3E4C8CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1E3E78A70();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1E3E799C0();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeLimitRecommendation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E4C9F4);
}

uint64_t sub_1E3E4C9F4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1E3E78A70();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_1E3E799C0();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8] + 8) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_1E3E4CB04()
{
  uint64_t result = sub_1E3E78A70();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E3E799C0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t static FetchChannelForPodcastIntent.kind.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t FetchChannelForPodcastIntent.podcastAdamID.getter()
{
  return *(void *)v0;
}

uint64_t FetchChannelForPodcastIntent.init(podcastAdamID:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1E3E4CC14(void *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001E3E96E90;
}

ValueMetadata *type metadata accessor for FetchChannelForPodcastIntent()
{
  return &type metadata for FetchChannelForPodcastIntent;
}

ValueMetadata *type metadata accessor for NowPlayingArtwork()
{
  return &type metadata for NowPlayingArtwork;
}

void sub_1E3E4CC54(uint64_t a1, void *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v19 = *(void (**)(double, double, double, double, double, double, double, double))(a1 + 32);
  sub_1E3E775E0();
  id v20 = a2;
  v19(a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release();
}

void NSTextStorage.writingDirectionOfLine(_:layoutManager:textContainer:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  if (!a2)
  {
    id v11 = objc_msgSend(v3, sel_layoutManagers);
    sub_1E3C12B10(0, &qword_1EAE29B90);
    unint64_t v12 = sub_1E3E7D060();

    if (v12 >> 62) {
      goto LABEL_24;
    }
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_25;
    }
    goto LABEL_6;
  }
  uint64_t v8 = a2;
  if (!a3) {
    goto LABEL_10;
  }
LABEL_3:
  id v9 = v6;
  uint64_t v10 = v5;
  while (1)
  {
    uint64_t v18 = v5;
    uint64_t v34 = v10;
    objc_msgSend(v8, sel_ensureLayoutForTextContainer_, v10);
    id v19 = objc_msgSend((id)v4, sel_fullRange);
    id v35 = objc_msgSend(v8, sel_glyphRangeForCharacterRange_actualCharacterRange_, v19, v20, 0);
    uint64_t v22 = v21;
    uint64_t v5 = (void *)swift_allocObject();
    v5[2] = 0;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_1E3E778C0();
    char v24 = (void *)(v23 + 16);
    *(void *)(v23 + 24) = 0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = 0;
    *(void *)(v4 + 24) = 0;
    *(unsigned char *)(v4 + 32) = 1;
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = v5;
    v25[3] = a1;
    v25[4] = v23;
    void v25[5] = v8;
    v25[6] = v4;
    aBlock[4] = sub_1E3E4D398;
    uint64_t v37 = v25;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1E3E4CC54;
    aBlock[3] = &block_descriptor_35;
    uint64_t v26 = _Block_copy(aBlock);
    uint64_t v6 = v37;
    sub_1E3E775E0();
    sub_1E3E775E0();
    id v27 = v8;
    sub_1E3E775E0();
    swift_release();
    objc_msgSend(v27, sel_enumerateLineFragmentsForGlyphRange_usingBlock_, v35, v22, v26);
    _Block_release(v26);
    if (a1 == -1)
    {
      swift_beginAccess();
      if ((*(unsigned char *)(v4 + 32) & 1) == 0)
      {
        id v28 = objc_msgSend(v27, sel_characterRangeForGlyphRange_actualGlyphRange_, *(void *)(v4 + 16), *(void *)(v4 + 24), 0);
        uint64_t v30 = v29;
        swift_beginAccess();
        *(void *)(v23 + 16) = v28;
        *(void *)(v23 + 24) = v30;
      }
    }
    unint64_t v12 = sub_1E3E778C0();
    swift_beginAccess();
    if (v12 == *v24)
    {
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    uint64_t v31 = *(void *)(v23 + 24) + *v24;
    if (!__OFSUB__(v31, 1))
    {
      NSAttributedString.strongBaseWritingDirectionOfParagraph(atOrBefore:)(v31 - 1);
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (!v32)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_26;
    }
LABEL_6:
    if ((v12 & 0xC000000000000001) == 0) {
      break;
    }
LABEL_26:
    id v13 = (id)MEMORY[0x1E4E77720](0, v12);
LABEL_9:
    uint64_t v8 = v13;
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:
    id v14 = v6;
    id v15 = objc_msgSend(v8, sel_textContainers);
    sub_1E3C12B10(0, &qword_1EAE29B98);
    unint64_t v16 = sub_1E3E7D060();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1E3E7DFC0();
      swift_bridgeObjectRelease();
      if (!v33)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_29:
        uint64_t v17 = (void *)MEMORY[0x1E4E77720](0, v16);
        goto LABEL_15;
      }
    }
    else if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_28;
    }
    if ((v16 & 0xC000000000000001) != 0) {
      goto LABEL_29;
    }
    if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_31;
    }
    uint64_t v17 = *(id *)(v16 + 32);
LABEL_15:
    uint64_t v10 = v17;
    swift_bridgeObjectRelease();
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v13 = *(id *)(v12 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

uint64_t sub_1E3E4D1EC()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E4D1FC()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E4D20C()
{
  return swift_deallocObject();
}

void sub_1E3E4D21C(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned char *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  v28.size.height = a8;
  v28.size.width = a7;
  v28.origin.y = a6;
  v28.origin.x = a5;
  if (CGRectGetHeight(v28) != 0.0)
  {
    char v24 = (void *)(a13 + 16);
    swift_beginAccess();
    if (*v24 == a14)
    {
      id v25 = objc_msgSend(a16, sel_characterRangeForGlyphRange_actualGlyphRange_, a10, a11, 0);
      uint64_t v27 = v26;
      swift_beginAccess();
      *(void *)(a15 + 16) = v25;
      *(void *)(a15 + 24) = v27;
      *a12 = 1;
    }
    else
    {
      swift_beginAccess();
      if (__OFADD__(*v24, 1))
      {
        __break(1u);
      }
      else
      {
        ++*v24;
        swift_beginAccess();
        *(void *)(a17 + 16) = a10;
        *(void *)(a17 + 24) = a11;
        *(unsigned char *)(a17 + 32) = 0;
      }
    }
  }
}

uint64_t sub_1E3E4D348()
{
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_1E3E4D398(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, double a5, double a6, double a7, double a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12)
{
  sub_1E3E4D21C(a5, a6, a7, a8, a9, a10, a11, a12, a1, a2, a3, a4, *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void **)(v12 + 40), *(void *)(v12 + 48));
}

uint64_t sub_1E3E4D3C8(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a4;
  uint64_t v10 = a5;
  id v11 = a1;
  NSTextStorage.writingDirectionOfLine(_:layoutManager:textContainer:)(a3, a4, a5);
  uint64_t v13 = v12;

  return v13;
}

uint64_t StorageAnalyticsResponder.init(asPartOf:)()
{
  return swift_release();
}

uint64_t DonationController.__allocating_init(objectGraph:)()
{
  uint64_t v0 = sub_1E3E4EBDC();
  swift_release();
  return v0;
}

uint64_t DonationController.__allocating_init(donationRepository:donationService:thinClientGlobalStateRepository:thinClientEpisodeStateRepository:thinClientPodcastStateRepository:inMemoryStateRepository:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = a1;
  uint64_t v13 = v12 + OBJC_IVAR____TtC10PodcastsUI18DonationController_donationService;
  uint64_t v14 = sub_1E3E79060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a2, v14);
  *(void *)(v12 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientGlobalStateRepository) = a3;
  *(void *)(v12 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientEpisodeStateRepository) = a4;
  *(void *)(v12 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientPodcastStateRepository) = a5;
  *(void *)(v12 + OBJC_IVAR____TtC10PodcastsUI18DonationController_inMemoryStateRepository) = a6;
  return v12;
}

uint64_t DonationController.init(donationRepository:donationService:thinClientGlobalStateRepository:thinClientEpisodeStateRepository:thinClientPodcastStateRepository:inMemoryStateRepository:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = a1;
  uint64_t v12 = v6 + OBJC_IVAR____TtC10PodcastsUI18DonationController_donationService;
  uint64_t v13 = sub_1E3E79060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a2, v13);
  *(void *)(v6 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientGlobalStateRepository) = a3;
  *(void *)(v6 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientEpisodeStateRepository) = a4;
  *(void *)(v6 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientPodcastStateRepository) = a5;
  *(void *)(v6 + OBJC_IVAR____TtC10PodcastsUI18DonationController_inMemoryStateRepository) = a6;
  return v6;
}

uint64_t DonationController.startLibraryDonations(with:)(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = sub_1E3E79090();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E4D75C, 0, 0);
}

uint64_t sub_1E3E4D75C()
{
  sub_1E3E4DDCC();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE0640);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1E3E4D824;
  return MEMORY[0x1F4127FF8](v0 + 16, v1, v1);
}

uint64_t sub_1E3E4D824()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1E3E4DCFC;
  }
  else {
    unint64_t v2 = sub_1E3E4D938;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E4D938()
{
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  sub_1E3C16CCC();
  *uint64_t v1 = v0;
  v1[1] = sub_1E3E4DA08;
  uint64_t v2 = v0[16];
  return MEMORY[0x1F41281F8](v2);
}

uint64_t sub_1E3E4DA08()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3E4DD60;
  }
  else {
    uint64_t v2 = sub_1E3E4DB1C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1E3E4DB1C()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[13];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v4 = sub_1E3E79070();
  uint64_t v5 = *(os_unfair_lock_s **)(v3 + 16);
  *(void *)(swift_task_alloc() + 16) = v4;
  uint64_t v6 = (uint64_t *)&v5[4];
  v5 += 6;
  os_unfair_lock_lock(v5);
  sub_1E3D3D2DC(v6);
  os_unfair_lock_unlock(v5);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v7 = sub_1E3E78400();
    v0[10] = v7;
    v0[11] = sub_1E3C16D20();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 7);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v7 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E4F91548], v7);
    LOBYTE(v7) = sub_1E3E78090();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
    if (v7)
    {
      sub_1E3E79CA0();
    }
    else
    {
      ThinClientStateRepository<>.overrideAllLibraryState(with:isInitialFetch:)(v0[16], 1);
      ThinClientStateRepository<>.overrideAllLibraryState(with:isInitialFetch:)();
    }
    uint64_t v10 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v11 = v0[14];
    sub_1E3E4E13C();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_task_dealloc();
    uint64_t v12 = (void (*)(void))v0[1];
    v12();
  }
}

uint64_t sub_1E3E4DCFC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E4DD60()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E4DDCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29C88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E3E79B40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E3E78400();
  uint64_t v17 = v10;
  unint64_t v18 = sub_1E3C16D20();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v10 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E4F91548], v10);
  LOBYTE(v10) = sub_1E3E78090();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F91B68], v6);
  if (v10)
  {
    sub_1E3E79CD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    __swift_project_boxed_opaque_existential_1(v16, v17);
    swift_allocObject();
    swift_weakInit();
    uint64_t v12 = sub_1E3E7AD60();
    swift_release();
    *(void *)(v1 + 16) = v12;
    swift_release();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  else
  {
    sub_1E3E7A3B0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_allocObject();
    swift_weakInit();
    swift_getOpaqueTypeConformance2();
    uint64_t v14 = sub_1E3E7AD60();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 16) = v14;
    return swift_release();
  }
}

uint64_t sub_1E3E4E13C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7D1E0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  sub_1E3E775E0();
  if (v8 == 1)
  {
    sub_1E3C1DE20((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1E3E7D1D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1E3E7D130();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EAE29C78;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    void v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t DonationController.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI18DonationController_donationService;
  uint64_t v2 = sub_1E3E79060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DonationController.__deallocating_deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10PodcastsUI18DonationController_donationService;
  uint64_t v2 = sub_1E3E79060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1E3E4E51C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3E4E13C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3E4E574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  uint64_t v5 = sub_1E3E7A880();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E4E634, 0, 0);
}

uint64_t sub_1E3E4E634()
{
  sub_1E3E78A20();
  sub_1E3E4F0B4(v0 + 16, v0 + 56);
  uint64_t v1 = sub_1E3E7A0B0();
  *(void *)(v0 + 136) = v1;
  sub_1E3E4F110(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E3E4E71C;
  return DonationRepository.fetchDonationData(for:)(v1);
}

uint64_t sub_1E3E4E71C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v6 = *v1;
  *(void *)(v3 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 160) = v4;
  *uint64_t v4 = v6;
  v4[1] = sub_1E3E4E898;
  return MEMORY[0x1F4144CE8](a1);
}

uint64_t sub_1E3E4E898()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 168) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3E4E9FC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1E3E4E9FC()
{
  uint64_t v1 = (void *)v0[21];
  sub_1E3E7A790();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4F0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[21];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    int v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[12] = v10;
    sub_1E3E7DBD0();
    void *v8 = v10;

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Something went wrong while performing Cascade donations: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v8, -1, -1);
    MEMORY[0x1E4E79510](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[21];
  }
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1E3E4EBDC()
{
  uint64_t v0 = sub_1E3E79060();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DonationRepository();
  sub_1E3E7BE20();
  uint64_t v4 = v11[5];
  sub_1E3E7BE20();
  sub_1E3E7A3C0();
  sub_1E3E7BE20();
  uint64_t v5 = v11[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA0);
  sub_1E3E7BE20();
  uint64_t v6 = v11[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE24CA8);
  sub_1E3E7BE20();
  uint64_t v7 = v11[2];
  sub_1E3E79CE0();
  sub_1E3E7BE20();
  uint64_t v8 = v11[1];
  type metadata accessor for DonationController();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = v4;
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v9 + OBJC_IVAR____TtC10PodcastsUI18DonationController_donationService, v3, v0);
  *(void *)(v9 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientGlobalStateRepository) = v5;
  *(void *)(v9 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientEpisodeStateRepository) = v6;
  *(void *)(v9 + OBJC_IVAR____TtC10PodcastsUI18DonationController_thinClientPodcastStateRepository) = v7;
  *(void *)(v9 + OBJC_IVAR____TtC10PodcastsUI18DonationController_inMemoryStateRepository) = v8;
  return v9;
}

uint64_t sub_1E3E4EDA0()
{
  return type metadata accessor for DonationController();
}

uint64_t type metadata accessor for DonationController()
{
  uint64_t result = qword_1EAE29C60;
  if (!qword_1EAE29C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3E4EDF4()
{
  uint64_t result = sub_1E3E79060();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DonationController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DonationController);
}

uint64_t dispatch thunk of DonationController.__allocating_init(donationRepository:donationService:thinClientGlobalStateRepository:thinClientEpisodeStateRepository:thinClientPodcastStateRepository:inMemoryStateRepository:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1E3E4EED0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E4EF10(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1E3C19DC4;
  return sub_1E3E4E574(a1, v4, v5, v6);
}

uint64_t sub_1E3E4EFC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E4EFFC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E3C19DC4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAE29C80 + dword_1EAE29C80);
  return v6(a1, v4);
}

uint64_t sub_1E3E4F0B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E3E4F110(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E3E4F144()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3E4F17C()
{
  return sub_1E3E4E51C();
}

uint64_t sub_1E3E4F198(uint64_t a1)
{
  uint64_t v2 = sub_1E3E79920();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v78 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7A5A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1E3E793D0();
  uint64_t v8 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v76 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1E3E7A880();
  int64_t v80 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v74 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6418);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v73 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v72 = (uint64_t)&v54 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v81 = (uint64_t)&v54 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v85 = (uint64_t)&v54 - v18;
  uint64_t v56 = sub_1E3E78740();
  uint64_t v19 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v71 = (uint64_t)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v54 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v84 = (uint64_t)&v54 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v83 = (uint64_t)&v54 - v27;
  uint64_t v70 = sub_1E3E78E70();
  uint64_t v28 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v82 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v30 = *(void *)(a1 + 16);
  if (!v30) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v68 = v23;
  uint64_t v89 = MEMORY[0x1E4FBC860];
  sub_1E3CC7680(0, v30, 0);
  uint64_t v31 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  id v66 = self;
  uint64_t v65 = *(void *)(v19 + 72);
  double v32 = *MEMORY[0x1E4F92098];
  uint64_t v64 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v63 = (void (**)(char *, uint64_t))(v80 + 8);
  uint64_t v62 = (void (**)(char *, void, uint64_t))(v8 + 104);
  uint64_t v61 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  id v60 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  unsigned int v59 = *MEMORY[0x1E4F91A08];
  uint64_t v58 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v57 = v28 + 32;
  uint64_t v69 = v4;
  uint64_t v67 = v28;
  uint64_t v33 = v81;
  do
  {
    int64_t v80 = v30;
    uint64_t v34 = v83;
    sub_1E3DDA8C4(v31, v83);
    id v35 = objc_msgSend(v66, sel_mainScreen);
    objc_msgSend(v35, sel_scale);

    uint64_t v36 = v85;
    (*v64)(v85, 1, 1, v4);
    uint64_t v37 = v74;
    sub_1E3E7A7F0();
    sub_1E3E7D4C0();
    sub_1E3E79930();
    (*v63)(v37, v75);
    uint64_t v38 = v84;
    sub_1E3DDA8C4(v34, v84);
    sub_1E3E78720();
    uint64_t v39 = (uint64_t)v76;
    uint64_t v40 = v77;
    (*v62)(v76, v59, v77);
    CGSize.fitting(_:aspectRule:)(v39, v32, v32);
    (*v61)(v39, v40);
    uint64_t v41 = v81;
    sub_1E3C34078(v36, v81, &qword_1EBFE6418);
    sub_1E3C34078((uint64_t)v88, (uint64_t)v87, &qword_1EBFE6360);
    uint64_t v42 = v72;
    sub_1E3C34078(v41, v72, &qword_1EBFE6418);
    uint64_t v43 = (uint64_t)v68;
    sub_1E3DDA8C4(v38, (uint64_t)v68);
    int v44 = (*v60)(v42, 1, v4);
    uint64_t v79 = v31;
    if (v44 == 1)
    {
      sub_1E3E78620();
      sub_1E3C2CBF8(v43);
      sub_1E3C10CE0(v42, &qword_1EBFE6418);
    }
    else
    {
      sub_1E3C2CBF8(v43);
      (*v55)(v7, v42, v4);
    }
    sub_1E3E7A570();
    uint64_t v45 = v84;
    sub_1E3DDA8C4(v84, v71);
    sub_1E3C34078(v33, v73, &qword_1EBFE6418);
    uint64_t v46 = v7;
    sub_1E3E79900();
    sub_1E3C34078((uint64_t)v87, (uint64_t)v86, &qword_1EBFE6360);
    sub_1E3E78DF0();
    sub_1E3C10CE0((uint64_t)v87, &qword_1EBFE6360);
    sub_1E3C10CE0(v33, &qword_1EBFE6418);
    sub_1E3C2CBF8(v45);
    (*v58)(v7, v4);
    sub_1E3C10CE0((uint64_t)v88, &qword_1EBFE6360);
    sub_1E3C10CE0(v85, &qword_1EBFE6418);
    sub_1E3C2CBF8(v83);
    uint64_t v47 = v89;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1E3CC7680(0, *(void *)(v47 + 16) + 1, 1);
      uint64_t v47 = v89;
    }
    uint64_t v48 = v67;
    int64_t v49 = v80;
    uint64_t v50 = v79;
    unint64_t v52 = *(void *)(v47 + 16);
    unint64_t v51 = *(void *)(v47 + 24);
    if (v52 >= v51 >> 1)
    {
      sub_1E3CC7680(v51 > 1, v52 + 1, 1);
      uint64_t v47 = v89;
    }
    *(void *)(v47 + 16) = v52 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v47+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v52, v82, v70);
    uint64_t v89 = v47;
    uint64_t v31 = v50 + v65;
    int64_t v30 = v49 - 1;
    uint64_t v4 = v69;
    uint64_t v7 = v46;
  }
  while (v30);
  return v47;
}

uint64_t ArtworkModel.init(composite:width:height:backgroundColor:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v7 = sub_1E3E78630();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v32 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = sub_1E3E4F198(a1);
  swift_bridgeObjectRelease();
  sub_1E3E77920();
  swift_allocObject();
  sub_1E3E77910();
  *(void *)&long long v40 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE299C0);
  sub_1E3E500A8();
  uint64_t v37 = sub_1E3E77900();
  unint64_t v38 = v20;
  id v35 = a2;
  uint64_t v36 = v18;
  uint64_t v34 = v9;
  swift_bridgeObjectRelease();
  swift_release();
  sub_1E3E786F0();
  sub_1E3E77CD0();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1E3E77D00();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(void, void, void))(v22 + 48);
  if (v23(v15, 1, v21) == 1)
  {
    sub_1E3C10CE0((uint64_t)v15, &qword_1EBFE6070);
    uint64_t v24 = 1;
    uint64_t v25 = (uint64_t)v36;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26950);
    double v32 = v23;
    sub_1E3E779F0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
    sub_1E3E78700();
    sub_1E3E77D40();
    int v33 = a3;
    sub_1E3E779D0();
    swift_bridgeObjectRelease();
    LOBYTE(a3) = v33;
    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t)v36;
    sub_1E3E77CE0();
    uint64_t v23 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v21);
    uint64_t v24 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v25, v24, 1, v21);
  sub_1E3C34078(v25, (uint64_t)v12, &qword_1EBFE6070);
  unsigned int v26 = v23(v12, 1, v21);
  uint64_t v27 = v35;
  if (v26 == 1)
  {
    sub_1E3C2B7E8(v37, v38);
    sub_1E3E50174(v27, a3);
    sub_1E3C10CE0((uint64_t)v12, &qword_1EBFE6070);
    sub_1E3C10CE0(v25, &qword_1EBFE6070);
    uint64_t v28 = sub_1E3E78740();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v39, 1, 1, v28);
  }
  else
  {
    sub_1E3E77C00();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
    long long v40 = xmmword_1E3E8CEA0;
    long long v41 = 0u;
    memset(v42, 0, sizeof(v42));
    sub_1E3E78600();
    sub_1E3E78AC0();
    uint64_t v30 = v39;
    sub_1E3E78730();
    sub_1E3C2B7E8(v37, v38);
    sub_1E3E50174(v27, a3);
    sub_1E3C10CE0(v25, &qword_1EBFE6070);
    uint64_t v31 = sub_1E3E78740();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
}

unint64_t sub_1E3E500A8()
{
  unint64_t result = qword_1EAE29C90;
  if (!qword_1EAE29C90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE299C0);
    sub_1E3E5011C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29C90);
  }
  return result;
}

unint64_t sub_1E3E5011C()
{
  unint64_t result = qword_1EBFE42A0;
  if (!qword_1EBFE42A0)
  {
    sub_1E3E78E70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE42A0);
  }
  return result;
}

void sub_1E3E50174(id a1, char a2)
{
  if (a2 != -1) {
    sub_1E3C2B7D4(a1, a2);
  }
}

uint64_t ArtworkModel.init(serverArtwork:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E3E78630();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1E3E78C60();
  if (v3)
  {
    sub_1E3E78C70();
    if ((v4 & 1) == 0)
    {
      sub_1E3E78C80();
      if ((v5 & 1) == 0)
      {
        uint64_t v6 = sub_1E3E78C90();
        if (v7)
        {
          v13[0] = v6;
          v13[1] = v7;
          sub_1E3E50B84(v13, (uint64_t)&v12);
          swift_bridgeObjectRelease();
        }
        sub_1E3E775E0();
        sub_1E3E793E0();
        sub_1E3E78600();
        sub_1E3E78AC0();
        sub_1E3E78730();
        swift_release();
        uint64_t v11 = sub_1E3E78740();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v8 = sub_1E3E78740();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a1, 1, 1, v8);
}

uint64_t ArtworkModel.config(_:mode:format:crop:retainAspectRatio:)(uint64_t a1, int a2, uint64_t a3, int a4, double a5, double a6)
{
  int v41 = a4;
  int v42 = a2;
  uint64_t v39 = a3;
  uint64_t v37 = a1;
  int v38 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6418);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E3E7A5A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v40 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E3E78740();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v36 - v19;
  uint64_t v21 = sub_1E3E793D0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E78720();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E4F91A08], v21);
  double v25 = CGSize.fitting(_:mode:aspectRule:)(v37, (uint64_t)v24, a5, a6);
  double v27 = v26;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  id v28 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v28, sel_scale);
  uint64_t v30 = v29;

  sub_1E3DDA8C4((uint64_t)v6, (uint64_t)v20);
  if (v38 == 4) {
    int v42 = v20[*(int *)(v15 + 52)];
  }
  sub_1E3C2CBF8((uint64_t)v20);
  uint64_t v32 = *v6;
  uint64_t v31 = v6[1];
  sub_1E3C34078(v39, (uint64_t)v11, &qword_1EBFE6418);
  sub_1E3DDA8C4((uint64_t)v6, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_bridgeObjectRetain();
    int v33 = v40;
    sub_1E3E78620();
    sub_1E3C2CBF8((uint64_t)v17);
    sub_1E3C10CE0((uint64_t)v11, &qword_1EBFE6418);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1E3C2CBF8((uint64_t)v17);
    int v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v40, v11, v12);
  }
  type metadata accessor for ArtworkLoaderConfig();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v32;
  *(void *)(v34 + 24) = v31;
  *(double *)(v34 + 32) = floor(v25);
  *(double *)(v34 + 40) = floor(v27);
  *(unsigned char *)(v34 + 48) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v34 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_crop, v33, v12);
  *(void *)(v34 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_scale) = v30;
  *(unsigned char *)(v34 + OBJC_IVAR____TtC10PodcastsUI19ArtworkLoaderConfig_retainAspectRatio) = v41 & 1;
  return v34;
}

void ArtworkModel.joeColors(where:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4 = v2;
  int v7 = *(unsigned __int8 *)(v4 + 64);
  if (v7 == 255)
  {
    uint64_t v21 = (uint64_t (*)(id))a1;
    uint64_t v22 = a2;
  }
  else
  {
    id v8 = Color.color.getter(*(void *)(v4 + 56), v7);
    char v9 = a1();
    if (v3)
    {

      return;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2930);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1E3E8A550;
      *(void *)(v10 + 32) = v8;
      unint64_t v32 = v10;
      sub_1E3E7D080();
      return;
    }
    uint64_t v21 = (uint64_t (*)(id))a1;
    uint64_t v22 = a2;
  }
  id v24 = *(id *)(v4 + 72);
  v25[0] = *(unsigned char *)(v4 + 80);
  id v26 = *(id *)(v4 + 88);
  char v27 = *(unsigned char *)(v4 + 96);
  id v28 = *(id *)(v4 + 104);
  char v29 = *(unsigned char *)(v4 + 112);
  id v30 = *(id *)(v4 + 120);
  char v31 = *(unsigned char *)(v4 + 128);
  unint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1E3E50E7C(v24, v25[0]);
  sub_1E3E50E7C(v26, v27);
  sub_1E3E50E7C(v28, v29);
  sub_1E3E50E7C(v30, v31);
  for (uint64_t i = 0; i != 64; i += 16)
  {
    uint64_t v14 = *(void *)&v23[i + 32];
    if (v25[i] > 1u)
    {
      if (v25[i] == 255) {
        continue;
      }
      switch(v14)
      {
        case 1:
          id v16 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
          uint64_t v12 = 1;
          break;
        case 2:
          id v17 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
          uint64_t v12 = 2;
          break;
        case 3:
          id v18 = objc_msgSend(self, sel_clearColor);
          uint64_t v12 = 3;
          break;
        case 4:
          id v19 = objc_msgSend(self, sel_clearColor);
          uint64_t v12 = 4;
          break;
        default:
          id v15 = objc_msgSend(self, sel_systemBackgroundColor);
          uint64_t v12 = 0;
          break;
      }
      char v13 = 2;
    }
    else
    {
      if (v25[i])
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithCGColor_, v14);
        goto LABEL_11;
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, (double)v14 / 255.0, (double)BYTE1(v14) / 255.0, (double)BYTE2(v14) / 255.0, (double)BYTE3(v14) / 255.0);
      uint64_t v12 = v14;
      char v13 = 0;
    }
    sub_1E3E50174((id)v12, v13);
LABEL_11:
    MEMORY[0x1E4E76960]();
    if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E3E7D090();
    }
    sub_1E3E7D100();
    sub_1E3E7D080();
  }
  unint64_t v20 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29C98);
  swift_arrayDestroy();
  sub_1E3E50E90(v20, v21, v22);
}

uint64_t sub_1E3E50B84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1E3E7A880();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E3E7A4B0();
  if (v2)
  {
    sub_1E3E7A7F0();
    swift_bridgeObjectRetain();
    id v13 = v2;
    swift_bridgeObjectRetain();
    id v14 = v2;
    id v15 = sub_1E3E7A860();
    os_log_type_t v16 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v24 = v5;
      uint64_t v18 = v17;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = v23;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v25 = a2;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1E3C150B8(v9, v10, &v27);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v26 = (uint64_t)v2;
      id v19 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
      uint64_t v20 = sub_1E3E7CD90();
      uint64_t v26 = sub_1E3C150B8(v20, v21, &v27);
      sub_1E3E7DBD0();
      a2 = v25;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1E3BC5000, v15, v16, "Encountered an error decoding color descriptor (%s): %s", (uint8_t *)v18, 0x16u);
      uint64_t v22 = v23;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v22, -1, -1);
      MEMORY[0x1E4E79510](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t result = 0;
    char v12 = -1;
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v12;
  return result;
}

id sub_1E3E50E7C(id result, char a2)
{
  if (a2 != -1) {
    return sub_1E3C2B46C(result, a2);
  }
  return result;
}

uint64_t sub_1E3E50E90(unint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  unint64_t v6 = a1;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v6 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v6 & 0xC000000000000001;
      unint64_t v15 = v6;
      while (v17)
      {
        id v9 = (id)MEMORY[0x1E4E77720](v8, v6);
LABEL_9:
        unint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        uint64_t v12 = a3;
        char v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_1E3E7DE80();
          sub_1E3E7DEC0();
          unint64_t v6 = v15;
          sub_1E3E7DED0();
          sub_1E3E7DE90();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_1E3E7DFC0();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

BOOL sub_1E3E51038(char a1, char a2)
{
  return dbl_1E3E97090[a1] == dbl_1E3E97090[a2];
}

uint64_t sub_1E3E5105C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x616D6B6F6F626E75;
  }
  else {
    uint64_t v3 = 0x6B72616D6B6F6F62;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006B72;
  }
  if (a2) {
    uint64_t v5 = 0x616D6B6F6F626E75;
  }
  else {
    uint64_t v5 = 0x6B72616D6B6F6F62;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006B72;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1E3E7E150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1E3E51108(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x7565755174666F73;
  }
  else {
    uint64_t v2 = 0x7565755164726168;
  }
  if (a2) {
    uint64_t v3 = 0x7565755174666F73;
  }
  else {
    uint64_t v3 = 0x7565755164726168;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1E3E7E150();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1E3E51194(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7972616D697270;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7972616D697270;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x617461646174656DLL;
      break;
    case 2:
      uint64_t v5 = 0x746E65436F666E69;
      unint64_t v3 = 0xEA00000000007265;
      break;
    case 3:
      uint64_t v5 = 0x65676150776F6873;
      unint64_t v3 = 0xEC0000006C6C6154;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x706F72646B636162;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x617461646174656DLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEA00000000007265;
      if (v5 != 0x746E65436F666E69) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x65676150776F6873;
      unint64_t v6 = 0xEC0000006C6C6154;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x706F72646B636162) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1E3E51378(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x72657470616863;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x72657470616863;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x65646F73697065;
      break;
    case 2:
      uint64_t v5 = 0x65676150776F6873;
      unint64_t v3 = 0xEC0000006C6C6154;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 2003789939;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x65646F73697065) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x65676150776F6873;
      unint64_t v6 = 0xEC0000006C6C6154;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 2003789939) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1E3E51500(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006575;
  uint64_t v3 = 0x6575516F54646461;
  unint64_t v4 = 0xEA00000000006575;
  uint64_t v5 = a1;
  uint64_t v6 = 0x6575516F54646461;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x6B72616D6B6F6F62;
      break;
    case 2:
      uint64_t v6 = 0x6C5073416B72616DLL;
      unint64_t v4 = 0xEC00000064657961;
      break;
    case 3:
      uint64_t v6 = 0x6E5573416B72616DLL;
      unint64_t v4 = 0xEE00646579616C70;
      break;
    case 4:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x7478654E79616C70;
      break;
    case 5:
      uint64_t v6 = 0x616D6B6F6F626E75;
      unint64_t v4 = 0xEA00000000006B72;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v6 == 0x6B72616D6B6F6F62) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xEC00000064657961;
      if (v6 != 0x6C5073416B72616DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xEE00646579616C70;
      if (v6 != 0x6E5573416B72616DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7478654E79616C70;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0xEA00000000006B72;
      if (v6 != 0x616D6B6F6F626E75) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v6 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v4 == v2) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1E3E5173C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x6C7070612E6D6F63;
  }
  else {
    unint64_t v3 = 0xD000000000000012;
  }
  if (v2) {
    unint64_t v4 = 0x80000001E3E9B230;
  }
  else {
    unint64_t v4 = 0xED00007070752E65;
  }
  if (a2) {
    unint64_t v5 = 0x6C7070612E6D6F63;
  }
  else {
    unint64_t v5 = 0xD000000000000012;
  }
  if (a2) {
    unint64_t v6 = 0xED00007070752E65;
  }
  else {
    unint64_t v6 = 0x80000001E3E9B230;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1E3E7E150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1E3E517F4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x776F6C6C6F666E75;
  }
  else {
    uint64_t v3 = 0x776F6C6C6F66;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x776F6C6C6F666E75;
  }
  else {
    uint64_t v5 = 0x776F6C6C6F66;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1E3E7E150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void QueueModelSection.init(tracklistSection:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1E3E7CD30();
  uint64_t v6 = v5;
  if (v4 == sub_1E3E7CD30() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v9 = sub_1E3E7E150();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_14:

    char v17 = 0;
    goto LABEL_15;
  }
  uint64_t v10 = sub_1E3E7CD30();
  uint64_t v12 = v11;
  if (v10 == sub_1E3E7CD30() && v12 == v13)
  {
    id v18 = a1;

    swift_bridgeObjectRelease_n();
    char v17 = 1;
  }
  else
  {
    char v15 = sub_1E3E7E150();
    id v16 = a1;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      char v17 = 1;
    }
    else {
      char v17 = 2;
    }
  }
LABEL_15:
  *a2 = v17;
}

PodcastsUI::QueueModelSection_optional __swiftcall QueueModelSection.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_1E3E7E050();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t QueueModelSection.rawValue.getter()
{
  if (*v0) {
    return 0x7565755174666F73;
  }
  else {
    return 0x7565755164726168;
  }
}

uint64_t sub_1E3E51A80(char *a1, char *a2)
{
  return sub_1E3E51108(*a1, *a2);
}

uint64_t sub_1E3E51A8C()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E51B0C()
{
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3E51B70()
{
  return sub_1E3E7E2B0();
}

PodcastsUI::QueueModelSection_optional sub_1E3E51BEC(Swift::String *a1)
{
  return QueueModelSection.init(rawValue:)(*a1);
}

void sub_1E3E51BF8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7565755164726168;
  if (*v1) {
    uint64_t v2 = 0x7565755174666F73;
  }
  *a1 = v2;
  a1[1] = 0xE900000000000065;
}

unint64_t sub_1E3E51C38()
{
  unint64_t result = qword_1EAE29CA0;
  if (!qword_1EAE29CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29CA0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for QueueModelSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E51D58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueueModelSection()
{
  return &type metadata for QueueModelSection;
}

void CGSize.fitting(_:aspectRule:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = sub_1E3E793D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 != 0.0 || a3 != 0.0)
  {
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v10(v9, a1, v6);
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    if (v11 != *MEMORY[0x1E4F91A00] && v11 != *MEMORY[0x1E4F91A08])
    {
      v13[3] = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
      v10((char *)boxed_opaque_existential_1, a1, v6);
      unrecognizedEnumValueEncountered(_:)((uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

double CGSize.fitting(_:mode:aspectRule:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = sub_1E3E793D0();
  uint64_t v9 = *(void *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 3) >= 0xA)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        char v15 = (unsigned int *)MEMORY[0x1E4F91A08];
      }
      else
      {
        if (a1 != 2)
        {
          type metadata accessor for ContentMode(0);
          v18[3] = v17;
          v18[0] = a1;
          unrecognizedEnumValueEncountered(_:)((uint64_t)v18);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
          return a3;
        }
        char v15 = (unsigned int *)MEMORY[0x1E4F91A00];
      }
      (*(void (**)(char *, void, uint64_t, __n128))(v9 + 104))(v12, *v15, v8, v10);
      CGSize.fitting(_:aspectRule:)((uint64_t)v12, a3, a4);
      a3 = v16;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
  }
  else
  {
    CGSize.fitting(_:aspectRule:)(a2, a3, a4);
    return v13;
  }
  return a3;
}

double CGSize.integral.getter(double a1)
{
  return floor(a1);
}

double static CGSize.* infix(_:_:)(double a1, double a2, double a3)
{
  return a1 * a3;
}

float64x2_t static CGSize.*= infix(_:_:)(float64x2_t *a1, double a2)
{
  float64x2_t result = vmulq_n_f64(*a1, a2);
  *a1 = result;
  return result;
}

unint64_t sub_1E3E5215C(uint64_t a1)
{
  unint64_t result = sub_1E3E52184();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1E3E52184()
{
  unint64_t result = qword_1EBFDF008;
  if (!qword_1EBFDF008)
  {
    type metadata accessor for CGSize(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFDF008);
  }
  return result;
}

uint64_t FetchPodcastForEpisodeIntentImplementation.perform(_:objectGraph:)(uint64_t *a1, uint64_t a2)
{
  v2[10] = a2;
  uint64_t v4 = sub_1E3E79440();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29650);
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273B0);
  v2[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29580);
  v2[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273C0);
  v2[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29590);
  v2[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE273D0);
  v2[22] = swift_task_alloc();
  uint64_t v6 = sub_1E3E78770();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v7 = sub_1E3E78800();
  v2[26] = v7;
  v2[27] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *a1;
  v2[28] = v8;
  v2[29] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D60);
  uint64_t v11 = (void *)swift_task_alloc();
  v2[30] = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1E3E52544;
  return MEMORY[0x1F4127FF8](v2 + 2, v10, v10);
}

uint64_t sub_1E3E52544()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1E3E535EC, 0, 0);
  }
  else
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29CB8);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 256) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1E3E526E4;
    return MEMORY[0x1F4127FF8](v2 + 56, v3, v3);
  }
}

uint64_t sub_1E3E526E4()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1E3E536D8;
  }
  else {
    uint64_t v2 = sub_1E3E527F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E527F8()
{
  uint64_t v1 = v0;
  uint64_t v37 = v0 + 2;
  uint64_t v39 = v0 + 9;
  uint64_t v35 = v0[29];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v40 = v0[18];
  uint64_t v36 = v0[17];
  uint64_t v38 = v0[7];
  v0[34] = v38;
  (*(void (**)(void))(v2 + 104))();
  uint64_t v7 = *MEMORY[0x1E4F91610];
  uint64_t v8 = sub_1E3E78790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104);
  v10(v3, v7, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
  uint64_t v11 = sub_1E3E78820();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  uint64_t v12 = sub_1E3E787B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29CC0);
  uint64_t v13 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26020) - 8);
  unint64_t v14 = (*(unsigned __int8 *)(*(void *)v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1E3E86660;
  unint64_t v16 = v15 + v14;
  uint64_t v17 = v13[14];
  v10(v16, *MEMORY[0x1E4F91618], v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29CD0);
  uint64_t v18 = sub_1E3E787C0();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1E3E86660;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, *MEMORY[0x1E4F91668], v18);
  *(void *)(v16 + v17) = v21;
  sub_1E3C7FAD8(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6420);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1E3E86660;
  v1[8] = v35;
  sub_1E3C340DC();
  *(void *)(v22 + 32) = sub_1E3E7DC90();
  *(void *)(v22 + 40) = v23;
  uint64_t v24 = sub_1E3E787A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 1, 1, v24);
  uint64_t v25 = sub_1E3E78810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v40, 1, 1, v25);
  uint64_t v26 = sub_1E3E77D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v36, 1, 1, v26);
  uint64_t v27 = MEMORY[0x1E4FBC860];
  id v28 = (uint64_t (*)(void))MEMORY[0x1E4F91638];
  sub_1E3E53BF8(MEMORY[0x1E4FBC860], &qword_1EAE29D60, &qword_1EAE29D68, (uint64_t (*)(char *))sub_1E3E542E8, MEMORY[0x1E4F91638]);
  sub_1E3E53BF8(v27, &qword_1EAE29D60, &qword_1EAE29D68, (uint64_t (*)(char *))sub_1E3E542E8, v28);
  sub_1E3E539C8(v27);
  char v29 = (uint64_t (*)(void))MEMORY[0x1E4F91620];
  sub_1E3E53BF8(v27, &qword_1EAE26020, &qword_1EAE26028, (uint64_t (*)(char *))sub_1E3E53FA0, MEMORY[0x1E4F91620]);
  sub_1E3E53BF8(v27, &qword_1EAE29D18, &qword_1EAE29D20, (uint64_t (*)(char *))sub_1E3E54074, MEMORY[0x1E4F916B8]);
  sub_1E3E53BF8(v27, &qword_1EAE29CF8, (uint64_t *)&unk_1EAE29D00, (uint64_t (*)(char *))sub_1E3E53FA0, v29);
  sub_1E3E787F0();
  long long v30 = *(_OWORD *)(v1 + 5);
  *(_OWORD *)(v1 + 35) = v30;
  v1[37] = __swift_project_boxed_opaque_existential_1(v37, v30);
  v1[38] = sub_1E3E79AC0();
  sub_1E3E79420();
  uint64_t v31 = swift_allocObject();
  v1[39] = v31;
  *(void *)(v31 + 16) = v38;
  swift_unknownObjectRetain();
  unint64_t v32 = (void *)swift_task_alloc();
  v1[40] = v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29CD8);
  void *v32 = v1;
  v32[1] = sub_1E3E52EEC;
  return MEMORY[0x1F4144EE0](v39, sub_1E3E53EA8, v31, v33);
}

uint64_t sub_1E3E52EEC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  uint64_t v2 = *(void *)(*(void *)v0 + 96);
  uint64_t v3 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1E3E53060, 0, 0);
}

uint64_t sub_1E3E53060()
{
  v0[41] = v0[9];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[42] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1E3E53114;
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[16];
  return MEMORY[0x1F4145690](v3, v2);
}

uint64_t sub_1E3E53114()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_1E3E537CC;
  }
  else {
    uint64_t v3 = sub_1E3E53248;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1E3E53248()
{
  unint64_t v1 = sub_1E3E79390();
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    if (!sub_1E3E7DFC0()) {
      goto LABEL_21;
    }
  }
  else if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    uint64_t v16 = v0[27];
    uint64_t v17 = v0[28];
    uint64_t v18 = v0[26];
    uint64_t v20 = v0[15];
    uint64_t v19 = v0[16];
    uint64_t v21 = v0[14];
    sub_1E3E53EE4();
    swift_allocError();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (void (*)(void))v0[1];
    v22();
    return;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1E4E77720](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1E3E7DFC0();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
    id v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1E3E79A90();

  if (!v5) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)sub_1E3E7A1F0();

  if (!v6) {
    goto LABEL_22;
  }
  unint64_t v2 = sub_1E3E7A250();

  if (v2 >> 62) {
    goto LABEL_20;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v7 = (id)MEMORY[0x1E4E77720](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v7 = *(id *)(v2 + 32);
  }
  id v23 = v7;
  uint64_t v8 = v0[27];
  uint64_t v9 = v0[28];
  uint64_t v10 = v0[26];
  uint64_t v11 = v0[16];
  uint64_t v13 = v0[14];
  uint64_t v12 = v0[15];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = (void (*)(id))v0[1];
  v14(v23);
}

uint64_t sub_1E3E535EC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E536D8()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E537CC()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1E3E538EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1E3C856F4;
  return FetchPodcastForEpisodeIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

unint64_t sub_1E3E5398C(uint64_t a1)
{
  return sub_1E3E53BF8(a1, &qword_1EAE29D60, &qword_1EAE29D68, (uint64_t (*)(char *))sub_1E3E542E8, MEMORY[0x1E4F91638]);
}

unint64_t sub_1E3E539C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29D40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29D48);
  uint64_t v6 = sub_1E3E7E000();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v12, (uint64_t)v5, &qword_1EAE29D40);
    unint64_t result = sub_1E3E542E8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1E3E787B0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3E53BBC(uint64_t a1)
{
  return sub_1E3E53BF8(a1, &qword_1EAE26020, &qword_1EAE26028, (uint64_t (*)(char *))sub_1E3E53FA0, MEMORY[0x1E4F91620]);
}

unint64_t sub_1E3E53BF8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(void))
{
  char v29 = a5;
  long long v30 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v12 = sub_1E3E7E000();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = *(int *)(v8 + 48);
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v28[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  sub_1E3E775E0();
  while (1)
  {
    sub_1E3C34078(v18, (uint64_t)v11, a2);
    unint64_t result = v30(v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = v29(0);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    *(void *)(v13[7] + 8 * v22) = *(void *)&v11[v15];
    uint64_t v25 = v13[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    void v13[2] = v27;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E3E53DF8(uint64_t a1)
{
  return sub_1E3E53BF8(a1, &qword_1EAE29D18, &qword_1EAE29D20, (uint64_t (*)(char *))sub_1E3E54074, MEMORY[0x1E4F916B8]);
}

unint64_t sub_1E3E53E34(uint64_t a1)
{
  return sub_1E3E53BF8(a1, &qword_1EAE29CF8, (uint64_t *)&unk_1EAE29D00, (uint64_t (*)(char *))sub_1E3E53FA0, MEMORY[0x1E4F91620]);
}

uint64_t sub_1E3E53E70()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

id sub_1E3E53EA8@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*(id *)(v1 + 16), sel_primaryUser);
  *a1 = result;
  return result;
}

unint64_t sub_1E3E53EE4()
{
  unint64_t result = qword_1EAE29CE0;
  if (!qword_1EAE29CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29CE0);
  }
  return result;
}

unint64_t sub_1E3E53F3C()
{
  unint64_t result = qword_1EBFE0198;
  if (!qword_1EBFE0198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE0198);
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPodcastForEpisodeIntentImplementation()
{
  return &type metadata for FetchPodcastForEpisodeIntentImplementation;
}

unint64_t sub_1E3E53FA0(uint64_t a1)
{
  sub_1E3E78790();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F91620];
  sub_1E3E543BC(&qword_1EAE25088, MEMORY[0x1E4F91620]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3E54148(a1, v3, MEMORY[0x1E4F91620], &qword_1EAE29D10, v2, MEMORY[0x1E4F91630]);
}

unint64_t sub_1E3E54074(uint64_t a1)
{
  sub_1E3E787E0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F916B8];
  sub_1E3E543BC(&qword_1EAE29D28, MEMORY[0x1E4F916B8]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3E54148(a1, v3, MEMORY[0x1E4F916B8], (unint64_t *)&unk_1EAE29D30, v2, MEMORY[0x1E4F916C8]);
}

unint64_t sub_1E3E54148(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v24 = a4;
  v22[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v22 - v11;
  uint64_t v23 = v6;
  uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v14 = a2 & ~v13;
  v22[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v15 = ~v13;
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    uint64_t v17 = v9 + 16;
    uint64_t v16 = v18;
    uint64_t v19 = *(void *)(v17 + 56);
    do
    {
      v16(v12, *(void *)(v23 + 48) + v19 * v14, v8, v10);
      sub_1E3E543BC(v24, v25);
      char v20 = sub_1E3E7CCA0();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v12, v8);
      if (v20) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
    }
    while (((*(void *)(v22[0] + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1E3E542E8(uint64_t a1)
{
  sub_1E3E787B0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F91638];
  sub_1E3E543BC(&qword_1EAE29D50, MEMORY[0x1E4F91638]);
  uint64_t v3 = sub_1E3E7CC20();
  return sub_1E3E54148(a1, v3, MEMORY[0x1E4F91638], &qword_1EAE29D58, v2, MEMORY[0x1E4F91648]);
}

uint64_t sub_1E3E543BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static StayUpToDateTip.kind.getter()
{
  return 0x6F54705579617473;
}

uint64_t StayUpToDateTip.icon.getter()
{
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();

  return sub_1E3E77CD0();
}

uint64_t StayUpToDateTip.title.getter()
{
  return sub_1E3E79530();
}

uint64_t StayUpToDateTip.message.getter()
{
  return sub_1E3E79530();
}

uint64_t StayUpToDateTip.buttons.getter()
{
  uint64_t v0 = sub_1E3E7C050();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v46 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1E3E7BD30();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  int v44 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v49 = (char *)&v43 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26CA8);
  uint64_t v8 = swift_allocObject();
  long long v43 = xmmword_1E3E86660;
  *(_OWORD *)(v8 + 16) = xmmword_1E3E86660;
  uint64_t v9 = sub_1E3E79100();
  uint64_t v48 = v10;
  uint64_t v11 = sub_1E3E79500();
  uint64_t v47 = v12;
  uint64_t v13 = sub_1E3E79A00();
  uint64_t v45 = v14;
  uint64_t v15 = sub_1E3E77D00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  if (qword_1EBFE5608 != -1) {
    swift_once();
  }
  long long v54 = xmmword_1EBFE55D0;
  long long v55 = *(_OWORD *)&qword_1EBFE55E0;
  long long v56 = xmmword_1EBFE55F0;
  sub_1E3CAE6AC((uint64_t)&v54, (uint64_t)v57);
  long long v58 = v55;
  uint64_t v16 = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE8);
  uint64_t v17 = *(void *)(sub_1E3E7BC20() - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v43;
  uint64_t v20 = v19 + v18;
  sub_1E3CB0ABC((uint64_t)v57);
  sub_1E3CB0AE8((uint64_t)&v58);
  sub_1E3CB0AE8((uint64_t)&v58 + 8);
  sub_1E3C19A6C(v16);
  uint64_t v21 = sub_1E3E794D0();
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v9, v48, v11, v47, v21, v22, v13, v45, v20, 0, (uint64_t)v4, MEMORY[0x1E4FBC868], &v54);
  swift_bridgeObjectRelease();
  sub_1E3E7C040();
  sub_1E3E7BD20();
  sub_1E3CAE714((uint64_t)v57);
  sub_1E3CAE740((uint64_t)&v58);
  sub_1E3CAE740((uint64_t)&v58 + 8);
  sub_1E3C1A3C4(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3C13F0C((uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26CB8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1E3E86650;
  uint64_t v24 = v44;
  sub_1E3E7BD10();
  uint64_t v25 = sub_1E3E7BD60();
  uint64_t v26 = MEMORY[0x1E4F711F8];
  *(void *)(v23 + 56) = v25;
  *(void *)(v23 + 64) = v26;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 32));
  sub_1E3E7BD50();
  sub_1E3E7BD10();
  *(void *)(v23 + 96) = type metadata accessor for RequestTipProviderRefreshAction();
  *(void *)(v23 + 104) = sub_1E3C48AF8();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 72));
  (*(void (**)(uint64_t *, char *, uint64_t))(v50 + 32))(boxed_opaque_existential_1, v24, v51);
  v53[3] = sub_1E3E7BDA0();
  v53[4] = MEMORY[0x1E4F71218];
  __swift_allocate_boxed_opaque_existential_1(v53);
  sub_1E3E7BD90();
  uint64_t v28 = sub_1E3E79100();
  uint64_t v30 = v29;
  uint64_t v31 = sub_1E3E79500();
  static ClickLocationElement.bubbleTipButton(targetID:uniqueID:parentUniqueID:position:locationType:name:)(v28, v30, 0, 0, 0, 0, 0, v31, v52, v32, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = v52[0];
  uint64_t v33 = v52[1];
  uint64_t v34 = v52[2];
  uint64_t v35 = v52[3];
  uint64_t v36 = v52[4];
  uint64_t v37 = v52[5];
  uint64_t v38 = v52[6];
  uint64_t v39 = v52[7];
  if (qword_1EBFE57D0 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_1EBFE57B8;
  uint64_t v40 = unk_1EBFE57C0;
  sub_1E3C1B2BC((uint64_t)v53, v8 + 64);
  *(void *)(v8 + 32) = v41;
  *(void *)(v8 + 40) = v40;
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 104) = 2;
  *(void *)(v8 + 112) = v51;
  *(void *)(v8 + 120) = v33;
  *(void *)(v8 + 128) = v34;
  *(void *)(v8 + 136) = v35;
  *(void *)(v8 + 144) = v36;
  *(void *)(v8 + 152) = v37;
  *(void *)(v8 + 160) = v38;
  *(void *)(v8 + 168) = v39;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
  return v8;
}

void sub_1E3E54AF0()
{
  id v0 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  sub_1E3E7CDF0();
  uint64_t v1 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setBool_forKey_, 1, v1);
}

uint64_t StayUpToDateTip.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E3E79530();
  static ImpressionMetrics.bubbleTip(id:uniqueID:name:)(0x6F54705579617453, 0xEC00000065746144, 0, 0, v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1E3E7C150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, 0, 1, v4);
}

uint64_t sub_1E3E54C48()
{
  return 0x6F54705579617473;
}

uint64_t sub_1E3E54C68()
{
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();

  return sub_1E3E77CD0();
}

uint64_t sub_1E3E54CD8()
{
  return sub_1E3E79530();
}

uint64_t sub_1E3E54CFC()
{
  return sub_1E3E79530();
}

uint64_t sub_1E3E54D20()
{
  return StayUpToDateTip.buttons.getter();
}

unint64_t sub_1E3E54D38(uint64_t a1)
{
  unint64_t result = sub_1E3E54D60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1E3E54D60()
{
  unint64_t result = qword_1EAE29D70;
  if (!qword_1EAE29D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29D70);
  }
  return result;
}

uint64_t sub_1E3E54DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E3E79530();
  static ImpressionMetrics.bubbleTip(id:uniqueID:name:)(0x6F54705579617453, 0xEC00000065746144, 0, 0, v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1E3E7C150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, 0, 1, v4);
}

ValueMetadata *type metadata accessor for StayUpToDateTip()
{
  return &type metadata for StayUpToDateTip;
}

unint64_t static AddFavoriteCategoriesButtonTip.kind.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t AddFavoriteCategoriesButtonTip.icon.getter()
{
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();

  return sub_1E3E77CD0();
}

uint64_t AddFavoriteCategoriesButtonTip.title.getter()
{
  return sub_1E3E79530();
}

uint64_t AddFavoriteCategoriesButtonTip.message.getter()
{
  return sub_1E3E79530();
}

uint64_t AddFavoriteCategoriesButtonTip.buttons.getter()
{
  uint64_t v0 = sub_1E3E7C050();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v46 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1E3E7BD30();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  int v44 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v49 = (char *)&v43 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26CA8);
  uint64_t v8 = swift_allocObject();
  long long v43 = xmmword_1E3E86660;
  *(_OWORD *)(v8 + 16) = xmmword_1E3E86660;
  uint64_t v9 = sub_1E3E79100();
  uint64_t v48 = v10;
  uint64_t v11 = sub_1E3E79500();
  uint64_t v47 = v12;
  uint64_t v13 = sub_1E3E79A00();
  uint64_t v45 = v14;
  uint64_t v15 = sub_1E3E77D00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  if (qword_1EBFE5608 != -1) {
    swift_once();
  }
  long long v54 = xmmword_1EBFE55D0;
  long long v55 = *(_OWORD *)&qword_1EBFE55E0;
  long long v56 = xmmword_1EBFE55F0;
  sub_1E3CAE6AC((uint64_t)&v54, (uint64_t)v57);
  long long v58 = v55;
  uint64_t v16 = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BE8);
  uint64_t v17 = *(void *)(sub_1E3E7BC20() - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v43;
  uint64_t v20 = v19 + v18;
  sub_1E3CB0ABC((uint64_t)v57);
  sub_1E3CB0AE8((uint64_t)&v58);
  sub_1E3CB0AE8((uint64_t)&v58 + 8);
  sub_1E3C19A6C(v16);
  uint64_t v21 = sub_1E3E794D0();
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v9, v48, v11, v47, v21, v22, v13, v45, v20, 0, (uint64_t)v4, MEMORY[0x1E4FBC868], &v54);
  swift_bridgeObjectRelease();
  sub_1E3E7C040();
  sub_1E3E7BD20();
  sub_1E3CAE714((uint64_t)v57);
  sub_1E3CAE740((uint64_t)&v58);
  sub_1E3CAE740((uint64_t)&v58 + 8);
  sub_1E3C1A3C4(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E3C13F0C((uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE26CB8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1E3E86650;
  uint64_t v24 = v44;
  sub_1E3E7BD10();
  uint64_t v25 = sub_1E3E7BD60();
  uint64_t v26 = MEMORY[0x1E4F711F8];
  *(void *)(v23 + 56) = v25;
  *(void *)(v23 + 64) = v26;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 32));
  sub_1E3E7BD50();
  sub_1E3E7BD10();
  *(void *)(v23 + 96) = type metadata accessor for RequestTipProviderRefreshAction();
  *(void *)(v23 + 104) = sub_1E3C48AF8();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 72));
  (*(void (**)(uint64_t *, char *, uint64_t))(v50 + 32))(boxed_opaque_existential_1, v24, v51);
  v53[3] = sub_1E3E7BDA0();
  v53[4] = MEMORY[0x1E4F71218];
  __swift_allocate_boxed_opaque_existential_1(v53);
  sub_1E3E7BD90();
  uint64_t v28 = sub_1E3E79100();
  uint64_t v30 = v29;
  uint64_t v31 = sub_1E3E79500();
  static ClickLocationElement.bubbleTipButton(targetID:uniqueID:parentUniqueID:position:locationType:name:)(v28, v30, 0, 0, 0, 0, 0, v31, v52, v32, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = v52[0];
  uint64_t v33 = v52[1];
  uint64_t v34 = v52[2];
  uint64_t v35 = v52[3];
  uint64_t v36 = v52[4];
  uint64_t v37 = v52[5];
  uint64_t v38 = v52[6];
  uint64_t v39 = v52[7];
  if (qword_1EBFE57D0 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_1EBFE57B8;
  uint64_t v40 = unk_1EBFE57C0;
  sub_1E3C1B2BC((uint64_t)v53, v8 + 64);
  *(void *)(v8 + 32) = v41;
  *(void *)(v8 + 40) = v40;
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 104) = 2;
  *(void *)(v8 + 112) = v51;
  *(void *)(v8 + 120) = v33;
  *(void *)(v8 + 128) = v34;
  *(void *)(v8 + 136) = v35;
  *(void *)(v8 + 144) = v36;
  *(void *)(v8 + 152) = v37;
  *(void *)(v8 + 160) = v38;
  *(void *)(v8 + 168) = v39;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
  return v8;
}

void sub_1E3E5557C()
{
  id v0 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  sub_1E3E7CE10();
  uint64_t v1 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setBool_forKey_, 1, v1);
}

uint64_t AddFavoriteCategoriesButtonTip.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E3E79530();
  static ImpressionMetrics.bubbleTip(id:uniqueID:name:)(0xD000000000000015, 0x80000001E3E9E900, 0, 0, v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1E3E7C150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, 0, 1, v4);
}

unint64_t sub_1E3E556DC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1E3E556F8()
{
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();

  return sub_1E3E77CD0();
}

uint64_t sub_1E3E55768()
{
  return sub_1E3E79530();
}

uint64_t sub_1E3E5578C()
{
  return sub_1E3E79530();
}

uint64_t sub_1E3E557B0()
{
  return AddFavoriteCategoriesButtonTip.buttons.getter();
}

unint64_t sub_1E3E557C8(uint64_t a1)
{
  unint64_t result = sub_1E3E557F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1E3E557F0()
{
  unint64_t result = qword_1EBFE5640;
  if (!qword_1EBFE5640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE5640);
  }
  return result;
}

uint64_t sub_1E3E55844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E3E79530();
  static ImpressionMetrics.bubbleTip(id:uniqueID:name:)(0xD000000000000015, 0x80000001E3E9E900, 0, 0, v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1E3E7C150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, 0, 1, v4);
}

ValueMetadata *type metadata accessor for AddFavoriteCategoriesButtonTip()
{
  return &type metadata for AddFavoriteCategoriesButtonTip;
}

uint64_t sub_1E3E5592C()
{
  uint64_t v0 = sub_1E3E7A880();
  __swift_allocate_value_buffer(v0, qword_1EBFE1BB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBFE1BB0);
  sub_1E3C0D28C();
  sub_1E3E7DB70();
  return sub_1E3E7A870();
}

uint64_t sub_1E3E559A4(uint64_t a1, char a2)
{
  if (a2) {
    return 0x4568636E75616C2ELL;
  }
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();
  sub_1E3E7E0E0();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  return 0xD000000000000014;
}

uint64_t sub_1E3E55A70(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 1)
  {
    if (v3) {
      return 0;
    }
    return v2 & (v3 ^ 1u);
  }
  if (v3) {
    return v2 & (v3 ^ 1u);
  }
  return *(void *)a1 < *(void *)a2;
}

uint64_t sub_1E3E55AB0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (v3 == 1)
  {
    if (v2) {
      return 1;
    }
    return v3 & (v2 ^ 1) ^ 1u;
  }
  if (v2) {
    return v3 & (v2 ^ 1) ^ 1u;
  }
  return *(void *)a2 >= *(void *)a1;
}

uint64_t sub_1E3E55AF8(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (v2 == 1)
  {
    if (v3) {
      return 1;
    }
    return v2 & (v3 ^ 1) ^ 1u;
  }
  if (v3) {
    return v2 & (v3 ^ 1) ^ 1u;
  }
  return *(void *)a1 >= *(void *)a2;
}

uint64_t sub_1E3E55B40(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (v3 == 1)
  {
    if (v2) {
      return 0;
    }
    return v3 & (v2 ^ 1u);
  }
  if (v2) {
    return v3 & (v2 ^ 1u);
  }
  return *(void *)a2 < *(void *)a1;
}

uint64_t sub_1E3E55B80()
{
  return sub_1E3E559A4(*(void *)v0, *(unsigned char *)(v0 + 8));
}

BOOL sub_1E3E55B8C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8) == 1) {
    return (*(unsigned char *)(a2 + 8) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 8)) {
    return 0;
  }
  return *(void *)a1 == *(void *)a2;
}

uint64_t ExtendedLaunchController.LoadingHandle.finishedLoading.getter()
{
  uint64_t v1 = *v0;
  sub_1E3E775E0();
  return v1;
}

id sub_1E3E55BF8()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExtendedLaunchController()), sel_init);
  qword_1EBFE1BD8 = (uint64_t)result;
  return result;
}

id ExtendedLaunchController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id static ExtendedLaunchController.shared.getter()
{
  if (qword_1EBFE1BE8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBFE1BD8;

  return v0;
}

uint64_t sub_1E3E55CB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (**a3)(void *a1)@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC10PodcastsUI24ExtendedLaunchController_lock);
  uint64_t v23 = ObjectType;
  uint64_t v9 = (uint64_t)&v8[4];
  uint64_t v10 = v8 + 7;
  os_unfair_lock_lock(v8 + 7);
  sub_1E3E56180(v9, (uint64_t)&v24);
  os_unfair_lock_unlock(v10);
  uint64_t v11 = v24;
  char v12 = v25;
  if (qword_1EBFE1BD0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1E3E7A880();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBFE1BB0);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_1E3E7A860();
  os_log_type_t v15 = sub_1E3E7D500();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = sub_1E3E559A4(v11, v12);
    sub_1E3C150B8(v17, v18, &v24);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1E3C150B8(a1, a2, &v24);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1E3BC5000, v14, v15, "Loading handle will be %s for %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v22, -1, -1);
    MEMORY[0x1E4E79510](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = v19;
  *(void *)(v20 + 40) = v11;
  *(unsigned char *)(v20 + 48) = v12;
  *(void *)(v20 + 56) = v23;
  *a3 = sub_1E3E5652C;
  a3[1] = (void (*)(void *))v20;
  return swift_bridgeObjectRetain();
}

void sub_1E3E55F80(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (qword_1EBFE1BD0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1E3E7A880();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBFE1BB0);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1E3E7A860();
    os_log_type_t v10 = sub_1E3E7D500();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v14 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_1E3C150B8(a2, a3, &v14);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1E3BC5000, v9, v10, "%s requested a loading handle after launch ended.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v12, -1, -1);
      MEMORY[0x1E4E79510](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_9;
  }
  if (*(void *)a1 != -1)
  {
    ++*(void *)a1;
    *(unsigned char *)(a1 + 8) = 0;
LABEL_9:
    char v13 = *(unsigned char *)(a1 + 8);
    *(void *)a4 = *(void *)a1;
    *(unsigned char *)(a4 + 8) = v13;
    return;
  }
  __break(1u);
}

void sub_1E3E56180(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1E3E55F80(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1E3E561A0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1E3E561D8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  v26[3] = *MEMORY[0x1E4F143B8];
  uint64_t v11 = a4 + 16;
  if (qword_1EBFE1BD0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1E3E7A880();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBFE1BB0);
  swift_bridgeObjectRetain();
  id v13 = a1;
  swift_bridgeObjectRetain();
  id v14 = a1;
  os_log_type_t v15 = sub_1E3E7A860();
  os_log_type_t v16 = sub_1E3E7D500();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v24 = v11;
    char v25 = a6;
    uint64_t v17 = swift_slowAlloc();
    unint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v26[0] = v19;
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain();
    sub_1E3C150B8(a2, (unint64_t)a3, v26);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2112;
    if (a1)
    {
      id v20 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_1E3E7DBD0();
    }
    else
    {
      sub_1E3E7DBD0();
      uint64_t v21 = 0;
    }
    void *v18 = v21;

    _os_log_impl(&dword_1E3BC5000, v15, v16, "Ending loading for %s with %@", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v19, -1, -1);
    MEMORY[0x1E4E79510](v17, -1, -1);

    a6 = v25;
    uint64_t v11 = v24;
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v22 = MEMORY[0x1E4E79630](v11);
  if (v22)
  {
    uint64_t v23 = (void *)v22;
    sub_1E3E56540(a5, a6 & 1, a2, a3, a1);
  }
}

uint64_t sub_1E3E564EC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1E3E5652C(void *a1)
{
  sub_1E3E561D8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

void sub_1E3E56540(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC10PodcastsUI24ExtendedLaunchController_lock);
  uint64_t v10 = (uint64_t)&v9[4];
  uint64_t v11 = v9 + 7;
  os_unfair_lock_lock(v9 + 7);
  sub_1E3E5700C(v10, v35);
  os_unfair_lock_unlock(v11);
  if (LOBYTE(v35[0]) == 1)
  {
    id v12 = objc_msgSend(self, sel_sharedApplication);
    if (a5)
    {
      id v13 = a5;
      if (qword_1EBFE1BD0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1E3E7A880();
      __swift_project_value_buffer(v14, (uint64_t)qword_1EBFE1BB0);
      id v15 = a5;
      swift_bridgeObjectRetain();
      id v16 = a5;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1E3E7A860();
      os_log_type_t v18 = sub_1E3E7D500();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        v35[0] = v20;
        *(_DWORD *)uint64_t v19 = 136446466;
        swift_bridgeObjectRetain();
        sub_1E3C150B8(a3, (unint64_t)a4, v35);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 12) = 2082;
        swift_getErrorValue();
        uint64_t v21 = sub_1E3E7E210();
        sub_1E3C150B8(v21, v22, v35);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1E3BC5000, v17, v18, "%{public}s failed launch test with error: %{public}s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E4E79510](v20, -1, -1);
        MEMORY[0x1E4E79510](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      swift_getErrorValue();
      sub_1E3E7E210();
      id v32 = objc_msgSend(v12, sel__launchTestName);
      uint64_t v33 = (void *)sub_1E3E7CCF0();
      objc_msgSend(v12, sel_failedTest_withFailure_, v32, v33);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EBFE1BD0 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1E3E7A880();
      __swift_project_value_buffer(v27, (uint64_t)qword_1EBFE1BB0);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = sub_1E3E7A860();
      os_log_type_t v29 = sub_1E3E7D500();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        v35[0] = v31;
        *(_DWORD *)uint64_t v30 = 136446210;
        swift_bridgeObjectRetain();
        sub_1E3C150B8(a3, (unint64_t)a4, v35);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1E3BC5000, v28, v29, "%{public}s completed the launch test.", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E4E79510](v31, -1, -1);
        MEMORY[0x1E4E79510](v30, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v34._uint64_t countAndFlagsBits = a3;
      v34._object = a4;
      UIApplication.completeExtendedLaunchTest(tabName:)(v34);
    }
    sub_1E3E7A310();
    uint64_t v24 = sub_1E3E7A300();
    sub_1E3E7A2F0();
  }
  else
  {
    if (qword_1EBFE1BD0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1E3E7A880();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EBFE1BB0);
    uint64_t v24 = sub_1E3E7A860();
    os_log_type_t v25 = sub_1E3E7D500();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1E3BC5000, v24, v25, "Something else was responsible for ending extended launch. Skipping calling instrumentation methods.", v26, 2u);
      MEMORY[0x1E4E79510](v26, -1, -1);
    }
  }
}

id ExtendedLaunchController.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC10PodcastsUI24ExtendedLaunchController_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2878);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 28) = 0;
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)&v0[v1] = v2;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ExtendedLaunchController();
  return objc_msgSendSuper2(&v4, sel_init);
}

id ExtendedLaunchController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExtendedLaunchController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ExtendedLaunchStatus.error.getter()
{
  unsigned int v1 = *v0;
  type metadata accessor for ExtendedLaunchStatus.ExtendedLaunchError();
  uint64_t result = swift_allocObject();
  if (v1 > 1)
  {
    *(unsigned char *)(result + 16) = v1;
  }
  else
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  return result;
}

unint64_t sub_1E3E56C38()
{
  unint64_t result = 0xD000000000000026;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      goto LABEL_5;
    case 2:
      return 0xD000000000000023;
    case 3:
      return result;
    case 4:
      return 0xD000000000000044;
    default:
      __break(1u);
LABEL_5:
      __break(1u);
      JUMPOUT(0x1E3E56CB4);
  }
}

uint64_t ExtendedLaunchStatus.ExtendedLaunchError.deinit()
{
  return v0;
}

uint64_t ExtendedLaunchStatus.ExtendedLaunchError.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL static ExtendedLaunchStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ExtendedLaunchStatus.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t ExtendedLaunchStatus.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t type metadata accessor for ExtendedLaunchController()
{
  return self;
}

uint64_t type metadata accessor for ExtendedLaunchStatus.ExtendedLaunchError()
{
  return self;
}

unint64_t sub_1E3E56DB4()
{
  unint64_t result = qword_1EAE29D80;
  if (!qword_1EAE29D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29D80);
  }
  return result;
}

uint64_t method lookup function for ExtendedLaunchController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExtendedLaunchController);
}

uint64_t dispatch thunk of ExtendedLaunchController.getLoadingHandle(name:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

ValueMetadata *type metadata accessor for ExtendedLaunchController.LoadingHandle()
{
  return &type metadata for ExtendedLaunchController.LoadingHandle;
}

unsigned char *storeEnumTagSinglePayload for ExtendedLaunchStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E56F30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedLaunchStatus()
{
  return &type metadata for ExtendedLaunchStatus;
}

uint64_t method lookup function for ExtendedLaunchStatus.ExtendedLaunchError(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExtendedLaunchStatus.ExtendedLaunchError);
}

uint64_t dispatch thunk of ExtendedLaunchStatus.ExtendedLaunchError.localizedDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

ValueMetadata *type metadata accessor for ExtendedLaunchController.HandleId()
{
  return &type metadata for ExtendedLaunchController.HandleId;
}

unint64_t sub_1E3E56FB8()
{
  unint64_t result = qword_1EAE29D88;
  if (!qword_1EAE29D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29D88);
  }
  return result;
}

uint64_t sub_1E3E5700C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (*(unsigned char *)(result + 8))
  {
    *a2 = 0;
  }
  else
  {
    if (*(void *)result == *(void *)(v2 + 16)) {
      char v3 = *(unsigned char *)(v2 + 24);
    }
    else {
      char v3 = 1;
    }
    if (v3)
    {
      *a2 = 0;
    }
    else
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 1;
      *a2 = 1;
    }
  }
  return result;
}

uint64_t EpisodeLimitSuggestion.init(retentionPolicy:condition:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

uint64_t EpisodeLimitSuggestion.retentionPolicy.getter()
{
  return *(void *)v0;
}

uint64_t EpisodeLimitSuggestion.condition.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t EpisodeLimitSuggestion.DisplayCondition.rawValue.getter(char a1)
{
  uint64_t result = 0x726576656ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x737961776C61;
      break;
    case 2:
      uint64_t result = 0x65726F74736572;
      break;
    case 3:
      uint64_t result = 0x65646172677075;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E3E570FC(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x726576656ELL;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x726576656ELL;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x737961776C61;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x726F74736572;
      goto LABEL_5;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x646172677075;
LABEL_5:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x65000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x737961776C61) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v2 = 0x65726F74736572;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      if (v5 == 0x65646172677075) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v4 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1E3E5727C()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E5734C()
{
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3E57404()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E574D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s10PodcastsUI22EpisodeLimitSuggestionV16DisplayConditionO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1E3E57500(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x726576656ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x737961776C61;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x726F74736572;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 0x646172677075;
LABEL_6:
      *a1 = v4 & 0xFFFFFFFFFFFFLL | 0x65000000000000;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1E3E5758C()
{
  return sub_1E3E7D030();
}

uint64_t sub_1E3E575EC()
{
  return sub_1E3E7CFF0();
}

uint64_t sub_1E3E5763C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E3C23CFC(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1E3E57668()
{
  if (*v0) {
    return 0x6F697469646E6F63;
  }
  else {
    return 0x6F69746E65746572;
  }
}

uint64_t sub_1E3E576B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E3E58368(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1E3E576DC(uint64_t a1)
{
  unint64_t v2 = sub_1E3E57E7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1E3E57718(uint64_t a1)
{
  unint64_t v2 = sub_1E3E57E7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EpisodeLimitSuggestion.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29D90);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  int v11 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E57E7C();
  sub_1E3E7E300();
  uint64_t v15 = v8;
  char v14 = 0;
  type metadata accessor for MTPodcastEpisodeLimit(0);
  sub_1E3E57F24(&qword_1EBFE4B08);
  sub_1E3E7E0B0();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_1E3E57ED0();
    sub_1E3E7E0B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t EpisodeLimitSuggestion.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4BA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1E3E57E7C();
  sub_1E3E7E2E0();
  if (!v2)
  {
    type metadata accessor for MTPodcastEpisodeLimit(0);
    v12[15] = 0;
    sub_1E3E57F24(&qword_1EBFE4B10);
    sub_1E3E7E080();
    uint64_t v9 = v13;
    v12[13] = 1;
    sub_1E3C25C18();
    sub_1E3E7E080();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v12[14];
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1E3E57B0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EpisodeLimitSuggestion.init(from:)(a1, a2);
}

uint64_t sub_1E3E57B24(void *a1)
{
  return EpisodeLimitSuggestion.encode(to:)(a1);
}

void sub_1E3E57B3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t EpisodeLimitSuggestion.description.getter()
{
  return 0;
}

uint64_t EpisodeLimitSuggestion.debugDescription.getter()
{
  return 0;
}

uint64_t _s10PodcastsUI22EpisodeLimitSuggestionV16DisplayConditionO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_1E3E7E050();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1E3E57E7C()
{
  unint64_t result = qword_1EBFE3860;
  if (!qword_1EBFE3860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3860);
  }
  return result;
}

unint64_t sub_1E3E57ED0()
{
  unint64_t result = qword_1EAE29D98;
  if (!qword_1EAE29D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29D98);
  }
  return result;
}

uint64_t sub_1E3E57F24(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MTPodcastEpisodeLimit(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E3E57F6C()
{
  unint64_t result = qword_1EAE29DA0;
  if (!qword_1EAE29DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29DA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeLimitSuggestion(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeLimitSuggestion(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeLimitSuggestion()
{
  return &type metadata for EpisodeLimitSuggestion;
}

unsigned char *storeEnumTagSinglePayload for EpisodeLimitSuggestion.DisplayCondition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E58124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeLimitSuggestion.DisplayCondition()
{
  return &type metadata for EpisodeLimitSuggestion.DisplayCondition;
}

unsigned char *storeEnumTagSinglePayload for EpisodeLimitSuggestion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E58228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeLimitSuggestion.CodingKeys()
{
  return &type metadata for EpisodeLimitSuggestion.CodingKeys;
}

unint64_t sub_1E3E58264()
{
  unint64_t result = qword_1EAE29DA8;
  if (!qword_1EAE29DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29DA8);
  }
  return result;
}

unint64_t sub_1E3E582BC()
{
  unint64_t result = qword_1EBFE3870;
  if (!qword_1EBFE3870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3870);
  }
  return result;
}

unint64_t sub_1E3E58314()
{
  unint64_t result = qword_1EBFE3868;
  if (!qword_1EBFE3868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3868);
  }
  return result;
}

uint64_t sub_1E3E58368(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F69746E65746572 && a2 == 0xEF7963696C6F506ELL;
  if (v2 || (sub_1E3E7E150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F697469646E6F63 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1E3E5848C()
{
  unint64_t result = qword_1EBFE3878;
  if (!qword_1EBFE3878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE3878);
  }
  return result;
}

BOOL static EngagementThresholdStatus.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t EngagementThresholdStatus.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t EngagementThresholdStatus.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

unint64_t sub_1E3E58564()
{
  unint64_t result = qword_1EAE29DB0;
  if (!qword_1EAE29DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29DB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EngagementThresholdStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E58684);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementThresholdStatus()
{
  return &type metadata for EngagementThresholdStatus;
}

id MPModelPodcastEpisode.chapter(for:)(double a1)
{
  id result = objc_msgSend(v1, sel_chapters);
  if (result)
  {
    unsigned int v4 = result;
    sub_1E3C1C554();
    unint64_t v5 = sub_1E3E7D060();

    uint64_t v6 = sub_1E3C1CA34(v5, a1);
    swift_bridgeObjectRelease();
    return (id)v6;
  }
  return result;
}

uint64_t MPModelPodcastEpisode.nextChapter(for:)(double a1)
{
  id v3 = objc_msgSend(v1, sel_chapters);
  if (!v3) {
    return 0;
  }
  unsigned int v4 = v3;
  sub_1E3C1C554();
  unint64_t v5 = sub_1E3E7D060();

  unint64_t v6 = sub_1E3C1C594(v5, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1E3E7DFC0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x1E4E77720](0, v6);
    goto LABEL_7;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(v6 + 32);
LABEL_7:
    uint64_t v8 = (uint64_t)v9;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t MPModelPodcastEpisode.previousChapter(for:)(double a1)
{
  id v3 = objc_msgSend(v1, sel_chapters);
  if (!v3) {
    return 0;
  }
  unsigned int v4 = v3;
  sub_1E3C1C554();
  unint64_t v5 = sub_1E3E7D060();

  unint64_t v6 = sub_1E3C1C740(v5, a1);
  swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E3E7DFC0();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  unint64_t result = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_16:
    id v9 = (id)MEMORY[0x1E4E77720](result, v6);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(v6 + 8 * result + 32);
LABEL_9:
    uint64_t v7 = (uint64_t)v9;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void RemoveAbandonedDownloadsTipProvider.tips.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5A10);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 32))
  {
    v5[1] = *(void *)(v0 + 32);
    sub_1E3E775E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D00);
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BC0, &qword_1EBFE5BD0);
    sub_1E3E7ABF0();
    swift_release();
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A00, &qword_1EBFE5A10);
    sub_1E3E7AB70();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E3E58B0C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 40) = v3;
  unint64_t v5 = sub_1E3C81150(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57A0);
  uint64_t result = swift_arrayDestroy();
  *a2 = v5;
  return result;
}

uint64_t RemoveAbandonedDownloadsTipProvider.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  RemoveAbandonedDownloadsTipProvider.init(asPartOf:)(a1);
  return v2;
}

void *RemoveAbandonedDownloadsTipProvider.init(asPartOf:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE46A0);
  uint64_t v38 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5AB8);
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  char v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5C90);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  uint64_t v41 = v12;
  MEMORY[0x1F4188790](v11);
  Swift::String v34 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4EF8);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v35 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4400);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[4] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4728);
  swift_allocObject();
  uint64_t v20 = (void *)sub_1E3E7A9C0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE0720);
  sub_1E3E7BE20();
  id v21 = objc_msgSend(v44, sel_privateQueueContext);
  swift_unknownObjectRelease();
  *(void *)((char *)v2 + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_objectGraph) = a1;
  sub_1E3C12B10(0, &qword_1EBFDF310);
  sub_1E3E775E0();
  sub_1E3E7D8A0();
  sub_1E3CAC398((uint64_t)v19, (uint64_t)v2 + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_coreDataObserver, (uint64_t *)&unk_1EBFE4400);
  v2[5] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4B30);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(void *)(v22 + 16) = 0;
  *(void *)((char *)v2 + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_observerSink) = v22;
  v2[2] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D10);
  swift_allocObject();
  id v33 = v21;
  sub_1E3E775E0();
  v2[3] = sub_1E3E7A9C0();
  id v44 = v20;
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  id v46 = (id)sub_1E3E7D5F0();
  uint64_t v23 = sub_1E3E7D640();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
  sub_1E3C10DE8(&qword_1EBFE4720, &qword_1EBFE4728);
  sub_1E3C32D34();
  sub_1E3E7AD10();
  sub_1E3C10CE0((uint64_t)v6, (uint64_t *)&unk_1EBFE27A0);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D10);
  sub_1E3C10DE8(&qword_1EBFE4698, &qword_1EBFE46A0);
  uint64_t v24 = v36;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v24);
  uint64_t v25 = sub_1E3C10DE8(&qword_1EBFE5AB0, &qword_1EBFE5AB8);
  uint64_t v26 = v34;
  uint64_t v27 = (void *)v37;
  sub_1E3E7AB50();
  (*(void (**)(char *, void *))(v39 + 8))(v10, v27);
  swift_allocObject();
  swift_weakInit();
  sub_1E3E775E0();
  id v44 = v27;
  uint64_t v45 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v40;
  os_log_type_t v29 = v35;
  sub_1E3E7AB90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v28);
  swift_release();
  sub_1E3C10DE8(&qword_1EBFE5928, &qword_1EBFE4EF8);
  uint64_t v30 = v42;
  uint64_t v31 = sub_1E3E7AB70();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v30);
  v2[4] = v31;
  swift_release();
  return v2;
}

uint64_t sub_1E3E59314@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5638);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = xmmword_1E3E86660;
  sub_1E3C34078(a1, (uint64_t)v6, &qword_1EBFE5638);
  uint64_t v7 = type metadata accessor for RemoveAbandonedDownloadsTip();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    sub_1E3C10CE0((uint64_t)v6, &qword_1EBFE5638);
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v20 = 0;
  }
  else
  {
    *((void *)&v19 + 1) = v7;
    uint64_t v20 = sub_1E3E5D954(&qword_1EAE29E78, (void (*)(uint64_t))type metadata accessor for RemoveAbandonedDownloadsTip);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
    sub_1E3E5DC0C((uint64_t)v6, (uint64_t)boxed_opaque_existential_1);
  }
  sub_1E3C34078((uint64_t)&v18, (uint64_t)v16, &qword_1EBFE57B0);
  sub_1E3CAC398((uint64_t)v16, (uint64_t)&v13, &qword_1EBFE57B0);
  if (v14)
  {
    sub_1E3C1B644(&v13, (uint64_t)v15);
    sub_1E3C1B644(v15, (uint64_t)&v13);
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1E3CB7364(0, v9[2] + 1, 1, v9);
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_1E3CB7364((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    v9[2] = v11 + 1;
    sub_1E3C1B644(&v13, (uint64_t)&v9[5 * v11 + 4]);
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v13, &qword_1EBFE57B0);
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE57B0);
  uint64_t result = swift_arrayDestroy();
  *a2 = v9;
  return result;
}

uint64_t sub_1E3E5957C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3E595B4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_observerSink);
    uint64_t v2 = v1 + 4;
    uint64_t v3 = v1 + 6;
    os_unfair_lock_lock(v1 + 6);
    sub_1E3E5C190(v2);
    os_unfair_lock_unlock(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3E59640()
{
  return sub_1E3E595B4();
}

Swift::Void __swiftcall RemoveAbandonedDownloadsTipProvider.requestRefresh()()
{
}

uint64_t sub_1E3E596B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE47A0);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E3E7A880();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4400);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E7A010();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3C34078(v1 + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_coreDataObserver, (uint64_t)v10, (uint64_t *)&unk_1EBFE4400);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v15 = v25;
    uint64_t v16 = v26;
    uint64_t v24 = v2;
    sub_1E3C10CE0((uint64_t)v10, (uint64_t *)&unk_1EBFE4400);
    sub_1E3E7A840();
    long long v17 = sub_1E3E7A860();
    os_log_type_t v18 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v17, v18))
    {
      long long v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v19 = 0;
      _os_log_impl(&dword_1E3BC5000, v17, v18, "Unable to attach to core data observer, entity may be invalid. Only updating tip based on defaults data", v19, 2u);
      MEMORY[0x1E4E79510](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E38);
    uint64_t v20 = v4;
    sub_1E3E7AA40();
    uint64_t v21 = sub_1E3E5A840((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v24);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    uint64_t v21 = sub_1E3E59A40((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v21;
}

uint64_t sub_1E3E59A40(uint64_t a1)
{
  uint64_t v78 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v2 - 8);
  char v88 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5B10);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v89 = v4;
  uint64_t v90 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v86 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5B78);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v91 = v7;
  uint64_t v92 = v8;
  MEMORY[0x1F4188790](v7);
  id v87 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1E3E7D680();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4670);
  uint64_t v74 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v65 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE44C0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v75 = v13;
  uint64_t v76 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v67 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE2EA0);
  uint64_t v79 = *(void (***)(char *, uint64_t))(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v68 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5AD8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v81 = v17;
  uint64_t v82 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v73 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5AF0);
  uint64_t v85 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  int64_t v80 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5A28);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5910);
  uint64_t v84 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1E3E7D560();
  uint64_t v28 = *(void *)(v27 - 8);
  double v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v61 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_objectGraph);
  (*(void (**)(char *, void, uint64_t, double))(v28 + 104))(v31, *MEMORY[0x1E4F91E48], v27, v29);
  uint64_t v63 = sub_1E3C6EAEC((uint64_t)v31);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
  sub_1E3E7CD30();
  id v32 = (void *)sub_1E3E7D530();
  swift_bridgeObjectRelease();
  id v95 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE23A8);
  uint64_t v64 = MEMORY[0x1E4F1AAE8];
  sub_1E3C10DE8(&qword_1EBFE23A0, &qword_1EBFE23A8);
  sub_1E3E7ABF0();
  swift_release();
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A18, (uint64_t *)&unk_1EBFE5A28);
  uint64_t v62 = v26;
  sub_1E3E7AD00();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  sub_1E3E7D650();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  id v33 = (void *)sub_1E3E7D5F0();
  id v95 = v33;
  sub_1E3E7A010();
  sub_1E3E5D954((unint64_t *)&qword_1EBFE43F0, MEMORY[0x1E4F91C70]);
  unint64_t v66 = sub_1E3C32D34();
  Swift::String v34 = v65;
  sub_1E3E7AD30();

  (*(void (**)(char *, uint64_t))(v69 + 8))(v11, v70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4C10);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1E3E86660;
  *(void *)(v35 + 32) = MEMORY[0x1E4FBC860];
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE4660, &qword_1EBFE4670);
  uint64_t v36 = v67;
  uint64_t v37 = v72;
  sub_1E3E7AD00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v34, v37);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE44B0, &qword_1EBFE44C0);
  uint64_t v38 = v68;
  uint64_t v39 = v75;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v36, v39);
  uint64_t v40 = v93;
  id v95 = *(id *)(v93 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D10);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE2E90, (uint64_t *)&unk_1EBFE2EA0);
  sub_1E3C10DE8(&qword_1EBFE5908, &qword_1EBFE5910);
  sub_1E3C10DE8(&qword_1EBFE2ED0, &qword_1EBFE2D10);
  uint64_t v41 = v73;
  uint64_t v42 = v77;
  sub_1E3E7AC80();
  v79[1](v38, v42);
  uint64_t v43 = *(void **)(v40 + 40);
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = (void *)v63;
  *(void *)(v44 + 16) = v63;
  *(void *)(v44 + 24) = v43;
  id v46 = v43;
  uint64_t v79 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BE8);
  sub_1E3C10DE8(&qword_1EBFE5AD0, (uint64_t *)&unk_1EBFE5AD8);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BD8, &qword_1EBFE5BE8);
  uint64_t v48 = v80;
  uint64_t v47 = v81;
  sub_1E3E7ADA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v47);
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v71;
  *(void *)(v49 + 16) = v46;
  *(void *)(v49 + 24) = v50;
  id v51 = v46;
  sub_1E3E775E0();
  sub_1E3E7A940();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE44F0);
  sub_1E3C10DE8(&qword_1EBFE5AE8, &qword_1EBFE5AF0);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE44E0, (uint64_t *)&unk_1EBFE44F0);
  unint64_t v52 = v86;
  uint64_t v53 = v83;
  sub_1E3E7ADA0();
  swift_release();
  id v95 = (id)sub_1E3E7D5F0();
  uint64_t v54 = sub_1E3E7D640();
  uint64_t v55 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v88, 1, 1, v54);
  sub_1E3C10DE8(&qword_1EBFE5B08, &qword_1EBFE5B10);
  long long v56 = v87;
  uint64_t v57 = v89;
  sub_1E3E7AD10();
  sub_1E3C10CE0(v55, (uint64_t *)&unk_1EBFE27A0);

  (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v57);
  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8(&qword_1EBFE5B70, (uint64_t *)&unk_1EBFE5B78);
  uint64_t v58 = v91;
  uint64_t v59 = sub_1E3E7AD60();

  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v56, v58);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v48, v53);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v62, v94);
  return v59;
}

uint64_t sub_1E3E5A840(uint64_t a1)
{
  uint64_t v78 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE27A0);
  MEMORY[0x1F4188790](v2 - 8);
  char v88 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29E08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v89 = v4;
  uint64_t v90 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v86 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAE29E10);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v91 = v7;
  uint64_t v92 = v8;
  MEMORY[0x1F4188790](v7);
  id v87 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1E3E7D680();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E78);
  uint64_t v74 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v65 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E80);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v75 = v13;
  uint64_t v76 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v67 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27E88);
  uint64_t v79 = *(void (***)(char *, uint64_t))(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v68 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29E20);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v81 = v17;
  uint64_t v82 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v73 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29E28);
  uint64_t v85 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  int64_t v80 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5A28);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5910);
  uint64_t v84 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1E3E7D560();
  uint64_t v28 = *(void *)(v27 - 8);
  double v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v61 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = *(void *)(v1 + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_objectGraph);
  (*(void (**)(char *, void, uint64_t, double))(v28 + 104))(v31, *MEMORY[0x1E4F91E48], v27, v29);
  uint64_t v63 = sub_1E3C6EAEC((uint64_t)v31);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
  sub_1E3E7CD30();
  id v32 = (void *)sub_1E3E7D530();
  swift_bridgeObjectRelease();
  id v95 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE23A8);
  uint64_t v64 = MEMORY[0x1E4F1AAE8];
  sub_1E3C10DE8(&qword_1EBFE23A0, &qword_1EBFE23A8);
  sub_1E3E7ABF0();
  swift_release();
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A18, (uint64_t *)&unk_1EBFE5A28);
  uint64_t v62 = v26;
  sub_1E3E7AD00();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  sub_1E3E7D650();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  id v33 = (void *)sub_1E3E7D5F0();
  id v95 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE47A0);
  sub_1E3C10DE8((unint64_t *)&unk_1EAE29E30, &qword_1EBFE47A0);
  unint64_t v66 = sub_1E3C32D34();
  Swift::String v34 = v65;
  sub_1E3E7AD30();

  (*(void (**)(char *, uint64_t))(v69 + 8))(v11, v70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4C10);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1E3E86660;
  *(void *)(v35 + 32) = MEMORY[0x1E4FBC860];
  sub_1E3C10DE8((unint64_t *)&unk_1EAE27EB0, &qword_1EAE27E78);
  uint64_t v36 = v67;
  uint64_t v37 = v72;
  sub_1E3E7AD00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v34, v37);
  sub_1E3C10DE8((unint64_t *)&unk_1EAE29E40, &qword_1EAE27E80);
  uint64_t v38 = v68;
  uint64_t v39 = v75;
  sub_1E3E7ABF0();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v36, v39);
  uint64_t v40 = v93;
  id v95 = *(id *)(v93 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2D10);
  sub_1E3C10DE8(&qword_1EAE27EC0, &qword_1EAE27E88);
  sub_1E3C10DE8(&qword_1EBFE5908, &qword_1EBFE5910);
  sub_1E3C10DE8(&qword_1EBFE2ED0, &qword_1EBFE2D10);
  uint64_t v41 = v73;
  uint64_t v42 = v77;
  sub_1E3E7AC80();
  v79[1](v38, v42);
  uint64_t v43 = *(void **)(v40 + 40);
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = (void *)v63;
  *(void *)(v44 + 16) = v63;
  *(void *)(v44 + 24) = v43;
  id v46 = v43;
  uint64_t v79 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BE8);
  sub_1E3C10DE8(&qword_1EAE29E50, &qword_1EAE29E20);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BD8, &qword_1EBFE5BE8);
  uint64_t v48 = v80;
  uint64_t v47 = v81;
  sub_1E3E7ADA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v47);
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v71;
  *(void *)(v49 + 16) = v46;
  *(void *)(v49 + 24) = v50;
  id v51 = v46;
  sub_1E3E775E0();
  sub_1E3E7A940();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE44F0);
  sub_1E3C10DE8(&qword_1EAE29E58, &qword_1EAE29E28);
  sub_1E3C10DE8((unint64_t *)&unk_1EBFE44E0, (uint64_t *)&unk_1EBFE44F0);
  unint64_t v52 = v86;
  uint64_t v53 = v83;
  sub_1E3E7ADA0();
  swift_release();
  id v95 = (id)sub_1E3E7D5F0();
  uint64_t v54 = sub_1E3E7D640();
  uint64_t v55 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v88, 1, 1, v54);
  sub_1E3C10DE8(&qword_1EAE29E60, &qword_1EAE29E08);
  long long v56 = v87;
  uint64_t v57 = v89;
  sub_1E3E7AD10();
  sub_1E3C10CE0(v55, (uint64_t *)&unk_1EBFE27A0);

  (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v57);
  swift_allocObject();
  swift_weakInit();
  sub_1E3C10DE8((unint64_t *)&unk_1EAE29E68, (uint64_t *)&unk_1EAE29E10);
  uint64_t v58 = v91;
  uint64_t v59 = sub_1E3E7AD60();

  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v56, v58);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v48, v53);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v62, v94);
  return v59;
}

uint64_t sub_1E3E5B638@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5C50);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4508);
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5980);
  uint64_t v23 = *(void *)(v11 - 8);
  uint64_t v24 = v11;
  double v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_episodeLimitForKey_, *MEMORY[0x1E4F92090], v12) == (id)0x100000000
    && (sub_1E3E7CE30(),
        uint64_t v21 = v4,
        uint64_t v15 = (void *)sub_1E3E7CCF0(),
        swift_bridgeObjectRelease(),
        uint64_t v4 = v21,
        unsigned __int8 v16 = objc_msgSend(a1, sel_BOOLForKey_, v15),
        v15,
        (v16 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A30);
    uint64_t v26 = sub_1E3E7D8C0();
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t v25 = MEMORY[0x1E4FBC860];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29DE0);
    sub_1E3C10DE8((unint64_t *)&unk_1EAE29DE8, &qword_1EAE29DE0);
    sub_1E3E7ABA0();
    swift_release();
    uint64_t v26 = v19;
    sub_1E3C10DE8(&qword_1EBFE4500, &qword_1EBFE4508);
    sub_1E3E7ABA0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
    sub_1E3C10DE8((unint64_t *)&unk_1EAE29DF8, &qword_1EBFE5980);
    uint64_t v20 = v24;
    uint64_t v17 = sub_1E3E7AB70();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v20);
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A30);
    sub_1E3E7AA30();
    sub_1E3C10DE8(&qword_1EBFE5C48, &qword_1EBFE5C50);
    uint64_t v17 = sub_1E3E7AB70();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = v17;
  return result;
}

uint64_t sub_1E3E5BA60(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5638);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE5C78);
  uint64_t v13 = sub_1E3E7D1E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v12;
  void v14[3] = a2;
  void v14[4] = sub_1E3E5D9B8;
  v14[5] = a3;
  sub_1E3E775E0();
  swift_bridgeObjectRetain();
  id v15 = a2;
  v18[1] = sub_1E3E7AA50();
  uint64_t v16 = type metadata accessor for RemoveAbandonedDownloadsTip();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  sub_1E3C10DE8(&qword_1EBFE5C70, (uint64_t *)&unk_1EBFE5C78);
  sub_1E3E7ABA0();
  sub_1E3C10CE0((uint64_t)v8, &qword_1EBFE5638);
  return swift_release();
}

uint64_t sub_1E3E5BC9C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1E3E775E0();
    swift_release();
    sub_1E3E7A9B0();
    return swift_release();
  }
  return result;
}

uint64_t RemoveAbandonedDownloadsTipProvider.deinit()
{
  swift_release();
  swift_release();
  swift_release();

  sub_1E3C10CE0(v0 + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_coreDataObserver, (uint64_t *)&unk_1EBFE4400);
  swift_release();
  swift_release();
  return v0;
}

uint64_t RemoveAbandonedDownloadsTipProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();

  sub_1E3C10CE0(v0 + OBJC_IVAR____TtC10PodcastsUI35RemoveAbandonedDownloadsTipProvider_coreDataObserver, (uint64_t *)&unk_1EBFE4400);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1E3E5BE38()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5A10);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)v0 + 32))
  {
    v5[1] = *(void *)(*(void *)v0 + 32);
    sub_1E3E775E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5BD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE5D00);
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5BC0, &qword_1EBFE5BD0);
    sub_1E3E7ABF0();
    swift_release();
    sub_1E3C10DE8((unint64_t *)&unk_1EBFE5A00, &qword_1EBFE5A10);
    sub_1E3E7AB70();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E3E5BFE4()
{
  return sub_1E3E7AAA0();
}

uint64_t sub_1E3E5C054()
{
  return type metadata accessor for RemoveAbandonedDownloadsTipProvider();
}

uint64_t type metadata accessor for RemoveAbandonedDownloadsTipProvider()
{
  uint64_t result = qword_1EBFE3F60;
  if (!qword_1EBFE3F60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3E5C0A8()
{
  sub_1E3D60180();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for RemoveAbandonedDownloadsTipProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoveAbandonedDownloadsTipProvider);
}

uint64_t dispatch thunk of RemoveAbandonedDownloadsTipProvider.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void *sub_1E3E5C190(void *result)
{
  if (!*result)
  {
    uint64_t v1 = result;
    uint64_t result = (void *)sub_1E3E596B4();
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_1E3E5C1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  uint64_t v6 = sub_1E3E7A880();
  v5[12] = v6;
  v5[13] = *(void *)(v6 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  uint64_t v7 = sub_1E3E78A70();
  v5[17] = v7;
  v5[18] = *(void *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1E3E5C344, 0, 0);
}

uint64_t sub_1E3E5C344()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFE4A30);
  sub_1E3C10DE8(&qword_1EBFE4A40, (uint64_t *)&unk_1EBFE4A30);
  if ((sub_1E3E7D3C0() & 1) != 0 && !sub_1E3E5CE9C())
  {
    uint64_t v10 = sub_1E3E799F0();
    uint64_t v11 = dword_1EAE26D68;
    sub_1E3E775E0();
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1E3E5C68C;
    uint64_t v13 = *(void *)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 80);
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v17 = *(void *)(v0 + 72);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EAE26D68 + v11))(v13, v16, v17, v10, v14, v15);
  }
  else
  {
    sub_1E3E7A840();
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1E3E7A860();
    os_log_type_t v2 = sub_1E3E7D4C0();
    BOOL v3 = os_log_type_enabled(v1, v2);
    uint64_t v4 = *(void *)(v0 + 64);
    if (v3)
    {
      uint64_t v5 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 67109376;
      *(_DWORD *)(v0 + 188) = *(void *)(v4 + 16) == 0;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 8) = 1024;
      *(_DWORD *)(v0 + 184) = sub_1E3E5CE9C();
      sub_1E3E7DBD0();
      _os_log_impl(&dword_1E3BC5000, v1, v2, "Skipping showing the abandoned download tips (isEmpty: %{BOOL}d, throttled: %{BOOL}d", (uint8_t *)v5, 0xEu);
      MEMORY[0x1E4E79510](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v6 = *(void *)(v0 + 56);
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
    uint64_t v7 = type metadata accessor for RemoveAbandonedDownloadsTip();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_1E3E5C68C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1E3E5CDD4;
  }
  else {
    os_log_type_t v2 = sub_1E3E5C7CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E5C7CC()
{
  id v51 = v0;
  v50[1] = *MEMORY[0x1E4F143B8];
  if (sub_1E3E78A50())
  {
    uint64_t v2 = v0[19];
    uint64_t v1 = v0[20];
    uint64_t v4 = v0[17];
    uint64_t v3 = v0[18];
    sub_1E3E7A840();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_1E3E7A860();
    os_log_type_t v6 = sub_1E3E7D500();
    if (os_log_type_enabled(v5, v6))
    {
      log = v5;
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v50[0] = v48;
      *(_DWORD *)uint64_t v7 = 138412546;
      uint64_t v9 = sub_1E3E78A50();
      id v10 = objc_msgSend(self, sel_stringWithBytesize_, v9);
      if (v10) {
        v0[3] = v10;
      }
      else {
        v0[6] = 0;
      }
      sub_1E3E7DBD0();
      uint64_t v29 = v0[18];
      uint64_t v28 = v0[19];
      uint64_t v30 = v0[17];
      uint64_t v31 = v0[13];
      uint64_t v44 = v0[12];
      uint64_t v45 = v0[16];
      id v32 = v8;
      void *v8 = v10;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      *(_WORD *)(v7 + 12) = 2080;
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v34 = MEMORY[0x1E4E76990](v33, MEMORY[0x1E4F91DC8]);
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      v0[4] = sub_1E3C150B8(v34, v36, v50);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1E3BC5000, log, v6, "Updating abandoned downloads tip for episodes reclaiming (%@: %s", (uint8_t *)v7, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE63E0);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v32, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v48, -1, -1);
      MEMORY[0x1E4E79510](v7, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v45, v44);
    }
    else
    {
      uint64_t v23 = v0[16];
      uint64_t v24 = v0[12];
      uint64_t v25 = v0[13];
      (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    uint64_t v37 = v0[7];
    uint64_t v38 = v0[8];
    (*(void (**)(uint64_t, void, void))(v0[18] + 32))(v37, v0[20], v0[17]);
    uint64_t v39 = type metadata accessor for RemoveAbandonedDownloadsTip();
    *(void *)(v37 + *(int *)(v39 + 20)) = v38;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v37, 0, 1, v39);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1E3E7A840();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_1E3E7A860();
    os_log_type_t v12 = sub_1E3E7D4E0();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[20];
    uint64_t v16 = v0[17];
    uint64_t v15 = v0[18];
    uint64_t v17 = v0[13];
    os_log_t loga = (os_log_t)v0[12];
    uint64_t v49 = v0[15];
    if (v13)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v50[0] = v42;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v43 = v16;
      uint64_t v20 = MEMORY[0x1E4E76990](v19, MEMORY[0x1E4F91DC8]);
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      v0[5] = sub_1E3C150B8(v20, v22, v50);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1E3BC5000, v11, v12, "Non-zero downloaded episodes has zero downloaded space for episodes: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v42, -1, -1);
      MEMORY[0x1E4E79510](v18, -1, -1);

      (*(void (**)(uint64_t, os_log_t))(v17 + 8))(v49, loga);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v43);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, os_log_t))(v17 + 8))(v49, loga);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    uint64_t v26 = v0[7];
    uint64_t v27 = type metadata accessor for RemoveAbandonedDownloadsTip();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = (uint64_t (*)(void))v0[1];
  return v40();
}

uint64_t sub_1E3E5CDD4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL sub_1E3E5CE9C()
{
  uint64_t v0 = sub_1E3E7A880();
  uint64_t v58 = *(void *)(v0 - 8);
  uint64_t v59 = v0;
  MEMORY[0x1F4188790](v0);
  id v60 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = (void *)sub_1E3E77F80();
  uint64_t v64 = (char *)*(v62 - 1);
  MEMORY[0x1F4188790](v62);
  uint64_t v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v4 - 8);
  os_log_type_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v63 = (uint64_t)&v49 - v8;
  uint64_t v9 = sub_1E3E77E20();
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v56 = (char *)&v49 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v49 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v65 = (char *)&v49 - v17;
  uint64_t v18 = sub_1E3E77F90();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  sub_1E3E77F70();
  uint64_t v23 = *MEMORY[0x1E4F92020];
  if (!objc_msgSend(v22, sel_objectForKey_, *MEMORY[0x1E4F92020]))
  {
    memset(v67, 0, 32);

    sub_1E3C10CE0((uint64_t)v67, &qword_1EBFE6190);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return 0;
  }
  uint64_t v52 = v15;
  uint64_t v54 = v19;
  uint64_t v55 = v18;
  sub_1E3E7DCA0();
  swift_unknownObjectRelease();
  sub_1E3C10CE0((uint64_t)v67, &qword_1EBFE6190);
  objc_msgSend(v22, sel_doubleForKey_, v23);
  sub_1E3E77D70();
  uint64_t v24 = *MEMORY[0x1E4F27C30];
  uint64_t v25 = v64;
  uint64_t v26 = v62;
  id v51 = (void (*)(char *, uint64_t, void *))*((void *)v64 + 13);
  v51(v3, v24, v62);
  uint64_t v27 = (uint64_t)v6;
  uint64_t v28 = v63;
  sub_1E3E77F50();
  uint64_t v29 = v61;
  uint64_t v30 = (void (*)(char *, void *))*((void *)v25 + 1);
  uint64_t v53 = v3;
  uint64_t v64 = v25 + 8;
  uint64_t v50 = v30;
  v30(v3, v26);
  sub_1E3C34078(v28, v27, (uint64_t *)&unk_1EBFDEDF0);
  uint64_t v31 = v29;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v9) == 1)
  {
    uint64_t v62 = v22;
    uint64_t v64 = v21;
    sub_1E3C10CE0(v27, (uint64_t *)&unk_1EBFDEDF0);
    id v32 = v60;
    sub_1E3E7A840();
    uint64_t v33 = v57;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v57, v65, v9);
    uint64_t v34 = sub_1E3E7A860();
    os_log_type_t v35 = sub_1E3E7D4E0();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(void *)&v67[0] = v37;
      *(_DWORD *)unint64_t v36 = 136315138;
      sub_1E3E5D954((unint64_t *)&unk_1EAE29DD0, MEMORY[0x1E4F27928]);
      uint64_t v38 = sub_1E3E7E0E0();
      uint64_t v66 = sub_1E3C150B8(v38, v39, (uint64_t *)v67);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      uint64_t v40 = *(void (**)(char *, uint64_t))(v29 + 8);
      v40(v33, v9);
      _os_log_impl(&dword_1E3BC5000, v34, v35, "Unable to compute next date for the tip to be throttled after an accept. Hiding by default, last presentation date: %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v37, -1, -1);
      MEMORY[0x1E4E79510](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
    }
    else
    {

      uint64_t v40 = *(void (**)(char *, uint64_t))(v29 + 8);
      v40(v33, v9);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v32, v59);
    }
    sub_1E3C10CE0(v63, (uint64_t *)&unk_1EBFDEDF0);
    v40(v65, v9);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v64, v55);
    return 0;
  }
  uint64_t v41 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v52, v27, v9);
  uint64_t v42 = v56;
  sub_1E3E77E00();
  uint64_t v43 = v53;
  uint64_t v44 = v62;
  v51(v53, *MEMORY[0x1E4F27BF0], v62);
  uint64_t v45 = sub_1E3E77F60();

  v50(v43, v44);
  id v46 = *(void (**)(char *, uint64_t))(v31 + 8);
  v46(v42, v9);
  BOOL v47 = v45 == -1;
  v46(v41, v9);
  sub_1E3C10CE0(v63, (uint64_t *)&unk_1EBFDEDF0);
  v46(v65, v9);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v55);
  return v47;
}

void sub_1E3E5D684(void *a1@<X8>)
{
  sub_1E3E7CD30();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v4 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  objc_msgSend(v5, sel_setResultType_, 1);
  sub_1E3C12B10(0, &qword_1EBFDF310);
  os_log_type_t v6 = (void *)MEMORY[0x1E4E77410]();
  objc_msgSend(v5, sel_setPredicate_, v6);

  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE4AD0);
  unint64_t v7 = sub_1E3E7D900();
  if (v1)
  {

    return;
  }
  unint64_t v8 = v7;
  if (!(v7 >> 62))
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_5;
    }
LABEL_18:
    swift_bridgeObjectRelease();

    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_19:
    *a1 = v10;
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1E3CC7594(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    unint64_t v21 = v5;
    id v22 = a1;
    uint64_t v10 = v23;
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = MEMORY[0x1E4E77720](v11, v8);
        unint64_t v14 = *(void *)(v23 + 16);
        unint64_t v13 = *(void *)(v23 + 24);
        if (v14 >= v13 >> 1) {
          sub_1E3CC7594(v13 > 1, v14 + 1, 1);
        }
        ++v11;
        *(void *)(v23 + 16) = v14 + 1;
        uint64_t v15 = v23 + 24 * v14;
        *(void *)(v15 + 32) = v12;
        *(void *)(v15 + 40) = 0;
        *(unsigned char *)(v15 + 48) = 1;
      }
      while (v9 != v11);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        unint64_t v18 = *(void *)(v23 + 16);
        unint64_t v17 = *(void *)(v23 + 24);
        id v19 = *(id *)(v8 + 8 * v16 + 32);
        if (v18 >= v17 >> 1) {
          sub_1E3CC7594(v17 > 1, v18 + 1, 1);
        }
        ++v16;
        *(void *)(v23 + 16) = v18 + 1;
        uint64_t v20 = v23 + 24 * v18;
        *(void *)(v20 + 32) = v19;
        *(void *)(v20 + 40) = 0;
        *(unsigned char *)(v20 + 48) = 1;
      }
      while (v9 != v16);
    }
    swift_bridgeObjectRelease();

    a1 = v22;
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_1E3E5D954(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E3E5D99C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1E3E5B638(*(void **)(v1 + 16), a1);
}

uint64_t sub_1E3E5D9A8(uint64_t *a1)
{
  return sub_1E3E5BA60(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1E3E5D9B0()
{
  return sub_1E3E5BC9C();
}

uint64_t sub_1E3E5D9B8()
{
  sub_1E3C12B10(0, (unint64_t *)&unk_1EBFE4AA0);
  sub_1E3E7BE20();
  return v1;
}

uint64_t sub_1E3E5D9FC()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E5DA44(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1E3C19DC4;
  return sub_1E3E5C1C8(a1, v4, v5, v7, v6);
}

uint64_t sub_1E3E5DB04(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1E3E5DB30(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1E3E5DB58@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1E3E5DB88()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E5DC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoveAbandonedDownloadsTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ShelfIDBuilder.components.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ShelfIDBuilder.components.modify())()
{
  return nullsub_1;
}

PodcastsUI::ShelfIDBuilder __swiftcall ShelfIDBuilder.init(named:)(Swift::String named)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6420);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1E3E86660;
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = 0xD000000000000019;
  *(void *)(v1 + 40) = 0x80000001E3EA4390;
  return (PodcastsUI::ShelfIDBuilder)v1;
}

Swift::String __swiftcall ShelfIDBuilder.build()()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6388);
  sub_1E3CA3AF8();
  uint64_t v0 = sub_1E3E7CC80();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0;
  uint64_t v4 = v2;
  result._object = v4;
  result._uint64_t countAndFlagsBits = v3;
  return result;
}

Swift::Void __swiftcall ShelfIDBuilder.addAttribute(_:named:)(Swift::String _, Swift::String named)
{
  uint64_t v3 = v2;
  sub_1E3E7CEA0();
  sub_1E3E7CEA0();
  sub_1E3E7CEA0();
  sub_1E3E7CEA0();
  uint64_t v4 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1E3CB7240(0, v4[2] + 1, 1, v4);
  }
  unint64_t v6 = v4[2];
  unint64_t v5 = v4[3];
  if (v6 >= v5 >> 1) {
    uint64_t v4 = sub_1E3CB7240((void *)(v5 > 1), v6 + 1, 1, v4);
  }
  v4[2] = v6 + 1;
  uint64_t v7 = &v4[2 * v6];
  v7[4] = 91;
  v7[5] = 0xE100000000000000;
  *uint64_t v3 = v4;
}

PodcastsUI::ShelfIDBuilder __swiftcall ShelfIDBuilder.addingAttribute(_:named:)(Swift::String _, Swift::String named)
{
  object = named._object;
  uint64_t countAndFlagsBits = named._countAndFlagsBits;
  unint64_t v5 = _._object;
  uint64_t v6 = _._countAndFlagsBits;
  v10.components._rawValue = v2;
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v6;
  v7._object = v5;
  v8._uint64_t countAndFlagsBits = countAndFlagsBits;
  v8._object = object;
  ShelfIDBuilder.addAttribute(_:named:)(v7, v8);
  return v10;
}

uint64_t ShelfIDBuilder.addingAttribute<A>(_:named:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_1E3E7E0E0();
  uint64_t v9 = v8;
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v7;
  v10._object = v9;
  v11._uint64_t countAndFlagsBits = a2;
  v11._object = a3;
  ShelfIDBuilder.addAttribute(_:named:)(v10, v11);
  swift_bridgeObjectRelease();
  return a4;
}

{
  Swift::String v7;
  Swift::String v9;

  sub_1E3E7CFD0();
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = a2;
  v7._object = a3;
  ShelfIDBuilder.addAttribute(_:named:)(v9, v7);
  swift_bridgeObjectRelease();
  return a4;
}

ValueMetadata *type metadata accessor for ShelfIDBuilder()
{
  return &type metadata for ShelfIDBuilder;
}

uint64_t static StoreReviewPromptController.shared.getter()
{
  uint64_t v0 = type metadata accessor for StoreReviewPromptController();

  return MEMORY[0x1F41866B0](v0, &unk_1EBFE00F8);
}

uint64_t type metadata accessor for StoreReviewPromptController()
{
  return self;
}

uint64_t sub_1E3E5E0C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E7D780();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_defaultCenter);
  id v7 = (id)*MEMORY[0x1E4FB2628];
  sub_1E3E7D770();
  swift_allocObject();
  swift_weakInit();
  sub_1E3D79054((unint64_t *)&qword_1EBFDF300, MEMORY[0x1E4F27FC8]);
  uint64_t v8 = sub_1E3E7AD60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(v1 + 16) = v8;
  return swift_release();
}

uint64_t sub_1E3E5E264()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1E3E5E29C()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v0 = objc_msgSend(self, sel_sharedInstance);
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE18]), sel_initWithBag_, v0);

    objc_msgSend(v1, sel_applicationDidForeground);
    swift_release();
  }
}

void sub_1E3E5E354()
{
}

uint64_t sub_1E3E5E35C()
{
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  sub_1E3E775E0();
  sub_1E3E5F448((uint64_t)sub_1E3E5E67C, v0);
  return swift_release_n();
}

void sub_1E3E5E3CC(char a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7B770();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E7B7C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  Swift::String v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
    uint64_t v12 = (void *)sub_1E3E7D6A0();
    aBlock[4] = sub_1E3E5FA80;
    void aBlock[5] = a2;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1E3CE65F8;
    aBlock[3] = &block_descriptor_34;
    unint64_t v13 = _Block_copy(aBlock);
    sub_1E3E775E0();
    swift_release();
    sub_1E3E7B7A0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1E3D79054((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
    sub_1E3C8E088();
    sub_1E3E7DCC0();
    MEMORY[0x1E4E76FF0](0, v11, v7, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_1E3E5E67C(char a1)
{
  sub_1E3E5E3CC(a1, v1);
}

uint64_t sub_1E3E5E684()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 24) = 1;
    return swift_release();
  }
  return result;
}

void sub_1E3E5E6D8(void *a1)
{
  unint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_tabBarController);
  if (!v4) {
    return;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_viewControllers);

  if (!v6) {
    return;
  }
  uint64_t v7 = sub_1E3C12B10(0, &qword_1EBFDEEB8);
  uint64_t v8 = sub_1E3E7D060();

  id v9 = objc_msgSend(a1, sel_view);
  if (!v9)
  {
LABEL_87:
    __break(1u);
    return;
  }
  uint64_t v10 = v9;
  unint64_t v11 = (unint64_t)objc_msgSend(v9, sel_window);

  if (!v11) {
    goto LABEL_31;
  }
  id v52 = objc_msgSend((id)v11, sel_windowScene);

  if (!v52) {
    goto LABEL_31;
  }
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = v52;
    goto LABEL_35;
  }
  id v12 = objc_msgSend(a1, sel_splitViewController);
  if (v12)
  {
    id v51 = v12;
    if (objc_msgSend(v12, sel_isCollapsed))
    {

      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    id v50 = objc_msgSend(v51, sel_detailViewController);
    if (!v50) {
      goto LABEL_69;
    }
    self;
    unint64_t v36 = (void *)swift_dynamicCastObjCClass();
    if (!v36)
    {

      uint64_t v24 = v50;
      goto LABEL_35;
    }
    id v37 = objc_msgSend(v36, sel_viewControllers);

    unint64_t v11 = sub_1E3E7D060();
    if (v11 >> 62) {
      goto LABEL_83;
    }
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_64;
    }
LABEL_84:

LABEL_31:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_10:
  unint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v54 = MEMORY[0x1E4FBC860];
  if ((unint64_t)v8 >> 62) {
    goto LABEL_73;
  }
  uint64_t v14 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_77:
    swift_bridgeObjectRelease();
    unint64_t v54 = v13;
LABEL_78:
    swift_bridgeObjectRelease();
    sub_1E3D3B088(v13);
    char v45 = sub_1E3D84254((uint64_t)a1, v54);
    swift_bridgeObjectRelease();
    if (v45)
    {
      objc_msgSend(self, sel_requestReviewInScene_, v52);
      id v46 = objc_msgSend(self, sel_sharedInstance);
      id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE18]), sel_initWithBag_, v46);

      objc_msgSend(v47, sel_didAttemptPromptReview);
      *(unsigned char *)(v2 + 24) = 0;
    }

    return;
  }
LABEL_12:
  id v49 = (id)v2;
  if (v14 >= 1)
  {
    uint64_t v15 = 0;
    unint64_t v2 = v8 & 0xC000000000000001;
    while (1)
    {
      if (v2) {
        id v16 = (id)MEMORY[0x1E4E77720](v15, v8);
      }
      else {
        id v16 = *(id *)(v8 + 8 * v15 + 32);
      }
      unint64_t v17 = v16;
      self;
      unint64_t v18 = (void *)swift_dynamicCastObjCClass();
      if (v18)
      {
        id v19 = objc_msgSend(v18, sel_viewControllers);
        unint64_t v20 = sub_1E3E7D060();

        if (v20 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v23 = sub_1E3E7DFC0();
          swift_bridgeObjectRelease();
          if (!v23)
          {
LABEL_29:

            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
        }
        else if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_29;
        }
        if ((v20 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1E4E77720](0, v20);
        }
        else
        {
          if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            if (v8 < 0) {
              unint64_t v11 = v8;
            }
            else {
              unint64_t v11 = v8 & 0xFFFFFFFFFFFFFF8;
            }
            swift_bridgeObjectRetain();
            uint64_t v14 = sub_1E3E7DFC0();
            if (!v14) {
              goto LABEL_77;
            }
            goto LABEL_12;
          }
          id v21 = *(id *)(v20 + 32);
        }

        uint64_t v22 = swift_bridgeObjectRelease();
        MEMORY[0x1E4E76960](v22);
        if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E3E7D090();
        }
        sub_1E3E7D100();
        sub_1E3E7D080();
      }
      else
      {
      }
LABEL_15:
      if (v14 == ++v15)
      {
        id v51 = (id)v7;
        swift_bridgeObjectRelease();
        unint64_t v53 = v13;
        swift_bridgeObjectRetain();
        unint64_t v13 = 0;
        uint64_t v7 = 0x1E4FB1000uLL;
        while (1)
        {
          if (v2) {
            id v25 = (id)MEMORY[0x1E4E77720](v13, v8);
          }
          else {
            id v25 = *(id *)(v8 + 8 * v13 + 32);
          }
          uint64_t v26 = v25;
          self;
          uint64_t v27 = (void *)swift_dynamicCastObjCClass();
          if (v27 && (id v28 = objc_msgSend(v27, sel_masterViewController)) != 0)
          {
            uint64_t v29 = v28;
            self;
            uint64_t v30 = (void *)swift_dynamicCastObjCClass();
            if (v30)
            {
              id v31 = objc_msgSend(v30, sel_viewControllers);

              unint64_t v32 = sub_1E3E7D060();
              if (v32 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v35 = sub_1E3E7DFC0();
                swift_bridgeObjectRelease();
                if (v35)
                {
LABEL_49:
                  if ((v32 & 0xC000000000000001) != 0)
                  {
                    MEMORY[0x1E4E77720](0, v32);
                  }
                  else
                  {
                    if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_72;
                    }
                    id v33 = *(id *)(v32 + 32);
                  }

                  uint64_t v34 = swift_bridgeObjectRelease();
                  MEMORY[0x1E4E76960](v34);
                  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    sub_1E3E7D090();
                  }
                  sub_1E3E7D100();
                  sub_1E3E7D080();
                  goto LABEL_40;
                }
              }
              else if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                goto LABEL_49;
              }

              swift_bridgeObjectRelease();
            }
            else
            {
            }
          }
          else
          {
          }
LABEL_40:
          if (v14 == ++v13)
          {
            swift_bridgeObjectRelease();
            unint64_t v13 = v53;
            unint64_t v2 = (unint64_t)v49;
            goto LABEL_78;
          }
        }
      }
    }
  }
  __break(1u);
LABEL_83:
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_1E3E7DFC0();
  swift_bridgeObjectRelease();
  if (!v48) {
    goto LABEL_84;
  }
LABEL_64:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v38 = (id)MEMORY[0x1E4E77720](0, v11);
    goto LABEL_67;
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_87;
  }
  id v38 = *(id *)(v11 + 32);
LABEL_67:
  unint64_t v39 = v38;
  swift_bridgeObjectRelease();
  id v40 = a1;
  id v41 = v39;
  char v42 = sub_1E3E7DA80();

  if (v42)
  {
    objc_msgSend(self, sel_requestReviewInScene_, v52);
    id v43 = objc_msgSend(self, sel_sharedInstance);
    id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE18]), sel_initWithBag_, v43);

    objc_msgSend(v44, sel_didAttemptPromptReview);
    *(unsigned char *)(v2 + 24) = 0;
  }
LABEL_69:

  uint64_t v24 = v51;
LABEL_35:
}

void sub_1E3E5EEF0(char a1, void (*a2)(void), uint64_t a3)
{
  if (a1)
  {
    id v5 = objc_msgSend(self, sel_sharedInstance);
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE18]), sel_initWithBag_, v5);

    id v7 = objc_msgSend(v6, sel_shouldAttemptReview);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a2;
    *(void *)(v8 + 24) = a3;
    v10[4] = sub_1E3E5FA78;
    v10[5] = v8;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    id v10[2] = sub_1E3C8DA20;
    v10[3] = &block_descriptor_31_0;
    id v9 = _Block_copy(v10);
    sub_1E3E775E0();
    swift_release();
    objc_msgSend(v7, sel_addFinishBlock_, v9);
    _Block_release(v9);
  }
  else
  {
    a2(0);
  }
}

void sub_1E3E5F058(void *a1, uint64_t a2, void (*a3)(void))
{
  if (a1)
  {
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
    id v7 = a1;
    id v5 = (void *)sub_1E3E7DA60();
    char v6 = sub_1E3E7DA80();

    a3(v6 & 1);
  }
}

uint64_t sub_1E3E5F100(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E3E7B770();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1E3E7B7C0();
  uint64_t v9 = *(void *)(v19 - 8);
  double v10 = MEMORY[0x1F4188790](v19);
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_countOfSubscribedAndNotHiddenPodcasts, v10);
  uint64_t v14 = sub_1E3E5F6CC();
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v15 = (void *)sub_1E3E7D6A0();
  id v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  uint64_t v16[3] = a3;
  void v16[4] = v13;
  v16[5] = v14;
  aBlock[4] = sub_1E3E5FA3C;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1E3CE65F8;
  aBlock[3] = &block_descriptor_25;
  unint64_t v17 = _Block_copy(aBlock);
  sub_1E3E775E0();
  swift_release();
  sub_1E3E7B7A0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1E3D79054((unint64_t *)&qword_1EBFDEE00, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C8E088();
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v12, v8, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v19);
}

uint64_t StoreReviewPromptController.deinit()
{
  swift_release();
  return v0;
}

uint64_t StoreReviewPromptController.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1E3E5F448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = self;
  sub_1E3E775E0();
  id v6 = objc_msgSend(v5, sel_sharedInstance);
  id v7 = objc_msgSend(v6, sel_privateQueueContext);

  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = sub_1E3E5F678;
  v8[4] = v4;
  v11[4] = sub_1E3E5F6C0;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1E3CE65F8;
  v11[3] = &block_descriptor_36;
  uint64_t v9 = _Block_copy(v11);
  id v10 = v7;
  sub_1E3E775E0();
  swift_release();
  objc_msgSend(v10, sel_performBlock_, v9);
  _Block_release(v9);
  swift_release();
}

uint64_t method lookup function for StoreReviewPromptController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StoreReviewPromptController);
}

uint64_t dispatch thunk of StoreReviewPromptController.prepareToTrackBecomeActive()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of StoreReviewPromptController.didFollowShow()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of StoreReviewPromptController.modernPageControllerDidAppear(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_1E3E5F640()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1E3E5F678(char a1)
{
  sub_1E3E5EEF0(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1E3E5F680()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E5F6C0()
{
  return sub_1E3E5F100(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1E3E5F6CC()
{
  uint64_t v0 = sub_1E3E7A880();
  MEMORY[0x1F4188790](v0);
  sub_1E3E7CD30();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v2 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  id v4 = objc_msgSend(self, sel_predicateForPreviouslyPlayedHidingFutureTimestamps);
  objc_msgSend(v3, sel_setPredicate_, v4);

  sub_1E3C12B10(0, &qword_1EBFDF310);
  uint64_t v5 = sub_1E3E7D8F0();

  return v5;
}

uint64_t sub_1E3E5FA04()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E5FA3C()
{
  BOOL v2 = *(uint64_t *)(v0 + 32) > 0 && *(void *)(v0 + 40) > 2;
  return (*(uint64_t (**)(BOOL))(v0 + 16))(v2);
}

void sub_1E3E5FA78(void *a1, uint64_t a2)
{
  sub_1E3E5F058(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_1E3E5FA80()
{
  return sub_1E3E5E684();
}

uint64_t sub_1E3E5FA9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id sub_1E3E5FAA8()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AssetDownloaders()), sel_init);
  qword_1EBFE0F88 = (uint64_t)result;
  return result;
}

id AssetDownloaders.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id static AssetDownloaders.shared.getter()
{
  if (qword_1EBFE0F90 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBFE0F88;

  return v0;
}

uint64_t AssetDownloaders.backgroundArtworkDownloader.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E5FC18(&OBJC_IVAR___PUIAssetDownloaders_backgroundArtworkDownloader, &qword_1EBFE2130, a1);
}

uint64_t AssetDownloaders.backgroundArtworkSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E5FC18(&OBJC_IVAR___PUIAssetDownloaders_backgroundArtworkSource, &qword_1EBFE4320, a1);
}

uint64_t AssetDownloaders.storeArtworkSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E5FC18(&OBJC_IVAR___PUIAssetDownloaders_storeArtworkSource, &qword_1EBFE43A0, a1);
}

uint64_t AssetDownloaders.libraryArtworkSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E5FC18(&OBJC_IVAR___PUIAssetDownloaders_libraryArtworkSource, &qword_1EBFE43A0, a1);
}

uint64_t sub_1E3E5FC18@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a3, v5, v6);
}

id AssetDownloaders.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE43A0);
  uint64_t v58 = *(void *)(v1 - 8);
  uint64_t v59 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v57 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4320);
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  id v49 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ArtworkBackgroundSessionDescriptor();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char **)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2130);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v60 = (char *)&v49 - v10;
  uint64_t v11 = sub_1E3E77D00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v49 - v16;
  unint64_t v18 = self;
  uint64_t v19 = v0;
  id v20 = objc_msgSend(v18, sel_libraryDirectory);
  sub_1E3E77C90();

  sub_1E3E77C50();
  id v21 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t v54 = v11;
  uint64_t v53 = v12 + 8;
  id v52 = v21;
  v21((uint64_t)v14, v11);
  sub_1E3DC875C();
  id v22 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultStore);
  if (qword_1EBFE0850 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for AssetCaches();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EBFE0838);
  sub_1E3D72D8C(v24, (uint64_t)v6 + *(int *)(v4 + 20));
  *uint64_t v6 = v22;
  sub_1E3E77C50();
  sub_1E3E603D0();
  id v25 = v60;
  sub_1E3E79B50();
  uint64_t v26 = v55;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v28 = v56;
  v27(&v19[OBJC_IVAR___PUIAssetDownloaders_backgroundArtworkDownloader], v25, v56);
  v27(v8, v25, v28);
  sub_1E3E78E70();
  sub_1E3E60428();
  uint64_t v29 = v49;
  sub_1E3E796F0();
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v19[OBJC_IVAR___PUIAssetDownloaders_backgroundArtworkSource], v29, v51);
  id v30 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2920);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E86660;
  uint64_t v62 = 0x6567412D72657355;
  unint64_t v63 = 0xEA0000000000746ELL;
  uint64_t v32 = MEMORY[0x1E4FBB1A0];
  sub_1E3E7DD60();
  uint64_t v33 = self;
  uint64_t v51 = (uint64_t)v17;
  uint64_t v34 = (void *)v33;
  id v35 = objc_msgSend(self, sel_currentProcess);
  id v36 = objc_msgSend(v34, sel_userAgentForProcessInfo_, v35);

  uint64_t v37 = sub_1E3E7CD30();
  uint64_t v39 = v38;

  *(void *)(inited + 96) = v32;
  *(void *)(inited + 72) = v37;
  *(void *)(inited + 80) = v39;
  sub_1E3C7EE44(inited);
  id v40 = (void *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setHTTPAdditionalHeaders_, v40);

  objc_msgSend(v30, sel_setHTTPMaximumConnectionsPerHost_, 15);
  id v41 = v30;
  char v42 = v57;
  sub_1E3E79C90();
  uint64_t v43 = v59;
  id v44 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
  v44(&v19[OBJC_IVAR___PUIAssetDownloaders_libraryArtworkSource], v42, v59);
  id v45 = v41;
  sub_1E3E79C90();
  v44(&v19[OBJC_IVAR___PUIAssetDownloaders_storeArtworkSource], v42, v43);

  id v46 = (objc_class *)type metadata accessor for AssetDownloaders();
  v61.receiver = v19;
  v61.super_class = v46;
  id v47 = objc_msgSendSuper2(&v61, sel_init);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v60, v28);
  v52(v51, v54);
  return v47;
}

unint64_t sub_1E3E603D0()
{
  unint64_t result = qword_1EBFE1D80;
  if (!qword_1EBFE1D80)
  {
    type metadata accessor for ArtworkBackgroundSessionDescriptor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE1D80);
  }
  return result;
}

unint64_t sub_1E3E60428()
{
  unint64_t result = qword_1EBFE2128;
  if (!qword_1EBFE2128)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE2130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE2128);
  }
  return result;
}

uint64_t type metadata accessor for AssetDownloaders()
{
  uint64_t result = qword_1EBFE0F98;
  if (!qword_1EBFE0F98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E3E604F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v39 = a1;
  uint64_t v8 = sub_1E3E7A880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v35 - v13;
  uint64_t v15 = type metadata accessor for ArtworkBackgroundSessionDescriptor();
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v4 + OBJC_IVAR___PUIAssetDownloaders_backgroundArtworkDownloader;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2130);
  uint64_t v38 = v18;
  sub_1E3E79B60();
  sub_1E3E603D0();
  uint64_t v19 = sub_1E3E7A3D0();
  uint64_t v21 = v20;
  sub_1E3E609A4((uint64_t)v17);
  if (v19 == a3 && v21 == a4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v23 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      sub_1E3E7A840();
      swift_bridgeObjectRetain_n();
      uint64_t v24 = sub_1E3E7A860();
      os_log_type_t v25 = sub_1E3E7D500();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v36 = v8;
        uint64_t v28 = v27;
        uint64_t v41 = v27;
        *(_DWORD *)uint64_t v26 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1E3C150B8(a3, a4, &v41);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1E3BC5000, v24, v25, "Asset downloaders ignoring background session not owned: %s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E4E79510](v28, -1, -1);
        MEMORY[0x1E4E79510](v26, -1, -1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v36);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
      return;
    }
  }
  sub_1E3E7A840();
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_1E3E7A860();
  os_log_type_t v30 = sub_1E3E7D500();
  if (os_log_type_enabled(v29, v30))
  {
    v35[1] = a2;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v36 = v8;
    uint64_t v32 = (uint8_t *)v31;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v41 = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1E3C150B8(a3, a4, &v41);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1E3BC5000, v29, v30, "Registering artwork background completion handler for session: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v33, -1, -1);
    MEMORY[0x1E4E79510](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v36);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  uint64_t v34 = (void *)sub_1E3E79B70();
  sub_1E3E79C60();
}

uint64_t sub_1E3E609A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtworkBackgroundSessionDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id AssetDownloaders.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetDownloaders();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E3E60C28()
{
  return type metadata accessor for AssetDownloaders();
}

void sub_1E3E60C30()
{
  sub_1E3E60DB8();
  if (v0 <= 0x3F)
  {
    sub_1E3E60E24(319, (unint64_t *)&unk_1EBFE4328, MEMORY[0x1E4F91A90]);
    if (v1 <= 0x3F)
    {
      sub_1E3E60E24(319, &qword_1EBFE43A8, MEMORY[0x1E4F91BB0]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for AssetDownloaders(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssetDownloaders);
}

uint64_t dispatch thunk of AssetDownloaders.register(backgroundCompletion:for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

void sub_1E3E60DB8()
{
  if (!qword_1EBFE2138)
  {
    type metadata accessor for ArtworkBackgroundSessionDescriptor();
    sub_1E3E603D0();
    unint64_t v0 = sub_1E3E79B80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE2138);
    }
  }
}

void sub_1E3E60E24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1E3E78E70();
    unint64_t v7 = a3(a1, v6, MEMORY[0x1E4F917A8]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1E3E60E8C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1E3E60EC4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

double sub_1E3E60ED4(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_window);
  if (v2
    && (uint64_t v3 = v2, v4 = objc_msgSend(v2, sel_windowScene), v3, v4)
    && (id v5 = objc_msgSend(v4, sel_statusBarManager), v4, v5))
  {
    objc_msgSend(v5, sel_statusBarFrame);
    double v7 = v6;
  }
  else
  {

    return 0.0;
  }
  return v7;
}

double UIView.mt_statusBarFrame.getter()
{
  id v1 = objc_msgSend(v0, sel_window);
  double v2 = 0.0;
  if (v1)
  {
    uint64_t v3 = v1;
    id v4 = objc_msgSend(v1, sel_windowScene);

    if (v4)
    {
      id v5 = objc_msgSend(v4, sel_statusBarManager);

      if (v5)
      {
        objc_msgSend(v5, sel_statusBarFrame);
        double v2 = v6;
      }
    }
  }
  return v2;
}

uint64_t static URL.systemImage(_:)()
{
  sub_1E3E7DDD0();
  swift_bridgeObjectRelease();
  sub_1E3E7CEA0();
  sub_1E3E77CD0();

  return swift_bridgeObjectRelease();
}

uint64_t PlaybackController.seekToNextChapter()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1E3E61170, 0, 0);
}

uint64_t sub_1E3E61170()
{
  sub_1E3E775E0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1E3E61228;
  uint64_t v2 = *(void *)(v0 + 16);
  v1[16] = v2;
  v1[17] = v2;
  return MEMORY[0x1F4188298](sub_1E3E61348, 0, 0);
}

uint64_t sub_1E3E61228(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  id v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1E3E61328(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x1F4188298](sub_1E3E61348, 0, 0);
}

uint64_t sub_1E3E61348()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 112);
  *(void *)(v0 + 144) = v1;
  if (!v1) {
    goto LABEL_4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 64) == 2)
  {

LABEL_4:
    uint64_t v2 = sub_1E3E793B0();
    sub_1E3E62064();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F919E8], v2);
    swift_willThrow();
LABEL_20:
    swift_release();
LABEL_21:
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  double v4 = *(double *)(v0 + 16);
  double v5 = *(double *)(v0 + 40);
  double v6 = *(double *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  sub_1E3E77D90();
  double v9 = v6 + (v8 - v4) * *(float *)&v7;
  if (v9 >= v5) {
    double v10 = v5;
  }
  else {
    double v10 = v9;
  }
  id v11 = objc_msgSend(v1, sel_chapters);
  if (!v11)
  {
LABEL_19:
    uint64_t v19 = sub_1E3E793B0();
    sub_1E3E62064();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F919E0], v19);
    swift_willThrow();

    goto LABEL_20;
  }
  uint64_t v12 = v11;
  sub_1E3C1C554();
  unint64_t v13 = sub_1E3E7D060();
  *(void *)(v0 + 152) = v13;

  *(void *)(v0 + 120) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29EA8);
  sub_1E3E620C4();
  if ((sub_1E3E7D3C0() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  unint64_t v14 = sub_1E3C1C594(v13, fmax(v10, 0.0));
  unint64_t v15 = v14;
  if (v14 >> 62)
  {
    uint64_t result = sub_1E3E7DFC0();
    if (result) {
      goto LABEL_12;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1E3E793B0();
    sub_1E3E62064();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v23, *MEMORY[0x1E4F919D0], v22);
    swift_willThrow();
    uint64_t v24 = *(void **)(v0 + 144);
    swift_bridgeObjectRelease();
    swift_release();

    goto LABEL_21;
  }
  uint64_t result = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result) {
    goto LABEL_25;
  }
LABEL_12:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v17 = (id)MEMORY[0x1E4E77720](0, v15);
  }
  else
  {
    if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v17 = *(id *)(v15 + 32);
  }
  *(void *)(v0 + 160) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 96) = &type metadata for PlaybackController.TransportCommand;
  *(void *)(v0 + 104) = &protocol witness table for PlaybackController.TransportCommand;
  *(void *)(v0 + 72) = 8;
  *(unsigned char *)(v0 + 80) = 2;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v18;
  void *v18 = v0;
  v18[1] = sub_1E3E617B4;
  return sub_1E3CD3A50(v0 + 72, 0);
}

uint64_t sub_1E3E617B4(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    double v5 = sub_1E3E6195C;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 72);
    double v5 = sub_1E3E618E4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E618E4()
{
  uint64_t v1 = (void *)v0[18];
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[20];
  return v2(v3);
}

uint64_t sub_1E3E6195C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  uint64_t v1 = *(void **)(v0 + 144);
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E3E619EC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return MEMORY[0x1F4188298](sub_1E3E61A0C, 0, 0);
}

uint64_t sub_1E3E61A0C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 72);
  *(void *)(v0 + 104) = v1;
  if (!v1) {
    goto LABEL_4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E3E7AAF0();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 64) == 2)
  {

LABEL_4:
    uint64_t v2 = sub_1E3E793B0();
    sub_1E3E62064();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F919E8], v2);
    swift_willThrow();
LABEL_14:
    swift_release();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  double v4 = *(double *)(v0 + 16);
  double v5 = *(double *)(v0 + 40);
  double v6 = *(double *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  sub_1E3E77D90();
  double v9 = v8;
  id v10 = objc_msgSend(v1, sel_chapters);
  if (!v10)
  {
LABEL_13:
    uint64_t v16 = sub_1E3E793B0();
    sub_1E3E62064();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, *MEMORY[0x1E4F919E0], v16);
    swift_willThrow();

    goto LABEL_14;
  }
  id v11 = v10;
  sub_1E3C1C554();
  uint64_t v12 = sub_1E3E7D060();
  *(void *)(v0 + 112) = v12;

  *(void *)(v0 + 80) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29EA8);
  sub_1E3E620C4();
  if ((sub_1E3E7D3C0() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  double v13 = v6 + (v9 - v4) * *(float *)&v7;
  if (v13 >= v5) {
    double v13 = v5;
  }
  double v14 = fmax(v13, 0.0);
  uint64_t v15 = swift_task_alloc();
  *(void *)(v0 + 120) = v15;
  *(void *)uint64_t v15 = v0;
  *(void *)(v15 + 8) = sub_1E3E61D70;
  *(void *)(v15 + 72) = *(void *)(v0 + 96);
  *(double *)(v15 + 64) = v14;
  *(void *)(v15 + 56) = v12;
  return MEMORY[0x1F4188298](sub_1E3E62148, 0, 0);
}

uint64_t sub_1E3E61D70(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    double v5 = sub_1E3E61F10;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    double v5 = sub_1E3E61E98;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E61E98()
{
  uint64_t v1 = (void *)v0[13];
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[17];
  return v2(v3);
}

uint64_t sub_1E3E61F10()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t PlaybackController.seekToPreviousChapter()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1E3E61FA4, 0, 0);
}

uint64_t sub_1E3E61FA4()
{
  sub_1E3E775E0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1E3E62514;
  uint64_t v2 = *(void *)(v0 + 16);
  v1[11] = v2;
  v1[12] = v2;
  return MEMORY[0x1F4188298](sub_1E3E61A0C, 0, 0);
}

unint64_t sub_1E3E62064()
{
  unint64_t result = qword_1EAE29EA0;
  if (!qword_1EAE29EA0)
  {
    sub_1E3E793B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29EA0);
  }
  return result;
}

unint64_t sub_1E3E620C4()
{
  unint64_t result = qword_1EAE29EB0;
  if (!qword_1EAE29EB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE29EA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAE29EB0);
  }
  return result;
}

uint64_t sub_1E3E62120(uint64_t a1, uint64_t a2, double a3)
{
  *(void *)(v3 + 72) = a2;
  *(double *)(v3 + 64) = a3;
  *(void *)(v3 + 56) = a1;
  return MEMORY[0x1F4188298](sub_1E3E62148, 0, 0);
}

unint64_t sub_1E3E62148()
{
  unint64_t v1 = sub_1E3C1C740(*(void *)(v0 + 56), *(double *)(v0 + 64));
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    uint64_t v3 = sub_1E3E7DFC0();
    if (v3)
    {
LABEL_3:
      BOOL v4 = __OFSUB__(v3, 1);
      unint64_t result = v3 - 1;
      if (v4)
      {
        __break(1u);
      }
      else if ((v2 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v6 = *(id *)(v2 + 8 * result + 32);
LABEL_8:
          *(void *)(v0 + 80) = v6;
          swift_bridgeObjectRelease();
          *(void *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
          *(void *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
          *(void *)(v0 + 16) = 9;
          *(unsigned char *)(v0 + 24) = 2;
          uint64_t v7 = (void *)swift_task_alloc();
          *(void *)(v0 + 88) = v7;
          void *v7 = v0;
          v7[1] = sub_1E3E62348;
          return sub_1E3CD3A50(v0 + 16, 0);
        }
        __break(1u);
        return result;
      }
      id v6 = (id)MEMORY[0x1E4E77720](result, v2);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1E3E793B0();
  sub_1E3E62064();
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, *MEMORY[0x1E4F919D8], v8);
  swift_willThrow();
  id v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1E3E62348(void *a1)
{
  BOOL v4 = (void *)*v2;
  v4[12] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1E3E624A4, 0, 0);
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v4 + 2));
    uint64_t v5 = (uint64_t (*)(uint64_t))v4[1];
    uint64_t v6 = v4[10];
    return v5(v6);
  }
}

uint64_t sub_1E3E624A4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL sub_1E3E6251C(double a1, double a2)
{
  double v2 = fabs(a1);
  double v3 = fabs(a2);
  if (v3 < v2) {
    double v2 = v3;
  }
  uint64_t v4 = (*(void *)&v2 >> 52) & 0x7FFLL;
  if (!v4)
  {
    uint64_t v6 = 1;
LABEL_7:
    double v5 = *(double *)&v6;
    return vabdd_f64(a1, a2) >= v5;
  }
  if (v4 == 2047)
  {
    uint64_t v6 = 0x7FF8000000000000;
    goto LABEL_7;
  }
  double v5 = COERCE_DOUBLE(*(void *)&v2 & 0x7FF0000000000000) * 2.22044605e-16;
  return vabdd_f64(a1, a2) >= v5;
}

BOOL sub_1E3E62578(double a1, double a2, double a3, double a4)
{
  double v4 = fabs(a1);
  double v5 = fabs(a3);
  if (v5 < v4) {
    double v4 = v5;
  }
  uint64_t v6 = (*(void *)&v4 >> 52) & 0x7FFLL;
  if (v6)
  {
    if (v6 == 2047) {
      return 1;
    }
    double v7 = COERCE_DOUBLE(*(void *)&v4 & 0x7FF0000000000000) * 2.22044605e-16;
  }
  else
  {
    *(void *)&double v7 = 1;
  }
  if (vabdd_f64(a1, a3) < v7) {
    return !_s12CoreGraphics7CGFloatV10PodcastsUIE3eetoiySbAC_ACtFZ_0(a2, a4);
  }
  return 1;
}

BOOL sub_1E3E62600(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v12 = fabs(a1);
  double v13 = fabs(a5);
  if (v13 < v12) {
    double v12 = v13;
  }
  uint64_t v14 = (*(void *)&v12 >> 52) & 0x7FFLL;
  if (v14)
  {
    if (v14 == 2047) {
      return 1;
    }
    double v15 = COERCE_DOUBLE(*(void *)&v12 & 0x7FF0000000000000) * 2.22044605e-16;
  }
  else
  {
    *(void *)&double v15 = 1;
  }
  if (vabdd_f64(a1, a5) >= v15 || !_s12CoreGraphics7CGFloatV10PodcastsUIE3eetoiySbAC_ACtFZ_0(a2, a6)) {
    return 1;
  }
  return !_sSo7CGPointV10PodcastsUIE3eetoiySbAB_ABtFZ_0(a3, a4, a7, a8);
}

BOOL sub_1E3E626BC(double *a1, double *a2)
{
  return _sSo6CGRectV10PodcastsUIE3eetoiySbAB_ABtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t CGRect.LayoutAxis.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t CGRect.LayoutAxis.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static CGRect.LayoutAxis.horizontal.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static CGRect.LayoutAxis.vertical.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1E3E626F8()
{
  uint64_t v0 = unk_1F3F48148;
  if ((unk_1F3F48148 & ~qword_1F3F48140) == 0) {
    uint64_t v0 = 0;
  }
  qword_1EAE29EC0 = v0 | qword_1F3F48140;
}

uint64_t static CGRect.LayoutAxis.allAxes.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EAE24598 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_1EAE29EC0;
  return result;
}

CGFloat CGRect.applyingLayoutDirection(_:inBounds:)(uint64_t a1, double a2, double a3, double a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  if (a1)
  {
    if (a1 == 1)
    {
      double MaxX = CGRectGetMaxX(*(CGRect *)&a2);
      v19.origin.x = a6;
      v19.origin.y = a7;
      v19.size.width = a8;
      v19.size.height = a9;
      double v15 = MaxX - CGRectGetMinX(v19);
      v20.origin.x = a6;
      v20.origin.y = a7;
      v20.size.width = a8;
      v20.size.height = a9;
      return v15 - CGRectGetWidth(v20);
    }
    else
    {
      type metadata accessor for UIUserInterfaceLayoutDirection(0);
      v18[3] = v16;
      v18[0] = a1;
      unrecognizedEnumValueEncountered(_:)((uint64_t)v18);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
    }
  }
  return a6;
}

CGFloat CGRect.aspectFit(in:scale:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  double v24 = fabs(CGRectGetWidth(*(CGRect *)&a1));
  double v25 = 0.0;
  if (v24 <= 0.0) {
    double v25 = v24;
  }
  uint64_t v26 = (*(void *)&v25 >> 52) & 0x7FFLL;
  if (!v26)
  {
    if (v24 < COERCE_DOUBLE(1)) {
      return a6;
    }
LABEL_8:
    v35.origin.x = a1;
    v35.origin.y = a2;
    v35.size.width = a3;
    v35.size.height = a4;
    double v27 = fabs(CGRectGetHeight(v35));
    double v28 = 0.0;
    if (v27 <= 0.0) {
      double v28 = v27;
    }
    uint64_t v29 = (*(void *)&v28 >> 52) & 0x7FFLL;
    if (v29)
    {
      if (v29 != 2047 && v27 < COERCE_DOUBLE(*(void *)&v28 & 0x7FF0000000000000) * 2.22044605e-16) {
        return a6;
      }
    }
    else if (v27 < COERCE_DOUBLE(1))
    {
      return a6;
    }
    v36.origin.x = a1;
    v36.origin.y = a2;
    v36.size.width = a3;
    v36.size.height = a4;
    CGRectGetWidth(v36);
    v37.origin.x = a6;
    v37.origin.y = a7;
    v37.size.width = a8;
    v37.size.height = a9;
    CGRectGetWidth(v37);
    v38.origin.x = a1;
    v38.origin.y = a2;
    v38.size.width = a3;
    v38.size.height = a4;
    CGRectGetHeight(v38);
    v39.origin.x = a6;
    v39.origin.y = a7;
    v39.size.width = a8;
    v39.size.height = a9;
    CGRectGetHeight(v39);
    int v30 = qword_1F3F48178[0];
    if ((qword_1F3F48178[0] & ~qword_1F3F48170) == 0) {
      int v30 = 0;
    }
    char v31 = v30 | qword_1F3F48170;
    if ((v30 | qword_1F3F48170))
    {
      UIRectCenteredXInRectScale();
      a6 = v32;
      if ((v31 & 2) == 0) {
        return a6;
      }
    }
    else if (((v30 | qword_1F3F48170) & 2) == 0)
    {
      return a6;
    }
    UIRectCenteredYInRectScale();
    return v33;
  }
  if (v26 == 2047 || v24 >= COERCE_DOUBLE(*(void *)&v25 & 0x7FF0000000000000) * 2.22044605e-16) {
    goto LABEL_8;
  }
  return a6;
}

double CGRect.centeringAlong(axes:bounds:scale:)(uint64_t *a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    UIRectCenteredXInRectScale();
    a7 = v8;
  }
  if ((v7 & 2) != 0)
  {
    UIRectCenteredYInRectScale();
    return v9;
  }
  return a7;
}

CGFloat CGRect.removingLayoutDirection(_:inBounds:)(uint64_t a1, double a2, double a3, double a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  if (a1)
  {
    if (a1 == 1)
    {
      double MaxX = CGRectGetMaxX(*(CGRect *)&a2);
      v18.origin.x = a6;
      v18.origin.y = a7;
      v18.size.width = a8;
      v18.size.height = a9;
      return MaxX - CGRectGetMaxX(v18);
    }
    else
    {
      type metadata accessor for UIUserInterfaceLayoutDirection(0);
      v17[3] = v15;
      v17[0] = a1;
      unrecognizedEnumValueEncountered(_:)((uint64_t)v17);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    }
  }
  return a6;
}

BOOL _sSo6CGRectV10PodcastsUIE3eetoiySbAB_ABtFZ_0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v12 = fabs(a1);
  double v13 = fabs(a5);
  if (v13 < v12) {
    double v12 = v13;
  }
  uint64_t v14 = (*(void *)&v12 >> 52) & 0x7FFLL;
  if (v14)
  {
    if (v14 == 2047) {
      return 0;
    }
    double v15 = COERCE_DOUBLE(*(void *)&v12 & 0x7FF0000000000000) * 2.22044605e-16;
  }
  else
  {
    *(void *)&double v15 = 1;
  }
  if (vabdd_f64(a1, a5) >= v15 || !_s12CoreGraphics7CGFloatV10PodcastsUIE3eetoiySbAC_ACtFZ_0(a2, a6)) {
    return 0;
  }

  return _sSo7CGPointV10PodcastsUIE3eetoiySbAB_ABtFZ_0(a3, a4, a7, a8);
}

unint64_t sub_1E3E62CF0(uint64_t a1)
{
  unint64_t result = sub_1E3E62D18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1E3E62D18()
{
  unint64_t result = qword_1EAE29EC8;
  if (!qword_1EAE29EC8)
  {
    type metadata accessor for CGRect(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29EC8);
  }
  return result;
}

unint64_t sub_1E3E62D74()
{
  unint64_t result = qword_1EAE29ED0;
  if (!qword_1EAE29ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29ED0);
  }
  return result;
}

unint64_t sub_1E3E62DCC()
{
  unint64_t result = qword_1EAE29ED8;
  if (!qword_1EAE29ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29ED8);
  }
  return result;
}

unint64_t sub_1E3E62E24()
{
  unint64_t result = qword_1EBFE60D0;
  if (!qword_1EBFE60D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE60D0);
  }
  return result;
}

unint64_t sub_1E3E62E7C()
{
  unint64_t result = qword_1EBFE60D8;
  if (!qword_1EBFE60D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE60D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CGRect.LayoutAxis()
{
  return &type metadata for CGRect.LayoutAxis;
}

uint64_t sub_1E3E62EE0()
{
  uint64_t result = sub_1E3E7CCF0();
  qword_1EAE29EE0 = result;
  return result;
}

id static NSNotificationName.VolumeLevelDidChange.getter()
{
  if (qword_1EAE245A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_1EAE29EE0;

  return v0;
}

void static NSNotificationName.VolumeLevelDidChange.setter(uint64_t a1)
{
  if (qword_1EAE245A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v2 = (void *)qword_1EAE29EE0;
  qword_1EAE29EE0 = a1;
}

uint64_t (*static NSNotificationName.VolumeLevelDidChange.modify())()
{
  if (qword_1EAE245A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1E3E630A4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  double v3 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v1 + 24))(v6, ObjectType, v1);
  *double v4 = *v4 + 0.05;
  v3(v6, 0);
  id v5 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EAE245A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  objc_msgSend(v5, sel_postNotificationName_object_, qword_1EAE29EE0, 0);
}

float sub_1E3E631C0()
{
  return 0.05;
}

void sub_1E3E631D0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  double v3 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v1 + 24))(v6, ObjectType, v1);
  *double v4 = *v4 + -0.05;
  v3(v6, 0);
  id v5 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EAE245A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  objc_msgSend(v5, sel_postNotificationName_object_, qword_1EAE29EE0, 0);
}

uint64_t sub_1E3E632EC()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1E3E63324()
{
}

void sub_1E3E63348()
{
}

uint64_t sub_1E3E6336C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t sub_1E3E633B0(float a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, float))(v3 + 16))(ObjectType, v3, a1);
}

id sub_1E3E63404()
{
  return objc_msgSend(*v0, sel_increaseVolume);
}

id sub_1E3E63414()
{
  return objc_msgSend(*v0, sel_decreaseVolume);
}

id sub_1E3E63424()
{
  return objc_msgSend(*v0, sel_volumeValue);
}

id sub_1E3E63434()
{
  return objc_msgSend(*v0, sel_setVolumeValue_);
}

id sub_1E3E63444()
{
  return objc_msgSend(*v0, sel_isVolumeControlAvailable);
}

uint64_t sub_1E3E63468(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1E3E6347C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1E3E63490(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1E3E634A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1E3E634B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1E3E634CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t _s22PlayerVolumeControllerCMa()
{
  return self;
}

uint64_t SearchScope.searchHintsFilter.getter(char a1)
{
  return sub_1E3E63DC4(a1, MEMORY[0x1E4F91C20], MEMORY[0x1E4F91C18]);
}

PodcastsUI::SearchScope_optional __swiftcall SearchScope.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1E3E7E050();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = PodcastsUI_SearchScope_store;
  }
  else {
    v2.value = PodcastsUI_SearchScope_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t SearchScope.rawValue.getter(char a1)
{
  if (a1) {
    return 0x65726F7473;
  }
  else {
    return 0x7972617262696CLL;
  }
}

uint64_t sub_1E3E635B8(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x65726F7473;
  }
  else {
    uint64_t v3 = 0x7972617262696CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (*a2) {
    uint64_t v5 = 0x65726F7473;
  }
  else {
    uint64_t v5 = 0x7972617262696CLL;
  }
  if (*a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1E3E7E150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1E3E63660@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1E3E7E050();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1E3E636C0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7972617262696CLL;
  if (*v1) {
    uint64_t v2 = 0x65726F7473;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1E3E636FC()
{
  return sub_1E3E7D030();
}

uint64_t sub_1E3E6375C()
{
  return sub_1E3E7CFF0();
}

uint64_t sub_1E3E637AC()
{
  return sub_1E3E7E2B0();
}

uint64_t sub_1E3E6382C()
{
  sub_1E3E7CE50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E3E63898()
{
  return sub_1E3E7E2B0();
}

id sub_1E3E63914()
{
  id result = objc_msgSend(self, sel_supportsLocalLibrary);
  byte_1EAE29EE8 = result ^ 1;
  return result;
}

uint64_t static SearchScope.default.getter()
{
  if (qword_1EAE245A8 != -1) {
    swift_once();
  }
  return byte_1EAE29EE8;
}

id sub_1E3E63998()
{
  id result = objc_msgSend(self, sel_supportsLocalLibrary);
  uint64_t v1 = &unk_1F3F47CF0;
  if (result) {
    uint64_t v1 = &unk_1F3F47CC8;
  }
  off_1EBFE5478 = v1;
  return result;
}

uint64_t static SearchScope.allCases.getter()
{
  if (qword_1EBFE5480 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3E63A40@<X0>(void *a1@<X8>)
{
  if (qword_1EBFE5480 != -1) {
    swift_once();
  }
  *a1 = off_1EBFE5478;

  return swift_bridgeObjectRetain();
}

PodcastsUI::SearchScope __swiftcall SearchScope.init(index:)(Swift::Int index)
{
  if (qword_1EBFE5480 == -1)
  {
    if (index < 0) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_once();
    if (index < 0) {
      goto LABEL_6;
    }
  }
  if (*((void *)off_1EBFE5478 + 2) > index)
  {
    uint64_t v2 = (PodcastsUI::SearchScope *)off_1EBFE5478 + index + 32;
    return *v2;
  }
LABEL_6:
  if (qword_1EAE245A8 != -1) {
    swift_once();
  }
  uint64_t v2 = (PodcastsUI::SearchScope *)&byte_1EAE29EE8;
  return *v2;
}

uint64_t SearchScope.index.getter(char a1)
{
  if (qword_1EBFE5480 != -1) {
    swift_once();
  }
  uint64_t v2 = off_1EBFE5478;
  uint64_t v3 = *((void *)off_1EBFE5478 + 2);
  if (!v3) {
    return 0;
  }
  if (a1) {
    uint64_t v4 = 0x65726F7473;
  }
  else {
    uint64_t v4 = 0x7972617262696CLL;
  }
  if (a1) {
    unint64_t v5 = 0xE500000000000000;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    if (v2[v6 + 32]) {
      uint64_t v7 = 0x65726F7473;
    }
    else {
      uint64_t v7 = 0x7972617262696CLL;
    }
    if (v2[v6 + 32]) {
      unint64_t v8 = 0xE500000000000000;
    }
    else {
      unint64_t v8 = 0xE700000000000000;
    }
    if (v7 == v4 && v8 == v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v6;
    }
    char v10 = sub_1E3E7E150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      break;
    }
    if (v3 == ++v6)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t SearchScope.title.getter()
{
  return sub_1E3E79530();
}

uint64_t SearchScope.placeholderText.getter()
{
  return sub_1E3E79530();
}

uint64_t SearchScope.targetID.getter(char a1)
{
  return sub_1E3E63DC4(a1, MEMORY[0x1E4F91918], MEMORY[0x1E4F91910]);
}

uint64_t sub_1E3E63DC4(char a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  if (a1) {
    return a3();
  }
  else {
    return a2();
  }
}

unint64_t sub_1E3E63DDC()
{
  unint64_t result = qword_1EAE29EF0;
  if (!qword_1EAE29EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29EF0);
  }
  return result;
}

unint64_t sub_1E3E63E34()
{
  unint64_t result = qword_1EAE29EF8;
  if (!qword_1EAE29EF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE29F00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29EF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchScope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E63F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchScope()
{
  return &type metadata for SearchScope;
}

unint64_t sub_1E3E63F94()
{
  unint64_t result = qword_1EBFE5488;
  if (!qword_1EBFE5488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE5488);
  }
  return result;
}

uint64_t sub_1E3E63FE8(uint64_t a1, void *a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    id v5 = a2;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v7 = *(void *)(a1 + 8 * i + 32);
      if (objc_msgSend(v5, sel_itemExistsWithPersistentID_, v7)
        && objc_msgSend(v5, sel_itemWithPersistentID_, v7))
      {
        MEMORY[0x1E4E76960]();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E3E7D090();
        }
        sub_1E3E7D100();
        sub_1E3E7D080();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v8 = v11;
  }
  else
  {
    id v9 = a2;
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }

  swift_release();
  return v8;
}

id MPMediaLibrary.podcastsAssetsAsPercentageOfTotalVolumeSpace.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E77D00();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(v1, sel_databasePath, v4);
  if (result)
  {
    uint64_t v8 = result;
    sub_1E3E7CD30();

    sub_1E3E77C20();
    swift_bridgeObjectRelease();
    _sSo14MPMediaLibraryC10PodcastsUIE05totalC14AssetsFileSizeSivg_0();
    sub_1E3E77BC0();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MPMediaLibrary.checkSizeOfEpisodesToBeDeleted(for:completion:)(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  double v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E3E7A880();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7A840();
  double v15 = sub_1E3E7A860();
  os_log_type_t v16 = sub_1E3E7D4C0();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v36 = a1;
  if (v17)
  {
    double v33 = v10;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v34 = v4;
    CGRect v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = a3;
    uint64_t v21 = v20;
    uint64_t v37 = a1;
    uint64_t v38 = v20;
    uint64_t v32 = v11;
    *(_DWORD *)CGRect v19 = 136315138;
    type metadata accessor for MTPodcastEpisodeLimit(0);
    uint64_t v22 = sub_1E3E7CD90();
    uint64_t v37 = sub_1E3C150B8(v22, v23, &v38);
    char v10 = v33;
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v15, v16, "Checking the size of episodes to be deleted for episode limit: %s", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v21;
    a3 = v35;
    MEMORY[0x1E4E79510](v24, -1, -1);
    double v25 = v19;
    double v4 = v34;
    MEMORY[0x1E4E79510](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v32);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if ((sub_1E3E65388() & 1) == 0) {
    return a2(0);
  }
  sub_1E3E7D1C0();
  uint64_t v26 = sub_1E3E7D1E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
  double v27 = (void *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  uint64_t v28 = v36;
  v27[4] = v4;
  v27[5] = v28;
  v27[6] = a2;
  v27[7] = a3;
  id v29 = v4;
  sub_1E3E775E0();
  sub_1E3C4CD5C((uint64_t)v10, (uint64_t)&unk_1EAE29F10, (uint64_t)v27);
  return swift_release();
}

uint64_t sub_1E3E645CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  uint64_t v9 = sub_1E3E7B770();
  v7[13] = v9;
  v7[14] = *(void *)(v9 - 8);
  v7[15] = swift_task_alloc();
  uint64_t v10 = sub_1E3E7B7C0();
  v7[16] = v10;
  v7[17] = *(void *)(v10 - 8);
  v7[18] = swift_task_alloc();
  uint64_t v11 = sub_1E3E7A880();
  v7[19] = v11;
  v7[20] = *(void *)(v11 - 8);
  v7[21] = swift_task_alloc();
  uint64_t v12 = (void *)swift_task_alloc();
  v7[22] = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1E3E64790;
  v12[88] = a5;
  return MEMORY[0x1F4188298](sub_1E3E65ACC, 0, 0);
}

uint64_t sub_1E3E64790(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E3E64AC4;
  }
  else
  {
    *(void *)(v4 + 192) = a1;
    uint64_t v5 = sub_1E3E648B8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1E3E648B8()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[18];
  uint64_t v13 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v14 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v12 = (void *)sub_1E3E7D5F0();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v7;
  v8[4] = v1;
  v0[6] = sub_1E3E65EFC;
  v0[7] = v8;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1E3CE65F8;
  v0[5] = &block_descriptor_37;
  uint64_t v9 = _Block_copy(v0 + 2);
  sub_1E3E775E0();
  sub_1E3E7B7A0();
  v0[8] = MEMORY[0x1E4FBC860];
  sub_1E3C33F04();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C8E088();
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v2, v3, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1E3E64AC4()
{
  double v33 = v0;
  uint64_t v1 = (void *)v0[23];
  sub_1E3E7A840();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1E3E7A860();
  os_log_type_t v5 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[23];
    uint64_t v7 = v0[20];
    uint64_t v29 = v0[19];
    uint64_t v31 = v0[21];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v32 = v9;
    v0[9] = v6;
    id v10 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6400);
    uint64_t v11 = sub_1E3E7CD90();
    v0[10] = sub_1E3C150B8(v11, v12, &v32);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1E3BC5000, v4, v5, "Encountered a critical error while computing the size of episodes to be deleted. Returning 0 bytes reclaimed: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v9, -1, -1);
    MEMORY[0x1E4E79510](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v31, v29);
  }
  else
  {
    uint64_t v13 = (void *)v0[23];
    uint64_t v15 = v0[20];
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[19];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v18 = v0[17];
  uint64_t v17 = v0[18];
  uint64_t v19 = v0[15];
  uint64_t v30 = v0[16];
  uint64_t v20 = v0[13];
  uint64_t v21 = v0[14];
  uint64_t v22 = v0[11];
  uint64_t v23 = v0[12];
  sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v28 = (void *)sub_1E3E7D5F0();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v22;
  v24[3] = v23;
  v24[4] = 0;
  v0[6] = sub_1E3E65EFC;
  v0[7] = v24;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1E3CE65F8;
  v0[5] = &block_descriptor_37;
  double v25 = _Block_copy(v0 + 2);
  sub_1E3E775E0();
  sub_1E3E7B7A0();
  v0[8] = MEMORY[0x1E4FBC860];
  sub_1E3C33F04();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEE10);
  sub_1E3C8E088();
  sub_1E3E7DCC0();
  MEMORY[0x1E4E76FF0](0, v17, v19, v25);
  _Block_release(v25);

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v30);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_1E3E64E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1E3E64F24;
  return MEMORY[0x1F41459B8](a3, a2);
}

uint64_t sub_1E3E64F24(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1E3E65070, 0, 0);
  }
}

uint64_t sub_1E3E65070()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _sSo14MPMediaLibraryC10PodcastsUIE4size2ofSiSaySo0A4ItemCG_tF_0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1E3E7DFC0();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_20;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = *MEMORY[0x1E4F31360];
  while (1)
  {
    id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E4E77720](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    uint64_t v8 = v7;
    if (objc_msgSend(v7, sel_valueForProperty_, v6))
    {
      sub_1E3E7DCA0();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v11, 0, sizeof(v11));
    }
    sub_1E3C6FF50((uint64_t)v11, (uint64_t)v12);
    if (v13) {
      break;
    }
    sub_1E3C2AC28((uint64_t)v12);
LABEL_6:
    if (v2 == ++v5) {
      goto LABEL_18;
    }
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  BOOL v9 = __OFADD__(v4, v10);
  v4 += v10;
  if (!v9) {
    goto LABEL_6;
  }
  __break(1u);
LABEL_18:
  swift_bridgeObjectRelease();
  return v4;
}

id _sSo14MPMediaLibraryC10PodcastsUIE05totalC14AssetsFileSizeSivg_0()
{
  sub_1E3E7CD30();
  uint64_t v0 = sub_1E3E7E1E0();
  uint64_t v1 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(self, sel_predicateWithValue_forProperty_, v0, v1);
  swift_unknownObjectRelease();

  id v3 = objc_msgSend(self, sel_podcastsQuery);
  objc_msgSend(v3, sel_setFilterPropertyPredicate_, v2);
  id v4 = objc_msgSend(v3, sel_items);
  if (v4)
  {
    sub_1E3C12B10(0, &qword_1EBFE2710);
    unint64_t v5 = sub_1E3E7D060();

    id v4 = (id)_sSo14MPMediaLibraryC10PodcastsUIE4size2ofSiSaySo0A4ItemCG_tF_0(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v4;
}

uint64_t sub_1E3E65388()
{
  uint64_t v0 = sub_1E3E7A880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(self, sel_isPodcastsApp) & 1) != 0
    || (objc_msgSend(self, sel_canExtensionOpenDatabase) & 1) != 0)
  {
    return 1;
  }
  sub_1E3E7A840();
  unint64_t v5 = sub_1E3E7A860();
  os_log_type_t v6 = sub_1E3E7D4E0();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl(&dword_1E3BC5000, v5, v6, "Cannot open Podcasts database, outstanding questions are undefined", v7, 2u);
    MEMORY[0x1E4E79510](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 0;
}

uint64_t sub_1E3E65504(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1E3C50ED4;
  return sub_1E3E645CC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1E3E655D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, char a8, double a9)
{
  char v42 = a2;
  uint64_t v44 = a1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2700);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1E3E7A880();
  uint64_t v19 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = swift_allocObject();
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  *(void *)(v22 + 16) = a3;
  *(void *)(v22 + 24) = a4;
  *(void *)(v22 + 32) = a5;
  *(void *)(v22 + 40) = a6;
  *(double *)(v22 + 48) = a9;
  *(void *)(v22 + 56) = a7;
  *(unsigned char *)(v22 + 64) = a8 & 1;
  sub_1E3E775E0();
  id v23 = a6;
  sub_1E3E7A840();
  uint64_t v24 = sub_1E3E7A860();
  os_log_type_t v25 = sub_1E3E7D4C0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    CGRect v39 = v18;
    double v27 = (uint8_t *)v26;
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)double v27 = 136315138;
    uint64_t v45 = v44;
    uint64_t v46 = v28;
    type metadata accessor for MTPodcastEpisodeLimit(0);
    uint64_t v29 = sub_1E3E7CD90();
    uint64_t v45 = sub_1E3C150B8(v29, v30, &v46);
    sub_1E3E7DBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E3BC5000, v24, v25, "Checking the size of episodes to be deleted for episode limit: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E79510](v28, -1, -1);
    uint64_t v31 = v27;
    uint64_t v18 = v39;
    MEMORY[0x1E4E79510](v31, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v43);
  if (sub_1E3E65388())
  {
    sub_1E3E7D1C0();
    uint64_t v32 = sub_1E3E7D1E0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v18, 0, 1, v32);
    double v33 = (void *)swift_allocObject();
    void v33[2] = 0;
    v33[3] = 0;
    uint64_t v34 = v42;
    uint64_t v35 = v44;
    v33[4] = v42;
    v33[5] = v35;
    v33[6] = sub_1E3E659AC;
    v33[7] = v22;
    id v36 = v34;
    sub_1E3E775E0();
    sub_1E3C4CD5C((uint64_t)v18, (uint64_t)&unk_1EAE29F18, (uint64_t)v33);
  }
  else
  {
    uint64_t v37 = swift_allocObject();
    *(unsigned char *)(v37 + 16) = 0;
    sub_1E3DDF364(v40, v41, v37);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1E3E6596C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E659AC(uint64_t a1)
{
  return sub_1E3DDF358(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(double *)(v1 + 48), *(void *)(v1 + 40), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
}

uint64_t sub_1E3E659C4()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E659D8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1E3C19DC4;
  return sub_1E3E645CC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1E3E65AAC(uint64_t a1)
{
  *(void *)(v1 + 704) = a1;
  return MEMORY[0x1F4188298](sub_1E3E65ACC, 0, 0);
}

uint64_t sub_1E3E65ACC()
{
  uint64_t v1 = v0[88];
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_privateQueueContext);
  v0[89] = v3;

  uint64_t v4 = swift_allocObject();
  v0[90] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  id v5 = v3;
  sub_1E3E775E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAE25DE8);
  swift_asyncLet_begin();
  v0[91] = objc_msgSend(self, sel_defaultMediaLibrary);
  return MEMORY[0x1F41881E0](v0 + 2, v0 + 87, sub_1E3E65C1C, v0 + 82);
}

uint64_t sub_1E3E65C1C()
{
  *(void *)(v1 + 736) = v0;
  if (v0) {
    id v2 = sub_1E3E65DB4;
  }
  else {
    id v2 = sub_1E3E65C50;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E3E65C50()
{
  id v1 = *(id *)(v0 + 728);
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1E3E63FE8(v2, v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 744) = _sSo14MPMediaLibraryC10PodcastsUIE4size2ofSiSaySo0A4ItemCG_tF_0(v3);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F41881D0](v0 + 16, v0 + 696, sub_1E3E65D20, v0 + 656);
}

uint64_t sub_1E3E65D20()
{
  return MEMORY[0x1F4188298](sub_1E3E65D3C, 0, 0);
}

uint64_t sub_1E3E65D3C()
{
  swift_release_n();
  id v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 744);
  return v1(v2);
}

uint64_t sub_1E3E65DB4()
{
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 696, sub_1E3E65E34, v0 + 656);
}

uint64_t sub_1E3E65E34()
{
  return MEMORY[0x1F4188298](sub_1E3E65E50, 0, 0);
}

uint64_t sub_1E3E65E50()
{
  swift_release_n();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E3E65EC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1E3E65EFC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1E3E65F2C()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E65F64(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1E3C19DC4;
  return sub_1E3E64E80(a1, v5, v4);
}

uint64_t sub_1E3E66010()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E66048()
{
  uint64_t result = sub_1E3E7CCF0();
  qword_1EAE3BC50 = result;
  return result;
}

uint64_t sub_1E3E66080(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v3 = a1 + 64;
  uint64_t v37 = MEMORY[0x1E4FBC868];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v7) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v7) {
        goto LABEL_39;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v7) {
          goto LABEL_39;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v9 + 4;
          if (v9 + 4 >= v7) {
            goto LABEL_39;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v16 << 6);
    int64_t v9 = v16;
LABEL_6:
    long long v12 = *(_OWORD *)(*(void *)(a1 + 56) + 16 * v11);
    unint64_t v13 = *(void *)(*(void *)(a1 + 56) + 16 * v11 + 8);
    if (v13 >> 60 == 15) {
      goto LABEL_7;
    }
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v19 = v18[1];
    uint64_t v36 = *v18;
    unint64_t v20 = *(void *)(v2 + 16);
    long long v35 = *(_OWORD *)(*(void *)(a1 + 56) + 16 * v11);
    if (*(void *)(v2 + 24) <= v20)
    {
      uint64_t v22 = v20 + 1;
      uint64_t v23 = *(void *)(*(void *)(a1 + 56) + 16 * v11);
      sub_1E3C8103C(v12, v13);
      sub_1E3C8103C(v23, v13);
      swift_bridgeObjectRetain();
      sub_1E3D12E04(v22, 1);
      uint64_t v2 = v37;
    }
    else
    {
      uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 16 * v11);
      sub_1E3C8103C(v12, v13);
      sub_1E3C8103C(v21, v13);
      swift_bridgeObjectRetain();
    }
    sub_1E3E7E270();
    sub_1E3E7CE50();
    uint64_t result = sub_1E3E7E2B0();
    uint64_t v24 = v2 + 64;
    uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v2 + 64 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      long long v12 = v35;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v24 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_38;
        }
      }
      goto LABEL_41;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v2 + 64 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    long long v12 = v35;
LABEL_38:
    *(void *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t v33 = 16 * v28;
    uint64_t v34 = (void *)(*(void *)(v2 + 48) + v33);
    *uint64_t v34 = v36;
    v34[1] = v19;
    *(_OWORD *)(*(void *)(v2 + 56) + v33) = v12;
    ++*(void *)(v2 + 16);
LABEL_7:
    uint64_t result = sub_1E3C634A4(v12, v13);
  }
  int64_t v17 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_1E3C1E444();
    return v2;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v7) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

id IMPlayerItem.populateContentItem(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E3E77D00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v170 = v4;
  uint64_t v171 = v5;
  MEMORY[0x1F4188790](v4);
  v165 = (char *)&v164 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v167 = (char *)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v168 = (uint64_t)&v164 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v166 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v164 - v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v164 = (char *)&v164 - v14;
  MEMORY[0x1F4188790](v15);
  int64_t v17 = (char *)&v164 - v16;
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v164 - v19;
  uint64_t v21 = sub_1E3E77E20();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  v169 = (char *)&v164 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  double v25 = MEMORY[0x1F4188790](v24 - 8);
  unint64_t v27 = (char *)&v164 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = objc_msgSend(v1, sel_album, v25);
  objc_msgSend(a1, sel_setAlbumArtistName_, v28);

  id v29 = objc_msgSend(v2, sel_author);
  objc_msgSend(a1, sel_setTrackArtistName_, v29);

  id v30 = objc_msgSend(v2, sel_title);
  objc_msgSend(a1, sel_setTitle_, v30);

  objc_msgSend(v2, sel_duration);
  objc_msgSend(a1, sel_setDuration_);
  objc_msgSend(v2, sel_playhead);
  objc_msgSend(a1, sel_setElapsedTime_);
  objc_msgSend(a1, sel_setPlaybackRate_, 0.0);
  id v31 = objc_msgSend(v2, sel_album);
  objc_msgSend(a1, sel_setAlbumName_, v31);

  id v32 = 0;
  if (objc_msgSend(v2, sel_areChaptersLoaded))
  {
    id v33 = objc_msgSend(v2, sel_timeChapters);
    if (v33)
    {
      uint64_t v34 = v33;
      id v32 = objc_msgSend(v33, sel_count);
    }
    else
    {
      id v32 = 0;
    }
  }
  objc_msgSend(a1, sel_setNumberOfChildren_, v32);
  objc_msgSend(a1, sel_setContainer_, (uint64_t)objc_msgSend(a1, sel_numberOfChildren) > 0);
  objc_msgSend(a1, sel_setHasArtwork_, 1);
  id v35 = objc_msgSend(v2, sel_artworkIdentifier);
  objc_msgSend(a1, sel_setArtworkIdentifier_, v35);

  id v36 = objc_msgSend(a1, sel_identifier);
  uint64_t v37 = sub_1E3E7CD30();
  uint64_t v39 = v38;

  v176[0] = v37;
  v176[1] = v39;
  sub_1E3C10C8C();
  uint64_t v40 = sub_1E3E7DC50();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setLegacyUniqueID_, v40);
  objc_msgSend(a1, sel_setSharableItem_, 1);
  objc_msgSend(a1, sel_setHasDescription_, 1);
  objc_msgSend(a1, sel_setStoreID_, objc_msgSend(v2, sel_episodeStoreId));
  objc_msgSend(a1, sel_setStoreAlbumID_, objc_msgSend(v2, sel_podcastStoreId));
  id v41 = objc_msgSend(v2, sel_episodeGuid);
  if (v41 || (id v41 = objc_msgSend(v2, sel_episodeUuid)) != 0)
  {
    sub_1E3E7CD30();

    id v41 = (id)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setExternalContentIdentifier_, v41);

  id v42 = objc_msgSend(v2, sel_podcastUuid);
  objc_msgSend(a1, sel_setCollectionIdentifier_, v42);

  if (objc_msgSend(v2, sel_isVideo)) {
    uint64_t v43 = 1024;
  }
  else {
    uint64_t v43 = 2;
  }
  objc_msgSend(a1, sel_setMediaType_, v43);
  objc_msgSend(a1, sel_setSeasonNumber_, objc_msgSend(v2, sel_seasonNumber));
  objc_msgSend(a1, sel_setEpisodeNumber_, objc_msgSend(v2, sel_episodeNumber));
  unint64_t v44 = (unint64_t)objc_msgSend(v2, sel_episodeType);
  uint64_t v45 = v170;
  if (v44 > 2) {
    uint64_t v46 = 1;
  }
  else {
    uint64_t v46 = qword_1E3E97DE0[v44];
  }
  objc_msgSend(a1, sel_setEpisodeType_, v46);
  objc_msgSend(a1, sel_setPlayable_, 1);
  id v47 = objc_msgSend(v2, sel_pubDate);
  if (v47)
  {
    uint64_t v48 = v169;
    sub_1E3E77DF0();

    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v48, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v27, 0, 1, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v27, 1, v21) == 1)
    {
      id v47 = 0;
    }
    else
    {
      id v47 = (id)sub_1E3E77DD0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v27, 1, 1, v21);
  }
  uint64_t v49 = v171;
  objc_msgSend(a1, sel_setReleaseDate_, v47);

  uint64_t v50 = MEMORY[0x1E4FBC868];
  uint64_t v177 = MEMORY[0x1E4FBC868];
  id v51 = objc_msgSend(v2, sel_podcastFeedUrl);
  if (v51)
  {
    id v52 = v51;
    uint64_t v53 = sub_1E3E7CD30();
    uint64_t v55 = v54;

    *(void *)&long long v174 = sub_1E3E7CD30();
    *((void *)&v174 + 1) = v56;
    uint64_t v57 = MEMORY[0x1E4FBB1A0];
    sub_1E3E7DD60();
    uint64_t v175 = v57;
    *(void *)&long long v174 = v53;
    *((void *)&v174 + 1) = v55;
    sub_1E3C1B524(&v174, v173);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v172 = v50;
    sub_1E3E67B8C(v173, (uint64_t)v176, isUniquelyReferenced_nonNull_native);
    uint64_t v177 = v172;
    swift_bridgeObjectRelease();
    sub_1E3C1B480((uint64_t)v176);
  }
  id v59 = objc_msgSend(v2, sel_episodeShareUrl);
  if (v59)
  {
    id v60 = v59;
    sub_1E3E77C90();

    objc_super v61 = *(char **)(v49 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v61)(v17, 0, 1, v45);
  }
  else
  {
    objc_super v61 = *(char **)(v49 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v61)(v17, 1, 1, v45);
  }
  sub_1E3C24558((uint64_t)v17, (uint64_t)v20);
  v169 = *(char **)(v49 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v169)(v20, 1, v45))
  {
    sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE6070);
  }
  else
  {
    uint64_t v62 = v165;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v165, v20, v45);
    sub_1E3C10CE0((uint64_t)v20, &qword_1EBFE6070);
    uint64_t v63 = sub_1E3E77C00();
    uint64_t v65 = v64;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v62, v45);
    if (sub_1E3E7CE60() < 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)&long long v174 = sub_1E3E7CD30();
      *((void *)&v174 + 1) = v66;
      uint64_t v67 = MEMORY[0x1E4FBB1A0];
      sub_1E3E7DD60();
      uint64_t v175 = v67;
      *(void *)&long long v174 = v63;
      *((void *)&v174 + 1) = v65;
      sub_1E3C1B524(&v174, v173);
      uint64_t v68 = v177;
      char v69 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v172 = v68;
      sub_1E3E67B8C(v173, (uint64_t)v176, v69);
      uint64_t v177 = v172;
      swift_bridgeObjectRelease();
      sub_1E3C1B480((uint64_t)v176);
    }
  }
  uint64_t v70 = (uint64_t)v166;
  unsigned __int8 v71 = objc_msgSend(v2, sel_supportsArtworkUrl);
  uint64_t v72 = MEMORY[0x1E4FBB390];
  uint64_t v166 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v61;
  if (v71)
  {
    id v73 = objc_msgSend(v2, sel_artworkUrl);
    if (v73)
    {
      uint64_t v74 = v73;
      sub_1E3E77C90();

      uint64_t v75 = 0;
    }
    else
    {
      uint64_t v75 = 1;
    }
    uint64_t v78 = (uint64_t)v164;
    uint64_t v79 = v171;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v61)(v70, v75, 1, v45);
    sub_1E3C24558(v70, v78);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v169)(v78, 1, v45))
    {
      sub_1E3C10CE0(v78, &qword_1EBFE6070);
      int64_t v80 = 0;
    }
    else
    {
      uint64_t v81 = v165;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v165, v78, v45);
      sub_1E3C10CE0(v78, &qword_1EBFE6070);
      sub_1E3E77C00();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v81, v45);
      int64_t v80 = (void *)sub_1E3E7CCF0();
      swift_bridgeObjectRelease();
    }
    uint64_t v77 = &selRef__addCategoryMethod_toClass_isClass_;
    objc_msgSend(a1, sel_setArtworkURL_, v80);

    *(void *)&long long v174 = sub_1E3E7CD30();
    *((void *)&v174 + 1) = v82;
    sub_1E3E7DD60();
    uint64_t v175 = v72;
    LOBYTE(v174) = 1;
    sub_1E3C1B524(&v174, v173);
    uint64_t v83 = v177;
    char v84 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v172 = v83;
    sub_1E3E67B8C(v173, (uint64_t)v176, v84);
    uint64_t v76 = v172;
    swift_bridgeObjectRelease();
    sub_1E3C1B480((uint64_t)v176);
  }
  else
  {
    uint64_t v76 = v177;
    uint64_t v77 = &selRef__addCategoryMethod_toClass_isClass_;
  }
  *(void *)&long long v174 = sub_1E3E7CD30();
  *((void *)&v174 + 1) = v85;
  uint64_t v86 = MEMORY[0x1E4FBB1A0];
  sub_1E3E7DD60();
  unsigned __int8 v87 = objc_msgSend(v2, sel_isNotSubscribeable);
  uint64_t v175 = v72;
  LOBYTE(v174) = v87 ^ 1;
  sub_1E3C1B524(&v174, v173);
  char v88 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v172 = v76;
  sub_1E3E67B8C(v173, (uint64_t)v176, v88);
  uint64_t v89 = v172;
  swift_bridgeObjectRelease();
  sub_1E3C1B480((uint64_t)v176);
  *(void *)&long long v174 = sub_1E3E7CD30();
  *((void *)&v174 + 1) = v90;
  sub_1E3E7DD60();
  unsigned __int8 v91 = objc_msgSend(v2, sel_isPlaceholder);
  uint64_t v175 = v72;
  LOBYTE(v174) = v91;
  sub_1E3C1B524(&v174, v173);
  char v92 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v172 = v89;
  sub_1E3E67B8C(v173, (uint64_t)v176, v92);
  uint64_t v93 = v172;
  uint64_t v177 = v172;
  swift_bridgeObjectRelease();
  sub_1E3C1B480((uint64_t)v176);
  unsigned int v94 = objc_msgSend(v2, sel_podcastIsSerial);
  *(void *)&long long v174 = sub_1E3E7CD30();
  *((void *)&v174 + 1) = v95;
  sub_1E3E7DD60();
  if (v94) {
    uint64_t v96 = 2;
  }
  else {
    uint64_t v96 = 1;
  }
  uint64_t v175 = MEMORY[0x1E4FBB550];
  *(void *)&long long v174 = v96;
  sub_1E3C1B524(&v174, v173);
  char v97 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v172 = v93;
  sub_1E3E67B8C(v173, (uint64_t)v176, v97);
  uint64_t v98 = v172;
  swift_bridgeObjectRelease();
  sub_1E3C1B480((uint64_t)v176);
  uint64_t v177 = v98;
  id v99 = [v2 v77[480]];
  uint64_t v100 = MEMORY[0x1E4FBC868];
  if (v99)
  {
    id v101 = v99;
    uint64_t v102 = sub_1E3E7CD30();
    uint64_t v104 = v103;

    *(void *)&long long v174 = sub_1E3E7CD30();
    *((void *)&v174 + 1) = v105;
    sub_1E3E7DD60();
    uint64_t v175 = v86;
    *(void *)&long long v174 = v102;
    *((void *)&v174 + 1) = v104;
    sub_1E3C1B524(&v174, v173);
    char v106 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v172 = v100;
    sub_1E3E67B8C(v173, (uint64_t)v176, v106);
    uint64_t v100 = v172;
    swift_bridgeObjectRelease();
    sub_1E3C1B480((uint64_t)v176);
  }
  *(void *)&long long v174 = sub_1E3E7CD30();
  *((void *)&v174 + 1) = v107;
  sub_1E3E7DD60();
  unsigned __int8 v108 = objc_msgSend(v2, sel_isLocal);
  uint64_t v175 = v72;
  LOBYTE(v174) = v108;
  sub_1E3C1B524(&v174, v173);
  char v109 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v172 = v100;
  sub_1E3E67B8C(v173, (uint64_t)v176, v109);
  swift_bridgeObjectRelease();
  sub_1E3C1B480((uint64_t)v176);
  objc_msgSend(a1, sel_setSharableItem_, 1);
  id v110 = objc_msgSend(v2, sel_showArtworkProperties);
  if (v110)
  {
    int v111 = v110;
    uint64_t v112 = sub_1E3E78C10();
    uint64_t v114 = v113;

    *(void *)&long long v174 = sub_1E3E7CD30();
    *((void *)&v174 + 1) = v115;
    sub_1E3E7DD60();
    uint64_t v175 = v86;
    *(void *)&long long v174 = v112;
    *((void *)&v174 + 1) = v114;
    sub_1E3C1B524(&v174, v173);
    char v116 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v172 = v98;
    sub_1E3E67B8C(v173, (uint64_t)v176, v116);
    uint64_t v98 = v172;
    uint64_t v177 = v172;
    swift_bridgeObjectRelease();
    sub_1E3C1B480((uint64_t)v176);
  }
  *(void *)&long long v174 = sub_1E3E7CD30();
  *((void *)&v174 + 1) = v117;
  sub_1E3E7DD60();
  uint64_t v118 = sub_1E3E679C0();
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2BD0);
  *(void *)&long long v174 = v118;
  sub_1E3C1B524(&v174, v173);
  char v119 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v172 = v98;
  sub_1E3E67B8C(v173, (uint64_t)v176, v119);
  uint64_t v120 = v172;
  uint64_t v177 = v172;
  swift_bridgeObjectRelease();
  sub_1E3C1B480((uint64_t)v176);
  if (sub_1E3E783F0())
  {
    *(void *)&long long v174 = sub_1E3E7CD30();
    *((void *)&v174 + 1) = v121;
    uint64_t v122 = MEMORY[0x1E4FBB1A0];
    sub_1E3E7DD60();
    id v123 = objc_msgSend(v2, sel_transcriptIdentifier);
    if (v123)
    {
      long long v124 = v123;
      uint64_t v125 = sub_1E3E7CD30();
      uint64_t v127 = v126;

      uint64_t v175 = v122;
      *(void *)&long long v174 = v125;
      *((void *)&v174 + 1) = v127;
      sub_1E3C1B524(&v174, v173);
      char v128 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v172 = v120;
      sub_1E3E67B8C(v173, (uint64_t)v176, v128);
      uint64_t v177 = v172;
      swift_bridgeObjectRelease();
      sub_1E3C1B480((uint64_t)v176);
    }
    else
    {
      sub_1E3D5A36C((uint64_t)v176, &v174);
      sub_1E3C1B480((uint64_t)v176);
      sub_1E3C10CE0((uint64_t)&v174, &qword_1EBFE6190);
    }
    *(void *)&long long v174 = sub_1E3E7CD30();
    *((void *)&v174 + 1) = v129;
    uint64_t v130 = MEMORY[0x1E4FBB1A0];
    sub_1E3E7DD60();
    id v131 = objc_msgSend(v2, sel_transcriptSource);
    if (v131)
    {
      long long v132 = v131;
      uint64_t v133 = sub_1E3E7CD30();
      uint64_t v135 = v134;

      uint64_t v175 = v130;
      *(void *)&long long v174 = v133;
      *((void *)&v174 + 1) = v135;
      sub_1E3C1B524(&v174, v173);
      uint64_t v136 = v177;
      char v137 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v172 = v136;
      sub_1E3E67B8C(v173, (uint64_t)v176, v137);
      uint64_t v177 = v172;
      swift_bridgeObjectRelease();
      sub_1E3C1B480((uint64_t)v176);
    }
    else
    {
      sub_1E3D5A36C((uint64_t)v176, &v174);
      sub_1E3C1B480((uint64_t)v176);
      sub_1E3C10CE0((uint64_t)&v174, &qword_1EBFE6190);
    }
    *(void *)&long long v174 = sub_1E3E7CD30();
    *((void *)&v174 + 1) = v138;
    uint64_t v139 = MEMORY[0x1E4FBB1A0];
    sub_1E3E7DD60();
    id v140 = objc_msgSend(v2, sel_priceType);
    if (v140)
    {
      CFRange v141 = v140;
      uint64_t v142 = sub_1E3E7CD30();
      uint64_t v144 = v143;

      uint64_t v175 = v139;
      *(void *)&long long v174 = v142;
      *((void *)&v174 + 1) = v144;
      sub_1E3C1B524(&v174, v173);
      uint64_t v145 = v177;
      char v146 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v172 = v145;
      sub_1E3E67B8C(v173, (uint64_t)v176, v146);
      uint64_t v177 = v172;
      swift_bridgeObjectRelease();
      sub_1E3C1B480((uint64_t)v176);
    }
    else
    {
      sub_1E3D5A36C((uint64_t)v176, &v174);
      sub_1E3C1B480((uint64_t)v176);
      sub_1E3C10CE0((uint64_t)&v174, &qword_1EBFE6190);
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v147 = (void *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setUserInfo_, v147);

  uint64_t v148 = (void *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setDeviceSpecificUserInfo_, v148);

  objc_msgSend(a1, sel_setExplicitContent_, objc_msgSend(v2, sel_isExplicit));
  objc_msgSend(a1, sel_setPlayCount_, objc_msgSend(v2, sel_playCount));
  id v149 = objc_msgSend(v2, sel_podcastShareUrl);
  if (v149)
  {
    uint64_t v150 = v149;
    uint64_t v151 = (uint64_t)v167;
    sub_1E3E77C90();

    uint64_t v152 = 0;
    uint64_t v153 = v170;
    uint64_t v154 = v171;
  }
  else
  {
    uint64_t v152 = 1;
    uint64_t v153 = v170;
    uint64_t v154 = v171;
    uint64_t v151 = (uint64_t)v167;
  }
  v166(v151, v152, 1, v153);
  uint64_t v155 = v168;
  sub_1E3C24558(v151, v168);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v169)(v155, 1, v153))
  {
    sub_1E3C10CE0(v155, &qword_1EBFE6070);
  }
  else
  {
    v156 = v165;
    (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v165, v155, v153);
    sub_1E3C10CE0(v155, &qword_1EBFE6070);
    uint64_t v157 = sub_1E3E77C00();
    uint64_t v159 = v158;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v156, v153);
    *(void *)&long long v174 = sub_1E3E7CD30();
    *((void *)&v174 + 1) = v160;
    sub_1E3E7DD60();
    uint64_t v175 = v86;
    *(void *)&long long v174 = v157;
    *((void *)&v174 + 1) = v159;
    sub_1E3C1B524(&v174, v173);
    uint64_t v161 = v177;
    char v162 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v172 = v161;
    sub_1E3E67B8C(v173, (uint64_t)v176, v162);
    swift_bridgeObjectRelease();
    sub_1E3C1B480((uint64_t)v176);
  }
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setStreamingContent_, objc_msgSend(v2, sel_isLocal) ^ 1);
  return objc_msgSend(a1, sel_setEditingStyleFlags_, objc_msgSend(v2, sel_editingStyleFlags));
}

uint64_t sub_1E3E679C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2C58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E3E87930;
  *(void *)(inited + 32) = sub_1E3E79940();
  *(void *)(inited + 40) = v3;
  id v4 = objc_msgSend(v0, sel_showArtworkProperties);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1E3E78BE0();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0xF000000000000000;
  }
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = sub_1E3E79950();
  *(void *)(inited + 72) = v9;
  id v10 = objc_msgSend(v1, sel_uberArtworkProperties);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_1E3E78BE0();
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v14 = 0xF000000000000000;
  }
  *(void *)(inited + 80) = v12;
  *(void *)(inited + 88) = v14;
  *(void *)(inited + 96) = sub_1E3E79960();
  *(void *)(inited + 104) = v15;
  id v16 = objc_msgSend(v1, sel_episodeArtworkProperties);
  if (v16)
  {
    int64_t v17 = v16;
    uint64_t v18 = sub_1E3E78BE0();
    unint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v20 = 0xF000000000000000;
  }
  *(void *)(inited + 112) = v18;
  *(void *)(inited + 120) = v20;
  unint64_t v21 = sub_1E3C80D5C(inited);
  uint64_t v22 = sub_1E3E66080(v21);
  swift_bridgeObjectRelease();
  return v22;
}

_OWORD *sub_1E3E67B8C(_OWORD *a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1E3C2E448(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1E3D13114();
      goto LABEL_7;
    }
    sub_1E3D0FCF8(v13, a3 & 1);
    unint64_t v19 = sub_1E3C2E448(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      id v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1E3C30D7C(a2, (uint64_t)v21);
      return sub_1E3E68914(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1E3E7E200();
    __break(1u);
    return result;
  }
LABEL_7:
  id v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  int64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);

  return sub_1E3C1B524(a1, v17);
}

id sub_1E3E67CD8(uint64_t a1, void *a2, char a3)
{
  id v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1E3C2E7AC((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  id result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= (uint64_t)result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= (uint64_t)result && (a3 & 1) == 0)
  {
    id result = sub_1E3D132E4();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      *(void *)(v15[7] + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1E3D0FFEC((uint64_t)result, a3 & 1);
  id result = (id)sub_1E3C2E7AC((uint64_t)a2);
  if ((v13 & 1) != (v16 & 1))
  {
LABEL_17:
    sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE4AD0);
    id result = (id)sub_1E3E7E200();
    __break(1u);
    return result;
  }
  unint64_t v9 = (unint64_t)result;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v17 = 8 * v9;
  *(void *)(v15[6] + v17) = a2;
  *(void *)(v15[7] + v17) = a1;
  uint64_t v18 = v15[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v15[2] = v20;

  return a2;
}

uint64_t sub_1E3E67E40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1E3C2E7FC(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1E3D13488();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      BOOL v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      void *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    unint64_t v21 = (void *)(v18[7] + 16 * v12);
    *unint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      void v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1E3D102BC(result, a4 & 1);
  uint64_t result = sub_1E3C2E7FC(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1E3E7E200();
  __break(1u);
  return result;
}

uint64_t sub_1E3E67F80(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = sub_1E3E77E50();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1E3C2EAA4(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1E3D13A58();
    goto LABEL_7;
  }
  sub_1E3D10F3C(v17, a3 & 1);
  unint64_t v23 = sub_1E3C2EAA4(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1E3E7E200();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1E3E68990(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1E3E68128(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1E3C2EED8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1E3D14144();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1E3D11A14(v15, a4 & 1);
  unint64_t v21 = sub_1E3C2EED8(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1E3E7E200();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E3E68298(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = sub_1E3E7C100();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1E3C2EF6C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1E3D142F8();
    goto LABEL_7;
  }
  sub_1E3D11D28(result, a3 & 1);
  uint64_t result = sub_1E3C2EF6C(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_1E3E7E200();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1E3E68A90(v14, (uint64_t)v11, a1, v20);
}

void sub_1E3E68434(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1E3E68460(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1E3E6848C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1E3C2E48C(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    uint64_t v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];

      *(void *)(v23 + 8 * v16) = a1;
      return;
    }
    goto LABEL_11;
  }
  a6();
  unint64_t v24 = sub_1E3C2E48C(a2, a3);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_17:
    sub_1E3E7E200();
    __break(1u);
    return;
  }
  unint64_t v16 = v24;
  uint64_t v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v26 = (uint64_t *)(v22[6] + 16 * v16);
  uint64_t *v26 = a2;
  v26[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v27 = v22[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v22[2] = v29;

  swift_bridgeObjectRetain();
}

id sub_1E3E68618(uint64_t a1, void *a2, char a3)
{
  id v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1E3C2E8CC((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1E3D14750();
LABEL_7:
    char v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_unknownObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1E3D12470(v12, a3 & 1);
  unint64_t v18 = sub_1E3C2E8CC((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_1E3C12B10(0, &qword_1EAE25080);
    id result = (id)sub_1E3E7E200();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  char v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v15[2] = v23;

  return a2;
}

uint64_t sub_1E3E6878C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1E3C2E48C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1E3D14AC0();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + (v12 << 6);
      return sub_1E3E68B48((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_1E3D12A68(v15, a4 & 1);
  unint64_t v21 = sub_1E3C2E48C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1E3E7E200();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  unint64_t v24 = (_OWORD *)(v18[7] + (v12 << 6));
  long long v25 = *a1;
  long long v26 = a1[1];
  long long v27 = a1[3];
  v24[2] = a1[2];
  v24[3] = v27;
  _OWORD *v24 = v25;
  v24[1] = v26;
  uint64_t v28 = v18[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v18[2] = v30;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1E3E68914(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1E3C1B524(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_1E3E68990(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1E3E77E50();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1E3E68A48(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_1E3E68A90(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1E3E7C100();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1E3E68B48(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E3E68BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for AnyJSIntentModel() + 36);
  uint64_t v6 = sub_1E3E7BAD0();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a3, v6);
}

uint64_t AnyJSIntentModel.kind.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyJSIntentModel.object.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_1E3E7BAD0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

unint64_t AnyJSIntentModel.jsRepresentation(in:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1E3E7BAB0();
  uint64_t v4 = v16;
  if (v16)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v6 = *(void *)(v4 - 8);
    double v7 = MEMORY[0x1F4188790](v5);
    uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v6 + 16))(v9, v7);
    id v10 = a1;
    uint64_t v11 = sub_1E3E7E140();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  else
  {
    id v12 = a1;
    uint64_t v11 = 0;
  }
  id v13 = objc_msgSend(self, sel_valueWithObject_inContext_, v11, a1);
  swift_unknownObjectRelease();

  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4F28);
  unint64_t result = sub_1E3E68E64();
  a2[4] = result;
  *a2 = v13;
  return result;
}

unint64_t sub_1E3E68E64()
{
  unint64_t result = qword_1EBFE5D88;
  if (!qword_1EBFE5D88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE4F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE5D88);
  }
  return result;
}

void sub_1E3E68ED0()
{
}

unint64_t sub_1E3E68EE4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AnyJSIntentModel.jsRepresentation(in:)(a1, a2);
}

uint64_t AnyJSIntentModel.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  v23[0] = a3;
  v23[1] = a4;
  uint64_t v24 = a2;
  uint64_t v7 = sub_1E3E7BAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7BAE0();
  uint64_t v11 = sub_1E3E7BAA0();
  uint64_t v13 = v12;
  BOOL v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if (v13)
  {
    uint64_t v15 = sub_1E3E7BBC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v24, v15);
    return sub_1E3E68BA4(v11, v13, a1, a5);
  }
  else
  {
    uint64_t v17 = sub_1E3E7CAC0();
    sub_1E3D47048();
    swift_allocError();
    uint64_t v19 = v18;
    uint64_t v20 = type metadata accessor for AnyJSIntentModel();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    void *v19 = 0x646E696B24;
    v19[1] = 0xE500000000000000;
    _OWORD v19[2] = v20;
    v19[3] = v21;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4F717E8], v17);
    swift_willThrow();
    uint64_t v22 = sub_1E3E7BBC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v24, v22);
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(a1, v7);
  }
}

uint64_t type metadata accessor for AnyJSIntentModel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E3E6916C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1E3E69188()
{
  return swift_getWitnessTable();
}

uint64_t sub_1E3E691A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return AnyJSIntentModel.init(deserializing:using:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t sub_1E3E691C4()
{
  uint64_t result = sub_1E3E7BAD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1E3E6925C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1E3E7BAD0();
    id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1E3E69344(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1E3E7BAD0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1E3E693BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1E3E7BAD0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1E3E69454(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E7BAD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1E3E694F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1E3E7BAD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1E3E6956C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1E3E7BAD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1E3E695F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E6960C);
}

uint64_t sub_1E3E6960C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E3E7BAD0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1E3E696BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E696D0);
}

uint64_t sub_1E3E696D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1E3E7BAD0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlayEpisodeViewModel()
{
  return &type metadata for FairPlayEpisodeViewModel;
}

uint64_t sub_1E3E69788()
{
  return MEMORY[0x1E4FBB560];
}

uint64_t sub_1E3E69794()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v19[-v5];
  uint64_t v7 = sub_1E3E77E20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1E3CAC398(v0 + 48, (uint64_t)v19, &qword_1EAE26188);
  sub_1E3CAC398((uint64_t)v19, (uint64_t)&v20, &qword_1EAE26188);
  if (v20)
  {
    id v11 = objc_msgSend(v20, sel_renewalDate);
    if (v11)
    {
      uint64_t v12 = v11;
      sub_1E3E77DF0();

      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = 1;
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v3, v13, 1, v7);
    sub_1E3CAC398((uint64_t)v3, (uint64_t)v6, (uint64_t *)&unk_1EBFDEDF0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
      objc_msgSend(v15, sel_setDateStyle_, 1);
      objc_msgSend(v15, sel_setTimeStyle_, 2);
      uint64_t v16 = (void *)sub_1E3E77DD0();
      id v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

      uint64_t v14 = sub_1E3E7CD30();
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
      return v14;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1E3D7616C((uint64_t)v6);
  return 0;
}

uint64_t sub_1E3E69A70(double *a1, double *a2)
{
  return sub_1E3E62518(*a1, a1[1], *a2, a2[1]);
}

BOOL static ApproximatelyEquatable.!=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((*(uint64_t (**)(void))(a4 + 16))() & 1) == 0;
}

uint64_t dispatch thunk of static ApproximatelyEquatable.==~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of static ApproximatelyEquatable.!=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

BOOL sub_1E3E69AE0(double *a1, double *a2)
{
  return sub_1E3E6251C(*a1, *a2);
}

BOOL sub_1E3E69AEC(double *a1, double *a2)
{
  return sub_1E3E62600(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

BOOL sub_1E3E69B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ApproximatelyEquatable.!=~ infix(_:_:)(a1, a2, a3, a4);
}

uint64_t *sub_1E3E69B1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FairPlayKeyViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = *(int *)(v4 + 28);
    uint64_t v23 = v4;
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1E3E77E20();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(v23 + 32);
    id v17 = (char *)a1 + v16;
    unint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1E3E77D00();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_1E3E69DC4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v3 = a1 + *(int *)(v2 + 28);
  uint64_t v4 = sub_1E3E77E20();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v6 = a1 + *(int *)(v2 + 32);
  uint64_t v7 = sub_1E3E77D00();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *sub_1E3E69F54(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v8 = *(int *)(v7 + 28);
  __dst = (char *)a1 + v8;
  uint64_t v22 = v7;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_1E3E77E20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(v22 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1E3E77D00();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

void *sub_1E3E6A1AC(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v5 = *(int *)(v4 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1E3E77E20();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
LABEL_7:
  uint64_t v14 = *(int *)(v4 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1E3E77D00();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

_OWORD *sub_1E3E6A4DC(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v6 = *(int *)(v5 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1E3E77E20();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(v5 + 32);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1E3E77D00();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_1E3E6A6FC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1E3E77E20();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = *(int *)(v7 + 32);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_1E3E77D00();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_1E3E6A9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E6AA10);
}

uint64_t sub_1E3E6AA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1E3E6AA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E6AA90);
}

uint64_t sub_1E3E6AA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FairPlayKeyViewModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FairPlayDebugKeyCell()
{
  uint64_t result = qword_1EAE29F38;
  if (!qword_1EAE29F38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E3E6AB4C()
{
  uint64_t result = type metadata accessor for FairPlayKeyViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1E3E6ABD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E3E6ABF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE27848);
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  id v123 = (char *)v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v133 = (uint64_t)v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_1E3E77D00();
  uint64_t v7 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v121 = (char *)v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120[1] = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v122 = (char *)v120 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29F50);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v145 = (uint64_t)v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v136 = (uint64_t)v120 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBFDEDF0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7B350();
  uint64_t v146 = sub_1E3E7B3A0();
  uint64_t v154 = v18;
  int v128 = v19;
  uint64_t v155 = v20;
  swift_release();
  unint64_t v21 = a1[5];
  uint64_t v134 = v7;
  if (v21)
  {
    unint64_t v22 = a1[4];
    unint64_t v23 = v21;
  }
  else
  {
    unint64_t v22 = 0xD000000000000019;
    unint64_t v23 = 0x80000001E3EA4700;
  }
  unint64_t v163 = v22;
  unint64_t v164 = v23;
  sub_1E3C10C8C();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1E3E7B3D0();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_1E3E7B2A0();
  uint64_t v152 = sub_1E3E7B3A0();
  uint64_t v144 = v29;
  int v127 = v30;
  uint64_t v153 = v31;
  swift_release();
  sub_1E3C82280(v24, v26, v28);
  swift_bridgeObjectRelease();
  sub_1E3E7B350();
  uint64_t v150 = sub_1E3E7B3A0();
  uint64_t v149 = v32;
  int v126 = v33;
  uint64_t v151 = v34;
  swift_release();
  uint64_t v35 = sub_1E3D75E70();
  if (v36)
  {
    unint64_t v163 = v35;
    unint64_t v164 = v36;
    uint64_t v37 = sub_1E3E7B3D0();
    uint64_t v39 = v38;
    char v41 = v40 & 1;
    sub_1E3E7B2A0();
    uint64_t v42 = sub_1E3E7B3A0();
    uint64_t v157 = v43;
    uint64_t v158 = v42;
    char v45 = v44;
    uint64_t v156 = v46;
    swift_release();
    uint64_t v47 = v45 & 1;
    sub_1E3C82280(v37, v39, v41);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v157 = 0;
    uint64_t v158 = 0;
    uint64_t v47 = 0;
    uint64_t v156 = 0;
  }
  uint64_t v48 = type metadata accessor for FairPlayKeyViewModel();
  sub_1E3C34078((uint64_t)a1 + *(int *)(v48 + 28), (uint64_t)v17, (uint64_t *)&unk_1EBFDEDF0);
  uint64_t v49 = sub_1E3E77E20();
  uint64_t v50 = *(void *)(v49 - 8);
  int v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v17, 1, v49);
  uint64_t v148 = v47;
  if (v51 == 1)
  {
    sub_1E3C10CE0((uint64_t)v17, (uint64_t *)&unk_1EBFDEDF0);
    unint64_t v52 = 0x80000001E3EA4720;
    uint64_t v53 = 0xD000000000000018;
  }
  else
  {
    uint64_t v53 = sub_1E3E77DB0();
    unint64_t v52 = v54;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v49);
  }
  unint64_t v163 = v53;
  unint64_t v164 = v52;
  uint64_t v55 = sub_1E3E7B3D0();
  uint64_t v57 = v56;
  char v59 = v58 & 1;
  sub_1E3E7B2A0();
  uint64_t v147 = sub_1E3E7B3A0();
  uint64_t v142 = v60;
  int v131 = v61;
  uint64_t v143 = v62;
  swift_release();
  sub_1E3C82280(v55, v57, v59);
  swift_bridgeObjectRelease();
  sub_1E3E7B350();
  uint64_t v140 = sub_1E3E7B3A0();
  uint64_t v139 = v63;
  int v125 = v64;
  uint64_t v141 = v65;
  swift_release();
  unint64_t v66 = a1[3];
  unint64_t v163 = a1[2];
  unint64_t v164 = v66;
  swift_bridgeObjectRetain();
  uint64_t v67 = sub_1E3E7B3D0();
  uint64_t v69 = v68;
  char v71 = v70 & 1;
  sub_1E3E7B2A0();
  uint64_t v132 = sub_1E3E7B3A0();
  uint64_t v137 = v72;
  int v124 = v73;
  uint64_t v138 = v74;
  swift_release();
  sub_1E3C82280(v67, v69, v71);
  swift_bridgeObjectRelease();
  uint64_t v75 = v133;
  sub_1E3C34078((uint64_t)a1 + *(int *)(v48 + 32), v133, &qword_1EBFE6070);
  uint64_t v76 = v134;
  uint64_t v77 = v135;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v75, 1, v135) == 1)
  {
    sub_1E3C10CE0(v75, &qword_1EBFE6070);
    uint64_t v78 = 1;
    uint64_t v79 = v136;
    uint64_t v80 = v130;
    uint64_t v81 = v129;
  }
  else
  {
    uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 32);
    uint64_t v83 = v122;
    v82(v122, v75, v77);
    char v84 = v121;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v121, v83, v77);
    unint64_t v85 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    uint64_t v86 = swift_allocObject();
    v82((char *)(v86 + v85), (uint64_t)v84, v77);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE277B0);
    sub_1E3C10DE8(&qword_1EAE277B8, &qword_1EAE277B0);
    unsigned __int8 v87 = v123;
    sub_1E3E7B660();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v83, v77);
    uint64_t v81 = v129;
    uint64_t v79 = v136;
    uint64_t v80 = v130;
    (*(void (**)(uint64_t, char *, uint64_t))(v129 + 32))(v136, v87, v130);
    uint64_t v78 = 0;
  }
  char v88 = v128;
  char v89 = v127;
  char v90 = v126;
  char v91 = v125;
  char v92 = v124;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v79, v78, 1, v80);
  char v93 = v88 & 1;
  LOBYTE(v163) = v88 & 1;
  uint64_t v94 = v79;
  char v95 = v92 & 1;
  LODWORD(v135) = v92 & 1;
  int v96 = v91 & 1;
  v90 &= 1u;
  char v97 = v89 & 1;
  char v162 = v89 & 1;
  char v161 = v90;
  char v98 = v131 & 1;
  char v160 = v131 & 1;
  char v159 = v96;
  char v99 = v96;
  LODWORD(v134) = v96;
  uint64_t v100 = v145;
  sub_1E3C34078(v94, v145, &qword_1EAE29F50);
  uint64_t v101 = v146;
  uint64_t v102 = v154;
  *(void *)a2 = v146;
  *(void *)(a2 + 8) = v102;
  *(unsigned char *)(a2 + 16) = v93;
  uint64_t v103 = v152;
  *(void *)(a2 + 24) = v155;
  *(void *)(a2 + 32) = v103;
  uint64_t v104 = v144;
  *(void *)(a2 + 40) = v144;
  *(unsigned char *)(a2 + 48) = v97;
  uint64_t v105 = v150;
  *(void *)(a2 + 56) = v153;
  *(void *)(a2 + 64) = v105;
  *(void *)(a2 + 72) = v149;
  *(unsigned char *)(a2 + 80) = v90;
  uint64_t v106 = v158;
  *(void *)(a2 + 88) = v151;
  *(void *)(a2 + 96) = v106;
  uint64_t v107 = v148;
  *(void *)(a2 + 104) = v157;
  *(void *)(a2 + 112) = v107;
  uint64_t v108 = v147;
  *(void *)(a2 + 120) = v156;
  *(void *)(a2 + 128) = v108;
  *(void *)(a2 + 136) = v142;
  *(unsigned char *)(a2 + 144) = v98;
  uint64_t v109 = v140;
  *(void *)(a2 + 152) = v143;
  *(void *)(a2 + 160) = v109;
  *(void *)(a2 + 168) = v139;
  *(unsigned char *)(a2 + 176) = v99;
  uint64_t v110 = v132;
  *(void *)(a2 + 184) = v141;
  *(void *)(a2 + 192) = v110;
  *(void *)(a2 + 200) = v137;
  *(unsigned char *)(a2 + 208) = v95;
  *(void *)(a2 + 216) = v138;
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29F58);
  sub_1E3C34078(v100, a2 + *(int *)(v111 + 144), &qword_1EAE29F50);
  sub_1E3C822F8(v101, v154, v93);
  swift_bridgeObjectRetain();
  sub_1E3C822F8(v152, v104, v97);
  swift_bridgeObjectRetain();
  sub_1E3C822F8(v150, v149, v90);
  swift_bridgeObjectRetain();
  sub_1E3DDA394(v158, v157, v148, v156);
  uint64_t v112 = v142;
  sub_1E3C822F8(v147, v142, v98);
  swift_bridgeObjectRetain();
  uint64_t v113 = v140;
  uint64_t v114 = v139;
  sub_1E3C822F8(v140, v139, v134);
  swift_bridgeObjectRetain();
  uint64_t v115 = v110;
  uint64_t v116 = v110;
  uint64_t v117 = v137;
  char v118 = v135;
  sub_1E3C822F8(v115, v137, v135);
  swift_bridgeObjectRetain();
  sub_1E3C10CE0(v136, &qword_1EAE29F50);
  sub_1E3C10CE0(v145, &qword_1EAE29F50);
  sub_1E3C82280(v116, v117, v118);
  swift_bridgeObjectRelease();
  sub_1E3C82280(v113, v114, v159);
  swift_bridgeObjectRelease();
  sub_1E3C82280(v147, v112, v160);
  swift_bridgeObjectRelease();
  sub_1E3DDA3D8(v158, v157, v148, v156);
  sub_1E3C82280(v150, v149, v161);
  swift_bridgeObjectRelease();
  sub_1E3C82280(v152, v144, v162);
  swift_bridgeObjectRelease();
  sub_1E3C82280(v146, v154, v163);
  return swift_bridgeObjectRelease();
}

void sub_1E3E6B858()
{
  id v0 = objc_msgSend(self, sel_generalPasteboard);
  sub_1E3E77C00();
  id v1 = (id)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setString_, v1);
}

uint64_t sub_1E3E6B8E8()
{
  uint64_t v0 = sub_1E3E7B0E0();

  return MEMORY[0x1F40FC628](v0);
}

uint64_t sub_1E3E6B95C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1E3E7B130();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAE29F48);
  return sub_1E3E6ABF4(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1E3E6B9A8()
{
  uint64_t v1 = sub_1E3E77D00();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_1E3E6BA38()
{
  sub_1E3E77D00();

  sub_1E3E6B858();
}

uint64_t sub_1E3E6BA98()
{
  return sub_1E3C10DE8(&qword_1EAE29F60, &qword_1EAE29F68);
}

uint64_t OSSignposter.init(subsystem:category:)(uint64_t a1)
{
  sub_1E3E7CA60();
  sub_1E3E7A6B0();
  uint64_t v2 = sub_1E3E7CA70();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t OSSignposter.init(subsystem:category:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E7DB60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7CA60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  sub_1E3E7A6C0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  uint64_t v8 = sub_1E3E7CA70();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
}

uint64_t sub_1E3E6BCAC()
{
  uint64_t v0 = sub_1E3E7CA70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7A6D0();
  __swift_allocate_value_buffer(v4, qword_1EBFE0360);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBFE0360);
  if (qword_1EBFE0688 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBFDF4D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_1E3E7CA60();
  sub_1E3E7A6B0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static OSSignposter.bootstrap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E6BFD4(qword_1EBFE0380, (uint64_t)qword_1EBFE0360, a1);
}

uint64_t sub_1E3E6BE40()
{
  uint64_t v0 = sub_1E3E7CA70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1E3E7A6D0();
  __swift_allocate_value_buffer(v4, qword_1EBFDF4A0);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBFDF4A0);
  if (qword_1EBFE0688 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBFDF4D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  sub_1E3E7CA60();
  sub_1E3E7A6B0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static OSSignposter.js.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E6BFD4(qword_1EBFDF4B8, (uint64_t)qword_1EBFDF4A0, a1);
}

uint64_t sub_1E3E6BFD4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1E3E7A6D0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t AdamID.jsRepresentation(in:)@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3C340DC();
  uint64_t result = sub_1E3E7DC90();
  uint64_t v3 = MEMORY[0x1E4F71830];
  a1[3] = MEMORY[0x1E4FBB1A0];
  a1[4] = v3;
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1E3E6C0D0@<X0>(uint64_t *a1@<X8>)
{
  sub_1E3C340DC();
  uint64_t result = sub_1E3E7DC90();
  uint64_t v3 = MEMORY[0x1E4F71830];
  a1[3] = MEMORY[0x1E4FBB1A0];
  a1[4] = v3;
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AdamID.init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  sub_1E3E7BAA0();
  if (v6)
  {
    uint64_t v7 = sub_1E3E7A510();
    if (!v2)
    {
      uint64_t v3 = v7;
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_1E3E7BBC0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a2, v12);
      uint64_t v13 = sub_1E3E7BAD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      return v3;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = sub_1E3E7CAC0();
    sub_1E3D47048();
    swift_allocError();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    *uint64_t v9 = MEMORY[0x1E4F91D88];
    v9[1] = v8;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v3 - 8) + 104))(v9, *MEMORY[0x1E4F717E0], v3);
    swift_willThrow();
  }
  uint64_t v10 = sub_1E3E7BBC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a2, v10);
  uint64_t v11 = sub_1E3E7BAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  return v3;
}

uint64_t sub_1E3E6C310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = AdamID.init(deserializing:using:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id PodcastsMetricsEventRecorder.init(metrics:defaultTopic:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id result = objc_msgSend(a1, sel_setFlushTimerEnabled_, 1);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t PodcastsMetricsEventRecorder.init(bag:defaultTopic:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_1E3E7C7F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E7C800();
  sub_1E3E7C7E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v12 = sub_1E3E7C780();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F4DD58]);
  uint64_t v14 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithContainerID_bag_, v14, v12);

  swift_unknownObjectRelease();
  uint64_t v16 = (void *)sub_1E3E7D440();

  objc_msgSend(v16, sel_setFlushTimerEnabled_, 1);
  uint64_t v17 = sub_1E3E7C810();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
  *a4 = v16;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void PodcastsMetricsEventRecorder.record(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  if (!a3) {
    swift_bridgeObjectRetain();
  }
  id v5 = objc_allocWithZone(MEMORY[0x1E4F4DD60]);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1E3E7CCF0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithTopic_, v6);

  objc_msgSend(v8, sel_setAnonymous_, 1);
  sub_1E3E7C190();
  uint64_t v7 = (void *)sub_1E3E7CB50();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_addPropertiesWithDictionary_, v7);

  objc_msgSend(v4, sel_enqueueEvent_, v8);
}

uint64_t PodcastsMetricsEventRecorder.flush()()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4980);
  id v2 = objc_msgSend(v1, sel_flush);
  sub_1E3E7CA00();
  uint64_t v3 = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFE60A0);
  uint64_t v4 = sub_1E3E7D6A0();
  uint64_t v8 = v3;
  uint64_t v9 = MEMORY[0x1E4F71860];
  v7[0] = v4;
  sub_1E3E7C9A0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  uint64_t v8 = sub_1E3E7C180();
  uint64_t v9 = MEMORY[0x1E4F713E0];
  __swift_allocate_boxed_opaque_existential_1(v7);
  sub_1E3E7C170();
  uint64_t v5 = sub_1E3E7C990();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  return v5;
}

uint64_t sub_1E3E6C7A8(void **a1)
{
  uint64_t v2 = sub_1E3E7BB40();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1E3E7CA90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  if (qword_1EBFE2DB8 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBFE49B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BB30();
  sub_1E3E7BB20();
  v11[3] = sub_1E3C12B10(0, (unint64_t *)&qword_1EBFDEE80);
  v11[0] = v7;
  id v9 = v7;
  sub_1E3E7BB10();
  sub_1E3C2AC28((uint64_t)v11);
  sub_1E3E7BB20();
  sub_1E3E7BB50();
  sub_1E3E7C870();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1E3E6CA4C()
{
  uint64_t v0 = sub_1E3E7BB40();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1E3E7CA90();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBFE2DB8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v1, (uint64_t)qword_1EBFE49B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE28F8);
  sub_1E3E7BB60();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1E3E86660;
  sub_1E3E7BB30();
  sub_1E3E7BB20();
  swift_getErrorValue();
  uint64_t v6 = v10;
  uint64_t v7 = v11;
  v12[3] = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_1, v6, v7);
  sub_1E3E7BB00();
  sub_1E3C2AC28((uint64_t)v12);
  sub_1E3E7BB20();
  sub_1E3E7BB50();
  sub_1E3E7C880();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id sub_1E3E6CD0C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_integerValue);
  *a2 = result;
  return result;
}

uint64_t destroy for PodcastsMetricsEventRecorder(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s10PodcastsUI28PodcastsMetricsEventRecorderVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PodcastsMetricsEventRecorder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PodcastsMetricsEventRecorder(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PodcastsMetricsEventRecorder()
{
  return &type metadata for PodcastsMetricsEventRecorder;
}

uint64_t MTImageStore.publisher<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1E3E78E70();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE6070);
  sub_1E3E7AA70();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v11 + ((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
  id v12 = v3;
  v15[1] = sub_1E3E7AA80();
  swift_getWitnessTable();
  uint64_t v13 = sub_1E3E7AB70();
  swift_release();
  return v13;
}

uint64_t sub_1E3E6D058(void (*a1)(char *), uint64_t a2, uint64_t a3, void *a4)
{
  v27[1] = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE6070);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E3E7E2C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)v27 - v14;
  uint64_t v16 = sub_1E3E78740();
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E78E00();
  uint64_t v20 = *(void *)&v19[*(int *)(v17 + 72) + 8];
  swift_bridgeObjectRetain();
  sub_1E3C2CBF8((uint64_t)v19);
  if (v20)
  {
    unint64_t v21 = (void *)sub_1E3E7CCF0();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(a4, sel_imageUrlForKey_, v21);

    if (v22)
    {
      sub_1E3E77C90();

      uint64_t v23 = sub_1E3E77D00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 0, 1, v23);
    }
    else
    {
      uint64_t v25 = sub_1E3E77D00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
    }
    sub_1E3C24558((uint64_t)v8, (uint64_t)v12);
  }
  else
  {
    uint64_t v24 = sub_1E3E77D00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
    id v12 = v15;
  }
  swift_storeEnumTagMultiPayload();
  a1(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1E3E6D368()
{
  uint64_t v1 = sub_1E3E78E70();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1E3E6D40C(void (*a1)(char *), uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1E3E78E70() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1E3E6D058(a1, a2, v2 + v6, v7);
}

uint64_t InteractionContext.Page.contentReference.getter()
{
  uint64_t v1 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    char v6 = v3[8];
    uint64_t v7 = *((void *)v3 + 3);
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
    uint64_t v9 = (uint64_t)&v3[v8];
    if (v6)
    {
      if (!v7)
      {
        sub_1E3C10CE0((uint64_t)&v3[v8], &qword_1EBFE2108);
        return 0;
      }
      unsigned __int8 v10 = sub_1E3E79320();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unsigned __int8 v10 = sub_1E3E79330();
    }
    sub_1E3C10CE0(v9, &qword_1EBFE2108);
    return v10;
  }
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_1E3E6D72C((uint64_t)v3);
    }
    else if ((v3[8] & 1) == 0)
    {
      return sub_1E3E79340();
    }
    return 0;
  }
  if ((v3[8] & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return sub_1E3E79360();
  }
  if (!*((void *)v3 + 3)) {
    return 0;
  }
  unsigned __int8 v10 = sub_1E3E79350();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for InteractionContext.Page(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFDF0A8);
}

uint64_t sub_1E3E6D6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3E6D72C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t InteractionContext.View.episodeCellType.getter(uint64_t result)
{
  if (result - 5 >= 3) {
    return result;
  }
  else {
    return 5;
  }
}

BOOL static InteractionContext.View.== infix(_:_:)(char a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 5:
      return a2 == 5;
    case 6:
      return a2 == 6;
    case 7:
      return a2 == 7;
  }
  if (a2 - 5 < 3) {
    return 0;
  }
  switch(a1)
  {
    case 2:
      return a2 == 2;
    case 3:
      return a2 == 3;
    case 4:
      return a2 == 4;
    default:
      return a2 - 2 >= 3 && ((((a1 & 1) == 0) ^ a2) & 1) != 0;
  }
}

BOOL static InteractionContext.EpisodeCellType.== infix(_:_:)(char a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 2:
      return a2 == 2;
    case 3:
      return a2 == 3;
    case 4:
      return a2 == 4;
  }
  if (a2 - 2 < 3) {
    return 0;
  }
  return (((a1 & 1) == 0) ^ a2) & 1;
}

uint64_t sub_1E3E6D8EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  switch(v2)
  {
    case 5:
      return v3 == 5;
    case 6:
      return v3 == 6;
    case 7:
      return v3 == 7;
  }
  if ((v3 - 5) < 3) {
    return 0;
  }
  switch(v2)
  {
    case 2:
      if (v3 != 2) {
        return 0;
      }
      break;
    case 3:
      if (v3 != 3) {
        return 0;
      }
      break;
    case 4:
      if (v3 != 4) {
        return 0;
      }
      break;
    default:
      if ((v3 - 2) < 3 || ((v2 & 1) == 0) == (v3 & 1)) {
        return 0;
      }
      break;
  }
  return 1;
}

BOOL InteractionContext.EpisodeCellType.showsEpisodeControls.getter(char a1)
{
  return a1 != 3;
}

BOOL sub_1E3E6D9B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  switch(v2)
  {
    case 2:
      return v3 == 2;
    case 3:
      return v3 == 3;
    case 4:
      return v3 == 4;
  }
  if ((v3 - 2) < 3) {
    return 0;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

BOOL static InteractionContext.Origin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t InteractionContext.Origin.hash(into:)()
{
  return sub_1E3E7E280();
}

uint64_t InteractionContext.Origin.hashValue.getter()
{
  return sub_1E3E7E2B0();
}

uint64_t InteractionContext.page.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1E3E6D6C8(v1, a1);
}

uint64_t InteractionContext.view.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InteractionContext(0) + 20));
}

uint64_t InteractionContext.origin.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for InteractionContext(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t InteractionContext.init(page:view:origin:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a3;
  sub_1E3E72260(a1, a4);
  uint64_t result = type metadata accessor for InteractionContext(0);
  *(unsigned char *)(a4 + *(int *)(result + 20)) = a2;
  *(unsigned char *)(a4 + *(int *)(result + 24)) = v6;
  return result;
}

uint64_t static InteractionContext.none.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for InteractionContext.Page(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = type metadata accessor for InteractionContext(0);
  *(unsigned char *)(a1 + *(int *)(result + 20)) = 7;
  *(unsigned char *)(a1 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t InteractionContext.Page.init(rawString:adamID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  if (a2)
  {
    if (a1 == 0x65676150776F6873 && a2 == 0xE800000000000000 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = a5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
      *(void *)a5 = a3;
      *(unsigned char *)(a5 + 8) = a4 & 1;
      uint64_t v11 = sub_1E3E79880();
      *(void *)(a5 + 16) = 0;
      *(void *)(a5 + 24) = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
      type metadata accessor for InteractionContext.Page(0);
      goto LABEL_99;
    }
    if (a1 == 0x5065646F73697065 && a2 == 0xEB00000000656761 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      *(void *)a5 = a3;
      *(unsigned char *)(a5 + 8) = a4 & 1;
      type metadata accessor for InteractionContext.Page(0);
      *(void *)(a5 + 16) = 0;
      *(void *)(a5 + 24) = 0;
      goto LABEL_99;
    }
    if (a1 == 0x506C656E6E616863 && a2 == 0xEB00000000656761 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      *(void *)a5 = a3;
      *(unsigned char *)(a5 + 8) = a4 & 1;
      type metadata accessor for InteractionContext.Page(0);
      goto LABEL_99;
    }
    if (a1 == 0x4C6C656E6E616863 && a2 == 0xEB00000000747369
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x79726F6765746163 && a2 == 0xEC0000007473694CLL
      || (sub_1E3E7E150() & 1) != 0)
    {
      goto LABEL_89;
    }
    if (a1 == 0x4C65646F73697065 && a2 == 0xEB00000000747369 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_1E3E79880();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a5, 1, 1, v12);
      type metadata accessor for InteractionContext.Page(0);
      goto LABEL_99;
    }
    if (a1 == 0x6573776F7262 && a2 == 0xE600000000000000
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x6867696C68676968 && a2 == 0xEA00000000007374
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x7972617262696CLL && a2 == 0xE700000000000000
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x437972617262696CLL && a2 == 0xEF736C656E6E6168
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x4C7972617262696CLL && a2 == 0xED00007473657461
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x537972617262696CLL && a2 == 0xEC00000064657661
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x537972617262696CLL && a2 == 0xEC00000073776F68
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 1701670760 && a2 == 0xE400000000000000
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x65537478654E7075 && a2 == 0xEC0000006C6C4165
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0xD000000000000014 && a2 == 0x80000001E3EA47B0
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x6F4E6E657473696CLL && a2 == 0xE900000000000077
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x6979616C50776F6ELL && a2 == 0xEA0000000000676ELL
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0xD000000000000012 && a2 == 0x80000001E3E9B340
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x796C746E65636572 && a2 == 0xEF64657461647055
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x686372616573 && a2 == 0xE600000000000000
      || (sub_1E3E7E150() & 1) != 0
      || a1 == 0x7473694C776F6873 && a2 == 0xE800000000000000
      || (sub_1E3E7E150() & 1) != 0)
    {
LABEL_89:
      swift_bridgeObjectRelease();
      type metadata accessor for InteractionContext.Page(0);
      goto LABEL_99;
    }
    if (a1 == 0x6E6F6974617473 && a2 == 0xE700000000000000 || (sub_1E3E7E150() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      *(unsigned char *)a5 = 2;
      type metadata accessor for InteractionContext.Page(0);
      goto LABEL_99;
    }
    if (a1 == 0x7472616843706F74 && a2 == 0xE900000000000073)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1E3E7E150();
      swift_bridgeObjectRelease();
    }
  }
  type metadata accessor for InteractionContext.Page(0);
LABEL_99:

  return swift_storeEnumTagMultiPayload();
}

BOOL InteractionContext.Page.isEpisodePage.getter()
{
  uint64_t v1 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v0, (uint64_t)v3);
  BOOL v4 = swift_getEnumCaseMultiPayload() == 2;
  sub_1E3E6D72C((uint64_t)v3);
  return v4;
}

BOOL InteractionContext.Page.isEpisodeDetailTranscriptsPage.getter()
{
  uint64_t v1 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5) {
    sub_1E3E6D72C((uint64_t)v3);
  }
  return EnumCaseMultiPayload == 5;
}

BOOL InteractionContext.Page.isShowPage.getter()
{
  uint64_t v1 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498);
    sub_1E3C10CE0((uint64_t)&v3[*(int *)(v5 + 64)], &qword_1EBFE2108);
  }
  else
  {
    sub_1E3E6D72C((uint64_t)v3);
  }
  return EnumCaseMultiPayload == 3;
}

BOOL InteractionContext.Page.isRecentlyUnfollowedPage.getter()
{
  uint64_t v1 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v0, (uint64_t)v3);
  BOOL v4 = swift_getEnumCaseMultiPayload() == 21;
  sub_1E3E6D72C((uint64_t)v3);
  return v4;
}

BOOL InteractionContext.Page.isUnfollowedLibraryShow.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v2);
  BOOL v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1E3E6D6C8(v1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t)&v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64)];
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = (uint64_t)v4;
LABEL_5:
    sub_1E3E72478(v9, (uint64_t)v7);
    goto LABEL_7;
  }
  uint64_t v10 = sub_1E3E79880();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  sub_1E3E6D72C((uint64_t)v4);
LABEL_7:
  uint64_t v11 = sub_1E3E79880();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
    sub_1E3C10CE0((uint64_t)v7, &qword_1EBFE2108);
    return 0;
  }
  else
  {
    sub_1E3E79870();
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v11);
    sub_1E3E722C4((uint64_t)v15, (uint64_t)v16);
    BOOL v13 = v16[64] == 8;
    sub_1E3E72320((uint64_t)v15);
  }
  return v13;
}

uint64_t InteractionContext.Page.episodeListSettings.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v2, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (uint64_t)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64)];
    return sub_1E3E72478(v8, a1);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = (uint64_t)v6;
    return sub_1E3E72478(v8, a1);
  }
  uint64_t v10 = sub_1E3E79880();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  return sub_1E3E6D72C((uint64_t)v6);
}

uint64_t InteractionContext.Page.adamID.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v6 = *(void *)v4;
    swift_bridgeObjectRelease();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498);
    sub_1E3C10CE0((uint64_t)&v4[*(int *)(v7 + 64)], &qword_1EBFE2108);
  }
  else if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = *(void *)v4;
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload)
  {
    sub_1E3E6D72C((uint64_t)v4);
    return 0;
  }
  else
  {
    return *(void *)v4;
  }
  return v6;
}

uint64_t InteractionContext.Page.uuid.getter()
{
  uint64_t v1 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v5 = *((void *)v3 + 2);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498);
    sub_1E3C10CE0((uint64_t)&v3[*(int *)(v6 + 64)], &qword_1EBFE2108);
  }
  else if (EnumCaseMultiPayload == 2)
  {
    return *((void *)v3 + 2);
  }
  else
  {
    sub_1E3E6D72C((uint64_t)v3);
    return 0;
  }
  return v5;
}

uint64_t InteractionContext.Page.isRecentlyPlayedSeeAll.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1E3E6D6C8(v1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t)&v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64)];
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = (uint64_t)v4;
LABEL_5:
    sub_1E3E72478(v9, (uint64_t)v7);
    goto LABEL_7;
  }
  uint64_t v10 = sub_1E3E79880();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  sub_1E3E6D72C((uint64_t)v4);
LABEL_7:
  uint64_t v11 = sub_1E3E79880();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
    sub_1E3C10CE0((uint64_t)v7, &qword_1EBFE2108);
  }
  else
  {
    sub_1E3E79870();
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v11);
    sub_1E3E722C4((uint64_t)v15, (uint64_t)v16);
    if (v19 == 9 && v16[0] == 1)
    {
      int8x16_t v13 = vorrq_s8(v17, v18);
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL)) | v16[3] | v16[2] | v16[1])) {
        return 1;
      }
    }
    sub_1E3E72320((uint64_t)v15);
  }
  return 0;
}

uint64_t InteractionContext.Page.isUpNextSeeAll.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1E3E6D6C8(v1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t)&v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64)];
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = (uint64_t)v4;
LABEL_5:
    sub_1E3E72478(v9, (uint64_t)v7);
    goto LABEL_7;
  }
  uint64_t v10 = sub_1E3E79880();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  sub_1E3E6D72C((uint64_t)v4);
LABEL_7:
  uint64_t v11 = sub_1E3E79880();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
    sub_1E3C10CE0((uint64_t)v7, &qword_1EBFE2108);
  }
  else
  {
    sub_1E3E79870();
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v11);
    sub_1E3E722C4((uint64_t)v14, (uint64_t)v15);
    if (v15[64] == 5) {
      return 1;
    }
    sub_1E3E72320((uint64_t)v14);
  }
  return 0;
}

uint64_t InteractionContext.Page.isTranscriptView.getter()
{
  uint64_t v1 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 26) {
    return 1;
  }
  sub_1E3E6D72C((uint64_t)v3);
  return 0;
}

Swift::Void __swiftcall InteractionContext.Page.log(preamble:origin:)(Swift::String preamble, PodcastsUI::InteractionContext::Origin origin)
{
  uint64_t v3 = v2;
  uint64_t v4 = (char *)origin;
  object = preamble._object;
  uint64_t countAndFlagsBits = preamble._countAndFlagsBits;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E3E79880();
  uint64_t v99 = *(void *)(v8 - 8);
  uint64_t v100 = v8;
  MEMORY[0x1F4188790](v8);
  char v93 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v101 = (char *)&v89 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v102 = (char *)&v89 - v13;
  uint64_t v108 = sub_1E3E7A880();
  uint64_t v103 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  char v95 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v104 = (char *)&v89 - v16;
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)&v89 - v18;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v89 - v21;
  uint64_t v23 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  char v28 = (char *)&v89 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v89 - v30;
  char v32 = *v4;
  unint64_t v96 = sub_1E3E705AC(v3);
  unint64_t v106 = v33;
  uint64_t v110 = 0;
  uint64_t v111 = (void (*)(char *, char *, uint64_t))0xE000000000000000;
  sub_1E3E7CEA0();
  LOBYTE(v109) = v32;
  sub_1E3E7DF20();
  uint64_t v97 = v110;
  uint64_t v107 = v111;
  sub_1E3E6D6C8(v3, (uint64_t)v31);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v35 = *((void *)v31 + 2);
    unint64_t v36 = *((void *)v31 + 3);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498);
    sub_1E3C10CE0((uint64_t)&v31[*(int *)(v37 + 64)], &qword_1EBFE2108);
    if (v36) {
      goto LABEL_6;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    unint64_t v36 = 0xE400000000000000;
    uint64_t v94 = 1701736302;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload != 2)
  {
    sub_1E3E6D72C((uint64_t)v31);
    goto LABEL_8;
  }
  uint64_t v35 = *((void *)v31 + 2);
  unint64_t v36 = *((void *)v31 + 3);
  if (!v36) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v94 = v35;
LABEL_9:
  uint64_t v38 = InteractionContext.Page.adamID.getter();
  if (v39 & 1) != 0 || (uint64_t v40 = v38, (sub_1E3E7A520()))
  {
    sub_1E3E6D6C8(v3, (uint64_t)v28);
    int v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 3)
    {
      uint64_t v91 = v23;
      uint64_t v42 = *((void *)v28 + 3);
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498);
      sub_1E3C10CE0((uint64_t)&v28[*(int *)(v56 + 64)], &qword_1EBFE2108);
    }
    else
    {
      if (v41 != 2)
      {
        sub_1E3E6D72C((uint64_t)v28);
        swift_bridgeObjectRelease();
        LOBYTE(v42) = 0;
        unint64_t v44 = (unint64_t)v107;
        uint64_t v53 = v108;
        uint64_t v54 = v99;
        uint64_t v62 = v104;
        unint64_t v55 = (unint64_t)object;
        goto LABEL_26;
      }
      uint64_t v91 = v23;
      uint64_t v42 = *((void *)v28 + 3);
    }
    uint64_t v53 = v108;
    uint64_t v57 = v104;
    unint64_t v55 = (unint64_t)object;
    swift_bridgeObjectRelease();
    unint64_t v44 = (unint64_t)v107;
    if (v42)
    {
      char v92 = v7;
      sub_1E3E7A760();
      swift_bridgeObjectRetain_n();
      unint64_t v58 = v106;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1E3E7A860();
      os_log_type_t v59 = sub_1E3E7D500();
      LODWORD(v90) = v59;
      if (os_log_type_enabled((os_log_t)v42, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        uint64_t v110 = v61;
        *(_DWORD *)uint64_t v60 = 136446978;
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_1E3C150B8(countAndFlagsBits, v55, &v110);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v60 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_1E3C150B8(v96, v58, &v110);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v60 + 22) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_1E3C150B8(v94, v36, &v110);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v60 + 32) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_1E3C150B8(v97, (unint64_t)v107, &v110);
        uint64_t v62 = v104;
        unint64_t v55 = (unint64_t)object;
        uint64_t v53 = v108;
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1E3BC5000, (os_log_t)v42, (os_log_type_t)v90, "%{public}s: %{public}s(uuid=%{public}s, adamID=none), %{public}s", (uint8_t *)v60, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1E4E79510](v61, -1, -1);
        uint64_t v63 = v60;
        unint64_t v44 = (unint64_t)v107;
        MEMORY[0x1E4E79510](v63, -1, -1);

        (*(void (**)(char *, uint64_t))(v103 + 8))(v19, v53);
        LOBYTE(v42) = 1;
        uint64_t v54 = v99;
        uint64_t v7 = v92;
        goto LABEL_26;
      }

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v19, v53);
      LOBYTE(v42) = 1;
      uint64_t v54 = v99;
      uint64_t v7 = v92;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v54 = v99;
    }
    uint64_t v62 = v57;
  }
  else
  {
    char v92 = v7;
    sub_1E3E7A760();
    unint64_t v43 = (unint64_t)object;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v44 = (unint64_t)v107;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1E3E7A860();
    os_log_type_t v45 = sub_1E3E7D500();
    LODWORD(v91) = v45;
    if (os_log_type_enabled((os_log_t)v42, v45))
    {
      unint64_t v46 = v43;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      uint64_t v110 = v90;
      *(_DWORD *)uint64_t v47 = 136447491;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1E3C150B8(countAndFlagsBits, v46, &v110);
      os_log_t v89 = (os_log_t)v42;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      unint64_t v48 = v106;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1E3C150B8(v96, v48, &v110);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1E3C150B8(v94, v36, &v110);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 32) = 2160;
      uint64_t v109 = 1752392040;
      sub_1E3E7DBD0();
      *(_WORD *)(v47 + 42) = 2081;
      uint64_t v109 = v40;
      sub_1E3C340DC();
      uint64_t v49 = sub_1E3E7DC90();
      uint64_t v109 = sub_1E3C150B8(v49, v50, &v110);
      unint64_t v44 = (unint64_t)v107;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 52) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1E3C150B8(v97, v44, &v110);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      os_log_t v51 = v89;
      _os_log_impl(&dword_1E3BC5000, v89, (os_log_type_t)v91, "%{public}s: %{public}s(uuid=%{public}s, adamID=%{private,mask.hash}s), %{public}s", (uint8_t *)v47, 0x3Eu);
      uint64_t v42 = v90;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v42, -1, -1);
      MEMORY[0x1E4E79510](v47, -1, -1);

      unint64_t v52 = v22;
      uint64_t v53 = v108;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v52, v108);
      LOBYTE(v42) = 1;
      uint64_t v54 = v99;
      unint64_t v55 = (unint64_t)object;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      int v64 = v22;
      uint64_t v53 = v108;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v64, v108);
      LOBYTE(v42) = 1;
      unint64_t v55 = v43;
      uint64_t v54 = v99;
    }
    uint64_t v62 = v104;
    uint64_t v7 = v92;
  }
LABEL_26:
  sub_1E3E6D6C8(v3, (uint64_t)v25);
  int v65 = swift_getEnumCaseMultiPayload();
  if (v65 == 3)
  {
    swift_bridgeObjectRelease();
    uint64_t v66 = (uint64_t)&v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64)];
    goto LABEL_30;
  }
  if (v65 == 1)
  {
    uint64_t v66 = (uint64_t)v25;
LABEL_30:
    sub_1E3E72478(v66, (uint64_t)v7);
    uint64_t v67 = v100;
    goto LABEL_32;
  }
  uint64_t v67 = v100;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v7, 1, 1, v100);
  sub_1E3E6D72C((uint64_t)v25);
LABEL_32:
  uint64_t v68 = v102;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v7, 1, v67) == 1)
  {
    sub_1E3C10CE0((uint64_t)v7, &qword_1EBFE2108);
    if (v42)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v81 = v95;
      sub_1E3E7A760();
      swift_bridgeObjectRetain_n();
      unint64_t v82 = v106;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v83 = sub_1E3E7A860();
      unint64_t v84 = v44;
      os_log_type_t v85 = sub_1E3E7D500();
      if (os_log_type_enabled(v83, v85))
      {
        uint64_t v86 = swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        uint64_t v110 = v87;
        *(_DWORD *)uint64_t v86 = 136446722;
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_1E3C150B8(countAndFlagsBits, v55, &v110);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v86 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_1E3C150B8(v96, v82, &v110);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v86 + 22) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_1E3C150B8(v97, v84, &v110);
        sub_1E3E7DBD0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1E3BC5000, v83, v85, "%{public}s: %{public}s, %{public}s", (uint8_t *)v86, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1E4E79510](v87, -1, -1);
        MEMORY[0x1E4E79510](v86, -1, -1);

        (*(void (**)(char *, uint64_t))(v103 + 8))(v95, v108);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v103 + 8))(v81, v53);
      }
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v68, v7, v67);
    sub_1E3E7A760();
    uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v107(v101, v68, v67);
    swift_bridgeObjectRetain_n();
    unint64_t v69 = v106;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v70 = sub_1E3E7A860();
    os_log_type_t v71 = sub_1E3E7D500();
    int v72 = v71;
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v73 = swift_slowAlloc();
      LODWORD(v99) = v72;
      uint64_t v74 = v73;
      uint64_t v100 = swift_slowAlloc();
      uint64_t v110 = v100;
      *(_DWORD *)uint64_t v74 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1E3C150B8(countAndFlagsBits, v55, &v110);
      uint64_t v75 = v67;
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1E3C150B8(v96, v69, &v110);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1E3C150B8(v97, v44, &v110);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 32) = 2080;
      uint64_t v76 = v101;
      v107(v93, v101, v67);
      uint64_t v77 = sub_1E3E7CD90();
      uint64_t v109 = sub_1E3C150B8(v77, v78, &v110);
      sub_1E3E7DBD0();
      swift_bridgeObjectRelease();
      uint64_t v79 = *(void (**)(char *, uint64_t))(v54 + 8);
      v79(v76, v75);
      _os_log_impl(&dword_1E3BC5000, v70, (os_log_type_t)v99, "%{public}s: %{public}s, %{public}s, %s", (uint8_t *)v74, 0x2Au);
      uint64_t v80 = v100;
      swift_arrayDestroy();
      MEMORY[0x1E4E79510](v80, -1, -1);
      MEMORY[0x1E4E79510](v74, -1, -1);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v108);
      v79(v102, v75);
    }
    else
    {

      char v88 = *(void (**)(char *, uint64_t))(v54 + 8);
      v88(v101, v67);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v62, v108);
      v88(v68, v67);
    }
  }
}

unint64_t sub_1E3E705AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(a1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0x6573776F7262;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1E3C10CE0((uint64_t)v4, &qword_1EBFE2108);
      unint64_t result = 0x4C65646F73697065;
      break;
    case 2:
      sub_1E3E6D72C((uint64_t)v4);
      unint64_t result = 0x5065646F73697065;
      break;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498);
      sub_1E3C10CE0((uint64_t)&v4[*(int *)(v7 + 64)], &qword_1EBFE2108);
      unint64_t result = 0x65676150776F6873;
      break;
    case 4:
      unint64_t result = 0x6E6F6974617473;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      return result;
    case 7:
    case 9:
      unint64_t result = 0x79726F6765746163;
      break;
    case 8:
      unint64_t result = 0x4C6C656E6E616863;
      break;
    case 10:
      unint64_t result = 0x6867696C68676968;
      break;
    case 11:
      unint64_t result = 0x7972617262696CLL;
      break;
    case 12:
      unint64_t result = 0x437972617262696CLL;
      break;
    case 13:
      unint64_t result = 0x4C7972617262696CLL;
      break;
    case 14:
    case 15:
      unint64_t result = 0x537972617262696CLL;
      break;
    case 16:
      unint64_t result = 1701670760;
      break;
    case 17:
      unint64_t result = 0x65537478654E7075;
      break;
    case 18:
      unint64_t result = 0xD000000000000014;
      break;
    case 19:
      unint64_t result = 0x6F4E6E657473696CLL;
      break;
    case 20:
      unint64_t result = 0x6979616C50776F6ELL;
      break;
    case 21:
      unint64_t result = 0xD000000000000012;
      break;
    case 22:
      unint64_t result = 0x796C746E65636572;
      break;
    case 23:
      unint64_t result = 0x686372616573;
      break;
    case 24:
      unint64_t result = 0x7473694C776F6873;
      break;
    case 25:
      unint64_t result = 0x7472616843706F74;
      break;
    case 26:
      unint64_t result = 0xD000000000000011;
      break;
    case 27:
      unint64_t result = 1701736302;
      break;
    default:
      unint64_t result = 0x506C656E6E616863;
      break;
  }
  return result;
}

uint64_t UIView.interactionContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE1170);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for InteractionContext.Page(0);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = UIView.mt_viewController.getter();
  uint64_t v40 = v5;
  if (!v8) {
    goto LABEL_7;
  }
  uint64_t v9 = (void *)v8;
  self;
  uint64_t v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10) {
    goto LABEL_5;
  }
  id v11 = objc_msgSend(v10, sel_topViewController);

  if (!v11)
  {
LABEL_7:
    uint64_t v9 = 0;
    goto LABEL_8;
  }
  uint64_t v9 = v11;
LABEL_5:
  *(void *)&long long v44 = v9;
  sub_1E3C12B10(0, &qword_1EBFDEEB8);
  id v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE1D60);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    uint64_t v48 = 0;
    memset(v47, 0, sizeof(v47));
  }
  id v41 = v9;
  uint64_t v42 = v4;
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v14 + 16) = MEMORY[0x1E4E79630](v13 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF318);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1E3D7A68C;
  *(void *)(v15 + 24) = v14;
  sub_1E3E7E020();
  uint64_t v16 = (void *)v44;
  if ((void)v44)
  {
    sub_1E3C12B10(0, qword_1EBFDF070);
    uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      while (1)
      {
        unint64_t v43 = v16;
        id v18 = v16;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE1D70);
        if (swift_dynamicCast()) {
          break;
        }
        uint64_t v46 = 0;
        long long v44 = 0u;
        long long v45 = 0u;
        sub_1E3C10CE0((uint64_t)&v44, &qword_1EBFE1D78);

        sub_1E3E7E020();
        uint64_t v16 = (void *)v44;
        if (!(void)v44) {
          goto LABEL_21;
        }
      }
      uint64_t v37 = v7;
      uint64_t v38 = v13;
      uint64_t v19 = a1;
      uint64_t v21 = *((void *)&v45 + 1);
      uint64_t v20 = v46;
      __swift_project_boxed_opaque_existential_1(&v44, *((uint64_t *)&v45 + 1));
      char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v21, v20);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v17 = sub_1E3CB89FC(0, *((void *)v17 + 2) + 1, 1, v17);
      }
      unint64_t v24 = *((void *)v17 + 2);
      unint64_t v23 = *((void *)v17 + 3);
      a1 = v19;
      if (v24 >= v23 >> 1) {
        uint64_t v17 = sub_1E3CB89FC((char *)(v23 > 1), v24 + 1, 1, v17);
      }
      uint64_t v7 = v37;
      *((void *)v17 + 2) = v24 + 1;
      v17[v24 + 32] = v22;
      sub_1E3E7E020();
      uint64_t v16 = (void *)v44;
      uint64_t v13 = v38;
    }
    while ((void)v44);
  }
  else
  {
    uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  }
LABEL_21:
  swift_release();
  swift_release();
  if (*((void *)v17 + 2)) {
    char v25 = v17[32];
  }
  else {
    char v25 = 7;
  }
  uint64_t v26 = (uint64_t)v42;
  swift_bridgeObjectRelease();
  sub_1E3C34078((uint64_t)v47, (uint64_t)&v44, &qword_1EBFE1D68);
  uint64_t v27 = *((void *)&v45 + 1);
  if (*((void *)&v45 + 1))
  {
    uint64_t v28 = v46;
    __swift_project_boxed_opaque_existential_1(&v44, *((uint64_t *)&v45 + 1));
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    uint64_t v30 = v39;
    uint64_t v29 = v40;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v26, 0, 1, v40);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v26, 1, v29) != 1)
    {
      sub_1E3E72260(v26, (uint64_t)v7);
      goto LABEL_29;
    }
  }
  else
  {
    sub_1E3C10CE0((uint64_t)&v44, &qword_1EBFE1D68);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v26, 1, 1, v40);
  }
  swift_storeEnumTagMultiPayload();
  sub_1E3C10CE0(v26, &qword_1EBFE1170);
LABEL_29:
  sub_1E3C34078((uint64_t)v47, (uint64_t)&v44, &qword_1EBFE1D68);
  uint64_t v31 = *((void *)&v45 + 1);
  if (*((void *)&v45 + 1))
  {
    uint64_t v32 = v46;
    __swift_project_boxed_opaque_existential_1(&v44, *((uint64_t *)&v45 + 1));
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v32 + 16))(&v43, v31, v32);

    char v33 = (char)v43;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);
  }
  else
  {

    sub_1E3C10CE0((uint64_t)&v44, &qword_1EBFE1D68);
    char v33 = 2;
  }
  sub_1E3E72260((uint64_t)v7, a1);
  uint64_t v34 = type metadata accessor for InteractionContext(0);
  *(unsigned char *)(a1 + *(int *)(v34 + 20)) = v25;
  *(unsigned char *)(a1 + *(int *)(v34 + 24)) = v33;
  return sub_1E3C10CE0((uint64_t)v47, &qword_1EBFE1D68);
}

uint64_t InteractionContext.Page.entityAnnotation()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E77350();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v1, (uint64_t)v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = 0;
  if ((EnumCaseMultiPayload - 4) < 0x18) {
    return v7;
  }
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v14 = (uint64_t)v5;
      goto LABEL_7;
    case 2:
      if (v5[8])
      {
        if (!*((void *)v5 + 3)) {
          return 0;
        }
        uint64_t v15 = *((void *)v5 + 2);
        uint64_t v16 = *((void *)v5 + 3);
      }
      else
      {
        uint64_t v25 = *(void *)v5;
        sub_1E3C340DC();
        uint64_t v15 = sub_1E3E7DC90();
        uint64_t v16 = v23;
        swift_bridgeObjectRelease();
      }
      uint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1E3E74DB8(&qword_1EBFE2EF0, MEMORY[0x1E4F181B0]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A00);
      sub_1E3E72550();
      sub_1E3E7DCC0();
      type metadata accessor for EpisodeEntity(0);
      uint64_t v25 = v15;
      uint64_t v26 = v16;
      objc_allocWithZone((Class)sub_1E3E78170());
      id v12 = (unint64_t *)&qword_1EBFE3060;
      uint64_t v13 = (void (*)(uint64_t))type metadata accessor for EpisodeEntity;
LABEL_17:
      sub_1E3E74DB8(v12, v13);
      return sub_1E3E78160();
    case 3:
      char v17 = v5[8];
      uint64_t v18 = *((void *)v5 + 2);
      uint64_t v19 = *((void *)v5 + 3);
      uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
      uint64_t v21 = (uint64_t)&v5[v20];
      if ((v17 & 1) == 0)
      {
        uint64_t v25 = *(void *)v5;
        sub_1E3C340DC();
        uint64_t v18 = sub_1E3E7DC90();
        uint64_t v22 = v24;
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      if (v19)
      {
        uint64_t v22 = v19;
LABEL_19:
        uint64_t v25 = MEMORY[0x1E4FBC860];
        sub_1E3E74DB8(&qword_1EBFE2EF0, MEMORY[0x1E4F181B0]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A00);
        sub_1E3E72550();
        sub_1E3E7DCC0();
        type metadata accessor for ShowEntity(0);
        uint64_t v25 = v18;
        uint64_t v26 = v22;
        objc_allocWithZone((Class)sub_1E3E78170());
        sub_1E3E74DB8((unint64_t *)&qword_1EBFE2F38, (void (*)(uint64_t))type metadata accessor for ShowEntity);
        uint64_t v7 = sub_1E3E78160();
        sub_1E3C10CE0(v21, &qword_1EBFE2108);
        return v7;
      }
      uint64_t v14 = (uint64_t)&v5[v20];
LABEL_7:
      sub_1E3C10CE0(v14, &qword_1EBFE2108);
      return 0;
    default:
      if (v5[8]) {
        return 0;
      }
      uint64_t v25 = *(void *)v5;
      sub_1E3C340DC();
      uint64_t v9 = sub_1E3E7DC90();
      uint64_t v11 = v10;
      uint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1E3E74DB8(&qword_1EBFE2EF0, MEMORY[0x1E4F181B0]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE4A00);
      sub_1E3E72550();
      sub_1E3E7DCC0();
      type metadata accessor for ChannelEntity();
      uint64_t v25 = v9;
      uint64_t v26 = v11;
      objc_allocWithZone((Class)sub_1E3E78170());
      id v12 = &qword_1EAE28548;
      uint64_t v13 = (void (*)(uint64_t))type metadata accessor for ChannelEntity;
      goto LABEL_17;
  }
}

uint64_t _s10PodcastsUI18InteractionContextV4PageO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E79880();
  uint64_t v105 = *(void *)(v4 - 8);
  uint64_t v106 = v4;
  MEMORY[0x1F4188790](v4);
  char v98 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2118);
  MEMORY[0x1F4188790](v104);
  uint64_t v100 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v102 = (uint64_t)&v96 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v97 = (uint64_t)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v107 = (uint64_t)&v96 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v103 = (uint64_t)&v96 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v99 = (uint64_t)&v96 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v101 = (uint64_t)&v96 - v18;
  uint64_t v19 = type metadata accessor for InteractionContext.Page(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (unsigned __int8 *)&v96 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v96 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v96 - v29;
  MEMORY[0x1F4188790](v31);
  char v33 = (char *)&v96 - v32;
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v96 - v35;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE1178);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v40 = (unsigned __int8 *)&v96 + *(int *)(v39 + 56) - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a1;
  uint64_t v42 = (char *)&v96 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E3E6D6C8(v41, (uint64_t)v42);
  sub_1E3E6D6C8(a2, (uint64_t)v40);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1E3E6D6C8((uint64_t)v42, (uint64_t)v33);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1E3C10CE0((uint64_t)v33, &qword_1EBFE2108);
        goto LABEL_73;
      }
      uint64_t v45 = v101;
      sub_1E3E72478((uint64_t)v40, v101);
      uint64_t v46 = v102;
      uint64_t v47 = v102 + *(int *)(v104 + 48);
      sub_1E3E72478((uint64_t)v33, v102);
      sub_1E3C34078(v45, v47, &qword_1EBFE2108);
      uint64_t v49 = v105;
      uint64_t v48 = v106;
      unint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48);
      if (v50(v46, 1, v106) == 1)
      {
        sub_1E3C10CE0(v45, &qword_1EBFE2108);
        if (v50(v47, 1, v48) == 1)
        {
          sub_1E3C10CE0(v46, &qword_1EBFE2108);
          goto LABEL_68;
        }
        goto LABEL_78;
      }
      uint64_t v75 = v99;
      sub_1E3C34078(v46, v99, &qword_1EBFE2108);
      if (v50(v47, 1, v48) == 1)
      {
        sub_1E3C10CE0(v45, &qword_1EBFE2108);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v75, v48);
LABEL_78:
        sub_1E3C10CE0(v46, &qword_1EBFE2118);
        goto LABEL_111;
      }
      uint64_t v81 = v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v98, v47, v48);
      sub_1E3E74DB8(&qword_1EAE29F78, MEMORY[0x1E4F91AD8]);
      char v82 = sub_1E3E7CCA0();
      uint64_t v83 = *(void (**)(char *, uint64_t))(v49 + 8);
      v83(v81, v48);
      sub_1E3C10CE0(v45, &qword_1EBFE2108);
      v83((char *)v75, v48);
      sub_1E3C10CE0(v46, &qword_1EBFE2108);
      if ((v82 & 1) == 0) {
        goto LABEL_111;
      }
      goto LABEL_68;
    case 2u:
      sub_1E3E6D6C8((uint64_t)v42, (uint64_t)v30);
      uint64_t v51 = *(void *)v30;
      uint64_t v53 = *((void *)v30 + 2);
      uint64_t v52 = *((void *)v30 + 3);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      char v54 = v40[8];
      uint64_t v55 = *((void *)v40 + 3);
      if (v30[8])
      {
        if (!v40[8])
        {
LABEL_13:
          swift_bridgeObjectRelease();
LABEL_14:
          swift_bridgeObjectRelease();
          goto LABEL_111;
        }
      }
      else
      {
        if (v51 != *(void *)v40) {
          char v54 = 1;
        }
        if (v54) {
          goto LABEL_13;
        }
      }
      if (!v52)
      {
        if (v55) {
          goto LABEL_14;
        }
        goto LABEL_68;
      }
      if (!v55) {
        goto LABEL_14;
      }
      if (v53 == *((void *)v40 + 2) && v52 == v55)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_68:
        uint64_t v73 = (uint64_t)v42;
        goto LABEL_69;
      }
      char v86 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v86) {
        goto LABEL_68;
      }
LABEL_111:
      sub_1E3E6D72C((uint64_t)v42);
      goto LABEL_74;
    case 3u:
      uint64_t v56 = (uint64_t)v42;
      sub_1E3E6D6C8((uint64_t)v42, (uint64_t)v27);
      uint64_t v57 = *(void *)v27;
      uint64_t v59 = *((void *)v27 + 2);
      uint64_t v58 = *((void *)v27 + 3);
      uint64_t v60 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
      uint64_t v61 = (uint64_t)&v27[v60];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_1E3C10CE0((uint64_t)&v27[v60], &qword_1EBFE2108);
        swift_bridgeObjectRelease();
        uint64_t v42 = (char *)v56;
LABEL_73:
        sub_1E3C10CE0((uint64_t)v42, &qword_1EBFE1178);
        goto LABEL_74;
      }
      uint64_t v102 = v59;
      char v62 = v27[8];
      uint64_t v63 = *(void *)v40;
      int v64 = v40[8];
      uint64_t v65 = (uint64_t)&v40[v60];
      uint64_t v66 = *((void *)v40 + 3);
      uint64_t v101 = *((void *)v40 + 2);
      uint64_t v67 = v103;
      sub_1E3E72478(v61, v103);
      uint64_t v68 = v107;
      sub_1E3E72478(v65, v107);
      if (v62)
      {
        if (!v64)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1E3C10CE0(v68, &qword_1EBFE2108);
          sub_1E3C10CE0(v67, &qword_1EBFE2108);
          sub_1E3E6D72C(v56);
          goto LABEL_74;
        }
      }
      else
      {
        if (v57 == v63) {
          char v76 = v64;
        }
        else {
          char v76 = 1;
        }
        if (v76) {
          goto LABEL_18;
        }
      }
      uint64_t v77 = v56;
      uint64_t v79 = v105;
      uint64_t v78 = v106;
      uint64_t v80 = (uint64_t)v100;
      if (!v58)
      {
        if (!v66) {
          goto LABEL_113;
        }
        goto LABEL_108;
      }
      if (!v66)
      {
LABEL_108:
        swift_bridgeObjectRelease();
        goto LABEL_109;
      }
      if (v102 == v101 && v58 == v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_113;
      }
      char v87 = sub_1E3E7E150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v87 & 1) == 0)
      {
LABEL_109:
        sub_1E3C10CE0(v107, &qword_1EBFE2108);
        uint64_t v84 = v67;
        os_log_type_t v85 = &qword_1EBFE2108;
LABEL_119:
        sub_1E3C10CE0(v84, v85);
LABEL_120:
        sub_1E3E6D72C(v77);
LABEL_74:
        char v72 = 0;
        return v72 & 1;
      }
LABEL_113:
      uint64_t v88 = v80 + *(int *)(v104 + 48);
      sub_1E3C34078(v67, v80, &qword_1EBFE2108);
      uint64_t v89 = v107;
      sub_1E3C34078(v107, v88, &qword_1EBFE2108);
      uint64_t v90 = v67;
      uint64_t v91 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
      if (v91(v80, 1, v78) == 1)
      {
        sub_1E3C10CE0(v89, &qword_1EBFE2108);
        sub_1E3C10CE0(v90, &qword_1EBFE2108);
        if (v91(v88, 1, v78) == 1)
        {
          sub_1E3C10CE0(v80, &qword_1EBFE2108);
          goto LABEL_122;
        }
        goto LABEL_118;
      }
      uint64_t v92 = v97;
      sub_1E3C34078(v80, v97, &qword_1EBFE2108);
      if (v91(v88, 1, v78) == 1)
      {
        sub_1E3C10CE0(v107, &qword_1EBFE2108);
        sub_1E3C10CE0(v103, &qword_1EBFE2108);
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v92, v78);
LABEL_118:
        os_log_type_t v85 = &qword_1EBFE2118;
        uint64_t v84 = v80;
        goto LABEL_119;
      }
      char v93 = v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v98, v88, v78);
      sub_1E3E74DB8(&qword_1EAE29F78, MEMORY[0x1E4F91AD8]);
      char v94 = sub_1E3E7CCA0();
      char v95 = *(void (**)(char *, uint64_t))(v79 + 8);
      v95(v93, v78);
      sub_1E3C10CE0(v107, &qword_1EBFE2108);
      sub_1E3C10CE0(v103, &qword_1EBFE2108);
      v95((char *)v92, v78);
      sub_1E3C10CE0(v80, &qword_1EBFE2108);
      if ((v94 & 1) == 0) {
        goto LABEL_120;
      }
LABEL_122:
      uint64_t v73 = v77;
LABEL_69:
      sub_1E3E6D72C(v73);
      char v72 = 1;
      return v72 & 1;
    case 4u:
      sub_1E3E6D6C8((uint64_t)v42, (uint64_t)v24);
      int v69 = *v24;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_73;
      }
      int v70 = *v40;
      if (v69 == 2)
      {
        if (v70 == 2) {
          goto LABEL_68;
        }
      }
      else if (v70 != 2 && ((((v69 & 1) == 0) ^ v70) & 1) != 0)
      {
        goto LABEL_68;
      }
      goto LABEL_111;
    case 5u:
      sub_1E3E6D6C8((uint64_t)v42, (uint64_t)v21);
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_73;
      }
      char v71 = *v21 ^ *v40;
      sub_1E3E6D72C((uint64_t)v42);
      char v72 = v71 ^ 1;
      return v72 & 1;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 8u:
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 9u:
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0xAu:
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0xBu:
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0xCu:
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0xDu:
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0xEu:
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0xFu:
      if (swift_getEnumCaseMultiPayload() != 15) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x10u:
      if (swift_getEnumCaseMultiPayload() != 16) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x11u:
      if (swift_getEnumCaseMultiPayload() != 17) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x12u:
      if (swift_getEnumCaseMultiPayload() != 18) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x13u:
      if (swift_getEnumCaseMultiPayload() != 19) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x14u:
      if (swift_getEnumCaseMultiPayload() != 20) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x15u:
      if (swift_getEnumCaseMultiPayload() != 21) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x16u:
      if (swift_getEnumCaseMultiPayload() != 22) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x17u:
      if (swift_getEnumCaseMultiPayload() != 23) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x18u:
      if (swift_getEnumCaseMultiPayload() != 24) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x19u:
      if (swift_getEnumCaseMultiPayload() != 25) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x1Au:
      if (swift_getEnumCaseMultiPayload() != 26) {
        goto LABEL_73;
      }
      goto LABEL_68;
    case 0x1Bu:
      if (swift_getEnumCaseMultiPayload() == 27) {
        goto LABEL_68;
      }
      goto LABEL_73;
    default:
      sub_1E3E6D6C8((uint64_t)v42, (uint64_t)v36);
      uint64_t v43 = *(void *)v36;
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_73;
      }
      char v44 = v40[8];
      if (v36[8])
      {
        if (v40[8]) {
          goto LABEL_68;
        }
      }
      else
      {
        if (v43 != *(void *)v40) {
          char v44 = 1;
        }
        if ((v44 & 1) == 0) {
          goto LABEL_68;
        }
      }
      goto LABEL_111;
  }
}

uint64_t type metadata accessor for InteractionContext(uint64_t a1)
{
  return sub_1E3D2A998(a1, qword_1EBFDF150);
}

uint64_t sub_1E3E72260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InteractionContext.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3E722C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E3E72320(uint64_t a1)
{
  return a1;
}

void sub_1E3E7236C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 8:
      goto LABEL_2;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_2:
      swift_bridgeObjectRelease();
      break;
    case 7:
      swift_bridgeObjectRelease();
      sub_1E3E72464(a3, a4);
      break;
    default:
      return;
  }
}

uint64_t sub_1E3E72464(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3E72478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E3E724E0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1E3E72518()
{
  return swift_deallocObject();
}

unint64_t sub_1E3E72550()
{
  unint64_t result = qword_1EBFE4A08;
  if (!qword_1EBFE4A08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBFE4A00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBFE4A08);
  }
  return result;
}

unint64_t sub_1E3E725B0()
{
  unint64_t result = qword_1EAE29F70;
  if (!qword_1EAE29F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAE29F70);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for InteractionContext(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for InteractionContext.Page(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v13 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v13;
        swift_bridgeObjectRetain();
        uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        uint64_t v17 = sub_1E3E79880();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        break;
      case 2:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v20 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v20;
        swift_bridgeObjectRetain();
        break;
      case 1:
        uint64_t v9 = sub_1E3E79880();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_16:
        uint64_t v21 = *(int *)(a3 + 24);
        a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
        a1[v21] = a2[v21];
        return a1;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  uint64_t v12 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  sub_1E3E775E0();
  return a1;
}

uint64_t destroy for InteractionContext(uint64_t a1)
{
  type metadata accessor for InteractionContext.Page(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3)
  {
    swift_bridgeObjectRelease();
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
    uint64_t v3 = sub_1E3E79880();
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
LABEL_5:
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v3);
  }
  if (result != 2)
  {
    if (result != 1) {
      return result;
    }
    uint64_t v3 = sub_1E3E79880();
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
    goto LABEL_5;
  }

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for InteractionContext(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for InteractionContext.Page(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v11 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v11;
      swift_bridgeObjectRetain();
      uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_1E3E79880();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      goto LABEL_13;
    case 2:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v18 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v18;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
    case 1:
      uint64_t v8 = sub_1E3E79880();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_14:
  uint64_t v19 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[v19] = a2[v19];
  return a1;
}

char *assignWithCopy for InteractionContext(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E6D72C((uint64_t)a1);
    uint64_t v6 = type metadata accessor for InteractionContext.Page(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v11 = *(void *)a2;
        a1[8] = a2[8];
        *(void *)a1 = v11;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = sub_1E3E79880();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
          memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        goto LABEL_14;
      case 2:
        uint64_t v18 = *(void *)a2;
        a1[8] = a2[8];
        *(void *)a1 = v18;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
LABEL_14:
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      case 1:
        uint64_t v8 = sub_1E3E79880();
        uint64_t v9 = *(void *)(v8 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_15:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for InteractionContext(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for InteractionContext.Page(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = sub_1E3E79880();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_1E3E79880();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_12:
  uint64_t v17 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[v17] = a2[v17];
  return a1;
}

char *assignWithTake for InteractionContext(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E6D72C((uint64_t)a1);
    uint64_t v6 = type metadata accessor for InteractionContext.Page(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_1E3E79880();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      goto LABEL_12;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_1E3E79880();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_13:
  uint64_t v17 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[v17] = a2[v17];
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E3E735FC);
}

uint64_t sub_1E3E735FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for InteractionContext.Page(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for InteractionContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E3E736CC);
}

uint64_t sub_1E3E736CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for InteractionContext.Page(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  }
  return result;
}

uint64_t sub_1E3E73788()
{
  uint64_t result = type metadata accessor for InteractionContext.Page(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for InteractionContext.Page(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1E3E775E0();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v13 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v13;
        swift_bridgeObjectRetain();
        uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        uint64_t v17 = sub_1E3E79880();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        goto LABEL_14;
      case 2:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v20 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v20;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v8 = sub_1E3E79880();
        uint64_t v9 = *(void *)(v8 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for InteractionContext.Page(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3)
  {
    swift_bridgeObjectRelease();
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
    uint64_t v3 = sub_1E3E79880();
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
LABEL_5:
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v3);
  }
  if (result != 2)
  {
    if (result != 1) {
      return result;
    }
    uint64_t v3 = sub_1E3E79880();
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
    goto LABEL_5;
  }

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for InteractionContext.Page(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v10 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v10;
      swift_bridgeObjectRetain();
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_1E3E79880();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      goto LABEL_13;
    case 2:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v17 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v17;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v7 = sub_1E3E79880();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for InteractionContext.Page(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E6D72C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v10 = *(void *)a2;
        a1[8] = a2[8];
        *(void *)a1 = v10;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = sub_1E3E79880();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
          memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
        goto LABEL_14;
      case 2:
        uint64_t v17 = *(void *)a2;
        a1[8] = a2[8];
        *(void *)a1 = v17;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        uint64_t v7 = sub_1E3E79880();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *initializeWithTake for InteractionContext.Page(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_1E3E79880();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_1E3E79880();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for InteractionContext.Page(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3E6D72C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBFDF498) + 64);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = sub_1E3E79880();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      goto LABEL_12;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1E3E79880();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE2108);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1E3E7472C()
{
  v2[4] = "\t";
  sub_1E3E747FC();
  if (v1 <= 0x3F)
  {
    v2[5] = *(void *)(v0 - 8) + 64;
    v2[6] = &unk_1E3E982F8;
    swift_getTupleTypeLayout3();
    v2[7] = v2;
    v2[8] = &unk_1E3E982C0;
    v2[9] = &unk_1E3E98328;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1E3E747FC()
{
  if (!qword_1EBFE2110)
  {
    sub_1E3E79880();
    unint64_t v0 = sub_1E3E7DB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBFE2110);
    }
  }
}

uint64_t getEnumTagSinglePayload for InteractionContext.View(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 7;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1E3E74914);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v9 = v7 >= 2;
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  BOOL v9 = v9 && v8 >= 3;
  if (v9 && v8 - 2 > 3) {
    return v8 - 5;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for InteractionContext.View(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1E3E749FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_1E3E74A24(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 < 2) {
    return 0;
  }
  unsigned int v2 = (v1 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v2 - 2;
  if (v2 <= 2) {
    return 0;
  }
  return result;
}

unsigned char *sub_1E3E74A4C(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionContext.View()
{
  return &type metadata for InteractionContext.View;
}

uint64_t getEnumTagSinglePayload for InteractionContext.EpisodeCellType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1E3E74B24);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 2;
  if (v8 <= 2) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InteractionContext.EpisodeCellType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1E3E74C0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1E3E74C34(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1E3E74C50(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionContext.EpisodeCellType()
{
  return &type metadata for InteractionContext.EpisodeCellType;
}

unsigned char *storeEnumTagSinglePayload for InteractionContext.Origin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E3E74D44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionContext.Origin()
{
  return &type metadata for InteractionContext.Origin;
}

uint64_t dispatch thunk of InteractionContextPageProviding.interactionContextPage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InteractionContextPageProviding.interactionContextOrigin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InteractionContextViewProviding.interactionContextView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1E3E74DB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Dependency.init<A, B>(aliasing:with:)()
{
  return sub_1E3E7BA30();
}

uint64_t sub_1E3E74E58(void *a1)
{
  uint64_t v1 = *(void *)(*a1 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](a1);
  unsigned int v4 = (char *)&v6 - v3;
  sub_1E3E7BE80();
  sub_1E3E7BE70();
  sub_1E3E7BE20();
  swift_release();
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1E3E74F80()
{
  return sub_1E3E74E58(v0);
}

uint64_t Dependency.init<A>(injecting:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;

  return sub_1E3E7BA30();
}

uint64_t sub_1E3E7500C()
{
  return sub_1E3E7BA60();
}

uint64_t sub_1E3E75084()
{
  return swift_deallocObject();
}

uint64_t sub_1E3E75094()
{
  return sub_1E3E7500C();
}

uint64_t NowPlayingArtwork.Data.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E3E78740();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NowPlayingArtwork.Data();
  MEMORY[0x1F4188790](v5);
  unsigned int v7 = (void **)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1E3C82D3C(v1, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v10 = *v7;
    uint64_t v14 = 0x3D6567616D49;
    unint64_t v15 = 0xE600000000000000;
    id v11 = objc_msgSend(v10, sel_description);
LABEL_6:
    id v12 = v11;
    sub_1E3E7CD30();

    sub_1E3E7CEA0();
    swift_bridgeObjectRelease();
    return v14;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v10 = *v7;
    uint64_t v14 = 0x3D676F6C61746143;
    unint64_t v15 = 0xE800000000000000;
    id v11 = objc_msgSend(v10, sel_description);
    goto LABEL_6;
  }
  sub_1E3C71AA8((uint64_t)v7, (uint64_t)v4);
  uint64_t v14 = 0x3D6C65646F4DLL;
  unint64_t v15 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_1E3E7CEA0();
  swift_bridgeObjectRelease();
  uint64_t v9 = v14;
  sub_1E3C34018((uint64_t)v4, MEMORY[0x1E4F915F0]);
  return v9;
}

uint64_t type metadata accessor for NowPlayingArtwork.Data()
{
  uint64_t result = qword_1EBFE10C0;
  if (!qword_1EBFE10C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s10PodcastsUI17NowPlayingArtworkO4DataO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E3E78740();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NowPlayingArtwork.Data();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (void **)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v27 - v11;
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (void **)((char *)&v27 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE1168);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void **)&v18[*(int *)(v19 + 56)];
  sub_1E3C82D3C(a1, (uint64_t)v18);
  sub_1E3C82D3C(a2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1E3C82D3C((uint64_t)v18, (uint64_t)v15);
    uint64_t v24 = *v15;
    if (!swift_getEnumCaseMultiPayload())
    {
LABEL_8:
      uint64_t v25 = *v20;
      sub_1E3E76434();
      char v22 = sub_1E3E7DA80();

      goto LABEL_9;
    }
LABEL_6:

LABEL_11:
    sub_1E3E763D4((uint64_t)v18);
    char v22 = 0;
    return v22 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1E3C82D3C((uint64_t)v18, (uint64_t)v9);
    uint64_t v24 = *v9;
    if (swift_getEnumCaseMultiPayload() == 2) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1E3C82D3C((uint64_t)v18, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1E3C34018((uint64_t)v12, MEMORY[0x1E4F915F0]);
    goto LABEL_11;
  }
  sub_1E3C71AA8((uint64_t)v20, (uint64_t)v6);
  char v22 = MEMORY[0x1E4E72030](v12, v6);
  uint64_t v23 = (uint64_t (*)(void))MEMORY[0x1E4F915F0];
  sub_1E3C34018((uint64_t)v6, MEMORY[0x1E4F915F0]);
  sub_1E3C34018((uint64_t)v12, v23);
LABEL_9:
  sub_1E3C34018((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
  return v22 & 1;
}

char *_s4DataOwCP(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    sub_1E3E775E0();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v6;
      int v7 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v7 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        a1[32] = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v8 = (uint64_t)a2[2];
        uint64_t v9 = (uint64_t)a2[3];
        sub_1E3C2B454(v8, v9, v7);
        *((void *)a1 + 2) = v8;
        *((void *)a1 + 3) = v9;
        a1[32] = v7;
      }
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      uint64_t v13 = (id *)(a2 + 7);
      int v14 = *((unsigned __int8 *)a2 + 64);
      if (v14 == 255)
      {
        *((void *)a1 + 7) = *v13;
        a1[64] = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v15 = *v13;
        sub_1E3C2B46C(*v13, *((unsigned char *)a2 + 64));
        *((void *)a1 + 7) = v15;
        a1[64] = v14;
      }
      uint64_t v16 = (id *)(a2 + 9);
      int v17 = *((unsigned __int8 *)a2 + 80);
      if (v17 == 255)
      {
        *((void *)a1 + 9) = *v16;
        a1[80] = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v18 = *v16;
        sub_1E3C2B46C(*v16, *((unsigned char *)a2 + 80));
        *((void *)a1 + 9) = v18;
        a1[80] = v17;
      }
      uint64_t v19 = (id *)(a2 + 11);
      int v20 = *((unsigned __int8 *)a2 + 96);
      if (v20 == 255)
      {
        *((void *)a1 + 11) = *v19;
        a1[96] = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v21 = *v19;
        sub_1E3C2B46C(*v19, *((unsigned char *)a2 + 96));
        *((void *)a1 + 11) = v21;
        a1[96] = v20;
      }
      char v22 = (id *)(a2 + 13);
      int v23 = *((unsigned __int8 *)a2 + 112);
      if (v23 == 255)
      {
        *((void *)a1 + 13) = *v22;
        a1[112] = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v24 = *v22;
        sub_1E3C2B46C(*v22, *((unsigned char *)a2 + 112));
        *((void *)a1 + 13) = v24;
        a1[112] = v23;
      }
      uint64_t v25 = (id *)(a2 + 15);
      int v26 = *((unsigned __int8 *)a2 + 128);
      if (v26 == 255)
      {
        *((void *)a1 + 15) = *v25;
        a1[128] = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v27 = *v25;
        sub_1E3C2B46C(*v25, *((unsigned char *)a2 + 128));
        *((void *)a1 + 15) = v27;
        a1[128] = v26;
      }
      a1[129] = *((unsigned char *)a2 + 129);
      uint64_t v28 = (int *)sub_1E3E78740();
      uint64_t v29 = v28[11];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = (uint64_t)a2 + v29;
      uint64_t v32 = sub_1E3E78630();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      uint64_t v33 = v28[12];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = (char **)((char *)a2 + v33);
      uint64_t v36 = v35[1];
      *(void *)uint64_t v34 = *v35;
      *((void *)v34 + 1) = v36;
      a1[v28[13]] = *((unsigned char *)a2 + v28[13]);
      a1[v28[14]] = *((unsigned char *)a2 + v28[14]);
      a1[v28[15]] = *((unsigned char *)a2 + v28[15]);
      uint64_t v37 = v28[16];
      uint64_t v38 = &a1[v37];
      uint64_t v39 = (char **)((char *)a2 + v37);
      uint64_t v40 = v39[1];
      *(void *)uint64_t v38 = *v39;
      *((void *)v38 + 1) = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = *a2;
      *(void *)a1 = *a2;
      id v12 = v11;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void _s4DataOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_4:
    uint64_t v3 = *(void **)a1;

    return;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      return;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 != 255) {
    sub_1E3C2B7BC(*(void *)(a1 + 16), *(void *)(a1 + 24), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 != 255) {
    sub_1E3C2B7D4(*(id *)(a1 + 56), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 != 255) {
    sub_1E3C2B7D4(*(id *)(a1 + 72), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 96);
  if (v7 != 255) {
    sub_1E3C2B7D4(*(id *)(a1 + 88), v7);
  }
  int v8 = *(unsigned __int8 *)(a1 + 112);
  if (v8 != 255) {
    sub_1E3C2B7D4(*(id *)(a1 + 104), v8);
  }
  int v9 = *(unsigned __int8 *)(a1 + 128);
  if (v9 != 255) {
    sub_1E3C2B7D4(*(id *)(a1 + 120), v9);
  }
  uint64_t v10 = a1 + *(int *)(sub_1E3E78740() + 44);
  uint64_t v11 = sub_1E3E78630();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

uint64_t _s4DataOwcp(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    int v5 = *(unsigned __int8 *)(a2 + 32);
    swift_bridgeObjectRetain();
    if (v5 == 255)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    }
    else
    {
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 24);
      sub_1E3C2B454(v6, v7, v5);
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = v5;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    uint64_t v10 = (id *)(a2 + 56);
    int v11 = *(unsigned __int8 *)(a2 + 64);
    if (v11 == 255)
    {
      *(void *)(a1 + 56) = *v10;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    }
    else
    {
      id v12 = *v10;
      sub_1E3C2B46C(*v10, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v12;
      *(unsigned char *)(a1 + 64) = v11;
    }
    uint64_t v13 = (id *)(a2 + 72);
    int v14 = *(unsigned __int8 *)(a2 + 80);
    if (v14 == 255)
    {
      *(void *)(a1 + 72) = *v13;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    }
    else
    {
      id v15 = *v13;
      sub_1E3C2B46C(*v13, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v15;
      *(unsigned char *)(a1 + 80) = v14;
    }
    uint64_t v16 = (id *)(a2 + 88);
    int v17 = *(unsigned __int8 *)(a2 + 96);
    if (v17 == 255)
    {
      *(void *)(a1 + 88) = *v16;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    }
    else
    {
      id v18 = *v16;
      sub_1E3C2B46C(*v16, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v18;
      *(unsigned char *)(a1 + 96) = v17;
    }
    uint64_t v19 = (id *)(a2 + 104);
    int v20 = *(unsigned __int8 *)(a2 + 112);
    if (v20 == 255)
    {
      *(void *)(a1 + 104) = *v19;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    }
    else
    {
      id v21 = *v19;
      sub_1E3C2B46C(*v19, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v21;
      *(unsigned char *)(a1 + 112) = v20;
    }
    char v22 = (id *)(a2 + 120);
    int v23 = *(unsigned __int8 *)(a2 + 128);
    if (v23 == 255)
    {
      *(void *)(a1 + 120) = *v22;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    }
    else
    {
      id v24 = *v22;
      sub_1E3C2B46C(*v22, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v24;
      *(unsigned char *)(a1 + 128) = v23;
    }
    *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
    uint64_t v25 = (int *)sub_1E3E78740();
    uint64_t v26 = v25[11];
    uint64_t v27 = a1 + v26;
    uint64_t v28 = a2 + v26;
    uint64_t v29 = sub_1E3E78630();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = v25[12];
    uint64_t v31 = (void *)(a1 + v30);
    uint64_t v32 = (void *)(a2 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    *(unsigned char *)(a1 + v25[13]) = *(unsigned char *)(a2 + v25[13]);
    *(unsigned char *)(a1 + v25[14]) = *(unsigned char *)(a2 + v25[14]);
    *(unsigned char *)(a1 + v25[15]) = *(unsigned char *)(a2 + v25[15]);
    uint64_t v34 = v25[16];
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (void *)(a2 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    int v8 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    id v9 = v8;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s4DataOwca(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1E3C34018(a1, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      int v4 = *(unsigned __int8 *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v4 == 255)
      {
        long long v9 = *(_OWORD *)(a2 + 16);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v9;
      }
      else
      {
        uint64_t v5 = *(void *)(a2 + 16);
        uint64_t v6 = *(void *)(a2 + 24);
        sub_1E3C2B454(v5, v6, v4);
        *(void *)(a1 + 16) = v5;
        *(void *)(a1 + 24) = v6;
        *(unsigned char *)(a1 + 32) = v4;
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      uint64_t v10 = (id *)(a2 + 56);
      int v11 = *(unsigned __int8 *)(a2 + 64);
      if (v11 == 255)
      {
        id v13 = *v10;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 56) = v13;
      }
      else
      {
        id v12 = *v10;
        sub_1E3C2B46C(*v10, *(unsigned char *)(a2 + 64));
        *(void *)(a1 + 56) = v12;
        *(unsigned char *)(a1 + 64) = v11;
      }
      int v14 = (id *)(a2 + 72);
      int v15 = *(unsigned __int8 *)(a2 + 80);
      if (v15 == 255)
      {
        id v17 = *v14;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 72) = v17;
      }
      else
      {
        id v16 = *v14;
        sub_1E3C2B46C(*v14, *(unsigned char *)(a2 + 80));
        *(void *)(a1 + 72) = v16;
        *(unsigned char *)(a1 + 80) = v15;
      }
      id v18 = (id *)(a2 + 88);
      int v19 = *(unsigned __int8 *)(a2 + 96);
      if (v19 == 255)
      {
        id v21 = *v18;
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 88) = v21;
      }
      else
      {
        id v20 = *v18;
        sub_1E3C2B46C(*v18, *(unsigned char *)(a2 + 96));
        *(void *)(a1 + 88) = v20;
        *(unsigned char *)(a1 + 96) = v19;
      }
      char v22 = (id *)(a2 + 104);
      int v23 = *(unsigned __int8 *)(a2 + 112);
      if (v23 == 255)
      {
        id v25 = *v22;
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 104) = v25;
      }
      else
      {
        id v24 = *v22;
        sub_1E3C2B46C(*v22, *(unsigned char *)(a2 + 112));
        *(void *)(a1 + 104) = v24;
        *(unsigned char *)(a1 + 112) = v23;
      }
      uint64_t v26 = (id *)(a2 + 120);
      int v27 = *(unsigned __int8 *)(a2 + 128);
      if (v27 == 255)
      {
        id v29 = *v26;
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 120) = v29;
      }
      else
      {
        id v28 = *v26;
        sub_1E3C2B46C(*v26, *(unsigned char *)(a2 + 128));
        *(void *)(a1 + 120) = v28;
        *(unsigned char *)(a1 + 128) = v27;
      }
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      uint64_t v30 = (int *)sub_1E3E78740();
      uint64_t v31 = v30[11];
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      uint64_t v34 = sub_1E3E78630();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      uint64_t v35 = v30[12];
      uint64_t v36 = (void *)(a1 + v35);
      uint64_t v37 = (void *)(a2 + v35);
      void *v36 = *v37;
      v36[1] = v37[1];
      *(unsigned char *)(a1 + v30[13]) = *(unsigned char *)(a2 + v30[13]);
      *(unsigned char *)(a1 + v30[14]) = *(unsigned char *)(a2 + v30[14]);
      *(unsigned char *)(a1 + v30[15]) = *(unsigned char *)(a2 + v30[15]);
      uint64_t v38 = v30[16];
      uint64_t v39 = (void *)(a1 + v38);
      uint64_t v40 = (void *)(a2 + v38);
      *uint64_t v39 = *v40;
      v39[1] = v40[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *_s4DataOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v7 = (int *)sub_1E3E78740();
    uint64_t v8 = v7[11];
    long long v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1E3E78630();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)((char *)a2 + v7[12]);
    *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
    *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
    *((unsigned char *)a1 + v7[15]) = *((unsigned char *)a2 + v7[15]);
    *(_OWORD *)((char *)a1 + v7[16]) = *(_OWORD *)((char *)a2 + v7[16]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s4DataOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1E3C34018((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for NowPlayingArtwork.Data);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v7 = (int *)sub_1E3E78740();
      uint64_t v8 = v7[11];
      long long v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1E3E78630();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)((char *)a2 + v7[12]);
      *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      *((unsigned char *)a1 + v7[15]) = *((unsigned char *)a2 + v7[15]);
      *(_OWORD *)((char *)a1 + v7[16]) = *(_OWORD *)((char *)a2 + v7[16]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1E3E7633C()
{
  uint64_t result = sub_1E3E78740();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1E3E763D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBFE1168);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E3E76434()
{
  unint64_t result = qword_1EBFDF530;
  if (!qword_1EBFDF530)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBFDF530);
  }
  return result;
}

uint64_t sub_1E3E76474(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1E3CC7660(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(sub_1E3E7A160() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_1E3E7A150();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1E3CC7660(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t _s14JSClientObjectCMa()
{
  return self;
}

id sub_1E3E76B3C()
{
  sub_1E3C7CDFC();
  sub_1E3E7BE20();
  sub_1E3E7BE00();
  if (v6)
  {
    sub_1E3E78A90();
    swift_release();
    char v0 = v4;
  }
  else
  {
    char v0 = 0;
  }
  int64_t v1 = (objc_class *)_s14JSClientObjectCMa();
  uint64_t v2 = objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR____TtCO10PodcastsUI6Legacy14JSClientObject_accountStore] = v6;
  v2[OBJC_IVAR____TtCO10PodcastsUI6Legacy14JSClientObject_isPersonalizationDisabled] = v0;
  v5.receiver = v2;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1E3E76C00()
{
  if (objc_msgSend(self, sel_isRunningOnVisionOS)) {
    return 0x447974696C616572;
  }
  id v1 = objc_msgSend(self, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2 == (id)1) {
    return 6578544;
  }
  else {
    return 0x656E6F6870;
  }
}

void sub_1E3E76CBC(uint64_t a1, uint64_t a2)
{
  id v6 = objc_msgSend(self, sel__applePodcastsFoundationSharedUserDefaults);
  if (a1 == 7104878 && a2 == 0xE300000000000000 || (sub_1E3E7E150() & 1) != 0)
  {
    char v4 = (void *)sub_1E3E7CCF0();
    objc_msgSend(v6, sel_setURL_forKey_, 0, v4);
  }
  else
  {
    objc_super v5 = (void *)sub_1E3E7CCF0();
    char v4 = (void *)sub_1E3E7CCF0();
    objc_msgSend(v6, sel_setObject_forKey_, v5, v4);
  }
}

uint64_t sub_1E3E76DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1E3C241A4(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

PodcastsUI::ColumnSpan __swiftcall Grid.grid23Columns(for:horizontal:)(PodcastsUI::SizeClass a1, Swift::Bool horizontal)
{
  uint64_t v4 = *(void *)v3;
  if (*(unsigned char *)(v3 + 8) == 1)
  {
    switch(v4)
    {
      case 1:
        uint64_t v5 = a1;
        id v6 = &unk_1E3E984F8;
        goto LABEL_15;
      case 2:
      case 4:
        uint64_t v5 = a1;
        id v6 = &unk_1E3E98538;
LABEL_15:
        uint64_t v4 = v6[v5];
        break;
      case 3:
      case 5:
        uint64_t v7 = 1;
        uint64_t v8 = 1;
        switch(a1)
        {
          case PodcastsUI_SizeClass_two:
            uint64_t v7 = 4;
            if (!horizontal) {
              uint64_t v7 = 1;
            }
            uint64_t v8 = 3;
            if (!horizontal) {
              uint64_t v8 = 1;
            }
            goto LABEL_9;
          case PodcastsUI_SizeClass_three:
            goto LABEL_17;
          case PodcastsUI_SizeClass_four:
            goto LABEL_18;
          case PodcastsUI_SizeClass_five:
            *id v2 = 4;
            v2[1] = 1;
            break;
          case PodcastsUI_SizeClass_six:
            BOOL v9 = !horizontal;
            uint64_t v10 = 5;
            uint64_t v11 = 9;
            goto LABEL_29;
          case PodcastsUI_SizeClass_seven:
            uint64_t v12 = 6;
            if (horizontal) {
              uint64_t v12 = 28;
            }
            uint64_t v13 = 5;
            if (!horizontal) {
              uint64_t v13 = 1;
            }
            *id v2 = v12;
            v2[1] = v13;
            break;
          case PodcastsUI_SizeClass_eight:
            BOOL v9 = !horizontal;
            uint64_t v10 = 7;
            uint64_t v11 = 15;
            goto LABEL_29;
          default:
            goto LABEL_9;
        }
        goto LABEL_35;
      default:
        uint64_t v7 = 1;
        uint64_t v8 = 1;
        switch(a1)
        {
          case PodcastsUI_SizeClass_three:
            BOOL v9 = !horizontal;
            uint64_t v10 = 3;
            if (!horizontal) {
              uint64_t v10 = 1;
            }
            goto LABEL_31;
          case PodcastsUI_SizeClass_four:
LABEL_17:
            *id v2 = 2;
            v2[1] = 1;
            goto LABEL_35;
          case PodcastsUI_SizeClass_five:
            BOOL v9 = !horizontal;
            uint64_t v10 = 3;
            uint64_t v11 = 5;
            goto LABEL_29;
          case PodcastsUI_SizeClass_six:
LABEL_18:
            *id v2 = 3;
            v2[1] = 1;
            goto LABEL_35;
          case PodcastsUI_SizeClass_seven:
            BOOL v9 = !horizontal;
            uint64_t v10 = 4;
            uint64_t v11 = 7;
LABEL_29:
            if (!v9) {
              uint64_t v10 = v11;
            }
LABEL_31:
            uint64_t v14 = 1;
            if (!v9) {
              uint64_t v14 = 2;
            }
            *id v2 = v10;
            v2[1] = v14;
            break;
          case PodcastsUI_SizeClass_eight:
            *id v2 = 5;
            v2[1] = 1;
            break;
          default:
LABEL_9:
            *id v2 = v7;
            v2[1] = v8;
            break;
        }
        goto LABEL_35;
    }
  }
  *id v2 = v4;
  v2[1] = 1;
LABEL_35:
  LOBYTE(result.span) = horizontal;
  LOBYTE(result.columns) = a1;
  return result;
}

BOOL _s10PodcastsUI4GridO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    switch(v2)
    {
      case 1:
        if (v3 != 1) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if (v3 != 2) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if (v3 != 3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if (v3 != 4) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 5:
        if (v3 <= 4) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if (v3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == v3;
  }
  return result;
}

ValueMetadata *type metadata accessor for Grid()
{
  return &type metadata for Grid;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptSentenceSplittingBehavior(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void destroy for TranscriptSentenceSplittingBehavior(uint64_t a1)
{
}

void *assignWithCopy for TranscriptSentenceSplittingBehavior(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  unint64_t v3 = (void *)a2[2];
  id v4 = (void *)a1[2];
  a1[2] = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for TranscriptSentenceSplittingBehavior(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptSentenceSplittingBehavior(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptSentenceSplittingBehavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)BOOL result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)BOOL result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t sub_1E3E7725C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1E3E77274(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *BOOL result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[2] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSentenceSplittingBehavior()
{
  return &type metadata for TranscriptSentenceSplittingBehavior;
}

uint64_t sub_1E3E772D0()
{
  return MEMORY[0x1F40D3A18]();
}

uint64_t sub_1E3E772E0()
{
  return MEMORY[0x1F40D3A78]();
}

uint64_t sub_1E3E772F0()
{
  return MEMORY[0x1F40D3A80]();
}

uint64_t sub_1E3E77300()
{
  return MEMORY[0x1F40D3A88]();
}

uint64_t sub_1E3E77310()
{
  return MEMORY[0x1F40D3A90]();
}

uint64_t sub_1E3E77320()
{
  return MEMORY[0x1F40D3A98]();
}

uint64_t sub_1E3E77330()
{
  return MEMORY[0x1F40D3B10]();
}

uint64_t sub_1E3E77340()
{
  return MEMORY[0x1F40D3B20]();
}

uint64_t sub_1E3E77350()
{
  return MEMORY[0x1F40D3B70]();
}

uint64_t sub_1E3E77380()
{
  return MEMORY[0x1F40D3C18]();
}

uint64_t sub_1E3E77390()
{
  return MEMORY[0x1F40D3C40]();
}

uint64_t sub_1E3E773A0()
{
  return MEMORY[0x1F40D3C48]();
}

uint64_t sub_1E3E773B0()
{
  return MEMORY[0x1F40D3C60]();
}

uint64_t sub_1E3E773C0()
{
  return MEMORY[0x1F40D3C88]();
}

uint64_t sub_1E3E773E0()
{
  return MEMORY[0x1F40D3CF8]();
}

uint64_t sub_1E3E77410()
{
  return MEMORY[0x1F40D3D80]();
}

uint64_t sub_1E3E77420()
{
  return MEMORY[0x1F40D3D90]();
}

uint64_t sub_1E3E77430()
{
  return MEMORY[0x1F40D3DA0]();
}

uint64_t sub_1E3E77440()
{
  return MEMORY[0x1F40D3E60]();
}

uint64_t sub_1E3E77450()
{
  return MEMORY[0x1F40D3E68]();
}

uint64_t sub_1E3E77460()
{
  return MEMORY[0x1F40D3E70]();
}

uint64_t sub_1E3E77470()
{
  return MEMORY[0x1F40D3E88]();
}

uint64_t sub_1E3E77480()
{
  return MEMORY[0x1F40D3E98]();
}

uint64_t sub_1E3E77490()
{
  return MEMORY[0x1F40D3EC8]();
}

uint64_t sub_1E3E774A0()
{
  return MEMORY[0x1F40D3F00]();
}

uint64_t sub_1E3E774B0()
{
  return MEMORY[0x1F40D3F08]();
}

uint64_t sub_1E3E774C0()
{
  return MEMORY[0x1F40D3F20]();
}

uint64_t sub_1E3E774D0()
{
  return MEMORY[0x1F40D3F28]();
}

uint64_t sub_1E3E774E0()
{
  return MEMORY[0x1F40D3FB8]();
}

uint64_t sub_1E3E774F0()
{
  return MEMORY[0x1F40D3FC0]();
}

uint64_t sub_1E3E77500()
{
  return MEMORY[0x1F40D3FE0]();
}

uint64_t sub_1E3E77510()
{
  return MEMORY[0x1F40D4008]();
}

uint64_t sub_1E3E77520()
{
  return MEMORY[0x1F40D4050]();
}

uint64_t sub_1E3E77530()
{
  return MEMORY[0x1F40D4058]();
}

uint64_t sub_1E3E77540()
{
  return MEMORY[0x1F40D4080]();
}

uint64_t sub_1E3E77550()
{
  return MEMORY[0x1F40D4090]();
}

uint64_t sub_1E3E77560()
{
  return MEMORY[0x1F40D40A0]();
}

uint64_t sub_1E3E77570()
{
  return MEMORY[0x1F40D40B8]();
}

uint64_t sub_1E3E77580()
{
  return MEMORY[0x1F40D40C8]();
}

uint64_t sub_1E3E77590()
{
  return MEMORY[0x1F40D40E8]();
}

uint64_t sub_1E3E775A0()
{
  return MEMORY[0x1F40D4120]();
}

uint64_t sub_1E3E775B0()
{
  return MEMORY[0x1F40D4160]();
}

uint64_t sub_1E3E775C0()
{
  return MEMORY[0x1F40D4188]();
}

uint64_t sub_1E3E775D0()
{
  return MEMORY[0x1F40D41E8]();
}

uint64_t sub_1E3E775E0()
{
  return MEMORY[0x1F40D4268]();
}

uint64_t sub_1E3E775F0()
{
  return MEMORY[0x1F40D4270]();
}

uint64_t sub_1E3E77600()
{
  return MEMORY[0x1F40D4288]();
}

uint64_t sub_1E3E77610()
{
  return MEMORY[0x1F40D4290]();
}

uint64_t sub_1E3E77620()
{
  return MEMORY[0x1F40D42A0]();
}

uint64_t sub_1E3E77630()
{
  return MEMORY[0x1F40D42B0]();
}

uint64_t sub_1E3E77640()
{
  return MEMORY[0x1F40D42C8]();
}

uint64_t sub_1E3E77650()
{
  return MEMORY[0x1F40D42D8]();
}

uint64_t sub_1E3E77660()
{
  return MEMORY[0x1F40D42E0]();
}

uint64_t sub_1E3E77670()
{
  return MEMORY[0x1F40D42F8]();
}

uint64_t sub_1E3E77680()
{
  return MEMORY[0x1F40D4300]();
}

uint64_t sub_1E3E77690()
{
  return MEMORY[0x1F40D4318]();
}

uint64_t sub_1E3E776A0()
{
  return MEMORY[0x1F40D4328]();
}

uint64_t sub_1E3E776B0()
{
  return MEMORY[0x1F40D4330]();
}

uint64_t sub_1E3E776C0()
{
  return MEMORY[0x1F40D4340]();
}

uint64_t sub_1E3E776D0()
{
  return MEMORY[0x1F40D4358]();
}

uint64_t sub_1E3E776E0()
{
  return MEMORY[0x1F40D4360]();
}

uint64_t sub_1E3E776F0()
{
  return MEMORY[0x1F40D4370]();
}

uint64_t sub_1E3E77700()
{
  return MEMORY[0x1F40D4388]();
}

uint64_t sub_1E3E77710()
{
  return MEMORY[0x1F40D4398]();
}

uint64_t sub_1E3E77720()
{
  return MEMORY[0x1F40D43A8]();
}

uint64_t sub_1E3E77730()
{
  return MEMORY[0x1F40D43C0]();
}

uint64_t sub_1E3E77740()
{
  return MEMORY[0x1F40D43C8]();
}

uint64_t sub_1E3E77750()
{
  return MEMORY[0x1F40D4430]();
}

uint64_t sub_1E3E77760()
{
  return MEMORY[0x1F40D4540]();
}

uint64_t sub_1E3E77770()
{
  return MEMORY[0x1F40D4558]();
}

uint64_t sub_1E3E77780()
{
  return MEMORY[0x1F40D45B0]();
}

uint64_t sub_1E3E77790()
{
  return MEMORY[0x1F4104C60]();
}

uint64_t sub_1E3E777A0()
{
  return MEMORY[0x1F40D45D8]();
}

uint64_t sub_1E3E777B0()
{
  return MEMORY[0x1F40D45E0]();
}

uint64_t sub_1E3E777C0()
{
  return MEMORY[0x1F40D4608]();
}

uint64_t sub_1E3E777D0()
{
  return MEMORY[0x1F40D4620]();
}

uint64_t sub_1E3E777F0()
{
  return MEMORY[0x1F40D46B0]();
}

uint64_t sub_1E3E77800()
{
  return MEMORY[0x1F40D46E0]();
}

uint64_t sub_1E3E77810()
{
  return MEMORY[0x1F40D4708]();
}

uint64_t sub_1E3E77820()
{
  return MEMORY[0x1F40D4720]();
}

uint64_t sub_1E3E77830()
{
  return MEMORY[0x1F40D4730]();
}

uint64_t sub_1E3E77840()
{
  return MEMORY[0x1F40D4738]();
}

uint64_t sub_1E3E77850()
{
  return MEMORY[0x1F40D4750]();
}

uint64_t sub_1E3E77860()
{
  return MEMORY[0x1F40D4798]();
}

uint64_t sub_1E3E77880()
{
  return MEMORY[0x1F40D4820]();
}

uint64_t sub_1E3E77890()
{
  return MEMORY[0x1F40D48B8]();
}

uint64_t sub_1E3E778A0()
{
  return MEMORY[0x1F40D48D0]();
}

uint64_t sub_1E3E778C0()
{
  return MEMORY[0x1F40E2E10]();
}

uint64_t sub_1E3E778D0()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1E3E778E0()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1E3E778F0()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1E3E77900()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1E3E77910()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1E3E77920()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1E3E77930()
{
  return MEMORY[0x1F40E3298]();
}

uint64_t sub_1E3E77940()
{
  return MEMORY[0x1F40E3340]();
}

uint64_t sub_1E3E77950()
{
  return MEMORY[0x1F40E3358]();
}

uint64_t sub_1E3E77960()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_1E3E77970()
{
  return MEMORY[0x1F40E3370]();
}

uint64_t sub_1E3E77980()
{
  return MEMORY[0x1F40E33D8]();
}

uint64_t sub_1E3E77990()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1E3E779A0()
{
  return MEMORY[0x1F40E3550]();
}

uint64_t sub_1E3E779B0()
{
  return MEMORY[0x1F40E3568]();
}

uint64_t sub_1E3E779C0()
{
  return MEMORY[0x1F40E35A8]();
}

uint64_t sub_1E3E779D0()
{
  return MEMORY[0x1F40E35B0]();
}

uint64_t sub_1E3E779E0()
{
  return MEMORY[0x1F40E35C0]();
}

uint64_t sub_1E3E779F0()
{
  return MEMORY[0x1F40E35D8]();
}

uint64_t sub_1E3E77A00()
{
  return MEMORY[0x1F40E3660]();
}

uint64_t sub_1E3E77A10()
{
  return MEMORY[0x1F40E36C8]();
}

uint64_t sub_1E3E77A20()
{
  return MEMORY[0x1F40E36D8]();
}

uint64_t sub_1E3E77A30()
{
  return MEMORY[0x1F40E37B8]();
}

uint64_t sub_1E3E77A40()
{
  return MEMORY[0x1F40E38E8]();
}

uint64_t sub_1E3E77A50()
{
  return MEMORY[0x1F40E3938]();
}

uint64_t sub_1E3E77A60()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1E3E77A70()
{
  return MEMORY[0x1F40E3B48]();
}

uint64_t sub_1E3E77A80()
{
  return MEMORY[0x1F40E3EA0]();
}

uint64_t sub_1E3E77A90()
{
  return MEMORY[0x1F40E3EB0]();
}

uint64_t sub_1E3E77AA0()
{
  return MEMORY[0x1F40E3EF8]();
}

uint64_t sub_1E3E77AB0()
{
  return MEMORY[0x1F40E3F58]();
}

uint64_t sub_1E3E77AC0()
{
  return MEMORY[0x1F40E3F80]();
}

uint64_t sub_1E3E77AD0()
{
  return MEMORY[0x1F40E4008]();
}

uint64_t sub_1E3E77AE0()
{
  return MEMORY[0x1F40E4090]();
}

uint64_t sub_1E3E77AF0()
{
  return MEMORY[0x1F40E40A0]();
}

uint64_t sub_1E3E77B00()
{
  return MEMORY[0x1F40E4178]();
}

uint64_t sub_1E3E77B10()
{
  return MEMORY[0x1F40E4518]();
}

uint64_t sub_1E3E77B20()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1E3E77B30()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1E3E77B40()
{
  return MEMORY[0x1F40E4570]();
}

uint64_t sub_1E3E77B50()
{
  return MEMORY[0x1F40E4590]();
}

uint64_t sub_1E3E77B60()
{
  return MEMORY[0x1F40E45B8]();
}

uint64_t sub_1E3E77B70()
{
  return MEMORY[0x1F40E4600]();
}

uint64_t sub_1E3E77B80()
{
  return MEMORY[0x1F40E46B8]();
}

uint64_t sub_1E3E77B90()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_1E3E77BA0()
{
  return MEMORY[0x1F40E4898]();
}

uint64_t sub_1E3E77BB0()
{
  return MEMORY[0x1F4144668]();
}

uint64_t sub_1E3E77BC0()
{
  return MEMORY[0x1F4144670]();
}

uint64_t sub_1E3E77BD0()
{
  return MEMORY[0x1F4144678]();
}

uint64_t sub_1E3E77BE0()
{
  return MEMORY[0x1F40E48D8]();
}

uint64_t sub_1E3E77BF0()
{
  return MEMORY[0x1F40E48E8]();
}

uint64_t sub_1E3E77C00()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1E3E77C10()
{
  return MEMORY[0x1F40E4918]();
}

uint64_t sub_1E3E77C20()
{
  return MEMORY[0x1F40E4938]();
}

uint64_t sub_1E3E77C30()
{
  return MEMORY[0x1F40E4970]();
}

uint64_t sub_1E3E77C40()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1E3E77C50()
{
  return MEMORY[0x1F40E49E0]();
}

uint64_t sub_1E3E77C60()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_1E3E77C70()
{
  return MEMORY[0x1F40E49F8]();
}

uint64_t sub_1E3E77C80()
{
  return MEMORY[0x1F40E4A28]();
}

uint64_t sub_1E3E77C90()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1E3E77CA0()
{
  return MEMORY[0x1F40E4A90]();
}

uint64_t sub_1E3E77CB0()
{
  return MEMORY[0x1F40E4AA8]();
}

uint64_t sub_1E3E77CC0()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_1E3E77CD0()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_1E3E77CE0()
{
  return MEMORY[0x1F40E4B50]();
}

uint64_t sub_1E3E77CF0()
{
  return MEMORY[0x1F40E4B68]();
}

uint64_t sub_1E3E77D00()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1E3E77D10()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_1E3E77D20()
{
  return MEMORY[0x1F40E4C78]();
}

uint64_t sub_1E3E77D30()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1E3E77D40()
{
  return MEMORY[0x1F40E4D58]();
}

uint64_t sub_1E3E77D50()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1E3E77D60()
{
  return MEMORY[0x1F40E4E10]();
}

uint64_t sub_1E3E77D70()
{
  return MEMORY[0x1F40E4ED0]();
}

uint64_t sub_1E3E77D80()
{
  return MEMORY[0x1F40E4EE0]();
}

uint64_t sub_1E3E77D90()
{
  return MEMORY[0x1F40E4EF0]();
}

uint64_t sub_1E3E77DA0()
{
  return MEMORY[0x1F4144680]();
}

uint64_t sub_1E3E77DB0()
{
  return MEMORY[0x1F40E5078]();
}

uint64_t sub_1E3E77DC0()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_1E3E77DD0()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1E3E77DE0()
{
  return MEMORY[0x1F40E52C0]();
}

uint64_t sub_1E3E77DF0()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_1E3E77E00()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1E3E77E10()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1E3E77E20()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1E3E77E30()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1E3E77E40()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1E3E77E50()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1E3E77E60()
{
  return MEMORY[0x1F40E5500]();
}

uint64_t sub_1E3E77E70()
{
  return MEMORY[0x1F40E5510]();
}

uint64_t sub_1E3E77E80()
{
  return MEMORY[0x1F40E5540]();
}

uint64_t sub_1E3E77E90()
{
  return MEMORY[0x1F40E5578]();
}

uint64_t sub_1E3E77EA0()
{
  return MEMORY[0x1F40E5648]();
}

uint64_t sub_1E3E77EB0()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_1E3E77EC0()
{
  return MEMORY[0x1F40E57F8]();
}

uint64_t sub_1E3E77ED0()
{
  return MEMORY[0x1F40E5840]();
}

uint64_t sub_1E3E77EE0()
{
  return MEMORY[0x1F40E5850]();
}

uint64_t sub_1E3E77EF0()
{
  return MEMORY[0x1F40E5868]();
}

uint64_t sub_1E3E77F00()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1E3E77F10()
{
  return MEMORY[0x1F40E58A8]();
}

uint64_t sub_1E3E77F20()
{
  return MEMORY[0x1F40E58B0]();
}

uint64_t sub_1E3E77F30()
{
  return MEMORY[0x1F40E58C0]();
}

uint64_t sub_1E3E77F40()
{
  return MEMORY[0x1F40E59E0]();
}

uint64_t sub_1E3E77F50()
{
  return MEMORY[0x1F40E5A58]();
}

uint64_t sub_1E3E77F60()
{
  return MEMORY[0x1F40E5AA8]();
}

uint64_t sub_1E3E77F70()
{
  return MEMORY[0x1F40E5AB8]();
}

uint64_t sub_1E3E77F80()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_1E3E77F90()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_1E3E77FA0()
{
  return MEMORY[0x1F40E5BD8]();
}

uint64_t sub_1E3E77FB0()
{
  return MEMORY[0x1F40E5EA0]();
}

uint64_t sub_1E3E77FC0()
{
  return MEMORY[0x1F4165760]();
}

uint64_t sub_1E3E77FD0()
{
  return MEMORY[0x1F40E5EA8]();
}

uint64_t sub_1E3E77FE0()
{
  return MEMORY[0x1F40E5EF0]();
}

uint64_t sub_1E3E78000()
{
  return MEMORY[0x1F412C950]();
}

uint64_t sub_1E3E78010()
{
  return MEMORY[0x1F412C958]();
}

uint64_t sub_1E3E78020()
{
  return MEMORY[0x1F412C960]();
}

uint64_t sub_1E3E78030()
{
  return MEMORY[0x1F4187538]();
}

uint64_t sub_1E3E78040()
{
  return MEMORY[0x1F4187540]();
}

uint64_t sub_1E3E78050()
{
  return MEMORY[0x1F4187578]();
}

uint64_t sub_1E3E78060()
{
  return MEMORY[0x1F4187588]();
}

uint64_t sub_1E3E78070()
{
  return MEMORY[0x1F4182DA0]();
}

uint64_t sub_1E3E78080()
{
  return MEMORY[0x1F40D9648]();
}

uint64_t sub_1E3E78090()
{
  return MEMORY[0x1F4119150]();
}

uint64_t sub_1E3E780A0()
{
  return MEMORY[0x1F41875C8]();
}

uint64_t sub_1E3E780B0()
{
  return MEMORY[0x1F41875D0]();
}

uint64_t sub_1E3E780C0()
{
  return MEMORY[0x1F41875D8]();
}

uint64_t sub_1E3E780D0()
{
  return MEMORY[0x1F41875F0]();
}

uint64_t sub_1E3E780E0()
{
  return MEMORY[0x1F4187600]();
}

uint64_t sub_1E3E780F0()
{
  return MEMORY[0x1F4187610]();
}

uint64_t sub_1E3E78100()
{
  return MEMORY[0x1F4187638]();
}

uint64_t sub_1E3E78110()
{
  return MEMORY[0x1F4187650]();
}

uint64_t sub_1E3E78120()
{
  return MEMORY[0x1F4186958]();
}

uint64_t sub_1E3E78130()
{
  return MEMORY[0x1F4186968]();
}

uint64_t sub_1E3E78140()
{
  return MEMORY[0x1F4186978]();
}

uint64_t sub_1E3E78160()
{
  return MEMORY[0x1F4104C68]();
}

uint64_t sub_1E3E78170()
{
  return MEMORY[0x1F4104C88]();
}

uint64_t sub_1E3E78180()
{
  return MEMORY[0x1F41882A0]();
}

uint64_t sub_1E3E78190()
{
  return MEMORY[0x1F41882C0]();
}

uint64_t sub_1E3E781A0()
{
  return MEMORY[0x1F41882C8]();
}

uint64_t sub_1E3E781B0()
{
  return MEMORY[0x1F41882D8]();
}

uint64_t sub_1E3E781C0()
{
  return MEMORY[0x1F41882E8]();
}

uint64_t sub_1E3E781D0()
{
  return MEMORY[0x1F41882F0]();
}

uint64_t sub_1E3E781E0()
{
  return MEMORY[0x1F4187678]();
}

uint64_t sub_1E3E781F0()
{
  return MEMORY[0x1F4187688]();
}

uint64_t sub_1E3E78200()
{
  return MEMORY[0x1F4188348]();
}

uint64_t sub_1E3E78210()
{
  return MEMORY[0x1F4187698]();
}

uint64_t sub_1E3E78220()
{
  return MEMORY[0x1F41883C0]();
}

uint64_t sub_1E3E78230()
{
  return MEMORY[0x1F41883C8]();
}

uint64_t sub_1E3E78240()
{
  return MEMORY[0x1F4108930]();
}

uint64_t sub_1E3E78250()
{
  return MEMORY[0x1F4108948]();
}

uint64_t sub_1E3E78260()
{
  return MEMORY[0x1F4108950]();
}

uint64_t sub_1E3E78270()
{
  return MEMORY[0x1F4108968]();
}

uint64_t sub_1E3E78280()
{
  return MEMORY[0x1F4108970]();
}

uint64_t sub_1E3E78290()
{
  return MEMORY[0x1F4108988]();
}

uint64_t sub_1E3E782A0()
{
  return MEMORY[0x1F4108998]();
}

uint64_t sub_1E3E782B0()
{
  return MEMORY[0x1F41089A0]();
}

uint64_t sub_1E3E782C0()
{
  return MEMORY[0x1F41089B8]();
}

uint64_t _s10PodcastsUI10ShowEntityV20CustomRepresentationCfd_0()
{
  return MEMORY[0x1F41089C0]();
}

uint64_t sub_1E3E782E0()
{
  return MEMORY[0x1F41089D8]();
}

uint64_t sub_1E3E782F0()
{
  return MEMORY[0x1F4108A30]();
}

uint64_t sub_1E3E78300()
{
  return MEMORY[0x1F4108A38]();
}

uint64_t sub_1E3E78310()
{
  return MEMORY[0x1F4108A40]();
}

uint64_t sub_1E3E78320()
{
  return MEMORY[0x1F4108AA8]();
}

uint64_t sub_1E3E78340()
{
  return MEMORY[0x1F4108BD8]();
}

uint64_t sub_1E3E78350()
{
  return MEMORY[0x1F4108BF0]();
}

uint64_t sub_1E3E78380()
{
  return MEMORY[0x1F4144688]();
}

uint64_t sub_1E3E78390()
{
  return MEMORY[0x1F4144690]();
}

uint64_t sub_1E3E783A0()
{
  return MEMORY[0x1F4144698]();
}

uint64_t sub_1E3E783B0()
{
  return MEMORY[0x1F41446A0]();
}

uint64_t sub_1E3E783C0()
{
  return MEMORY[0x1F41446A8]();
}

uint64_t sub_1E3E783D0()
{
  return MEMORY[0x1F41446B0]();
}

uint64_t sub_1E3E783E0()
{
  return MEMORY[0x1F41446B8]();
}

uint64_t sub_1E3E783F0()
{
  return MEMORY[0x1F41446C0]();
}

uint64_t sub_1E3E78400()
{
  return MEMORY[0x1F41446C8]();
}

uint64_t sub_1E3E78410()
{
  return MEMORY[0x1F41446D0]();
}

uint64_t sub_1E3E78420()
{
  return MEMORY[0x1F41446D8]();
}

uint64_t sub_1E3E78430()
{
  return MEMORY[0x1F41446E0]();
}

uint64_t sub_1E3E78440()
{
  return MEMORY[0x1F41446E8]();
}

uint64_t sub_1E3E78450()
{
  return MEMORY[0x1F41446F0]();
}

uint64_t sub_1E3E78460()
{
  return MEMORY[0x1F41446F8]();
}

uint64_t sub_1E3E78490()
{
  return MEMORY[0x1F4144710]();
}

uint64_t sub_1E3E784A0()
{
  return MEMORY[0x1F4144718]();
}

uint64_t sub_1E3E784B0()
{
  return MEMORY[0x1F4144720]();
}

uint64_t sub_1E3E784C0()
{
  return MEMORY[0x1F4144728]();
}

uint64_t sub_1E3E784D0()
{
  return MEMORY[0x1F4144730]();
}

uint64_t sub_1E3E784E0()
{
  return MEMORY[0x1F4144738]();
}

uint64_t sub_1E3E784F0()
{
  return MEMORY[0x1F4144740]();
}

uint64_t sub_1E3E78500()
{
  return MEMORY[0x1F4144748]();
}

uint64_t sub_1E3E78510()
{
  return MEMORY[0x1F4144750]();
}

uint64_t sub_1E3E78520()
{
  return MEMORY[0x1F4144758]();
}

uint64_t sub_1E3E78540()
{
  return MEMORY[0x1F4144768]();
}

uint64_t sub_1E3E78550()
{
  return MEMORY[0x1F4144770]();
}

uint64_t sub_1E3E78560()
{
  return MEMORY[0x1F4144778]();
}

uint64_t sub_1E3E78570()
{
  return MEMORY[0x1F4144780]();
}

uint64_t sub_1E3E78580()
{
  return MEMORY[0x1F4144788]();
}

uint64_t sub_1E3E78590()
{
  return MEMORY[0x1F4144790]();
}

uint64_t sub_1E3E785A0()
{
  return MEMORY[0x1F4144798]();
}

uint64_t sub_1E3E785B0()
{
  return MEMORY[0x1F41447A0]();
}

uint64_t sub_1E3E785C0()
{
  return MEMORY[0x1F41447A8]();
}

uint64_t sub_1E3E785D0()
{
  return MEMORY[0x1F41447B0]();
}

uint64_t sub_1E3E785E0()
{
  return MEMORY[0x1F41447B8]();
}

uint64_t sub_1E3E785F0()
{
  return MEMORY[0x1F41447C0]();
}

uint64_t sub_1E3E78600()
{
  return MEMORY[0x1F41447C8]();
}

uint64_t sub_1E3E78610()
{
  return MEMORY[0x1F41447D0]();
}

uint64_t sub_1E3E78620()
{
  return MEMORY[0x1F41447D8]();
}

uint64_t sub_1E3E78630()
{
  return MEMORY[0x1F41447E0]();
}

uint64_t sub_1E3E78640()
{
  return MEMORY[0x1F41447E8]();
}

uint64_t sub_1E3E78650()
{
  return MEMORY[0x1F41447F0]();
}

uint64_t sub_1E3E78660()
{
  return MEMORY[0x1F41447F8]();
}

uint64_t sub_1E3E78670()
{
  return MEMORY[0x1F4144800]();
}

uint64_t sub_1E3E78680()
{
  return MEMORY[0x1F4144808]();
}

uint64_t sub_1E3E78690()
{
  return MEMORY[0x1F4144810]();
}

uint64_t sub_1E3E786A0()
{
  return MEMORY[0x1F4144818]();
}

uint64_t sub_1E3E786B0()
{
  return MEMORY[0x1F4144820]();
}

uint64_t sub_1E3E786C0()
{
  return MEMORY[0x1F4144828]();
}

uint64_t sub_1E3E786D0()
{
  return MEMORY[0x1F4144830]();
}

uint64_t sub_1E3E786E0()
{
  return MEMORY[0x1F4144838]();
}

uint64_t sub_1E3E786F0()
{
  return MEMORY[0x1F4144840]();
}

uint64_t sub_1E3E78700()
{
  return MEMORY[0x1F4144848]();
}

uint64_t sub_1E3E78710()
{
  return MEMORY[0x1F4144850]();
}

uint64_t sub_1E3E78720()
{
  return MEMORY[0x1F4144858]();
}

uint64_t sub_1E3E78730()
{
  return MEMORY[0x1F4144860]();
}

uint64_t sub_1E3E78740()
{
  return MEMORY[0x1F4144868]();
}

uint64_t sub_1E3E78750()
{
  return MEMORY[0x1F4144870]();
}

uint64_t sub_1E3E78760()
{
  return MEMORY[0x1F4144878]();
}

uint64_t sub_1E3E78770()
{
  return MEMORY[0x1F4144880]();
}

uint64_t sub_1E3E78780()
{
  return MEMORY[0x1F4144888]();
}

uint64_t sub_1E3E78790()
{
  return MEMORY[0x1F4144890]();
}

uint64_t sub_1E3E787A0()
{
  return MEMORY[0x1F4144898]();
}

uint64_t sub_1E3E787B0()
{
  return MEMORY[0x1F41448A0]();
}

uint64_t sub_1E3E787C0()
{
  return MEMORY[0x1F41448A8]();
}

uint64_t sub_1E3E787D0()
{
  return MEMORY[0x1F41448B0]();
}

uint64_t sub_1E3E787E0()
{
  return MEMORY[0x1F41448B8]();
}

uint64_t sub_1E3E787F0()
{
  return MEMORY[0x1F41448C0]();
}

uint64_t sub_1E3E78800()
{
  return MEMORY[0x1F41448C8]();
}

uint64_t sub_1E3E78810()
{
  return MEMORY[0x1F41448D0]();
}

uint64_t sub_1E3E78820()
{
  return MEMORY[0x1F41448D8]();
}

uint64_t sub_1E3E78830()
{
  return MEMORY[0x1F41448E0]();
}

uint64_t sub_1E3E78840()
{
  return MEMORY[0x1F41448E8]();
}

uint64_t sub_1E3E78850()
{
  return MEMORY[0x1F41448F0]();
}

uint64_t sub_1E3E78860()
{
  return MEMORY[0x1F41448F8]();
}

uint64_t sub_1E3E78870()
{
  return MEMORY[0x1F4144900]();
}

uint64_t sub_1E3E78880()
{
  return MEMORY[0x1F4144908]();
}

uint64_t sub_1E3E78890()
{
  return MEMORY[0x1F4144910]();
}

uint64_t sub_1E3E788A0()
{
  return MEMORY[0x1F4144918]();
}

uint64_t sub_1E3E788B0()
{
  return MEMORY[0x1F4144920]();
}

uint64_t sub_1E3E788C0()
{
  return MEMORY[0x1F4144928]();
}

uint64_t sub_1E3E788D0()
{
  return MEMORY[0x1F4144930]();
}

uint64_t sub_1E3E788E0()
{
  return MEMORY[0x1F4144938]();
}

uint64_t sub_1E3E788F0()
{
  return MEMORY[0x1F4144940]();
}

uint64_t sub_1E3E78900()
{
  return MEMORY[0x1F4144948]();
}

uint64_t sub_1E3E78910()
{
  return MEMORY[0x1F4144950]();
}

uint64_t sub_1E3E78920()
{
  return MEMORY[0x1F4144958]();
}

uint64_t sub_1E3E78930()
{
  return MEMORY[0x1F4144960]();
}

uint64_t sub_1E3E78940()
{
  return MEMORY[0x1F4144968]();
}

uint64_t sub_1E3E78950()
{
  return MEMORY[0x1F4144970]();
}

uint64_t sub_1E3E78960()
{
  return MEMORY[0x1F4144978]();
}

uint64_t sub_1E3E78970()
{
  return MEMORY[0x1F4144980]();
}

uint64_t sub_1E3E78980()
{
  return MEMORY[0x1F4144988]();
}

uint64_t sub_1E3E78990()
{
  return MEMORY[0x1F4144990]();
}

uint64_t sub_1E3E789A0()
{
  return MEMORY[0x1F4144998]();
}

uint64_t sub_1E3E789B0()
{
  return MEMORY[0x1F41449A0]();
}

uint64_t sub_1E3E789C0()
{
  return MEMORY[0x1F41449A8]();
}

uint64_t sub_1E3E789D0()
{
  return MEMORY[0x1F41449B0]();
}

uint64_t sub_1E3E789E0()
{
  return MEMORY[0x1F41449B8]();
}

uint64_t sub_1E3E789F0()
{
  return MEMORY[0x1F41449C0]();
}

uint64_t sub_1E3E78A00()
{
  return MEMORY[0x1F41449C8]();
}

uint64_t sub_1E3E78A10()
{
  return MEMORY[0x1F41449D0]();
}

uint64_t sub_1E3E78A20()
{
  return MEMORY[0x1F41449D8]();
}

uint64_t sub_1E3E78A30()
{
  return MEMORY[0x1F41449E0]();
}

uint64_t sub_1E3E78A40()
{
  return MEMORY[0x1F41449E8]();
}

uint64_t sub_1E3E78A50()
{
  return MEMORY[0x1F41449F0]();
}

uint64_t sub_1E3E78A60()
{
  return MEMORY[0x1F41449F8]();
}

uint64_t sub_1E3E78A70()
{
  return MEMORY[0x1F4144A00]();
}

uint64_t sub_1E3E78A80()
{
  return MEMORY[0x1F4144A08]();
}

uint64_t sub_1E3E78A90()
{
  return MEMORY[0x1F4144A10]();
}

uint64_t sub_1E3E78AA0()
{
  return MEMORY[0x1F4144A18]();
}

uint64_t sub_1E3E78AB0()
{
  return MEMORY[0x1F4144A20]();
}

uint64_t sub_1E3E78AC0()
{
  return MEMORY[0x1F4144A28]();
}

uint64_t sub_1E3E78AD0()
{
  return MEMORY[0x1F4144A30]();
}

uint64_t sub_1E3E78AE0()
{
  return MEMORY[0x1F4144A38]();
}

uint64_t sub_1E3E78AF0()
{
  return MEMORY[0x1F4144A40]();
}

uint64_t sub_1E3E78B00()
{
  return MEMORY[0x1F4144A48]();
}

uint64_t sub_1E3E78B10()
{
  return MEMORY[0x1F4144A50]();
}

uint64_t sub_1E3E78B20()
{
  return MEMORY[0x1F4144A58]();
}

uint64_t sub_1E3E78B30()
{
  return MEMORY[0x1F4144A60]();
}

uint64_t sub_1E3E78B40()
{
  return MEMORY[0x1F4144A68]();
}

uint64_t sub_1E3E78B50()
{
  return MEMORY[0x1F4144A70]();
}

uint64_t sub_1E3E78B60()
{
  return MEMORY[0x1F4144A78]();
}

uint64_t sub_1E3E78B70()
{
  return MEMORY[0x1F4144A80]();
}

uint64_t sub_1E3E78B80()
{
  return MEMORY[0x1F4144A88]();
}

uint64_t sub_1E3E78B90()
{
  return MEMORY[0x1F4144A90]();
}

uint64_t sub_1E3E78BA0()
{
  return MEMORY[0x1F4144A98]();
}

uint64_t sub_1E3E78BB0()
{
  return MEMORY[0x1F4144AA0]();
}

uint64_t sub_1E3E78BC0()
{
  return MEMORY[0x1F4144AA8]();
}

uint64_t sub_1E3E78BD0()
{
  return MEMORY[0x1F4144AB0]();
}

uint64_t sub_1E3E78BE0()
{
  return MEMORY[0x1F4144AB8]();
}

uint64_t sub_1E3E78BF0()
{
  return MEMORY[0x1F4144AC0]();
}

uint64_t sub_1E3E78C00()
{
  return MEMORY[0x1F4144AC8]();
}

uint64_t sub_1E3E78C10()
{
  return MEMORY[0x1F4144AD0]();
}

uint64_t sub_1E3E78C20()
{
  return MEMORY[0x1F4144AD8]();
}

uint64_t sub_1E3E78C30()
{
  return MEMORY[0x1F4144AE0]();
}

uint64_t sub_1E3E78C40()
{
  return MEMORY[0x1F4144AE8]();
}

uint64_t sub_1E3E78C50()
{
  return MEMORY[0x1F4144AF0]();
}

uint64_t sub_1E3E78C60()
{
  return MEMORY[0x1F4144AF8]();
}

uint64_t sub_1E3E78C70()
{
  return MEMORY[0x1F4144B00]();
}

uint64_t sub_1E3E78C80()
{
  return MEMORY[0x1F4144B08]();
}

uint64_t sub_1E3E78C90()
{
  return MEMORY[0x1F4144B10]();
}

uint64_t sub_1E3E78CA0()
{
  return MEMORY[0x1F4144B18]();
}

uint64_t sub_1E3E78CB0()
{
  return MEMORY[0x1F4144B20]();
}

uint64_t sub_1E3E78CC0()
{
  return MEMORY[0x1F4144B28]();
}

uint64_t sub_1E3E78CD0()
{
  return MEMORY[0x1F4144B30]();
}

uint64_t sub_1E3E78CE0()
{
  return MEMORY[0x1F4144B38]();
}

uint64_t sub_1E3E78CF0()
{
  return MEMORY[0x1F4144B40]();
}

uint64_t sub_1E3E78D00()
{
  return MEMORY[0x1F4144B48]();
}

uint64_t _s10PodcastsUI22PreparedArtworkRequestV10fileFormat0A10Foundation04FileG0Ovg_0()
{
  return MEMORY[0x1F4144B50]();
}

uint64_t sub_1E3E78D20()
{
  return MEMORY[0x1F4144B58]();
}

uint64_t sub_1E3E78D30()
{
  return MEMORY[0x1F4144B60]();
}

uint64_t sub_1E3E78D40()
{
  return MEMORY[0x1F4144B68]();
}

uint64_t sub_1E3E78D50()
{
  return MEMORY[0x1F4144B70]();
}

uint64_t sub_1E3E78D60()
{
  return MEMORY[0x1F4144B78]();
}

uint64_t sub_1E3E78D70()
{
  return MEMORY[0x1F4144B80]();
}

uint64_t sub_1E3E78D80()
{
  return MEMORY[0x1F4144B88]();
}

uint64_t sub_1E3E78D90()
{
  return MEMORY[0x1F4144B90]();
}

uint64_t sub_1E3E78DA0()
{
  return MEMORY[0x1F4144B98]();
}

uint64_t sub_1E3E78DB0()
{
  return MEMORY[0x1F4144BA0]();
}

uint64_t sub_1E3E78DC0()
{
  return MEMORY[0x1F4144BA8]();
}

uint64_t _s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0()
{
  return MEMORY[0x1F4144BB0]();
}

uint64_t _s10PodcastsUI22PreparedArtworkRequestV4with6formatAC0A10Foundation0D6FormatO_tF_0()
{
  return MEMORY[0x1F4144BB8]();
}

uint64_t sub_1E3E78DF0()
{
  return MEMORY[0x1F4144BC0]();
}

uint64_t sub_1E3E78E00()
{
  return MEMORY[0x1F4144BC8]();
}

uint64_t sub_1E3E78E10()
{
  return MEMORY[0x1F4144BD0]();
}

uint64_t sub_1E3E78E20()
{
  return MEMORY[0x1F4144BD8]();
}

uint64_t sub_1E3E78E30()
{
  return MEMORY[0x1F4144BE0]();
}

uint64_t sub_1E3E78E40()
{
  return MEMORY[0x1F4144BE8]();
}

uint64_t _s10PodcastsUI22PreparedArtworkRequestV8fileNameSSvg_0()
{
  return MEMORY[0x1F4144BF0]();
}

uint64_t sub_1E3E78E60()
{
  return MEMORY[0x1F4144BF8]();
}

uint64_t sub_1E3E78E70()
{
  return MEMORY[0x1F4144C00]();
}

uint64_t sub_1E3E78E80()
{
  return MEMORY[0x1F4144C08]();
}

uint64_t sub_1E3E78E90()
{
  return MEMORY[0x1F4144C10]();
}

uint64_t sub_1E3E78EA0()
{
  return MEMORY[0x1F4144C18]();
}

uint64_t sub_1E3E78EB0()
{
  return MEMORY[0x1F4144C20]();
}

uint64_t sub_1E3E78EC0()
{
  return MEMORY[0x1F4144C28]();
}

uint64_t sub_1E3E78ED0()
{
  return MEMORY[0x1F4144C30]();
}

uint64_t sub_1E3E78EE0()
{
  return MEMORY[0x1F4144C38]();
}

uint64_t sub_1E3E78EF0()
{
  return MEMORY[0x1F4144C40]();
}

uint64_t sub_1E3E78F10()
{
  return MEMORY[0x1F4144C50]();
}

uint64_t sub_1E3E78F20()
{
  return MEMORY[0x1F4144C58]();
}

uint64_t sub_1E3E78F30()
{
  return MEMORY[0x1F4144C60]();
}

uint64_t sub_1E3E78F40()
{
  return MEMORY[0x1F4144C68]();
}

uint64_t sub_1E3E78F50()
{
  return MEMORY[0x1F4144C70]();
}

uint64_t sub_1E3E78F60()
{
  return MEMORY[0x1F4144C78]();
}

uint64_t sub_1E3E78F70()
{
  return MEMORY[0x1F4144C80]();
}

uint64_t sub_1E3E78F80()
{
  return MEMORY[0x1F4144C88]();
}

uint64_t sub_1E3E78F90()
{
  return MEMORY[0x1F4144C90]();
}

uint64_t sub_1E3E78FA0()
{
  return MEMORY[0x1F4144C98]();
}

uint64_t sub_1E3E78FB0()
{
  return MEMORY[0x1F4144CA0]();
}

uint64_t sub_1E3E78FC0()
{
  return MEMORY[0x1F4144CA8]();
}

uint64_t sub_1E3E78FD0()
{
  return MEMORY[0x1F4144CB0]();
}

uint64_t sub_1E3E78FE0()
{
  return MEMORY[0x1F4144CB8]();
}

uint64_t sub_1E3E78FF0()
{
  return MEMORY[0x1F4144CC0]();
}

uint64_t sub_1E3E79000()
{
  return MEMORY[0x1F4144CC8]();
}

uint64_t sub_1E3E79010()
{
  return MEMORY[0x1F4144CD0]();
}

uint64_t sub_1E3E79020()
{
  return MEMORY[0x1F4144CD8]();
}

uint64_t sub_1E3E79030()
{
  return MEMORY[0x1F4144CE0]();
}

uint64_t sub_1E3E79050()
{
  return MEMORY[0x1F4144CF0]();
}

uint64_t sub_1E3E79060()
{
  return MEMORY[0x1F4144CF8]();
}

uint64_t sub_1E3E79070()
{
  return MEMORY[0x1F4144D00]();
}

uint64_t sub_1E3E79080()
{
  return MEMORY[0x1F4144D08]();
}

uint64_t sub_1E3E79090()
{
  return MEMORY[0x1F4144D10]();
}

uint64_t sub_1E3E790A0()
{
  return MEMORY[0x1F4144D18]();
}

uint64_t sub_1E3E790B0()
{
  return MEMORY[0x1F4144D20]();
}

uint64_t sub_1E3E790C0()
{
  return MEMORY[0x1F4144D28]();
}

uint64_t sub_1E3E790D0()
{
  return MEMORY[0x1F4144D30]();
}

uint64_t sub_1E3E790E0()
{
  return MEMORY[0x1F4144D38]();
}

uint64_t sub_1E3E790F0()
{
  return MEMORY[0x1F4144D40]();
}

uint64_t sub_1E3E79100()
{
  return MEMORY[0x1F4144D48]();
}

uint64_t sub_1E3E79120()
{
  return MEMORY[0x1F4144D58]();
}

uint64_t sub_1E3E79130()
{
  return MEMORY[0x1F4144D60]();
}

uint64_t sub_1E3E79140()
{
  return MEMORY[0x1F4144D68]();
}

uint64_t sub_1E3E79150()
{
  return MEMORY[0x1F4144D70]();
}

uint64_t sub_1E3E79160()
{
  return MEMORY[0x1F4144D78]();
}

uint64_t sub_1E3E79170()
{
  return MEMORY[0x1F4144D80]();
}

uint64_t sub_1E3E79180()
{
  return MEMORY[0x1F4144D88]();
}

uint64_t sub_1E3E79190()
{
  return MEMORY[0x1F4144D90]();
}

uint64_t sub_1E3E791A0()
{
  return MEMORY[0x1F4144D98]();
}

uint64_t sub_1E3E791B0()
{
  return MEMORY[0x1F4144DA0]();
}

uint64_t sub_1E3E791C0()
{
  return MEMORY[0x1F4144DA8]();
}

uint64_t sub_1E3E791D0()
{
  return MEMORY[0x1F4144DB0]();
}

uint64_t sub_1E3E791E0()
{
  return MEMORY[0x1F4144DB8]();
}

uint64_t sub_1E3E791F0()
{
  return MEMORY[0x1F4144DC0]();
}

uint64_t sub_1E3E79200()
{
  return MEMORY[0x1F4144DC8]();
}

uint64_t sub_1E3E79210()
{
  return MEMORY[0x1F4144DD0]();
}

uint64_t sub_1E3E79220()
{
  return MEMORY[0x1F4144DD8]();
}

uint64_t sub_1E3E79230()
{
  return MEMORY[0x1F4144DE0]();
}

uint64_t sub_1E3E79240()
{
  return MEMORY[0x1F4144DE8]();
}

uint64_t sub_1E3E79250()
{
  return MEMORY[0x1F4144DF0]();
}

uint64_t sub_1E3E79260()
{
  return MEMORY[0x1F4144DF8]();
}

uint64_t sub_1E3E79270()
{
  return MEMORY[0x1F4144E00]();
}

uint64_t sub_1E3E79280()
{
  return MEMORY[0x1F4144E08]();
}

uint64_t sub_1E3E79290()
{
  return MEMORY[0x1F4144E10]();
}

uint64_t sub_1E3E792A0()
{
  return MEMORY[0x1F4144E18]();
}

uint64_t sub_1E3E792B0()
{
  return MEMORY[0x1F4144E20]();
}

uint64_t sub_1E3E792C0()
{
  return MEMORY[0x1F4144E28]();
}

uint64_t sub_1E3E792D0()
{
  return MEMORY[0x1F4144E30]();
}

uint64_t sub_1E3E792E0()
{
  return MEMORY[0x1F4144E38]();
}

uint64_t sub_1E3E792F0()
{
  return MEMORY[0x1F4144E40]();
}

uint64_t sub_1E3E79300()
{
  return MEMORY[0x1F4144E48]();
}

uint64_t sub_1E3E79310()
{
  return MEMORY[0x1F4144E50]();
}

uint64_t sub_1E3E79320()
{
  return MEMORY[0x1F4144E58]();
}

uint64_t sub_1E3E79330()
{
  return MEMORY[0x1F4144E60]();
}

uint64_t sub_1E3E79340()
{
  return MEMORY[0x1F4144E68]();
}

uint64_t sub_1E3E79350()
{
  return MEMORY[0x1F4144E70]();
}

uint64_t sub_1E3E79360()
{
  return MEMORY[0x1F4144E78]();
}

uint64_t sub_1E3E79370()
{
  return MEMORY[0x1F4144E80]();
}

uint64_t sub_1E3E79380()
{
  return MEMORY[0x1F4144E88]();
}

uint64_t sub_1E3E79390()
{
  return MEMORY[0x1F4144E90]();
}

uint64_t sub_1E3E793A0()
{
  return MEMORY[0x1F4144E98]();
}

uint64_t sub_1E3E793B0()
{
  return MEMORY[0x1F4144EA0]();
}

uint64_t sub_1E3E793C0()
{
  return MEMORY[0x1F4144EA8]();
}

uint64_t sub_1E3E793D0()
{
  return MEMORY[0x1F4144EB0]();
}

uint64_t sub_1E3E793E0()
{
  return MEMORY[0x1F4144EB8]();
}

uint64_t sub_1E3E793F0()
{
  return MEMORY[0x1F4144EC0]();
}

uint64_t sub_1E3E79400()
{
  return MEMORY[0x1F4144EC8]();
}

uint64_t sub_1E3E79410()
{
  return MEMORY[0x1F4144ED0]();
}

uint64_t sub_1E3E79420()
{
  return MEMORY[0x1F4144ED8]();
}

uint64_t sub_1E3E79440()
{
  return MEMORY[0x1F4144EE8]();
}

uint64_t sub_1E3E79450()
{
  return MEMORY[0x1F4144EF0]();
}

uint64_t sub_1E3E79460()
{
  return MEMORY[0x1F4144EF8]();
}

uint64_t sub_1E3E79470()
{
  return MEMORY[0x1F4144F00]();
}

uint64_t sub_1E3E79480()
{
  return MEMORY[0x1F4144F08]();
}

uint64_t sub_1E3E79490()
{
  return MEMORY[0x1F4144F10]();
}

uint64_t sub_1E3E794A0()
{
  return MEMORY[0x1F4144F18]();
}

uint64_t sub_1E3E794B0()
{
  return MEMORY[0x1F4144F20]();
}

uint64_t sub_1E3E794C0()
{
  return MEMORY[0x1F4144F28]();
}

uint64_t sub_1E3E794D0()
{
  return MEMORY[0x1F4144F30]();
}

uint64_t sub_1E3E794E0()
{
  return MEMORY[0x1F4144F38]();
}

uint64_t sub_1E3E79500()
{
  return MEMORY[0x1F4144F48]();
}

uint64_t sub_1E3E79520()
{
  return MEMORY[0x1F4144F58]();
}

uint64_t sub_1E3E79530()
{
  return MEMORY[0x1F4144F60]();
}

uint64_t sub_1E3E79540()
{
  return MEMORY[0x1F4144F68]();
}

uint64_t sub_1E3E79550()
{
  return MEMORY[0x1F4144F70]();
}

uint64_t sub_1E3E79560()
{
  return MEMORY[0x1F4144F78]();
}

uint64_t sub_1E3E79570()
{
  return MEMORY[0x1F4144F80]();
}

uint64_t sub_1E3E79580()
{
  return MEMORY[0x1F4144F88]();
}

uint64_t sub_1E3E79590()
{
  return MEMORY[0x1F4144F90]();
}

uint64_t sub_1E3E795A0()
{
  return MEMORY[0x1F4144F98]();
}

uint64_t sub_1E3E795B0()
{
  return MEMORY[0x1F4144FA0]();
}

uint64_t sub_1E3E795C0()
{
  return MEMORY[0x1F4144FA8]();
}

uint64_t sub_1E3E795D0()
{
  return MEMORY[0x1F4144FB0]();
}

uint64_t sub_1E3E795E0()
{
  return MEMORY[0x1F4144FB8]();
}

uint64_t sub_1E3E795F0()
{
  return MEMORY[0x1F4144FC0]();
}

uint64_t sub_1E3E79600()
{
  return MEMORY[0x1F4144FC8]();
}

uint64_t sub_1E3E79610()
{
  return MEMORY[0x1F4144FD0]();
}

uint64_t sub_1E3E79620()
{
  return MEMORY[0x1F4144FD8]();
}

uint64_t sub_1E3E79630()
{
  return MEMORY[0x1F4144FE0]();
}

uint64_t sub_1E3E79640()
{
  return MEMORY[0x1F4144FE8]();
}

uint64_t sub_1E3E79650()
{
  return MEMORY[0x1F4144FF0]();
}

uint64_t sub_1E3E79660()
{
  return MEMORY[0x1F4144FF8]();
}

uint64_t sub_1E3E79670()
{
  return MEMORY[0x1F4145000]();
}

uint64_t sub_1E3E79680()
{
  return MEMORY[0x1F4145008]();
}

uint64_t sub_1E3E79690()
{
  return MEMORY[0x1F4145010]();
}

uint64_t sub_1E3E796A0()
{
  return MEMORY[0x1F4145018]();
}

uint64_t sub_1E3E796B0()
{
  return MEMORY[0x1F4145020]();
}

uint64_t sub_1E3E796C0()
{
  return MEMORY[0x1F4145028]();
}

uint64_t sub_1E3E796D0()
{
  return MEMORY[0x1F4145030]();
}

uint64_t sub_1E3E796E0()
{
  return MEMORY[0x1F4145038]();
}

uint64_t sub_1E3E796F0()
{
  return MEMORY[0x1F4145040]();
}

uint64_t sub_1E3E79700()
{
  return MEMORY[0x1F4145048]();
}

uint64_t sub_1E3E79710()
{
  return MEMORY[0x1F4145050]();
}

uint64_t sub_1E3E79720()
{
  return MEMORY[0x1F4145058]();
}

uint64_t sub_1E3E79730()
{
  return MEMORY[0x1F4145060]();
}

uint64_t sub_1E3E79740()
{
  return MEMORY[0x1F4145068]();
}

uint64_t sub_1E3E79750()
{
  return MEMORY[0x1F4145070]();
}

uint64_t sub_1E3E79760()
{
  return MEMORY[0x1F4145078]();
}

uint64_t sub_1E3E79770()
{
  return MEMORY[0x1F4145080]();
}

uint64_t sub_1E3E79780()
{
  return MEMORY[0x1F4145088]();
}

uint64_t sub_1E3E79790()
{
  return MEMORY[0x1F4145090]();
}

uint64_t sub_1E3E797A0()
{
  return MEMORY[0x1F4145098]();
}

uint64_t sub_1E3E797B0()
{
  return MEMORY[0x1F41450A0]();
}

uint64_t sub_1E3E797C0()
{
  return MEMORY[0x1F41450A8]();
}

uint64_t sub_1E3E797D0()
{
  return MEMORY[0x1F41450B0]();
}

uint64_t sub_1E3E797E0()
{
  return MEMORY[0x1F41450B8]();
}

uint64_t sub_1E3E797F0()
{
  return MEMORY[0x1F41450C0]();
}

uint64_t sub_1E3E79800()
{
  return MEMORY[0x1F41450C8]();
}

uint64_t sub_1E3E79810()
{
  return MEMORY[0x1F41450D0]();
}

uint64_t sub_1E3E79820()
{
  return MEMORY[0x1F41450D8]();
}

uint64_t sub_1E3E79830()
{
  return MEMORY[0x1F41450E0]();
}

uint64_t sub_1E3E79840()
{
  return MEMORY[0x1F41450E8]();
}

uint64_t sub_1E3E79850()
{
  return MEMORY[0x1F41450F0]();
}

uint64_t sub_1E3E79860()
{
  return MEMORY[0x1F41450F8]();
}

uint64_t sub_1E3E79870()
{
  return MEMORY[0x1F4145100]();
}

uint64_t sub_1E3E79880()
{
  return MEMORY[0x1F4145108]();
}

uint64_t sub_1E3E79890()
{
  return MEMORY[0x1F4145110]();
}

uint64_t sub_1E3E798A0()
{
  return MEMORY[0x1F4145118]();
}

uint64_t sub_1E3E798B0()
{
  return MEMORY[0x1F4145120]();
}

uint64_t sub_1E3E798C0()
{
  return MEMORY[0x1F4145128]();
}

uint64_t sub_1E3E798D0()
{
  return MEMORY[0x1F4145130]();
}

uint64_t sub_1E3E798E0()
{
  return MEMORY[0x1F4145138]();
}

uint64_t sub_1E3E798F0()
{
  return MEMORY[0x1F4145140]();
}

uint64_t sub_1E3E79900()
{
  return MEMORY[0x1F4145148]();
}

uint64_t sub_1E3E79910()
{
  return MEMORY[0x1F4145150]();
}

uint64_t sub_1E3E79920()
{
  return MEMORY[0x1F4145158]();
}

uint64_t sub_1E3E79930()
{
  return MEMORY[0x1F4145160]();
}

uint64_t sub_1E3E79940()
{
  return MEMORY[0x1F4145168]();
}

uint64_t sub_1E3E79950()
{
  return MEMORY[0x1F4145170]();
}

uint64_t sub_1E3E79960()
{
  return MEMORY[0x1F4145178]();
}

uint64_t sub_1E3E79970()
{
  return MEMORY[0x1F4145180]();
}

uint64_t sub_1E3E79980()
{
  return MEMORY[0x1F4145188]();
}

uint64_t sub_1E3E79990()
{
  return MEMORY[0x1F4145190]();
}

uint64_t sub_1E3E799A0()
{
  return MEMORY[0x1F4145198]();
}

uint64_t sub_1E3E799B0()
{
  return MEMORY[0x1F41451A0]();
}

uint64_t sub_1E3E799C0()
{
  return MEMORY[0x1F41451A8]();
}

uint64_t sub_1E3E799D0()
{
  return MEMORY[0x1F41451B0]();
}

uint64_t sub_1E3E799E0()
{
  return MEMORY[0x1F41451B8]();
}

uint64_t sub_1E3E799F0()
{
  return MEMORY[0x1F41451C0]();
}

uint64_t sub_1E3E79A00()
{
  return MEMORY[0x1F41451C8]();
}

uint64_t sub_1E3E79A10()
{
  return MEMORY[0x1F41451D0]();
}

uint64_t sub_1E3E79A20()
{
  return MEMORY[0x1F41451D8]();
}

uint64_t sub_1E3E79A30()
{
  return MEMORY[0x1F41451E0]();
}

uint64_t sub_1E3E79A40()
{
  return MEMORY[0x1F41451E8]();
}

uint64_t sub_1E3E79A50()
{
  return MEMORY[0x1F41451F0]();
}

uint64_t sub_1E3E79A60()
{
  return MEMORY[0x1F41451F8]();
}

uint64_t sub_1E3E79A70()
{
  return MEMORY[0x1F4145200]();
}

uint64_t sub_1E3E79A80()
{
  return MEMORY[0x1F4145208]();
}

uint64_t sub_1E3E79A90()
{
  return MEMORY[0x1F4145210]();
}

uint64_t sub_1E3E79AA0()
{
  return MEMORY[0x1F4145218]();
}

uint64_t sub_1E3E79AB0()
{
  return MEMORY[0x1F4145220]();
}

uint64_t sub_1E3E79AC0()
{
  return MEMORY[0x1F4145228]();
}

uint64_t sub_1E3E79AD0()
{
  return MEMORY[0x1F4145230]();
}

uint64_t sub_1E3E79AE0()
{
  return MEMORY[0x1F4145238]();
}

uint64_t sub_1E3E79AF0()
{
  return MEMORY[0x1F4145240]();
}

uint64_t sub_1E3E79B00()
{
  return MEMORY[0x1F4145248]();
}

uint64_t sub_1E3E79B10()
{
  return MEMORY[0x1F4145250]();
}

uint64_t sub_1E3E79B20()
{
  return MEMORY[0x1F4145258]();
}

uint64_t sub_1E3E79B30()
{
  return MEMORY[0x1F4145260]();
}

uint64_t sub_1E3E79B40()
{
  return MEMORY[0x1F4145268]();
}

uint64_t sub_1E3E79B50()
{
  return MEMORY[0x1F4145270]();
}

uint64_t sub_1E3E79B60()
{
  return MEMORY[0x1F4145278]();
}

uint64_t sub_1E3E79B70()
{
  return MEMORY[0x1F4145280]();
}

uint64_t sub_1E3E79B80()
{
  return MEMORY[0x1F4145288]();
}

uint64_t sub_1E3E79B90()
{
  return MEMORY[0x1F4145290]();
}

uint64_t sub_1E3E79BA0()
{
  return MEMORY[0x1F4145298]();
}

uint64_t sub_1E3E79BB0()
{
  return MEMORY[0x1F41452A0]();
}

uint64_t sub_1E3E79BC0()
{
  return MEMORY[0x1F41452A8]();
}

uint64_t sub_1E3E79BD0()
{
  return MEMORY[0x1F41452B0]();
}

uint64_t sub_1E3E79BE0()
{
  return MEMORY[0x1F41452B8]();
}

uint64_t sub_1E3E79BF0()
{
  return MEMORY[0x1F41452C0]();
}

uint64_t sub_1E3E79C00()
{
  return MEMORY[0x1F41452C8]();
}

uint64_t sub_1E3E79C10()
{
  return MEMORY[0x1F41452D0]();
}

uint64_t sub_1E3E79C20()
{
  return MEMORY[0x1F41452D8]();
}

uint64_t sub_1E3E79C40()
{
  return MEMORY[0x1F41452E8]();
}

uint64_t sub_1E3E79C50()
{
  return MEMORY[0x1F41452F0]();
}

uint64_t sub_1E3E79C60()
{
  return MEMORY[0x1F41452F8]();
}

uint64_t sub_1E3E79C70()
{
  return MEMORY[0x1F4145300]();
}

uint64_t sub_1E3E79C80()
{
  return MEMORY[0x1F4145308]();
}

uint64_t sub_1E3E79C90()
{
  return MEMORY[0x1F4145310]();
}

uint64_t sub_1E3E79CA0()
{
  return MEMORY[0x1F4145318]();
}

uint64_t sub_1E3E79CB0()
{
  return MEMORY[0x1F4145320]();
}

uint64_t sub_1E3E79CC0()
{
  return MEMORY[0x1F4145328]();
}

uint64_t sub_1E3E79CD0()
{
  return MEMORY[0x1F4145330]();
}

uint64_t sub_1E3E79CE0()
{
  return MEMORY[0x1F4145338]();
}

uint64_t sub_1E3E79CF0()
{
  return MEMORY[0x1F4145340]();
}

uint64_t sub_1E3E79D00()
{
  return MEMORY[0x1F4145348]();
}

uint64_t sub_1E3E79D10()
{
  return MEMORY[0x1F4145350]();
}

uint64_t sub_1E3E79D20()
{
  return MEMORY[0x1F4145358]();
}

uint64_t sub_1E3E79D30()
{
  return MEMORY[0x1F4145360]();
}

uint64_t sub_1E3E79D40()
{
  return MEMORY[0x1F4145368]();
}

uint64_t sub_1E3E79D50()
{
  return MEMORY[0x1F4145370]();
}

uint64_t sub_1E3E79D60()
{
  return MEMORY[0x1F4145378]();
}

uint64_t sub_1E3E79D70()
{
  return MEMORY[0x1F4145380]();
}

uint64_t sub_1E3E79D80()
{
  return MEMORY[0x1F4145388]();
}

uint64_t sub_1E3E79D90()
{
  return MEMORY[0x1F4145390]();
}

uint64_t sub_1E3E79DA0()
{
  return MEMORY[0x1F4145398]();
}

uint64_t sub_1E3E79DB0()
{
  return MEMORY[0x1F41453A0]();
}

uint64_t sub_1E3E79DC0()
{
  return MEMORY[0x1F41453A8]();
}

uint64_t sub_1E3E79DD0()
{
  return MEMORY[0x1F41453B0]();
}

uint64_t sub_1E3E79DE0()
{
  return MEMORY[0x1F41453B8]();
}

uint64_t sub_1E3E79DF0()
{
  return MEMORY[0x1F41453C0]();
}

uint64_t sub_1E3E79E00()
{
  return MEMORY[0x1F41453C8]();
}

uint64_t sub_1E3E79E10()
{
  return MEMORY[0x1F41453D0]();
}

uint64_t sub_1E3E79E20()
{
  return MEMORY[0x1F41453D8]();
}

uint64_t sub_1E3E79E30()
{
  return MEMORY[0x1F41453E0]();
}

uint64_t sub_1E3E79E40()
{
  return MEMORY[0x1F41453E8]();
}

uint64_t sub_1E3E79E50()
{
  return MEMORY[0x1F41453F0]();
}

uint64_t sub_1E3E79E60()
{
  return MEMORY[0x1F41453F8]();
}

uint64_t sub_1E3E79E70()
{
  return MEMORY[0x1F4145400]();
}

uint64_t sub_1E3E79E80()
{
  return MEMORY[0x1F4145408]();
}

uint64_t sub_1E3E79E90()
{
  return MEMORY[0x1F4145410]();
}

uint64_t sub_1E3E79EA0()
{
  return MEMORY[0x1F4145418]();
}

uint64_t sub_1E3E79EB0()
{
  return MEMORY[0x1F4145420]();
}

uint64_t sub_1E3E79EC0()
{
  return MEMORY[0x1F4145428]();
}

uint64_t sub_1E3E79ED0()
{
  return MEMORY[0x1F4145430]();
}

uint64_t sub_1E3E79EE0()
{
  return MEMORY[0x1F4145438]();
}

uint64_t sub_1E3E79EF0()
{
  return MEMORY[0x1F4145440]();
}

uint64_t sub_1E3E79F00()
{
  return MEMORY[0x1F4145448]();
}

uint64_t sub_1E3E79F10()
{
  return MEMORY[0x1F4145450]();
}

uint64_t sub_1E3E79F20()
{
  return MEMORY[0x1F4145458]();
}

uint64_t sub_1E3E79F30()
{
  return MEMORY[0x1F4145460]();
}

uint64_t sub_1E3E79F40()
{
  return MEMORY[0x1F4145468]();
}

uint64_t sub_1E3E79F50()
{
  return MEMORY[0x1F4145470]();
}

uint64_t sub_1E3E79F60()
{
  return MEMORY[0x1F4145478]();
}

uint64_t sub_1E3E79F70()
{
  return MEMORY[0x1F4145480]();
}

uint64_t sub_1E3E79F80()
{
  return MEMORY[0x1F4145488]();
}

uint64_t sub_1E3E79F90()
{
  return MEMORY[0x1F4145490]();
}

uint64_t sub_1E3E79FA0()
{
  return MEMORY[0x1F4145498]();
}

uint64_t sub_1E3E79FB0()
{
  return MEMORY[0x1F41454A0]();
}

uint64_t sub_1E3E79FC0()
{
  return MEMORY[0x1F41454A8]();
}

uint64_t sub_1E3E79FD0()
{
  return MEMORY[0x1F41454B0]();
}

uint64_t sub_1E3E79FE0()
{
  return MEMORY[0x1F41454B8]();
}

uint64_t sub_1E3E79FF0()
{
  return MEMORY[0x1F41454C0]();
}

uint64_t sub_1E3E7A000()
{
  return MEMORY[0x1F41454C8]();
}

uint64_t sub_1E3E7A010()
{
  return MEMORY[0x1F41454D0]();
}

uint64_t sub_1E3E7A020()
{
  return MEMORY[0x1F41454D8]();
}

uint64_t sub_1E3E7A030()
{
  return MEMORY[0x1F41454E0]();
}

uint64_t sub_1E3E7A040()
{
  return MEMORY[0x1F41454E8]();
}

uint64_t sub_1E3E7A050()
{
  return MEMORY[0x1F41454F0]();
}

uint64_t sub_1E3E7A060()
{
  return MEMORY[0x1F41454F8]();
}

uint64_t sub_1E3E7A070()
{
  return MEMORY[0x1F4145500]();
}

uint64_t sub_1E3E7A080()
{
  return MEMORY[0x1F4145508]();
}

uint64_t sub_1E3E7A090()
{
  return MEMORY[0x1F4145510]();
}

uint64_t sub_1E3E7A0A0()
{
  return MEMORY[0x1F4145518]();
}

uint64_t sub_1E3E7A0B0()
{
  return MEMORY[0x1F4145520]();
}

uint64_t sub_1E3E7A0C0()
{
  return MEMORY[0x1F4145528]();
}

uint64_t sub_1E3E7A0D0()
{
  return MEMORY[0x1F4145530]();
}

uint64_t sub_1E3E7A0E0()
{
  return MEMORY[0x1F4145538]();
}

uint64_t sub_1E3E7A0F0()
{
  return MEMORY[0x1F4145540]();
}

uint64_t sub_1E3E7A100()
{
  return MEMORY[0x1F4145548]();
}

uint64_t sub_1E3E7A110()
{
  return MEMORY[0x1F4145550]();
}

uint64_t sub_1E3E7A120()
{
  return MEMORY[0x1F4145558]();
}

uint64_t sub_1E3E7A130()
{
  return MEMORY[0x1F4145560]();
}

uint64_t sub_1E3E7A140()
{
  return MEMORY[0x1F4145568]();
}

uint64_t sub_1E3E7A150()
{
  return MEMORY[0x1F4145570]();
}

uint64_t sub_1E3E7A160()
{
  return MEMORY[0x1F4145578]();
}

uint64_t sub_1E3E7A170()
{
  return MEMORY[0x1F4145580]();
}

uint64_t sub_1E3E7A180()
{
  return MEMORY[0x1F4145588]();
}

uint64_t sub_1E3E7A190()
{
  return MEMORY[0x1F4145590]();
}

uint64_t sub_1E3E7A1A0()
{
  return MEMORY[0x1F4145598]();
}

uint64_t sub_1E3E7A1B0()
{
  return MEMORY[0x1F41455A0]();
}

uint64_t sub_1E3E7A1C0()
{
  return MEMORY[0x1F41455A8]();
}

uint64_t sub_1E3E7A1D0()
{
  return MEMORY[0x1F41455B0]();
}

uint64_t sub_1E3E7A1E0()
{
  return MEMORY[0x1F41455B8]();
}

uint64_t sub_1E3E7A1F0()
{
  return MEMORY[0x1F41455C0]();
}

uint64_t sub_1E3E7A200()
{
  return MEMORY[0x1F41455C8]();
}

uint64_t sub_1E3E7A210()
{
  return MEMORY[0x1F41455D0]();
}

uint64_t sub_1E3E7A220()
{
  return MEMORY[0x1F41455D8]();
}

uint64_t sub_1E3E7A230()
{
  return MEMORY[0x1F41455E0]();
}

uint64_t sub_1E3E7A240()
{
  return MEMORY[0x1F41455E8]();
}

uint64_t sub_1E3E7A250()
{
  return MEMORY[0x1F41455F0]();
}

uint64_t sub_1E3E7A260()
{
  return MEMORY[0x1F41455F8]();
}

uint64_t sub_1E3E7A270()
{
  return MEMORY[0x1F4145600]();
}

uint64_t sub_1E3E7A280()
{
  return MEMORY[0x1F4145608]();
}

uint64_t sub_1E3E7A290()
{
  return MEMORY[0x1F4145610]();
}

uint64_t sub_1E3E7A2A0()
{
  return MEMORY[0x1F4145618]();
}

uint64_t sub_1E3E7A2B0()
{
  return MEMORY[0x1F4145620]();
}

uint64_t sub_1E3E7A2C0()
{
  return MEMORY[0x1F4145628]();
}

uint64_t sub_1E3E7A2D0()
{
  return MEMORY[0x1F4145630]();
}

uint64_t sub_1E3E7A2E0()
{
  return MEMORY[0x1F4145638]();
}

uint64_t sub_1E3E7A2F0()
{
  return MEMORY[0x1F4145640]();
}

uint64_t sub_1E3E7A300()
{
  return MEMORY[0x1F4145648]();
}

uint64_t sub_1E3E7A310()
{
  return MEMORY[0x1F4145650]();
}

uint64_t sub_1E3E7A320()
{
  return MEMORY[0x1F4145658]();
}

uint64_t sub_1E3E7A330()
{
  return MEMORY[0x1F4145660]();
}

uint64_t sub_1E3E7A340()
{
  return MEMORY[0x1F4145668]();
}

uint64_t sub_1E3E7A350()
{
  return MEMORY[0x1F4145670]();
}

uint64_t sub_1E3E7A360()
{
  return MEMORY[0x1F4145678]();
}

uint64_t sub_1E3E7A370()
{
  return MEMORY[0x1F4145680]();
}

uint64_t sub_1E3E7A3A0()
{
  return MEMORY[0x1F4145698]();
}

uint64_t sub_1E3E7A3B0()
{
  return MEMORY[0x1F41456A0]();
}

uint64_t sub_1E3E7A3C0()
{
  return MEMORY[0x1F41456A8]();
}

uint64_t sub_1E3E7A3D0()
{
  return MEMORY[0x1F41456B0]();
}

uint64_t sub_1E3E7A3E0()
{
  return MEMORY[0x1F41456B8]();
}

uint64_t sub_1E3E7A3F0()
{
  return MEMORY[0x1F41456C0]();
}

uint64_t sub_1E3E7A400()
{
  return MEMORY[0x1F41456C8]();
}

uint64_t sub_1E3E7A410()
{
  return MEMORY[0x1F41456D0]();
}

uint64_t sub_1E3E7A420()
{
  return MEMORY[0x1F41456D8]();
}

uint64_t sub_1E3E7A430()
{
  return MEMORY[0x1F41456E0]();
}

uint64_t sub_1E3E7A440()
{
  return MEMORY[0x1F41456E8]();
}

uint64_t sub_1E3E7A450()
{
  return MEMORY[0x1F41456F0]();
}

uint64_t sub_1E3E7A460()
{
  return MEMORY[0x1F41456F8]();
}

uint64_t sub_1E3E7A470()
{
  return MEMORY[0x1F4145700]();
}

uint64_t sub_1E3E7A480()
{
  return MEMORY[0x1F4145708]();
}

uint64_t sub_1E3E7A490()
{
  return MEMORY[0x1F4145710]();
}

uint64_t sub_1E3E7A4A0()
{
  return MEMORY[0x1F4145718]();
}

uint64_t sub_1E3E7A4B0()
{
  return MEMORY[0x1F4145720]();
}

uint64_t sub_1E3E7A4C0()
{
  return MEMORY[0x1F4145728]();
}

uint64_t sub_1E3E7A4D0()
{
  return MEMORY[0x1F4145730]();
}

uint64_t sub_1E3E7A4E0()
{
  return MEMORY[0x1F4145738]();
}

uint64_t sub_1E3E7A4F0()
{
  return MEMORY[0x1F4145740]();
}

uint64_t sub_1E3E7A500()
{
  return MEMORY[0x1F4145748]();
}

uint64_t sub_1E3E7A510()
{
  return MEMORY[0x1F4145750]();
}

uint64_t sub_1E3E7A520()
{
  return MEMORY[0x1F4145758]();
}

uint64_t sub_1E3E7A530()
{
  return MEMORY[0x1F4145760]();
}

uint64_t sub_1E3E7A540()
{
  return MEMORY[0x1F4145768]();
}

uint64_t sub_1E3E7A550()
{
  return MEMORY[0x1F4145770]();
}

uint64_t sub_1E3E7A560()
{
  return MEMORY[0x1F4145778]();
}

uint64_t sub_1E3E7A570()
{
  return MEMORY[0x1F4145780]();
}

uint64_t sub_1E3E7A580()
{
  return MEMORY[0x1F4145788]();
}

uint64_t sub_1E3E7A590()
{
  return MEMORY[0x1F4145790]();
}

uint64_t sub_1E3E7A5A0()
{
  return MEMORY[0x1F4145798]();
}

uint64_t sub_1E3E7A5B0()
{
  return MEMORY[0x1F41457A0]();
}

uint64_t sub_1E3E7A5C0()
{
  return MEMORY[0x1F41457A8]();
}

uint64_t sub_1E3E7A5D0()
{
  return MEMORY[0x1F41457B0]();
}

uint64_t sub_1E3E7A5E0()
{
  return MEMORY[0x1F41457B8]();
}

uint64_t sub_1E3E7A5F0()
{
  return MEMORY[0x1F4188500]();
}

uint64_t sub_1E3E7A600()
{
  return MEMORY[0x1F4188508]();
}

uint64_t sub_1E3E7A610()
{
  return MEMORY[0x1F4188568]();
}

uint64_t sub_1E3E7A620()
{
  return MEMORY[0x1F4188570]();
}

uint64_t sub_1E3E7A630()
{
  return MEMORY[0x1F4188578]();
}

uint64_t sub_1E3E7A640()
{
  return MEMORY[0x1F4188580]();
}

uint64_t sub_1E3E7A650()
{
  return MEMORY[0x1F41457C0]();
}

uint64_t sub_1E3E7A660()
{
  return MEMORY[0x1F41457C8]();
}

uint64_t sub_1E3E7A670()
{
  return MEMORY[0x1F41457D0]();
}

uint64_t sub_1E3E7A680()
{
  return MEMORY[0x1F41457D8]();
}

uint64_t sub_1E3E7A690()
{
  return MEMORY[0x1F41457E0]();
}

uint64_t sub_1E3E7A6A0()
{
  return MEMORY[0x1F41885B0]();
}

uint64_t sub_1E3E7A6B0()
{
  return MEMORY[0x1F41885B8]();
}

uint64_t sub_1E3E7A6C0()
{
  return MEMORY[0x1F41885C0]();
}

uint64_t sub_1E3E7A6D0()
{
  return MEMORY[0x1F41885D0]();
}

uint64_t sub_1E3E7A6E0()
{
  return MEMORY[0x1F41885E0]();
}

uint64_t sub_1E3E7A6F0()
{
  return MEMORY[0x1F41457E8]();
}

uint64_t sub_1E3E7A700()
{
  return MEMORY[0x1F4188650]();
}

uint64_t sub_1E3E7A710()
{
  return MEMORY[0x1F4188658]();
}

uint64_t sub_1E3E7A720()
{
  return MEMORY[0x1F4188660]();
}

uint64_t sub_1E3E7A730()
{
  return MEMORY[0x1F4188668]();
}

uint64_t sub_1E3E7A740()
{
  return MEMORY[0x1F41457F0]();
}

uint64_t sub_1E3E7A750()
{
  return MEMORY[0x1F41457F8]();
}

uint64_t sub_1E3E7A760()
{
  return MEMORY[0x1F4145800]();
}

uint64_t sub_1E3E7A770()
{
  return MEMORY[0x1F4145808]();
}

uint64_t sub_1E3E7A780()
{
  return MEMORY[0x1F4145810]();
}

uint64_t sub_1E3E7A790()
{
  return MEMORY[0x1F4145818]();
}

uint64_t sub_1E3E7A7A0()
{
  return MEMORY[0x1F4145820]();
}

uint64_t sub_1E3E7A7B0()
{
  return MEMORY[0x1F4145828]();
}

uint64_t sub_1E3E7A7C0()
{
  return MEMORY[0x1F4145830]();
}

uint64_t sub_1E3E7A7D0()
{
  return MEMORY[0x1F4145838]();
}

uint64_t sub_1E3E7A7E0()
{
  return MEMORY[0x1F4145840]();
}

uint64_t sub_1E3E7A7F0()
{
  return MEMORY[0x1F4145848]();
}

uint64_t sub_1E3E7A800()
{
  return MEMORY[0x1F4145850]();
}

uint64_t sub_1E3E7A810()
{
  return MEMORY[0x1F4145858]();
}

uint64_t sub_1E3E7A820()
{
  return MEMORY[0x1F4145860]();
}

uint64_t sub_1E3E7A830()
{
  return MEMORY[0x1F4145868]();
}

uint64_t sub_1E3E7A840()
{
  return MEMORY[0x1F4145870]();
}

uint64_t sub_1E3E7A850()
{
  return MEMORY[0x1F4145878]();
}

uint64_t sub_1E3E7A860()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1E3E7A870()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1E3E7A880()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1E3E7A890()
{
  return MEMORY[0x1F4165B10]();
}

uint64_t sub_1E3E7A8A0()
{
  return MEMORY[0x1F40D6648]();
}

uint64_t sub_1E3E7A8B0()
{
  return MEMORY[0x1F40D6658]();
}

uint64_t sub_1E3E7A8C0()
{
  return MEMORY[0x1F40D6698]();
}

uint64_t sub_1E3E7A8D0()
{
  return MEMORY[0x1F40D6718]();
}

uint64_t sub_1E3E7A8E0()
{
  return MEMORY[0x1F40D6728]();
}

uint64_t sub_1E3E7A8F0()
{
  return MEMORY[0x1F40D67E8]();
}

uint64_t sub_1E3E7A900()
{
  return MEMORY[0x1F40D6840]();
}

uint64_t sub_1E3E7A910()
{
  return MEMORY[0x1F40D68A0]();
}

uint64_t sub_1E3E7A920()
{
  return MEMORY[0x1F4145880]();
}

uint64_t sub_1E3E7A930()
{
  return MEMORY[0x1F40D68E0]();
}

uint64_t sub_1E3E7A940()
{
  return MEMORY[0x1F40D6908]();
}

uint64_t sub_1E3E7A950()
{
  return MEMORY[0x1F40D6940]();
}

uint64_t sub_1E3E7A960()
{
  return MEMORY[0x1F40D6948]();
}

uint64_t sub_1E3E7A970()
{
  return MEMORY[0x1F40D6950]();
}

uint64_t sub_1E3E7A980()
{
  return MEMORY[0x1F40D6960]();
}

uint64_t sub_1E3E7A990()
{
  return MEMORY[0x1F40D6990]();
}

uint64_t sub_1E3E7A9A0()
{
  return MEMORY[0x1F40D69E0]();
}

uint64_t sub_1E3E7A9B0()
{
  return MEMORY[0x1F40D6A08]();
}

uint64_t sub_1E3E7A9C0()
{
  return MEMORY[0x1F40D6A20]();
}

uint64_t sub_1E3E7A9D0()
{
  return MEMORY[0x1F40D6A40]();
}

uint64_t sub_1E3E7A9E0()
{
  return MEMORY[0x1F40D6A50]();
}

uint64_t sub_1E3E7A9F0()
{
  return MEMORY[0x1F40D6A78]();
}

uint64_t sub_1E3E7AA00()
{
  return MEMORY[0x1F40D6A80]();
}

uint64_t sub_1E3E7AA10()
{
  return MEMORY[0x1F40D6AD8]();
}

uint64_t sub_1E3E7AA20()
{
  return MEMORY[0x1F40D6AF0]();
}

uint64_t sub_1E3E7AA30()
{
  return MEMORY[0x1F40D6B18]();
}

uint64_t sub_1E3E7AA40()
{
  return MEMORY[0x1F40D6B20]();
}

uint64_t sub_1E3E7AA50()
{
  return MEMORY[0x1F4145888]();
}

uint64_t sub_1E3E7AA60()
{
  return MEMORY[0x1F4145890]();
}

uint64_t sub_1E3E7AA70()
{
  return MEMORY[0x1F40D6B30]();
}

uint64_t sub_1E3E7AA80()
{
  return MEMORY[0x1F40D6B38]();
}

uint64_t sub_1E3E7AA90()
{
  return MEMORY[0x1F40D6B48]();
}

uint64_t sub_1E3E7AAA0()
{
  return MEMORY[0x1F40D6B68]();
}

uint64_t sub_1E3E7AAB0()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t sub_1E3E7AAC0()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t sub_1E3E7AAD0()
{
  return MEMORY[0x1F40D6B90]();
}

uint64_t sub_1E3E7AAE0()
{
  return MEMORY[0x1F40D6B98]();
}

uint64_t sub_1E3E7AAF0()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t sub_1E3E7AB00()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t sub_1E3E7AB10()
{
  return MEMORY[0x1F40D6BB8]();
}

uint64_t sub_1E3E7AB20()
{
  return MEMORY[0x1F4145898]();
}

uint64_t sub_1E3E7AB30()
{
  return MEMORY[0x1F41458A0]();
}

uint64_t sub_1E3E7AB40()
{
  return MEMORY[0x1F41458A8]();
}

uint64_t sub_1E3E7AB50()
{
  return MEMORY[0x1F41458B0]();
}

uint64_t sub_1E3E7AB60()
{
  return MEMORY[0x1F40D6BD0]();
}

uint64_t sub_1E3E7AB70()
{
  return MEMORY[0x1F40D6BD8]();
}

uint64_t sub_1E3E7AB80()
{
  return MEMORY[0x1F40D6BE0]();
}

uint64_t sub_1E3E7AB90()
{
  return MEMORY[0x1F40D6BE8]();
}

uint64_t sub_1E3E7ABA0()
{
  return MEMORY[0x1F40D6BF8]();
}

uint64_t sub_1E3E7ABB0()
{
  return MEMORY[0x1F40D6C00]();
}

uint64_t sub_1E3E7ABC0()
{
  return MEMORY[0x1F40D6C10]();
}

uint64_t sub_1E3E7ABD0()
{
  return MEMORY[0x1F40D6C40]();
}

uint64_t sub_1E3E7ABE0()
{
  return MEMORY[0x1F40D6C48]();
}

uint64_t sub_1E3E7ABF0()
{
  return MEMORY[0x1F40D6C50]();
}

uint64_t sub_1E3E7AC00()
{
  return MEMORY[0x1F40D6C70]();
}

uint64_t sub_1E3E7AC10()
{
  return MEMORY[0x1F40D6C88]();
}

uint64_t sub_1E3E7AC20()
{
  return MEMORY[0x1F40D6C90]();
}

uint64_t sub_1E3E7AC30()
{
  return MEMORY[0x1F40D6C98]();
}

uint64_t sub_1E3E7AC40()
{
  return MEMORY[0x1F40D6CA0]();
}

uint64_t sub_1E3E7AC50()
{
  return MEMORY[0x1F40D6CB0]();
}

uint64_t sub_1E3E7AC60()
{
  return MEMORY[0x1F40D6CC8]();
}

uint64_t sub_1E3E7AC70()
{
  return MEMORY[0x1F40D6CD0]();
}

uint64_t sub_1E3E7AC80()
{
  return MEMORY[0x1F40D6CD8]();
}

uint64_t sub_1E3E7AC90()
{
  return MEMORY[0x1F40D6D10]();
}

uint64_t sub_1E3E7ACA0()
{
  return MEMORY[0x1F40D6D20]();
}

uint64_t sub_1E3E7ACB0()
{
  return MEMORY[0x1F40D6D30]();
}

uint64_t sub_1E3E7ACC0()
{
  return MEMORY[0x1F40D6D38]();
}

uint64_t sub_1E3E7ACD0()
{
  return MEMORY[0x1F40D6D40]();
}

uint64_t sub_1E3E7ACE0()
{
  return MEMORY[0x1F40D6D58]();
}

uint64_t sub_1E3E7ACF0()
{
  return MEMORY[0x1F40D6D60]();
}

uint64_t sub_1E3E7AD00()
{
  return MEMORY[0x1F40D6D68]();
}

uint64_t sub_1E3E7AD10()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t sub_1E3E7AD20()
{
  return MEMORY[0x1F40D6D88]();
}

uint64_t sub_1E3E7AD30()
{
  return MEMORY[0x1F40D6DA0]();
}

uint64_t sub_1E3E7AD40()
{
  return MEMORY[0x1F40D6DF0]();
}

uint64_t sub_1E3E7AD50()
{
  return MEMORY[0x1F40D6DF8]();
}

uint64_t sub_1E3E7AD60()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1E3E7AD70()
{
  return MEMORY[0x1F40D6E28]();
}

uint64_t sub_1E3E7AD80()
{
  return MEMORY[0x1F40D6E30]();
}

uint64_t sub_1E3E7AD90()
{
  return MEMORY[0x1F40D6E38]();
}

uint64_t sub_1E3E7ADA0()
{
  return MEMORY[0x1F40D6E40]();
}

uint64_t sub_1E3E7ADB0()
{
  return MEMORY[0x1F40F7DB8]();
}

uint64_t sub_1E3E7ADC0()
{
  return MEMORY[0x1F40F7DC8]();
}

uint64_t sub_1E3E7ADD0()
{
  return MEMORY[0x1F40F7DD0]();
}

uint64_t sub_1E3E7ADE0()
{
  return MEMORY[0x1F40F7DD8]();
}

uint64_t sub_1E3E7ADF0()
{
  return MEMORY[0x1F40F7DE0]();
}

uint64_t sub_1E3E7AE00()
{
  return MEMORY[0x1F40F7DE8]();
}

uint64_t sub_1E3E7AE10()
{
  return MEMORY[0x1F40F7DF0]();
}

uint64_t sub_1E3E7AE20()
{
  return MEMORY[0x1F40F7DF8]();
}

uint64_t sub_1E3E7AE30()
{
  return MEMORY[0x1F40F7E20]();
}

uint64_t sub_1E3E7AE40()
{
  return MEMORY[0x1F40F7E28]();
}

uint64_t sub_1E3E7AE50()
{
  return MEMORY[0x1F40F7E40]();
}

uint64_t sub_1E3E7AE60()
{
  return MEMORY[0x1F40F7E80]();
}

uint64_t sub_1E3E7AE70()
{
  return MEMORY[0x1F40F8008]();
}

uint64_t sub_1E3E7AE80()
{
  return MEMORY[0x1F40F80A0]();
}

uint64_t sub_1E3E7AE90()
{
  return MEMORY[0x1F40F8108]();
}

uint64_t sub_1E3E7AEA0()
{
  return MEMORY[0x1F40F8148]();
}

uint64_t sub_1E3E7AEB0()
{
  return MEMORY[0x1F40F8288]();
}

uint64_t sub_1E3E7AEC0()
{
  return MEMORY[0x1F40F82A8]();
}

uint64_t sub_1E3E7AED0()
{
  return MEMORY[0x1F40F8470]();
}

uint64_t sub_1E3E7AEE0()
{
  return MEMORY[0x1F40F8488]();
}

uint64_t sub_1E3E7AEF0()
{
  return MEMORY[0x1F40F84B8]();
}

uint64_t sub_1E3E7AF10()
{
  return MEMORY[0x1F40F8598]();
}

uint64_t sub_1E3E7AF20()
{
  return MEMORY[0x1F40F85A8]();
}

uint64_t sub_1E3E7AF30()
{
  return MEMORY[0x1F40F85B8]();
}

uint64_t sub_1E3E7AF40()
{
  return MEMORY[0x1F40F8650]();
}

uint64_t sub_1E3E7AF50()
{
  return MEMORY[0x1F40F8658]();
}

uint64_t sub_1E3E7AF70()
{
  return MEMORY[0x1F40F8770]();
}

uint64_t sub_1E3E7AF80()
{
  return MEMORY[0x1F40F87E0]();
}

uint64_t sub_1E3E7AF90()
{
  return MEMORY[0x1F40F8BD8]();
}

uint64_t sub_1E3E7AFA0()
{
  return MEMORY[0x1F40F8C00]();
}

uint64_t sub_1E3E7AFB0()
{
  return MEMORY[0x1F40F8C58]();
}

uint64_t sub_1E3E7AFC0()
{
  return MEMORY[0x1F40F8EA0]();
}

uint64_t sub_1E3E7AFD0()
{
  return MEMORY[0x1F40F8F50]();
}

uint64_t sub_1E3E7AFE0()
{
  return MEMORY[0x1F40F9280]();
}

uint64_t sub_1E3E7AFF0()
{
  return MEMORY[0x1F40F9298]();
}

uint64_t sub_1E3E7B000()
{
  return MEMORY[0x1F40F93E8]();
}

uint64_t sub_1E3E7B010()
{
  return MEMORY[0x1F40F93F0]();
}

uint64_t sub_1E3E7B020()
{
  return MEMORY[0x1F40F9470]();
}

uint64_t sub_1E3E7B030()
{
  return MEMORY[0x1F40F9480]();
}

uint64_t sub_1E3E7B040()
{
  return MEMORY[0x1F40F95B8]();
}

uint64_t sub_1E3E7B050()
{
  return MEMORY[0x1F40F95C0]();
}

uint64_t sub_1E3E7B060()
{
  return MEMORY[0x1F40F95C8]();
}

uint64_t sub_1E3E7B070()
{
  return MEMORY[0x1F40F96C8]();
}

uint64_t sub_1E3E7B080()
{
  return MEMORY[0x1F40F96D8]();
}

uint64_t sub_1E3E7B090()
{
  return MEMORY[0x1F40F96F8]();
}

uint64_t sub_1E3E7B0A0()
{
  return MEMORY[0x1F40F9708]();
}

uint64_t sub_1E3E7B0B0()
{
  return MEMORY[0x1F40F9718]();
}

uint64_t sub_1E3E7B0C0()
{
  return MEMORY[0x1F40F9720]();
}

uint64_t sub_1E3E7B0D0()
{
  return MEMORY[0x1F40F98C0]();
}

uint64_t sub_1E3E7B0E0()
{
  return MEMORY[0x1F40F9AD0]();
}

uint64_t sub_1E3E7B0F0()
{
  return MEMORY[0x1F40F9B68]();
}

uint64_t sub_1E3E7B100()
{
  return MEMORY[0x1F40F9C30]();
}

uint64_t sub_1E3E7B110()
{
  return MEMORY[0x1F40F9C58]();
}

uint64_t sub_1E3E7B120()
{
  return MEMORY[0x1F40F9CD8]();
}

uint64_t sub_1E3E7B130()
{
  return MEMORY[0x1F40F9CE8]();
}

uint64_t sub_1E3E7B140()
{
  return MEMORY[0x1F40F9E10]();
}

uint64_t sub_1E3E7B150()
{
  return MEMORY[0x1F40F9E20]();
}

uint64_t sub_1E3E7B160()
{
  return MEMORY[0x1F40F9F90]();
}

uint64_t sub_1E3E7B170()
{
  return MEMORY[0x1F40F9FA8]();
}

uint64_t sub_1E3E7B180()
{
  return MEMORY[0x1F40F9FB8]();
}

uint64_t sub_1E3E7B190()
{
  return MEMORY[0x1F40FA120]();
}

uint64_t sub_1E3E7B1A0()
{
  return MEMORY[0x1F40FA158]();
}

uint64_t sub_1E3E7B1B0()
{
  return MEMORY[0x1F40FA1A8]();
}

uint64_t sub_1E3E7B1C0()
{
  return MEMORY[0x1F40FA2E0]();
}

uint64_t sub_1E3E7B1D0()
{
  return MEMORY[0x1F40FA470]();
}

uint64_t sub_1E3E7B1E0()
{
  return MEMORY[0x1F40FA518]();
}

uint64_t sub_1E3E7B1F0()
{
  return MEMORY[0x1F40FA528]();
}

uint64_t sub_1E3E7B200()
{
  return MEMORY[0x1F40FA790]();
}

uint64_t sub_1E3E7B210()
{
  return MEMORY[0x1F40FA798]();
}

uint64_t sub_1E3E7B220()
{
  return MEMORY[0x1F40FAD68]();
}

uint64_t sub_1E3E7B230()
{
  return MEMORY[0x1F40FADC0]();
}

uint64_t sub_1E3E7B240()
{
  return MEMORY[0x1F40FADD8]();
}

uint64_t sub_1E3E7B250()
{
  return MEMORY[0x1F40FADE0]();
}

uint64_t sub_1E3E7B260()
{
  return MEMORY[0x1F40FADF8]();
}

uint64_t sub_1E3E7B270()
{
  return MEMORY[0x1F40FAE00]();
}

uint64_t sub_1E3E7B280()
{
  return MEMORY[0x1F40FAE18]();
}

uint64_t sub_1E3E7B290()
{
  return MEMORY[0x1F40FAE68]();
}

uint64_t sub_1E3E7B2A0()
{
  return MEMORY[0x1F40FAF00]();
}

uint64_t sub_1E3E7B2B0()
{
  return MEMORY[0x1F40FAF60]();
}

uint64_t sub_1E3E7B2C0()
{
  return MEMORY[0x1F40FAF78]();
}

uint64_t sub_1E3E7B2D0()
{
  return MEMORY[0x1F40FAF80]();
}

uint64_t sub_1E3E7B2E0()
{
  return MEMORY[0x1F40FAF90]();
}

uint64_t sub_1E3E7B2F0()
{
  return MEMORY[0x1F40FAFF0]();
}

uint64_t sub_1E3E7B300()
{
  return MEMORY[0x1F40FB000]();
}

uint64_t sub_1E3E7B310()
{
  return MEMORY[0x1F40FB050]();
}

uint64_t sub_1E3E7B320()
{
  return MEMORY[0x1F40FB088]();
}

uint64_t sub_1E3E7B330()
{
  return MEMORY[0x1F40FB0C8]();
}

uint64_t sub_1E3E7B340()
{
  return MEMORY[0x1F40FB0F8]();
}

uint64_t sub_1E3E7B350()
{
  return MEMORY[0x1F40FB130]();
}

uint64_t sub_1E3E7B360()
{
  return MEMORY[0x1F40FB140]();
}

uint64_t sub_1E3E7B370()
{
  return MEMORY[0x1F40FB148]();
}

uint64_t sub_1E3E7B380()
{
  return MEMORY[0x1F40FB1E0]();
}

uint64_t sub_1E3E7B390()
{
  return MEMORY[0x1F40FB3B0]();
}

uint64_t sub_1E3E7B3A0()
{
  return MEMORY[0x1F40FB460]();
}

uint64_t sub_1E3E7B3B0()
{
  return MEMORY[0x1F40FB558]();
}

uint64_t sub_1E3E7B3C0()
{
  return MEMORY[0x1F40FB568]();
}

uint64_t sub_1E3E7B3D0()
{
  return MEMORY[0x1F40FB580]();
}

uint64_t sub_1E3E7B3E0()
{
  return MEMORY[0x1F414B000]();
}

uint64_t sub_1E3E7B3F0()
{
  return MEMORY[0x1F40FB5D0]();
}

uint64_t sub_1E3E7B400()
{
  return MEMORY[0x1F40FB5D8]();
}

uint64_t sub_1E3E7B410()
{
  return MEMORY[0x1F40FB5F0]();
}

uint64_t sub_1E3E7B420()
{
  return MEMORY[0x1F40FB780]();
}

uint64_t sub_1E3E7B430()
{
  return MEMORY[0x1F40FB798]();
}

uint64_t sub_1E3E7B440()
{
  return MEMORY[0x1F40FB840]();
}

uint64_t sub_1E3E7B450()
{
  return MEMORY[0x1F40FB920]();
}

uint64_t sub_1E3E7B460()
{
  return MEMORY[0x1F40FBA50]();
}

uint64_t sub_1E3E7B470()
{
  return MEMORY[0x1F40FBC58]();
}

uint64_t sub_1E3E7B480()
{
  return MEMORY[0x1F40FBCA8]();
}

uint64_t sub_1E3E7B490()
{
  return MEMORY[0x1F40FBF78]();
}

uint64_t sub_1E3E7B4A0()
{
  return MEMORY[0x1F40FC108]();
}

uint64_t sub_1E3E7B4B0()
{
  return MEMORY[0x1F40FC158]();
}

uint64_t sub_1E3E7B4C0()
{
  return MEMORY[0x1F40FC280]();
}

uint64_t sub_1E3E7B4D0()
{
  return MEMORY[0x1F40FC288]();
}

uint64_t sub_1E3E7B4E0()
{
  return MEMORY[0x1F40FC298]();
}

uint64_t sub_1E3E7B4F0()
{
  return MEMORY[0x1F40FC2A0]();
}

uint64_t sub_1E3E7B500()
{
  return MEMORY[0x1F40FC2A8]();
}

uint64_t sub_1E3E7B510()
{
  return MEMORY[0x1F40FC310]();
}

uint64_t sub_1E3E7B520()
{
  return MEMORY[0x1F40FC350]();
}

uint64_t sub_1E3E7B530()
{
  return MEMORY[0x1F40FC380]();
}

uint64_t sub_1E3E7B540()
{
  return MEMORY[0x1F40FC3E0]();
}

uint64_t sub_1E3E7B550()
{
  return MEMORY[0x1F40FC3E8]();
}

uint64_t sub_1E3E7B560()
{
  return MEMORY[0x1F40FC438]();
}

uint64_t sub_1E3E7B570()
{
  return MEMORY[0x1F40FC498]();
}

uint64_t sub_1E3E7B580()
{
  return MEMORY[0x1F40FC4A8]();
}

uint64_t sub_1E3E7B590()
{
  return MEMORY[0x1F40FC4E8]();
}

uint64_t sub_1E3E7B5A0()
{
  return MEMORY[0x1F40FC518]();
}

uint64_t sub_1E3E7B5B0()
{
  return MEMORY[0x1F40FC520]();
}

uint64_t sub_1E3E7B5C0()
{
  return MEMORY[0x1F40FC550]();
}

uint64_t sub_1E3E7B5D0()
{
  return MEMORY[0x1F40FC600]();
}

uint64_t sub_1E3E7B600()
{
  return MEMORY[0x1F40FC6F0]();
}

uint64_t sub_1E3E7B610()
{
  return MEMORY[0x1F40FC700]();
}

uint64_t sub_1E3E7B620()
{
  return MEMORY[0x1F40FC708]();
}

uint64_t sub_1E3E7B630()
{
  return MEMORY[0x1F40FC718]();
}

uint64_t sub_1E3E7B640()
{
  return MEMORY[0x1F40FC728]();
}

uint64_t sub_1E3E7B650()
{
  return MEMORY[0x1F40FC750]();
}

uint64_t sub_1E3E7B660()
{
  return MEMORY[0x1F40FC760]();
}

uint64_t sub_1E3E7B670()
{
  return MEMORY[0x1F40FC840]();
}

uint64_t sub_1E3E7B680()
{
  return MEMORY[0x1F40FC850]();
}

uint64_t sub_1E3E7B690()
{
  return MEMORY[0x1F40FC858]();
}

uint64_t sub_1E3E7B6A0()
{
  return MEMORY[0x1F40FC910]();
}

uint64_t sub_1E3E7B6B0()
{
  return MEMORY[0x1F40FC920]();
}

uint64_t sub_1E3E7B6C0()
{
  return MEMORY[0x1F40FC940]();
}

uint64_t sub_1E3E7B6D0()
{
  return MEMORY[0x1F40FC970]();
}

uint64_t sub_1E3E7B6E0()
{
  return MEMORY[0x1F40FC9D0]();
}

uint64_t sub_1E3E7B6F0()
{
  return MEMORY[0x1F40FCA20]();
}

uint64_t sub_1E3E7B700()
{
  return MEMORY[0x1F40FCA30]();
}

uint64_t sub_1E3E7B710()
{
  return MEMORY[0x1F40FCC30]();
}

uint64_t sub_1E3E7B720()
{
  return MEMORY[0x1F40FCD18]();
}

uint64_t sub_1E3E7B730()
{
  return MEMORY[0x1F40FCD30]();
}

uint64_t sub_1E3E7B740()
{
  return MEMORY[0x1F40FCDF0]();
}

uint64_t sub_1E3E7B750()
{
  return MEMORY[0x1F4186C60]();
}

uint64_t sub_1E3E7B760()
{
  return MEMORY[0x1F4186C98]();
}

uint64_t sub_1E3E7B770()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1E3E7B780()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1E3E7B790()
{
  return MEMORY[0x1F4186CE8]();
}

uint64_t sub_1E3E7B7A0()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1E3E7B7B0()
{
  return MEMORY[0x1F4186D40]();
}

uint64_t sub_1E3E7B7C0()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1E3E7B7D0()
{
  return MEMORY[0x1F4186E28]();
}

uint64_t sub_1E3E7B7E0()
{
  return MEMORY[0x1F4186E60]();
}

uint64_t sub_1E3E7B7F0()
{
  return MEMORY[0x1F4186EF8]();
}

uint64_t sub_1E3E7B800()
{
  return MEMORY[0x1F4186F08]();
}

uint64_t sub_1E3E7B810()
{
  return MEMORY[0x1F4186F18]();
}

uint64_t sub_1E3E7B820()
{
  return MEMORY[0x1F4186F40]();
}

uint64_t sub_1E3E7B830()
{
  return MEMORY[0x1F4127738]();
}

uint64_t sub_1E3E7B840()
{
  return MEMORY[0x1F4127748]();
}

uint64_t sub_1E3E7B860()
{
  return MEMORY[0x1F4127758]();
}

uint64_t sub_1E3E7B870()
{
  return MEMORY[0x1F4127770]();
}

uint64_t sub_1E3E7B880()
{
  return MEMORY[0x1F4127778]();
}

uint64_t sub_1E3E7B890()
{
  return MEMORY[0x1F4127780]();
}

uint64_t sub_1E3E7B8A0()
{
  return MEMORY[0x1F4127788]();
}

uint64_t sub_1E3E7B8C0()
{
  return MEMORY[0x1F41277A0]();
}

uint64_t sub_1E3E7B8D0()
{
  return MEMORY[0x1F41277B0]();
}

uint64_t sub_1E3E7B8F0()
{
  return MEMORY[0x1F41277C0]();
}

uint64_t sub_1E3E7B900()
{
  return MEMORY[0x1F41277C8]();
}

uint64_t sub_1E3E7B910()
{
  return MEMORY[0x1F41277D0]();
}

uint64_t sub_1E3E7B920()
{
  return MEMORY[0x1F41277E8]();
}

uint64_t sub_1E3E7B930()
{
  return MEMORY[0x1F41277F0]();
}

uint64_t sub_1E3E7B940()
{
  return MEMORY[0x1F41277F8]();
}

uint64_t sub_1E3E7B950()
{
  return MEMORY[0x1F4127808]();
}

uint64_t sub_1E3E7B960()
{
  return MEMORY[0x1F4127810]();
}

uint64_t sub_1E3E7B970()
{
  return MEMORY[0x1F4127818]();
}

uint64_t sub_1E3E7B980()
{
  return MEMORY[0x1F4127820]();
}

uint64_t sub_1E3E7B990()
{
  return MEMORY[0x1F4127828]();
}

uint64_t sub_1E3E7B9A0()
{
  return MEMORY[0x1F4127830]();
}

uint64_t sub_1E3E7B9B0()
{
  return MEMORY[0x1F4127858]();
}

uint64_t sub_1E3E7B9C0()
{
  return MEMORY[0x1F4127860]();
}

uint64_t sub_1E3E7B9D0()
{
  return MEMORY[0x1F4127868]();
}

uint64_t sub_1E3E7B9E0()
{
  return MEMORY[0x1F4127870]();
}

uint64_t sub_1E3E7B9F0()
{
  return MEMORY[0x1F4127888]();
}

uint64_t sub_1E3E7BA00()
{
  return MEMORY[0x1F4127890]();
}

uint64_t sub_1E3E7BA10()
{
  return MEMORY[0x1F4127898]();
}

uint64_t sub_1E3E7BA20()
{
  return MEMORY[0x1F4127900]();
}

uint64_t sub_1E3E7BA30()
{
  return MEMORY[0x1F4127908]();
}

uint64_t sub_1E3E7BA40()
{
  return MEMORY[0x1F4127910]();
}

uint64_t sub_1E3E7BA50()
{
  return MEMORY[0x1F4127920]();
}

uint64_t sub_1E3E7BA60()
{
  return MEMORY[0x1F4127928]();
}

uint64_t sub_1E3E7BA70()
{
  return MEMORY[0x1F4127980]();
}

uint64_t sub_1E3E7BA80()
{
  return MEMORY[0x1F41279C0]();
}

uint64_t sub_1E3E7BA90()
{
  return MEMORY[0x1F41279D0]();
}

uint64_t sub_1E3E7BAA0()
{
  return MEMORY[0x1F41279E8]();
}

uint64_t sub_1E3E7BAB0()
{
  return MEMORY[0x1F41279F0]();
}

uint64_t sub_1E3E7BAC0()
{
  return MEMORY[0x1F41279F8]();
}

uint64_t sub_1E3E7BAD0()
{
  return MEMORY[0x1F4127A00]();
}

uint64_t sub_1E3E7BAE0()
{
  return MEMORY[0x1F4127A08]();
}

uint64_t sub_1E3E7BAF0()
{
  return MEMORY[0x1F4127A18]();
}

uint64_t sub_1E3E7BB00()
{
  return MEMORY[0x1F4127A38]();
}

uint64_t sub_1E3E7BB10()
{
  return MEMORY[0x1F4127A48]();
}

uint64_t sub_1E3E7BB20()
{
  return MEMORY[0x1F4127A50]();
}

uint64_t sub_1E3E7BB30()
{
  return MEMORY[0x1F4127A58]();
}

uint64_t sub_1E3E7BB40()
{
  return MEMORY[0x1F4127A60]();
}

uint64_t sub_1E3E7BB50()
{
  return MEMORY[0x1F4127A68]();
}

uint64_t sub_1E3E7BB60()
{
  return MEMORY[0x1F4127A90]();
}

uint64_t sub_1E3E7BB70()
{
  return MEMORY[0x1F4127AC0]();
}

uint64_t sub_1E3E7BB80()
{
  return MEMORY[0x1F4127AD0]();
}

uint64_t sub_1E3E7BB90()
{
  return MEMORY[0x1F4127AD8]();
}

uint64_t sub_1E3E7BBA0()
{
  return MEMORY[0x1F4127AE0]();
}

uint64_t sub_1E3E7BBB0()
{
  return MEMORY[0x1F4127AE8]();
}

uint64_t sub_1E3E7BBC0()
{
  return MEMORY[0x1F4127B38]();
}

uint64_t sub_1E3E7BBD0()
{
  return MEMORY[0x1F4127B88]();
}

uint64_t sub_1E3E7BBE0()
{
  return MEMORY[0x1F4127B90]();
}

uint64_t sub_1E3E7BBF0()
{
  return MEMORY[0x1F4127BA0]();
}

uint64_t sub_1E3E7BC00()
{
  return MEMORY[0x1F4127BA8]();
}

uint64_t sub_1E3E7BC10()
{
  return MEMORY[0x1F4127BB0]();
}

uint64_t sub_1E3E7BC20()
{
  return MEMORY[0x1F4127BD0]();
}

uint64_t sub_1E3E7BC30()
{
  return MEMORY[0x1F4127BD8]();
}

uint64_t sub_1E3E7BC40()
{
  return MEMORY[0x1F4127BE8]();
}

uint64_t sub_1E3E7BC50()
{
  return MEMORY[0x1F4127C00]();
}

uint64_t sub_1E3E7BC60()
{
  return MEMORY[0x1F4127C58]();
}

uint64_t sub_1E3E7BC70()
{
  return MEMORY[0x1F4127C68]();
}

uint64_t sub_1E3E7BC80()
{
  return MEMORY[0x1F4127C78]();
}

uint64_t sub_1E3E7BC90()
{
  return MEMORY[0x1F4127C80]();
}

uint64_t sub_1E3E7BCA0()
{
  return MEMORY[0x1F4127C90]();
}

uint64_t sub_1E3E7BCB0()
{
  return MEMORY[0x1F4127CB8]();
}

uint64_t sub_1E3E7BCC0()
{
  return MEMORY[0x1F4127D08]();
}

uint64_t sub_1E3E7BCD0()
{
  return MEMORY[0x1F4127D10]();
}

uint64_t sub_1E3E7BCE0()
{
  return MEMORY[0x1F4127D20]();
}

uint64_t sub_1E3E7BCF0()
{
  return MEMORY[0x1F4127D28]();
}

uint64_t sub_1E3E7BD00()
{
  return MEMORY[0x1F4127D98]();
}

uint64_t sub_1E3E7BD10()
{
  return MEMORY[0x1F4127DA0]();
}

uint64_t sub_1E3E7BD20()
{
  return MEMORY[0x1F4127DA8]();
}

uint64_t sub_1E3E7BD30()
{
  return MEMORY[0x1F4127DC0]();
}

uint64_t sub_1E3E7BD40()
{
  return MEMORY[0x1F4127DD0]();
}

uint64_t sub_1E3E7BD50()
{
  return MEMORY[0x1F4127DF8]();
}

uint64_t sub_1E3E7BD60()
{
  return MEMORY[0x1F4127E00]();
}

uint64_t sub_1E3E7BD70()
{
  return MEMORY[0x1F4127E90]();
}

uint64_t sub_1E3E7BD80()
{
  return MEMORY[0x1F4127EA0]();
}

uint64_t sub_1E3E7BD90()
{
  return MEMORY[0x1F4127F18]();
}

uint64_t sub_1E3E7BDA0()
{
  return MEMORY[0x1F4127F20]();
}

uint64_t sub_1E3E7BDB0()
{
  return MEMORY[0x1F4127F48]();
}

uint64_t sub_1E3E7BDC0()
{
  return MEMORY[0x1F4127F50]();
}

uint64_t sub_1E3E7BDD0()
{
  return MEMORY[0x1F4127F58]();
}

uint64_t sub_1E3E7BDE0()
{
  return MEMORY[0x1F4127F60]();
}

uint64_t sub_1E3E7BDF0()
{
  return MEMORY[0x1F4127FD0]();
}

uint64_t sub_1E3E7BE00()
{
  return MEMORY[0x1F4127FE8]();
}

uint64_t sub_1E3E7BE20()
{
  return MEMORY[0x1F4128000]();
}

uint64_t sub_1E3E7BE30()
{
  return MEMORY[0x1F4128030]();
}

uint64_t sub_1E3E7BE40()
{
  return MEMORY[0x1F4128038]();
}

uint64_t sub_1E3E7BE50()
{
  return MEMORY[0x1F4128048]();
}

uint64_t sub_1E3E7BE60()
{
  return MEMORY[0x1F4128058]();
}

uint64_t sub_1E3E7BE70()
{
  return MEMORY[0x1F4128068]();
}

uint64_t sub_1E3E7BE80()
{
  return MEMORY[0x1F4128078]();
}

uint64_t sub_1E3E7BE90()
{
  return MEMORY[0x1F4128088]();
}

uint64_t sub_1E3E7BEA0()
{
  return MEMORY[0x1F41280C0]();
}

uint64_t sub_1E3E7BEB0()
{
  return MEMORY[0x1F4128168]();
}

uint64_t sub_1E3E7BEC0()
{
  return MEMORY[0x1F41281A8]();
}

uint64_t sub_1E3E7BED0()
{
  return MEMORY[0x1F41281D0]();
}

uint64_t sub_1E3E7BEE0()
{
  return MEMORY[0x1F41281E8]();
}

uint64_t sub_1E3E7BEF0()
{
  return MEMORY[0x1F41281F0]();
}

uint64_t sub_1E3E7BF30()
{
  return MEMORY[0x1F4128248]();
}

uint64_t sub_1E3E7BF40()
{
  return MEMORY[0x1F4128250]();
}

uint64_t sub_1E3E7BF50()
{
  return MEMORY[0x1F4128260]();
}

uint64_t sub_1E3E7BF60()
{
  return MEMORY[0x1F4128268]();
}

uint64_t sub_1E3E7BF70()
{
  return MEMORY[0x1F4128270]();
}

uint64_t sub_1E3E7BF80()
{
  return MEMORY[0x1F4128278]();
}

uint64_t sub_1E3E7BF90()
{
  return MEMORY[0x1F4128280]();
}

uint64_t sub_1E3E7BFA0()
{
  return MEMORY[0x1F4128288]();
}

uint64_t sub_1E3E7BFB0()
{
  return MEMORY[0x1F4128290]();
}

uint64_t sub_1E3E7BFC0()
{
  return MEMORY[0x1F4128298]();
}

uint64_t sub_1E3E7BFD0()
{
  return MEMORY[0x1F41282A0]();
}

uint64_t sub_1E3E7BFE0()
{
  return MEMORY[0x1F41282A8]();
}

uint64_t sub_1E3E7BFF0()
{
  return MEMORY[0x1F41282B0]();
}

uint64_t sub_1E3E7C000()
{
  return MEMORY[0x1F41282B8]();
}

uint64_t sub_1E3E7C010()
{
  return MEMORY[0x1F41282C0]();
}

uint64_t sub_1E3E7C020()
{
  return MEMORY[0x1F41282C8]();
}

uint64_t sub_1E3E7C030()
{
  return MEMORY[0x1F41282E0]();
}

uint64_t sub_1E3E7C040()
{
  return MEMORY[0x1F4128338]();
}

uint64_t sub_1E3E7C050()
{
  return MEMORY[0x1F4128340]();
}

uint64_t sub_1E3E7C060()
{
  return MEMORY[0x1F4128348]();
}

uint64_t sub_1E3E7C070()
{
  return MEMORY[0x1F4128350]();
}

uint64_t sub_1E3E7C080()
{
  return MEMORY[0x1F4128368]();
}

uint64_t sub_1E3E7C090()
{
  return MEMORY[0x1F4128378]();
}

uint64_t sub_1E3E7C0A0()
{
  return MEMORY[0x1F4128380]();
}

uint64_t sub_1E3E7C0B0()
{
  return MEMORY[0x1F4128388]();
}

uint64_t sub_1E3E7C0C0()
{
  return MEMORY[0x1F4128390]();
}

uint64_t sub_1E3E7C0D0()
{
  return MEMORY[0x1F41283A0]();
}

uint64_t sub_1E3E7C0E0()
{
  return MEMORY[0x1F41283A8]();
}

uint64_t sub_1E3E7C0F0()
{
  return MEMORY[0x1F41283B0]();
}

uint64_t sub_1E3E7C100()
{
  return MEMORY[0x1F41283C0]();
}

uint64_t sub_1E3E7C110()
{
  return MEMORY[0x1F41283C8]();
}

uint64_t sub_1E3E7C120()
{
  return MEMORY[0x1F41283D0]();
}

uint64_t sub_1E3E7C130()
{
  return MEMORY[0x1F41283D8]();
}

uint64_t sub_1E3E7C140()
{
  return MEMORY[0x1F41283E8]();
}

uint64_t sub_1E3E7C150()
{
  return MEMORY[0x1F41283F8]();
}

uint64_t sub_1E3E7C160()
{
  return MEMORY[0x1F4128400]();
}

uint64_t sub_1E3E7C170()
{
  return MEMORY[0x1F4128410]();
}

uint64_t sub_1E3E7C180()
{
  return MEMORY[0x1F4128418]();
}

uint64_t sub_1E3E7C190()
{
  return MEMORY[0x1F4128498]();
}

uint64_t sub_1E3E7C1A0()
{
  return MEMORY[0x1F41284A8]();
}

uint64_t sub_1E3E7C1B0()
{
  return MEMORY[0x1F4128580]();
}

uint64_t sub_1E3E7C1C0()
{
  return MEMORY[0x1F4128588]();
}

uint64_t sub_1E3E7C1D0()
{
  return MEMORY[0x1F4128590]();
}

uint64_t sub_1E3E7C1E0()
{
  return MEMORY[0x1F4128598]();
}

uint64_t sub_1E3E7C1F0()
{
  return MEMORY[0x1F41285A0]();
}

uint64_t sub_1E3E7C200()
{
  return MEMORY[0x1F41285A8]();
}

uint64_t sub_1E3E7C210()
{
  return MEMORY[0x1F41285B0]();
}

uint64_t sub_1E3E7C220()
{
  return MEMORY[0x1F41285B8]();
}

uint64_t sub_1E3E7C230()
{
  return MEMORY[0x1F41285C0]();
}

uint64_t sub_1E3E7C240()
{
  return MEMORY[0x1F41285C8]();
}

uint64_t sub_1E3E7C250()
{
  return MEMORY[0x1F41285D0]();
}

uint64_t sub_1E3E7C260()
{
  return MEMORY[0x1F41285E0]();
}

uint64_t sub_1E3E7C270()
{
  return MEMORY[0x1F4128618]();
}

uint64_t sub_1E3E7C280()
{
  return MEMORY[0x1F4128620]();
}

uint64_t sub_1E3E7C290()
{
  return MEMORY[0x1F4128628]();
}

uint64_t sub_1E3E7C2A0()
{
  return MEMORY[0x1F4128640]();
}

uint64_t sub_1E3E7C2B0()
{
  return MEMORY[0x1F4128668]();
}

uint64_t sub_1E3E7C2C0()
{
  return MEMORY[0x1F4128678]();
}

uint64_t sub_1E3E7C2D0()
{
  return MEMORY[0x1F4128680]();
}

uint64_t sub_1E3E7C2E0()
{
  return MEMORY[0x1F4128688]();
}

uint64_t sub_1E3E7C2F0()
{
  return MEMORY[0x1F4128690]();
}

uint64_t sub_1E3E7C300()
{
  return MEMORY[0x1F41286A0]();
}

uint64_t sub_1E3E7C310()
{
  return MEMORY[0x1F41286D8]();
}

uint64_t sub_1E3E7C320()
{
  return MEMORY[0x1F41286E0]();
}

uint64_t sub_1E3E7C330()
{
  return MEMORY[0x1F41286F8]();
}

uint64_t sub_1E3E7C340()
{
  return MEMORY[0x1F4128700]();
}

uint64_t sub_1E3E7C350()
{
  return MEMORY[0x1F4128720]();
}

uint64_t sub_1E3E7C360()
{
  return MEMORY[0x1F4128728]();
}

uint64_t sub_1E3E7C370()
{
  return MEMORY[0x1F4128730]();
}

uint64_t sub_1E3E7C380()
{
  return MEMORY[0x1F4128738]();
}

uint64_t sub_1E3E7C390()
{
  return MEMORY[0x1F4128748]();
}

uint64_t sub_1E3E7C3A0()
{
  return MEMORY[0x1F4128750]();
}

uint64_t sub_1E3E7C3B0()
{
  return MEMORY[0x1F4128758]();
}

uint64_t sub_1E3E7C3C0()
{
  return MEMORY[0x1F4128760]();
}

uint64_t sub_1E3E7C3D0()
{
  return MEMORY[0x1F4128768]();
}

uint64_t sub_1E3E7C3E0()
{
  return MEMORY[0x1F4128770]();
}

uint64_t sub_1E3E7C3F0()
{
  return MEMORY[0x1F4128778]();
}

uint64_t sub_1E3E7C400()
{
  return MEMORY[0x1F41287A0]();
}

uint64_t sub_1E3E7C410()
{
  return MEMORY[0x1F41287A8]();
}

uint64_t sub_1E3E7C420()
{
  return MEMORY[0x1F41287B0]();
}

uint64_t sub_1E3E7C440()
{
  return MEMORY[0x1F41287C8]();
}

uint64_t sub_1E3E7C450()
{
  return MEMORY[0x1F41287D0]();
}

uint64_t sub_1E3E7C460()
{
  return MEMORY[0x1F41287D8]();
}

uint64_t sub_1E3E7C470()
{
  return MEMORY[0x1F41287E8]();
}

uint64_t sub_1E3E7C480()
{
  return MEMORY[0x1F41287F8]();
}

uint64_t sub_1E3E7C490()
{
  return MEMORY[0x1F4128800]();
}

uint64_t sub_1E3E7C4B0()
{
  return MEMORY[0x1F4128810]();
}

uint64_t sub_1E3E7C4C0()
{
  return MEMORY[0x1F4128838]();
}

uint64_t sub_1E3E7C4D0()
{
  return MEMORY[0x1F4128840]();
}

uint64_t sub_1E3E7C4E0()
{
  return MEMORY[0x1F4128848]();
}

uint64_t sub_1E3E7C4F0()
{
  return MEMORY[0x1F4128850]();
}

uint64_t sub_1E3E7C500()
{
  return MEMORY[0x1F4128860]();
}

uint64_t sub_1E3E7C510()
{
  return MEMORY[0x1F4128868]();
}

uint64_t sub_1E3E7C520()
{
  return MEMORY[0x1F4128978]();
}

uint64_t sub_1E3E7C530()
{
  return MEMORY[0x1F4128A58]();
}

uint64_t sub_1E3E7C540()
{
  return MEMORY[0x1F4128A68]();
}

uint64_t sub_1E3E7C550()
{
  return MEMORY[0x1F4128A70]();
}

uint64_t sub_1E3E7C560()
{
  return MEMORY[0x1F4128A78]();
}

uint64_t sub_1E3E7C570()
{
  return MEMORY[0x1F4128A88]();
}

uint64_t sub_1E3E7C590()
{
  return MEMORY[0x1F4128AD8]();
}

uint64_t sub_1E3E7C5A0()
{
  return MEMORY[0x1F4128AE0]();
}

uint64_t sub_1E3E7C5B0()
{
  return MEMORY[0x1F4128AE8]();
}

uint64_t sub_1E3E7C5C0()
{
  return MEMORY[0x1F4128AF0]();
}

uint64_t sub_1E3E7C5D0()
{
  return MEMORY[0x1F4128AF8]();
}

uint64_t sub_1E3E7C5E0()
{
  return MEMORY[0x1F4128B00]();
}

uint64_t sub_1E3E7C5F0()
{
  return MEMORY[0x1F4128B10]();
}

uint64_t sub_1E3E7C600()
{
  return MEMORY[0x1F4128B28]();
}

uint64_t sub_1E3E7C610()
{
  return MEMORY[0x1F4128B30]();
}

uint64_t sub_1E3E7C620()
{
  return MEMORY[0x1F4128B38]();
}

uint64_t sub_1E3E7C630()
{
  return MEMORY[0x1F4128B40]();
}

uint64_t sub_1E3E7C640()
{
  return MEMORY[0x1F4128B48]();
}

uint64_t sub_1E3E7C650()
{
  return MEMORY[0x1F4128B50]();
}

uint64_t sub_1E3E7C660()
{
  return MEMORY[0x1F4128B58]();
}

uint64_t sub_1E3E7C670()
{
  return MEMORY[0x1F4128B68]();
}

uint64_t sub_1E3E7C680()
{
  return MEMORY[0x1F4128B70]();
}

uint64_t sub_1E3E7C690()
{
  return MEMORY[0x1F4128B78]();
}

uint64_t sub_1E3E7C6A0()
{
  return MEMORY[0x1F4128B80]();
}

uint64_t sub_1E3E7C6B0()
{
  return MEMORY[0x1F4128B90]();
}

uint64_t sub_1E3E7C6C0()
{
  return MEMORY[0x1F4128C78]();
}

uint64_t sub_1E3E7C6D0()
{
  return MEMORY[0x1F4128C90]();
}

uint64_t sub_1E3E7C6E0()
{
  return MEMORY[0x1F4128C98]();
}

uint64_t sub_1E3E7C6F0()
{
  return MEMORY[0x1F4128CA0]();
}

uint64_t sub_1E3E7C700()
{
  return MEMORY[0x1F4128CA8]();
}

uint64_t sub_1E3E7C710()
{
  return MEMORY[0x1F4128CB0]();
}

uint64_t sub_1E3E7C720()
{
  return MEMORY[0x1F4128CB8]();
}

uint64_t sub_1E3E7C730()
{
  return MEMORY[0x1F4128CC0]();
}

uint64_t sub_1E3E7C740()
{
  return MEMORY[0x1F4128CD0]();
}

uint64_t sub_1E3E7C750()
{
  return MEMORY[0x1F4128CE0]();
}

uint64_t sub_1E3E7C760()
{
  return MEMORY[0x1F4128D00]();
}

uint64_t sub_1E3E7C770()
{
  return MEMORY[0x1F4128D08]();
}

uint64_t sub_1E3E7C780()
{
  return MEMORY[0x1F4128D20]();
}

uint64_t sub_1E3E7C790()
{
  return MEMORY[0x1F4128D38]();
}

uint64_t sub_1E3E7C7A0()
{
  return MEMORY[0x1F4128D70]();
}

uint64_t sub_1E3E7C7B0()
{
  return MEMORY[0x1F4128D78]();
}

uint64_t sub_1E3E7C7D0()
{
  return MEMORY[0x1F4128DA8]();
}

uint64_t sub_1E3E7C7E0()
{
  return MEMORY[0x1F4128DB8]();
}

uint64_t sub_1E3E7C7F0()
{
  return MEMORY[0x1F4128DC8]();
}

uint64_t sub_1E3E7C800()
{
  return MEMORY[0x1F4128DD0]();
}

uint64_t sub_1E3E7C810()
{
  return MEMORY[0x1F4128DE0]();
}

uint64_t sub_1E3E7C820()
{
  return MEMORY[0x1F4128DE8]();
}

uint64_t sub_1E3E7C830()
{
  return MEMORY[0x1F4128DF0]();
}

uint64_t sub_1E3E7C850()
{
  return MEMORY[0x1F4128E40]();
}

uint64_t sub_1E3E7C860()
{
  return MEMORY[0x1F4128E58]();
}

uint64_t sub_1E3E7C870()
{
  return MEMORY[0x1F4128E60]();
}

uint64_t sub_1E3E7C880()
{
  return MEMORY[0x1F4128E68]();
}

uint64_t sub_1E3E7C890()
{
  return MEMORY[0x1F4128E70]();
}

uint64_t sub_1E3E7C8A0()
{
  return MEMORY[0x1F4128F50]();
}

uint64_t sub_1E3E7C8B0()
{
  return MEMORY[0x1F4128F58]();
}

uint64_t sub_1E3E7C8C0()
{
  return MEMORY[0x1F4128F88]();
}

uint64_t sub_1E3E7C8D0()
{
  return MEMORY[0x1F4128FD0]();
}

uint64_t sub_1E3E7C8E0()
{
  return MEMORY[0x1F4128FE8]();
}

uint64_t sub_1E3E7C8F0()
{
  return MEMORY[0x1F4129008]();
}

uint64_t sub_1E3E7C900()
{
  return MEMORY[0x1F4129010]();
}

uint64_t sub_1E3E7C910()
{
  return MEMORY[0x1F4129038]();
}

uint64_t sub_1E3E7C920()
{
  return MEMORY[0x1F4129050]();
}

uint64_t sub_1E3E7C930()
{
  return MEMORY[0x1F4129060]();
}

uint64_t sub_1E3E7C940()
{
  return MEMORY[0x1F4129068]();
}

uint64_t sub_1E3E7C970()
{
  return MEMORY[0x1F4129090]();
}

uint64_t sub_1E3E7C980()
{
  return MEMORY[0x1F41290A8]();
}

uint64_t sub_1E3E7C990()
{
  return MEMORY[0x1F41290B0]();
}

uint64_t sub_1E3E7C9A0()
{
  return MEMORY[0x1F41290C0]();
}

uint64_t sub_1E3E7C9B0()
{
  return MEMORY[0x1F41290D0]();
}

uint64_t sub_1E3E7C9C0()
{
  return MEMORY[0x1F41290D8]();
}

uint64_t sub_1E3E7C9D0()
{
  return MEMORY[0x1F41290E8]();
}

uint64_t sub_1E3E7C9E0()
{
  return MEMORY[0x1F41290F0]();
}

uint64_t sub_1E3E7C9F0()
{
  return MEMORY[0x1F41290F8]();
}

uint64_t sub_1E3E7CA00()
{
  return MEMORY[0x1F4129110]();
}

uint64_t sub_1E3E7CA10()
{
  return MEMORY[0x1F4129120]();
}

uint64_t sub_1E3E7CA20()
{
  return MEMORY[0x1F4129128]();
}

uint64_t sub_1E3E7CA30()
{
  return MEMORY[0x1F4129150]();
}

uint64_t sub_1E3E7CA40()
{
  return MEMORY[0x1F4129158]();
}

uint64_t sub_1E3E7CA50()
{
  return MEMORY[0x1F4129170]();
}

uint64_t sub_1E3E7CA60()
{
  return MEMORY[0x1F4129178]();
}

uint64_t sub_1E3E7CA70()
{
  return MEMORY[0x1F4129180]();
}

uint64_t sub_1E3E7CA80()
{
  return MEMORY[0x1F4129190]();
}

uint64_t sub_1E3E7CA90()
{
  return MEMORY[0x1F4129198]();
}

uint64_t sub_1E3E7CAA0()
{
  return MEMORY[0x1F4129210]();
}

uint64_t sub_1E3E7CAB0()
{
  return MEMORY[0x1F4129220]();
}

uint64_t sub_1E3E7CAC0()
{
  return MEMORY[0x1F4129250]();
}

uint64_t sub_1E3E7CAD0()
{
  return MEMORY[0x1F4129288]();
}

uint64_t sub_1E3E7CAE0()
{
  return MEMORY[0x1F4129290]();
}

uint64_t sub_1E3E7CAF0()
{
  return MEMORY[0x1F4129298]();
}

uint64_t sub_1E3E7CB00()
{
  return MEMORY[0x1F41292A0]();
}

uint64_t sub_1E3E7CB10()
{
  return MEMORY[0x1F41292A8]();
}

uint64_t sub_1E3E7CB20()
{
  return MEMORY[0x1F41292B0]();
}

uint64_t sub_1E3E7CB30()
{
  return MEMORY[0x1F41292B8]();
}

uint64_t sub_1E3E7CB40()
{
  return MEMORY[0x1F41292C0]();
}

uint64_t sub_1E3E7CB50()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1E3E7CB60()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1E3E7CB70()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1E3E7CB90()
{
  return MEMORY[0x1F41458B8]();
}

uint64_t sub_1E3E7CBA0()
{
  return MEMORY[0x1F4183370]();
}

uint64_t sub_1E3E7CBB0()
{
  return MEMORY[0x1F4183398]();
}

uint64_t sub_1E3E7CBC0()
{
  return MEMORY[0x1F4129358]();
}

uint64_t sub_1E3E7CBD0()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1E3E7CBE0()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1E3E7CBF0()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1E3E7CC00()
{
  return MEMORY[0x1F4183520]();
}

uint64_t sub_1E3E7CC10()
{
  return MEMORY[0x1F41835A0]();
}

uint64_t sub_1E3E7CC20()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1E3E7CC30()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1E3E7CC40()
{
  return MEMORY[0x1F41835D0]();
}

uint64_t sub_1E3E7CC50()
{
  return MEMORY[0x1F4188420]();
}

uint64_t sub_1E3E7CC60()
{
  return MEMORY[0x1F4188428]();
}

uint64_t sub_1E3E7CC70()
{
  return MEMORY[0x1F4188430]();
}

uint64_t sub_1E3E7CC80()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1E3E7CC90()
{
  return MEMORY[0x1F4183740]();
}

uint64_t sub_1E3E7CCA0()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1E3E7CCB0()
{
  return MEMORY[0x1F40E60F0]();
}

uint64_t sub_1E3E7CCC0()
{
  return MEMORY[0x1F40E6110]();
}

uint64_t sub_1E3E7CCD0()
{
  return MEMORY[0x1F40E6128]();
}

uint64_t sub_1E3E7CCE0()
{
  return MEMORY[0x1F40E6130]();
}

uint64_t sub_1E3E7CCF0()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1E3E7CD00()
{
  return MEMORY[0x1F40E61A0]();
}

uint64_t sub_1E3E7CD10()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1E3E7CD20()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1E3E7CD30()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1E3E7CD40()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1E3E7CD50()
{
  return MEMORY[0x1F40E6208]();
}

uint64_t sub_1E3E7CD60()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1E3E7CD70()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1E3E7CD80()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1E3E7CD90()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1E3E7CDA0()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_1E3E7CDB0()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1E3E7CDC0()
{
  return MEMORY[0x1F4183908]();
}

uint64_t sub_1E3E7CDD0()
{
  return MEMORY[0x1F41458C0]();
}

uint64_t sub_1E3E7CDE0()
{
  return MEMORY[0x1F41458C8]();
}

uint64_t sub_1E3E7CDF0()
{
  return MEMORY[0x1F41458D0]();
}

uint64_t sub_1E3E7CE00()
{
  return MEMORY[0x1F41458D8]();
}

uint64_t sub_1E3E7CE10()
{
  return MEMORY[0x1F41458E0]();
}

uint64_t sub_1E3E7CE20()
{
  return MEMORY[0x1F41458E8]();
}

uint64_t sub_1E3E7CE30()
{
  return MEMORY[0x1F41458F0]();
}

uint64_t sub_1E3E7CE40()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1E3E7CE50()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1E3E7CE60()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1E3E7CE70()
{
  return MEMORY[0x1F41839F8]();
}

uint64_t sub_1E3E7CE80()
{
  return MEMORY[0x1F4183A08]();
}

uint64_t sub_1E3E7CE90()
{
  return MEMORY[0x1F4183A28]();
}

uint64_t sub_1E3E7CEA0()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1E3E7CEB0()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1E3E7CEC0()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1E3E7CED0()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1E3E7CEE0()
{
  return MEMORY[0x1F4183AA8]();
}

uint64_t sub_1E3E7CEF0()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1E3E7CF00()
{
  return MEMORY[0x1F4183AC8]();
}

uint64_t sub_1E3E7CF10()
{
  return MEMORY[0x1F4183B00]();
}

uint64_t sub_1E3E7CF20()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1E3E7CF30()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1E3E7CF40()
{
  return MEMORY[0x1F4183B38]();
}

uint64_t sub_1E3E7CF50()
{
  return MEMORY[0x1F4183B48]();
}

uint64_t sub_1E3E7CF60()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1E3E7CF70()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1E3E7CF80()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1E3E7CF90()
{
  return MEMORY[0x1F4183BB8]();
}

uint64_t sub_1E3E7CFA0()
{
  return MEMORY[0x1F40D6E68]();
}

uint64_t sub_1E3E7CFB0()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1E3E7CFC0()
{
  return MEMORY[0x1F4183C68]();
}

uint64_t sub_1E3E7CFD0()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_1E3E7CFE0()
{
  return MEMORY[0x1F4183D78]();
}

uint64_t sub_1E3E7CFF0()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1E3E7D030()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1E3E7D040()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1E3E7D050()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1E3E7D060()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1E3E7D070()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1E3E7D080()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1E3E7D090()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1E3E7D0A0()
{
  return MEMORY[0x1F41458F8]();
}

uint64_t sub_1E3E7D0B0()
{
  return MEMORY[0x1F4145900]();
}

uint64_t sub_1E3E7D0C0()
{
  return MEMORY[0x1F4183ED8]();
}

uint64_t sub_1E3E7D0D0()
{
  return MEMORY[0x1F4183EE8]();
}

uint64_t sub_1E3E7D0E0()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1E3E7D0F0()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1E3E7D100()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1E3E7D110()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1E3E7D120()
{
  return MEMORY[0x1F4183FF0]();
}

uint64_t sub_1E3E7D130()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1E3E7D140()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1E3E7D150()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_1E3E7D160()
{
  return MEMORY[0x1F4187C10]();
}

uint64_t sub_1E3E7D170()
{
  return MEMORY[0x1F4187C18]();
}

uint64_t sub_1E3E7D190()
{
  return MEMORY[0x1F4187C98]();
}

uint64_t sub_1E3E7D1A0()
{
  return MEMORY[0x1F4187CA0]();
}

uint64_t sub_1E3E7D1B0()
{
  return MEMORY[0x1F4187CB0]();
}

uint64_t sub_1E3E7D1C0()
{
  return MEMORY[0x1F4187CE8]();
}

uint64_t sub_1E3E7D1D0()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1E3E7D1E0()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1E3E7D1F0()
{
  return MEMORY[0x1F4187D38]();
}

uint64_t sub_1E3E7D200()
{
  return MEMORY[0x1F4187D50]();
}

uint64_t sub_1E3E7D220()
{
  return MEMORY[0x1F4187D78]();
}

uint64_t sub_1E3E7D240()
{
  return MEMORY[0x1F4187D98]();
}

uint64_t sub_1E3E7D250()
{
  return MEMORY[0x1F4187DC8]();
}

uint64_t sub_1E3E7D260()
{
  return MEMORY[0x1F4187DD0]();
}

uint64_t sub_1E3E7D270()
{
  return MEMORY[0x1F4187DD8]();
}

uint64_t sub_1E3E7D2A0()
{
  return MEMORY[0x1F4187E68]();
}

uint64_t sub_1E3E7D2C0()
{
  return MEMORY[0x1F4184008]();
}

uint64_t sub_1E3E7D2D0()
{
  return MEMORY[0x1F4184018]();
}

uint64_t sub_1E3E7D2E0()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_1E3E7D2F0()
{
  return MEMORY[0x1F4184080]();
}

uint64_t sub_1E3E7D300()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_1E3E7D310()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_1E3E7D320()
{
  return MEMORY[0x1F4184100]();
}

uint64_t sub_1E3E7D330()
{
  return MEMORY[0x1F4184110]();
}

uint64_t sub_1E3E7D340()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1E3E7D350()
{
  return MEMORY[0x1F4145910]();
}

uint64_t sub_1E3E7D360()
{
  return MEMORY[0x1F41841C0]();
}

uint64_t sub_1E3E7D370()
{
  return MEMORY[0x1F4184230]();
}

uint64_t sub_1E3E7D380()
{
  return MEMORY[0x1F4184250]();
}

uint64_t sub_1E3E7D390()
{
  return MEMORY[0x1F4184278]();
}

uint64_t sub_1E3E7D3A0()
{
  return MEMORY[0x1F41842C0]();
}

uint64_t sub_1E3E7D3B0()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1E3E7D3C0()
{
  return MEMORY[0x1F4145918]();
}

uint64_t sub_1E3E7D3E0()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1E3E7D3F0()
{
  return MEMORY[0x1F4184330]();
}

uint64_t sub_1E3E7D400()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1E3E7D410()
{
  return MEMORY[0x1F4184398]();
}

uint64_t sub_1E3E7D420()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1E3E7D430()
{
  return MEMORY[0x1F4188478]();
}

uint64_t sub_1E3E7D440()
{
  return MEMORY[0x1F4129388]();
}

uint64_t sub_1E3E7D450()
{
  return MEMORY[0x1F40E6508]();
}

uint64_t sub_1E3E7D460()
{
  return MEMORY[0x1F40D96C0]();
}

uint64_t sub_1E3E7D470()
{
  return MEMORY[0x1F40E6538]();
}

uint64_t sub_1E3E7D480()
{
  return MEMORY[0x1F40E6560]();
}

uint64_t sub_1E3E7D490()
{
  return MEMORY[0x1F40E65D0]();
}

uint64_t sub_1E3E7D4B0()
{
  return MEMORY[0x1F40E6628]();
}

uint64_t sub_1E3E7D4C0()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1E3E7D4D0()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1E3E7D4E0()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1E3E7D4F0()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1E3E7D500()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1E3E7D510()
{
  return MEMORY[0x1F4145928]();
}

uint64_t sub_1E3E7D520()
{
  return MEMORY[0x1F4145930]();
}

uint64_t sub_1E3E7D530()
{
  return MEMORY[0x1F4145938]();
}

uint64_t sub_1E3E7D540()
{
  return MEMORY[0x1F4145940]();
}

uint64_t sub_1E3E7D550()
{
  return MEMORY[0x1F4145948]();
}

uint64_t sub_1E3E7D560()
{
  return MEMORY[0x1F4145950]();
}

uint64_t sub_1E3E7D580()
{
  return MEMORY[0x1F4145960]();
}

uint64_t sub_1E3E7D590()
{
  return MEMORY[0x1F4145968]();
}

uint64_t sub_1E3E7D5A0()
{
  return MEMORY[0x1F4145970]();
}

uint64_t sub_1E3E7D5B0()
{
  return MEMORY[0x1F4145978]();
}

uint64_t sub_1E3E7D5C0()
{
  return MEMORY[0x1F4145980]();
}

uint64_t sub_1E3E7D5D0()
{
  return MEMORY[0x1F4145988]();
}

uint64_t sub_1E3E7D5E0()
{
  return MEMORY[0x1F4145990]();
}

uint64_t sub_1E3E7D5F0()
{
  return MEMORY[0x1F4145998]();
}

uint64_t sub_1E3E7D600()
{
  return MEMORY[0x1F41459A0]();
}

uint64_t sub_1E3E7D610()
{
  return MEMORY[0x1F4186FC0]();
}

uint64_t sub_1E3E7D620()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1E3E7D630()
{
  return MEMORY[0x1F4186FF0]();
}

uint64_t sub_1E3E7D640()
{
  return MEMORY[0x1F4187040]();
}

uint64_t sub_1E3E7D650()
{
  return MEMORY[0x1F4187058]();
}

uint64_t sub_1E3E7D660()
{
  return MEMORY[0x1F4187070]();
}

uint64_t sub_1E3E7D670()
{
  return MEMORY[0x1F4187078]();
}

uint64_t sub_1E3E7D680()
{
  return MEMORY[0x1F4187088]();
}

uint64_t sub_1E3E7D690()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1E3E7D6A0()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1E3E7D6B0()
{
  return MEMORY[0x1F41870C0]();
}

uint64_t sub_1E3E7D6C0()
{
  return MEMORY[0x1F41870D8]();
}

uint64_t sub_1E3E7D6D0()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1E3E7D6E0()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1E3E7D6F0()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1E3E7D700()
{
  return MEMORY[0x1F4187130]();
}

uint64_t sub_1E3E7D710()
{
  return MEMORY[0x1F4187168]();
}

uint64_t sub_1E3E7D720()
{
  return MEMORY[0x1F41871D0]();
}

uint64_t sub_1E3E7D730()
{
  return MEMORY[0x1F4187218]();
}

uint64_t sub_1E3E7D740()
{
  return MEMORY[0x1F4187230]();
}

uint64_t sub_1E3E7D750()
{
  return MEMORY[0x1F4188708]();
}

uint64_t sub_1E3E7D760()
{
  return MEMORY[0x1F4188710]();
}

uint64_t sub_1E3E7D770()
{
  return MEMORY[0x1F40E6780]();
}

uint64_t sub_1E3E7D780()
{
  return MEMORY[0x1F40E6798]();
}

uint64_t sub_1E3E7D790()
{
  return MEMORY[0x1F40E67A0]();
}

uint64_t sub_1E3E7D7D0()
{
  return MEMORY[0x1F41459C0]();
}

uint64_t sub_1E3E7D7E0()
{
  return MEMORY[0x1F41459C8]();
}

uint64_t sub_1E3E7D7F0()
{
  return MEMORY[0x1F41459D0]();
}

uint64_t sub_1E3E7D800()
{
  return MEMORY[0x1F41459D8]();
}

uint64_t sub_1E3E7D820()
{
  return MEMORY[0x1F41459E8]();
}

uint64_t sub_1E3E7D840()
{
  return MEMORY[0x1F41459F8]();
}

uint64_t sub_1E3E7D850()
{
  return MEMORY[0x1F4145A00]();
}

uint64_t sub_1E3E7D860()
{
  return MEMORY[0x1F4145A08]();
}

uint64_t sub_1E3E7D870()
{
  return MEMORY[0x1F4145A10]();
}

uint64_t sub_1E3E7D880()
{
  return MEMORY[0x1F4145A18]();
}

uint64_t sub_1E3E7D890()
{
  return MEMORY[0x1F4166698]();
}

uint64_t sub_1E3E7D8A0()
{
  return MEMORY[0x1F4145A20]();
}

uint64_t sub_1E3E7D8B0()
{
  return MEMORY[0x1F4145A28]();
}

uint64_t sub_1E3E7D8C0()
{
  return MEMORY[0x1F4145A30]();
}

uint64_t sub_1E3E7D8D0()
{
  return MEMORY[0x1F4145A38]();
}

uint64_t sub_1E3E7D8E0()
{
  return MEMORY[0x1F40D7068]();
}

uint64_t sub_1E3E7D8F0()
{
  return MEMORY[0x1F40D7070]();
}

uint64_t sub_1E3E7D900()
{
  return MEMORY[0x1F40D7078]();
}

uint64_t sub_1E3E7D920()
{
  return MEMORY[0x1F41872D0]();
}

uint64_t sub_1E3E7D950()
{
  return MEMORY[0x1F412C980]();
}

uint64_t sub_1E3E7D960()
{
  return MEMORY[0x1F40D9730]();
}

uint64_t sub_1E3E7D970()
{
  return MEMORY[0x1F4145A48]();
}

uint64_t sub_1E3E7D980()
{
  return MEMORY[0x1F4186B58]();
}

uint64_t sub_1E3E7D990()
{
  return MEMORY[0x1F41667D8]();
}

uint64_t sub_1E3E7D9A0()
{
  return MEMORY[0x1F41293B8]();
}

uint64_t sub_1E3E7D9B0()
{
  return MEMORY[0x1F41293C0]();
}

uint64_t sub_1E3E7D9C0()
{
  return MEMORY[0x1F41293D0]();
}

uint64_t sub_1E3E7D9D0()
{
  return MEMORY[0x1F41293D8]();
}

uint64_t sub_1E3E7D9E0()
{
  return MEMORY[0x1F41293E0]();
}

uint64_t sub_1E3E7D9F0()
{
  return MEMORY[0x1F40E6840]();
}

uint64_t sub_1E3E7DA00()
{
  return MEMORY[0x1F40E68C8]();
}

uint64_t sub_1E3E7DA10()
{
  return MEMORY[0x1F40E68D8]();
}

uint64_t sub_1E3E7DA20()
{
  return MEMORY[0x1F4166820]();
}

uint64_t sub_1E3E7DA30()
{
  return MEMORY[0x1F4129400]();
}

uint64_t sub_1E3E7DA40()
{
  return MEMORY[0x1F4145A50]();
}

uint64_t sub_1E3E7DA50()
{
  return MEMORY[0x1F4129408]();
}

uint64_t sub_1E3E7DA60()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_1E3E7DA70()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_1E3E7DA80()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1E3E7DA90()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_1E3E7DAA0()
{
  return MEMORY[0x1F40E6948]();
}

uint64_t sub_1E3E7DAB0()
{
  return MEMORY[0x1F40E6978]();
}

uint64_t sub_1E3E7DAC0()
{
  return MEMORY[0x1F4129410]();
}

uint64_t sub_1E3E7DAD0()
{
  return MEMORY[0x1F4129418]();
}

uint64_t sub_1E3E7DAE0()
{
  return MEMORY[0x1F4145A58]();
}

uint64_t sub_1E3E7DAF0()
{
  return MEMORY[0x1F4145A60]();
}

uint64_t sub_1E3E7DB00()
{
  return MEMORY[0x1F4145A68]();
}

uint64_t sub_1E3E7DB10()
{
  return MEMORY[0x1F4145A70]();
}

uint64_t sub_1E3E7DB20()
{
  return MEMORY[0x1F4145A78]();
}

uint64_t sub_1E3E7DB30()
{
  return MEMORY[0x1F4145A80]();
}

uint64_t sub_1E3E7DB40()
{
  return MEMORY[0x1F40E6A98]();
}

uint64_t sub_1E3E7DB50()
{
  return MEMORY[0x1F4188720]();
}

uint64_t sub_1E3E7DB60()
{
  return MEMORY[0x1F4188738]();
}

uint64_t sub_1E3E7DB70()
{
  return MEMORY[0x1F4145A88]();
}

uint64_t sub_1E3E7DB80()
{
  return MEMORY[0x1F4145A90]();
}

uint64_t sub_1E3E7DB90()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1E3E7DBA0()
{
  return MEMORY[0x1F41846D8]();
}

uint64_t sub_1E3E7DBB0()
{
  return MEMORY[0x1F4184798]();
}

uint64_t sub_1E3E7DBC0()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1E3E7DBD0()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1E3E7DBE0()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1E3E7DBF0()
{
  return MEMORY[0x1F40E6BA8]();
}

uint64_t sub_1E3E7DC00()
{
  return MEMORY[0x1F40E6C18]();
}

uint64_t sub_1E3E7DC10()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_1E3E7DC20()
{
  return MEMORY[0x1F40E6C80]();
}

uint64_t sub_1E3E7DC30()
{
  return MEMORY[0x1F40E6CF0]();
}

uint64_t sub_1E3E7DC40()
{
  return MEMORY[0x1F40E6D10]();
}

uint64_t sub_1E3E7DC50()
{
  return MEMORY[0x1F40E6D28]();
}

uint64_t sub_1E3E7DC60()
{
  return MEMORY[0x1F40E6D38]();
}

uint64_t sub_1E3E7DC70()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_1E3E7DC80()
{
  return MEMORY[0x1F41876A8]();
}

uint64_t sub_1E3E7DC90()
{
  return MEMORY[0x1F4184958]();
}

uint64_t sub_1E3E7DCA0()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1E3E7DCC0()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1E3E7DCD0()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1E3E7DCE0()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1E3E7DCF0()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_1E3E7DD00()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_1E3E7DD10()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_1E3E7DD20()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_1E3E7DD30()
{
  return MEMORY[0x1F4184BC8]();
}

uint64_t sub_1E3E7DD40()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1E3E7DD50()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_1E3E7DD60()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_1E3E7DD70()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1E3E7DD80()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1E3E7DD90()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_1E3E7DDA0()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1E3E7DDC0()
{
  return MEMORY[0x1F4184CE0]();
}

uint64_t sub_1E3E7DDD0()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1E3E7DDE0()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1E3E7DDF0()
{
  return MEMORY[0x1F4184D00]();
}

uint64_t sub_1E3E7DE00()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1E3E7DE10()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1E3E7DE20()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1E3E7DE30()
{
  return MEMORY[0x1F4184E28]();
}

uint64_t sub_1E3E7DE40()
{
  return MEMORY[0x1F4184E38]();
}

uint64_t sub_1E3E7DE50()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1E3E7DE60()
{
  return MEMORY[0x1F4184E70]();
}

uint64_t sub_1E3E7DE70()
{
  return MEMORY[0x1F4184EA8]();
}

uint64_t sub_1E3E7DE80()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1E3E7DE90()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1E3E7DEA0()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1E3E7DEB0()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1E3E7DEC0()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1E3E7DED0()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1E3E7DEE0()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1E3E7DEF0()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1E3E7DF00()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1E3E7DF10()
{
  return MEMORY[0x1F4185048]();
}

uint64_t sub_1E3E7DF20()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1E3E7DF30()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_1E3E7DF40()
{
  return MEMORY[0x1F4185238]();
}

uint64_t sub_1E3E7DF50()
{
  return MEMORY[0x1F4185260]();
}

uint64_t sub_1E3E7DF60()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_1E3E7DF70()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1E3E7DF80()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1E3E7DF90()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t sub_1E3E7DFA0()
{
  return MEMORY[0x1F41852C0]();
}

uint64_t sub_1E3E7DFB0()
{
  return MEMORY[0x1F41852C8]();
}

uint64_t sub_1E3E7DFC0()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1E3E7DFD0()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1E3E7DFE0()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1E3E7DFF0()
{
  return MEMORY[0x1F4185378]();
}

uint64_t sub_1E3E7E000()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1E3E7E010()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1E3E7E020()
{
  return MEMORY[0x1F41853A8]();
}

uint64_t sub_1E3E7E040()
{
  return MEMORY[0x1F41854B8]();
}

uint64_t sub_1E3E7E050()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1E3E7E060()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1E3E7E070()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1E3E7E080()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1E3E7E090()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_1E3E7E0A0()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1E3E7E0B0()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1E3E7E0C0()
{
  return MEMORY[0x1F4185730]();
}

uint64_t sub_1E3E7E0D0()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1E3E7E0E0()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1E3E7E0F0()
{
  return MEMORY[0x1F41859A8]();
}

uint64_t sub_1E3E7E100()
{
  return MEMORY[0x1F41859C8]();
}

uint64_t sub_1E3E7E110()
{
  return MEMORY[0x1F41859E8]();
}

uint64_t sub_1E3E7E120()
{
  return MEMORY[0x1F41859F0]();
}

uint64_t sub_1E3E7E130()
{
  return MEMORY[0x1F4185A20]();
}

uint64_t sub_1E3E7E140()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1E3E7E150()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1E3E7E160()
{
  return MEMORY[0x1F4185A58]();
}

uint64_t sub_1E3E7E170()
{
  return MEMORY[0x1F4185AF0]();
}

uint64_t sub_1E3E7E180()
{
  return MEMORY[0x1F4185B20]();
}

uint64_t sub_1E3E7E190()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t sub_1E3E7E1C0()
{
  return MEMORY[0x1F4185D40]();
}

uint64_t sub_1E3E7E1D0()
{
  return MEMORY[0x1F4185D58]();
}

uint64_t sub_1E3E7E1E0()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_1E3E7E1F0()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1E3E7E200()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1E3E7E210()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_1E3E7E220()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1E3E7E230()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1E3E7E240()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1E3E7E250()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1E3E7E260()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1E3E7E270()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1E3E7E280()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1E3E7E290()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1E3E7E2A0()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1E3E7E2B0()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1E3E7E2C0()
{
  return MEMORY[0x1F4185F68]();
}

uint64_t sub_1E3E7E2D0()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t sub_1E3E7E2E0()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1E3E7E2F0()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_1E3E7E300()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1E3E7E330()
{
  return MEMORY[0x1F4186318]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  MEMORY[0x1F40F4A90]();
  return result;
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1F40F4D20](retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1F40F4D30](retstr, tx, ty, tz);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1F40C9770](data, *(void *)&len, md);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1F40D7190](allocator, capacity, callBacks);
}

CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray)
{
  return (CFMutableArrayRef)MEMORY[0x1F40D7198](allocator, capacity, theArray);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x1F40D71D8]();
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1F40D7420]();
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableDataRef)MEMORY[0x1F40D7808](allocator, capacity);
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x1F40D7938]();
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1F40D7A00]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1F40D7A10](theDict, key);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D08]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1F40D7E10]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1F40D7E20](number, theType, valuePtr);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1F40D7E90](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7EA0](key, applicationID);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

const char *__cdecl CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding)
{
  return (const char *)MEMORY[0x1F40D8520](theString, *(void *)&encoding);
}

void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer)
{
}

const UniChar *__cdecl CFStringGetCharactersPtr(CFStringRef theString)
{
  return (const UniChar *)MEMORY[0x1F40D8540](theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1F40D85F0]();
}

CFStringRef CFStringTokenizerCopyBestStringLanguage(CFStringRef string, CFRange range)
{
  return (CFStringRef)MEMORY[0x1F40D8688](string, range.location, range.length);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97D0](retstr, sx, sy);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1F40D9808](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1F40D9818](context);
}

void *__cdecl CGBitmapContextGetData(CGContextRef context)
{
  return (void *)MEMORY[0x1F40D9868](context);
}

size_t CGBitmapContextGetHeight(CGContextRef context)
{
  return MEMORY[0x1F40D9870](context);
}

size_t CGBitmapContextGetWidth(CGContextRef context)
{
  return MEMORY[0x1F40D9878](context);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1F40D9A00](color);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x1F40D9A18](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

void CGContextAddLineToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextClipToMask(CGContextRef c, CGRect rect, CGImageRef mask)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextFillPath(CGContextRef c)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextMoveToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
}

void CGContextSetLineDash(CGContextRef c, CGFloat phase, const CGFloat *lengths, size_t count)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetRGBFillColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGGradientRef CGGradientCreateWithColorComponents(CGColorSpaceRef space, const CGFloat *components, const CGFloat *locations, size_t count)
{
  return (CGGradientRef)MEMORY[0x1F40DA768](space, components, locations, count);
}

void CGGradientRelease(CGGradientRef gradient)
{
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1F40DA890](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

void CGImageDestinationAddImageFromSource(CGImageDestinationRef idst, CGImageSourceRef isrc, size_t index, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1F40E9738](data, type, count, options);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1F40E9758](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1F40E9760](idst);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return MEMORY[0x1F40DA8F0](image);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return (CGDataProviderRef)MEMORY[0x1F40DA920](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1F40DA948](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1F40DA9B8](image);
}

void CGImageRelease(CGImageRef image)
{
}

CGImageRef CGImageRetain(CGImageRef image)
{
  return (CGImageRef)MEMORY[0x1F40DAA98](image);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x1F40E9938](isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1F40E9968](isrc, index, options);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1F40E9988](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1F40E9998](data, options);
}

CGImageSourceRef CGImageSourceCreateWithDataProvider(CGDataProviderRef provider, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1F40E99A8](provider, options);
}

uint64_t CGImageSourceCreateWithFile()
{
  return MEMORY[0x1F40E99B0]();
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1F40E99C8](url, options);
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return MEMORY[0x1F40E99F8](isrc);
}

CGImageSourceStatus CGImageSourceGetStatus(CGImageSourceRef isrc)
{
  return MEMORY[0x1F40E9A08](isrc);
}

CFStringRef CGImageSourceGetType(CGImageSourceRef isrc)
{
  return (CFStringRef)MEMORY[0x1F40E9A18](isrc);
}

void CGPathAddArcToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
{
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1F40DB068]();
}

CGPathRef CGPathCreateWithRoundedRect(CGRect rect, CGFloat cornerWidth, CGFloat cornerHeight, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x1F40DB0B0](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, cornerWidth, cornerHeight);
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x1F40DB228]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x1F40DB268]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x1F40DB270]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x1F40DB280]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x1F40DB288]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x1F40DB298]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x1F40DB2A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2B8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  MEMORY[0x1F40DB2C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

BOOL CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return MEMORY[0x1F40DB4D8]((__n128)size1, *(__n128 *)&size1.height, (__n128)size2, *(__n128 *)&size2.height);
}

CMTime *__cdecl CMTimeAdd(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x1F40DC088](retstr, lhs, rhs);
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x1F40DC0C8](time1, time2);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  MEMORY[0x1F40DC100](time);
  return result;
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return (CMTime *)MEMORY[0x1F40DC120](retstr, *(void *)&preferredTimescale, seconds);
}

CFStringRef CMTimeRangeCopyDescription(CFAllocatorRef allocator, CMTimeRange *range)
{
  return (CFStringRef)MEMORY[0x1F40DC1A8](allocator, range);
}

CMTime *__cdecl CMTimeRangeGetEnd(CMTime *__return_ptr retstr, CMTimeRange *range)
{
  return (CMTime *)MEMORY[0x1F40DC1C0](retstr, range);
}

CMTimeRange *__cdecl CMTimeRangeMake(CMTimeRange *__return_ptr retstr, CMTime *start, CMTime *duration)
{
  return (CMTimeRange *)MEMORY[0x1F40DC1D8](retstr, start, duration);
}

CMTime *__cdecl CMTimeSubtract(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x1F40DC1F0](retstr, lhs, rhs);
}

uint64_t IMAccessibilityLocalizedNumber()
{
  return MEMORY[0x1F4145A98]();
}

uint64_t JECountFormatterMakeStringFromNumber()
{
  return MEMORY[0x1F4129428]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1F417CDE0]();
}

uint64_t MGGetProductType()
{
  return MEMORY[0x1F417CE18]();
}

uint64_t MRMediaRemoteCopyLocalDeviceSystemPodcastApplicationDisplayID()
{
  return MEMORY[0x1F412E528]();
}

uint64_t MTPodcastHidesPlayedEpisodesResolved()
{
  return MEMORY[0x1F4145AA0]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

void NSLog(NSString *format, ...)
{
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1F40E7248](directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1F40E7258](aSelectorName);
}

NSString *__cdecl NSStringFromCGSize(CGSize size)
{
  return (NSString *)MEMORY[0x1F4166AB0]((__n128)size, *(__n128 *)&size.height);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

CGRect UIAccessibilityConvertFrameToScreenCoordinates(CGRect rect, UIView *view)
{
  MEMORY[0x1F4166AE0](view, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL UIAccessibilityDarkerSystemColorsEnabled(void)
{
  return MEMORY[0x1F4166AF0]();
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1F4166C48]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x1F4166C50]();
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

NSData *__cdecl UIImageHEICRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1F4166CB0](image);
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return (NSData *)MEMORY[0x1F4166CB8](image, compressionQuality);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1F4166CC0](image);
}

void UIImageWriteToSavedPhotosAlbum(UIImage *image, id completionTarget, SEL completionSelector, void *contextInfo)
{
}

uint64_t UIRectCenteredXInRectScale()
{
  return MEMORY[0x1F4166E38]();
}

uint64_t UIRectCenteredYInRectScale()
{
  return MEMORY[0x1F4166E48]();
}

void UIRectFill(CGRect rect)
{
}

void UIRectFillUsingBlendMode(CGRect rect, CGBlendMode blendMode)
{
}

uint64_t UIRectGetCenter()
{
  return MEMORY[0x1F4166E80]();
}

uint64_t UISColorLuminance()
{
  return MEMORY[0x1F4167148]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _MTLogCategoryArtworkDownload()
{
  return MEMORY[0x1F4145AA8]();
}

uint64_t _MTLogCategoryDefault()
{
  return MEMORY[0x1F4145AB0]();
}

uint64_t _MTLogCategoryDownload()
{
  return MEMORY[0x1F4145AB8]();
}

uint64_t _MTLogCategoryNetwork()
{
  return MEMORY[0x1F4145AC0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return (const std::locale::facet *)MEMORY[0x1F417E408](this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return (std::locale)MEMORY[0x1F417E418](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1F417E448](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1F417E530](this);
}

uint64_t std::ostream::sentry::sentry()
{
  return MEMORY[0x1F417E848]();
}

uint64_t std::ostream::sentry::~sentry()
{
  return MEMORY[0x1F417E850]();
}

uint64_t std::ostream::~ostream()
{
  return MEMORY[0x1F417E860]();
}

uint64_t std::ostream::operator<<()
{
  return MEMORY[0x1F417E880]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x1F417E978]();
}

uint64_t std::streambuf::~streambuf()
{
  return MEMORY[0x1F417E980]();
}

void std::locale::~locale(std::locale *this)
{
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x1F417EE40]();
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1F417EF30](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1F417EF48](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

__double2 __sincos_stret(double a1)
{
  MEMORY[0x1F40C9C80](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1F4186340]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1F40CA1E8]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1F40CA3A8]();
}

void bzero(void *a1, size_t a2)
{
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return MEMORY[0x1F41814C8](cls, name, imp, types);
}

Method *__cdecl class_copyMethodList(Class cls, unsigned int *outCount)
{
  return (Method *)MEMORY[0x1F41814F8](cls, outCount);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1F4181528](cls, name);
}

Class class_getSuperclass(Class cls)
{
  return (Class)MEMORY[0x1F4181558](cls);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1F40CB9C8](flags, *(void *)&qos_class, *(void *)&relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBB8](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1F40CBDB0]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x1F40CC1A0](__x, __y);
  return result;
}

void free(void *a1)
{
}

IMP imp_implementationWithBlock(id block)
{
  return (IMP)MEMORY[0x1F4181598](block);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1F40CC700]();
}

uint64_t lrintf(float a1)
{
  return MEMORY[0x1F40CC8E0](a1);
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1F40CC910]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD20](__b, *(void *)&__c, __len);
}

char *__cdecl method_copyArgumentType(Method m, unsigned int index)
{
  return (char *)MEMORY[0x1F41815D0](m, *(void *)&index);
}

IMP method_getImplementation(Method m)
{
  return (IMP)MEMORY[0x1F41815F8](m);
}

SEL method_getName(Method m)
{
  return (SEL)MEMORY[0x1F4181600](m);
}

unsigned int method_getNumberOfArguments(Method m)
{
  return MEMORY[0x1F4181608](m);
}

const char *__cdecl method_getTypeEncoding(Method m)
{
  return (const char *)MEMORY[0x1F4181618](m);
}

IMP method_setImplementation(Method m, IMP imp)
{
  return (IMP)MEMORY[0x1F4181628](m, imp);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1F4181718](object, key);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

void objc_moveWeak(id *to, id *from)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x1F4181A58](a1);
}

uint64_t os_feature_enabled_bluemoon()
{
  return MEMORY[0x1F4145AC8]();
}

uint64_t os_feature_enabled_red_sun()
{
  return MEMORY[0x1F4145AD0]();
}

uint64_t os_feature_enabled_serial_sort_auto_downloads()
{
  return MEMORY[0x1F4145AD8]();
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1F40CD5A0]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

long double pow(long double __x, long double __y)
{
  MEMORY[0x1F40CD818](__x, __y);
  return result;
}

int printf(const char *a1, ...)
{
  return MEMORY[0x1F40CD838](a1);
}

int setenv(const char *__name, const char *__value, int __overwrite)
{
  return MEMORY[0x1F40CDF60](__name, __value, *(void *)&__overwrite);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1F40CE1F0](__s1, __s2, __n);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x1F41881C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1F4186498]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1F41864E8]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1F41864F0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1F4186620]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1F4186638]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1F4186640]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x1F4186848]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x1F4186850]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x1F4186870]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x1F4186878]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1F41868A0]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1F40CE3D0](a1, a2, a3, a4, a5);
}

UCharDirection u_charDirection(UChar32 c)
{
  return MEMORY[0x1F417F700](*(void *)&c);
}

int uname(utsname *a1)
{
  return MEMORY[0x1F40CE5C8](a1);
}