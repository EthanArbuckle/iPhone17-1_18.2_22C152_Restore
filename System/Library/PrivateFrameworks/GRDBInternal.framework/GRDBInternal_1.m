void static ResultCode.SQLITE_IOERR_LOCK.getter(_DWORD *a1@<X8>)
{
  sub_24F77F4A0(a1);
}

void static ResultCode.SQLITE_IOERR_CLOSE.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_DIR_CLOSE.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_SHMOPEN.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_SHMSIZE.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_SHMLOCK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_SHMMAP.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_SEEK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_DELETE_NOENT.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_MMAP.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_GETTEMPPATH.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_CONVPATH.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_VNODE.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_AUTH.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_BEGIN_ATOMIC.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_COMMIT_ATOMIC.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_ROLLBACK_ATOMIC.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_DATA.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_IOERR_CORRUPTFS.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_LOCKED_SHAREDCACHE.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_LOCKED_VTAB.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_BUSY_RECOVERY.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_BUSY_SNAPSHOT.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_BUSY_TIMEOUT.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CANTOPEN_NOTEMPDIR.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CANTOPEN_ISDIR.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CANTOPEN_FULLPATH.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CANTOPEN_CONVPATH.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CANTOPEN_DIRTYWAL.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CANTOPEN_SYMLINK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CORRUPT_VTAB.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CORRUPT_SEQUENCE.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CORRUPT_INDEX.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_READONLY_RECOVERY.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_READONLY_CANTLOCK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_READONLY_ROLLBACK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_READONLY_DBMOVED.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_READONLY_CANTINIT.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_READONLY_DIRECTORY.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_ABORT_ROLLBACK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_CHECK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_COMMITHOOK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_FOREIGNKEY.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_FUNCTION.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_NOTNULL.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_PRIMARYKEY.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_TRIGGER.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_UNIQUE.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_VTAB.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_ROWID.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_PINNED.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_CONSTRAINT_DATATYPE.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_NOTICE_RECOVER_WAL.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_NOTICE_RECOVER_ROLLBACK.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_WARNING_AUTOINDEX.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_AUTH_USER.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_OK_LOAD_PERMANENTLY.getter(_DWORD *a1@<X8>)
{
}

void static ResultCode.SQLITE_OK_SYMLINK.getter(_DWORD *a1@<X8>)
{
}

uint64_t sub_24F7DADF4@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = ResultCode.init(rawValue:)(*a1, (_DWORD *)a2);
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_24F7DAE20@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = ResultCode.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_24F7DAE48(int *a1, int *a2)
{
  return sub_24F7DA664(*a1, *a2);
}

const char *ResultCode.description.getter()
{
  uint64_t result = sqlite3_errstr(*v0);
  if (result)
  {
    sub_24F8CEED0();
    uint64_t v2 = sub_24F8CFAE0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    return (const char *)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static ResultCode.~= infix(_:_:)(unsigned int *a1, id a2)
{
  unsigned int v2 = *a1;
  id v3 = a2;
  sub_24F781274(&qword_26B1F7040);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F77835C(v6);
    if (v2 <= 0xFF) {
      return v2 == v5;
    }
    else {
      return v2 == v5;
    }
  }
  return result;
}

void DatabaseError.resultCode.getter(_DWORD *a1@<X8>)
{
}

void DatabaseError.extendedResultCode.getter(_DWORD *a1@<X8>)
{
}

uint64_t DatabaseError.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatabaseError.sql.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatabaseError.arguments.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  *a1 = v2;
  a1[1] = v3;
  return sub_24F777E70(v2);
}

void DatabaseError.init(resultCode:message:sql:arguments:publicStatementArguments:)()
{
  sub_24F77BFF4();
  __n128 v4 = *v3;
  if (v2) {
    goto LABEL_4;
  }
  __n128 v5 = *v3;
  if (sqlite3_errstr(*v0))
  {
    uint64_t v0 = (int *)sub_24F8CEED0();
    uint64_t v2 = v1;
    __n128 v4 = v5;
LABEL_4:
    sub_24F782A78(v4, (uint64_t)v0, v1, v2);
    return;
  }
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 v4;
  __n128 v5;

  sub_24F77BFF4();
  __n128 v4 = *v3;
  if (v2) {
    goto LABEL_4;
  }
  __n128 v5 = *v3;
  if (sqlite3_errstr(v0))
  {
    uint64_t v0 = sub_24F8CEED0();
    uint64_t v2 = v1;
    __n128 v4 = v5;
LABEL_4:
    sub_24F782A78(v4, v0, v1, v2);
    return;
  }
  __break(1u);
}

uint64_t DatabaseError.init(resultCode:message:sql:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v9 = result;
  if (a3) {
    goto LABEL_4;
  }
  uint64_t result = (uint64_t)sqlite3_errstr(result);
  if (result)
  {
    uint64_t result = sub_24F8CEED0();
    a2 = result;
    a3 = v11;
LABEL_4:
    *(_DWORD *)a6 = v9;
    *(void *)(a6 + 8) = a2;
    *(void *)(a6 + 16) = a3;
    *(void *)(a6 + 24) = a4;
    *(void *)(a6 + 32) = a5;
    *(void *)(a6 + 40) = 0;
    *(void *)(a6 + 48) = 0;
    *(unsigned char *)(a6 + 56) = 0;
    return result;
  }
  __break(1u);
  return result;
}

double sub_24F7DB178@<D0>(uint64_t a1@<X8>)
{
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  *(_DWORD *)a1 = 1;
  *(void *)(a1 + 8) = 0x2068637573206F6ELL;
  *(void *)(a1 + 16) = 0xEF203A656C626174;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_24F7DB220(uint64_t a1)
{
  unint64_t v2 = sub_24F7DCAA4();
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24F7DB25C(uint64_t a1)
{
  unint64_t v2 = sub_24F7DCAA4();
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t DatabaseError.description.getter()
{
  sub_24F77B8E4();
  int v5 = *(unsigned __int8 *)(v0 + 56);
  sub_24F77DED4();
  sub_24F8CFAE0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  if (v2)
  {
    sub_24F77C698();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
  }
  if (v1)
  {
    sub_24F785858();
    swift_bridgeObjectRelease();
    sub_24F775BB0();
    sub_24F8CEEB0();
    sub_24F77BC88();
    swift_bridgeObjectRelease();
  }
  if (v3) {
    int v6 = v5;
  }
  else {
    int v6 = 0;
  }
  if (v6 == 1 && (*(void *)(v3 + 16) || *(void *)(v4 + 16)))
  {
    sub_24F773668();
    swift_bridgeObjectRelease();
    sub_24F77DA88();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F77BC88();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_24F7DB3E0()
{
  return 0xD000000000000012;
}

unint64_t static DatabaseError.errorDomain.getter()
{
  return 0xD000000000000012;
}

uint64_t DatabaseError.errorCode.getter()
{
  return *v0;
}

unint64_t DatabaseError.errorUserInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_24F781274(&qword_26B1F55B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
  *(void *)(inited + 32) = sub_24F8CED80();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = DatabaseError.description.getter();
  *(void *)(inited + 56) = v5;
  uint64_t v6 = sub_24F8CEC70();
  if (v2)
  {
    uint64_t v7 = sub_24F8CED80();
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    sub_24F7DC5CC(v1, v2, v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v10 = sub_24F7DB9AC(v6);
  swift_bridgeObjectRelease();
  return v10;
}

BOOL DatabaseError.isInterruptionError.getter()
{
  int v1 = *v0;
  return v1 == 4 || v1 == 9;
}

uint64_t DatabaseError.expandedDescription.getter()
{
  sub_24F77B8E4();
  sub_24F77DED4();
  sub_24F8CFAE0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_24F77C698();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
  }
  if (v0)
  {
    sub_24F785858();
    swift_bridgeObjectRelease();
    sub_24F775BB0();
    sub_24F8CEEB0();
    sub_24F77BC88();
    swift_bridgeObjectRelease();
  }
  if (v2 && (*(void *)(v2 + 16) || *(void *)(v3 + 16)))
  {
    sub_24F773668();
    swift_bridgeObjectRelease();
    sub_24F77DA88();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F77BC88();
    swift_bridgeObjectRelease();
  }
  return v5;
}

void sub_24F7DB6B4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_24F781274(&qword_269A2AF00);
    uint64_t v2 = (void *)sub_24F8CFA10();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v52 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v51 = (unint64_t)(63 - v3) >> 6;
  uint64_t v49 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v50 = (uint64_t)(v2 + 8);
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        unint64_t v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        unint64_t v8 = v7 | (v6 << 6);
      }
      else
      {
        int64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_38;
        }
        if (v9 >= v51)
        {
LABEL_35:
          sub_24F799004();
          return;
        }
        unint64_t v10 = *(void *)(v52 + 8 * v9);
        int64_t v11 = v6 + 1;
        if (!v10)
        {
          sub_24F780C10();
          if (v12 == v13) {
            goto LABEL_35;
          }
          sub_24F77D7B4();
          if (!v10)
          {
            sub_24F780C10();
            if (v12 == v13) {
              goto LABEL_35;
            }
            sub_24F77D7B4();
            if (!v10)
            {
              sub_24F780C10();
              if (v12 == v13) {
                goto LABEL_35;
              }
              sub_24F77D7B4();
              if (!v10)
              {
                int64_t v15 = v14 + 4;
                if (v15 >= v51) {
                  goto LABEL_35;
                }
                unint64_t v10 = *(void *)(v52 + 8 * v15);
                if (!v10)
                {
                  while (!__OFADD__(v15, 1))
                  {
                    sub_24F780C10();
                    if (v12 == v13) {
                      goto LABEL_35;
                    }
                    sub_24F77D7B4();
                    int64_t v15 = v16 + 1;
                    if (v10) {
                      goto LABEL_29;
                    }
                  }
                  goto LABEL_39;
                }
                int64_t v11 = v15;
              }
            }
          }
        }
LABEL_29:
        unint64_t v5 = (v10 - 1) & v10;
        unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
        int64_t v6 = v11;
      }
      v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      uint64_t v20 = *(void *)(a1 + 56) + 24 * v8;
      uint64_t v21 = *(void *)v20;
      unint64_t v22 = *(void *)(v20 + 8);
      char v23 = *(unsigned char *)(v20 + 16);
      uint64_t v55 = v19;
      uint64_t v56 = v18;
      uint64_t v53 = *(void *)v20;
      LOBYTE(v54) = v23;
      swift_bridgeObjectRetain();
      sub_24F781F34(v21, v22, v23);
      sub_24F781274(&qword_26B1F7AC0);
      swift_dynamicCast();
      sub_24F7909A4((uint64_t)&v57, (uint64_t)v63);
      sub_24F7909A4((uint64_t)v63, (uint64_t)v64);
      sub_24F7909A4((uint64_t)v64, (uint64_t)v62);
      unint64_t v24 = sub_24F782950();
      if ((v25 & 1) == 0) {
        break;
      }
      v32 = (uint64_t *)(v2[6] + 16 * v24);
      uint64_t v33 = swift_bridgeObjectRelease();
      uint64_t *v32 = v55;
      v32[1] = v56;
      v41 = sub_24F7DCD70(v33, v34, v35, v36, v37, v38, v39, v40, v48, v49, v50, v51, v52, v53, v22, v54, v55, v56, v57,
              v58,
              v59,
              v60,
              v61,
              v62[0]);
      sub_24F7DCB38((uint64_t)v41, v42);
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)(v50 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v43 = (uint64_t *)(v2[6] + 16 * v24);
    uint64_t *v43 = v55;
    v43[1] = v56;
    v44 = sub_24F7DCD70(v24, v25, v26, v27, v28, v29, v30, v31, v48, v49, v50, v51, v52, v53, v22, v54, v55, v56, v57,
            v58,
            v59,
            v60,
            v61,
            v62[0]);
    sub_24F7909A4((uint64_t)v44, v45);
    uint64_t v46 = v2[2];
    BOOL v13 = __OFADD__(v46, 1);
    uint64_t v47 = v46 + 1;
    if (v13) {
      goto LABEL_37;
    }
    v2[2] = v47;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t sub_24F7DB9AC(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_24F781274(&qword_269A2A1E0);
    uint64_t v2 = (void *)sub_24F8CFA10();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  int64_t v6 = &v37;
  unint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D310];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        uint64_t v34 = (v5 - 1) & v5;
        unint64_t v12 = __clz(__rbit64(v5)) | (v9 << 6);
      }
      else
      {
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_34;
        }
        if (v13 >= v31)
        {
LABEL_31:
          sub_24F799004();
          return (unint64_t)v2;
        }
        unint64_t v14 = *(void *)(v32 + 8 * v13);
        int64_t v15 = v9 + 1;
        if (!v14)
        {
          int64_t v15 = v9 + 2;
          if (v9 + 2 >= v31) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v32 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v9 + 3;
            if (v9 + 3 >= v31) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v32 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v9 + 4;
              if (v9 + 4 >= v31) {
                goto LABEL_31;
              }
              unint64_t v14 = *(void *)(v32 + 8 * v15);
              if (!v14)
              {
                int64_t v16 = v9 + 5;
                if (v9 + 5 >= v31) {
                  goto LABEL_31;
                }
                unint64_t v14 = *(void *)(v32 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_35;
                    }
                    if (v15 >= v31) {
                      goto LABEL_31;
                    }
                    unint64_t v14 = *(void *)(v32 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v15 = v9 + 5;
              }
            }
          }
        }
LABEL_25:
        uint64_t v34 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        int64_t v9 = v15;
      }
      v17 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
      uint64_t v35 = *v17;
      uint64_t v36 = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      sub_24F7DCBA0(v6, v7);
      sub_24F7DCBA0(v7, v40);
      sub_24F7DCBA0(v40, &v38);
      unint64_t result = sub_24F782950();
      unint64_t v18 = result;
      if ((v19 & 1) == 0) {
        break;
      }
      int64_t v33 = v9;
      uint64_t v20 = v7;
      uint64_t v21 = v6;
      uint64_t v22 = v1;
      uint64_t v23 = v11;
      uint64_t v24 = v10;
      uint64_t v25 = (void *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v25 = v35;
      v25[1] = v36;
      uint64_t v10 = v24;
      uint64_t v11 = v23;
      uint64_t v1 = v22;
      int64_t v6 = v21;
      unint64_t v7 = v20;
      int64_t v9 = v33;
      uint64_t v26 = (_OWORD *)(v2[7] + 32 * v18);
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v26);
      unint64_t result = (unint64_t)sub_24F7DCBA0(&v38, v26);
      unint64_t v5 = v34;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (void *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_24F7DCBA0(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_33;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

void sub_24F7DBD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F78075C(a1, a2, a3);
  sub_24F7C0104();
  sub_24F7734BC();
  if (v8)
  {
    __break(1u);
LABEL_12:
    type metadata accessor for TableAlias();
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  sub_24F785528();
  sub_24F781274(&qword_26B1F5380);
  if (sub_24F773A68())
  {
    sub_24F7C0104();
    sub_24F782F34();
    if (!v10) {
      goto LABEL_12;
    }
    uint64_t v6 = v9;
  }
  if (v7)
  {
    uint64_t v11 = (void *)(*(void *)(*(void *)v5 + 56) + 16 * v6);
    swift_bridgeObjectRelease();
    *uint64_t v11 = v4;
    v11[1] = v3;
    sub_24F773598();
  }
  else
  {
    unint64_t v12 = sub_24F77E77C();
    sub_24F8102CC(v12, v13, v14, v15, v16);
    sub_24F773598();
    swift_retain();
  }
}

void sub_24F7DBDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24F7C007C();
  sub_24F7734BC();
  if (v14)
  {
    __break(1u);
LABEL_12:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  unint64_t v15 = v12;
  char v16 = v13;
  sub_24F781274((uint64_t *)&unk_26B1F7ED0);
  if (sub_24F8CF980())
  {
    sub_24F7C007C();
    sub_24F77732C();
    if (!v18) {
      goto LABEL_12;
    }
    unint64_t v15 = v17;
  }
  uint64_t v19 = *v6;
  if (v16)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v19 + 56) + 16 * v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v20 = a1;
    v20[1] = a2;
    sub_24F778C78();
  }
  else
  {
    sub_24F8102FC(v15, a3, a4, a5, a6, a1, a2, v19);
    swift_bridgeObjectRetain();
    sub_24F778C78();
    swift_bridgeObjectRetain();
  }
}

void sub_24F7DBF30(uint64_t a1, uint64_t a2)
{
  sub_24F77AE78(a1, a2);
  sub_24F782950();
  sub_24F7734BC();
  if (v6)
  {
    __break(1u);
LABEL_12:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  sub_24F785528();
  sub_24F781274(&qword_26B1F7608);
  if (sub_24F773A68())
  {
    sub_24F782950();
    sub_24F782F34();
    if (!v8) {
      goto LABEL_12;
    }
    uint64_t v4 = v7;
  }
  if (v5)
  {
    uint64_t v9 = *(void *)(*(void *)v3 + 56);
    swift_release();
    *(void *)(v9 + 8 * v4) = v2;
    sub_24F773598();
  }
  else
  {
    unint64_t v10 = sub_24F77E77C();
    sub_24F810334(v10, v11, v12, v13, v14);
    sub_24F773598();
    swift_bridgeObjectRetain();
  }
}

void sub_24F7DC000(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = sub_24F77AE78(a1, a2);
  sub_24F7C0164(v8, v9);
  sub_24F7734BC();
  if (v10)
  {
    __break(1u);
LABEL_12:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  sub_24F785528();
  sub_24F781274(&qword_26B1F7970);
  if (sub_24F773A68())
  {
    sub_24F7C0164(v4, v3);
    sub_24F782F34();
    if (!v12) {
      goto LABEL_12;
    }
    uint64_t v6 = v11;
  }
  if (v7)
  {
    uint64_t v13 = *(void *)(*(void *)v5 + 56) + 40 * v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v14 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v2;
    *(_OWORD *)(v13 + 16) = v14;
    *(void *)(v13 + 32) = *(void *)(v2 + 32);
    sub_24F773598();
  }
  else
  {
    unint64_t v15 = sub_24F77E77C();
    sub_24F810394(v15, v16, v17, v18, v19);
    sub_24F773598();
    sub_24F7DCA90(v20, v21);
  }
}

void sub_24F7DC110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_24F7DC130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24F782950();
  sub_24F7734BC();
  if (v13)
  {
    __break(1u);
LABEL_12:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  unint64_t v14 = v11;
  char v15 = v12;
  sub_24F781274(&qword_26B1F7610);
  if (sub_24F8CF980())
  {
    sub_24F782950();
    sub_24F77732C();
    if (!v17) {
      goto LABEL_12;
    }
    unint64_t v14 = v16;
  }
  uint64_t v18 = *v5;
  if (v15)
  {
    uint64_t v19 = *(void *)(v18 + 56) + 24 * v14;
    sub_24F7DCBB0(*(void *)v19, *(void *)(v19 + 8), *(unsigned char *)(v19 + 16));
    *(void *)uint64_t v19 = a1;
    *(void *)(v19 + 8) = a2;
    *(unsigned char *)(v19 + 16) = a3;
    sub_24F77344C();
  }
  else
  {
    sub_24F8103F0(v14, a4, a5, a1, a2, a3, v18);
    sub_24F77344C();
    swift_bridgeObjectRetain();
  }
}

void sub_24F7DC260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_24F7DC280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_24F7DC2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_24F782950();
  sub_24F7734BC();
  if (v14)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v15 = v12;
  char v16 = v13;
  sub_24F781274(a5);
  if ((sub_24F7DCD84() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v17 = sub_24F782950();
  if ((v16 & 1) != (v18 & 1))
  {
LABEL_11:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  unint64_t v15 = v17;
LABEL_5:
  uint64_t v19 = *v6;
  if (v16)
  {
    uint64_t v20 = *(void *)(v19 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v20 + 8 * v15) = a1;
    sub_24F77344C();
  }
  else
  {
    a6(v15, a2, a3, a1, v19);
    sub_24F77344C();
    swift_bridgeObjectRetain();
  }
}

void sub_24F7DC3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24F7C01FC();
  sub_24F7734BC();
  if (v14)
  {
    __break(1u);
LABEL_12:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  unint64_t v15 = v12;
  char v16 = v13;
  sub_24F781274(&qword_26B1F7220);
  if (sub_24F8CF980())
  {
    sub_24F7C01FC();
    sub_24F77732C();
    if (!v18) {
      goto LABEL_12;
    }
    unint64_t v15 = v17;
  }
  uint64_t v19 = *v6;
  if (v16)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v19 + 56) + 16 * v15);
    swift_bridgeObjectRelease();
    *uint64_t v20 = a1;
    v20[1] = a2;
    sub_24F778C78();
  }
  else
  {
    sub_24F810418(v15, a3, a4, a5, a6, a1, a2, v19);
    swift_bridgeObjectRetain();
    sub_24F778C78();
    swift_bridgeObjectRetain();
  }
}

void sub_24F7DC4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F78075C(a1, a2, a3);
  sub_24F7C02B0();
  sub_24F7734BC();
  if (v8)
  {
    __break(1u);
LABEL_12:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  sub_24F785528();
  sub_24F781274(&qword_26B1F58E0);
  if (sub_24F773A68())
  {
    sub_24F7C02B0();
    sub_24F782F34();
    if (!v10) {
      goto LABEL_12;
    }
    uint64_t v6 = v9;
  }
  if (v7)
  {
    unint64_t v11 = (void *)(*(void *)(*(void *)v5 + 56) + 16 * v6);
    swift_bridgeObjectRelease();
    *unint64_t v11 = v4;
    v11[1] = v3;
    sub_24F773598();
  }
  else
  {
    unint64_t v12 = sub_24F77E77C();
    sub_24F8104A0(v12, v13, v14, v15, v16);
    sub_24F773598();
    sub_24F7DCAF0(v17);
  }
}

void sub_24F7DC5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24F782950();
  sub_24F7734BC();
  if (v11)
  {
    __break(1u);
LABEL_12:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  unint64_t v12 = v9;
  char v13 = v10;
  sub_24F781274(&qword_269A2A1D8);
  if (sub_24F7DCD84())
  {
    sub_24F782950();
    sub_24F782F34();
    if (!v15) {
      goto LABEL_12;
    }
    unint64_t v12 = v14;
  }
  uint64_t v16 = *v4;
  if (v13)
  {
    uint64_t v17 = (uint64_t *)(v16[7] + 16 * v12);
    swift_bridgeObjectRelease();
    uint64_t *v17 = a1;
    v17[1] = a2;
    sub_24F77344C();
  }
  else
  {
    sub_24F810554(v12, a3, a4, a1, a2, v16);
    sub_24F77344C();
    swift_bridgeObjectRetain();
  }
}

unint64_t sub_24F7DC6DC()
{
  unint64_t result = qword_26B1F5468[0];
  if (!qword_26B1F5468[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1F5468);
  }
  return result;
}

uint64_t destroy for DatabaseError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  char v7 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_24F7B191C(a1 + 40);
    goto LABEL_7;
  }
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for DatabaseError(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_24F7B191C(a1 + 40);
LABEL_5:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_6;
  }
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t sub_24F7DCA90(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24F7DCAA4()
{
  unint64_t result = qword_269A2A1D0;
  if (!qword_269A2A1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2A1D0);
  }
  return result;
}

uint64_t sub_24F7DCAF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F7DCB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_26B1F7AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_OWORD *sub_24F7DCBA0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_24F7DCBB0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_24F790830(a1, a2, a3);
  }
  return a1;
}

char *sub_24F7DCD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  return &a24;
}

uint64_t sub_24F7DCD84()
{
  return sub_24F8CF980();
}

uint64_t sub_24F7DCDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *(void *)(v6 + 8);
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v22 = *(void *)v6;
  uint64_t v23 = *(void *)(v6 + 16);
  uint64_t v11 = *(void *)(v6 + 48);
  uint64_t v24 = *(void *)(v6 + 40);
  uint64_t v25 = *(void *)(v6 + 32);
  uint64_t v13 = *(void *)(v6 + 56);
  uint64_t v12 = *(void *)(v6 + 64);
  uint64_t v26 = *(void *)(v6 + 72);
  char v27 = *(unsigned char *)(v6 + 80);
  unint64_t v14 = *(void *)(v6 + 88);
  uint64_t v15 = *(void *)(v6 + 96);
  uint64_t v16 = *(void *)(v6 + 104);
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = *(void *)(a3 + 24);
  v17[2] = *(void *)(a3 + 16);
  v17[3] = a4;
  v17[4] = v18;
  v17[5] = a5;
  v17[6] = a1;
  v17[7] = a2;
  v17[8] = v15;
  v17[9] = v16;
  *(void *)a6 = v22;
  *(void *)(a6 + 8) = v9;
  *(void *)(a6 + 16) = v23;
  *(void *)(a6 + 24) = v10;
  *(void *)(a6 + 32) = v25;
  *(void *)(a6 + 40) = v24;
  *(void *)(a6 + 48) = v11;
  *(void *)(a6 + 56) = v13;
  *(void *)(a6 + 64) = v12;
  *(void *)(a6 + 72) = v26;
  *(unsigned char *)(a6 + 80) = v27;
  *(void *)(a6 + 88) = v14;
  *(void *)(a6 + 96) = sub_24F7E5720;
  *(void *)(a6 + 104) = v17;
  swift_retain();
  sub_24F78C440(v22);
  sub_24F78C440(v23);
  sub_24F78C440(v25);
  sub_24F78C440(v11);
  sub_24F78C440(v12);
  sub_24F78C430(v14);
  return swift_retain();
}

uint64_t ValueObservation.requiresWriteAccess.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ValueObservation.requiresWriteAccess.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*ValueObservation.requiresWriteAccess.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_24F7DCF3C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 - 8);
  uint64_t v8 = MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11(v8);
  a1(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a5);
}

void ValueObservation.start(in:scheduling:onError:onChange:)()
{
  sub_24F76B80C();
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  uint64_t v21 = v2;
  uint64_t v24 = v3;
  uint64_t v19 = *(void *)(v4 + 24);
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v5 = sub_24F85E9C4(sub_24F7DD33C, v4, (uint64_t)&v28);
  uint64_t v7 = v28;
  uint64_t v6 = v29;
  uint64_t v8 = v30;
  uint64_t v9 = v31;
  uint64_t v11 = v32;
  uint64_t v10 = v33;
  uint64_t v13 = v34;
  uint64_t v12 = v35;
  uint64_t v14 = v36;
  char v18 = v38;
  uint64_t v25 = v37;
  unint64_t v26 = v39;
  uint64_t v17 = v40;
  uint64_t v27 = v41;
  if (v28) {
    v28(v5);
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = v7;
  uint64_t v29 = v6;
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  uint64_t v32 = v11;
  uint64_t v33 = v10;
  uint64_t v34 = v13;
  uint64_t v35 = v12;
  uint64_t v36 = v14;
  uint64_t v37 = v25;
  char v38 = v18;
  unint64_t v39 = v26;
  uint64_t v40 = v17;
  uint64_t v41 = v27;
  (*(void (**)(void (**)(void), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 72))(&v28, v21, v22, v23, v20, v19, ObjectType);
  uint64_t v16 = sub_24F77390C();
  sub_24F787238(v16);
  sub_24F787238(v8);
  sub_24F787238(v11);
  sub_24F787238(v13);
  sub_24F787238(v14);
  sub_24F7DD35C(v26);
  swift_release();
  sub_24F77344C();
}

uint64_t sub_24F7DD1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  if (v6)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    *(void *)(v9 + 24) = a3;
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = sub_24F7E5738;
    v10[3] = v8;
    v10[4] = sub_24F7E5738;
    v10[5] = v9;
    uint64_t v11 = sub_24F7E573C;
  }
  else
  {
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = a2;
    v10[3] = a3;
    uint64_t v11 = sub_24F7E5738;
  }
  uint64_t v12 = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v10;
  swift_retain();
  sub_24F78C440(v6);
  uint64_t result = sub_24F787238(v6);
  *(void *)(a1 + 48) = sub_24F7E5778;
  *(void *)(a1 + 56) = v13;
  return result;
}

uint64_t sub_24F7DD33C(uint64_t a1)
{
  return sub_24F7DD1D8(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

unint64_t sub_24F7DD35C(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void ValueObservation.handleEvents(willStart:willFetch:willTrackRegion:databaseDidChange:didReceiveValue:didFail:didCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_24F76B80C();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v38 = v31;
  uint64_t v32 = (void *)swift_allocObject();
  uint64_t v33 = *(void *)(a27 + 24);
  v32[2] = *(void *)(a27 + 16);
  v32[3] = v33;
  v32[4] = v30;
  v32[5] = v28;
  v32[6] = a21;
  v32[7] = a22;
  uint64_t v34 = sub_24F77390C();
  sub_24F78C440(v34);
  sub_24F78C440(a21);
  uint64_t v35 = type metadata accessor for ValueReducers.Trace();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24F7DCDA4((uint64_t)sub_24F7DD844, (uint64_t)v32, a27, v35, WitnessTable, (uint64_t)v45);
  swift_release();
  uint64_t v39 = v45[0];
  uint64_t v40 = v45[2];
  uint64_t v41 = v45[4];
  uint64_t v42 = v45[6];
  uint64_t v43 = v45[8];
  unint64_t v44 = v45[11];
  uint64_t v37 = type metadata accessor for ValueObservation();
  sub_24F85E9C4((uint64_t (*)(uint64_t))sub_24F7DDBAC, v37, v38);
  sub_24F787238(v39);
  sub_24F787238(v40);
  sub_24F787238(v41);
  sub_24F787238(v42);
  sub_24F787238(v43);
  sub_24F7DD35C(v44);
  swift_release();
  sub_24F77344C();
}

uint64_t sub_24F7DD5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v26 = a8;
  MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  if (a2)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    char v18 = sub_24F7714C0;
  }
  else
  {
    char v18 = (uint64_t (*)())nullsub_1;
    uint64_t v17 = 0;
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v17;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a6;
  v20[3] = a7;
  if (a4)
  {
    v20[4] = a4;
    v20[5] = a5;
    uint64_t v21 = sub_24F7E5698;
  }
  else
  {
    uint64_t v21 = nullsub_1;
  }
  uint64_t v22 = v21;
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a6;
  v23[3] = a7;
  v23[4] = v22;
  v23[5] = v20;
  sub_24F8318B8((uint64_t)v15, (uint64_t)sub_24F7712B8, v19, (uint64_t)sub_24F7E568C, (uint64_t)v23, a6, v26);
  sub_24F78C440(a2);
  return sub_24F78C440(a4);
}

uint64_t sub_24F7DD7F4()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24F7DD844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F7DD5C0(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3], a2);
}

uint64_t sub_24F7DD854(uint64_t (**a1)(), uint64_t a2, uint64_t (*a3)(), uint64_t a4, uint64_t (*a5)(), uint64_t a6, uint64_t (*a7)(), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)())
{
  char v18 = *a1;
  uint64_t v17 = a1[1];
  if (a2)
  {
    uint64_t v19 = (uint64_t (*)())a2;
    uint64_t v20 = a3;
    if (v18)
    {
      uint64_t v20 = (uint64_t (*)())swift_allocObject();
      *((void *)v20 + 2) = v18;
      *((void *)v20 + 3) = v17;
      *((void *)v20 + 4) = a2;
      *((void *)v20 + 5) = a3;
      uint64_t v19 = sub_24F7E5580;
    }
  }
  else
  {
    uint64_t v19 = *a1;
    uint64_t v20 = a1[1];
  }
  uint64_t v46 = a6;
  *a1 = v19;
  a1[1] = v20;
  uint64_t v21 = (uint64_t)a1[2];
  uint64_t v22 = a1[3];
  if (a4)
  {
    uint64_t v23 = (uint64_t (*)(uint64_t *))a4;
    uint64_t v24 = a5;
    if (v21)
    {
      uint64_t v24 = (uint64_t (*)())swift_allocObject();
      *((void *)v24 + 2) = v21;
      *((void *)v24 + 3) = v22;
      *((void *)v24 + 4) = a4;
      *((void *)v24 + 5) = a5;
      uint64_t v23 = sub_24F7E5604;
    }
    goto LABEL_9;
  }
  uint64_t v23 = (uint64_t (*)(uint64_t *))a1[2];
  uint64_t v24 = a1[3];
  if (v21)
  {
LABEL_9:
    sub_24F78C440(a4);
    uint64_t v25 = (uint64_t)a1[2];
    goto LABEL_10;
  }
  uint64_t v25 = 0;
  uint64_t v24 = 0;
LABEL_10:
  sub_24F78C440(a2);
  sub_24F78C440(v21);
  sub_24F787238(v25);
  a1[2] = (uint64_t (*)())v23;
  a1[3] = v24;
  uint64_t v27 = a1[4];
  uint64_t v26 = a1[5];
  if (v46)
  {
    uint64_t v28 = (uint64_t (*)())v46;
    uint64_t v29 = a7;
    uint64_t v30 = a8;
    if (v27)
    {
      uint64_t v29 = (uint64_t (*)())swift_allocObject();
      *((void *)v29 + 2) = v27;
      *((void *)v29 + 3) = v26;
      *((void *)v29 + 4) = v46;
      *((void *)v29 + 5) = a7;
      uint64_t v28 = sub_24F7E5734;
    }
  }
  else
  {
    uint64_t v28 = a1[4];
    uint64_t v29 = a1[5];
    uint64_t v30 = a8;
  }
  a1[4] = v28;
  a1[5] = v29;
  uint64_t v31 = (uint64_t)a1[6];
  uint64_t v32 = a1[7];
  if (v31)
  {
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = sub_24F7E5738;
    uint64_t v35 = v33;
    if (!v30)
    {
LABEL_21:
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v34;
      *(void *)(v38 + 24) = v35;
      sub_24F78C440(v30);
      uint64_t v30 = (uint64_t)a1[6];
      uint64_t v39 = sub_24F7E5594;
      goto LABEL_22;
    }
LABEL_18:
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v30;
    *(void *)(v35 + 24) = a9;
    uint64_t v36 = sub_24F7E55CC;
    if (v31)
    {
      uint64_t v37 = (void *)swift_allocObject();
      v37[2] = v34;
      v37[3] = v33;
      v37[4] = sub_24F7E55CC;
      v37[5] = v35;
      uint64_t v36 = sub_24F7E5604;
      uint64_t v35 = (uint64_t)v37;
    }
    uint64_t v34 = v36;
    goto LABEL_21;
  }
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  if (v30) {
    goto LABEL_18;
  }
  uint64_t v39 = 0;
  uint64_t v38 = 0;
LABEL_22:
  sub_24F78C440(v46);
  sub_24F78C440(v31);
  sub_24F787238(v30);
  a1[6] = (uint64_t (*)())v39;
  a1[7] = (uint64_t (*)())v38;
  uint64_t v41 = a1[8];
  uint64_t v40 = a1[9];
  if (a10)
  {
    uint64_t v42 = (uint64_t (*)())a10;
    uint64_t v43 = a11;
    if (v41)
    {
      uint64_t v43 = (uint64_t (*)())swift_allocObject();
      *((void *)v43 + 2) = v41;
      *((void *)v43 + 3) = v40;
      *((void *)v43 + 4) = a10;
      *((void *)v43 + 5) = a11;
      uint64_t v42 = sub_24F7E5734;
    }
  }
  else
  {
    uint64_t v42 = a1[8];
    uint64_t v43 = a1[9];
  }
  a1[8] = v42;
  a1[9] = v43;
  return sub_24F78C440(a10);
}

uint64_t sub_24F7DDBAC(uint64_t (**a1)())
{
  return sub_24F7DD854(a1, *(void *)(v1 + 32), *(uint64_t (**)())(v1 + 40), *(void *)(v1 + 48), *(uint64_t (**)())(v1 + 56), *(void *)(v1 + 64), *(uint64_t (**)())(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(uint64_t (**)())(v1 + 104));
}

uint64_t type metadata accessor for ValueObservation()
{
  return sub_24F777DE0();
}

void ValueObservation.print(_:to:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t v9 = v4[1];
  uint64_t v10 = v4[2];
  uint64_t v11 = v4[3];
  uint64_t v32 = v4[5];
  uint64_t v33 = v4[4];
  uint64_t v30 = v4[7];
  uint64_t v31 = v4[6];
  uint64_t v28 = v4[9];
  uint64_t v29 = v4[8];
  HIDWORD(v27) = *((unsigned __int8 *)v4 + 80);
  uint64_t v26 = v4[11];
  long long v34 = *((_OWORD *)v4 + 6);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  uint64_t v13 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v13 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v13)
  {
    *(void *)&long long v37 = a1;
    *((void *)&v37 + 1) = a2;
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    uint64_t v15 = a1;
    unint64_t v14 = a2;
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t v16 = swift_allocObject();
  sub_24F799984(a3, (uint64_t)&v37, &qword_269A2AF08);
  if (v39)
  {
    sub_24F794DE0(&v37, v16 + 16);
  }
  else
  {
    *(void *)(v16 + 40) = &type metadata for PrintOutputStream;
    *(void *)(v16 + 48) = sub_24F7DDFC0();
    sub_24F7E51E4((uint64_t)&v37, &qword_269A2AF08);
  }
  *(void *)&long long v37 = v8;
  *((void *)&v37 + 1) = v9;
  uint64_t v38 = v10;
  uint64_t v39 = v11;
  uint64_t v40 = v33;
  uint64_t v41 = v32;
  uint64_t v42 = v31;
  uint64_t v43 = v30;
  uint64_t v44 = v29;
  uint64_t v45 = v28;
  char v46 = BYTE4(v27);
  uint64_t v47 = v26;
  long long v48 = v34;
  *(void *)&long long v34 = sub_24F76BAD0();
  sub_24F78077C((void *)v34);
  uint64_t v17 = (void *)sub_24F76BAD0();
  sub_24F78077C(v17);
  char v18 = (void *)sub_24F76BAD0();
  sub_24F78077C(v18);
  uint64_t v19 = (void *)sub_24F76BAD0();
  sub_24F78077C(v19);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(a4 + 16);
  *(void *)(v20 + 32) = v12;
  *(void *)(v20 + 40) = v16;
  *(void *)(v20 + 48) = v15;
  *(void *)(v20 + 56) = v14;
  uint64_t v21 = (void *)sub_24F76BAD0();
  sub_24F78077C(v21);
  uint64_t v22 = (void *)sub_24F76BAD0();
  sub_24F78077C(v22);
  id v23 = v12;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v24 = v23;
  ValueObservation.handleEvents(willStart:willFetch:willTrackRegion:databaseDidChange:didReceiveValue:didFail:didCancel:)((uint64_t)sub_24F7DE010, v34, (uint64_t)sub_24F7DE044, (uint64_t)v17, (uint64_t)sub_24F7DE274, (uint64_t)v18, (uint64_t)sub_24F7DE388, (uint64_t)v19, (uint64_t)sub_24F7DE518, v20, (uint64_t)sub_24F7DE65C, (uint64_t)v21, (uint64_t)sub_24F7DE78C, (uint64_t)v22, a4, v25, v26, v27, v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    *((uint64_t *)&v34 + 1),
    v35);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_24F7DDF88()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_24F7DDFC0()
{
  unint64_t result = qword_269A2AF10;
  if (!qword_269A2AF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2AF10);
  }
  return result;
}

id sub_24F7DE010()
{
  return sub_24F7DE668(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

id sub_24F7DE044()
{
  return sub_24F7DE668(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

id sub_24F7DE074(uint64_t *a1, id a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  objc_msgSend(a2, sel_lock);
  v10[1] = 0;
  v10[2] = 0xE000000000000000;
  sub_24F8CF7D0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  if (v5 && *(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    sub_24F794B60();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v10[0] = v7;
    sub_24F80F250(v10);
    uint64_t v8 = sub_24F80AF00(v10[0]);
    swift_release();
    v10[0] = v8;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    swift_bridgeObjectRelease();
  }
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_24F798FB4(a3 + 16, *(void *)(a3 + 40));
  sub_24F8CF930();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return objc_msgSend(a2, sel_unlock);
}

id sub_24F7DE274(uint64_t *a1)
{
  return sub_24F7DE074(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_24F7DE280(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  objc_msgSend(a1, sel_lock);
  sub_24F8CF7D0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_beginAccess();
  sub_24F798FB4(v4, *(void *)(a2 + 40));
  sub_24F8CF930();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return objc_msgSend(a1, sel_unlock);
}

id sub_24F7DE388()
{
  return sub_24F7DE280(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

id sub_24F7DE394(int a1, id a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  objc_msgSend(a2, sel_lock);
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  swift_getAssociatedTypeWitness();
  sub_24F8CFCD0();
  swift_beginAccess();
  sub_24F798FB4(v5, *(void *)(a3 + 40));
  sub_24F8CF930();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return objc_msgSend(a2, sel_unlock);
}

uint64_t sub_24F7DE4D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_24F7DE518(int a1)
{
  return sub_24F7DE394(a1, *(id *)(v1 + 32), *(void *)(v1 + 40));
}

id sub_24F7DE528(int a1, id a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  objc_msgSend(a2, sel_lock);
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F781274(&qword_26B1F7040);
  sub_24F8CF920();
  swift_beginAccess();
  sub_24F798FB4(v5, *(void *)(a3 + 40));
  sub_24F8CF930();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return objc_msgSend(a2, sel_unlock, 0, 0xE000000000000000);
}

id sub_24F7DE65C(int a1)
{
  return sub_24F7DE528(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_24F7DE668(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  objc_msgSend(a1, sel_lock);
  swift_bridgeObjectRetain();
  sub_24F77390C();
  sub_24F8CEEB0();
  swift_beginAccess();
  sub_24F798FB4(v4, *(void *)(a2 + 40));
  sub_24F8CF930();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return objc_msgSend(a1, sel_unlock);
}

uint64_t sub_24F7DE74C()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F77B864();
  return swift_deallocObject();
}

id sub_24F7DE78C()
{
  return sub_24F7DE668(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24F7DE7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) + 8);
  sub_24F780C1C();
  swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v29 = v8;
  uint64_t v30 = v7;
  sub_24F771D60();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v27 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F8CF610();
  sub_24F77AD10();
  v27[1] = v12;
  sub_24F771D60();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v27 - v14;
  sub_24F77AD10();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  (*(void (**)(uint64_t))(v3 + 96))(v17);
  uint64_t v18 = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, v5, v6);
  if (v18)
  {
    uint64_t v19 = sub_24F775BD8();
    return v20(v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v11, v5, v6);
    sub_24F7739F4();
    v22();
    uint64_t v23 = AssociatedTypeWitness;
    if (sub_24F777048((uint64_t)v15, 1, AssociatedTypeWitness) == 1)
    {
      sub_24F7739F4();
      v26();
      uint64_t result = sub_24F8CF9D0();
      __break(1u);
    }
    else
    {
      uint64_t v24 = sub_24F775BD8();
      v25(v24);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v31, v15, v23);
    }
  }
  return result;
}

void ValueObservation.values(in:scheduling:bufferingPolicy:)()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v21[0] = v6;
  v21[1] = v7;
  uint64_t v9 = v8;
  uint64_t v12 = *(void *)(v10 + 16);
  uint64_t v11 = *(void *)(v10 + 24);
  swift_getAssociatedTypeWitness();
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F780C1C();
  uint64_t v13 = sub_24F8CF240();
  sub_24F77AD10();
  uint64_t v15 = v14;
  sub_24F771D60();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v21 - v17;
  memcpy(v22, v1, sizeof(v22));
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v3, v13);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v12;
  v19[3] = v11;
  memcpy(v19 + 4, v22, 0x70uLL);
  uint64_t v20 = v21[0];
  v19[18] = v9;
  v19[19] = v20;
  v19[20] = v5;
  sub_24F780C1C();
  swift_checkMetadataState();
  sub_24F7DEC08();
  sub_24F7DEC98(v22);
  swift_unknownObjectRetain();
  swift_retain();
  sub_24F77344C();
}

uint64_t sub_24F7DEC08()
{
  sub_24F77C008();
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F781D28();
  sub_24F8CF240();
  sub_24F770E70();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v2);
  sub_24F781D28();
  uint64_t result = type metadata accessor for AsyncValueObservation();
  uint64_t v6 = (void *)(v3 + *(int *)(result + 28));
  *uint64_t v6 = v1;
  v6[1] = v0;
  return result;
}

uint64_t *sub_24F7DEC98(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[8];
  unint64_t v6 = a1[11];
  sub_24F78C440(*a1);
  sub_24F78C440(v2);
  sub_24F78C440(v3);
  sub_24F78C440(v4);
  sub_24F78C440(v5);
  sub_24F78C430(v6);
  swift_retain();
  return a1;
}

void AsyncValueObservation.makeAsyncIterator()()
{
  sub_24F76B80C();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F77AE9C();
  sub_24F8CF2A0();
  sub_24F771D60();
  MEMORY[0x270FA5388](v3);
  sub_24F77AE9C();
  uint64_t v4 = sub_24F8CF240();
  sub_24F77AD10();
  uint64_t v6 = v5;
  sub_24F771D60();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v17 - v8;
  sub_24F77AE9C();
  uint64_t v10 = sub_24F8CF2B0();
  sub_24F77AD10();
  uint64_t v12 = v11;
  sub_24F771D60();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v17 - v14;
  uint64_t v19 = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v0, v4);
  v17[2] = v2;
  v17[3] = &v19;
  uint64_t v18 = v0;
  sub_24F8CF2C0();
  sub_24F8CF280();
  if (v19)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v12 + 8);
    swift_retain();
    v16(v15, v10);
    sub_24F7DF63C();
    swift_release();
    sub_24F77344C();
  }
  else
  {
    sub_24F8CF9D0();
    __break(1u);
  }
}

uint64_t sub_24F7DEF74(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  void (*v14)(void *__return_ptr, uint64_t (*)(void *), uint64_t, uint64_t (*)(uint64_t), uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void v34[2];
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  void (*v38)(void *__return_ptr, uint64_t (*)(void *), uint64_t, uint64_t (*)(uint64_t), uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  void v42[3];
  uint64_t v43;
  uint64_t v44;

  uint64_t v41 = a2;
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v7 = sub_24F8CF270();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v36 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v34 - v11;
  uint64_t v40 = type metadata accessor for AnyDatabaseCancellable();
  uint64_t v13 = (void *)(a3 + *(int *)(type metadata accessor for AsyncValueObservation() + 28));
  uint64_t v14 = (void (*)(void *__return_ptr, uint64_t (*)(void *), uint64_t, uint64_t (*)(uint64_t), uint64_t))*v13;
  long long v37 = v13[1];
  uint64_t v38 = v14;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v15 = a1;
  uint64_t v39 = a1;
  v35(v12, a1, v7);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (v16 + 24) & ~v16;
  v34[1] = v16 | 7;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  v34[0] = *(void *)(v8 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v34[0])(v18 + v17, v12, v7);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = v36;
  uint64_t v21 = v15;
  uint64_t v22 = v7;
  v35(v36, v21, v7);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a4;
  ((void (*)(uint64_t, char *, uint64_t))v34[0])(v23 + v17, v20, v22);
  *(void *)(v23 + ((v17 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  swift_retain();
  v38(v42, sub_24F7E5344, v18, sub_24F7E5478, v23);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v24 = v43;
  uint64_t v25 = v44;
  uint64_t v26 = sub_24F798FB4((uint64_t)v42, v43);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v28);
  uint64_t v30 = sub_24F83BFA8((uint64_t)v28, v40, v24, v25);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v42);
  char *v41 = v30;
  swift_release();
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = a4;
  *(void *)(v32 + 24) = v31;
  return sub_24F8CF230();
}

uint64_t sub_24F7DF340(uint64_t a1)
{
  return sub_24F7DEF74(a1, *(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_24F7DF34C(void *a1)
{
  id v1 = a1;
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F8CF270();
  return sub_24F8CF260();
}

uint64_t sub_24F7DF3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a3;
  uint64_t v6 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v9 = sub_24F8CF220();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a4);
  sub_24F8CF270();
  sub_24F8CF250();
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v12, v9) != *MEMORY[0x263F8F658]) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24F83BF1C();
    return swift_release();
  }
  return result;
}

uint64_t sub_24F7DF5E4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24F83BF1C();
    return swift_release();
  }
  return result;
}

uint64_t sub_24F7DF63C()
{
  sub_24F77EEA4();
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F8CF2A0();
  sub_24F770E70();
  uint64_t v2 = sub_24F77390C();
  v3(v2);
  sub_24F781D28();
  uint64_t result = type metadata accessor for AsyncValueObservation.Iterator();
  *(void *)(v1 + *(int *)(result + 28)) = v0;
  return result;
}

uint64_t AsyncValueObservation.Iterator.next()(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v4 = sub_24F8CF2A0();
  *uint64_t v3 = v1;
  v3[1] = sub_24F7DF794;
  return MEMORY[0x270FA2100](a1, v4);
}

uint64_t sub_24F7DF794()
{
  sub_24F773808();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24F7DF864(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24F7E5784;
  return AsyncValueObservation.Iterator.next()(a1);
}

uint64_t sub_24F7DF90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_24F7DF9EC;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_24F7DF9EC()
{
  sub_24F773808();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v3 + 24) = *(void *)(v3 + 16);
  }
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
  return v5();
}

uint64_t sub_24F7DFAD8(uint64_t a1)
{
  AsyncValueObservation.makeAsyncIterator()();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v3(v1, a1);
}

uint64_t ValueObservation.publisher(in:scheduling:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  memcpy(v13, v5, sizeof(v13));
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(a4 + 16);
  memcpy((void *)(v11 + 32), v5, 0x70uLL);
  *(void *)(v11 + 144) = a1;
  *(void *)(v11 + 152) = a2;
  *(void *)(v11 + 160) = a3;
  *a5 = sub_24F7DEC04;
  a5[1] = v11;
  sub_24F7DEC98(v13);
  swift_unknownObjectRetain();
  return swift_retain();
}

void sub_24F7DFBFC(int a1, int a2, int a3, int a4, void *__src, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  memcpy(v10, __src, sizeof(v10));
  type metadata accessor for ValueObservation();
  sub_24F77390C();
  ValueObservation.start(in:scheduling:onError:onChange:)();
}

uint64_t sub_24F7DFCB0()
{
  if (v0[4]) {
    swift_release();
  }
  if (v0[6]) {
    swift_release();
  }
  if (v0[8]) {
    swift_release();
  }
  if (v0[10]) {
    swift_release();
  }
  if (v0[12]) {
    swift_release();
  }
  if (v0[15] >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_24F7DFD58(int a1, int a2, int a3, int a4)
{
  sub_24F7DFBFC(a1, a2, a3, a4, v4 + 4, v4[18], v4[19], v4[20], v4[2], v4[3]);
}

uint64_t sub_24F7DFD8C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DatabasePublishers.Value.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F77AD10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v3;
  uint64_t v11 = v3[1];
  uint64_t v13 = _s17ValueSubscriptionCMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, a3);
  swift_retain();
  uint64_t v14 = sub_24F7DFED4(v12, v11, (uint64_t)v10);
  v17[3] = v13;
  void v17[4] = swift_getWitnessTable();
  v17[0] = v14;
  sub_24F8CEAB0();
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v17);
}

uint64_t _s17ValueSubscriptionCMa()
{
  return sub_24F777DE0();
}

uint64_t *sub_24F7DFED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F7E0040(a1, a2, a3);
}

uint64_t sub_24F7DFF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = _s17ValueSubscriptionC16WaitingForDemandVMa();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 36));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t sub_24F7DFFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = _s17ValueSubscriptionC9ObservingVMa();
  *(void *)(a4 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t sub_24F7E0034(uint64_t a1, uint64_t a2)
{
  return DatabasePublishers.Value.receive<A>(subscriber:)(a1, a2, a2);
}

uint64_t *sub_24F7E0040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 80);
  uint64_t v9 = _s17ValueSubscriptionC5StateOMa();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - v11;
  v3[6] = 0;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  uint64_t v13 = *(void *)(v7 + 112);
  *(uint64_t *)((char *)v3 + v13) = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AE0]), sel_init);
  sub_24F7DFF28(a3, a1, a2, v8, (uint64_t)v12);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))((uint64_t)v3 + *(void *)(*v3 + 104), v12, v9);
  return v3;
}

void sub_24F7E01D0()
{
  id v1 = *(id *)(v0 + *(void *)(*(void *)v0 + 112));
  sub_24F832B4C((uint64_t)sub_24F7C3BA8, 0, (void (*)(id))sub_24F7E5234);
}

uint64_t sub_24F7E025C(uint64_t *a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 80);
  uint64_t v5 = *(void *)(*a1 + 88);
  uint64_t v72 = _s17ValueSubscriptionC9ObservingVMa();
  v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v72);
  v70 = (char *)&v67 - v7;
  uint64_t v69 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v6);
  v68 = (char *)&v67 - v8;
  uint64_t v80 = _s17ValueSubscriptionC16WaitingForDemandVMa();
  uint64_t v77 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v10 = (char *)&v67 - v9;
  uint64_t v11 = _s17ValueSubscriptionC5StateOMa();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  v75 = (char *)&v67 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v74 = (char *)&v67 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v67 - v20;
  uint64_t v22 = (uint64_t)a1 + *(void *)(v3 + 104);
  swift_beginAccess();
  uint64_t v78 = v12;
  uint64_t v23 = *(void **)(v12 + 16);
  uint64_t v79 = v22;
  uint64_t v24 = v22;
  uint64_t v25 = (void (*)(uint64_t, uint64_t, uint64_t))v23;
  ((void (*)(char *, uint64_t, uint64_t))v23)(v21, v24, v11);
  uint64_t v76 = v11;
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    v71 = v25;
    uint64_t v72 = (uint64_t)v15;
    uint64_t v37 = v77;
    uint64_t v38 = v80;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v10, v21, v80);
    sub_24F8CEB10();
    uint64_t v39 = v73;
    uint64_t result = sub_24F8CEAF0();
    uint64_t v40 = v38;
    uint64_t v41 = v10;
    uint64_t v42 = (uint64_t)a1;
    uint64_t v43 = (uint64_t)v68;
    if ((result & 1) == 0)
    {
      if (v39 < 0)
      {
        __break(1u);
        goto LABEL_24;
      }
      if (!v39) {
        return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v41, v40);
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, v41, v4);
    uint64_t v44 = (uint64_t)v74;
    sub_24F7DFFB8(v43, v39, v4, (uint64_t)v74);
    uint64_t v45 = v76;
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = v78;
    uint64_t v47 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v75, v44, v45);
    uint64_t v48 = v79;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 40))(v48, v47, v45);
    swift_endAccess();
    uint64_t v49 = &v41[*(int *)(v80 + 36)];
    int64_t v51 = *(char **)v49;
    uint64_t v50 = *((void *)v49 + 1);
    v75 = v51;
    v74 = (char *)v50;
    uint64_t v52 = swift_allocObject();
    swift_weakInit();
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v4;
    v53[3] = v5;
    v53[4] = v52;
    uint64_t v54 = swift_allocObject();
    swift_weakInit();
    uint64_t v55 = (void *)swift_allocObject();
    uint64_t v73 = v42;
    uint64_t v56 = v41;
    uint64_t v57 = v55;
    v55[2] = v4;
    v55[3] = v5;
    v55[4] = v54;
    swift_retain();
    swift_retain();
    swift_retain();
    ((void (*)(void *__return_ptr, uint64_t (*)(), void *, uint64_t (*)(), void *))v75)(v83, sub_24F7E5288, v53, sub_24F7E5294, v57);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v58 = v72;
    v71(v72, v79, v45);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      (*(void (**)(char *, uint64_t))(v77 + 8))(v56, v80);
      sub_24F775458((uint64_t)v83, (uint64_t)v82);
      sub_24F7E5134((uint64_t)v82, (uint64_t)v81);
      uint64_t v62 = v73 + 16;
      swift_beginAccess();
      sub_24F7E4F5C((uint64_t)v81, v62);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v58, v45);
    }
    else
    {
      uint64_t v59 = v80;
      if (result != 2)
      {
LABEL_26:
        __break(1u);
        return result;
      }
      uint64_t v60 = v84;
      uint64_t v61 = v85;
      sub_24F7811D0(v83, v84);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v61);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v56, v59);
    }
    return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v83);
  }
  if (result != 1) {
    return result;
  }
  uint64_t v27 = (void (*)(char *, char *, uint64_t))*((void *)v71 + 4);
  uint64_t v28 = v70;
  uint64_t v29 = v72;
  v27(v70, v21, v72);
  uint64_t v30 = *(int *)(v29 + 36);
  uint64_t v31 = *(void *)&v28[v30];
  sub_24F8CEB10();
  char v32 = sub_24F8CEAF0();
  uint64_t v33 = v78;
  if ((v32 & 1) == 0)
  {
    sub_24F8CEB10();
    char v34 = sub_24F8CEAF0();
    uint64_t v35 = sub_24F8CEB10();
    if (v34)
    {
LABEL_20:
      *(void *)&v28[v30] = v35;
      goto LABEL_21;
    }
    uint64_t v36 = v73;
    uint64_t result = sub_24F8CEAF0();
    if (result)
    {
LABEL_9:
      uint64_t v35 = sub_24F8CEB10();
      goto LABEL_20;
    }
    if (((v31 | v36) & 0x8000000000000000) == 0)
    {
      uint64_t v35 = v31 + v36;
      if (!__OFADD__(v31, v36))
      {
        if ((v35 & 0x8000000000000000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_25;
      }
      goto LABEL_9;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_21:
  uint64_t v63 = (uint64_t)v74;
  v27(v74, v28, v29);
  uint64_t v64 = v76;
  swift_storeEnumTagMultiPayload();
  v65 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v75, v63, v64);
  uint64_t v66 = v79;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 40))(v66, v65, v64);
  return swift_endAccess();
}

uint64_t sub_24F7E0B0C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24F7E14B8();
    return swift_release();
  }
  return result;
}

uint64_t sub_24F7E0B6C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24F7E0ED8();
    return swift_release();
  }
  return result;
}

void sub_24F7E0BCC()
{
  id v1 = *(id *)(v0 + *(void *)(*(void *)v0 + 112));
  sub_24F8796E0((uint64_t)sub_24F7C44C8, 0);
}

uint64_t sub_24F7E0C60(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = _s17ValueSubscriptionC5StateOMa();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - v6 + 16;
  sub_24F787238(*a1);
  swift_beginAccess();
  sub_24F799984(a2 + 16, (uint64_t)v14, &qword_269A2B338);
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_beginAccess();
  sub_24F7E4F5C((uint64_t)v12, a2 + 16);
  swift_endAccess();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a2 + *(void *)(*(void *)a2 + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  swift_endAccess();
  sub_24F7E5134((uint64_t)v14, (uint64_t)v12);
  uint64_t v9 = swift_allocObject();
  uint64_t result = sub_24F7E5134((uint64_t)v12, v9 + 16);
  *a1 = (uint64_t)sub_24F7E51DC;
  a1[1] = v9;
  return result;
}

uint64_t sub_24F7E0E48(uint64_t a1)
{
  sub_24F799984(a1, (uint64_t)v4, &qword_269A2B338);
  uint64_t v1 = v5;
  if (!v5) {
    return sub_24F7E51E4((uint64_t)v4, &qword_269A2B338);
  }
  uint64_t v2 = v6;
  sub_24F7811D0(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v4);
}

void sub_24F7E0ED8()
{
  id v1 = *(id *)(v0 + *(void *)(*(void *)v0 + 112));
  sub_24F832B4C((uint64_t)sub_24F7C46CC, 0, (void (*)(id))sub_24F7E5110);
}

uint64_t sub_24F7E0F64(uint64_t *a1, char *a2)
{
  uint64_t v56 = a2;
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 80);
  uint64_t v5 = *(void *)(*a1 + 88);
  uint64_t v6 = _s17ValueSubscriptionC5StateOMa();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int64_t v51 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v50 = (char *)v47 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)v47 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v47 - v14;
  uint64_t v54 = v5;
  uint64_t v55 = v4;
  uint64_t v16 = _s17ValueSubscriptionC9ObservingVMa();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v47 - v20;
  uint64_t v22 = v3;
  uint64_t v23 = v7;
  uint64_t v24 = (uint64_t)a1 + *(void *)(v22 + 104);
  swift_beginAccess();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v57 = v24;
  v25(v15, v24, v6);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v6);
  }
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v47[1] = v17 + 32;
  uint64_t v48 = v23;
  v47[0] = v26;
  v26(v21, v15, v16);
  uint64_t v49 = v16;
  unint64_t v27 = *(void *)&v21[*(int *)(v16 + 36)];
  unint64_t v28 = sub_24F8CEB00();
  sub_24F8CEB10();
  uint64_t v29 = v17;
  if (sub_24F8CEAF0())
  {
    sub_24F8CEB10();
    if (sub_24F8CEAF0()) {
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v49);
    }
  }
  sub_24F8CEB10();
  if ((sub_24F8CEAF0() & 1) == 0)
  {
    sub_24F8CEB10();
    if ((sub_24F8CEAF0() & 1) != 0 || v28 >= v27) {
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v49);
    }
  }
  uint64_t v30 = v21;
  uint64_t v31 = sub_24F8CEAC0();
  char v32 = v53;
  uint64_t v33 = v57;
  uint64_t v34 = v6;
  v25(v53, v57, v6);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v49);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v32, v6);
  }
  uint64_t v56 = v30;
  uint64_t v35 = v29;
  uint64_t v36 = v52;
  uint64_t v37 = v49;
  ((void (*)(char *, char *, uint64_t))v47[0])(v52, v32, v49);
  uint64_t v38 = *(int *)(v37 + 36);
  uint64_t v39 = *(void *)&v36[v38];
  sub_24F8CEB10();
  if ((sub_24F8CEAF0() & 1) == 0)
  {
    sub_24F8CEB10();
    char v40 = sub_24F8CEAF0();
    uint64_t v41 = sub_24F8CEB10();
    if ((v40 & 1) == 0)
    {
      uint64_t result = sub_24F8CEAF0();
      if (result) {
        goto LABEL_14;
      }
      if ((v39 | v31) < 0)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v41 = v39 + v31;
      if (__OFADD__(v39, v31))
      {
LABEL_14:
        uint64_t v41 = sub_24F8CEB10();
      }
      else if (v41 < 0)
      {
LABEL_32:
        __break(1u);
        return result;
      }
    }
    *(void *)&v36[v38] = v41;
    uint64_t v39 = v41;
  }
  uint64_t v43 = v48;
  sub_24F8CEB10();
  if ((sub_24F8CEAF0() & 1) == 0)
  {
    sub_24F8CEB10();
    uint64_t result = sub_24F8CEAF0();
    if (result)
    {
      uint64_t v44 = sub_24F8CEB10();
LABEL_26:
      *(void *)&v36[v38] = v44;
      goto LABEL_27;
    }
    if (v39 < 0)
    {
      __break(1u);
    }
    else if (v39)
    {
      uint64_t v44 = v39 - 1;
      goto LABEL_26;
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_27:
  (*(void (**)(char *, uint64_t))(v35 + 8))(v56, v37);
  uint64_t v45 = v50;
  ((void (*)(char *, char *, uint64_t))v47[0])(v50, v36, v37);
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = v51;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v51, v45, v34);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 40))(v33, v46, v34);
  return swift_endAccess();
}

void sub_24F7E14B8()
{
  id v1 = *(id *)(v0 + *(void *)(*(void *)v0 + 112));
  sub_24F8796E0((uint64_t)sub_24F7E1538, 0);
}

unint64_t sub_24F7E1538()
{
  return 0xD000000000000015;
}

id sub_24F7E1554(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v34 = a1;
  uint64_t v35 = a3;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 80);
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t v7 = _s17ValueSubscriptionC5StateOMa();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v31 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v33 = v6;
  uint64_t v13 = _s17ValueSubscriptionC9ObservingVMa();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  char v32 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v29 - v17;
  uint64_t v19 = (uint64_t)a2 + *(void *)(v4 + 104);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, v19, v7);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  uint64_t v30 = v5;
  uint64_t v20 = v34;
  sub_24F787238(*v34);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v29(v18, v12, v13);
  uint64_t v37 = 0;
  memset(v36, 0, sizeof(v36));
  swift_beginAccess();
  sub_24F7E4F5C((uint64_t)v36, (uint64_t)(a2 + 2));
  swift_endAccess();
  uint64_t v21 = v31;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v19, v21, v7);
  swift_endAccess();
  uint64_t v22 = v32;
  uint64_t v23 = (void (*)(unint64_t, char *, uint64_t))v29;
  v29(v32, v18, v13);
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v33;
  *(void *)(v25 + 16) = v30;
  *(void *)(v25 + 24) = v26;
  v23(v25 + v24, v22, v13);
  unint64_t v27 = v35;
  *(void *)(v25 + ((v15 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = v35;
  *uint64_t v20 = (uint64_t)sub_24F7E5088;
  v20[1] = v25;
  return v27;
}

uint64_t sub_24F7E18DC()
{
  return sub_24F8CEAA0();
}

uint64_t sub_24F7E1918()
{
  sub_24F7E51E4(v0 + 16, &qword_269A2B338);
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = _s17ValueSubscriptionC5StateOMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_24F7E19E8()
{
  uint64_t v0 = sub_24F7E1918();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

void sub_24F7E1A3C()
{
}

void sub_24F7E1A60()
{
}

uint64_t static ValueObservation<>.trackingConstantRegion<A>(_:)()
{
  sub_24F77EEA4();
  uint64_t v1 = (void *)swift_allocObject();
  sub_24F781430(v1);
  swift_getWitnessTable();
  sub_24F77B540();
  v0[11] = 0;
  v0[12] = sub_24F7E1B8C;
  v0[13] = v1;
  return swift_retain();
}

uint64_t sub_24F7E1B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_24F7DFD8C(a1, a2, a3);
  return swift_retain();
}

uint64_t sub_24F7E1B54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F7E1B8C@<X0>(void *a1@<X8>)
{
  return sub_24F7E1B1C(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t static ValueObservation<>.tracking<A>(regions:fetch:)()
{
  sub_24F77C008();
  uint64_t v2 = (void *)swift_allocObject();
  sub_24F781430(v2);
  swift_getWitnessTable();
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(unsigned char *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = v0;
  *(void *)(v1 + 96) = sub_24F7E5788;
  *(void *)(v1 + 104) = v2;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t static ValueObservation<>.tracking<A>(_:)()
{
  sub_24F77EEA4();
  uint64_t v1 = (void *)swift_allocObject();
  sub_24F781430(v1);
  swift_getWitnessTable();
  sub_24F77B540();
  v0[11] = 1;
  v0[12] = sub_24F7E5788;
  v0[13] = v1;
  return swift_retain();
}

uint64_t sub_24F7E1CEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F7E1D08(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  if (a1[4]) {
    swift_release();
  }
  if (a1[6]) {
    swift_release();
  }
  if (a1[8]) {
    swift_release();
  }
  if (a1[11] >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_24F7E1D9C(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v11 = *(void *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  unint64_t v13 = *(void *)(a2 + 88);
  if (v13 >= 2) {
    unint64_t v13 = swift_bridgeObjectRetain();
  }
  uint64_t v15 = *(void *)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v14;
  swift_retain();
  return a1;
}

uint64_t sub_24F7E1EB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v15;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (*(void *)(a1 + 64))
  {
    if (v16)
    {
      uint64_t v17 = a2[9];
      *(void *)(a1 + 64) = v16;
      *(void *)(a1 + 72) = v17;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = a2[9];
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v18;
    swift_retain();
    goto LABEL_36;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
LABEL_36:
  uint64_t v19 = (unint64_t *)(a1 + 88);
  unint64_t v20 = *(void *)(a1 + 88);
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  unint64_t v21 = a2[11];
  if (v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v19 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24F7E51E4(a1 + 88, qword_269A2AF30);
      *uint64_t v19 = a2[11];
    }
  }
  else
  {
    *uint64_t v19 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v22 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v22;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_24F7E2114(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t sub_24F7E211C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v15;
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (*(void *)(a1 + 64))
  {
    if (v16)
    {
      uint64_t v17 = a2[9];
      *(void *)(a1 + 64) = v16;
      *(void *)(a1 + 72) = v17;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = a2[9];
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v18;
    goto LABEL_36;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
LABEL_36:
  unint64_t v20 = (unint64_t *)(a1 + 88);
  unint64_t v19 = *(void *)(a1 + 88);
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  unint64_t v21 = a2[11];
  if (v19 >= 2)
  {
    if (v21 >= 2)
    {
      *unint64_t v20 = v21;
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    sub_24F7E51E4(a1 + 88, qword_269A2AF30);
  }
  *unint64_t v20 = v21;
LABEL_41:
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  swift_release();
  return a1;
}

uint64_t sub_24F7E2314(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 96);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F7E2354(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 96) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24F7E23B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F7E289C(a1, a2, a3, MEMORY[0x263F8F688]);
}

uint64_t *sub_24F7E23D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_24F7688B8(&qword_26B1F7040);
    uint64_t v7 = sub_24F8CF240();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_24F7E24C8(uint64_t a1)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v2 = sub_24F8CF240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_24F7E2568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v6 = sub_24F8CF240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_24F7E2610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v6 = sub_24F8CF240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24F7E26C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v6 = sub_24F8CF240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24F7E2760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v6 = sub_24F8CF240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_24F7E2808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F7E281C);
}

uint64_t sub_24F7E281C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F7E2D68(a1, a2, a3, MEMORY[0x263F8F688]);
}

uint64_t sub_24F7E2834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F7E2848);
}

void sub_24F7E2848(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

uint64_t type metadata accessor for AsyncValueObservation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F7E2878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F7E289C(a1, a2, a3, MEMORY[0x263F8F6A8]);
}

uint64_t sub_24F7E289C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_24F7688B8(&qword_26B1F7040);
  uint64_t result = a4(319, v5, v6, MEMORY[0x263F8E4E0]);
  if (v8 <= 0x3F)
  {
    sub_24F77DF00(result);
    sub_24F77C6C0();
    return 0;
  }
  return result;
}

uint64_t *sub_24F7E2928(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_24F7688B8(&qword_26B1F7040);
    uint64_t v7 = sub_24F8CF2A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_24F7E2A14(uint64_t a1)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v2 = sub_24F8CF2A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_24F7E2AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v6 = sub_24F8CF2A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_24F7E2B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v6 = sub_24F8CF2A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24F7E2BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v6 = sub_24F8CF2A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24F7E2C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v6 = sub_24F8CF2A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_24F7E2D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F7E2D50);
}

uint64_t sub_24F7E2D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F7E2D68(a1, a2, a3, MEMORY[0x263F8F6A8]);
}

uint64_t sub_24F7E2D68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v8 = sub_24F780C1C();
  a4(v8);
  sub_24F77F4A8();
  if (*(_DWORD *)(v10 + 84) == a2)
  {
    return sub_24F777048(a1, a2, v9);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_24F7E2E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F7E2E38);
}

void sub_24F7E2E38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

void sub_24F7E2E50(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(void, uint64_t, uint64_t, void))
{
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v11 = sub_24F7688B8(&qword_26B1F7040);
  a5(0, v10, v11, MEMORY[0x263F8E4E0]);
  sub_24F77F4A8();
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    sub_24F7771BC(a1, a2, a2, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for AsyncValueObservation.Iterator()
{
  return sub_24F777DE0();
}

uint64_t type metadata accessor for DatabasePublishers.Value()
{
  return sub_24F777DE0();
}

uint64_t sub_24F7E2F3C()
{
  uint64_t result = _s17ValueSubscriptionC5StateOMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t _s17ValueSubscriptionC5StateOMa()
{
  return sub_24F777DE0();
}

uint64_t sub_24F7E3000()
{
  uint64_t result = _s17ValueSubscriptionC16WaitingForDemandVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s17ValueSubscriptionC9ObservingVMa();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24F7E30E0(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 16;
  unint64_t v9 = v7 + 8;
  if (v9 <= v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = v9;
  }
  int v11 = *(_DWORD *)(v5 + 80);
  if ((v11 & 0x1000F8) != 0 || (v10 | 1) > 0x18)
  {
    uint64_t v13 = *(void *)__src;
    *uint64_t v4 = *(void *)__src;
    uint64_t v4 = (void *)(v13 + ((unsigned __int16)((v11 & 0xF8) + 23) & (unsigned __int16)~(v11 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v14 = __src[v10];
    if ((v10 & 0xFFFFFFF8) != 0 && v14 >= 2) {
      unsigned int v14 = *(_DWORD *)__src + 2;
    }
    if (v14 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v4 + v10) = 1;
      return v4;
    }
    if (v14)
    {
      memcpy(__dst, __src, v10 | 1);
      return v4;
    }
    (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    uint64_t v16 = (void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = v16[1];
    uint64_t v18 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v18 = *v16;
    v18[1] = v17;
    *((unsigned char *)v4 + v10) = 0;
  }
  swift_retain();
  return v4;
}

_DWORD *sub_24F7E326C(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = (*(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = v3 + 16;
  unint64_t v5 = v3 + 8;
  if (v5 <= v4) {
    unint64_t v5 = v4;
  }
  uint64_t v6 = v5 & 0xFFFFFFF8;
  unsigned int v7 = *((unsigned __int8 *)result + v5);
  if (v7 >= 2 && v6 != 0) {
    unsigned int v7 = *result + 2;
  }
  if (v7 == 1)
  {
    unint64_t v9 = *(uint64_t (**)(void))(v2 + 8);
    return (_DWORD *)v9();
  }
  else if (!v7)
  {
    (*(void (**)(_DWORD *))(v2 + 8))(result);
    return (_DWORD *)swift_release();
  }
  return result;
}

unsigned char *sub_24F7E3380(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 16;
  unint64_t v9 = v7 + 8;
  if (v9 <= v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = v9;
  }
  unsigned int v11 = __src[v10];
  if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0) {
    unsigned int v11 = *(_DWORD *)__src + 2;
  }
  if (v11 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v10] = 1;
  }
  else if (v11)
  {
    memcpy(__dst, __src, v10 | 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    uint64_t v13 = (void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = v13[1];
    uint64_t v15 = (void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v15 = *v13;
    v15[1] = v14;
    __dst[v10] = 0;
    swift_retain();
  }
  return __dst;
}

unsigned __int8 *sub_24F7E34D0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v9 = v8 + 16;
    unint64_t v10 = v8 + 8;
    if (v10 <= v9) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = v10;
    }
    unsigned int v12 = __dst[v11];
    if (v12 >= 2 && (v11 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = *(_DWORD *)__dst + 2;
    }
    if (v12 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v12)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      swift_release();
    }
    unsigned int v14 = __src[v11];
    if ((v11 & 0xFFFFFFF8) != 0 && v14 >= 2) {
      unsigned int v14 = *(_DWORD *)__src + 2;
    }
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v11] = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v11 | 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      uint64_t v16 = (void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      uint64_t v17 = v16[1];
      uint64_t v18 = (void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v18 = *v16;
      v18[1] = v17;
      __dst[v11] = 0;
      swift_retain();
    }
  }
  return __dst;
}

unsigned char *sub_24F7E36B4(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 16;
  unint64_t v9 = v7 + 8;
  if (v9 <= v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = v9;
  }
  unsigned int v11 = __src[v10];
  if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0) {
    unsigned int v11 = *(_DWORD *)__src + 2;
  }
  if (v11 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v10] = 1;
  }
  else if (v11)
  {
    memcpy(__dst, __src, v10 | 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_OWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v10] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_24F7E3800(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v9 = v8 + 16;
    unint64_t v10 = v8 + 8;
    if (v10 <= v9) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = v10;
    }
    unsigned int v12 = __dst[v11];
    if (v12 >= 2 && (v11 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = *(_DWORD *)__dst + 2;
    }
    if (v12 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v12)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      swift_release();
    }
    unsigned int v14 = __src[v11];
    if ((v11 & 0xFFFFFFF8) != 0 && v14 >= 2) {
      unsigned int v14 = *(_DWORD *)__src + 2;
    }
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v11] = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v11 | 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_OWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v11] = 0;
    }
  }
  return __dst;
}

uint64_t sub_24F7E39E0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = v3 + 16;
  unint64_t v5 = v3 + 8;
  if (v5 <= v4) {
    unint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_20;
  }
  uint64_t v6 = v5 | 1;
  char v7 = 8 * (v5 | 1);
  if ((v5 | 1) <= 3)
  {
    unsigned int v8 = (a2 + ~(-1 << v7) - 253) >> v7;
    if (v8 > 0xFFFE)
    {
      int v9 = *(_DWORD *)&a1[v6];
      if (!v9) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v8 > 0xFE)
    {
      int v9 = *(unsigned __int16 *)&a1[v6];
      if (!*(_WORD *)&a1[v6]) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (!v8) {
      goto LABEL_20;
    }
  }
  int v9 = a1[v6];
  if (!a1[v6])
  {
LABEL_20:
    unsigned int v13 = a1[v5];
    if (v13 >= 3) {
      return (v13 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
LABEL_13:
  int v11 = (v9 - 1) << v7;
  if (v6 >= 4) {
    int v11 = 0;
  }
  if (v6 == 1) {
    int v12 = *a1;
  }
  else {
    int v12 = *(_DWORD *)a1;
  }
  return (v12 | v11) + 254;
}

void sub_24F7E3AC4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = (*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v5 + 16;
  unint64_t v7 = v5 + 8;
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  size_t v8 = v7 | 1;
  char v9 = 8 * (v7 | 1);
  if (a3 < 0xFE)
  {
    int v10 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v13 = (a3 + ~(-1 << v9) - 253) >> v9;
    if (v13 > 0xFFFE)
    {
      int v10 = 4;
    }
    else if (v13 >= 0xFF)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 != 0;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 <= 0xFD)
  {
    switch(v10)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_23;
      case 3:
        goto LABEL_31;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      default:
LABEL_23:
        if (a2) {
LABEL_24:
        }
          a1[v7] = -(char)a2;
        break;
    }
    return;
  }
  unsigned int v11 = a2 - 254;
  if (v8 < 4)
  {
    int v12 = (v11 >> v9) + 1;
    v11 &= ~(-1 << v9);
    bzero(a1, v8);
    if (v8 == 1)
    {
      *a1 = v11;
      goto LABEL_20;
    }
  }
  else
  {
    bzero(a1, v7 | 1);
    int v12 = 1;
  }
  *(_DWORD *)a1 = v11;
LABEL_20:
  switch(v10)
  {
    case 1:
      a1[v8] = v12;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v12;
      break;
    case 3:
LABEL_31:
      __break(1u);
      JUMPOUT(0x24F7E3C74);
    case 4:
      *(_DWORD *)&a1[v8] = v12;
      break;
    default:
      return;
  }
}

uint64_t sub_24F7E3C9C(_DWORD *a1, uint64_t a2)
{
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = v2 + 16;
  unint64_t v4 = v2 + 8;
  if (v4 <= v3) {
    unint64_t v4 = v3;
  }
  uint64_t v5 = v4 & 0xFFFFFFF8;
  uint64_t v6 = *((unsigned __int8 *)a1 + v4);
  if (v6 >= 2 && v5 != 0) {
    return (*a1 + 2);
  }
  return v6;
}

void sub_24F7E3CF0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v5 = v4 + 16;
  size_t v6 = v4 + 8;
  if (v6 <= v5) {
    size_t v6 = v5;
  }
  if (a2 > 1)
  {
    if (v6) {
      char v7 = 2;
    }
    else {
      char v7 = a2;
    }
    if (v6) {
      unsigned int v8 = a2 - 2;
    }
    else {
      unsigned int v8 = 0;
    }
    a1[v6] = v7;
    bzero(a1, v6);
    *(_DWORD *)a1 = v8;
  }
  else
  {
    a1[v6] = a2;
  }
}

uint64_t _s17ValueSubscriptionC16WaitingForDemandVMa()
{
  return sub_24F777DE0();
}

uint64_t _s17ValueSubscriptionC9ObservingVMa()
{
  return sub_24F777DE0();
}

uint64_t sub_24F7E3DA8()
{
  return sub_24F7E43B4();
}

uint64_t *sub_24F7E3DB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_24F7E3EB0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24F7E3EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24F7E3F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24F7E3FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24F7E4050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24F7E40CC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24F7E41D0);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return sub_24F777048((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_24F7E41E4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
  }
  else
  {
    int v9 = a3 - v7;
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v13 = a2 - v7;
    }
    else {
      int v13 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x24F7E437CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        sub_24F7771BC((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t sub_24F7E43A4()
{
  return sub_24F7E43B4();
}

uint64_t sub_24F7E43B4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    sub_24F77DF00(result);
    sub_24F77C6C0();
    return 0;
  }
  return result;
}

uint64_t sub_24F7E4414(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24F7E4550);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return sub_24F777048((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_24F7E4564(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x24F7E4734);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          void *v17 = v18;
        }
        else
        {
          sub_24F7771BC((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ValueObservationTrackingMode(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for ValueObservationTrackingMode(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for ValueObservationTrackingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for ValueObservationTrackingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ValueObservationTrackingMode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ValueObservationTrackingMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ValueObservationTrackingMode()
{
  return &type metadata for ValueObservationTrackingMode;
}

void *destroy for ValueObservationEvents(void *result)
{
  unint64_t v1 = result;
  if (*result) {
    unint64_t result = (void *)swift_release();
  }
  if (v1[2]) {
    unint64_t result = (void *)swift_release();
  }
  if (v1[4]) {
    unint64_t result = (void *)swift_release();
  }
  if (v1[6]) {
    unint64_t result = (void *)swift_release();
  }
  if (v1[8])
  {
    return (void *)swift_release();
  }
  return result;
}

void *initializeWithCopy for ValueObservationEvents(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  uint64_t v9 = a2[6];
  if (v9)
  {
    uint64_t v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  uint64_t v11 = a2[8];
  if (v11)
  {
    uint64_t v12 = a2[9];
    a1[8] = v11;
    a1[9] = v12;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  }
  return a1;
}

void *assignWithCopy for ValueObservationEvents(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (!a1[8])
  {
    if (v16)
    {
      uint64_t v18 = a2[9];
      a1[8] = v16;
      a1[9] = v18;
      swift_retain();
      return a1;
    }
LABEL_35:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_35;
  }
  uint64_t v17 = a2[9];
  a1[8] = v16;
  a1[9] = v17;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ValueObservationEvents(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (!a1[8])
  {
    if (v16)
    {
      uint64_t v18 = a2[9];
      a1[8] = v16;
      a1[9] = v18;
      return a1;
    }
LABEL_35:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_35;
  }
  uint64_t v17 = a2[9];
  a1[8] = v16;
  a1[9] = v17;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ValueObservationEvents(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 80))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ValueObservationEvents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ValueObservationEvents()
{
  return &type metadata for ValueObservationEvents;
}

uint64_t sub_24F7E4F1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F7E4F38()
{
  return swift_getWitnessTable();
}

id sub_24F7E4F54(uint64_t *a1)
{
  return sub_24F7E1554(a1, *(uint64_t **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_24F7E4F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_269A2B338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F7E4FC4()
{
  sub_24F781D28();
  uint64_t v1 = _s17ValueSubscriptionC9ObservingVMa();
  sub_24F77FC94(v1);
  unint64_t v4 = (*(void *)(v3 + 64)
      + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24F7739F4();
  v5();

  return swift_deallocObject();
}

uint64_t sub_24F7E5088()
{
  sub_24F781D28();
  uint64_t v0 = _s17ValueSubscriptionC9ObservingVMa();
  sub_24F77FC94(v0);
  return sub_24F7E18DC();
}

uint64_t sub_24F7E5110()
{
  return sub_24F7E0F64(*(uint64_t **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_24F7E512C(uint64_t *a1)
{
  return sub_24F7E0C60(a1, v1);
}

uint64_t sub_24F7E5134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_269A2B338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F7E519C()
{
  if (*(void *)(v0 + 40)) {
    _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  }
  return swift_deallocObject();
}

uint64_t sub_24F7E51DC()
{
  return sub_24F7E0E48(v0 + 16);
}

uint64_t sub_24F7E51E4(uint64_t a1, uint64_t *a2)
{
  sub_24F781274(a2);
  sub_24F770E70();
  sub_24F7739F4();
  v3();
  return a1;
}

uint64_t sub_24F7E5234()
{
  return sub_24F7E025C(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24F7E5250()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24F7E5288()
{
  return sub_24F7E0B0C();
}

uint64_t sub_24F7E5294()
{
  return sub_24F7E0B6C();
}

uint64_t sub_24F7E52A0()
{
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F8CF270();
  sub_24F770E70();
  sub_24F7739F4();
  v0();
  return swift_deallocObject();
}

uint64_t sub_24F7E5344(void *a1)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v2 = sub_24F8CF270();
  sub_24F77DF00(v2);
  return sub_24F7DF34C(a1);
}

uint64_t sub_24F7E53C0()
{
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F8CF270();
  sub_24F770E70();
  sub_24F7739F4();
  v0();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F7E5478(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v4 = sub_24F8CF270();
  sub_24F77FC94(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_24F7DF3B0(a1, v1 + v9, v10, v3);
}

uint64_t sub_24F7E551C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t (*a4)(uint64_t *))
{
  uint64_t v6 = a1;
  a2(&v6);
  return a4(&v6);
}

uint64_t sub_24F7E5574()
{
  return sub_24F7DF5E4();
}

uint64_t sub_24F7E5580()
{
  return sub_24F83CB70(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_24F7E5594(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_24F7E55CC(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24F7E55F8(uint64_t *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t (*a4)(uint64_t *))
{
  return sub_24F7E551C(*a1, a2, a3, a4);
}

uint64_t sub_24F7E5604(uint64_t *a1)
{
  return sub_24F7E55F8(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t *))(v1 + 32));
}

uint64_t sub_24F7E5614()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F7E564C()
{
  return swift_deallocObject();
}

uint64_t sub_24F7E565C()
{
  swift_release();
  sub_24F77B864();
  return swift_deallocObject();
}

uint64_t sub_24F7E568C(uint64_t a1)
{
  return sub_24F869D3C(a1, *(uint64_t (**)(void))(v1 + 32));
}

uint64_t sub_24F7E5698(uint64_t a1)
{
  return sub_24F869D14(a1, *(uint64_t (**)(void))(v1 + 32));
}

uint64_t sub_24F7E56A8()
{
  swift_release();
  swift_release();
  sub_24F77B864();
  return swift_deallocObject();
}

uint64_t sub_24F7E56E0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F7E5720()
{
  return sub_24F7DCF3C(*(void (**)(char *))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 16));
}

void sub_24F7E578C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = a1;
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_24F795610();
    uint64_t v6 = sub_24F770668(v5);
    if ((v6 & 0x8000000000000000) == 0)
    {
      unint64_t v8 = v6;
      if (v6 < 1 << *(unsigned char *)(v5 + 32))
      {
        uint64_t v9 = v5 + 64;
        uint64_t v25 = v5 + 64;
        uint64_t v26 = v5;
        while ((*(void *)(v9 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
        {
          if (v7 != *(_DWORD *)(v5 + 36)) {
            goto LABEL_20;
          }
          int v29 = v7;
          uint64_t v28 = v4;
          uint64_t v10 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v8);
          uint64_t v11 = *v10;
          uint64_t v12 = v10[1];
          uint64_t v13 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v8);
          uint64_t v14 = *v13;
          uint64_t v15 = v13[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v16 = a2(v11, v12, v14, v15);
          if (v3)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          uint64_t v19 = v16;
          uint64_t v20 = v17;
          uint64_t v21 = v18;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v22 = *(void *)(v30 + 16);
          if (v22 >= *(void *)(v30 + 24) >> 1) {
            sub_24F795610();
          }
          *(void *)(v30 + 16) = v22 + 1;
          uint64_t v23 = (void *)(v30 + 24 * v22);
          v23[4] = v19;
          v23[5] = v20;
          v23[6] = v21;
          uint64_t v5 = v26;
          if ((uint64_t)v8 >= -(-1 << *(unsigned char *)(v26 + 32))) {
            goto LABEL_21;
          }
          uint64_t v9 = v25;
          if ((*(void *)(v25 + 8 * (v8 >> 6)) & (1 << v8)) == 0) {
            goto LABEL_22;
          }
          if (v29 != *(_DWORD *)(v26 + 36)) {
            goto LABEL_23;
          }
          uint64_t v24 = sub_24F8CF6F0();
          uint64_t v4 = v28 - 1;
          if (v28 == 1) {
            return;
          }
          unint64_t v8 = v24;
          uint64_t v3 = 0;
          if ((v24 & 0x8000000000000000) == 0)
          {
            int v7 = *(_DWORD *)(v26 + 36);
            if (v24 < 1 << *(unsigned char *)(v26 + 32)) {
              continue;
            }
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
    }
LABEL_24:
    __break(1u);
  }
}

uint64_t sub_24F7E59D8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_24F795610();
    uint64_t v3 = v18;
    uint64_t v5 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v7 = *(v5 - 2);
      uint64_t v6 = *(v5 - 1);
      uint64_t v8 = *v5;
      swift_bridgeObjectRetain();
      uint64_t v9 = a2(v7, v6, v8);
      uint64_t v11 = v10;
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      unint64_t v14 = *(void *)(v18 + 16);
      if (v14 >= *(void *)(v18 + 24) >> 1) {
        sub_24F795610();
      }
      v5 += 3;
      *(void *)(v18 + 16) = v14 + 1;
      uint64_t v15 = (void *)(v18 + 24 * v14);
      v15[4] = v9;
      v15[5] = v11;
      v15[6] = v13;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_24F7E5AF4(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4] >> 1;
  if (__OFSUB__(v2, v1))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v29 = a1[4] >> 1;
  uint64_t v30 = a1[3];
  uint64_t v28 = a1[2];
  uint64_t v31 = *a1;
  uint64_t v27 = *(void *)(*a1 + 16);
  if (v2 - v1 >= v27) {
    uint64_t v3 = *(void *)(*a1 + 16);
  }
  else {
    uint64_t v3 = v2 - v1;
  }
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_24F795FC0(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    if (v3)
    {
      uint64_t v4 = v31;
      uint64_t v5 = (uint64_t *)(v31 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v6 = v3;
      uint64_t v8 = v29;
      uint64_t v7 = v30;
      uint64_t v9 = v30;
      uint64_t v10 = v28;
      uint64_t v11 = v27;
      while (v11)
      {
        if (v8 == v9) {
          goto LABEL_35;
        }
        if (v9 >= v8) {
          goto LABEL_36;
        }
        uint64_t v12 = *v5;
        uint64_t v13 = *(void *)(v10 + 8 * v9);
        if (v13 < *v5) {
          goto LABEL_37;
        }
        if (v12 < 0) {
          goto LABEL_43;
        }
        unint64_t v15 = *(void *)(v32 + 16);
        unint64_t v14 = *(void *)(v32 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_24F795FC0(v14 > 1, v15 + 1, 1);
          uint64_t v11 = v27;
          uint64_t v10 = v28;
          uint64_t v8 = v29;
          uint64_t v7 = v30;
          uint64_t v4 = v31;
        }
        *(void *)(v32 + 16) = v15 + 1;
        uint64_t v16 = v32 + 16 * v15;
        *(void *)(v16 + 32) = v12;
        *(void *)(v16 + 40) = v13;
        ++v5;
        ++v9;
        if (!--v6) {
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
    }
    else
    {
      uint64_t v4 = v31;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v8 = v29;
      uint64_t v7 = v30;
      uint64_t v9 = v30;
      uint64_t v10 = v28;
LABEL_18:
      unint64_t v17 = *(void *)(v4 + 16);
      if (v3 == v17)
      {
LABEL_19:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return v32;
      }
      uint64_t v19 = v4 + 32;
      uint64_t v20 = v9;
      while (v3 < v17)
      {
        if (v8 == v20) {
          goto LABEL_19;
        }
        if (v9 < v7 || v20 >= v8) {
          goto LABEL_39;
        }
        uint64_t v22 = *(void *)(v19 + 8 * v3);
        uint64_t v23 = *(void *)(v10 + 8 * v20);
        if (v23 < v22) {
          goto LABEL_40;
        }
        if (v22 < 0) {
          goto LABEL_43;
        }
        unint64_t v25 = *(void *)(v32 + 16);
        unint64_t v24 = *(void *)(v32 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_24F795FC0(v24 > 1, v25 + 1, 1);
          uint64_t v10 = v28;
          uint64_t v8 = v29;
          uint64_t v7 = v30;
          uint64_t v4 = v31;
        }
        ++v3;
        *(void *)(v32 + 16) = v25 + 1;
        uint64_t v26 = v32 + 16 * v25;
        *(void *)(v26 + 32) = v22;
        *(void *)(v26 + 40) = v23;
        unint64_t v17 = *(void *)(v4 + 16);
        ++v20;
        if (v3 == v17) {
          goto LABEL_19;
        }
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F7E5DAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 24 * v1 + 8);
  swift_bridgeObjectRetain();
  return v2;
}

double sub_24F7E5E0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_24F7E99C8(a1 + 40 * v2 - 8, a2);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_24F7E5E50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1) {
    return *(void *)(a1 + 8 * v1 + 24);
  }
  else {
    return 0;
  }
}

uint64_t sub_24F7E5E74@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = result + 40 * v3;
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v5 = *(void *)v4;
    uint64_t v7 = *(unsigned __int8 *)(v4 + 8);
    uint64_t v9 = *(void *)(v4 + 16);
    uint64_t v8 = *(void *)(v4 + 24);
    swift_bridgeObjectRetain();
    double result = swift_retain();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  a2[2] = v7;
  a2[3] = v9;
  a2[4] = v8;
  return result;
}

uint64_t sub_24F7E5EF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 16 * v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

void *sub_24F7E5F3C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)(a4 + 8) + 8))(v11, a2, a3);
  if (v5) {
    return (void *)v4;
  }
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  sub_24F7811D0(v11, v12);
  double result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 8))(&v10, v7, v8);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v10 + 16) > a1)
  {
    uint64_t v4 = *(void *)(v10 + 24 * a1 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v11);
    return (void *)v4;
  }
  __break(1u);
  return result;
}

uint64_t splittingRowAdapters(columnCounts:)(uint64_t a1)
{
  v20[19] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24F781274(qword_26B1F6E10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
    *(void *)(inited + 32) = 0;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    for (uint64_t i = 0; i != v1; ++i)
    {
      uint64_t v6 = *(void *)(a1 + 8 * i + 32);
      BOOL v7 = __OFADD__(v4, v6);
      v4 += v6;
      if (v7) {
        __break(1u);
      }
      unint64_t v8 = *(void *)(inited + 24);
      if (i + 1 >= v8 >> 1)
      {
        sub_24F787E80(v8 > 1, i + 2, 1, inited);
        uint64_t inited = v9;
      }
      *(void *)(inited + 16) = i + 2;
      *(void *)(inited + 8 * i + 40) = v4;
    }
    swift_bridgeObjectRelease();
    v20[0] = inited;
    v20[1] = sub_24F81DD38(1, inited);
    v20[2] = v10;
    v20[3] = v11;
    v20[4] = v12;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24F7E5AF4(v20);
    swift_unknownObjectRelease();
    uint64_t v14 = sub_24F7E5E50(inited);
    char v16 = v15;
    swift_bridgeObjectRelease();
    if (v16)
    {
      __break(1u);
    }
    else if ((v14 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = sub_24F7E65C0(v13);
      swift_bridgeObjectRelease();
      sub_24F781274(&qword_269A2A3E8);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_24F8DDBF0;
      *(void *)(v18 + 56) = &type metadata for SuffixRowAdapter;
      *(void *)(v18 + 64) = &protocol witness table for SuffixRowAdapter;
      *(void *)(v18 + 32) = v14;
      sub_24F7932F4();
      return v17;
    }
    sub_24F770EAC();
    uint64_t result = sub_24F77DF14();
    __break(1u);
  }
  else
  {
    sub_24F781274(&qword_269A2A3E8);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_24F8DDBF0;
    *(void *)(result + 56) = &type metadata for SuffixRowAdapter;
    *(void *)(result + 64) = &protocol witness table for SuffixRowAdapter;
    *(void *)(result + 32) = 0;
  }
  return result;
}

GRDBInternal::SuffixRowAdapter __swiftcall SuffixRowAdapter.init(fromIndex:)(GRDBInternal::SuffixRowAdapter fromIndex)
{
  if (fromIndex.index < 0)
  {
    sub_24F770EAC();
    fromIndex.index = sub_24F77DF14();
    __break(1u);
  }
  else
  {
    v1->index = fromIndex.index;
  }
  return fromIndex;
}

uint64_t RangeRowAdapter.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (result < 0)
  {
    sub_24F770EAC();
    uint64_t result = sub_24F77DF14();
    __break(1u);
  }
  else
  {
    *a3 = result;
    a3[1] = a2;
  }
  return result;
}

{
  uint64_t v3;

  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v3 = a2 + 1;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
    }
    else if (v3 >= result)
    {
      *a3 = result;
      a3[1] = v3;
      return result;
    }
    __break(1u);
  }
  sub_24F770EAC();
  uint64_t result = sub_24F77DF14();
  __break(1u);
  return result;
}

uint64_t sub_24F7E6318(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24F795610();
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_24F781274(&qword_26B1F5980);
      sub_24F781274(&qword_26B1F5988);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F795610();
        uint64_t v2 = v11;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        sub_24F795610();
        uint64_t v2 = v11;
      }
      *(void *)(v2 + 16) = v5 + 1;
      uint64_t v6 = (void *)(v2 + 24 * v5);
      v6[4] = v8;
      v6[5] = v9;
      v6[6] = v10;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24F7E6474(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24F795EF4();
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain();
      sub_24F781274(&qword_269A2A1A0);
      sub_24F781274(&qword_269A2A198);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F795EF4();
        uint64_t v2 = v11;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        sub_24F795EF4();
        uint64_t v2 = v11;
      }
      v4 += 24;
      *(void *)(v2 + 16) = v5 + 1;
      uint64_t v6 = v2 + 24 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v9;
      *(_DWORD *)(v6 + 48) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24F7E65C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_24F795F7C();
    uint64_t v2 = v12;
    uint64_t v4 = (long long *)(a1 + 32);
    do
    {
      long long v5 = *v4;
      uint64_t v12 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      if (v6 >= *(void *)(v2 + 24) >> 1)
      {
        long long v8 = v5;
        sub_24F795F7C();
        long long v5 = v8;
        uint64_t v2 = v12;
      }
      int v10 = &type metadata for RangeRowAdapter;
      uint64_t v11 = &protocol witness table for RangeRowAdapter;
      long long v9 = v5;
      *(void *)(v2 + 16) = v6 + 1;
      sub_24F794DE0(&v9, v2 + 40 * v6 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t _LayoutedColumnMapping._layoutColumns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F7E66BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v15 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain_n();
  sub_24F77C468();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v14 = a2;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 48;
    do
    {
      uint64_t v7 = sub_24F8CED00();
      uint64_t v9 = v8;
      unint64_t v10 = *(void *)(v15 + 16);
      if (v10 >= *(void *)(v15 + 24) >> 1) {
        sub_24F77C468();
      }
      *(void *)(v15 + 16) = v10 + 1;
      uint64_t v11 = (void *)(v15 + 24 * v10);
      v11[5] = v9;
      v11[6] = v5;
      v11[4] = v7;
      v6 += 24;
      ++v5;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    a2 = v14;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_24F7836EC(v15);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = a1;
  a2[1] = v12;
  return result;
}

void sub_24F7E67F0(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8 = swift_unknownObjectRetain();
  uint64_t v9 = sub_24F81D9C8(v8, a1, a2, a3);
  uint64_t v21 = MEMORY[0x263F8EE78];
  swift_unknownObjectRetain();
  sub_24F77C468();
  unint64_t v10 = (a3 >> 1) - a2;
  if (a3 >> 1 == a2)
  {
LABEL_9:
    swift_unknownObjectRelease();
    uint64_t v18 = sub_24F7836EC(v21);
    swift_unknownObjectRelease();
    *a4 = v9;
    a4[1] = v18;
  }
  else
  {
    if ((uint64_t)(a3 >> 1) > a2)
    {
      uint64_t v19 = v9;
      uint64_t v20 = a4;
      swift_unknownObjectRetain();
      uint64_t v11 = 0;
      uint64_t v12 = a1 + 24 * a2 + 16;
      while (!__OFADD__(v11, 1))
      {
        uint64_t v13 = sub_24F8CED00();
        uint64_t v15 = v14;
        unint64_t v16 = *(void *)(v21 + 16);
        if (v16 >= *(void *)(v21 + 24) >> 1) {
          sub_24F77C468();
        }
        *(void *)(v21 + 16) = v16 + 1;
        uint64_t v17 = (void *)(v21 + 24 * v16);
        void v17[4] = v13;
        void v17[5] = v15;
        v17[6] = v11++;
        v12 += 24;
        if (v10 == v11)
        {
          swift_unknownObjectRelease();
          uint64_t v9 = v19;
          a4 = v20;
          goto LABEL_9;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t _LayoutedColumnMapping._mapping.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _LayoutedColumnMapping._scopes.getter()
{
  sub_24F781274(&qword_26B1F78A8);
  return sub_24F8CEC70();
}

uint64_t sub_24F7E69EC()
{
  return _LayoutedColumnMapping._scopes.getter();
}

Swift::Int_optional __swiftcall _LayoutedColumnMapping._layoutIndex(ofColumn:)(Swift::String ofColumn)
{
  uint64_t v2 = *(void *)(v1 + 8);
  if (!*(void *)(v2 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_24F782950();
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v7 = sub_24F8CED00();
    uint64_t v5 = sub_24F77B7A4(v7, v8, v2);
    char v10 = v9;
    swift_bridgeObjectRelease();
    Swift::Bool v6 = v10 & 1;
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
  swift_bridgeObjectRelease();
  Swift::Bool v6 = 0;
LABEL_6:
  Swift::Int v11 = v5;
  result.value = v11;
  result.is_nil = v6;
  return result;
}

unint64_t sub_24F7E6AA8(uint64_t a1, uint64_t a2)
{
  return (unint64_t)_LayoutedColumnMapping._layoutIndex(ofColumn:)(*(Swift::String *)&a1);
}

uint64_t Statement._layoutColumns.getter()
{
  uint64_t v0 = Statement.columnNames.getter();
  uint64_t v1 = sub_24F7E8ED8(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_24F7E6318(v1);
  swift_release();
  return v2;
}

Swift::Int_optional __swiftcall Statement._layoutIndex(ofColumn:)(Swift::String ofColumn)
{
  uint64_t v1 = sub_24F8CED00();
  uint64_t v3 = v2;
  uint64_t v4 = sub_24F898D74();
  uint64_t v5 = sub_24F77B7A4(v1, v3, v4);
  char v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::Bool v8 = v7 & 1;
  Swift::Int v9 = v5;
  result.value = v9;
  result.is_nil = v8;
  return result;
}

uint64_t sub_24F7E6B78()
{
  return Statement._layoutColumns.getter();
}

unint64_t sub_24F7E6B9C(uint64_t a1, uint64_t a2)
{
  return (unint64_t)Statement._layoutIndex(ofColumn:)(*(Swift::String *)&a1);
}

uint64_t RowAdapter.addingScopes(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    a4[3] = (uint64_t)&type metadata for ScopeAdapter;
    a4[4] = (uint64_t)&protocol witness table for ScopeAdapter;
    Swift::Bool v8 = (uint64_t *)swift_allocObject();
    *a4 = (uint64_t)v8;
    v8[5] = a2;
    v8[6] = a3;
    sub_24F76ADC4(v8 + 2);
    sub_24F773974();
    (*(void (**)(void))(v9 + 16))();
    v8[7] = a1;
    return swift_bridgeObjectRetain();
  }
  else
  {
    a4[3] = a2;
    a4[4] = a3;
    sub_24F76ADC4(a4);
    sub_24F773974();
    uint64_t v12 = *(uint64_t (**)(void))(v11 + 16);
    return v12();
  }
}

uint64_t ScopeAdapter.init(base:scopes:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_24F794DE0(a1, a3);
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t EmptyRowAdapter._layoutedAdapter(from:)@<X0>(void *a1@<X8>)
{
  a1[3] = &type metadata for _LayoutedColumnMapping;
  a1[4] = &protocol witness table for _LayoutedColumnMapping;
  return sub_24F7E66BC(MEMORY[0x263F8EE78], a1);
}

uint64_t sub_24F7E6D58@<X0>(void *a1@<X8>)
{
  return EmptyRowAdapter._layoutedAdapter(from:)(a1);
}

GRDBInternal::ColumnMapping __swiftcall ColumnMapping.init(_:)(GRDBInternal::ColumnMapping result)
{
  v1->mapping._rawValue = result.mapping._rawValue;
  return result;
}

uint64_t ColumnMapping._layoutedAdapter(from:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_24F7E578C(v3, sub_24F7E90B4);
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1)
  {
    uint64_t v8 = v5;
    swift_bridgeObjectRetain();
    sub_24F7E85C0(&v8);
    swift_bridgeObjectRelease();
    uint64_t v7 = v8;
    a1[3] = &type metadata for _LayoutedColumnMapping;
    a1[4] = &protocol witness table for _LayoutedColumnMapping;
    return sub_24F7E66BC(v7, a1);
  }
  return result;
}

uint64_t sub_24F7E6E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = a5[3];
  uint64_t v9 = a5[4];
  sub_24F7811D0(a5, v8);
  unint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(a3, a4, v8, v9);
  LOBYTE(v9) = v11;
  uint64_t v12 = a5[3];
  uint64_t v13 = a5[4];
  sub_24F7811D0(a5, v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  uint64_t v15 = result;
  if (v9)
  {
    uint64_t v17 = *(void *)(result + 16);
    if (v17)
    {
      uint64_t v25 = MEMORY[0x263F8EE78];
      sub_24F77C4AC();
      uint64_t v18 = (uint64_t *)(v15 + 48);
      do
      {
        uint64_t v19 = *(v18 - 1);
        uint64_t v20 = *v18;
        unint64_t v22 = *(void *)(v25 + 16);
        unint64_t v21 = *(void *)(v25 + 24);
        swift_bridgeObjectRetain();
        if (v22 >= v21 >> 1) {
          sub_24F77C4AC();
        }
        *(void *)(v25 + 16) = v22 + 1;
        uint64_t v23 = v25 + 16 * v22;
        *(void *)(v23 + 32) = v19;
        *(void *)(v23 + 40) = v20;
        v18 += 3;
        --v17;
      }
      while (v17);
    }
    swift_bridgeObjectRelease();
    sub_24F8CF7D0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    uint64_t v16 = 0;
    sub_24F7DC6DC();
    swift_allocError();
    *(_DWORD *)uint64_t v24 = 21;
    *(void *)(v24 + 8) = 0;
    *(void *)(v24 + 16) = 0xE000000000000000;
    *(_OWORD *)(v24 + 24) = 0u;
    *(_OWORD *)(v24 + 40) = 0u;
    *(unsigned char *)(v24 + 56) = 0;
    swift_willThrow();
    return v16;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v10 < *(void *)(result + 16))
  {
    uint64_t v16 = *(void *)(result + 24 * v10 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F7E7124@<X0>(void *a1@<X8>)
{
  return ColumnMapping._layoutedAdapter(from:)(a1);
}

void SuffixRowAdapter._layoutedAdapter(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = sub_24F77FCAC(a1);
  uint64_t v7 = v6(v5);
  sub_24F81DD38(v4, v7);
  a2[3] = (uint64_t)&type metadata for _LayoutedColumnMapping;
  a2[4] = (uint64_t)&protocol witness table for _LayoutedColumnMapping;
  sub_24F7E67F0(v8, v9, v10, a2);
}

void sub_24F7E71A8(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

void RangeRowAdapter._layoutedAdapter(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = *v2;
  int64_t v5 = v2[1];
  uint64_t v6 = sub_24F77FCAC(a1);
  uint64_t v8 = v7(v6);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v9 = *(void *)(v8 + 16);
  if (v9 < v4 || (uint64_t)v9 < v5) {
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    a2[3] = (uint64_t)&type metadata for _LayoutedColumnMapping;
    a2[4] = (uint64_t)&protocol witness table for _LayoutedColumnMapping;
    sub_24F7E67F0(v8 + 32, v4, (2 * v5) | 1, a2);
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_24F7E72C8(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t ScopeAdapter.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  a2[3] = &type metadata for SuffixRowAdapter;
  a2[4] = &protocol witness table for SuffixRowAdapter;
  *a2 = 0;
  a2[5] = result;
  return result;
}

uint64_t ScopeAdapter._layoutedAdapter(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24F7811D0(v2, v2[3]);
  sub_24F780788();
  sub_24F77AEB0();
  uint64_t result = v6();
  if (v3) {
    return result;
  }
  uint64_t v42 = a2;
  uint64_t v8 = v54;
  uint64_t v9 = v55;
  sub_24F7811D0(v53, v54);
  unint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  uint64_t v11 = v2[5];
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v43 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v44 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v45 = v2[5];
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v15) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  unint64_t v18 = v17 | (v16 << 6);
LABEL_6:
  uint64_t v19 = *(void *)(v45 + 56);
  uint64_t v20 = (void *)(*(void *)(v45 + 48) + 16 * v18);
  uint64_t v21 = v20[1];
  *(void *)&long long v48 = *v20;
  *((void *)&v48 + 1) = v21;
  sub_24F7E99C8(v19 + 40 * v18, (uint64_t)v49);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24F7E90D0((uint64_t)&v48, (uint64_t)&v51);
    uint64_t v24 = *((void *)&v51 + 1);
    if (!*((void *)&v51 + 1))
    {
      swift_release();
      sub_24F7811D0(v53, v54);
      uint64_t v40 = sub_24F77BCA4();
      v41(v40);
      *(_OWORD *)uint64_t v42 = v51;
      *(void *)(v42 + 24) = &unk_2701025F0;
      *(void *)(v42 + 32) = &off_2701025C8;
      *(void *)(v42 + 16) = v10;
      return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v53);
    }
    uint64_t v25 = v51;
    sub_24F794DE0(v52, (uint64_t)&v48);
    sub_24F7811D0(&v48, *((uint64_t *)&v49[0] + 1));
    sub_24F780788();
    sub_24F77AEB0();
    v26();
    uint64_t v27 = a1;
    sub_24F794DE0(&v47, (uint64_t)v46);
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v56 = v10;
    unint64_t v28 = sub_24F782950();
    if (__OFADD__(v10[2], (v29 & 1) == 0))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    unint64_t v30 = v28;
    char v31 = v29;
    sub_24F781274(&qword_26B1F59B0);
    if (sub_24F8CF980())
    {
      unint64_t v32 = sub_24F782950();
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_45;
      }
      unint64_t v30 = v32;
    }
    unint64_t v10 = v56;
    if (v31)
    {
      uint64_t v34 = v56[7] + 40 * v30;
      _s12GRDBInternal13DatabaseEventVwxx_0(v34);
      sub_24F794DE0(v46, v34);
    }
    else
    {
      v56[(v30 >> 6) + 8] |= 1 << v30;
      uint64_t v35 = (void *)(v10[6] + 16 * v30);
      *uint64_t v35 = v25;
      v35[1] = v24;
      sub_24F794DE0(v46, v10[7] + 40 * v30);
      uint64_t v36 = v10[2];
      BOOL v37 = __OFADD__(v36, 1);
      uint64_t v38 = v36 + 1;
      if (v37) {
        goto LABEL_42;
      }
      v10[2] = v38;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v48);
    a1 = v27;
    if (v15) {
      goto LABEL_5;
    }
LABEL_7:
    int64_t v22 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_43;
    }
    if (v22 < v44)
    {
      unint64_t v23 = *(void *)(v43 + 8 * v22);
      if (v23) {
        goto LABEL_10;
      }
      v16 += 2;
      if (v22 + 1 >= v44)
      {
        int64_t v16 = v22;
        goto LABEL_15;
      }
      unint64_t v23 = *(void *)(v43 + 8 * v16);
      if (v23)
      {
        ++v22;
LABEL_10:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v18 = __clz(__rbit64(v23)) + (v22 << 6);
        int64_t v16 = v22;
        goto LABEL_6;
      }
      if (v22 + 2 < v44) {
        break;
      }
    }
LABEL_15:
    unint64_t v15 = 0;
    uint64_t v50 = 0;
    memset(v49, 0, sizeof(v49));
    long long v48 = 0u;
  }
  unint64_t v23 = *(void *)(v43 + 8 * (v22 + 2));
  if (v23)
  {
    v22 += 2;
    goto LABEL_10;
  }
  int64_t v39 = v22 + 3;
  if (v22 + 3 >= v44)
  {
    int64_t v16 = v22 + 2;
    goto LABEL_15;
  }
  unint64_t v23 = *(void *)(v43 + 8 * v39);
  if (v23)
  {
    v22 += 3;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v22 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v22 >= v44)
    {
      int64_t v16 = v44 - 1;
      goto LABEL_15;
    }
    unint64_t v23 = *(void *)(v43 + 8 * v22);
    ++v39;
    if (v23) {
      goto LABEL_10;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_24F8CFEA0();
  __break(1u);
  return result;
}

uint64_t sub_24F7E77B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ScopeAdapter._layoutedAdapter(from:)(a1, a2);
}

uint64_t sub_24F7E77C8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F7E7804()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F7E780C()
{
  void (*v5)(void *__return_ptr, uint64_t, uint64_t);
  void (*v6)(void);
  void v8[3];
  uint64_t v9;
  uint64_t v10;
  void v11[5];
  void v12[4];

  sub_24F7E99C8((uint64_t)(v0 + 5), (uint64_t)v12);
  sub_24F7811D0(v12, v12[3]);
  sub_24F7811D0(v0, v0[3]);
  sub_24F780788();
  sub_24F77AEB0();
  v2();
  if (!v1)
  {
    uint64_t v3 = v9;
    uint64_t v4 = v10;
    sub_24F7811D0(v8, v9);
    int64_t v5 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8);
    void v11[3] = &type metadata for _LayoutedColumnMapping;
    v11[4] = &protocol witness table for _LayoutedColumnMapping;
    v5(v11, v3, v4);
    sub_24F780788();
    sub_24F77AEB0();
    v6();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v11);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v8);
  }
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v12);
}

uint64_t sub_24F7E7944()
{
  return sub_24F7E780C();
}

uint64_t RenameColumnAdapter.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t RenameColumnAdapter._layoutedAdapter(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = sub_24F77FCAC(a1);
  uint64_t v5 = v4(v3);
  uint64_t v6 = sub_24F7E59D8(v5, sub_24F7E9138);
  swift_bridgeObjectRelease();
  a2[3] = &type metadata for _LayoutedColumnMapping;
  a2[4] = &protocol witness table for _LayoutedColumnMapping;
  return sub_24F7E66BC(v6, a2);
}

uint64_t sub_24F7E7A10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RenameColumnAdapter._layoutedAdapter(from:)(a1, a2);
}

uint64_t sub_24F7E7A28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  *(void *)&v11[0] = a1;
  sub_24F7E99C8((uint64_t)a2, (uint64_t)v11 + 8);
  sub_24F7811D0(a2, a2[3]);
  uint64_t v5 = sub_24F77BCA4();
  v6(v5);
  long long v12 = v10;
  long long v7 = v11[1];
  *a3 = v11[0];
  a3[1] = v7;
  long long v8 = v12;
  a3[2] = v11[2];
  a3[3] = v8;
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)a2);
}

uint64_t sub_24F7E7ABC()
{
  return *(void *)(*(void *)(v0 + 48) + 16);
}

uint64_t sub_24F7E7AC8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  sub_24F7811D0((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2) & 1;
}

uint64_t sub_24F7E7B24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *v2;
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  sub_24F7811D0(v2 + 1, v7);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
  swift_retain();
  uint64_t v10 = v9(v7, v8);
  *a2 = v6;
  a2[1] = v10;
  a2[2] = v4;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_24F7E7BC8(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24F773A88();
    if (!v3 & v2)
    {
      sub_24F7811D0((void *)(*(void *)v1 + 16), *(void *)(*(void *)v1 + 40));
      uint64_t v4 = sub_24F77DAAC();
      v5(v4);
      return;
    }
  }
  __break(1u);
}

void sub_24F7E7C3C(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24F773A88();
    if (!v5 & v4)
    {
      uint64_t v6 = *(void *)(v3 + 24 * v2 + 32);
      uint64_t v7 = *(void *)(*(void *)v1 + 40);
      uint64_t v8 = *(void *)(*(void *)v1 + 48);
      sub_24F7811D0((void *)(*(void *)v1 + 16), v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, v7, v8);
      return;
    }
  }
  __break(1u);
}

#error "24F7E7E64: call analysis failed (funcsize=137)"

#error "24F7E80BC: call analysis failed (funcsize=148)"

void sub_24F7E814C(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24F773A88();
    if (!v2 & v1)
    {
      sub_24F782F44();
      uint64_t v3 = sub_24F770FD8();
      v4(v3);
      return;
    }
  }
  __break(1u);
}

void sub_24F7E81A0(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24F773A88();
    if (!v2 & v1)
    {
      sub_24F782F44();
      uint64_t v3 = sub_24F770FD8();
      v4(v3);
      return;
    }
  }
  __break(1u);
}

void sub_24F7E81F4(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24F773A88();
    if (!v2 & v1)
    {
      swift_bridgeObjectRetain();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_24F7E8240()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_24F782950();
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v6 = sub_24F8CED00();
    uint64_t v5 = sub_24F77B7A4(v6, v7, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v5 = *(void *)(*(void *)(v1 + 56) + 8 * v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24F7E8318()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Row();
  uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *(void *)(*v1 + 48);
  sub_24F7811D0((void *)(*v1 + 16), v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 112))(v3, v4, v5);
  sub_24F7E99C8((uint64_t)(v1 + 1), (uint64_t)v16);
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  sub_24F798FB4((uint64_t)v16, v17);
  sub_24F77AD10();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *))(v12 + 16))(v11);
  uint64_t v13 = sub_24F7E98E8(v6, (uint64_t)v11, v2, v7, v8);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v16);
  return v13;
}

uint64_t sub_24F7E8444()
{
  void (*v4)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void v8[2];
  uint64_t vars8;

  uint64_t v1 = *v0;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  sub_24F7811D0(v0 + 1, v2);
  uint64_t v4 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8);
  swift_retain();
  v4(v8, v2, v3);
  uint64_t v5 = v8[0];
  uint64_t v6 = v8[1];
  return sub_24F7E9838(v1, v5, v6);
}

uint64_t sub_24F7E84D0()
{
  sub_24F7811D0((void *)(*(void *)v0 + 16), *(void *)(*(void *)v0 + 40));
  uint64_t v1 = sub_24F77DAAC();
  return v2(v1);
}

uint64_t sub_24F7E8538()
{
  return sub_24F7E7CC8();
}

uint64_t sub_24F7E8550()
{
  return sub_24F7E7EF4();
}

void sub_24F7E8568(uint64_t a1)
{
}

void sub_24F7E8580(uint64_t a1)
{
}

uint64_t sub_24F7E8598()
{
  return sub_24F7E8240();
}

uint64_t sub_24F7E85C0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F897558();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_24F7E862C(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_24F7E862C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_127;
    }
    if (v3) {
      return sub_24F7E8CA0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_126;
  }
  uint64_t v93 = result;
  v90 = a1;
  if (v3 > 1)
  {
    sub_24F781274(&qword_26B1F5988);
    uint64_t result = sub_24F8CF120();
    *(void *)(result + 16) = v3 / 2;
    uint64_t v92 = result;
    v96 = (char *)(result + 32);
LABEL_10:
    uint64_t v6 = 0;
    uint64_t v7 = *a1;
    uint64_t v91 = *a1 + 48;
    uint64_t v89 = *a1 - 24;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v94 = v3;
    uint64_t v95 = v7;
    while (1)
    {
      uint64_t v9 = v6++;
      if (v6 < v3)
      {
        uint64_t v10 = *(void *)(v7 + 24 * v6);
        uint64_t v11 = *(void *)(v7 + 24 * v9);
        uint64_t v6 = v9 + 2;
        if (v9 + 2 < v3)
        {
          uint64_t v12 = (uint64_t *)(v91 + 24 * v9);
          uint64_t v13 = v10;
          while (1)
          {
            uint64_t v15 = *v12;
            v12 += 3;
            uint64_t v14 = v15;
            if (v10 < v11 == v15 >= v13) {
              break;
            }
            ++v6;
            uint64_t v13 = v14;
            if (v6 >= v3)
            {
              uint64_t v6 = v3;
              break;
            }
          }
        }
        if (v10 < v11)
        {
          if (v6 < v9) {
            goto LABEL_128;
          }
          if (v9 < v6)
          {
            uint64_t v16 = 24 * v6;
            uint64_t v17 = 24 * v9;
            uint64_t v18 = v6;
            uint64_t v19 = v9;
            do
            {
              if (v19 != --v18)
              {
                if (!v7) {
                  goto LABEL_133;
                }
                uint64_t v20 = v7 + v17;
                uint64_t v21 = v7 + v16;
                uint64_t v22 = *(void *)(v7 + v17 + 16);
                long long v23 = *(_OWORD *)(v7 + v17);
                uint64_t v24 = *(void *)(v7 + v16 - 8);
                *(_OWORD *)uint64_t v20 = *(_OWORD *)(v7 + v16 - 24);
                *(void *)(v20 + 16) = v24;
                *(_OWORD *)(v21 - 24) = v23;
                *(void *)(v21 - 8) = v22;
              }
              ++v19;
              v16 -= 24;
              v17 += 24;
            }
            while (v19 < v18);
          }
        }
      }
      if (v6 < v3)
      {
        if (__OFSUB__(v6, v9)) {
          goto LABEL_125;
        }
        if (v6 - v9 < v93)
        {
          uint64_t v25 = v9 + v93;
          if (__OFADD__(v9, v93)) {
            goto LABEL_129;
          }
          if (v25 >= v3) {
            uint64_t v25 = v3;
          }
          if (v25 < v9)
          {
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            return result;
          }
          if (v6 != v25)
          {
            uint64_t v26 = v89 + 24 * v6;
            do
            {
              uint64_t v27 = *(void *)(v7 + 24 * v6);
              uint64_t v28 = v9;
              uint64_t v29 = v26;
              do
              {
                if (v27 >= *(void *)v29) {
                  break;
                }
                if (!v7) {
                  goto LABEL_131;
                }
                uint64_t v30 = *(void *)(v29 + 32);
                uint64_t v31 = *(void *)(v29 + 40);
                *(_OWORD *)(v29 + 24) = *(_OWORD *)v29;
                *(void *)(v29 + 40) = *(void *)(v29 + 16);
                *(void *)uint64_t v29 = v27;
                *(void *)(v29 + 8) = v30;
                *(void *)(v29 + 16) = v31;
                v29 -= 24;
                ++v28;
              }
              while (v6 != v28);
              ++v6;
              v26 += 24;
            }
            while (v6 != v25);
            uint64_t v6 = v25;
          }
        }
      }
      if (v6 < v9) {
        goto LABEL_120;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      unint64_t v33 = *(void *)(v8 + 16);
      unint64_t v32 = *(void *)(v8 + 24);
      unint64_t v34 = v33 + 1;
      uint64_t v7 = v95;
      if (v33 >= v32 >> 1)
      {
        uint64_t result = (uint64_t)sub_24F897440((char *)(v32 > 1), v33 + 1, 1, (char *)v8);
        uint64_t v7 = v95;
        uint64_t v8 = result;
      }
      *(void *)(v8 + 16) = v34;
      uint64_t v35 = v8 + 32;
      uint64_t v36 = (uint64_t *)(v8 + 32 + 16 * v33);
      *uint64_t v36 = v9;
      v36[1] = v6;
      if (v33)
      {
        while (1)
        {
          unint64_t v37 = v34 - 1;
          if (v34 >= 4)
          {
            unint64_t v42 = v35 + 16 * v34;
            uint64_t v43 = *(void *)(v42 - 64);
            uint64_t v44 = *(void *)(v42 - 56);
            BOOL v48 = __OFSUB__(v44, v43);
            uint64_t v45 = v44 - v43;
            if (v48) {
              goto LABEL_109;
            }
            uint64_t v47 = *(void *)(v42 - 48);
            uint64_t v46 = *(void *)(v42 - 40);
            BOOL v48 = __OFSUB__(v46, v47);
            uint64_t v40 = v46 - v47;
            char v41 = v48;
            if (v48) {
              goto LABEL_110;
            }
            unint64_t v49 = v34 - 2;
            uint64_t v50 = (uint64_t *)(v35 + 16 * (v34 - 2));
            uint64_t v52 = *v50;
            uint64_t v51 = v50[1];
            BOOL v48 = __OFSUB__(v51, v52);
            uint64_t v53 = v51 - v52;
            if (v48) {
              goto LABEL_111;
            }
            BOOL v48 = __OFADD__(v40, v53);
            uint64_t v54 = v40 + v53;
            if (v48) {
              goto LABEL_113;
            }
            if (v54 >= v45)
            {
              uint64_t v72 = (uint64_t *)(v35 + 16 * v37);
              uint64_t v74 = *v72;
              uint64_t v73 = v72[1];
              BOOL v48 = __OFSUB__(v73, v74);
              uint64_t v75 = v73 - v74;
              if (v48) {
                goto LABEL_119;
              }
              BOOL v65 = v40 < v75;
              goto LABEL_77;
            }
          }
          else
          {
            if (v34 != 3)
            {
              uint64_t v66 = *(void *)(v8 + 32);
              uint64_t v67 = *(void *)(v8 + 40);
              BOOL v48 = __OFSUB__(v67, v66);
              uint64_t v59 = v67 - v66;
              char v60 = v48;
              goto LABEL_71;
            }
            uint64_t v39 = *(void *)(v8 + 32);
            uint64_t v38 = *(void *)(v8 + 40);
            BOOL v48 = __OFSUB__(v38, v39);
            uint64_t v40 = v38 - v39;
            char v41 = v48;
          }
          if (v41) {
            goto LABEL_112;
          }
          unint64_t v49 = v34 - 2;
          uint64_t v55 = (uint64_t *)(v35 + 16 * (v34 - 2));
          uint64_t v57 = *v55;
          uint64_t v56 = v55[1];
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v59 = v56 - v57;
          char v60 = v58;
          if (v58) {
            goto LABEL_114;
          }
          uint64_t v61 = (uint64_t *)(v35 + 16 * v37);
          uint64_t v63 = *v61;
          uint64_t v62 = v61[1];
          BOOL v48 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          if (v48) {
            goto LABEL_116;
          }
          if (__OFADD__(v59, v64)) {
            goto LABEL_118;
          }
          if (v59 + v64 >= v40)
          {
            BOOL v65 = v40 < v64;
LABEL_77:
            if (v65) {
              unint64_t v37 = v49;
            }
            goto LABEL_79;
          }
LABEL_71:
          if (v60) {
            goto LABEL_115;
          }
          v68 = (uint64_t *)(v35 + 16 * v37);
          uint64_t v70 = *v68;
          uint64_t v69 = v68[1];
          BOOL v48 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          if (v48) {
            goto LABEL_117;
          }
          if (v71 < v59) {
            goto LABEL_88;
          }
LABEL_79:
          unint64_t v76 = v37 - 1;
          if (v37 - 1 >= v34)
          {
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
            goto LABEL_130;
          }
          if (!v7) {
            goto LABEL_132;
          }
          uint64_t v77 = (uint64_t *)(v35 + 16 * v76);
          uint64_t v78 = *v77;
          uint64_t v79 = (void *)(v35 + 16 * v37);
          uint64_t v80 = v79[1];
          uint64_t result = sub_24F7E8D20((char *)(v7 + 24 * *v77), (char *)(v7 + 24 * *v79), v7 + 24 * v80, v96);
          if (v1)
          {
LABEL_90:
            swift_bridgeObjectRelease();
            *(void *)(v92 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v80 < v78) {
            goto LABEL_106;
          }
          if (v37 > *(void *)(v8 + 16)) {
            goto LABEL_107;
          }
          *uint64_t v77 = v78;
          *(void *)(v35 + 16 * v76 + 8) = v80;
          unint64_t v81 = *(void *)(v8 + 16);
          if (v37 >= v81) {
            goto LABEL_108;
          }
          unint64_t v34 = v81 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v35 + 16 * v37), v79 + 2, 16 * (v81 - 1 - v37));
          *(void *)(v8 + 16) = v81 - 1;
          uint64_t v7 = v95;
          if (v81 <= 2) {
            goto LABEL_88;
          }
        }
      }
      unint64_t v34 = 1;
LABEL_88:
      uint64_t v3 = v94;
      if (v6 >= v94)
      {
        uint64_t v5 = v92;
        goto LABEL_93;
      }
    }
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  v96 = (char *)(MEMORY[0x263F8EE78] + 32);
  if (v3 == 1)
  {
    uint64_t v92 = MEMORY[0x263F8EE78];
    goto LABEL_10;
  }
  unint64_t v34 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_93:
  uint64_t result = v8;
  uint64_t v92 = v5;
  if (v34 >= 2)
  {
    uint64_t v82 = *v90;
    do
    {
      unint64_t v83 = v34 - 2;
      if (v34 < 2) {
        goto LABEL_121;
      }
      if (!v82) {
        goto LABEL_134;
      }
      uint64_t v84 = result;
      uint64_t v85 = *(void *)(result + 32 + 16 * v83);
      uint64_t v86 = *(void *)(result + 32 + 16 * (v34 - 1) + 8);
      uint64_t result = sub_24F7E8D20((char *)(v82 + 24 * v85), (char *)(v82 + 24 * *(void *)(result + 32 + 16 * (v34 - 1))), v82 + 24 * v86, v96);
      if (v1) {
        goto LABEL_90;
      }
      if (v86 < v85) {
        goto LABEL_122;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897538();
        uint64_t v84 = result;
      }
      if (v83 >= *(void *)(v84 + 16)) {
        goto LABEL_123;
      }
      v87 = (void *)(v84 + 32 + 16 * v83);
      void *v87 = v85;
      v87[1] = v86;
      unint64_t v88 = *(void *)(v84 + 16);
      if (v34 > v88) {
        goto LABEL_124;
      }
      memmove((void *)(v84 + 32 + 16 * (v34 - 1)), (const void *)(v84 + 32 + 16 * v34), 16 * (v88 - v34));
      uint64_t result = v84;
      *(void *)(v84 + 16) = v88 - 1;
      unint64_t v34 = v88 - 1;
    }
    while (v88 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v92 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F7E8CA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 24 * a3 - 24;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 24 * a3);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      do
      {
        if (v6 >= *(void *)v8) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = *(void *)(v8 + 32);
        uint64_t v10 = *(void *)(v8 + 40);
        *(_OWORD *)(v8 + 24) = *(_OWORD *)v8;
        *(void *)(v8 + 40) = *(void *)(v8 + 16);
        *(void *)uint64_t v8 = v6;
        *(void *)(v8 + 8) = v9;
        *(void *)(v8 + 16) = v10;
        v8 -= 24;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 24;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_24F7E8D20(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  if (v9 >= v11)
  {
    sub_24F780F10(a2, (uint64_t)(a3 - (void)a2) / 24, a4);
    uint64_t v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_39;
    }
    unint64_t v19 = a3 - 24;
    while (1)
    {
      uint64_t v20 = (char *)(v19 + 24);
      uint64_t v21 = v6 - 24;
      if (*((void *)v12 - 3) >= *((void *)v6 - 3))
      {
        BOOL v23 = v20 != v12 || v19 >= (unint64_t)v12;
        uint64_t v21 = v12 - 24;
        v12 -= 24;
        if (!v23) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v22 = v20 != v6 || v19 >= (unint64_t)v6;
        v6 -= 24;
        if (!v22) {
          goto LABEL_35;
        }
      }
      long long v24 = *(_OWORD *)v21;
      *(void *)(v19 + 16) = *((void *)v21 + 2);
      *(_OWORD *)unint64_t v19 = v24;
LABEL_35:
      v19 -= 24;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_24F780F10(a1, (a2 - a1) / 24, a4);
  uint64_t v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (*(void *)v6 >= *(void *)v4)
    {
      uint64_t v14 = v4;
      BOOL v15 = v7 == v4;
      v4 += 24;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    uint64_t v14 = v6;
    BOOL v15 = v7 == v6;
    v6 += 24;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    long long v16 = *(_OWORD *)v14;
    *((void *)v7 + 2) = *((void *)v14 + 2);
    *(_OWORD *)uint64_t v7 = v16;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  uint64_t v26 = (v12 - v4) / 24;
  if (v6 != v4 || v6 >= &v4[24 * v26]) {
    memmove(v6, v4, 24 * v26);
  }
  return 1;
}

uint64_t sub_24F7E8ED8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = v2 + 4;
    uint64_t v6 = (uint64_t *)(result + 40);
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      if (v3)
      {
        uint64_t result = swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_28;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v11 = v10 <= 1 ? 1 : v10;
        sub_24F781274(&qword_26B1F59B8);
        uint64_t v12 = (void *)swift_allocObject();
        uint64_t v13 = (uint64_t)(j__malloc_size(v12) - 32) / 24;
        _OWORD v12[2] = v11;
        v12[3] = 2 * v13;
        uint64_t v14 = v12 + 4;
        uint64_t v15 = v2[3] >> 1;
        uint64_t v5 = &v12[3 * v15 + 4];
        uint64_t v3 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        if (v2[2])
        {
          if (v12 != v2 || v14 >= &v2[3 * v15 + 4]) {
            memmove(v14, v2 + 4, 24 * v15);
          }
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t result = swift_release();
        uint64_t v2 = v12;
      }
      BOOL v17 = __OFSUB__(v3--, 1);
      if (v17) {
        break;
      }
      v6 += 2;
      *uint64_t v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      if (v1 == ++v4)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v3 = 0;
LABEL_23:
  unint64_t v18 = v2[3];
  if (v18 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v19 = v18 >> 1;
  BOOL v17 = __OFSUB__(v19, v3);
  uint64_t v20 = v19 - v3;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24F7E9074()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F7E90B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F7E6E40(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_24F7E90D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_26B1F5968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F7E9138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(a2, a3);
  return a1;
}

void type metadata accessor for _LayoutedColumnMapping()
{
}

uint64_t dispatch thunk of _LayoutedRowAdapter._mapping.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _LayoutedRowAdapter._scopes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of _RowLayout._layoutColumns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _RowLayout._layoutIndex(ofColumn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of _RowAdapter._layoutedAdapter(from:)()
{
  sub_24F780788();
  sub_24F77AEB0();
  return v0();
}

void type metadata accessor for EmptyRowAdapter()
{
}

void type metadata accessor for ColumnMapping()
{
}

void type metadata accessor for SuffixRowAdapter()
{
}

void type metadata accessor for RangeRowAdapter()
{
}

uint64_t destroy for ScopeAdapter(uint64_t a1)
{
  _s12GRDBInternal13DatabaseEventVwxx_0(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScopeAdapter(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ScopeAdapter(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ScopeAdapter(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ScopeAdapter(uint64_t a1, uint64_t a2)
{
  _s12GRDBInternal13DatabaseEventVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScopeAdapter(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScopeAdapter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ScopeAdapter()
{
}

void type metadata accessor for RenameColumnAdapter()
{
}

uint64_t destroy for Row.Prefetch()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s12GRDBInternal11InflectionsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Inflections(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Row.Prefetch(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Inflections(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Inflections(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LayoutedScopeAdapter()
{
}

uint64_t sub_24F7E9620(uint64_t a1)
{
  _s12GRDBInternal13DatabaseEventVwxx_0(a1);
  return _s12GRDBInternal13DatabaseEventVwxx_0(a1 + 40);
}

uint64_t sub_24F7E9658(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *sub_24F7E9704(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t sub_24F7E973C(uint64_t a1, uint64_t a2)
{
  _s12GRDBInternal13DatabaseEventVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s12GRDBInternal13DatabaseEventVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t sub_24F7E9798(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F7E97D8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ChainedAdapter()
{
}

uint64_t sub_24F7E9838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v8[3] = &type metadata for _LayoutedColumnMapping;
  v8[4] = &protocol witness table for _LayoutedColumnMapping;
  v8[0] = a2;
  v8[1] = a3;
  sub_24F7E99C8((uint64_t)v8, (uint64_t)v6);
  uint64_t v3 = swift_retain();
  sub_24F7E7A28(v3, v6, v7);
  type metadata accessor for Row();
  swift_allocObject();
  sub_24F7E9A28((uint64_t)v7, (uint64_t)v6);
  uint64_t v4 = sub_24F790684();
  sub_24F7E9A60((uint64_t)v7);
  swift_release();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v8);
  return v4;
}

uint64_t sub_24F7E98E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v11[3] = a4;
  v11[4] = a5;
  sub_24F76ADC4(v11);
  sub_24F773974();
  (*(void (**)(void))(v5 + 32))();
  sub_24F7E99C8((uint64_t)v11, (uint64_t)v9);
  uint64_t v6 = swift_retain();
  sub_24F7E7A28(v6, v9, v10);
  swift_allocObject();
  sub_24F7E9A28((uint64_t)v10, (uint64_t)v9);
  uint64_t v7 = sub_24F790684();
  sub_24F7E9A60((uint64_t)v10);
  swift_release();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v11);
  return v7;
}

uint64_t sub_24F7E99C8(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  sub_24F773974();
  (*v3)(a2);
  return a2;
}

uint64_t sub_24F7E9A28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24F7E9A60(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F7E9A90(uint64_t a1)
{
  swift_release();
  _s12GRDBInternal13DatabaseEventVwxx_0(a1 + 8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F7E9ADC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24F7E9B84(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_24F7A2320(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24F7E9C08(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  _s12GRDBInternal13DatabaseEventVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for AdaptedRowImpl()
{
}

uint64_t sub_24F7E9C84()
{
  return sub_24F7D1A38(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24F7E9C8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_24F795698();
    uint64_t v2 = v14;
    uint64_t v4 = (unsigned char *)(a1 + 40);
    do
    {
      char v5 = *v4;
      __src[0] = *((void *)v4 - 1);
      LOBYTE(__src[1]) = v5;
      uint64_t v6 = sub_24F7EA6A4();
      uint64_t v8 = v7;
      uint64_t v14 = v2;
      unint64_t v9 = *(void *)(v2 + 16);
      if (v9 >= *(void *)(v2 + 24) >> 1)
      {
        sub_24F795698();
        uint64_t v2 = v14;
      }
      v4 += 16;
      v11[0] = v6;
      v11[1] = v8;
      char v12 = 2;
      sub_24F7667B8((uint64_t)v11);
      sub_24F76F710((uint64_t)v11, (uint64_t)__src);
      *(void *)(v2 + 16) = v9 + 1;
      memcpy((void *)(v2 + 168 * v9 + 32), __src, 0xA3uLL);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void abs(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, __int16 a12, __n128 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_24F781478();
  a37 = v38;
  a38 = v39;
  sub_24F78146C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v40 = (__n128 *)sub_24F77DF3C();
  uint64_t v41 = sub_24F77F4C0(v40, (__n128)xmmword_24F8DDBF0);
  v42(v41);
  a10 = 5456449;
  a11 = 0xE300000000000000;
  a12 = 0;
  a13 = v40;
  uint64_t v43 = sub_24F7A45E4((uint64_t)&a10);
  sub_24F773A98(v43);
  sub_24F77AEBC();
}

void average(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, __int16 a12, __n128 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_24F781478();
  a37 = v38;
  a38 = v39;
  sub_24F78146C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v40 = (__n128 *)sub_24F77DF3C();
  uint64_t v41 = sub_24F77F4C0(v40, (__n128)xmmword_24F8DDBF0);
  v42(v41);
  a10 = 4675137;
  a11 = 0xE300000000000000;
  a12 = 1;
  a13 = v40;
  uint64_t v43 = sub_24F7A45E4((uint64_t)&a10);
  sub_24F773A98(v43);
  sub_24F77AEBC();
}

uint64_t count(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_24F7811D0(a1, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(__src, v3, v4);
  memcpy(v6, __src, sizeof(v6));
  sub_24F7A36A8(a2);
  return sub_24F7E9F30((uint64_t)__src);
}

uint64_t sub_24F7E9F30(uint64_t a1)
{
  sub_24F799458(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160));
  return a1;
}

uint64_t count(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24F7811D0(a1, a1[3]);
  uint64_t v3 = sub_24F77E790();
  v4(v3);
  sub_24F781274(&qword_26B1F7358);
  char v5 = (__n128 *)sub_24F77DF3C();
  sub_24F770FF0(v5, (__n128)xmmword_24F8DDBF0, v6, v7, v8, v9, v10, v11, v12, v14);
  sub_24F780794();
  __int16 v16 = 1;
  BOOL v17 = v5;
  sub_24F7A45E4((uint64_t)v15);
  return sub_24F76F710((uint64_t)v15, a2);
}

uint64_t count(distinct:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24F7811D0(a1, a1[3]);
  uint64_t v3 = sub_24F77E790();
  v4(v3);
  sub_24F781274(&qword_26B1F7358);
  char v5 = (__n128 *)sub_24F77DF3C();
  sub_24F770FF0(v5, (__n128)xmmword_24F8DDBF0, v6, v7, v8, v9, v10, v11, v12, v14);
  sub_24F780794();
  __int16 v16 = 257;
  BOOL v17 = v5;
  sub_24F7A45E4((uint64_t)v15);
  return sub_24F76F710((uint64_t)v15, a2);
}

uint64_t ?? infix(_:_:)()
{
  sub_24F77EEB8();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v2 = (__n128 *)swift_allocObject();
  uint64_t v3 = sub_24F77FCE4(v2, (__n128)xmmword_24F8E0850);
  v4(v3);
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  sub_24F7811D0(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v8[0] = 0x4C4C554E4649;
  v8[1] = 0xE600000000000000;
  __int16 v9 = 0;
  uint64_t v10 = v2;
  sub_24F7A45E4((uint64_t)v8);
  return sub_24F76F710((uint64_t)v8, v0);
}

void length(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, __int16 a12, __n128 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_24F781478();
  a37 = v38;
  a38 = v39;
  sub_24F78146C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v40 = (__n128 *)sub_24F77DF3C();
  uint64_t v41 = sub_24F77F4C0(v40, (__n128)xmmword_24F8DDBF0);
  v42(v41);
  a10 = 0x4854474E454CLL;
  a11 = 0xE600000000000000;
  a12 = 0;
  a13 = v40;
  uint64_t v43 = sub_24F7A45E4((uint64_t)&a10);
  sub_24F773A98(v43);
  sub_24F77AEBC();
}

void max(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, __int16 a12, __n128 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_24F781478();
  a37 = v38;
  a38 = v39;
  sub_24F78146C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v40 = (__n128 *)sub_24F77DF3C();
  uint64_t v41 = sub_24F77F4C0(v40, (__n128)xmmword_24F8DDBF0);
  v42(v41);
  a10 = 5783885;
  a11 = 0xE300000000000000;
  a12 = 1;
  a13 = v40;
  uint64_t v43 = sub_24F7A45E4((uint64_t)&a10);
  sub_24F773A98(v43);
  sub_24F77AEBC();
}

void min(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, __int16 a12, __n128 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_24F781478();
  a37 = v38;
  a38 = v39;
  sub_24F78146C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v40 = (__n128 *)sub_24F77DF3C();
  uint64_t v41 = sub_24F77F4C0(v40, (__n128)xmmword_24F8DDBF0);
  v42(v41);
  a10 = 5130573;
  a11 = 0xE300000000000000;
  a12 = 1;
  a13 = v40;
  uint64_t v43 = sub_24F7A45E4((uint64_t)&a10);
  sub_24F773A98(v43);
  sub_24F77AEBC();
}

void sum(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, __int16 a12, __n128 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_24F781478();
  a37 = v38;
  a38 = v39;
  sub_24F78146C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v40 = (__n128 *)sub_24F77DF3C();
  uint64_t v41 = sub_24F77F4C0(v40, (__n128)xmmword_24F8DDBF0);
  v42(v41);
  a10 = 5068115;
  a11 = 0xE300000000000000;
  a12 = 1;
  a13 = v40;
  uint64_t v43 = sub_24F7A45E4((uint64_t)&a10);
  sub_24F773A98(v43);
  sub_24F77AEBC();
}

void total(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, __int16 a12, __n128 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_24F781478();
  a37 = v38;
  a38 = v39;
  sub_24F78146C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v40 = (__n128 *)sub_24F77DF3C();
  uint64_t v41 = sub_24F77F4C0(v40, (__n128)xmmword_24F8DDBF0);
  v42(v41);
  a10 = 0x4C41544F54;
  a11 = 0xE500000000000000;
  a12 = 1;
  a13 = v40;
  uint64_t v43 = sub_24F7A45E4((uint64_t)&a10);
  sub_24F773A98(v43);
  sub_24F77AEBC();
}

uint64_t SQLSpecificExpressible.capitalized.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24F7EA544(a1, a2, &qword_26B1F7F38, a3);
}

uint64_t sub_24F7EA414()
{
  sub_24F76C98C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160),
    *(void *)(v0 + 168),
    *(unsigned __int16 *)(v0 + 176) | (*(unsigned __int8 *)(v0 + 178) << 16));
  return swift_deallocObject();
}

uint64_t SQLSpecificExpressible.lowercased.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24F7EA544(a1, a2, &qword_26B1F7BB0, a3);
}

uint64_t SQLSpecificExpressible.uppercased.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24F7EA544(a1, a2, &qword_26B1F7D98, a3);
}

uint64_t SQLSpecificExpressible.localizedCapitalized.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24F7EA544(a1, a2, &qword_26B1F7D80, a3);
}

uint64_t SQLSpecificExpressible.localizedLowercased.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24F7EA544(a1, a2, &qword_26B1F7D60, a3);
}

uint64_t SQLSpecificExpressible.localizedUppercased.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24F7EA544(a1, a2, &qword_26B1F7D70, a3);
}

uint64_t sub_24F7EA544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3 != -1) {
    swift_once();
  }
  sub_24F781274(&qword_26B1F52B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
  uint64_t v8 = *(void *)(a2 + 8);
  __int16 v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  *(void *)(inited + 56) = &type metadata for SQLExpression;
  *(void *)(inited + 64) = &protocol witness table for SQLExpression;
  *(void *)(inited + 32) = swift_allocObject();
  v9(a1, v8);
  DatabaseFunction.callAsFunction(_:)(inited, a4);
  swift_setDeallocating();
  return sub_24F880008();
}

uint64_t SQLDateModifier.sqlExpression.getter@<X0>(uint64_t a1@<X8>)
{
  v4[0] = sub_24F7EA6A4();
  v4[1] = v2;
  char v5 = 2;
  sub_24F7667B8((uint64_t)v4);
  return sub_24F76F710((uint64_t)v4, a1);
}

uint64_t sub_24F7EA6A4()
{
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      uint64_t v2 = sub_24F8CFAE0();
      goto LABEL_6;
    case 2:
    case 3:
    case 4:
    case 5:
      uint64_t v2 = sub_24F8CFAE0();
      goto LABEL_6;
    case 6:
      uint64_t v2 = 0x207961646B656577;
      sub_24F8CFAE0();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      return v2;
    case 7:
      uint64_t result = 0x666F207472617473;
      switch(*(void *)v0)
      {
        case 3:
          uint64_t result = 0x636F706578696E75;
          break;
        case 4:
          uint64_t result = 0x6D69746C61636F6CLL;
          break;
        case 5:
          uint64_t result = 6517877;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v2 = 0;
      sub_24F8CF2E0();
LABEL_6:
      sub_24F8CEEB0();
      return v2;
  }
}

uint64_t julianDay(_:_:)()
{
  sub_24F77EEB8();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v2 = (__n128 *)sub_24F77DF3C();
  uint64_t v3 = sub_24F77FCE4(v2, (__n128)xmmword_24F8DDBF0);
  v4(v3);
  sub_24F7E9C8C(v1);
  sub_24F792BDC();
  v6[0] = 0x41444E41494C554ALL;
  v6[1] = 0xE900000000000059;
  __int16 v7 = 0;
  uint64_t v8 = v2;
  sub_24F7A45E4((uint64_t)v6);
  return sub_24F76F710((uint64_t)v6, v0);
}

uint64_t dateTime(_:_:)()
{
  sub_24F77EEB8();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v2 = (__n128 *)sub_24F77DF3C();
  uint64_t v3 = sub_24F77FCE4(v2, (__n128)xmmword_24F8DDBF0);
  v4(v3);
  sub_24F7E9C8C(v1);
  sub_24F792BDC();
  v6[0] = 0x454D495445544144;
  v6[1] = 0xE800000000000000;
  __int16 v7 = 0;
  uint64_t v8 = v2;
  sub_24F7A45E4((uint64_t)v6);
  return sub_24F76F710((uint64_t)v6, v0);
}

uint64_t initializeBufferWithCopyOfBuffer for SQLDateModifier(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SQLDateModifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xF9 && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 248;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 7) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLDateModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24F7EAB90(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 6u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 7);
  }
}

uint64_t sub_24F7EABA8(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(void *)uint64_t result = a2 - 7;
    LOBYTE(a2) = 7;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SQLDateModifier()
{
  return &type metadata for SQLDateModifier;
}

uint64_t sub_24F7EABD0(uint64_t a1)
{
  sub_24F776A80();
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = sub_24F8CEC70();
  *(void *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  *(_WORD *)(v1 + 64) = 255;
  *(void *)(v1 + 16) = a1;
  swift_unownedRetain();
  swift_release();
  return v1;
}

void sub_24F7EACC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a3;
  uint64_t v10 = (uint64_t *)(v4 + 32);
  uint64_t v9 = *(void *)(v4 + 32);
  uint64_t v11 = *(void *)(v9 + 16);
  if (!v11)
  {
LABEL_12:
    sub_24F781274((uint64_t *)&unk_26B1F7C88);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_24F81BD54(inited);
    sub_24F786BE4();
    uint64_t v20 = *(void *)(*v10 + 16);
    sub_24F786F74();
    uint64_t v21 = *v10;
    *(void *)(v21 + 16) = v20 + 1;
    uint64_t v22 = v21 + 32 * v20;
    *(void *)(v22 + 32) = a1;
    *(void *)(v22 + 40) = a2;
    *(void *)(v22 + 48) = v19;
    *(unsigned char *)(v22 + 56) = 2;
    return;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = 0;
  uint64_t v13 = 32;
  while (1)
  {
    uint64_t v14 = (void *)(v9 + v13);
    if (*(unsigned char *)(v9 + v13 + 24) != 2) {
      goto LABEL_10;
    }
    uint64_t v15 = v14[2];
    if (*v14 == a1 && v14[1] == a2) {
      break;
    }
    char v17 = sub_24F8CFD00();
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
LABEL_10:
    ++v12;
    v13 += 32;
    if (v11 == v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = a3;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F8B6490();
  swift_bridgeObjectRelease();
  uint64_t v23 = *v10;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v10 = v23;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_24F83CCF4();
    uint64_t v23 = v30;
    *uint64_t v10 = v30;
  }
  if (v12 >= *(void *)(v23 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v25 = v23 + v13;
    uint64_t v26 = *(void *)(v23 + v13);
    uint64_t v27 = *(void *)(v23 + v13 + 8);
    uint64_t v28 = *(void *)(v23 + v13 + 16);
    *(void *)uint64_t v25 = a1;
    *(void *)(v25 + 8) = a2;
    *(void *)(v25 + 16) = v15;
    unsigned __int8 v29 = *(unsigned char *)(v23 + v13 + 24);
    *(unsigned char *)(v25 + 24) = 2;
    sub_24F7A203C(v26, v27, v28, v29);
  }
}

uint64_t sub_24F7EAEC8()
{
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F776A6C(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  return v0;
}

uint64_t sub_24F7EAF04()
{
  sub_24F7EAEC8();
  return MEMORY[0x270FA0228](v0, 66, 7);
}

uint64_t type metadata accessor for StatementAuthorizer()
{
  return self;
}

void sub_24F7EAF5C()
{
}

void sub_24F7EAF68(void *a1@<X8>)
{
  sub_24F7EBCC4();
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v3 = sub_24F8CEC70();
  *a1 = v2;
  a1[1] = v2;
  a1[2] = v3;
  v4._countAndFlagsBits = 36;
  v4._object = (void *)0xE100000000000000;
  v5._countAndFlagsBits = 115;
  v5._object = (void *)0xE100000000000000;
  Inflections.plural(_:options:_:)(v4, 1uLL, v5);
  v6._countAndFlagsBits = 9331;
  v6._object = (void *)0xE200000000000000;
  v7._countAndFlagsBits = 115;
  v7._object = (void *)0xE100000000000000;
  Inflections.plural(_:options:_:)(v6, 1uLL, v7);
  v8._countAndFlagsBits = 0x7365747C7861285ELL;
  v8._object = (void *)0xED00002473692974;
  v9._countAndFlagsBits = 1936011556;
  v9._object = (void *)0xE400000000000000;
  Inflections.plural(_:options:_:)(v8, 1uLL, v9);
  v10._countAndFlagsBits = 0x767C706F74636F28;
  v10._object = (void *)0xEE00247375297269;
  v11._countAndFlagsBits = 6893860;
  v11._object = (void *)0xE300000000000000;
  Inflections.plural(_:options:_:)(v10, 1uLL, v11);
  v12._countAndFlagsBits = 0x767C706F74636F28;
  v12._object = (void *)0xED00002469297269;
  v13._countAndFlagsBits = 6893860;
  v13._object = (void *)0xE300000000000000;
  Inflections.plural(_:options:_:)(v12, 1uLL, v13);
  v14._countAndFlagsBits = 0x737C7361696C6128;
  v14._object = (void *)0xEF24297375746174;
  v15._countAndFlagsBits = 1936011556;
  v15._object = (void *)0xE400000000000000;
  Inflections.plural(_:options:_:)(v14, 1uLL, v15);
  v16._countAndFlagsBits = 0x247329756228;
  v16._object = (void *)0xE600000000000000;
  v17._countAndFlagsBits = 0x7365733124;
  v17._object = (void *)0xE500000000000000;
  Inflections.plural(_:options:_:)(v16, 1uLL, v17);
  v18._countAndFlagsBits = 0x73656F3124;
  v19._object = (void *)0x800000024F8D23B0;
  v19._countAndFlagsBits = 0xD000000000000014;
  v18._object = (void *)0xE500000000000000;
  Inflections.plural(_:options:_:)(v19, 1uLL, v18);
  v20._countAndFlagsBits = 0x6D75295D69745B28;
  v20._object = (void *)0xE900000000000024;
  v21._countAndFlagsBits = 6369572;
  v21._object = (void *)0xE300000000000000;
  Inflections.plural(_:options:_:)(v20, 1uLL, v21);
  v22._countAndFlagsBits = 0x2461295D69745B28;
  v22._object = (void *)0xE800000000000000;
  v23._countAndFlagsBits = 6369572;
  v23._object = (void *)0xE300000000000000;
  Inflections.plural(_:options:_:)(v22, 1uLL, v23);
  v24._countAndFlagsBits = 611543411;
  v24._object = (void *)0xE400000000000000;
  v25._countAndFlagsBits = 7562611;
  v25._object = (void *)0xE300000000000000;
  Inflections.plural(_:options:_:)(v24, 1uLL, v25);
  v26._countAndFlagsBits = 0xD000000000000015;
  v26._object = (void *)0x800000024F8D23D0;
  v27._countAndFlagsBits = 0x73657632243124;
  v27._object = (void *)0xE700000000000000;
  Inflections.plural(_:options:_:)(v26, 1uLL, v27);
  v28._countAndFlagsBits = 0x24296576696828;
  v28._object = (void *)0xE700000000000000;
  v29._countAndFlagsBits = 7549220;
  v29._object = (void *)0xE300000000000000;
  Inflections.plural(_:options:_:)(v28, 1uLL, v29);
  v30._countAndFlagsBits = 0x7365693124;
  v31._countAndFlagsBits = 0xD000000000000010;
  v31._object = (void *)0x800000024F8D23F0;
  v30._object = (void *)0xE500000000000000;
  Inflections.plural(_:options:_:)(v31, 1uLL, v30);
  v32._countAndFlagsBits = 0x73737C68637C7828;
  v32._object = (void *)0xED0000242968737CLL;
  v33._countAndFlagsBits = 1936011556;
  v33._object = (void *)0xE400000000000000;
  Inflections.plural(_:options:_:)(v32, 1uLL, v33);
  v34._countAndFlagsBits = 0xD000000000000019;
  v34._object = (void *)0x800000024F8D2410;
  v35._countAndFlagsBits = 0x736563693124;
  v35._object = (void *)0xE600000000000000;
  Inflections.plural(_:options:_:)(v34, 1uLL, v35);
  v36._countAndFlagsBits = 0x756F296C7C6D285ELL;
  v36._object = (void *)0xEB00000000246573;
  v37._countAndFlagsBits = 0x6563693124;
  v37._object = (void *)0xE500000000000000;
  Inflections.plural(_:options:_:)(v36, 1uLL, v37);
  v38._countAndFlagsBits = 0x6369296C7C6D285ELL;
  v38._object = (void *)0xEA00000000002465;
  v39._countAndFlagsBits = 0x6563693124;
  v39._object = (void *)0xE500000000000000;
  Inflections.plural(_:options:_:)(v38, 1uLL, v39);
  v40._countAndFlagsBits = 1852125476;
  v41._countAndFlagsBits = 0x2429786F285ELL;
  v41._object = (void *)0xE600000000000000;
  v40._object = (void *)0xE400000000000000;
  Inflections.plural(_:options:_:)(v41, 1uLL, v40);
  v42._countAndFlagsBits = 0x24296E65786F285ELL;
  v42._object = (void *)0xE800000000000000;
  v43._countAndFlagsBits = 12580;
  v43._object = (void *)0xE200000000000000;
  Inflections.plural(_:options:_:)(v42, 1uLL, v43);
  v44._countAndFlagsBits = 0x24297A69757128;
  v44._object = (void *)0xE700000000000000;
  v45._countAndFlagsBits = 0x73657A3124;
  v45._object = (void *)0xE500000000000000;
  Inflections.plural(_:options:_:)(v44, 1uLL, v45);
  v46._countAndFlagsBits = 0x732961766E616328;
  v46._object = (void *)0xE900000000000024;
  v47._countAndFlagsBits = 0x7365733124;
  v47._object = (void *)0xE500000000000000;
  Inflections.plural(_:options:_:)(v46, 1uLL, v47);
  v48._countAndFlagsBits = 9331;
  v48._object = (void *)0xE200000000000000;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  Inflections.singular(_:options:_:)(v48, 1uLL, v49);
  v50._countAndFlagsBits = 0x2429737328;
  v50._object = (void *)0xE500000000000000;
  v51._countAndFlagsBits = 12580;
  v51._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v50, 1uLL, v51);
  v52._countAndFlagsBits = 0x24737765296E28;
  v52._object = (void *)0xE700000000000000;
  v53._countAndFlagsBits = 0x7377653124;
  v53._object = (void *)0xE500000000000000;
  Inflections.singular(_:options:_:)(v52, 1uLL, v53);
  v54._countAndFlagsBits = 0x2461295D69745B28;
  v54._object = (void *)0xE800000000000000;
  v55._countAndFlagsBits = 1836396836;
  v55._object = (void *)0xE400000000000000;
  Inflections.singular(_:options:_:)(v54, 1uLL, v55);
  v56._countAndFlagsBits = 0xD000000000000043;
  v56._object = (void *)0x800000024F8D2430;
  v57._countAndFlagsBits = 0x7369733124;
  v57._object = (void *)0xE500000000000000;
  Inflections.singular(_:options:_:)(v56, 1uLL, v57);
  v58._object = (void *)0x800000024F8D2480;
  v58._countAndFlagsBits = 0xD000000000000012;
  v59._countAndFlagsBits = 0x7369733124;
  v59._object = (void *)0xE500000000000000;
  Inflections.singular(_:options:_:)(v58, 1uLL, v59);
  v60._countAndFlagsBits = 0x6576295D665E5B28;
  v60._object = (void *)0xEA00000000002473;
  v61._countAndFlagsBits = 1701196068;
  v61._object = (void *)0xE400000000000000;
  Inflections.singular(_:options:_:)(v60, 1uLL, v61);
  v62._countAndFlagsBits = 0x2473296576696828;
  v62._object = (void *)0xE800000000000000;
  v63._countAndFlagsBits = 12580;
  v63._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v62, 1uLL, v63);
  v64._countAndFlagsBits = 0x2473296576697428;
  v64._object = (void *)0xE800000000000000;
  v65._countAndFlagsBits = 12580;
  v65._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v64, 1uLL, v65);
  v66._countAndFlagsBits = 6697252;
  v67._countAndFlagsBits = 0x6576295D726C5B28;
  v67._object = (void *)0xEA00000000002473;
  v66._object = (void *)0xE300000000000000;
  Inflections.singular(_:options:_:)(v67, 1uLL, v66);
  v68._object = (void *)0x800000024F8D24A0;
  v68._countAndFlagsBits = 0xD000000000000012;
  v69._countAndFlagsBits = 7942436;
  v69._object = (void *)0xE300000000000000;
  Inflections.singular(_:options:_:)(v68, 1uLL, v69);
  v70._countAndFlagsBits = 0x7365697265297328;
  v70._object = (void *)0xE900000000000024;
  v71._countAndFlagsBits = 0x73656972653124;
  v71._object = (void *)0xE700000000000000;
  Inflections.singular(_:options:_:)(v70, 1uLL, v71);
  v72._countAndFlagsBits = 0x736569766F296D28;
  v72._object = (void *)0xE900000000000024;
  v73._countAndFlagsBits = 0x6569766F3124;
  v73._object = (void *)0xE600000000000000;
  Inflections.singular(_:options:_:)(v72, 1uLL, v73);
  v74._countAndFlagsBits = 0x73737C68637C7828;
  v74._object = (void *)0xEF2473652968737CLL;
  v75._countAndFlagsBits = 12580;
  v75._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v74, 1uLL, v75);
  v76._countAndFlagsBits = 0x6369296C7C6D285ELL;
  v76._object = (void *)0xEA00000000002465;
  v77._countAndFlagsBits = 0x6573756F3124;
  v77._object = (void *)0xE600000000000000;
  Inflections.singular(_:options:_:)(v76, 1uLL, v77);
  v78._countAndFlagsBits = 0x7365282973756228;
  v78._object = (void *)0xEB00000000243F29;
  v79._countAndFlagsBits = 12580;
  v79._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v78, 1uLL, v79);
  v80._countAndFlagsBits = 0x247365296F28;
  v80._object = (void *)0xE600000000000000;
  v81._countAndFlagsBits = 12580;
  v81._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v80, 1uLL, v81);
  v82._countAndFlagsBits = 0x247329656F687328;
  v82._object = (void *)0xE800000000000000;
  v83._countAndFlagsBits = 12580;
  v83._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v82, 1uLL, v83);
  v84._countAndFlagsBits = 1936273700;
  v85._countAndFlagsBits = 0xD000000000000013;
  v85._object = (void *)0x800000024F8D24C0;
  v84._object = (void *)0xE400000000000000;
  Inflections.singular(_:options:_:)(v85, 1uLL, v84);
  v86._countAndFlagsBits = 0x7369783124;
  v87._object = (void *)0xEB0000000024735DLL;
  v87._countAndFlagsBits = 0x65695B782961285ELL;
  v86._object = (void *)0xE500000000000000;
  Inflections.singular(_:options:_:)(v87, 1uLL, v86);
  v88._countAndFlagsBits = 1937060132;
  v89._object = (void *)0x800000024F8D24E0;
  v89._countAndFlagsBits = 0xD000000000000012;
  v88._object = (void *)0xE400000000000000;
  Inflections.singular(_:options:_:)(v89, 1uLL, v88);
  v90._object = (void *)0x800000024F8D2500;
  v90._countAndFlagsBits = 0xD000000000000014;
  v91._countAndFlagsBits = 12580;
  v91._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v90, 1uLL, v91);
  v92._countAndFlagsBits = 0x246E6529786F285ELL;
  v92._object = (void *)0xE800000000000000;
  v93._countAndFlagsBits = 12580;
  v93._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v92, 1uLL, v93);
  v94._countAndFlagsBits = 0x6E697C7472657628;
  v94._object = (void *)0xEF24736563692964;
  v95._countAndFlagsBits = 2019897636;
  v95._object = (void *)0xE400000000000000;
  Inflections.singular(_:options:_:)(v94, 1uLL, v95);
  v96._countAndFlagsBits = 2020159780;
  v97._object = (void *)0xEB00000000247365;
  v97._countAndFlagsBits = 0x6369297274616D28;
  v96._object = (void *)0xE400000000000000;
  Inflections.singular(_:options:_:)(v97, 1uLL, v96);
  v98._countAndFlagsBits = 0x657A297A69757128;
  v98._object = (void *)0xEA00000000002473;
  v99._countAndFlagsBits = 12580;
  v99._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v98, 1uLL, v99);
  v100._countAndFlagsBits = 0x7361626174616428;
  v100._object = (void *)0xEC00000024732965;
  v101._countAndFlagsBits = 12580;
  v101._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v100, 1uLL, v101);
  v102._countAndFlagsBits = 0x297361766E616328;
  v102._object = (void *)0xEE00243F29736528;
  v103._countAndFlagsBits = 12580;
  v103._object = (void *)0xE200000000000000;
  Inflections.singular(_:options:_:)(v102, 1uLL, v103);
  sub_24F781274((uint64_t *)&unk_26B1F7C88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24F8E0950;
  *(void *)(inited + 32) = 0x656369766461;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 48) = 0x7370726F63;
  *(void *)(inited + 56) = 0xE500000000000000;
  *(void *)(inited + 64) = 1701013860;
  *(void *)(inited + 72) = 0xE400000000000000;
  *(void *)(inited + 80) = 0x6E656D7069757165;
  *(void *)(inited + 88) = 0xE900000000000074;
  *(void *)(inited + 96) = 1752394086;
  *(void *)(inited + 104) = 0xE400000000000000;
  *(void *)(inited + 112) = 0x74616D726F666E69;
  *(void *)(inited + 120) = 0xEB000000006E6F69;
  *(void *)(inited + 128) = 0x736E61656ALL;
  *(void *)(inited + 136) = 0xE500000000000000;
  *(void *)(inited + 144) = 0x736F64756BLL;
  *(void *)(inited + 152) = 0xE500000000000000;
  *(void *)(inited + 160) = 0x79656E6F6DLL;
  *(void *)(inited + 168) = 0xE500000000000000;
  *(void *)(inited + 176) = 0x6E6972707366666FLL;
  *(void *)(inited + 184) = 0xE900000000000067;
  *(void *)(inited + 192) = 0x6563696C6F70;
  *(void *)(inited + 200) = 0xE600000000000000;
  *(void *)(inited + 208) = 1701013874;
  *(void *)(inited + 216) = 0xE400000000000000;
  *(void *)(inited + 224) = 0x7065656873;
  *(void *)(inited + 232) = 0xE500000000000000;
  *(void *)(inited + 240) = 0x73656963657073;
  *(void *)(inited + 248) = 0xE700000000000000;
  Inflections.uncountableWords(_:)((Swift::OpaquePointer)inited);
  swift_setDeallocating();
  sub_24F87FF54();
  v105._countAndFlagsBits = 0x646C696863;
  v105._object = (void *)0xE500000000000000;
  v106._countAndFlagsBits = 0x6E6572646C696863;
  v106._object = (void *)0xE800000000000000;
  Inflections.irregularSuffix(_:_:)(v105, v106);
  v107._countAndFlagsBits = 1953460070;
  v107._object = (void *)0xE400000000000000;
  v108._countAndFlagsBits = 1952802150;
  v108._object = (void *)0xE400000000000000;
  Inflections.irregularSuffix(_:_:)(v107, v108);
  v109._countAndFlagsBits = 1717658988;
  v109._object = (void *)0xE400000000000000;
  v110._countAndFlagsBits = 0x73657661656CLL;
  v110._object = (void *)0xE600000000000000;
  Inflections.irregularSuffix(_:_:)(v109, v110);
  v111._countAndFlagsBits = 7234925;
  v112._countAndFlagsBits = 7233901;
  v112._object = (void *)0xE300000000000000;
  v111._object = (void *)0xE300000000000000;
  Inflections.irregularSuffix(_:_:)(v112, v111);
  v113._countAndFlagsBits = 1702260589;
  v113._object = (void *)0xE400000000000000;
  v114._countAndFlagsBits = 0x7365766F6DLL;
  v114._object = (void *)0xE500000000000000;
  Inflections.irregularSuffix(_:_:)(v113, v114);
  v115._countAndFlagsBits = 0x6E6F73726570;
  v115._object = (void *)0xE600000000000000;
  v116._countAndFlagsBits = 0x656C706F6570;
  v116._object = (void *)0xE600000000000000;
  Inflections.irregularSuffix(_:_:)(v115, v116);
  v117._countAndFlagsBits = 7890291;
  v117._object = (void *)0xE300000000000000;
  v118._countAndFlagsBits = 0x7365786573;
  v118._object = (void *)0xE500000000000000;
  Inflections.irregularSuffix(_:_:)(v117, v118);
  v119._object = (void *)0xE900000000000073;
  v120._countAndFlagsBits = 0x6E656D6963657073;
  v120._object = (void *)0xE800000000000000;
  v119._countAndFlagsBits = 0x6E656D6963657073;
  Inflections.irregularSuffix(_:_:)(v120, v119);
  v121._countAndFlagsBits = 0x6569626D6F7ALL;
  v121._object = (void *)0xE600000000000000;
  v122._countAndFlagsBits = 0x736569626D6F7ALL;
  v122._object = (void *)0xE700000000000000;
  Inflections.irregularSuffix(_:_:)(v121, v122);
}

uint64_t static Inflections.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_26B1F5678 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = *((void *)&xmmword_26B1F5730 + 1);
  uint64_t v3 = qword_26B1F5740;
  *a1 = xmmword_26B1F5730;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static Inflections.default.setter(uint64_t a1)
{
  long long v3 = *(_OWORD *)a1;
  uint64_t v1 = *(void *)(a1 + 16);
  if (qword_26B1F5678 != -1) {
    swift_once();
  }
  swift_beginAccess();
  xmmword_26B1F5730 = v3;
  qword_26B1F5740 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*static Inflections.default.modify())()
{
  if (qword_26B1F5678 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_24F7EBCC4()
{
  unint64_t result = qword_26B1F5850;
  if (!qword_26B1F5850)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B1F5850);
  }
  return result;
}

uint64_t sub_24F7EBD04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v2 = v13;
    Swift::String v4 = (void *)(a1 + 32);
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      sub_24F7811D0(v4, v5);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      uint64_t v9 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24F77C4AC();
      }
      unint64_t v10 = *(void *)(v13 + 16);
      if (v10 >= *(void *)(v13 + 24) >> 1) {
        sub_24F77C4AC();
      }
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v9;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24F7EBE30(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    char v7 = sub_24F8CFD00();
    uint64_t result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v8 = a2 + 7;
  uint64_t v9 = a1 + 7;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t result = *(v9 - 1);
    if (result != *(v8 - 1) || *v9 != *v8)
    {
      uint64_t result = sub_24F8CFD00();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24F7EBF00(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 == v6)
  {
    if (!v5) {
      return 1;
    }
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    if (a1 < 0) {
      uint64_t v7 = a1;
    }
    if (v4) {
      uint64_t v8 = v7;
    }
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
    if (a2 < 0) {
      uint64_t v9 = a2;
    }
    if ((unint64_t)a2 >> 62) {
      uint64_t v10 = v9;
    }
    if (v8 == v10) {
      return 1;
    }
    if (v5 < 0)
    {
LABEL_40:
      __break(1u);
    }
    else
    {
      sub_24F8A0264(0);
      unint64_t v22 = a1 & 0xC000000000000001;
      if ((a1 & 0xC000000000000001) == 0)
      {
        uint64_t v11 = *(void *)(a1 + 32);
        swift_retain();
        goto LABEL_19;
      }
    }
    uint64_t v11 = MEMORY[0x253364060](0, a1);
LABEL_19:
    unint64_t v12 = a2 & 0xC000000000000001;
    sub_24F8A0264(0);
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = MEMORY[0x253364060](0, a2);
    }
    else
    {
      uint64_t v13 = *(void *)(a2 + 32);
      swift_retain();
    }
    type metadata accessor for Row();
    char v14 = static Row.== infix(_:_:)(v11, v13);
    swift_release();
    swift_release();
    if (v14)
    {
      uint64_t v15 = 1 - v5;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v5 = v15 + i == 5;
        if (v15 + i == 5) {
          return v5;
        }
        unint64_t v17 = i - 4;
        if (v22)
        {
          uint64_t v18 = MEMORY[0x253364060](i - 4, a1);
          if (v12) {
            goto LABEL_26;
          }
        }
        else
        {
          if (v17 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          uint64_t v18 = *(void *)(a1 + 8 * i);
          swift_retain();
          if (v12)
          {
LABEL_26:
            uint64_t v19 = MEMORY[0x253364060](i - 4, a2);
            goto LABEL_31;
          }
        }
        if (v17 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_39;
        }
        uint64_t v19 = *(void *)(a2 + 8 * i);
        swift_retain();
LABEL_31:
        char v20 = static Row.== infix(_:_:)(v18, v19);
        swift_release();
        swift_release();
        if ((v20 & 1) == 0) {
          return v5;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_24F7EC184(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  long long v3 = (uint64_t *)(a2 + 48);
  unint64_t v4 = (unint64_t *)(a1 + 48);
  while (2)
  {
    unint64_t v5 = *(v4 - 2);
    unint64_t v6 = *(v4 - 1);
    uint64_t v7 = *(v3 - 2);
    unint64_t v8 = *(v3 - 1);
    int v10 = *(unsigned __int8 *)v3;
    v3 += 3;
    int v9 = v10;
    int v12 = *(unsigned __int8 *)v4;
    v4 += 3;
    char v11 = v12;
    switch(v12)
    {
      case 1:
        if (v9)
        {
          if (v9 != 1) {
            goto LABEL_168;
          }
          sub_24F781F10(v5, v6, 1);
          sub_24F781F10(v7, v8, 1);
          if (*(double *)&v5 != *(double *)&v7) {
            return 0;
          }
        }
        else
        {
          sub_24F781F10(v5, v6, 1);
          sub_24F781F10(v7, v8, 0);
          double v30 = sub_24F77BCBC();
          if (v17 ^ v16 | v18) {
            BOOL v31 = 0;
          }
          else {
            BOOL v31 = *(double *)&v5 < v29;
          }
          if (!v31 || v30 != *(double *)&v5 || v7 != v28) {
            return 0;
          }
        }
        goto LABEL_77;
      case 2:
        if (v9 == 2)
        {
          if (v5 != v7 || v6 != v8)
          {
            char v21 = sub_24F8CFD00();
            sub_24F77AED0(v7, v8);
            sub_24F781F10(v7, v8, 2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            goto LABEL_77;
          }
          sub_24F77AED0(v5, v6);
          uint64_t v25 = v5;
          unint64_t v26 = v6;
          char v27 = 2;
          goto LABEL_76;
        }
        swift_bridgeObjectRetain();
        goto LABEL_168;
      case 3:
        if (v9 != 3)
        {
          sub_24F78419C(v5, v6);
LABEL_168:
          sub_24F781F34(v7, v8, v9);
          goto LABEL_169;
        }
        uint64_t v22 = 0;
        unint64_t v23 = HIDWORD(v5);
        switch(v6 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v5), v5))
            {
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
LABEL_194:
              __break(1u);
            }
            unint64_t v34 = HIDWORD(v5);
            uint64_t v22 = HIDWORD(v5) - (int)v5;
LABEL_57:
            sub_24F781F34(v5, v6, 3);
            sub_24F781F34(v5, v6, 3);
            LOBYTE(v23) = v34;
            break;
          case 2uLL:
            uint64_t v36 = *(void *)(v5 + 16);
            uint64_t v35 = *(void *)(v5 + 24);
            uint64_t v22 = v35 - v36;
            if (__OFSUB__(v35, v36)) {
              goto LABEL_173;
            }
            unint64_t v34 = HIDWORD(v5);
            goto LABEL_57;
          case 3uLL:
            goto LABEL_58;
          default:
            uint64_t v22 = BYTE6(v6);
            goto LABEL_58;
        }
        break;
      case 4:
        if (v9 != 4 || (v8 | v7) != 0) {
          goto LABEL_168;
        }
        sub_24F781F10(v5, v6, 4);
        uint64_t v25 = 0;
        unint64_t v26 = 0;
        char v27 = 4;
        goto LABEL_76;
      default:
        if (v9)
        {
          if (v9 != 1) {
            goto LABEL_168;
          }
          sub_24F781F10(v5, v6, 0);
          sub_24F781F10(v7, v8, 1);
          double v15 = sub_24F77BCBC();
          if (v17 ^ v16 | v18) {
            BOOL v17 = 0;
          }
          else {
            BOOL v17 = *(double *)&v7 < v14;
          }
          BOOL v18 = v17 && v15 == *(double *)&v7;
          if (!v18 || v5 != v13) {
            return 0;
          }
        }
        else
        {
          sub_24F781F10(v5, v6, 0);
          sub_24F781F10(v7, v8, 0);
          if (v5 != v7) {
            return 0;
          }
        }
        goto LABEL_77;
    }
LABEL_58:
    int64_t v37 = v8 >> 62;
    switch(v8 >> 62)
    {
      case 1uLL:
        LODWORD(v38) = HIDWORD(v7) - v7;
        if (__OFSUB__(HIDWORD(v7), v7)) {
          goto LABEL_174;
        }
        uint64_t v38 = (int)v38;
LABEL_63:
        if (v22 == v38)
        {
          if (v22 < 1)
          {
LABEL_75:
            sub_24F7807AC();
            sub_24F781F10(v5, v6, 3);
            uint64_t v25 = v7;
            unint64_t v26 = v8;
            char v27 = 3;
LABEL_76:
            sub_24F781F10(v25, v26, v27);
            goto LABEL_77;
          }
          uint64_t v41 = v7 >> 32;
          switch(v6 >> 62)
          {
            case 1uLL:
              sub_24F78148C();
              size_t __n = v45;
              uint64_t v126 = v46;
              if ((int)v5 > (uint64_t)v5 >> 32) {
                goto LABEL_176;
              }
              uint64_t v47 = sub_24F77E7B4();
              sub_24F781F34(v47, v6, 3);
              uint64_t v48 = sub_24F8CE6A0();
              if (v48)
              {
                uint64_t v22 = v48;
                uint64_t v49 = sub_24F8CE6C0();
                if (__OFSUB__((int)v5, v49)) {
                  goto LABEL_178;
                }
                v124 = (const void *)(v22 + (int)v5 - v49);
              }
              else
              {
                v124 = 0;
              }
              uint64_t v70 = sub_24F8CE6B0();
              if (!v37)
              {
                sub_24F77F524(v70, v71, v72, v73, v74, v75, v76, v77, v95, (uint64_t)v96, __n, v102, v103, v104, v105, v106, v107, v108, v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122);
                BYTE5(__s1[1]) = v123;
                if (!v124) {
                  goto LABEL_205;
                }
                int v57 = memcmp(v124, __s1, __nc);
                goto LABEL_151;
              }
              if (v37 == 1)
              {
                if (v126 < (int)v7) {
                  goto LABEL_185;
                }
                swift_retain();
                sub_24F8CE6A0();
                sub_24F771010();
                if (v78)
                {
                  uint64_t v79 = sub_24F8CE6C0();
                  if (__OFSUB__(v37, v79)) {
                    goto LABEL_194;
                  }
                  v22 += v37 - v79;
                }
                sub_24F8CE6B0();
                sub_24F77B570();
                if (!v124) {
                  goto LABEL_198;
                }
                if (!v22) {
                  goto LABEL_199;
                }
                int v57 = sub_24F782F80(v124, v80);
                sub_24F77FD3C();
LABEL_151:
                sub_24F77DF74();
LABEL_152:
                sub_24F77FD3C();
LABEL_153:
                sub_24F781F10(v5, v6, 3);
                sub_24F781F10(v5, v6, 3);
                sub_24F77FD3C();
                if (v57) {
                  return 0;
                }
                break;
              }
              sub_24F775C04();
              swift_retain();
              uint64_t v90 = sub_24F8CE6A0();
              if (v90)
              {
                uint64_t v91 = sub_24F8CE6C0();
                if (__OFSUB__(v37, v91)) {
                  goto LABEL_193;
                }
                v90 += v37 - v91;
              }
              sub_24F782AAC();
              if (v16) {
                goto LABEL_186;
              }
              uint64_t v92 = sub_24F8CE6B0();
              if (v92 >= v37) {
                size_t v93 = v8 >> 62;
              }
              else {
                size_t v93 = v92;
              }
              if (!v124) {
                goto LABEL_206;
              }
              if (!v90) {
                goto LABEL_207;
              }
              int v69 = sub_24F782F80(v124, v93);
              swift_release();
              swift_release();
              sub_24F77DF74();
LABEL_147:
              sub_24F77DF74();
              sub_24F781F10(v5, v6, 3);
              sub_24F77FD3C();
              if (v69) {
                return 0;
              }
              break;
            case 2uLL:
              sub_24F78148C();
              uint64_t v127 = v50;
              Swift::String v97 = *(char **)(v5 + 16);
              size_t __na = v51;
              sub_24F77E7B4();
              swift_retain();
              swift_retain();
              uint64_t v52 = sub_24F8CE6A0();
              if (v52)
              {
                uint64_t v22 = v52;
                uint64_t v53 = sub_24F8CE6C0();
                if (__OFSUB__(v97, v53)) {
                  goto LABEL_177;
                }
                Swift::String v96 = &v97[v22 - v53];
              }
              else
              {
                Swift::String v96 = 0;
              }
              uint64_t v58 = sub_24F8CE6B0();
              if (v37)
              {
                if (v37 == 1)
                {
                  if (v127 < (int)v7) {
                    goto LABEL_181;
                  }
                  swift_retain();
                  sub_24F8CE6A0();
                  sub_24F771010();
                  if (v66)
                  {
                    uint64_t v67 = sub_24F8CE6C0();
                    if (__OFSUB__(v37, v67)) {
                      goto LABEL_192;
                    }
                    v22 += v37 - v67;
                  }
                  sub_24F8CE6B0();
                  sub_24F77B570();
                  if (!v96) {
                    goto LABEL_196;
                  }
                  if (!v22) {
                    goto LABEL_197;
                  }
                  int v69 = sub_24F782F80(v96, v68);
                  sub_24F77FD3C();
                }
                else
                {
                  sub_24F775C04();
                  swift_retain();
                  uint64_t v86 = sub_24F8CE6A0();
                  if (v86)
                  {
                    uint64_t v87 = sub_24F8CE6C0();
                    if (__OFSUB__(v37, v87)) {
                      goto LABEL_191;
                    }
                    v86 += v37 - v87;
                  }
                  sub_24F782AAC();
                  if (v16) {
                    goto LABEL_184;
                  }
                  uint64_t v88 = sub_24F8CE6B0();
                  if (v88 >= v37) {
                    size_t v89 = v8 >> 62;
                  }
                  else {
                    size_t v89 = v88;
                  }
                  if (!v96) {
                    goto LABEL_203;
                  }
                  if (!v86) {
                    goto LABEL_204;
                  }
                  int v69 = sub_24F782F80(v96, v89);
                  swift_release();
                  swift_release();
                }
              }
              else
              {
                sub_24F77F524(v58, v59, v60, v61, v62, v63, v64, v65, v95, (uint64_t)v96, __na, v102, v103, v104, v105, v106, v107, v108, v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122);
                BYTE5(__s1[1]) = v123;
                if (!v96) {
                  goto LABEL_202;
                }
                int v69 = memcmp(v96, __s1, __nb);
              }
              sub_24F77FD3C();
              swift_release();
LABEL_146:
              swift_release();
              goto LABEL_147;
            case 3uLL:
              memset(__s1, 0, 14);
              if (!v37) {
                goto LABEL_97;
              }
              if (v37 == 1)
              {
                uint64_t v125 = v7 >> 32;
                if (v41 < (int)v7) {
                  goto LABEL_180;
                }
                sub_24F77EEC8();
                sub_24F771010();
                if (v54)
                {
                  uint64_t v55 = sub_24F8CE6C0();
                  if (__OFSUB__(v37, v55)) {
                    goto LABEL_190;
                  }
                  v22 += v37 - v55;
                }
                uint64_t v44 = sub_24F8CE6B0();
                if (!v22) {
                  goto LABEL_195;
                }
LABEL_93:
                if (v44 >= v125 - v37) {
                  size_t v56 = v125 - v37;
                }
                else {
                  size_t v56 = v44;
                }
                int v57 = memcmp(__s1, (const void *)v22, v56);
                goto LABEL_152;
              }
              sub_24F773AB0();
              swift_retain();
              Swift::String v81 = (char *)sub_24F8CE6A0();
              if (v81)
              {
                uint64_t v84 = sub_24F8CE6C0();
                if (__OFSUB__(v37, v84)) {
                  goto LABEL_188;
                }
                v81 += v37 - v84;
              }
              sub_24F782AAC();
              if (v16) {
                goto LABEL_183;
              }
              uint64_t v83 = sub_24F8CE6B0();
              if (!v81) {
                goto LABEL_201;
              }
LABEL_129:
              if (v83 >= v37) {
                size_t v85 = v8 >> 62;
              }
              else {
                size_t v85 = v83;
              }
              int v69 = memcmp(__s1, v81, v85);
              swift_release();
              goto LABEL_146;
            default:
              LOWORD(__s1[0]) = v5;
              BYTE2(__s1[0]) = BYTE2(v5);
              BYTE3(__s1[0]) = BYTE3(v5);
              BYTE4(__s1[0]) = v23;
              BYTE5(__s1[0]) = BYTE5(v5);
              BYTE6(__s1[0]) = BYTE6(v5);
              HIBYTE(__s1[0]) = HIBYTE(v5);
              LOWORD(__s1[1]) = v6;
              BYTE2(__s1[1]) = BYTE2(v6);
              BYTE3(__s1[1]) = BYTE3(v6);
              BYTE4(__s1[1]) = BYTE4(v6);
              BYTE5(__s1[1]) = BYTE5(v6);
              if (!v37)
              {
LABEL_97:
                uint64_t __s2 = v7;
                __int16 v129 = v8;
                char v130 = BYTE2(v8);
                char v131 = BYTE3(v8);
                char v132 = BYTE4(v8);
                char v133 = BYTE5(v8);
                sub_24F781F34(v7, v8, 3);
                int v57 = memcmp(__s1, &__s2, BYTE6(v8));
                goto LABEL_153;
              }
              if (v37 == 1)
              {
                uint64_t v125 = v7 >> 32;
                if (v41 < (int)v7) {
                  goto LABEL_179;
                }
                sub_24F77EEC8();
                sub_24F771010();
                if (v42)
                {
                  uint64_t v43 = sub_24F8CE6C0();
                  if (__OFSUB__(v37, v43)) {
                    goto LABEL_189;
                  }
                  v22 += v37 - v43;
                }
                uint64_t v44 = sub_24F8CE6B0();
                if (!v22)
                {
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
LABEL_198:
                  __break(1u);
LABEL_199:
                  __break(1u);
LABEL_200:
                  __break(1u);
LABEL_201:
                  __break(1u);
LABEL_202:
                  __break(1u);
LABEL_203:
                  __break(1u);
LABEL_204:
                  __break(1u);
LABEL_205:
                  __break(1u);
LABEL_206:
                  __break(1u);
LABEL_207:
                  __break(1u);
                  JUMPOUT(0x24F7ECB70);
                }
                goto LABEL_93;
              }
              sub_24F773AB0();
              swift_retain();
              Swift::String v81 = (char *)sub_24F8CE6A0();
              if (v81)
              {
                uint64_t v82 = sub_24F8CE6C0();
                if (__OFSUB__(v37, v82)) {
                  goto LABEL_187;
                }
                v81 += v37 - v82;
              }
              sub_24F782AAC();
              if (v16) {
                goto LABEL_182;
              }
              uint64_t v83 = sub_24F8CE6B0();
              if (!v81) {
                goto LABEL_200;
              }
              goto LABEL_129;
          }
LABEL_77:
          if (!--v2) {
            return 1;
          }
          continue;
        }
LABEL_171:
        char v11 = 3;
        sub_24F7807AC();
        LOBYTE(v9) = 3;
LABEL_169:
        sub_24F781F10(v5, v6, v11);
        sub_24F781F10(v7, v8, v9);
        return 0;
      case 2uLL:
        uint64_t v40 = *(void *)(v7 + 16);
        uint64_t v39 = *(void *)(v7 + 24);
        BOOL v16 = __OFSUB__(v39, v40);
        uint64_t v38 = v39 - v40;
        if (!v16) {
          goto LABEL_63;
        }
        goto LABEL_175;
      case 3uLL:
        if (!v22) {
          goto LABEL_75;
        }
        goto LABEL_171;
      default:
        uint64_t v38 = BYTE6(v8);
        goto LABEL_63;
    }
  }
}

uint64_t ForeignKey.init(_:to:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ForeignKey.init(_:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = sub_24F7EBD04(a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v7 = sub_24F7EBD04(a2);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  *a3 = v5;
  a3[1] = v7;
  return result;
}

uint64_t static ForeignKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  long long v3 = *(void **)(a2 + 8);
  if (sub_24F7EBE30(*(void **)a1, *(void **)a2))
  {
    if (v2)
    {
      if (v3 && (sub_24F7EBE30(v2, v3) & 1) != 0) {
        return 1;
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

void *assignWithCopy for ForeignKey(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ForeignKey()
{
  return &type metadata for ForeignKey;
}

uint64_t sub_24F7ECD0C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result = sub_24F8CE6A0();
  unint64_t v8 = (char *)result;
  if (result)
  {
    uint64_t result = sub_24F8CE6C0();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  int64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = sub_24F8CE6B0();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = result;
  }
  return memcmp(a4, v8, v11) == 0;
}

uint64_t Configuration.foreignKeysEnabled.getter()
{
  return *v0;
}

uint64_t Configuration.foreignKeysEnabled.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*Configuration.foreignKeysEnabled.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.readonly.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t Configuration.readonly.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*Configuration.readonly.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.label.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Configuration.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*Configuration.label.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.acceptsDoubleQuotedStringLiterals.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t Configuration.acceptsDoubleQuotedStringLiterals.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*Configuration.acceptsDoubleQuotedStringLiterals.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.observesSuspensionNotifications.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t Configuration.observesSuspensionNotifications.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

uint64_t (*Configuration.observesSuspensionNotifications.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.publicStatementArguments.getter()
{
  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t Configuration.publicStatementArguments.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 26) = result;
  return result;
}

uint64_t (*Configuration.publicStatementArguments.modify())(void)
{
  return nullsub_1;
}

void Configuration.prepareDatabase(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_retain();
  sub_24F786C20();
  uint64_t v6 = *(void *)(*(void *)(v2 + 32) + 16);
  sub_24F786FB0();
  uint64_t v7 = *(void *)(v2 + 32);
  *(void *)(v7 + 16) = v6 + 1;
  uint64_t v8 = v7 + 16 * v6;
  *(void *)(v8 + 32) = sub_24F7ECFF8;
  *(void *)(v8 + 40) = v5;
  *(void *)(v2 + 32) = v7;
}

uint64_t sub_24F7ECFC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F7ECFF8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void Configuration.defaultTransactionKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *Configuration.defaultTransactionKind.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*Configuration.defaultTransactionKind.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.allowsUnsafeTransactions.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t Configuration.allowsUnsafeTransactions.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 41) = result;
  return result;
}

uint64_t (*Configuration.allowsUnsafeTransactions.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.busyMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24F7EDD1C(v2, v3, v4);
}

uint64_t Configuration.busyMode.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24F7EDD34(*(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  *(unsigned char *)(v1 + 64) = v4;
  return result;
}

uint64_t (*Configuration.busyMode.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.maximumReaderCount.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t Configuration.maximumReaderCount.setter(uint64_t result)
{
  *(void *)(v1 + 96) = result;
  return result;
}

uint64_t (*Configuration.maximumReaderCount.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.qos.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Configuration() + 64);
  sub_24F8CEC00();
  sub_24F770E70();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a1, v3, v4);
}

uint64_t Configuration.qos.setter()
{
  uint64_t v2 = v1 + *(int *)(sub_24F77DFB0() + 64);
  sub_24F8CEC00();
  sub_24F770E70();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v2, v0, v3);
}

uint64_t (*Configuration.qos.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_24F7ED248@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Configuration();
  sub_24F770E70();
  MEMORY[0x270FA5388](v5);
  sub_24F76B830();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_24F781274(&qword_26B1F75E8);
  MEMORY[0x270FA5388](v9 - 8);
  sub_24F76B830();
  uint64_t v12 = v11 - v10;
  if (*(void *)(v1 + *(int *)(v4 + 68)))
  {
    sub_24F8CF530();
    uint64_t v13 = sub_24F8CEC00();
    uint64_t v14 = v12;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v13 = sub_24F8CEC00();
    uint64_t v14 = v12;
    uint64_t v15 = 1;
  }
  sub_24F7771BC(v14, v15, 1, v13);
  sub_24F7EEC68(v2, v8);
  sub_24F8CEC00();
  if (sub_24F777048(v12, 1, v13) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, v8 + *(int *)(v4 + 64), v13);
    sub_24F7EECCC(v8);
    return sub_24F7EED28(v12);
  }
  else
  {
    sub_24F7EECCC(v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12, v13);
  }
}

void *Configuration.targetQueue.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for Configuration() + 68));
  id v2 = v1;
  return v1;
}

void Configuration.targetQueue.setter()
{
  uint64_t v2 = *(int *)(sub_24F77DFB0() + 68);

  *(void *)(v1 + v2) = v0;
}

uint64_t (*Configuration.targetQueue.modify())(void)
{
  return nullsub_1;
}

void *Configuration.writeTargetQueue.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for Configuration() + 72));
  id v2 = v1;
  return v1;
}

void Configuration.writeTargetQueue.setter()
{
  uint64_t v2 = *(int *)(sub_24F77DFB0() + 72);

  *(void *)(v1 + v2) = v0;
}

uint64_t (*Configuration.writeTargetQueue.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.automaticMemoryManagement.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Configuration() + 76));
}

uint64_t Configuration.automaticMemoryManagement.setter(char a1)
{
  uint64_t result = type metadata accessor for Configuration();
  *(unsigned char *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

uint64_t (*Configuration.automaticMemoryManagement.modify())(void)
{
  return nullsub_1;
}

uint64_t Configuration.init()@<X0>(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 1;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 23) = 0;
  *(void *)(a1 + 32) = MEMORY[0x263F8EE78];
  *(_WORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = -1;
  *(void *)(a1 + 96) = 5;
  uint64_t v2 = (int *)type metadata accessor for Configuration();
  uint64_t result = sub_24F8CEBF0();
  *(void *)(a1 + v2[17]) = 0;
  *(void *)(a1 + v2[18]) = 0;
  *(unsigned char *)(a1 + v2[19]) = 1;
  *(unsigned char *)(a1 + v2[20]) = 0;
  uint64_t v4 = (void *)(a1 + v2[21]);
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(a1 + v2[22]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(a1 + v2[23]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t sub_24F7ED6AC(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    for (uint64_t i = v3 + 40; ; i += 16)
    {
      uint64_t v7 = *(void (**)(uint64_t *))(i - 8);
      uint64_t v8 = v5;
      swift_retain();
      v7(&v8);
      if (v2) {
        break;
      }
      swift_release();
      if (!--v4) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F7ED750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(v4 + 16))
  {
    uint64_t v6 = a1;
    swift_bridgeObjectRetain();
    if (!a4) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  uint64_t v6 = *(void *)(v4 + 8);
  if (a4) {
LABEL_3:
  }
    sub_24F8CEEB0();
LABEL_5:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24F7ED818()
{
  sub_24F8CF520();
  sub_24F770DF4();
  MEMORY[0x270FA5388](v3);
  sub_24F76B830();
  sub_24F8CF4D0();
  sub_24F770E70();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_24F77E7F8();
  sub_24F770DF4();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_24F773B00();
  sub_24F770E70();
  MEMORY[0x270FA5388](v10);
  sub_24F770F20();
  uint64_t v12 = *(void **)(v0 + *(int *)(v11 + 72));
  sub_24F7EEC68(v0, v1);
  if (v12)
  {
    id v13 = v12;
    sub_24F7EECCC(v1);
  }
  else
  {
    uint64_t v22 = v7;
    uint64_t v14 = *(void **)(v1 + *(int *)(v9 + 68));
    id v13 = v14;
    sub_24F7EECCC(v1);
    if (!v14)
    {
      sub_24F783524();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v2, v0 + *(int *)(v9 + 64), v5);
      sub_24F7EED88();
      swift_bridgeObjectRetain();
      sub_24F781274(&qword_26B1F7F40);
      sub_24F7EEDD8();
      sub_24F8CF6D0();
      uint64_t v20 = sub_24F7814A8();
      v21(v20);
      return sub_24F8CF580();
    }
  }
  sub_24F783524();
  swift_bridgeObjectRetain();
  id v15 = v13;
  sub_24F8CEBE0();
  sub_24F7EED88();
  sub_24F781274(&qword_26B1F7F40);
  sub_24F7EEDD8();
  sub_24F8CF6D0();
  uint64_t v16 = sub_24F7814A8();
  v17(v16);
  uint64_t v18 = sub_24F8CF580();

  return v18;
}

uint64_t sub_24F7EDAFC()
{
  sub_24F8CF520();
  sub_24F770DF4();
  MEMORY[0x270FA5388](v2);
  sub_24F770F20();
  sub_24F8CF4D0();
  sub_24F770E70();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_24F77E7F8();
  sub_24F770DF4();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_24F773B00();
  uint64_t v9 = *(void **)(v0 + *(int *)(v8 + 68));
  sub_24F783524();
  if (v9)
  {
    id v10 = v9;
    swift_bridgeObjectRetain();
    sub_24F8CEBE0();
    sub_24F7EED88();
    sub_24F781274(&qword_26B1F7F40);
    sub_24F7EEDD8();
    sub_24F782F9C();
    sub_24F8CF6D0();
    uint64_t v11 = sub_24F77EF0C();
    v12(v11);
    sub_24F77AF14();
    uint64_t v13 = sub_24F8CF580();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v0 + *(int *)(v8 + 64), v4);
    sub_24F7EED88();
    swift_bridgeObjectRetain();
    sub_24F781274(&qword_26B1F7F40);
    sub_24F7EEDD8();
    sub_24F782F9C();
    sub_24F8CF6D0();
    uint64_t v14 = sub_24F77EF0C();
    v15(v14);
    sub_24F77AF14();
    return sub_24F8CF580();
  }
  return v13;
}

uint64_t sub_24F7EDD1C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24F7EDD34(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for Configuration()
{
  uint64_t result = qword_26B1F7FE8;
  if (!qword_26B1F7FE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for Configuration(_WORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (_WORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    *((void *)v4 + 1) = a2[1];
    *((void *)v4 + 2) = v7;
    *((unsigned char *)v4 + 24) = *((unsigned char *)a2 + 24);
    *(_WORD *)((char *)v4 + 25) = *(_WORD *)((char *)a2 + 25);
    *((void *)v4 + 4) = a2[4];
    v4[20] = *((_WORD *)a2 + 20);
    uint64_t v8 = a2[6];
    uint64_t v9 = a2[7];
    char v10 = *((unsigned char *)a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F7EDD1C(v8, v9, v10);
    *((void *)v4 + 6) = v8;
    *((void *)v4 + 7) = v9;
    *((unsigned char *)v4 + 64) = v10;
    int v11 = *((unsigned __int8 *)a2 + 88);
    if (v11 == 255)
    {
      *(_OWORD *)(v4 + 36) = *(_OWORD *)(a2 + 9);
      *((unsigned char *)v4 + 88) = *((unsigned char *)a2 + 88);
    }
    else
    {
      uint64_t v12 = a2[9];
      uint64_t v13 = a2[10];
      sub_24F7EDD1C(v12, v13, *((unsigned char *)a2 + 88));
      *((void *)v4 + 9) = v12;
      *((void *)v4 + 10) = v13;
      *((unsigned char *)v4 + 88) = v11;
    }
    *((void *)v4 + 12) = a2[12];
    uint64_t v15 = a3[16];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_24F8CEC00();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[17];
    uint64_t v20 = a3[18];
    char v21 = *(void **)((char *)a2 + v19);
    *(void *)((char *)v4 + v19) = v21;
    uint64_t v22 = *(void **)((char *)a2 + v20);
    *(void *)((char *)v4 + v20) = v22;
    uint64_t v23 = a3[20];
    *((unsigned char *)v4 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
    uint64_t v24 = a3[21];
    uint64_t v25 = (void *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v24);
    id v28 = v21;
    id v29 = v22;
    if (v27)
    {
      uint64_t v30 = *(void *)(v26 + 8);
      *uint64_t v25 = v27;
      v25[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    }
    uint64_t v31 = a3[22];
    Swift::String v32 = (void *)((char *)v4 + v31);
    Swift::String v33 = (uint64_t *)((char *)a2 + v31);
    if (*v33)
    {
      uint64_t v34 = v33[1];
      void *v32 = *v33;
      v32[1] = v34;
      swift_retain();
    }
    else
    {
      *(_OWORD *)Swift::String v32 = *(_OWORD *)v33;
    }
    uint64_t v35 = a3[23];
    uint64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (uint64_t)a2 + v35;
    if (!*(void *)v37)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      return v4;
    }
    uint64_t v38 = *(void *)(v37 + 8);
    *(void *)uint64_t v36 = *(void *)v37;
    *((void *)v36 + 1) = v38;
  }
  swift_retain();
  return v4;
}

void destroy for Configuration(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7EDD34(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  int v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 != 255) {
    sub_24F7EDD34(*(void *)(a1 + 72), *(void *)(a1 + 80), v4);
  }
  uint64_t v5 = a1 + a2[16];
  uint64_t v6 = sub_24F8CEC00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  if (*(void *)(a1 + a2[21])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[22])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[23]))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  char v9 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7EDD1C(v7, v8, v9);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = v9;
  int v10 = *(unsigned __int8 *)(a2 + 88);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 72);
    uint64_t v12 = *(void *)(a2 + 80);
    sub_24F7EDD1C(v11, v12, *(unsigned char *)(a2 + 88));
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 80) = v12;
    *(unsigned char *)(a1 + 88) = v10;
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v13 = a3[16];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_24F8CEC00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[17];
  uint64_t v18 = a3[18];
  uint64_t v19 = *(void **)(a2 + v17);
  *(void *)(a1 + v17) = v19;
  uint64_t v20 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v20;
  uint64_t v21 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v22 = a3[21];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22);
  id v26 = v19;
  id v27 = v20;
  if (v25)
  {
    uint64_t v28 = *(void *)(v24 + 8);
    *uint64_t v23 = v25;
    v23[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  uint64_t v29 = a3[22];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  if (*v31)
  {
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  }
  uint64_t v33 = a3[23];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  if (*v35)
  {
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  }
  return a1;
}

uint64_t assignWithCopy for Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  char v8 = *(unsigned char *)(a2 + 64);
  sub_24F7EDD1C(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  char v11 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v8;
  sub_24F7EDD34(v9, v10, v11);
  uint64_t v12 = (long long *)(a1 + 72);
  uint64_t v13 = (long long *)(a2 + 72);
  int v14 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v14 == 255)
    {
      long long v23 = *v13;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *uint64_t v12 = v23;
    }
    else
    {
      uint64_t v20 = *(void *)(a2 + 72);
      uint64_t v21 = *(void *)(a2 + 80);
      sub_24F7EDD1C(v20, v21, *(unsigned char *)(a2 + 88));
      *(void *)(a1 + 72) = v20;
      *(void *)(a1 + 80) = v21;
      *(unsigned char *)(a1 + 88) = v14;
    }
  }
  else if (v14 == 255)
  {
    sub_24F7EE5EC(a1 + 72);
    char v22 = *(unsigned char *)(a2 + 88);
    *uint64_t v12 = *v13;
    *(unsigned char *)(a1 + 88) = v22;
  }
  else
  {
    uint64_t v15 = *(void *)(a2 + 72);
    uint64_t v16 = *(void *)(a2 + 80);
    sub_24F7EDD1C(v15, v16, *(unsigned char *)(a2 + 88));
    uint64_t v17 = *(void *)(a1 + 72);
    uint64_t v18 = *(void *)(a1 + 80);
    *(void *)(a1 + 72) = v15;
    *(void *)(a1 + 80) = v16;
    char v19 = *(unsigned char *)(a1 + 88);
    *(unsigned char *)(a1 + 88) = v14;
    sub_24F7EDD34(v17, v18, v19);
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v24 = a3[16];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_24F8CEC00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  uint64_t v28 = a3[17];
  uint64_t v29 = *(void **)(a1 + v28);
  uint64_t v30 = *(void **)(a2 + v28);
  *(void *)(a1 + v28) = v30;
  id v31 = v30;

  uint64_t v32 = a3[18];
  uint64_t v33 = *(void **)(a1 + v32);
  uint64_t v34 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v34;
  id v35 = v34;

  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  uint64_t v36 = a3[21];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a1 + v36);
  uint64_t v40 = *(void *)(a2 + v36);
  if (v39)
  {
    if (v40)
    {
      uint64_t v41 = *(void *)(v38 + 8);
      *uint64_t v37 = v40;
      v37[1] = v41;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v40)
  {
    uint64_t v42 = *(void *)(v38 + 8);
    *uint64_t v37 = v40;
    v37[1] = v42;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
LABEL_15:
  uint64_t v43 = a3[22];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)(a1 + v43);
  uint64_t v47 = *(void *)(a2 + v43);
  if (v46)
  {
    if (v47)
    {
      uint64_t v48 = *(void *)(v45 + 8);
      void *v44 = v47;
      v44[1] = v48;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v47)
  {
    uint64_t v49 = *(void *)(v45 + 8);
    void *v44 = v47;
    v44[1] = v49;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
LABEL_22:
  uint64_t v50 = a3[23];
  size_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v53 = *(void *)(a1 + v50);
  uint64_t v54 = *v52;
  if (!v53)
  {
    if (v54)
    {
      uint64_t v56 = v52[1];
      *size_t v51 = v54;
      v51[1] = v56;
      swift_retain();
      return a1;
    }
LABEL_28:
    *(_OWORD *)size_t v51 = *(_OWORD *)v52;
    return a1;
  }
  if (!v54)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v55 = v52[1];
  *size_t v51 = v54;
  v51[1] = v55;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24F7EE5EC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  long long v6 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v7 = a3[16];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v10 = sub_24F8CEC00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[21];
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v16 = *v15;
  if (*v15)
  {
    uint64_t v17 = v15[1];
    *int v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)int v14 = *(_OWORD *)v15;
  }
  uint64_t v18 = a3[22];
  char v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  if (*v20)
  {
    uint64_t v22 = v20[1];
    *char v19 = v21;
    v19[1] = v22;
  }
  else
  {
    *(_OWORD *)char v19 = *(_OWORD *)v20;
  }
  uint64_t v23 = a3[23];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  if (*v25)
  {
    uint64_t v27 = v25[1];
    *uint64_t v24 = v26;
    v24[1] = v27;
  }
  else
  {
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  }
  return a1;
}

uint64_t assignWithTake for Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  char v7 = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  char v10 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v7;
  sub_24F7EDD34(v8, v9, v10);
  uint64_t v11 = (_OWORD *)(a2 + 72);
  int v12 = *(unsigned __int8 *)(a1 + 88);
  if (v12 != 255)
  {
    int v13 = *(unsigned __int8 *)(a2 + 88);
    if (v13 != 255)
    {
      uint64_t v14 = *(void *)(a1 + 72);
      uint64_t v15 = *(void *)(a1 + 80);
      *(_OWORD *)(a1 + 72) = *v11;
      *(unsigned char *)(a1 + 88) = v13;
      sub_24F7EDD34(v14, v15, v12);
      goto LABEL_6;
    }
    sub_24F7EE5EC(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *v11;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
LABEL_6:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v16 = a3[16];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_24F8CEC00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[17];
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = a3[18];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v24 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[21];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a1 + v25);
  uint64_t v29 = *(void *)(a2 + v25);
  if (v28)
  {
    if (v29)
    {
      uint64_t v30 = *(void *)(v27 + 8);
      *uint64_t v26 = v29;
      v26[1] = v30;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v29)
  {
    uint64_t v31 = *(void *)(v27 + 8);
    *uint64_t v26 = v29;
    v26[1] = v31;
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
LABEL_13:
  uint64_t v32 = a3[22];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)(a1 + v32);
  uint64_t v36 = *(void *)(a2 + v32);
  if (v35)
  {
    if (v36)
    {
      uint64_t v37 = *(void *)(v34 + 8);
      *uint64_t v33 = v36;
      v33[1] = v37;
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v36)
  {
    uint64_t v38 = *(void *)(v34 + 8);
    *uint64_t v33 = v36;
    v33[1] = v38;
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
LABEL_20:
  uint64_t v39 = a3[23];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v42 = *(void *)(a1 + v39);
  uint64_t v43 = *v41;
  if (!v42)
  {
    if (v43)
    {
      uint64_t v45 = v41[1];
      *uint64_t v40 = v43;
      v40[1] = v45;
      return a1;
    }
LABEL_26:
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    return a1;
  }
  if (!v43)
  {
    swift_release();
    goto LABEL_26;
  }
  uint64_t v44 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v44;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F7EEA4C);
}

uint64_t sub_24F7EEA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24F8CEC00();
    uint64_t v9 = a1 + *(int *)(a3 + 64);
    return sub_24F777048(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F7EEAE8);
}

uint64_t sub_24F7EEAE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24F8CEC00();
    uint64_t v8 = v5 + *(int *)(a4 + 64);
    return sub_24F7771BC(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_24F7EEB68()
{
  uint64_t result = sub_24F8CEC00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24F7EEC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Configuration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F7EECCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Configuration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F7EED28(uint64_t a1)
{
  uint64_t v2 = sub_24F781274(&qword_26B1F75E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24F7EED88()
{
  unint64_t result = qword_26B1F7F60;
  if (!qword_26B1F7F60)
  {
    sub_24F8CF4D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7F60);
  }
  return result;
}

unint64_t sub_24F7EEDD8()
{
  unint64_t result = qword_26B1F7EB8;
  if (!qword_26B1F7EB8)
  {
    sub_24F7688B8(&qword_26B1F7F40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7EB8);
  }
  return result;
}

uint64_t PrimaryKeyInfo.rowIDColumn.getter()
{
  if (*((unsigned char *)v0 + 16)) {
    return 0;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24F7EEE74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 64);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_24F77C4AC();
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 11;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24F7EEF4C(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_24F795740();
    uint64_t v5 = v22;
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v10 = *(i - 3);
      uint64_t v9 = *(i - 2);
      uint64_t v11 = *(i - 1);
      uint64_t v12 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a2(&v20, v10, v9, v11, v12);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v13 = v20;
      long long v14 = v21;
      uint64_t v22 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      if (v15 >= *(void *)(v5 + 24) >> 1)
      {
        long long v18 = v21;
        long long v19 = v20;
        sub_24F795740();
        long long v14 = v18;
        long long v13 = v19;
        uint64_t v5 = v22;
      }
      *(void *)(v5 + 16) = v15 + 1;
      uint64_t v16 = v5 + 32 * v15;
      *(_OWORD *)(v16 + 32) = v13;
      *(_OWORD *)(v16 + 48) = v14;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

void sub_24F7EF0A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24F795784();
    uint64_t v3 = (uint64_t *)(a1 + 56);
    while (1)
    {
      uint64_t v4 = *v3;
      if (!*v3) {
        break;
      }
      uint64_t v5 = *(v3 - 3);
      uint64_t v6 = *(v3 - 2);
      uint64_t v7 = *(v3 - 1);
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_24F795784();
      }
      v3 += 4;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v10 = (void *)(v11 + 32 * v8);
      _OWORD v10[4] = v5;
      v10[5] = v6;
      v10[6] = v7;
      v10[7] = v4;
      if (!--v1) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_24F7EF1A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_24F77C4AC();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = a1 + 40;
    do
    {
      uint64_t v4 = sub_24F8CED00();
      uint64_t v6 = v5;
      unint64_t v7 = *(void *)(v10 + 16);
      if (v7 >= *(void *)(v10 + 24) >> 1) {
        sub_24F77C4AC();
      }
      v3 += 16;
      *(void *)(v10 + 16) = v7 + 1;
      uint64_t v8 = v10 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_24F7EF294(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    unint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_24F795784();
  unint64_t v29 = v5;
  unint64_t v30 = v4;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  unint64_t v26 = v6;
  if (v6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v7 = (uint64_t *)(a2 + 40);
    uint64_t v8 = (uint64_t *)(a1 + 40);
    unint64_t v9 = v4;
    while (v9)
    {
      if (!v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *v8;
      uint64_t v11 = *v7;
      uint64_t v31 = *(v7 - 1);
      uint64_t v32 = *(v8 - 1);
      unint64_t v13 = *(void *)(v34 + 16);
      unint64_t v12 = *(void *)(v34 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1) {
        sub_24F795784();
      }
      *(void *)(v34 + 16) = v13 + 1;
      long long v14 = (void *)(v34 + 32 * v13);
      v14[4] = v31;
      v14[5] = v11;
      --v5;
      v14[6] = v32;
      v14[7] = v10;
      --v9;
      v7 += 4;
      v8 += 2;
      if (!--v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    unint64_t v16 = v29;
    unint64_t v15 = v30;
    if (v30 <= v29)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    unint64_t v17 = v26;
    long long v18 = (uint64_t *)(v28 + 16 * v26 + 40);
    long long v19 = (uint64_t *)(v27 + 32 * v26 + 40);
    while (v17 < v15)
    {
      if (v16 == v17) {
        goto LABEL_21;
      }
      if (v17 >= v16) {
        goto LABEL_25;
      }
      uint64_t v20 = *v18;
      uint64_t v33 = *(v18 - 1);
      uint64_t v21 = *(v19 - 1);
      uint64_t v22 = *v19;
      unint64_t v24 = *(void *)(v34 + 16);
      unint64_t v23 = *(void *)(v34 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v24 >= v23 >> 1) {
        sub_24F795784();
      }
      ++v17;
      *(void *)(v34 + 16) = v24 + 1;
      uint64_t v25 = (void *)(v34 + 32 * v24);
      v25[4] = v21;
      v25[5] = v22;
      v25[6] = v33;
      v25[7] = v20;
      v18 += 2;
      v19 += 4;
      unint64_t v16 = v29;
      unint64_t v15 = v30;
      if (v30 == v17) {
        goto LABEL_21;
      }
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_24F7EF4D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_24F77C4AC();
  uint64_t v3 = v29;
  sub_24F8BDD6C(v28, a1);
  uint64_t v4 = v28[1];
  int64_t v5 = v28[3];
  uint64_t v6 = v28[4];
  uint64_t v26 = v2;
  int64_t v27 = (unint64_t)(v28[2] + 64) >> 6;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v25 = v4;
    while (1)
    {
      if (v6)
      {
        v6 &= v6 - 1;
      }
      else
      {
        int64_t v8 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_50;
        }
        if (v8 >= v27) {
          goto LABEL_51;
        }
        uint64_t v9 = *(void *)(v4 + 8 * v8);
        ++v5;
        if (!v9)
        {
          int64_t v5 = v8 + 1;
          if (v8 + 1 >= v27) {
            goto LABEL_52;
          }
          uint64_t v9 = *(void *)(v4 + 8 * v5);
          if (!v9)
          {
            int64_t v5 = v8 + 2;
            if (v8 + 2 >= v27) {
              goto LABEL_55;
            }
            uint64_t v9 = *(void *)(v4 + 8 * v5);
            if (!v9)
            {
              int64_t v5 = v8 + 3;
              if (v8 + 3 >= v27) {
                goto LABEL_56;
              }
              uint64_t v9 = *(void *)(v4 + 8 * v5);
              if (!v9)
              {
                int64_t v10 = v8 + 4;
                if (v10 >= v27) {
                  goto LABEL_57;
                }
                uint64_t v9 = *(void *)(v4 + 8 * v10);
                if (!v9)
                {
                  while (1)
                  {
                    int64_t v5 = v10 + 1;
                    if (__OFADD__(v10, 1)) {
                      goto LABEL_53;
                    }
                    if (v5 >= v27) {
                      goto LABEL_54;
                    }
                    uint64_t v9 = *(void *)(v4 + 8 * v5);
                    ++v10;
                    if (v9) {
                      goto LABEL_20;
                    }
                  }
                }
                int64_t v5 = v10;
              }
            }
          }
        }
LABEL_20:
        uint64_t v6 = (v9 - 1) & v9;
      }
      uint64_t v11 = sub_24F8CED00();
      uint64_t v13 = v12;
      uint64_t v29 = v3;
      unint64_t v14 = *(void *)(v3 + 16);
      if (v14 >= *(void *)(v3 + 24) >> 1)
      {
        sub_24F77C4AC();
        uint64_t v3 = v29;
      }
      ++v7;
      *(void *)(v3 + 16) = v14 + 1;
      uint64_t v15 = v3 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v13;
      uint64_t v4 = v25;
      if (v7 == v26) {
        goto LABEL_26;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_26:
  if (!v6) {
    goto LABEL_28;
  }
LABEL_27:
  v6 &= v6 - 1;
  while (1)
  {
    uint64_t v20 = sub_24F8CED00();
    uint64_t v22 = v21;
    uint64_t v29 = v3;
    unint64_t v23 = *(void *)(v3 + 16);
    if (v23 >= *(void *)(v3 + 24) >> 1)
    {
      sub_24F77C4AC();
      uint64_t v3 = v29;
    }
    *(void *)(v3 + 16) = v23 + 1;
    uint64_t v24 = v3 + 16 * v23;
    *(void *)(v24 + 32) = v20;
    *(void *)(v24 + 40) = v22;
    if (v6) {
      goto LABEL_27;
    }
LABEL_28:
    int64_t v16 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v16 >= v27) {
      goto LABEL_48;
    }
    uint64_t v17 = *(void *)(v4 + 8 * v16);
    int64_t v18 = v5 + 1;
    if (!v17)
    {
      int64_t v18 = v5 + 2;
      if (v5 + 2 >= v27) {
        goto LABEL_48;
      }
      uint64_t v17 = *(void *)(v4 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v5 + 3;
        if (v5 + 3 >= v27) {
          goto LABEL_48;
        }
        uint64_t v17 = *(void *)(v4 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v5 + 4;
          if (v5 + 4 >= v27) {
            goto LABEL_48;
          }
          uint64_t v17 = *(void *)(v4 + 8 * v18);
          if (!v17)
          {
            int64_t v18 = v5 + 5;
            if (v5 + 5 >= v27) {
              goto LABEL_48;
            }
            uint64_t v17 = *(void *)(v4 + 8 * v18);
            if (!v17)
            {
              int64_t v19 = v5 + 6;
              while (v19 < v27)
              {
                uint64_t v17 = *(void *)(v4 + 8 * v19++);
                if (v17)
                {
                  int64_t v18 = v19 - 1;
                  goto LABEL_43;
                }
              }
LABEL_48:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_43:
    uint64_t v6 = (v17 - 1) & v17;
    int64_t v5 = v18;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

uint64_t sub_24F7EF830(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_release();
    a3 = 0;
  }
  else
  {
    v8[1] = a1;
    sub_24F7F8460(v8, &v9);
    swift_release();
    if (!v4) {
      a3 = v9;
    }
  }
  sub_24F7FEB7C(a4);
  return a3;
}

uint64_t sub_24F7EF8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      v8 &= v8 - 1;
      goto LABEL_21;
    }
    int64_t v12 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v9) {
      goto LABEL_29;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v11;
    if (!v13)
    {
      int64_t v11 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_29;
      }
      uint64_t v13 = *(void *)(v5 + 8 * v11);
      if (!v13)
      {
        int64_t v11 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_29;
        }
        uint64_t v13 = *(void *)(v5 + 8 * v11);
        if (!v13)
        {
          int64_t v11 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_29;
          }
          uint64_t v13 = *(void *)(v5 + 8 * v11);
          if (!v13)
          {
            int64_t v14 = v12 + 4;
            if (v14 >= v9)
            {
LABEL_29:
              swift_bridgeObjectRelease();
              swift_release();
              return 0;
            }
            uint64_t v13 = *(void *)(v5 + 8 * v14);
            int64_t v11 = v14;
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    uint64_t v8 = (v13 - 1) & v13;
LABEL_21:
    if (sub_24F8CED00() == a2 && v15 == a3)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v17 = sub_24F8CFD00();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 1;
    }
  }
  while (1)
  {
    int64_t v11 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_29;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v11);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_24F7EFAA0(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_24F8CF9E0())
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v8 = 4;
    uint64_t v19 = v6;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = MEMORY[0x253364060](v8 - 4, a1);
      }
      else
      {
        uint64_t v9 = *(void *)(a1 + 8 * v8);
        swift_retain();
      }
      uint64_t v10 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      uint64_t v27 = v9;
      sub_24F7F41CC(&v27, a2, a3, a4, (uint64_t)&v24);
      if (v4)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_24F7F2A24(a3, a4);
        swift_bridgeObjectRelease();
        return v7;
      }
      swift_release();
      if ((void)v25)
      {
        long long v23 = v25;
        uint64_t v11 = v24;
        char v12 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24F787A08();
          uint64_t v7 = v16;
        }
        unint64_t v13 = *(void *)(v7 + 16);
        long long v14 = v23;
        if (v13 >= *(void *)(v7 + 24) >> 1)
        {
          sub_24F787A08();
          long long v14 = v23;
          uint64_t v7 = v17;
        }
        *(void *)(v7 + 16) = v13 + 1;
        uint64_t v15 = v7 + 32 * v13;
        *(void *)(v15 + 32) = v11;
        *(_OWORD *)(v15 + 40) = v14;
        *(unsigned char *)(v15 + 56) = v12 & 1;
        uint64_t v6 = v19;
      }
      ++v8;
      if (v10 == v6) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_21:
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F7F2A24(a3, a4);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t Database.primaryKey(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_24F7F0D4C();
  if (!v3)
  {
    uint64_t v20 = a3;
    uint64_t v8 = *(void *)(result + 16);
    if (v8)
    {
      uint64_t v9 = (unint64_t *)(result + 40);
      while (1)
      {
        uint64_t v10 = *(v9 - 1);
        unint64_t v11 = *v9;
        sub_24F7DCA90(v10, *v9);
        swift_bridgeObjectRetain();
        sub_24F7F1D30(v10, v11, a1, a2, (uint64_t)v18);
        sub_24F7F2A24(v10, v11);
        swift_bridgeObjectRelease();
        unsigned __int8 v12 = v19;
        if (v19 != 255) {
          break;
        }
        v9 += 2;
        if (!--v8) {
          goto LABEL_6;
        }
      }
      uint64_t v16 = v18[0];
      uint64_t v15 = v18[1];
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = v20;
      *uint64_t v20 = v16;
      v17[1] = v15;
      *((unsigned char *)v17 + 16) = v12;
    }
    else
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_24F7DC6DC();
      uint64_t v13 = sub_24F770FA4();
      sub_24F7FF324(v13, v14);
      return swift_willThrow();
    }
  }
  return result;
}

_OWORD *PrimaryKeyInfo.columns.getter()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  if (*(unsigned char *)(v0 + 16))
  {
    if (v3 == 1) {
      uint64_t v4 = *(_OWORD **)v0;
    }
    else {
      uint64_t v4 = &unk_2700FFE38;
    }
  }
  else
  {
    sub_24F781274((uint64_t *)&unk_26B1F7C88);
    uint64_t v4 = (_OWORD *)swift_allocObject();
    v4[1] = xmmword_24F8DDBF0;
    *((void *)v4 + 4) = v2;
    *((void *)v4 + 5) = v1;
  }
  sub_24F7903D0(v2, v1, v3);
  return v4;
}

uint64_t sub_24F7EFE90()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7EFEF8()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7EFF58()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  v1();
  if (!v0) {
    char v2 = v4;
  }
  return v2 & 1;
}

uint64_t sub_24F7EFFBC()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7F001C()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7F007C()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7F00DC()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7F013C()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7F019C()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7F01FC()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7F025C()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_24F7F02BC()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  uint64_t result = v1();
  if (!v0) {
    return v3;
  }
  return result;
}

float sub_24F7F031C()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  v1();
  if (!v0) {
    return v3;
  }
  return result;
}

double sub_24F7F037C()
{
  sub_24F77FD58();
  sub_24F77DFC8();
  v1();
  if (!v0) {
    return v3;
  }
  return result;
}

void *sub_24F7F03DC(uint64_t a1)
{
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  sub_24F7811D0(v1 + 2, v4);
  double result = (*(void *(**)(uint64_t *__return_ptr, void, uint64_t, void, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v5 + 64))(&v7, MEMORY[0x263F8D310], a1, MEMORY[0x263F8D310], &protocol witness table for String, &protocol witness table for String, v4, v5);
  if (!v2) {
    return (void *)v7;
  }
  return result;
}

void *sub_24F7F047C(uint64_t a1)
{
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  sub_24F7811D0(v1 + 2, v4);
  double result = (*(void *(**)(uint64_t *__return_ptr, void, uint64_t, void, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v5 + 64))(&v7, MEMORY[0x263F8D6C8], a1, MEMORY[0x263F8D6C8], &protocol witness table for Int, &protocol witness table for Int, v4, v5);
  if (!v2) {
    return (void *)v7;
  }
  return result;
}

void *sub_24F7F0520(uint64_t a1)
{
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  sub_24F7811D0(v1 + 2, v4);
  double result = (*(void *(**)(uint64_t *__return_ptr, void, uint64_t, void, _UNKNOWN **, _UNKNOWN **, uint64_t, uint64_t))(v5 + 64))(&v7, MEMORY[0x263F8E5C0], a1, MEMORY[0x263F8E5C0], &protocol witness table for Int64, &protocol witness table for Int64, v4, v5);
  if (!v2) {
    return (void *)v7;
  }
  return result;
}

#error "24F7F05D0: call analysis failed (funcsize=6)"

#error "24F7F062C: call analysis failed (funcsize=42)"

#error "24F7F06D8: call analysis failed (funcsize=44)"

#error "24F7F078C: call analysis failed (funcsize=42)"

#error "24F7F080C: call analysis failed (funcsize=17)"

uint64_t sub_24F7F082C(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0x6D5F6574696C7173;
  }
  if (a2 == 1)
  {
    sub_24F77BC5C();
    return 0xD000000000000012;
  }
  else
  {
    sub_24F8CF7D0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    return a1;
  }
}

uint64_t sub_24F7F0904(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 <= 1) {
    return sub_24F8CFF40();
  }
  sub_24F8CFF40();
  return sub_24F8CEE50();
}

uint64_t sub_24F7F0984(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2) {
    return !a4;
  }
  if (a2 == 1) {
    return a4 == 1;
  }
  if (a4 < 2) {
    return 0;
  }
  if (a1 != a3 || a2 != a4) {
    return sub_24F8CFD00();
  }
  return 1;
}

uint64_t sub_24F7F09D0(uint64_t a1, unint64_t a2)
{
  if (a2 > 1) {
    sub_24F8CEE50();
  }
  return sub_24F8CFF80();
}

uint64_t sub_24F7F0A54()
{
  return sub_24F7F09D0(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_24F7F0A5C(uint64_t a1)
{
  return sub_24F7F0904(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_24F7F0A64()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_24F8CFF30();
  sub_24F8CFF40();
  if (v1 > 1) {
    sub_24F8CEE50();
  }
  return sub_24F8CFF80();
}

uint64_t sub_24F7F0AE0(uint64_t *a1, uint64_t a2)
{
  return sub_24F7F0984(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_24F7F0AF4(uint64_t a1, unint64_t a2)
{
  return 0;
}

Swift::Void __swiftcall Database.clearSchemaCache()()
{
  type metadata accessor for SchedulingWatchdog();
  if (sub_24F78346C(v0))
  {
    unint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache);
    swift_beginAccess();
    swift_bridgeObjectRelease();
    *unint64_t v1 = 0;
    sub_24F781274(&qword_26B1F7AF0);
    sub_24F8CECA0();
    swift_endAccess();
    uint64_t v2 = sub_24F77318C();
    type metadata accessor for Statement();
    uint64_t v3 = sub_24F7FF378();
    swift_bridgeObjectRelease();
    sub_24F773180(v2, v3);
    sub_24F775A78();
    sub_24F7FF378();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24F77F5DC();
    sub_24F775A6C(v4, v5);
  }
  else
  {
    sub_24F8CF9D0();
    __break(1u);
  }
}

uint64_t sub_24F7F0D4C()
{
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*v2)
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  type metadata accessor for Row();
  uint64_t v32 = 0;
  memset(v31, 0, sizeof(v31));
  uint64_t v4 = MEMORY[0x263F8EE78];
  static Row.fetchAll(_:sql:arguments:adapter:)();
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7783C0((uint64_t)v31, &qword_26B1F7F10);
  if (v1) {
    return v3;
  }
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_6;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
LABEL_45:
    uint64_t v33 = v3;
    uint64_t v22 = *(void *)(v3 + 16);
    if (v22)
    {
      unint64_t v23 = 0;
      uint64_t v24 = 40;
      while (*(void *)(v3 + v24) != 1)
      {
        ++v23;
        v24 += 16;
        if (v22 == v23) {
          goto LABEL_51;
        }
      }
      sub_24F7F1220(v23, 0);
      uint64_t v3 = v33;
    }
LABEL_51:
    *uint64_t v2 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v3;
  }
LABEL_43:
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_24F8CF9E0();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_44;
  }
LABEL_6:
  *(void *)&v31[0] = v4;
  sub_24F7957C8();
  if (v7 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v27 = v2;
    unint64_t v28 = v6 & 0xC000000000000001;
    if ((v6 & 0xC000000000000001) == 0)
    {
      uint64_t v8 = *(void *)(v6 + 32);
      uint64_t v9 = swift_retain();
      goto LABEL_9;
    }
  }
  uint64_t v9 = MEMORY[0x253364060](0, v6);
  uint64_t v8 = v9;
LABEL_9:
  if (*(uint64_t *)(v8 + 72) >= 2)
  {
    uint64_t v2 = 0;
    uint64_t v29 = v7;
    unint64_t v30 = (void *)(v7 - 1);
    unint64_t v10 = v6;
    do
    {
      if (*(void *)(v8 + 64))
      {
        MEMORY[0x270FA5388](v9);
        unint64_t v11 = (sqlite3_stmt *)sub_24F7760FC();
        if (sqlite3_column_type(v11, v12) == 5) {
          goto LABEL_57;
        }
        uint64_t v13 = (sqlite3_stmt *)sub_24F7760FC();
        if (!sqlite3_column_text(v13, v14))
        {
          __break(1u);
          break;
        }
        unint64_t v6 = sub_24F8CEEE0();
        uint64_t v4 = v15;
      }
      else
      {
        unint64_t v6 = sub_24F7EFE90();
        uint64_t v4 = v16;
      }
      BOOL v17 = v6 == 1852399981 && v4 == 0xE400000000000000;
      if (v17 || (sub_24F7FF398() & 1) != 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v6 = 0;
        uint64_t v4 = 0;
        goto LABEL_22;
      }
      if (v6 == 1886217588 && v4 == 0xE400000000000000)
      {
        swift_release();
      }
      else
      {
        char v21 = sub_24F7FF398();
        swift_release();
        if ((v21 & 1) == 0) {
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v6 = 0;
      uint64_t v4 = 1;
LABEL_22:
      uint64_t v3 = *(void *)&v31[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F7957C8();
        uint64_t v3 = *(void *)&v31[0];
      }
      unint64_t v18 = *(void *)(v3 + 16);
      if (v18 >= *(void *)(v3 + 24) >> 1)
      {
        sub_24F7957C8();
        uint64_t v3 = *(void *)&v31[0];
      }
      *(void *)(v3 + 16) = v18 + 1;
      uint64_t v19 = v3 + 16 * v18;
      *(void *)(v19 + 32) = v6;
      *(void *)(v19 + 40) = v4;
      if (v30 == v2)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v27;
        goto LABEL_45;
      }
      if ((uint64_t)v2 + 1 >= v29)
      {
        __break(1u);
        goto LABEL_43;
      }
      if (v28)
      {
        uint64_t v9 = MEMORY[0x253364060]();
        uint64_t v8 = v9;
      }
      else
      {
        uint64_t v8 = *(void *)(v10 + 8 * (void)v2 + 40);
        uint64_t v9 = swift_retain();
      }
      uint64_t v2 = (void *)((char *)v2 + 1);
    }
    while (*(uint64_t *)(v8 + 72) > 1);
  }
  sub_24F8CF9D0();
  __break(1u);
LABEL_57:
  uint64_t v26 = sub_24F7760FC();
  sub_24F7D0FBC(v26);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_24F7F1220(unint64_t result, unint64_t a2)
{
  if (result != a2)
  {
    unint64_t v8 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v9 = *v3;
      unint64_t v10 = *(void *)(*v3 + 16);
      if (v10 > result)
      {
        unint64_t v2 = a2;
        if (v10 > a2)
        {
          unint64_t v11 = (uint64_t *)(v9 + 32 + 16 * result);
          uint64_t v4 = *v11;
          unint64_t v5 = v11[1];
          int v12 = (uint64_t *)(v9 + 32 + 16 * a2);
          uint64_t v6 = *v12;
          unint64_t v7 = v12[1];
          sub_24F7DCA90(*v11, v5);
          sub_24F7DCA90(v6, v7);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_6;
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        sub_24F83CCD4();
        uint64_t v9 = v19;
LABEL_6:
        uint64_t v13 = (uint64_t *)(v9 + 32 + 16 * v8);
        uint64_t v14 = *v13;
        unint64_t v15 = v13[1];
        *uint64_t v13 = v6;
        v13[1] = v7;
        uint64_t result = sub_24F7F2A24(v14, v15);
        if (*(void *)(v9 + 16) <= v2)
        {
          __break(1u);
        }
        else
        {
          uint64_t v16 = (uint64_t *)(v9 + 32 + 16 * v2);
          uint64_t v17 = *v16;
          unint64_t v18 = v16[1];
          *uint64_t v16 = v4;
          v16[1] = v5;
          uint64_t result = sub_24F7F2A24(v17, v18);
          *uint64_t v3 = v9;
        }
        return result;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.tableExists(_:)(Swift::String a1)
{
  return sub_24F7F1640(a1._countAndFlagsBits, (uint64_t)a1._object, 1) & 1;
}

#error "24F7F1380: call analysis failed (funcsize=55)"

uint64_t static Database.isSQLiteInternalTable(_:)()
{
  sub_24F7FF2FC(0x6574696C7173);
  if (sub_24F7F147C()) {
    return 1;
  }
  sub_24F7FF2FC(0x616D67617270);
  return sub_24F7F147C();
}

uint64_t sub_24F7F147C()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_24F8CEEF0();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    while (1)
    {
      uint64_t v4 = sub_24F8CEEF0();
      if (!v5) {
        break;
      }
      if (v2 == v4 && v3 == v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v7 = sub_24F8CFD00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_24F8CEEF0();
      uint64_t v3 = v8;
      if (!v8) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_24F8CEEF0();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    BOOL v11 = v10 == 0;
    swift_bridgeObjectRelease();
  }
  return v11;
}

Swift::Bool __swiftcall Database.isSQLiteInternalTable(_:)(Swift::String a1)
{
  return static Database.isSQLiteInternalTable(_:)() & 1;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.viewExists(_:)(Swift::String a1)
{
  return sub_24F7F1640(a1._countAndFlagsBits, (uint64_t)a1._object, 3) & 1;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.triggerExists(_:)(Swift::String a1)
{
  return sub_24F7F1640(a1._countAndFlagsBits, (uint64_t)a1._object, 2) & 1;
}

uint64_t sub_24F7F1640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_24F7F0D4C();
  if (!v3)
  {
    uint64_t v9 = *(void *)(v7 + 16);
    if (v9)
    {
      uint64_t v16 = a2;
      uint64_t v10 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
      while (1)
      {
        uint64_t v11 = *(v10 - 1);
        unint64_t v12 = *v10;
        sub_24F7DCA90(v11, *v10);
        uint64_t v13 = a3;
        char v14 = sub_24F7F1334(a3, a1, v16, v11, v12);
        sub_24F7F2A24(v11, v12);
        if (v14) {
          break;
        }
        v10 += 2;
        --v9;
        a3 = v13;
        if (!v9)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease_n();
      char v8 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_8:
      char v8 = 0;
    }
  }
  return v8 & 1;
}

void sub_24F7F1750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_24F7734D0();
  a29 = v32;
  a30 = v33;
  uint64_t v34 = v31;
  uint64_t v35 = v30;
  unint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = v30 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache;
  swift_beginAccess();
  uint64_t v41 = *(void *)(v40 + 8);
  if (*(void *)(v41 + 16))
  {
    sub_24F7DCA90(v39, v37);
    unint64_t v42 = sub_24F7C0164(v39, v37);
    if (v43)
    {
      uint64_t v44 = *(void *)(*(void *)(v41 + 56) + 40 * v42);
      swift_endAccess();
      swift_bridgeObjectRetain();
      sub_24F7856B4();
      if (v44) {
        goto LABEL_15;
      }
      goto LABEL_7;
    }
    sub_24F7856B4();
  }
  sub_24F781274(&qword_26B1F7890);
  a20 = v39;
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7950);
  sub_24F781920();
  sub_24F781274(&qword_26B1F78A0);
  sub_24F781920();
  sub_24F781274(&qword_26B1F7898);
  sub_24F781920();
  swift_endAccess();
  uint64_t v39 = a20;
  swift_bridgeObjectRelease();
  uint64_t v34 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_7:
  swift_retain();
  sub_24F7F082C(v39, v37);
  uint64_t v45 = sub_24F7F7020(v35);
  if (!v34)
  {
    uint64_t v46 = v45;
    swift_beginAccess();
    uint64_t v47 = *(void *)(v40 + 8);
    uint64_t v48 = *(void *)(v47 + 16);
    sub_24F7DCA90(v39, v37);
    if (v48)
    {
      sub_24F7DCA90(v39, v37);
      swift_bridgeObjectRetain();
      unint64_t v49 = sub_24F7C0164(v39, v37);
      if (v50)
      {
        size_t v51 = (void *)(*(void *)(v47 + 56) + 40 * v49);
        uint64_t v52 = v51[1];
        uint64_t v53 = v51[2];
        uint64_t v54 = v51[3];
        uint64_t v55 = v51[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F7856B4();
LABEL_14:
        a14 = v46;
        a15 = v52;
        a16 = v53;
        a17 = v54;
        a18 = v55;
        sub_24F7FDBA8((uint64_t)&a14, v39);
        swift_endAccess();
        sub_24F7856B4();
        goto LABEL_15;
      }
      a20 = v39;
      sub_24F7856B4();
    }
    else
    {
      a20 = v39;
      swift_bridgeObjectRetain();
    }
    sub_24F781274(&qword_26B1F7890);
    uint64_t v52 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7950);
    uint64_t v53 = sub_24F77769C();
    sub_24F781274(&qword_26B1F78A0);
    uint64_t v54 = sub_24F77769C();
    sub_24F781274(&qword_26B1F7898);
    uint64_t v55 = sub_24F77769C();
    uint64_t v39 = a20;
    goto LABEL_14;
  }
LABEL_15:
  sub_24F778C94();
}

uint64_t sub_24F7F1A68(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v36 = MEMORY[0x263F8EE88];
  uint64_t v33 = a2 + 56;
  sub_24F785534();
  uint64_t v34 = v5;
  uint64_t v35 = v4;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = 0;
  uint64_t v7 = a1;
  while (v2)
  {
    sub_24F780AB8();
    uint64_t v9 = v8 | (v6 << 6);
LABEL_27:
    long long v25 = (uint64_t *)(*(void *)(v35 + 48) + (v9 << 6));
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    unint64_t v28 = 0xE500000000000000;
    uint64_t v29 = 0x7865646E69;
    switch(v7)
    {
      case 1:
        uint64_t v29 = 0x656C626174;
        break;
      case 2:
        unint64_t v28 = 0xE700000000000000;
        sub_24F7752C0();
        break;
      case 3:
        unint64_t v28 = 0xE400000000000000;
        uint64_t v29 = 2003134838;
        break;
      default:
        break;
    }
    if (v26 == v29 && v27 == v28)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_38:
      swift_bridgeObjectRetain();
      sub_24F8B6490();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v31 = sub_24F8CFD00();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_38;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v10 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v10 >= v34) {
    goto LABEL_39;
  }
  ++v6;
  if (*(void *)(v33 + 8 * v10)) {
    goto LABEL_26;
  }
  uint64_t v6 = v10 + 1;
  sub_24F7FF204();
  if (v11 == v12) {
    goto LABEL_39;
  }
  sub_24F778DAC();
  if (v14) {
    goto LABEL_26;
  }
  uint64_t v6 = v13 + 2;
  sub_24F7FF204();
  if (v11 == v12) {
    goto LABEL_39;
  }
  sub_24F778DAC();
  if (v16) {
    goto LABEL_26;
  }
  uint64_t v6 = v15 + 3;
  sub_24F7FF204();
  if (v11 == v12) {
    goto LABEL_39;
  }
  sub_24F778DAC();
  if (v18) {
    goto LABEL_26;
  }
  uint64_t v6 = v17 + 4;
  sub_24F7FF204();
  if (v11 == v12) {
    goto LABEL_39;
  }
  sub_24F778DAC();
  if (v20)
  {
LABEL_26:
    sub_24F7FF3C0();
    uint64_t v9 = v24 + (v6 << 6);
    goto LABEL_27;
  }
  uint64_t v21 = v19 + 5;
  if (v21 < v34)
  {
    if (!*(void *)(v33 + 8 * v21))
    {
      while (1)
      {
        uint64_t v6 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        sub_24F7FF204();
        if (v11 == v12) {
          goto LABEL_39;
        }
        sub_24F778DAC();
        uint64_t v21 = v22 + 1;
        if (v23) {
          goto LABEL_26;
        }
      }
LABEL_41:
      __break(1u);
      JUMPOUT(0x24F7F1D20);
    }
    uint64_t v6 = v21;
    goto LABEL_26;
  }
LABEL_39:
  swift_release();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_24F7F1D30@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  type metadata accessor for SchedulingWatchdog();
  if ((sub_24F78346C(v5) & 1) == 0)
  {
    sub_24F8CF9D0();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v10 = v5 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 8);
  unint64_t v93 = a2;
  uint64_t v90 = v10;
  if (*(void *)(v11 + 16))
  {
    sub_24F7DCA90(a1, a2);
    unint64_t v12 = sub_24F7C0164(a1, a2);
    if (v13)
    {
      uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 40 * v12 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F7F2A24(a1, a2);
      goto LABEL_7;
    }
    sub_24F7F2A24(a1, a2);
  }
  sub_24F781274(&qword_26B1F7890);
  uint64_t v14 = sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7950);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F78A0);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7898);
  sub_24F8CEC70();
LABEL_7:
  swift_endAccess();
  if (!*(void *)(v14 + 16))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v22 = a2;
    uint64_t result = sub_24F7F1334(1, a3, a4, a1, a2);
    if (v6) {
      return result;
    }
    if (result)
    {
      uint64_t v23 = sub_24F7F2A38(a1, a2, a3, a4);
      uint64_t v80 = a1;
      if (v23)
      {
        uint64_t v24 = *(void *)(v23 + 16);
        if (v24)
        {
          uint64_t v25 = v23 + 56;
          uint64_t v26 = (void *)MEMORY[0x263F8EE78];
          uint64_t v81 = a4;
          do
          {
            if (*(uint64_t *)(v25 + 56) >= 1)
            {
              long long v86 = *(_OWORD *)(v25 - 24);
              long long v87 = *(_OWORD *)(v25 + 48);
              char v85 = *(unsigned char *)(v25 - 8);
              uint64_t v27 = *(void *)(v25 + 8);
              uint64_t v28 = *(void *)(v25 + 24);
              uint64_t v83 = *(void *)(v25 + 16);
              uint64_t v84 = *(void *)v25;
              char v82 = *(unsigned char *)(v25 + 32);
              uint64_t v29 = *(void *)(v25 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v95[0] = (uint64_t)v26;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_24F795720(0, v26[2] + 1, 1);
                uint64_t v26 = (void *)v95[0];
              }
              unint64_t v31 = v26[2];
              unint64_t v30 = v26[3];
              long long v32 = v87;
              if (v31 >= v30 >> 1)
              {
                sub_24F795720(v30 > 1, v31 + 1, 1);
                long long v32 = v87;
                uint64_t v26 = (void *)v95[0];
              }
              v26[2] = v31 + 1;
              uint64_t v33 = &v26[11 * v31];
              *((_OWORD *)v33 + 2) = v86;
              *((unsigned char *)v33 + 48) = v85;
              v33[7] = v84;
              v33[8] = v27;
              v33[9] = v83;
              v33[10] = v28;
              *((unsigned char *)v33 + 88) = v82;
              v33[12] = v29;
              *(_OWORD *)(v33 + 13) = v32;
              unint64_t v22 = v93;
              a4 = v81;
            }
            v25 += 88;
            --v24;
          }
          while (v24);
        }
        else
        {
          uint64_t v26 = (void *)MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        v95[0] = (uint64_t)v26;
        swift_retain();
        sub_24F7FAE1C(v95, (uint64_t (*)(uint64_t))sub_24F897568, sub_24F7FB5C4);
        swift_release();
        uint64_t v56 = *(void *)(v95[0] + 16);
        uint64_t v57 = v80;
        if (v56)
        {
          if (v56 == 1)
          {
            uint64_t v58 = *(void *)(v95[0] + 64);
            uint64_t v88 = *(void *)(v95[0] + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_release();
            if (sub_24F8CED10() == 0x52454745544E49 && v59 == 0xE700000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v61 = sub_24F8CFD00();
              swift_bridgeObjectRelease();
              if ((v61 & 1) == 0)
              {
                sub_24F781274((uint64_t *)&unk_26B1F7C88);
                uint64_t v62 = swift_allocObject();
                *(_OWORD *)(v62 + 16) = xmmword_24F8DDBF0;
                *(void *)(v62 + 32) = v88;
                *(void *)(v62 + 40) = v58;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v57 = v80;
                BOOL v63 = sub_24F7F3654(v80, v22);
                uint64_t v64 = 1;
                uint64_t v65 = v62;
                goto LABEL_54;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v64 = 0;
            uint64_t v57 = v80;
            BOOL v63 = v58;
            uint64_t v65 = v88;
          }
          else
          {
            uint64_t v65 = sub_24F7EEE74(v95[0]);
            swift_release();
            BOOL v63 = sub_24F7F3654(v80, v22);
            uint64_t v64 = 1;
          }
        }
        else
        {
          swift_release();
          uint64_t v65 = 0;
          BOOL v63 = 0;
          uint64_t v64 = 2;
        }
LABEL_54:
        swift_beginAccess();
        uint64_t v66 = *(void *)(v90 + 8);
        uint64_t v67 = *(void *)(v66 + 16);
        sub_24F7DCA90(v57, v22);
        uint64_t v89 = v65;
        if (v67)
        {
          sub_24F7DCA90(v57, v22);
          sub_24F7903D0(v65, v63, v64);
          unint64_t v68 = sub_24F7C0164(v57, v22);
          uint64_t v69 = v63;
          if (v70)
          {
            uint64_t v71 = (uint64_t *)(*(void *)(v66 + 56) + 40 * v68);
            unint64_t v72 = v22;
            uint64_t v74 = *v71;
            uint64_t v73 = v71[1];
            uint64_t v76 = v71[2];
            uint64_t v75 = v71[3];
            uint64_t v77 = v71[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v92 = v76;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_24F7F2A24(v57, v72);
LABEL_60:
            swift_bridgeObjectRetain();
            sub_24F7903D0(v89, v69, v64);
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v99 = v73;
            sub_24F7DC130(v89, v69, v64, a3, a4);
            uint64_t v79 = v99;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v96[0] = v74;
            v96[1] = v79;
            v96[2] = v92;
            v96[3] = v75;
            v96[4] = v77;
            sub_24F7FDBA8((uint64_t)v96, v57);
            swift_endAccess();
            sub_24F7F2A24(v57, v93);
            uint64_t result = sub_24F790830(v89, v69, v64);
            *(void *)a5 = v89;
            *(void *)(a5 + 8) = v69;
            *(unsigned char *)(a5 + 16) = v64;
            return result;
          }
          sub_24F7F2A24(v57, v22);
        }
        else
        {
          uint64_t v78 = v65;
          uint64_t v69 = v63;
          sub_24F7903D0(v78, v63, v64);
        }
        sub_24F781274(&qword_26B1F7890);
        uint64_t v73 = sub_24F8CEC70();
        sub_24F781274(&qword_26B1F7950);
        uint64_t v92 = sub_24F8CEC70();
        sub_24F781274(&qword_26B1F78A0);
        uint64_t v75 = sub_24F8CEC70();
        sub_24F781274(&qword_26B1F7898);
        uint64_t v77 = sub_24F8CEC70();
        uint64_t v74 = 0;
        uint64_t v57 = v80;
        goto LABEL_60;
      }
      swift_beginAccess();
      uint64_t v46 = *(void *)(v10 + 8);
      uint64_t v47 = *(void *)(v46 + 16);
      sub_24F7DCA90(a1, a2);
      if (v47)
      {
        sub_24F7DCA90(a1, a2);
        unint64_t v48 = sub_24F7C0164(a1, a2);
        if (v49)
        {
          char v50 = (uint64_t *)(*(void *)(v46 + 56) + 40 * v48);
          uint64_t v52 = *v50;
          uint64_t v51 = v50[1];
          uint64_t v53 = v50[2];
          uint64_t v54 = v50[3];
          uint64_t v55 = v50[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v44 = v93;
          sub_24F7F2A24(a1, v93);
LABEL_51:
          swift_bridgeObjectRetain();
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v99 = v51;
          sub_24F7DC130(0, 0, 255, a3, a4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v97[0] = v52;
          v97[1] = v51;
          v97[2] = v53;
          v97[3] = v54;
          v97[4] = v55;
          uint64_t v45 = v97;
          goto LABEL_33;
        }
        sub_24F7F2A24(a1, a2);
      }
      unint64_t v44 = a2;
      sub_24F781274(&qword_26B1F7890);
      uint64_t v51 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F7950);
      uint64_t v53 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F78A0);
      uint64_t v54 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F7898);
      uint64_t v55 = sub_24F8CEC70();
      uint64_t v52 = 0;
      goto LABEL_51;
    }
    swift_beginAccess();
    uint64_t v34 = *(void *)(v10 + 8);
    uint64_t v35 = *(void *)(v34 + 16);
    sub_24F7DCA90(a1, a2);
    uint64_t v80 = a1;
    if (v35)
    {
      sub_24F7DCA90(a1, a2);
      unint64_t v36 = sub_24F7C0164(a1, a2);
      if (v37)
      {
        uint64_t v38 = (uint64_t *)(*(void *)(v34 + 56) + 40 * v36);
        uint64_t v40 = *v38;
        uint64_t v39 = v38[1];
        uint64_t v41 = v38[2];
        uint64_t v42 = v38[3];
        uint64_t v43 = v38[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v44 = v93;
        sub_24F7F2A24(a1, v93);
LABEL_32:
        swift_bridgeObjectRetain();
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v99 = v39;
        sub_24F7DC130(0, 0, 255, a3, a4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v98[0] = v40;
        v98[1] = v39;
        v98[2] = v41;
        v98[3] = v42;
        v98[4] = v43;
        uint64_t v45 = v98;
LABEL_33:
        sub_24F7FDBA8((uint64_t)v45, v80);
        swift_endAccess();
        uint64_t result = sub_24F7F2A24(v80, v44);
        *(void *)a5 = 0;
        *(void *)(a5 + 8) = 0;
        *(unsigned char *)(a5 + 16) = -1;
        return result;
      }
      sub_24F7F2A24(a1, a2);
    }
    unint64_t v44 = a2;
    sub_24F781274(&qword_26B1F7890);
    uint64_t v39 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7950);
    uint64_t v41 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F78A0);
    uint64_t v42 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7898);
    uint64_t v43 = sub_24F8CEC70();
    uint64_t v40 = 0;
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_24F782950();
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v17 = *(void *)(v14 + 56) + 24 * v15;
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *(void *)(v17 + 8);
  int v20 = *(unsigned __int8 *)(v17 + 16);
  sub_24F7FEC4C(*(void *)v17, v19, *(unsigned char *)(v17 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20 == 255)
  {
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(unsigned char *)(a5 + 16) = -1;
  }
  else
  {
    *(void *)a5 = v18;
    *(void *)(a5 + 8) = v19;
    *(unsigned char *)(a5 + 16) = v20;
  }
  return result;
}

uint64_t sub_24F7F2A24(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F7F2A38(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = v4 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache;
  swift_beginAccess();
  uint64_t v75 = v10;
  uint64_t v11 = *(void *)(v10 + 8);
  unint64_t v76 = a2;
  uint64_t v77 = a1;
  if (*(void *)(v11 + 16))
  {
    sub_24F7DCA90(a1, a2);
    unint64_t v12 = sub_24F7C0164(a1, a2);
    if (v13)
    {
      uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 40 * v12 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F7F2A24(a1, a2);
      goto LABEL_6;
    }
    sub_24F7F2A24(a1, a2);
  }
  sub_24F781274(&qword_26B1F7890);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7950);
  uint64_t v14 = sub_24F8CEC70();
  sub_24F781274(&qword_26B1F78A0);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7898);
  sub_24F8CEC70();
LABEL_6:
  swift_endAccess();
  if (!*(void *)(v14 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_24F782950();
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (sqlite3_libversion_number() > 3025999 || sqlite3_libversion_number() > 3008004) {
      goto LABEL_14;
    }
    char v17 = sub_24F7F1334(1, a3, a4, a1, a2);
    if (v5) {
      return v6;
    }
    if (v17)
    {
LABEL_14:
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      *(void *)&v83[0] = 0x20414D47415250;
      *((void *)&v83[0] + 1) = 0xE700000000000000;
      sub_24F7DCA90(a1, a2);
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v85 = 34;
      unint64_t v86 = 0xE100000000000000;
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      long long v18 = v83[0];
      uint64_t v84 = 0;
      memset(v83, 0, sizeof(v83));
      uint64_t v19 = MEMORY[0x263F8EE78];
      uint64_t v20 = sub_24F7F72AC(v6, v18, *((uint64_t *)&v18 + 1), MEMORY[0x263F8EE78], MEMORY[0x263F8EE80], (uint64_t)v83, (uint64_t (*)(uint64_t, _OWORD *))sub_24F7F97F4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F7783C0((uint64_t)v83, &qword_26B1F7F10);
      if (v5) {
        return v6;
      }
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v20 + 56;
        uint64_t v78 = a4;
        do
        {
          long long v23 = *(_OWORD *)(v22 - 24);
          char v24 = *(unsigned char *)(v22 - 8);
          uint64_t v26 = *(void *)v22;
          uint64_t v25 = *(void *)(v22 + 8);
          uint64_t v28 = *(void *)(v22 + 16);
          uint64_t v27 = *(void *)(v22 + 24);
          char v29 = *(unsigned char *)(v22 + 32);
          long long v30 = *(_OWORD *)(v22 + 48);
          if ((v24 & 1) != 0 || *((void *)&v23 + 1) != 1)
          {
            uint64_t v90 = *(void *)(v22 + 40);
            char v80 = v29;
            long long v81 = v30;
            long long v82 = v23;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v83[0] = v19;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_24F795720(0, *(void *)(v19 + 16) + 1, 1);
              uint64_t v19 = *(void *)&v83[0];
            }
            unint64_t v33 = *(void *)(v19 + 16);
            unint64_t v32 = *(void *)(v19 + 24);
            long long v35 = v81;
            long long v34 = v82;
            uint64_t v36 = v90;
            if (v33 >= v32 >> 1)
            {
              sub_24F795720(v32 > 1, v33 + 1, 1);
              uint64_t v36 = v90;
              long long v35 = v81;
              long long v34 = v82;
              uint64_t v19 = *(void *)&v83[0];
            }
            *(void *)(v19 + 16) = v33 + 1;
            uint64_t v37 = v19 + 88 * v33;
            *(_OWORD *)(v37 + 32) = v34;
            *(unsigned char *)(v37 + 48) = v24;
            *(void *)(v37 + 56) = v26;
            *(void *)(v37 + 64) = v25;
            *(void *)(v37 + 72) = v28;
            *(void *)(v37 + 80) = v27;
            *(unsigned char *)(v37 + 88) = v80;
            *(void *)(v37 + 96) = v36;
            *(_OWORD *)(v37 + 104) = v35;
            a4 = v78;
          }
          v22 += 88;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
      *(void *)&v83[0] = v19;
      swift_retain();
      sub_24F7FAE1C((uint64_t *)v83, (uint64_t (*)(uint64_t))sub_24F897568, sub_24F7FAEA0);
      swift_release();
      uint64_t v6 = *(void *)&v83[0];
      a2 = v76;
      if (*(void *)(*(void *)&v83[0] + 16))
      {
        swift_beginAccess();
        uint64_t v38 = *(void *)(v75 + 8);
        uint64_t v39 = *(void *)(v38 + 16);
        sub_24F7DCA90(v77, v76);
        if (v39)
        {
          sub_24F7DCA90(v77, v76);
          swift_retain();
          unint64_t v40 = sub_24F7C0164(v77, v76);
          if (v41)
          {
            uint64_t v42 = (uint64_t *)(*(void *)(v38 + 56) + 40 * v40);
            uint64_t v43 = *v42;
            uint64_t v44 = v42[1];
            uint64_t v46 = v42[2];
            uint64_t v45 = v42[3];
            uint64_t v47 = v42[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_24F7F2A24(v77, v76);
LABEL_36:
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v58 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v85 = v46;
            sub_24F7DC260(v6, a3, a4, v58);
            uint64_t v59 = v85;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v88[0] = v43;
            v88[1] = v44;
            v88[2] = v59;
            v88[3] = v45;
            v88[4] = v47;
            sub_24F7FDBA8((uint64_t)v88, v77);
            swift_endAccess();
            sub_24F7F2A24(v77, a2);
            swift_release();
            return v6;
          }
          sub_24F7F2A24(v77, v76);
        }
        else
        {
          swift_retain();
        }
        sub_24F781274(&qword_26B1F7890);
        uint64_t v44 = sub_24F8CEC70();
        sub_24F781274(&qword_26B1F7950);
        uint64_t v46 = sub_24F8CEC70();
        sub_24F781274(&qword_26B1F78A0);
        uint64_t v45 = sub_24F8CEC70();
        sub_24F781274(&qword_26B1F7898);
        uint64_t v47 = sub_24F8CEC70();
        uint64_t v43 = 0;
        a2 = v76;
        goto LABEL_36;
      }
      swift_release();
      swift_beginAccess();
      uint64_t v48 = *(void *)(v75 + 8);
      uint64_t v49 = *(void *)(v48 + 16);
      sub_24F7DCA90(v77, v76);
      if (v49)
      {
        sub_24F7DCA90(v77, v76);
        unint64_t v50 = sub_24F7C0164(v77, v76);
        if (v51)
        {
          uint64_t v52 = (uint64_t *)(*(void *)(v48 + 56) + 40 * v50);
          uint64_t v53 = *v52;
          uint64_t v54 = v52[1];
          uint64_t v56 = v52[2];
          uint64_t v55 = v52[3];
          uint64_t v57 = v52[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24F7F2A24(v77, v76);
LABEL_42:
          swift_bridgeObjectRetain();
          uint64_t v70 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v85 = v56;
          sub_24F7DC260(0, a3, a4, v70);
          uint64_t v71 = v85;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v87[0] = v53;
          v87[1] = v54;
          v87[2] = v71;
          v87[3] = v55;
          v87[4] = v57;
          unint64_t v72 = v87;
LABEL_46:
          sub_24F7FDBA8((uint64_t)v72, v77);
          swift_endAccess();
          sub_24F7F2A24(v77, a2);
          return 0;
        }
        sub_24F7F2A24(v77, v76);
      }
      sub_24F781274(&qword_26B1F7890);
      uint64_t v54 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F7950);
      uint64_t v56 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F78A0);
      uint64_t v55 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F7898);
      a2 = v76;
      uint64_t v57 = sub_24F8CEC70();
      uint64_t v53 = 0;
      goto LABEL_42;
    }
    swift_beginAccess();
    uint64_t v60 = *(void *)(v10 + 8);
    uint64_t v61 = *(void *)(v60 + 16);
    sub_24F7DCA90(v77, a2);
    if (v61)
    {
      sub_24F7DCA90(v77, a2);
      unint64_t v62 = sub_24F7C0164(v77, a2);
      if (v63)
      {
        uint64_t v64 = (uint64_t *)(*(void *)(v60 + 56) + 40 * v62);
        uint64_t v65 = *v64;
        uint64_t v66 = v64[1];
        uint64_t v68 = v64[2];
        uint64_t v67 = v64[3];
        uint64_t v69 = v64[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F7F2A24(v77, a2);
LABEL_45:
        swift_bridgeObjectRetain();
        uint64_t v73 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v85 = v68;
        sub_24F7DC260(0, a3, a4, v73);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v89[0] = v65;
        v89[1] = v66;
        v89[2] = v68;
        v89[3] = v67;
        v89[4] = v69;
        unint64_t v72 = v89;
        goto LABEL_46;
      }
      sub_24F7F2A24(v77, a2);
    }
    sub_24F781274(&qword_26B1F7890);
    uint64_t v66 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7950);
    uint64_t v68 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F78A0);
    uint64_t v67 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7898);
    uint64_t v69 = sub_24F8CEC70();
    uint64_t v65 = 0;
    goto LABEL_45;
  }
  uint64_t v6 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

BOOL sub_24F7F3654(uint64_t a1, unint64_t a2)
{
  ppStmt[1] = *(sqlite3_stmt **)MEMORY[0x263EF8340];
  sub_24F8CF7D0();
  sub_24F8CEEB0();
  sub_24F7F0AF4(a1, a2);
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  ppStmt[0] = 0;
  swift_beginAccess();
  uint64_t v5 = *(sqlite3 **)(v2 + 16);
  uint64_t v6 = sub_24F8CEE30();
  swift_bridgeObjectRelease();
  LODWORD(v5) = sqlite3_prepare_v2(v5, (const char *)(v6 + 32), -1, ppStmt, 0);
  swift_release();
  sqlite3_finalize(ppStmt[0]);
  return v5 == 0;
}

uint64_t sub_24F7F37AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Database.primaryKey(_:)(a3, a4, &v16);
  if (v4) {
    return v7 & 1;
  }
  uint64_t v9 = v16;
  uint64_t v8 = v17;
  if (!v18)
  {
    if (v16 == a1 && v17 == a2)
    {
      sub_24F790830(a1, v17, 0);
    }
    else
    {
      char v11 = sub_24F8CFD00();
      sub_24F790830(v9, v8, 0);
      if ((v11 & 1) == 0) {
        goto LABEL_13;
      }
    }
LABEL_20:
    char v7 = 1;
    return v7 & 1;
  }
  if (v18 != 1)
  {
    sub_24F790830(v16, v17, 2u);
    goto LABEL_13;
  }
  sub_24F790830(v16, v17, 1u);
  if (v8)
  {
LABEL_13:
    if (sub_24F8CED10() != 0x4449574F52 || v12 != 0xE500000000000000)
    {
      char v14 = sub_24F8CFD00();
      swift_bridgeObjectRelease();
      return v14 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v7 = 0;
  return v7 & 1;
}

uint64_t Database.indexes(on:)(uint64_t a1, uint64_t a2)
{
  return sub_24F7F7168(a1, a2, sub_24F7F392C);
}

uint64_t sub_24F7F392C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v63 = a2;
  uint64_t v9 = v4 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v54 = v9;
  uint64_t v55 = v5;
  if (*(void *)(v10 + 16))
  {
    sub_24F7DCA90(a1, v63);
    unint64_t v11 = sub_24F7C0164(a1, v63);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 40 * v11 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F7F2A24(a1, v63);
      goto LABEL_6;
    }
    sub_24F7F2A24(a1, v63);
  }
  sub_24F781274(&qword_26B1F7890);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7950);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F78A0);
  uint64_t v13 = sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7898);
  sub_24F8CEC70();
LABEL_6:
  swift_endAccess();
  if (!*(void *)(v13 + 16)) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_24F782950();
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F8CF7D0();
    swift_bridgeObjectRelease();
    *(void *)&v58[0] = 0x20414D47415250;
    *((void *)&v58[0] + 1) = 0xE700000000000000;
    unint64_t v16 = v63;
    type metadata accessor for Row();
    sub_24F7DCA90(a1, v16);
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    long long v17 = v58[0];
    uint64_t v59 = 0;
    memset(v58, 0, sizeof(v58));
    uint64_t v18 = a3;
    v60[0] = MEMORY[0x263F8EE78];
    v60[1] = MEMORY[0x263F8EE80];
    unint64_t v19 = static Row.fetchAll(_:sql:arguments:adapter:)(v5, v17, *((void *)&v17 + 1), v60, v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F7783C0((uint64_t)v58, &qword_26B1F7F10);
    if (v57) {
      return a1;
    }
    uint64_t v20 = a1;
    unint64_t v21 = v63;
    sub_24F7DCA90(a1, v63);
    swift_bridgeObjectRetain();
    swift_retain();
    a1 = sub_24F7EFAA0(v19, v55, a1, v21);
    swift_bridgeObjectRelease();
    uint64_t v53 = v20;
    if (*(void *)(a1 + 16))
    {
      uint64_t v56 = a3;
      goto LABEL_16;
    }
    char v34 = sub_24F7F1334(1, a3, a4, v20, v63);
    if (v34)
    {
      uint64_t v56 = a3;
LABEL_16:
      swift_beginAccess();
      uint64_t v23 = *(void *)(v54 + 8);
      uint64_t v24 = *(void *)(v23 + 16);
      sub_24F7DCA90(v20, v63);
      if (v24)
      {
        unint64_t v25 = v63;
        sub_24F7DCA90(v20, v63);
        swift_bridgeObjectRetain();
        unint64_t v26 = sub_24F7C0164(v20, v25);
        if (v27)
        {
          uint64_t v28 = (uint64_t *)(*(void *)(v23 + 56) + 40 * v26);
          uint64_t v29 = *v28;
          uint64_t v30 = v28[1];
          uint64_t v31 = v28[2];
          uint64_t v32 = v28[3];
          uint64_t v33 = v28[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24F7F2A24(v53, v63);
LABEL_23:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v60[0] = v32;
          sub_24F7DC280(a1, v56, a4, isUniquelyReferenced_nonNull_native);
          uint64_t v36 = v60[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v61[0] = v29;
          v61[1] = v30;
          v61[2] = v31;
          v61[3] = v36;
          v61[4] = v33;
          unint64_t v37 = v63;
          sub_24F7FDBA8((uint64_t)v61, v53);
          swift_endAccess();
          sub_24F7F2A24(v53, v37);
          goto LABEL_9;
        }
        sub_24F7F2A24(v20, v63);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_24F781274(&qword_26B1F7890);
      uint64_t v30 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F7950);
      uint64_t v31 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F78A0);
      uint64_t v32 = sub_24F8CEC70();
      sub_24F781274(&qword_26B1F7898);
      uint64_t v33 = sub_24F8CEC70();
      uint64_t v29 = 0;
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v38 = *(void *)(v54 + 8);
    uint64_t v39 = *(void *)(v38 + 16);
    uint64_t v40 = v20;
    sub_24F7DCA90(v20, v63);
    if (v39)
    {
      unint64_t v41 = v63;
      sub_24F7DCA90(v20, v63);
      unint64_t v42 = sub_24F7C0164(v20, v41);
      if (v43)
      {
        uint64_t v44 = (uint64_t *)(*(void *)(v38 + 56) + 40 * v42);
        uint64_t v45 = *v44;
        uint64_t v46 = v44[1];
        uint64_t v47 = v44[2];
        uint64_t v48 = v44[3];
        uint64_t v49 = v44[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F7F2A24(v53, v63);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v50 = swift_isUniquelyReferenced_nonNull_native();
        v60[0] = v48;
        sub_24F7DC280(0, v18, a4, v50);
        uint64_t v51 = v60[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v62[0] = v45;
        v62[1] = v46;
        v62[2] = v47;
        v62[3] = v51;
        v62[4] = v49;
        unint64_t v52 = v63;
        sub_24F7FDBA8((uint64_t)v62, v40);
        swift_endAccess();
        sub_24F7F2A24(v40, v52);
        return 0;
      }
      sub_24F7F2A24(v20, v63);
    }
    sub_24F781274(&qword_26B1F7890);
    uint64_t v46 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7950);
    uint64_t v47 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F78A0);
    uint64_t v48 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7898);
    uint64_t v40 = v20;
    uint64_t v49 = sub_24F8CEC70();
    uint64_t v45 = 0;
    goto LABEL_31;
  }
  a1 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24F7F41CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a1;
  if (*(uint64_t *)(*a1 + 72) <= 1) {
    goto LABEL_55;
  }
  unint64_t v11 = *(sqlite3_stmt **)(v7 + 64);
  if (v11)
  {
    MEMORY[0x270FA5388](a1);
    if (sqlite3_column_type(v11, 1) == 5)
    {
      sub_24F7D0FBC(v11);
      goto LABEL_58;
    }
    if (!sqlite3_column_text(v11, 1)) {
      goto LABEL_54;
    }
    uint64_t v12 = sub_24F8CEEE0();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = sub_24F7EFE90();
    if (v5) {
      goto LABEL_58;
    }
    uint64_t v14 = v15;
  }
  uint64_t v41 = a5;
  if (*(uint64_t *)(v7 + 72) <= 2) {
    goto LABEL_55;
  }
  uint64_t v42 = v12;
  unint64_t v16 = *(sqlite3_stmt **)(v7 + 64);
  if (v16)
  {
    MEMORY[0x270FA5388](v12);
    if (sqlite3_column_type(v16, 2) == 5)
    {
      sub_24F7D109C(v16);
      goto LABEL_58;
    }
    BOOL v40 = sqlite3_column_int64(v16, 2) != 0;
  }
  else
  {
    char v17 = sub_24F7EFF58();
    if (v5) {
      goto LABEL_58;
    }
    BOOL v40 = v17;
  }
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  *(void *)&v43[0] = 0x20414D47415250;
  *((void *)&v43[0] + 1) = 0xE700000000000000;
  type metadata accessor for Row();
  sub_24F7DCA90(a3, a4);
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  long long v18 = v43[0];
  uint64_t v44 = 0;
  memset(v43, 0, sizeof(v43));
  v45[0] = MEMORY[0x263F8EE78];
  v45[1] = MEMORY[0x263F8EE80];
  uint64_t v19 = static Row.fetchAll(_:sql:arguments:adapter:)(a2, v18, *((void *)&v18 + 1), v45, v43);
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_24F7783C0((uint64_t)v43, &qword_26B1F7F10);
  }
  uint64_t v21 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7783C0((uint64_t)v43, &qword_26B1F7F10);
  if (v21 < 0 || (v21 & 0x4000000000000000) != 0)
  {
LABEL_48:
    uint64_t v38 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_24F795100(v38);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  *(void *)&v43[0] = v22;
  sub_24F7FADA0((uint64_t *)v43);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)&v43[0];
  if ((*(void *)&v43[0] & 0x8000000000000000) != 0 || (*(void *)&v43[0] & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_24F8CF9E0();
    swift_release();
    if (v24) {
      goto LABEL_22;
    }
LABEL_50:
    uint64_t v26 = MEMORY[0x263F8EE78];
LABEL_51:
    uint64_t result = swift_release();
    *(void *)uint64_t v41 = v42;
    *(void *)(v41 + 8) = v14;
    *(void *)(v41 + 16) = v26;
    *(unsigned char *)(v41 + 24) = v40;
    return result;
  }
  uint64_t v24 = *(void *)(*(void *)&v43[0] + 16);
  if (!v24) {
    goto LABEL_50;
  }
LABEL_22:
  sub_24F8A0264(0);
  uint64_t v39 = v14;
  if ((v23 & 0xC000000000000001) != 0)
  {
    uint64_t v25 = MEMORY[0x253364060](0, v23);
  }
  else
  {
    uint64_t v25 = *(void *)(v23 + 32);
    swift_retain();
  }
  if (*(uint64_t *)(v25 + 72) < 3) {
    goto LABEL_55;
  }
  uint64_t v14 = 0;
  uint64_t v46 = v24 - 1;
  uint64_t v26 = MEMORY[0x263F8EE78];
  while (1)
  {
    char v27 = *(sqlite3_stmt **)(v25 + 64);
    if (v27) {
      break;
    }
    uint64_t v31 = sub_24F7F03DC(2);
    uint64_t v30 = v32;
    if (!v32)
    {
LABEL_44:
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *(void *)uint64_t v41 = 0;
      *(void *)(v41 + 8) = 0;
      *(unsigned char *)(v41 + 24) = 0;
      *(void *)(v41 + 16) = 0;
      return result;
    }
    uint64_t v28 = (uint64_t)v31;
LABEL_32:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F787184();
      uint64_t v26 = v36;
    }
    unint64_t v33 = *(void *)(v26 + 16);
    if (v33 >= *(void *)(v26 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v26 = v37;
    }
    *(void *)(v26 + 16) = v33 + 1;
    uint64_t v34 = v26 + 16 * v33;
    *(void *)(v34 + 32) = v28;
    *(void *)(v34 + 40) = v30;
    swift_release();
    if (v46 == v14)
    {
      uint64_t v14 = v39;
      goto LABEL_51;
    }
    unint64_t v35 = v14 + 1;
    if ((v23 & 0xC000000000000001) != 0)
    {
      uint64_t v25 = MEMORY[0x253364060](v14 + 1, v23);
    }
    else
    {
      if (v35 >= *(void *)(v23 + 16)) {
        goto LABEL_47;
      }
      uint64_t v25 = *(void *)(v23 + 8 * v14 + 40);
      swift_retain();
    }
    if (__OFADD__(v35, 1))
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    ++v14;
    if (*(uint64_t *)(v25 + 72) <= 2) {
      goto LABEL_55;
    }
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(v25 + 64), 2) == 5) {
    goto LABEL_44;
  }
  if (sqlite3_column_text(v27, 2))
  {
    uint64_t v28 = sub_24F8CEEE0();
    uint64_t v30 = v29;
    goto LABEL_32;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  sub_24F8CF9D0();
  __break(1u);
LABEL_58:
  swift_unexpectedError();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_24F7F489C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = *a1;
  if (*(uint64_t *)(*a1 + 72) <= 0) {
    goto LABEL_13;
  }
  uint64_t v6 = *a2;
  uint64_t v3 = *(sqlite3_stmt **)(v5 + 64);
  if (v3)
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v4 = v12;
    uint64_t v13 = v5;
    uint64_t v14 = 0;
    if (sqlite3_column_type(v3, 0) == 5)
    {
LABEL_14:
      unint64_t v11 = v3;
LABEL_16:
      sub_24F7D102C(v11, 0, sub_24F7FF1AC, v4);
      goto LABEL_17;
    }
    sqlite3_int64 v7 = sqlite3_column_int64(v3, 0);
    uint64_t v3 = (sqlite3_stmt *)v7;
  }
  else
  {
    sqlite3_int64 v7 = sub_24F7EFEF8();
    if (v2) {
      goto LABEL_17;
    }
    uint64_t v3 = (sqlite3_stmt *)v7;
  }
  if (*(uint64_t *)(v6 + 72) <= 0)
  {
LABEL_13:
    LODWORD(v14) = 0;
    uint64_t v13 = 825;
    sub_24F8CF9D0();
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = *(sqlite3_stmt **)(v6 + 64);
  if (v8)
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v4 = v12;
    uint64_t v13 = v6;
    uint64_t v14 = 0;
    if (sqlite3_column_type(v8, 0) != 5)
    {
      sqlite3_int64 v9 = sqlite3_column_int64(v8, 0);
      return (uint64_t)v3 < v9;
    }
    unint64_t v11 = v8;
    goto LABEL_16;
  }
  sqlite3_int64 v9 = sub_24F7EFEF8();
  if (!v2) {
    return (uint64_t)v3 < v9;
  }
LABEL_17:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void Database.table<A>(_:hasUniqueKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_24F77D7C0();
  a17 = v19;
  a18 = v20;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  MEMORY[0x270FA5388](v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))((char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v28);
  uint64_t v29 = sub_24F8CF1D0();
  uint64_t v30 = sub_24F7F4BC8(v29, v24, v22);
  swift_bridgeObjectRelease();
  if (!v18 && v30) {
    swift_bridgeObjectRelease();
  }
  sub_24F77B584();
  sub_24F77C020();
}

__n128 *sub_24F7F4BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_24F7EF1A4(a1);
  uint64_t v9 = sub_24F78E25C(v8);
  if (*(void *)(v9 + 16))
  {
    uint64_t v10 = sub_24F81BD54((uint64_t)&unk_2701058F0);
    sub_24F80C2E8(v9, v10);
    uint64_t v11 = sub_24F77091C();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return (__n128 *)&unk_270105860;
    }
    sub_24F76BAE8(v11, v12, v13, v14, v15, v16, v17, v18, v50);
    if (v4)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    if (v65)
    {
      if (v65 == 1) {
        uint64_t v19 = (_OWORD *)v62;
      }
      else {
        uint64_t v19 = &unk_270105890;
      }
    }
    else
    {
      sub_24F781274((uint64_t *)&unk_26B1F7C88);
      uint64_t v19 = (_OWORD *)sub_24F76BAD0();
      v19[1] = xmmword_24F8DDBF0;
      *((void *)v19 + 4) = v62;
      *((void *)v19 + 5) = v64;
    }
    uint64_t v20 = *((void *)v19 + 2);
    sub_24F7FF310();
    if (v20)
    {
      uint64_t v52 = a3;
      uint64_t v53 = v3;
      uint64_t v57 = v9;
      uint64_t v58 = 0;
      sub_24F7903D0(v62, v64, v21);
      sub_24F774684();
      uint64_t v22 = v62;
      p_MangledTypeName = &stru_24F8DCFD8[3].MangledTypeName;
      do
      {
        sub_24F8CED00();
        sub_24F771E04();
        if (v23)
        {
          sub_24F7FF228();
          uint64_t v22 = v62;
        }
        sub_24F7FF210();
      }
      while (!v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24F7903D0(v62, v64, v21);
      swift_bridgeObjectRelease();
      uint64_t v22 = MEMORY[0x263F8EE78];
    }
    sub_24F78E25C(v22);
    sub_24F774440();
    uint64_t v25 = sub_24F77091C();
    if (v62)
    {
      swift_bridgeObjectRelease();
      if (v61)
      {
        if (v61 == 1) {
          return (__n128 *)v59;
        }
        else {
          return (__n128 *)&unk_2701058C0;
        }
      }
      else
      {
        sub_24F781274((uint64_t *)&unk_26B1F7C88);
        uint64_t v6 = (__n128 *)sub_24F76BAD0();
        sub_24F7FF2E8(v6, (__n128)xmmword_24F8DDBF0, v42, v43, v44, v45, v46, v47, v48, (uint64_t)p_MangledTypeName, v52, v53, v55, v57, v58, v59);
      }
      return v6;
    }
    uint64_t v33 = sub_24F785030(v25, v26, v27, v28, v29, v30, v31, v32, (uint64_t)p_MangledTypeName, v52, v53, v55, v57, v58, v59, v61);
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      uint64_t v35 = v33 + 32;
      swift_bridgeObjectRetain();
      uint64_t v36 = 0;
      uint64_t v37 = MEMORY[0x263F8EE78];
      uint64_t v56 = v35;
      uint64_t v54 = v34;
      while (1)
      {
        uint64_t v38 = v35 + 32 * v36;
        if (*(unsigned char *)(v38 + 24) == 1)
        {
          uint64_t v6 = *(__n128 **)(v38 + 16);
          uint64_t v60 = v36;
          if (v6[1].n128_u64[0])
          {
            uint64_t v63 = v37;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            sub_24F7FF2C8();
            do
            {
              sub_24F8CED00();
              sub_24F76B6F4();
              if (v23)
              {
                sub_24F775FE0();
                uint64_t v37 = v63;
              }
              sub_24F77295C();
            }
            while (!v24);
            swift_bridgeObjectRelease();
            uint64_t v34 = v54;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          sub_24F8CF300();
          uint64_t v39 = *(void *)(v37 + 16);
          if (v39)
          {
            uint64_t v40 = v37 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_24F7FF270();
              swift_bridgeObjectRelease();
              v40 += 16;
              --v39;
            }
            while (v39);
          }
          swift_bridgeObjectRelease();
          char v41 = sub_24F774440();
          swift_bridgeObjectRelease();
          if (v41)
          {
            swift_bridgeObjectRelease();
            sub_24F7FF290();
            swift_bridgeObjectRelease();
            return v6;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v37 = MEMORY[0x263F8EE78];
          uint64_t v35 = v56;
          uint64_t v36 = v60;
        }
        if (++v36 == v34)
        {
          swift_bridgeObjectRelease();
          sub_24F7FF290();
          return 0;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return 0;
}

__n128 *sub_24F7F4F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7EF4D4(a1);
  uint64_t v9 = sub_24F78E25C(v8);
  if (*(void *)(v9 + 16))
  {
    uint64_t v10 = sub_24F81BD54((uint64_t)&unk_2701059B0);
    sub_24F80C2E8(v9, v10);
    uint64_t v11 = sub_24F77091C();
    if (v5)
    {
      swift_bridgeObjectRelease();
      return (__n128 *)&unk_270105920;
    }
    sub_24F76BAE8(v11, v12, v13, v14, v15, v16, v17, v18, v50);
    if (v4)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    if (v65)
    {
      if (v65 == 1) {
        uint64_t v19 = (_OWORD *)v62;
      }
      else {
        uint64_t v19 = &unk_270105950;
      }
    }
    else
    {
      sub_24F781274((uint64_t *)&unk_26B1F7C88);
      uint64_t v19 = (_OWORD *)sub_24F76BAD0();
      v19[1] = xmmword_24F8DDBF0;
      *((void *)v19 + 4) = v62;
      *((void *)v19 + 5) = v64;
    }
    uint64_t v20 = *((void *)v19 + 2);
    sub_24F7FF310();
    if (v20)
    {
      uint64_t v52 = a3;
      uint64_t v53 = v3;
      uint64_t v57 = v9;
      uint64_t v58 = 0;
      sub_24F7903D0(v62, v64, v21);
      sub_24F774684();
      uint64_t v22 = v62;
      p_MangledTypeName = &stru_24F8DCFD8[3].MangledTypeName;
      do
      {
        sub_24F8CED00();
        sub_24F771E04();
        if (v23)
        {
          sub_24F7FF228();
          uint64_t v22 = v62;
        }
        sub_24F7FF210();
      }
      while (!v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24F7903D0(v62, v64, v21);
      swift_bridgeObjectRelease();
      uint64_t v22 = MEMORY[0x263F8EE78];
    }
    sub_24F78E25C(v22);
    sub_24F774440();
    uint64_t v25 = sub_24F77091C();
    if (v62)
    {
      swift_bridgeObjectRelease();
      if (v61)
      {
        if (v61 == 1) {
          return (__n128 *)v59;
        }
        else {
          return (__n128 *)&unk_270105980;
        }
      }
      else
      {
        sub_24F781274((uint64_t *)&unk_26B1F7C88);
        uint64_t v6 = (__n128 *)sub_24F76BAD0();
        sub_24F7FF2E8(v6, (__n128)xmmword_24F8DDBF0, v42, v43, v44, v45, v46, v47, v48, (uint64_t)p_MangledTypeName, v52, v53, v55, v57, v58, v59);
      }
      return v6;
    }
    uint64_t v33 = sub_24F785030(v25, v26, v27, v28, v29, v30, v31, v32, (uint64_t)p_MangledTypeName, v52, v53, v55, v57, v58, v59, v61);
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      uint64_t v35 = v33 + 32;
      swift_bridgeObjectRetain();
      uint64_t v36 = 0;
      uint64_t v37 = MEMORY[0x263F8EE78];
      uint64_t v56 = v35;
      uint64_t v54 = v34;
      while (1)
      {
        uint64_t v38 = v35 + 32 * v36;
        if (*(unsigned char *)(v38 + 24) == 1)
        {
          uint64_t v6 = *(__n128 **)(v38 + 16);
          uint64_t v60 = v36;
          if (v6[1].n128_u64[0])
          {
            uint64_t v63 = v37;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            sub_24F7FF2C8();
            do
            {
              sub_24F8CED00();
              sub_24F76B6F4();
              if (v23)
              {
                sub_24F775FE0();
                uint64_t v37 = v63;
              }
              sub_24F77295C();
            }
            while (!v24);
            swift_bridgeObjectRelease();
            uint64_t v34 = v54;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          sub_24F8CF300();
          uint64_t v39 = *(void *)(v37 + 16);
          if (v39)
          {
            uint64_t v40 = v37 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_24F7FF270();
              swift_bridgeObjectRelease();
              v40 += 16;
              --v39;
            }
            while (v39);
          }
          swift_bridgeObjectRelease();
          char v41 = sub_24F774440();
          swift_bridgeObjectRelease();
          if (v41)
          {
            swift_bridgeObjectRelease();
            sub_24F7FF290();
            swift_bridgeObjectRelease();
            return v6;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v37 = MEMORY[0x263F8EE78];
          uint64_t v35 = v56;
          uint64_t v36 = v60;
        }
        if (++v36 == v34)
        {
          swift_bridgeObjectRelease();
          sub_24F7FF290();
          return 0;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Database.foreignKeys(on:)(uint64_t a1, uint64_t a2)
{
  return sub_24F7F7168(a1, a2, sub_24F7F531C);
}

uint64_t sub_24F7F531C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v106 = a4;
  uint64_t v9 = v4 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v105 = a1;
  uint64_t v102 = v9 + 8;
  uint64_t v101 = v9;
  if (v11)
  {
    sub_24F7DCA90(a1, a2);
    unint64_t v12 = sub_24F7C0164(a1, a2);
    if (v13)
    {
      uint64_t v14 = *(void *)(*(void *)(v10 + 56) + 40 * v12 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F7F2A24(a1, a2);
      goto LABEL_6;
    }
    sub_24F7F2A24(a1, a2);
  }
  sub_24F781274(&qword_26B1F7890);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7950);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F78A0);
  sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7898);
  uint64_t v14 = sub_24F8CEC70();
LABEL_6:
  uint64_t v112 = a3;
  swift_endAccess();
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_24F782950();
    if (v16)
    {
      uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_79:
      swift_bridgeObjectRelease();
      return v17;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  *(void *)&v116[0] = 0x20414D47415250;
  *((void *)&v116[0] + 1) = 0xE700000000000000;
  type metadata accessor for Row();
  sub_24F7DCA90(v105, a2);
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  uint64_t v118 = 34;
  unint64_t v119 = 0xE100000000000000;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  long long v18 = v116[0];
  uint64_t v117 = 0;
  memset(v116, 0, sizeof(v116));
  uint64_t v17 = MEMORY[0x263F8EE80];
  uint64_t v118 = MEMORY[0x263F8EE78];
  unint64_t v119 = MEMORY[0x263F8EE80];
  unint64_t v19 = static Row.fetchAll(_:sql:arguments:adapter:)(v103, v18, *((void *)&v18 + 1), &v118, v116);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7783C0((uint64_t)v116, &qword_26B1F7F10);
  if (v5) {
    return v17;
  }
  unint64_t v110 = v19;
  if (v19 >> 62) {
    goto LABEL_96;
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
  uint64_t v21 = v106;
  uint64_t v22 = v112;
  if (!v20)
  {
    uint64_t v66 = MEMORY[0x263F8EE78];
    goto LABEL_74;
  }
  sub_24F8A0264(0);
  unint64_t v108 = v110 & 0xC000000000000001;
  unint64_t v100 = a2;
  if ((v110 & 0xC000000000000001) != 0)
  {
    uint64_t v24 = MEMORY[0x253364060](0, v110);
    uint64_t v23 = v24;
  }
  else
  {
    uint64_t v23 = *(void *)(v110 + 32);
    uint64_t v24 = swift_retain();
  }
  if (*(uint64_t *)(v23 + 72) < 1) {
    goto LABEL_101;
  }
  a2 = 0;
  sqlite3_int64 v113 = 0;
  char v25 = 0;
  uint64_t v104 = v110 & 0xFFFFFFFFFFFFFF8;
  uint64_t v109 = v20 - 1;
  uint64_t v122 = MEMORY[0x263F8EE78];
  long long v107 = xmmword_24F8DDBF0;
  while (1)
  {
    uint64_t v26 = *(sqlite3_stmt **)(v23 + 64);
    if (v26)
    {
      MEMORY[0x270FA5388](v24);
      uint64_t v98 = v23;
      uint64_t v99 = 0;
      if (sqlite3_column_type(v26, 0) == 5)
      {
        uint64_t v95 = v26;
        uint64_t v96 = 0;
        goto LABEL_106;
      }
      sqlite3_int64 v27 = sqlite3_column_int64(v26, 0);
      sqlite3_int64 v28 = v27;
    }
    else
    {
      sqlite3_int64 v27 = sub_24F7EFEF8();
      sqlite3_int64 v28 = v27;
    }
    if (*(uint64_t *)(v23 + 72) <= 1) {
      goto LABEL_101;
    }
    uint64_t v29 = *(sqlite3_stmt **)(v23 + 64);
    if (v29)
    {
      MEMORY[0x270FA5388](v27);
      uint64_t v98 = v23;
      uint64_t v99 = 1;
      if (sqlite3_column_type(v29, 1) != 5)
      {
        sqlite3_int64 v30 = sqlite3_column_int64(v29, 1);
        sqlite3_int64 v115 = v30;
        goto LABEL_28;
      }
      uint64_t v95 = v29;
      uint64_t v96 = 1;
LABEL_106:
      sub_24F7D102C(v95, v96, sub_24F7FF1AC, &v97);
      goto LABEL_108;
    }
    sqlite3_int64 v30 = sub_24F7EFEF8();
    sqlite3_int64 v115 = v30;
LABEL_28:
    if (*(uint64_t *)(v23 + 72) <= 2) {
      goto LABEL_101;
    }
    uint64_t v31 = *(sqlite3_stmt **)(v23 + 64);
    if (v31)
    {
      MEMORY[0x270FA5388](v30);
      uint64_t v98 = v23;
      uint64_t v99 = 2;
      if (sqlite3_column_type(v31, 2) == 5) {
        goto LABEL_107;
      }
      if (!sqlite3_column_text(v31, 2)) {
        goto LABEL_99;
      }
      uint64_t v32 = sub_24F8CEEE0();
      uint64_t v111 = v32;
      uint64_t v34 = v33;
    }
    else
    {
      uint64_t v32 = sub_24F7EFE90();
      uint64_t v34 = v35;
      uint64_t v111 = v32;
    }
    if (*(uint64_t *)(v23 + 72) <= 3) {
      goto LABEL_101;
    }
    uint64_t v31 = *(sqlite3_stmt **)(v23 + 64);
    if (v31)
    {
      MEMORY[0x270FA5388](v32);
      uint64_t v98 = v23;
      uint64_t v99 = 3;
      if (sqlite3_column_type(v31, 3) == 5)
      {
LABEL_107:
        sub_24F7D0FBC(v31);
        goto LABEL_108;
      }
      if (sqlite3_column_text(v31, 3))
      {
        uint64_t v114 = sub_24F8CEEE0();
        uint64_t v37 = v36;
        goto LABEL_40;
      }
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      LODWORD(v99) = 0;
      uint64_t v94 = 825;
LABEL_102:
      uint64_t v98 = v94;
      sub_24F8CF9D0();
      __break(1u);
      while (1)
      {
LABEL_108:
        swift_unexpectedError();
        __break(1u);
      }
    }
    uint64_t v38 = sub_24F7EFE90();
    uint64_t v37 = v39;
    uint64_t v114 = v38;
LABEL_40:
    if (*(uint64_t *)(v23 + 72) <= 4)
    {
      LODWORD(v99) = 0;
      uint64_t v94 = 803;
      goto LABEL_102;
    }
    uint64_t v40 = *(sqlite3_stmt **)(v23 + 64);
    if (v40)
    {
      if (sqlite3_column_type(*(sqlite3_stmt **)(v23 + 64), 4) == 5)
      {
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        goto LABEL_48;
      }
      if (!sqlite3_column_text(v40, 4)) {
        goto LABEL_100;
      }
      uint64_t v43 = sub_24F8CEEE0();
    }
    else
    {
      uint64_t v43 = (uint64_t)sub_24F7F03DC(4);
    }
    uint64_t v41 = v43;
    uint64_t v42 = v44;
LABEL_48:
    if ((v25 & (v113 == v28)) != 0)
    {
      uint64_t v111 = v37;
      swift_bridgeObjectRelease();
      uint64_t v45 = v122;
      unint64_t v46 = *(void *)(v122 + 16);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if (!v46) {
          goto LABEL_93;
        }
      }
      else
      {
        sub_24F83CCC4();
        uint64_t v45 = v61;
        if (!v46) {
          goto LABEL_93;
        }
      }
      if (v46 > *(void *)(v45 + 16)) {
        goto LABEL_94;
      }
      uint64_t v122 = v45;
      uint64_t v47 = v45 + 32 * (v46 - 1);
      uint64_t v50 = *(void *)(v47 + 56);
      uint64_t v49 = (void *)(v47 + 56);
      uint64_t v48 = v50;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v49 = v50;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24F787BA4();
        uint64_t v48 = v64;
        *uint64_t v49 = v64;
      }
      unint64_t v52 = *(void *)(v48 + 16);
      if (v52 >= *(void *)(v48 + 24) >> 1)
      {
        sub_24F787BA4();
        uint64_t v48 = v65;
        *uint64_t v49 = v65;
      }
      uint64_t v22 = v112;
      *(void *)(v48 + 16) = v52 + 1;
      uint64_t v53 = (void *)(v48 + 40 * v52);
      uint64_t v54 = v111;
      v53[4] = v114;
      v53[5] = v54;
      v53[6] = v41;
      v53[7] = v42;
      v53[8] = v115;
    }
    else
    {
      sub_24F781274(&qword_26B1F5898);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = v107;
      *(void *)(v55 + 32) = v114;
      *(void *)(v55 + 40) = v37;
      *(void *)(v55 + 48) = v41;
      *(void *)(v55 + 56) = v42;
      *(void *)(v55 + 64) = v115;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F787AE0();
        uint64_t v122 = v62;
      }
      unint64_t v56 = *(void *)(v122 + 16);
      if (v56 >= *(void *)(v122 + 24) >> 1)
      {
        sub_24F787AE0();
        uint64_t v122 = v63;
      }
      uint64_t v57 = v122;
      *(void *)(v122 + 16) = v56 + 1;
      uint64_t v58 = (void *)(v57 + 32 * v56);
      uint64_t v59 = v111;
      v58[4] = v28;
      v58[5] = v59;
      v58[6] = v34;
      v58[7] = v55;
      sqlite3_int64 v113 = v28;
      uint64_t v22 = v112;
    }
    swift_release();
    if (v109 == a2) {
      break;
    }
    unint64_t v60 = a2 + 1;
    if (v108)
    {
      uint64_t v24 = MEMORY[0x253364060](a2 + 1, v110);
      uint64_t v23 = v24;
    }
    else
    {
      if (v60 >= *(void *)(v104 + 16)) {
        goto LABEL_95;
      }
      uint64_t v23 = *(void *)(v110 + 8 * a2 + 40);
      uint64_t v24 = swift_retain();
    }
    if (__OFADD__(v60, 1))
    {
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_24F8CF9E0();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    ++a2;
    char v25 = 1;
    if (*(uint64_t *)(v23 + 72) <= 0) {
      goto LABEL_101;
    }
  }
  a2 = v100;
  uint64_t v21 = v106;
  uint64_t v66 = v122;
LABEL_74:
  swift_bridgeObjectRelease();
  if (*(void *)(v66 + 16) || (char v77 = sub_24F7F1334(1, v22, v21, v105, a2), (v77 & 1) != 0))
  {
    uint64_t v17 = sub_24F7EEF4C(v66, (void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F7FEBEC);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v67 = *(void *)(v101 + 8);
    uint64_t v68 = *(void *)(v67 + 16);
    sub_24F7DCA90(v105, a2);
    if (v68)
    {
      sub_24F7DCA90(v105, a2);
      swift_bridgeObjectRetain();
      unint64_t v69 = sub_24F7C0164(v105, a2);
      if (v70)
      {
        uint64_t v71 = (uint64_t *)(*(void *)(v67 + 56) + 40 * v69);
        uint64_t v73 = *v71;
        uint64_t v72 = v71[1];
        uint64_t v74 = v71[2];
        uint64_t v75 = v71[3];
        uint64_t v76 = v71[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F7F2A24(v105, a2);
LABEL_88:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v90 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v118 = v76;
        sub_24F7DC110(v17, v112, v106, v90);
        uint64_t v91 = v118;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v120[0] = v73;
        v120[1] = v72;
        v120[2] = v74;
        v120[3] = v75;
        v120[4] = v91;
        sub_24F7FDBA8((uint64_t)v120, v105);
        swift_endAccess();
        sub_24F7F2A24(v105, a2);
        goto LABEL_79;
      }
      unint64_t v89 = a2;
      sub_24F7F2A24(v105, a2);
    }
    else
    {
      unint64_t v89 = a2;
      swift_bridgeObjectRetain();
    }
    sub_24F781274(&qword_26B1F7890);
    uint64_t v72 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7950);
    uint64_t v74 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F78A0);
    uint64_t v75 = sub_24F8CEC70();
    sub_24F781274(&qword_26B1F7898);
    uint64_t v76 = sub_24F8CEC70();
    uint64_t v73 = 0;
    a2 = v89;
    goto LABEL_88;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v79 = *(void *)(v101 + 8);
  uint64_t v80 = *(void *)(v79 + 16);
  sub_24F7DCA90(v105, a2);
  if (v80)
  {
    sub_24F7DCA90(v105, a2);
    unint64_t v81 = sub_24F7C0164(v105, a2);
    if (v82)
    {
      uint64_t v83 = (uint64_t *)(*(void *)(v79 + 56) + 40 * v81);
      uint64_t v85 = *v83;
      uint64_t v84 = v83[1];
      uint64_t v86 = v83[2];
      uint64_t v87 = v83[3];
      uint64_t v88 = v83[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F7F2A24(v105, a2);
      goto LABEL_91;
    }
    sub_24F7F2A24(v105, a2);
  }
  sub_24F781274(&qword_26B1F7890);
  uint64_t v84 = sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7950);
  uint64_t v86 = sub_24F8CEC70();
  sub_24F781274(&qword_26B1F78A0);
  uint64_t v87 = sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7898);
  uint64_t v88 = sub_24F8CEC70();
  uint64_t v85 = 0;
LABEL_91:
  swift_bridgeObjectRetain();
  uint64_t v92 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v118 = v88;
  sub_24F7DC110(0, v22, v106, v92);
  uint64_t v93 = v118;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v121[0] = v85;
  v121[1] = v84;
  v121[2] = v86;
  v121[3] = v87;
  v121[4] = v93;
  sub_24F7FDBA8((uint64_t)v121, v105);
  swift_endAccess();
  sub_24F7F2A24(v105, a2);
  return 0;
}

uint64_t sub_24F7F6368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  v34[0] = a4;
  swift_bridgeObjectRetain();
  sub_24F7FAE1C(v34, (uint64_t (*)(uint64_t))sub_24F8975A8, sub_24F7FC738);
  if (v5)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v10 = v34[0];
    uint64_t v11 = *(void *)(v34[0] + 16);
    if (v11)
    {
      uint64_t v30 = a1;
      uint64_t v31 = a2;
      uint64_t v32 = a5;
      uint64_t v33 = a3;
      v34[0] = MEMORY[0x263F8EE78];
      sub_24F795FE0();
      uint64_t v12 = v34[0];
      char v13 = (uint64_t *)(v10 + 56);
      do
      {
        uint64_t v15 = *(v13 - 3);
        uint64_t v14 = *(v13 - 2);
        uint64_t v17 = *(v13 - 1);
        uint64_t v16 = *v13;
        v34[0] = v12;
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19 >= v18 >> 1)
        {
          sub_24F795FE0();
          uint64_t v12 = v34[0];
        }
        v13 += 5;
        *(void *)(v12 + 16) = v19 + 1;
        uint64_t v20 = (void *)(v12 + 32 * v19);
        v20[4] = v15;
        v20[5] = v14;
        v20[6] = v17;
        v20[7] = v16;
        --v11;
      }
      while (v11);
      swift_release();
      a5 = v32;
      a3 = v33;
      a1 = v30;
      a2 = v31;
    }
    else
    {
      swift_release();
      uint64_t v12 = MEMORY[0x263F8EE78];
    }
    uint64_t v21 = *(void *)(v12 + 16);
    if (v21)
    {
      uint64_t v22 = 56;
      while (*(void *)(v12 + v22))
      {
        v22 += 32;
        if (!--v21) {
          goto LABEL_13;
        }
      }
      Database.primaryKey(_:)(v34, a2);
      uint64_t v26 = v34[0];
      if (v35)
      {
        if (v35 == 1) {
          sqlite3_int64 v27 = (_OWORD *)v34[0];
        }
        else {
          sqlite3_int64 v27 = &unk_2701052A8;
        }
      }
      else
      {
        uint64_t v28 = v34[1];
        sub_24F781274((uint64_t *)&unk_26B1F7C88);
        sqlite3_int64 v27 = (_OWORD *)swift_allocObject();
        v27[1] = xmmword_24F8DDBF0;
        *((void *)v27 + 4) = v26;
        *((void *)v27 + 5) = v28;
      }
      sub_24F7EF294((uint64_t)v27, v12);
      uint64_t v24 = v29;
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_13:
      sub_24F7EF0A0(v12);
      uint64_t v24 = v23;
    }
    swift_bridgeObjectRelease();
    *a5 = a1;
    a5[1] = a2;
    a5[2] = a3;
    a5[3] = v24;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t Database.foreignKeyViolations()()
{
  sub_24F772DD0();
  uint64_t v1 = sub_24F7F72AC(v0, 0xD000000000000018, 0x800000024F8D2570, MEMORY[0x263F8EE78], MEMORY[0x263F8EE80], (uint64_t)v3, (uint64_t (*)(uint64_t, _OWORD *))sub_24F7F96D4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7783C0((uint64_t)v3, &qword_26B1F7F10);
  return v1;
}

uint64_t Database.foreignKeyViolations(in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_24F7F0D4C();
  if (!v3)
  {
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = (unint64_t *)(v6 + 40);
      while (1)
      {
        uint64_t v10 = *(v8 - 1);
        unint64_t v9 = *v8;
        sub_24F7DCA90(v10, *v8);
        if (sub_24F7F1334(1, a1, a2, v10, v9)) {
          break;
        }
        v8 += 2;
        sub_24F7F2A24(v10, v9);
        if (!--v7) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_24F7F67DC(v10, v9);
      sub_24F7F2A24(v10, v9);
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_24F7DC6DC();
      uint64_t v11 = sub_24F770FA4();
      sub_24F7FF324(v11, v12);
      swift_willThrow();
    }
  }
  return v2;
}

uint64_t sub_24F7F67DC(uint64_t a1, unint64_t a2)
{
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  *(void *)&v8[0] = 0x20414D47415250;
  *((void *)&v8[0] + 1) = 0xE700000000000000;
  sub_24F7DCA90(a1, a2);
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  uint64_t v10 = 34;
  unint64_t v11 = 0xE100000000000000;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  long long v5 = v8[0];
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  uint64_t v6 = sub_24F7F72AC(v2, v5, *((uint64_t *)&v5 + 1), MEMORY[0x263F8EE78], MEMORY[0x263F8EE80], (uint64_t)v8, (uint64_t (*)(uint64_t, _OWORD *))sub_24F7F96D4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7783C0((uint64_t)v8, &qword_26B1F7F10);
  return v6;
}

void sub_24F7F69BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_24F7734D0();
  a29 = v32;
  a30 = v33;
  uint64_t v34 = v30;
  sub_24F8AAF60((uint64_t)&a12);
  if (!v31)
  {
    uint64_t v35 = a13;
    if (a13)
    {
      uint64_t v36 = a12;
      uint64_t v37 = a14;
      sub_24F7DC6DC();
      sub_24F770FA4();
      uint64_t v39 = v38;
      a20 = v36;
      a12 = v36;
      a13 = v35;
      a14 = v37;
      sub_24F7FF258();
      uint64_t v40 = ForeignKeyViolation.failureDescription(_:)(v34);
      uint64_t v41 = a20;
      *(_DWORD *)uint64_t v39 = 787;
      *(void *)(v39 + 8) = v40;
      *(void *)(v39 + 16) = v42;
      *(_OWORD *)(v39 + 24) = 0u;
      *(_OWORD *)(v39 + 40) = 0u;
      *(unsigned char *)(v39 + 56) = 0;
      sub_24F7FEC08(v41, v35);
      swift_willThrow();
    }
  }
  sub_24F778C94();
}

#error "24F7F6B04: call analysis failed (funcsize=17)"

double ForeignKeyViolation.databaseError(_:)@<D0>(uint64_t a1@<X8>)
{
  sub_24F77CDE8();
  uint64_t v3 = ForeignKeyViolation.failureDescription(_:)(v2);
  *(_DWORD *)a1 = 787;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

#error "24F7F6C20: call analysis failed (funcsize=68)"

uint64_t sub_24F7F6CCC(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v7 = sub_24F8CED00();
  uint64_t v40 = a4 + 56;
  sub_24F785534();
  uint64_t v41 = v9;
  uint64_t v42 = v8;
  uint64_t v44 = a4;
  swift_bridgeObjectRetain_n();
  uint64_t v10 = 0;
  uint64_t v43 = a3;
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  sub_24F780AB8();
  for (uint64_t i = v11 | (v10 << 6); ; uint64_t i = v27 + (v10 << 6))
  {
    uint64_t v28 = (uint64_t *)(*(void *)(v44 + 48) + (i << 6));
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = v28[2];
    unint64_t v32 = 0xE500000000000000;
    uint64_t v33 = 0x7865646E69;
    switch(v43)
    {
      case 1:
        uint64_t v33 = 0x656C626174;
        break;
      case 2:
        unint64_t v32 = 0xE700000000000000;
        sub_24F7752C0();
        break;
      case 3:
        unint64_t v32 = 0xE400000000000000;
        uint64_t v33 = 2003134838;
        break;
      default:
        break;
    }
    if (v29 == v33 && v30 == v32)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      char v35 = sub_24F8CFD00();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        goto LABEL_42;
      }
    }
    if (sub_24F8CED00() == v7 && v36 == v42)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v31;
    }
    char v38 = sub_24F8CFD00();
    swift_bridgeObjectRelease();
    if (v38)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v13 >= v41) {
      goto LABEL_47;
    }
    ++v10;
    if (!*(void *)(v40 + 8 * v13))
    {
      uint64_t v10 = v13 + 1;
      sub_24F7FF24C();
      if (v14 == v15) {
        goto LABEL_47;
      }
      sub_24F7FF1F8();
      if (!v17)
      {
        uint64_t v10 = v16 + 2;
        sub_24F7FF24C();
        if (v14 == v15) {
          goto LABEL_47;
        }
        sub_24F7FF1F8();
        if (!v19)
        {
          uint64_t v10 = v18 + 3;
          sub_24F7FF24C();
          if (v14 == v15) {
            goto LABEL_47;
          }
          sub_24F7FF1F8();
          if (!v21)
          {
            uint64_t v10 = v20 + 4;
            sub_24F7FF24C();
            if (v14 == v15) {
              goto LABEL_47;
            }
            sub_24F7FF1F8();
            if (!v23) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    sub_24F7FF3C0();
  }
  uint64_t v24 = v22 + 5;
  if (v24 < v41)
  {
    if (!*(void *)(v40 + 8 * v24))
    {
      while (1)
      {
        uint64_t v10 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          break;
        }
        sub_24F7FF24C();
        if (v14 == v15) {
          goto LABEL_47;
        }
        sub_24F7FF1F8();
        uint64_t v24 = v25 + 1;
        if (v26) {
          goto LABEL_25;
        }
      }
LABEL_50:
      __break(1u);
      JUMPOUT(0x24F7F7010);
    }
    uint64_t v10 = v24;
    goto LABEL_25;
  }
LABEL_47:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24F7F7020(uint64_t a1)
{
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  v5[0] = 0xD000000000000026;
  v5[1] = 0x800000024F8D2620;
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F772DD0();
  uint64_t v3 = sub_24F7F72AC(a1, v2, 0x800000024F8D2620, MEMORY[0x263F8EE78], MEMORY[0x263F8EE80], (uint64_t)v5, (uint64_t (*)(uint64_t, _OWORD *))sub_24F7F9CE4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F7783C0((uint64_t)v5, &qword_26B1F7F10);
  return v3;
}

uint64_t Database.columns(in:)(uint64_t a1, uint64_t a2)
{
  return sub_24F7F7168(a1, a2, sub_24F7F2A38);
}

uint64_t sub_24F7F7168(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = sub_24F7F0D4C();
  if (!v3)
  {
    char v15 = a3;
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v9 = (unint64_t *)(v7 + 40);
      while (1)
      {
        uint64_t v10 = *(v9 - 1);
        unint64_t v11 = *v9;
        sub_24F7DCA90(v10, *v9);
        swift_bridgeObjectRetain();
        uint64_t v12 = a1;
        a1 = v15(v10, v11, a1, a2);
        sub_24F7F2A24(v10, v11);
        swift_bridgeObjectRelease();
        if (a1) {
          break;
        }
        v9 += 2;
        --v8;
        a1 = v12;
        if (!v8) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_24F7DC6DC();
      sub_24F770FA4();
      sub_24F7DB178(v13);
      swift_willThrow();
    }
  }
  return a1;
}

uint64_t sub_24F7F72AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, _OWORD *))
{
  sub_24F7786CC(a6, (uint64_t)v20);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24F8DDBF0;
  v23[0] = a2;
  v23[1] = a3;
  v23[2] = a4;
  v23[3] = a5;
  sub_24F7725D4(v23);
  sub_24F76C344((uint64_t)v23, v13 + 32);
  sub_24F7786CC((uint64_t)v20, (uint64_t)v19);
  long long v16 = 0u;
  long long v17 = 0u;
  *(void *)&long long v18 = 0;
  *((void *)&v18 + 1) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7AC1D0((uint64_t)v19, (uint64_t)&v16);
  char v22 = 2;
  v21[0] = v16;
  v21[1] = v17;
  void v21[2] = v18;
  sub_24F7783C0((uint64_t)v20, &qword_26B1F7F10);
  uint64_t v14 = a7(a1, v21);
  sub_24F7783C0((uint64_t)v21, &qword_26B1F7D38);
  return v14;
}

void *sub_24F7F73F8(uint64_t a1, uint64_t a2)
{
  Swift::Bool v5 = Database.tableExists(_:)(*(Swift::String *)&a1);
  if (!v6)
  {
    if (!v5)
    {
      uint64_t v12 = Database.columns(in:)(a1, a2);
      uint64_t v2 = sub_24F7EEE74(v12);
      swift_bridgeObjectRelease();
      return (void *)v2;
    }
    Database.primaryKey(_:)(&v14, a1);
    uint64_t v2 = v14;
    uint64_t v8 = v15;
    if (!v16)
    {
      sub_24F781274((uint64_t *)&unk_26B1F7C88);
      uint64_t v13 = sub_24F76BAD0();
      *(_OWORD *)(v13 + 16) = xmmword_24F8DDBF0;
      *(void *)(v13 + 32) = v2;
      *(void *)(v13 + 40) = v8;
      return (void *)v13;
    }
    if (v16 == 1)
    {
      if ((v15 & 1) == 0) {
        return (void *)v2;
      }
      uint64_t v9 = sub_24F77F5DC();
      unsigned __int8 v11 = 1;
    }
    else
    {
      uint64_t v9 = sub_24F77F5DC();
      unsigned __int8 v11 = 2;
    }
    sub_24F790830(v9, v10, v11);
    return &unk_270105A70;
  }
  return (void *)v2;
}

uint64_t ColumnInfo.name.getter()
{
  return sub_24F76B8E8();
}

uint64_t ColumnInfo.type.getter()
{
  return sub_24F76B8E8();
}

uint64_t ColumnInfo.isNotNull.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t ColumnInfo.defaultValueSQL.getter()
{
  return sub_24F76B8E8();
}

uint64_t ColumnInfo.primaryKeyIndex.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t ColumnInfo.init(row:)@<X0>(uint64_t a1@<X8>)
{
  sub_24F77B274();
  uint64_t v3 = v2;
  sub_24F767950();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_24F767950();
  uint64_t v21 = v9;
  uint64_t v22 = v8;
  sub_24F77B168();
  char v20 = v10;
  unsigned __int8 v11 = sub_24F7F76FC(0x6C61765F746C6664);
  uint64_t v13 = v12;
  sub_24F77B274();
  uint64_t v15 = v14;
  char v16 = sub_24F7F77D0(0x6E6564646968);
  char v18 = v17;
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v16;
  *(unsigned char *)(a1 + 16) = v18 & 1;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v22;
  *(void *)(a1 + 48) = v21;
  *(unsigned char *)(a1 + 56) = v20 & 1;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v15;
  return result;
}

const unsigned __int8 *sub_24F7F76FC(uint64_t a1)
{
  uint64_t v2 = sub_24F77C6F8(a1);
  uint64_t v4 = v3(v2);
  uint64_t result = 0;
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = *(sqlite3_stmt **)(v1 + 64);
    if (!v7) {
      return (const unsigned __int8 *)sub_24F7F03DC(v4);
    }
    if (v4 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v4 <= 0x7FFFFFFF)
    {
      if (sqlite3_column_type(*(sqlite3_stmt **)(v1 + 64), v4) == 5) {
        return 0;
      }
      uint64_t result = sqlite3_column_text(v7, v4);
      if (result) {
        return (const unsigned __int8 *)sub_24F8CEEE0();
      }
LABEL_13:
      __break(1u);
      return result;
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

void *sub_24F7F77D0(uint64_t a1)
{
  uint64_t v2 = sub_24F77C6F8(a1);
  uint64_t v4 = v3(v2);
  uint64_t v5 = v4;
  if (v6) {
    return (void *)v5;
  }
  uint64_t v7 = *(sqlite3_stmt **)(v1 + 64);
  if (!v7) {
    return sub_24F7F047C(v4);
  }
  if (v4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v4 <= 0x7FFFFFFF)
  {
    if (sqlite3_column_type(*(sqlite3_stmt **)(v1 + 64), v4) == 5) {
      return 0;
    }
    else {
      return (void *)sqlite3_column_int64(v7, v5);
    }
  }
  __break(1u);
  uint64_t result = (void *)sub_24F7FF344();
  __break(1u);
  return result;
}

uint64_t IndexInfo.name.getter()
{
  return sub_24F76B8E8();
}

uint64_t IndexInfo.columns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IndexInfo.isUnique.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ForeignKeyViolation.originTable.getter()
{
  return sub_24F76B8E8();
}

uint64_t ForeignKeyViolation.originTable.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ForeignKeyViolation.originTable.modify())(void)
{
  return nullsub_1;
}

uint64_t ForeignKeyViolation.originRowID.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ForeignKeyViolation.originRowID.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ForeignKeyViolation.originRowID.modify())(void)
{
  return nullsub_1;
}

uint64_t ForeignKeyViolation.destinationTable.getter()
{
  return sub_24F76B8E8();
}

uint64_t ForeignKeyViolation.destinationTable.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ForeignKeyViolation.destinationTable.modify())(void)
{
  return nullsub_1;
}

uint64_t ForeignKeyViolation.foreignKeyId.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t ForeignKeyViolation.foreignKeyId.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*ForeignKeyViolation.foreignKeyId.modify())(void)
{
  return nullsub_1;
}

uint64_t ForeignKeyViolation.init(row:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(uint64_t *)(a1 + 72) <= 0) {
    goto LABEL_26;
  }
  uint64_t v4 = *(sqlite3_stmt **)(a1 + 64);
  if (v4)
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v31 = a1;
    uint64_t v32 = 0;
    if (sqlite3_column_type(v4, 0) == 5)
    {
      sub_24F7D0FBC(v4);
      goto LABEL_33;
    }
    if (!sqlite3_column_text(v4, 0))
    {
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v5 = sub_24F8CEEE0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = sub_24F7EFE90();
    uint64_t v7 = v8;
  }
  uint64_t v9 = *(void *)(a1 + 72);
  if (v9 <= 1)
  {
    LODWORD(v32) = 0;
    uint64_t v29 = 803;
    goto LABEL_28;
  }
  char v10 = *(sqlite3_stmt **)(a1 + 64);
  if (v10)
  {
    unsigned __int8 v11 = (sqlite3_stmt *)sub_24F7760FC();
    sqlite3_int64 v13 = sqlite3_column_type(v11, v12);
    char v14 = v13 == 5;
    if (v13 == 5)
    {
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v22 = (sqlite3_stmt *)sub_24F7760FC();
      sqlite3_int64 v13 = sqlite3_column_int64(v22, v23);
      uint64_t v24 = (void *)v13;
    }
    if ((unint64_t)v9 <= 2) {
      goto LABEL_26;
    }
    MEMORY[0x270FA5388](v13);
    uint64_t v31 = a1;
    uint64_t v32 = 2;
    if (sqlite3_column_type(v10, 2) == 5)
    {
      sub_24F7D0FBC(v10);
      goto LABEL_33;
    }
    if (sqlite3_column_text(v10, 2))
    {
      uint64_t v18 = sub_24F8CEEE0();
      uint64_t v19 = v18;
      uint64_t v21 = v25;
      goto LABEL_18;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v15 = sub_24F7F0520(1);
  if ((unint64_t)v9 <= 2)
  {
LABEL_26:
    LODWORD(v32) = 0;
    uint64_t v29 = 825;
LABEL_28:
    uint64_t v31 = v29;
    sub_24F8CF9D0();
    __break(1u);
    while (1)
    {
LABEL_33:
      swift_unexpectedError();
      __break(1u);
    }
  }
  uint64_t v24 = v15;
  char v17 = v16;
  uint64_t v18 = sub_24F7EFE90();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  char v14 = v17 & 1;
LABEL_18:
  if (*(uint64_t *)(a1 + 72) <= 3) {
    goto LABEL_26;
  }
  uint64_t v26 = *(sqlite3_stmt **)(a1 + 64);
  if (!v26)
  {
    uint64_t v27 = sub_24F7EFEF8();
    uint64_t result = swift_release();
    goto LABEL_23;
  }
  v33[1] = 0;
  v33[2] = v33;
  MEMORY[0x270FA5388](v18);
  uint64_t v31 = a1;
  uint64_t v32 = 3;
  if (sqlite3_column_type(v26, 3) == 5)
  {
    sub_24F7D102C(v26, 3, sub_24F7E9C84, &v30);
    goto LABEL_33;
  }
  uint64_t v27 = sqlite3_column_int64(v26, 3);
  uint64_t result = swift_release();
LABEL_23:
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v24;
  *(unsigned char *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v27;
  return result;
}

unint64_t ForeignKeyViolation.description.getter()
{
  if (*(unsigned char *)(v0 + 24))
  {
    sub_24F8CF7D0();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD000000000000028;
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F7FF2A8();
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v2 = 0;
    sub_24F8CF7D0();
    sub_24F77BC5C();
    sub_24F8CEEB0();
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F7FF2A8();
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8CFAE0();
  }
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ForeignKeyViolation.failureDescription(_:)(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 16);
  v20[0] = *(_OWORD *)v1;
  v20[1] = v4;
  v20[2] = *(_OWORD *)(v1 + 32);
  uint64_t v21 = *(void *)(v1 + 48);
  uint64_t v5 = v4;
  char v6 = BYTE8(v4);
  swift_retain();
  sub_24F7FDC38((uint64_t)v20);
  uint64_t result = sub_24F7EF830(v5, v6, a1, (uint64_t)v20);
  if (v2) {
    return result;
  }
  uint64_t v8 = result;
  uint64_t v9 = Database.foreignKeys(on:)(*(uint64_t *)&v20[0], *((uint64_t *)&v20[0] + 1));
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = v21;
    uint64_t v12 = v9 + 56;
    while (*(void *)(v12 - 24) != v21)
    {
      v12 += 32;
      if (!--v10) {
        goto LABEL_8;
      }
    }
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v18 = *(void *)(v12 - 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v13)
    {
      unint64_t v19 = 0;
      sub_24F8CF7D0();
      sub_24F77BC5C();
      sub_24F8CEEB0();
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      sub_24F7FDC70(v11, v18, v13);
      uint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v15 = sub_24F7A53EC(v14);
      swift_bridgeObjectRelease();
      sub_24F7FDCB4(v11, v18, v13);
      uint64_t v22 = v15;
      sub_24F781274(&qword_26B1F7F48);
      sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
      sub_24F8CED30();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v17 = sub_24F7A5314(v16);
      swift_bridgeObjectRelease();
      sub_24F7FDCB4(v11, v18, v13);
      uint64_t v22 = v17;
      sub_24F8CED30();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      goto LABEL_12;
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  unint64_t v19 = 0xD000000000000028;
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
LABEL_12:
  if (v8)
  {
    swift_retain();
    Row.description.getter();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else if ((v6 & 1) == 0)
  {
    uint64_t v22 = v5;
    sub_24F8CFAE0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_24F7F8460@<X0>(void *a1@<X3>, void *a2@<X8>)
{
  type metadata accessor for Row();
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  strcpy((char *)v8, "SELECT * FROM ");
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  sub_24F8CFAE0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v11 = MEMORY[0x263F8EE80];
  static Row.fetchOne(_:sql:arguments:adapter:)();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24F7783C0((uint64_t)v8, &qword_26B1F7F10);
  if (v2) {
    *a1 = v2;
  }
  else {
    *a2 = v6;
  }
  return result;
}

uint64_t ForeignKeyInfo.originColumns.getter()
{
  return sub_24F7F8658((uint64_t (*)(uint64_t, uint64_t *))sub_24F7A53EC);
}

uint64_t ForeignKeyInfo.destinationColumns.getter()
{
  return sub_24F7F8658((uint64_t (*)(uint64_t, uint64_t *))sub_24F7A5314);
}

uint64_t sub_24F7F8658(uint64_t (*a1)(uint64_t, uint64_t *))
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = a1(v2, &v5);
  swift_bridgeObjectRelease();
  return v3;
}

BOOL PrimaryKeyInfo.isRowID.getter()
{
  return *(unsigned char *)(v0 + 16) != 1;
}

uint64_t sub_24F7F86CC()
{
  uint64_t v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 16))
  {
    if (*(unsigned char *)(v0 + 16) == 1)
    {
      if (*(void *)(v0 + 8))
      {
        return 0x6469776F72;
      }
      else if (*(void *)(v1 + 16) == 1)
      {
        uint64_t v2 = *(void *)(v1 + 32);
        swift_bridgeObjectRetain();
        return v2;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      sub_24F790830(*(void *)v0, *(void *)(v0 + 8), 2u);
      return 0x6469776F72;
    }
  }
  else
  {
    sub_24F7903D0(*(void *)v0, *(void *)(v0 + 8), 0);
  }
  return v1;
}

uint64_t ForeignKeyInfo.id.getter()
{
  return *(void *)v0;
}

uint64_t ForeignKeyInfo.id.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ForeignKeyInfo.id.modify())(void)
{
  return nullsub_1;
}

uint64_t ForeignKeyInfo.destinationTable.getter()
{
  return sub_24F76B8E8();
}

uint64_t ForeignKeyInfo.mapping.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F7F87E8()
{
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    sub_24F8CFF50();
    swift_bridgeObjectRetain();
    sub_24F77F5DC();
    sub_24F8CEE50();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24F8CFF50();
  }
  if (!*(void *)(v0 + 56)) {
    return sub_24F8CFF50();
  }
  sub_24F8CFF50();
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F7F88F0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_24F8CFD00(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_24F8CFD00(), uint64_t result = 0, (v8 & 1) != 0))
    {
      uint64_t v9 = a1[5];
      uint64_t v10 = a2[5];
      if (v9)
      {
        if (!v10) {
          return 0;
        }
        if (a1[4] != a2[4] || v9 != v10)
        {
          char v12 = sub_24F8CFD00();
          uint64_t result = 0;
          if ((v12 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v10)
      {
        return 0;
      }
      uint64_t v13 = a1[7];
      uint64_t v14 = a2[7];
      if (v13)
      {
        if (v14)
        {
          BOOL v15 = a1[6] == a2[6] && v13 == v14;
          if (v15 || (sub_24F8CFD00() & 1) != 0) {
            return 1;
          }
        }
      }
      else if (!v14)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_24F7F89E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_24F8CFD00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_24F8CFD00() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x656D616E5F6C6274 && a2 == 0xE800000000000000;
      if (v7 || (sub_24F8CFD00() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 7106931 && a2 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_24F8CFD00();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_24F7F8B70()
{
  return 4;
}

uint64_t sub_24F7F8B78(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x656D616E5F6C6274;
      break;
    case 3:
      uint64_t result = 7106931;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F7F8BF0()
{
  return sub_24F7F8B78(*v0);
}

uint64_t sub_24F7F8BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F7F89E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F7F8C20()
{
  return sub_24F781364();
}

uint64_t sub_24F7F8C40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F7F8B70();
  *a1 = result;
  return result;
}

uint64_t sub_24F7F8C68(uint64_t a1)
{
  unint64_t v2 = sub_24F7FEB30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F7F8CA4(uint64_t a1)
{
  unint64_t v2 = sub_24F7FEB30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F7F8CE0(void *a1)
{
  uint64_t v3 = sub_24F781274(&qword_269A2B358);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24F7811D0(a1, a1[3]);
  sub_24F7FEB30();
  sub_24F8CFFD0();
  v8[15] = 0;
  sub_24F8CFAA0();
  if (!v1)
  {
    v8[14] = 1;
    sub_24F8CFAA0();
    v8[13] = 2;
    sub_24F8CFA90();
    v8[12] = 3;
    sub_24F8CFA90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24F7F8E90()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F7F8ED0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_24F781274(&qword_26B1F7978);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F7811D0(a1, a1[3]);
  sub_24F7FEB30();
  sub_24F8CFFB0();
  if (v2)
  {
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v34 = 0;
    uint64_t v9 = sub_24F8CFA70();
    uint64_t v11 = v10;
    uint64_t v30 = v9;
    char v33 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_24F8CFA70();
    uint64_t v14 = v13;
    uint64_t v27 = v12;
    uint64_t v28 = a2;
    char v32 = 2;
    swift_bridgeObjectRetain();
    uint64_t v29 = v14;
    uint64_t v15 = sub_24F8CFA60();
    uint64_t v17 = v16;
    uint64_t v26 = v15;
    char v31 = 3;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_24F8CFA60();
    uint64_t v20 = v19;
    uint64_t v21 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v29;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v24 = v28;
    *uint64_t v28 = v30;
    v24[1] = v11;
    v24[2] = v27;
    v24[3] = v22;
    v24[4] = v26;
    v24[5] = v17;
    v24[6] = v21;
    v24[7] = v20;
  }
  return result;
}

double sub_24F7F920C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_24F7F8ED0(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_24F7F9250(void *a1)
{
  return sub_24F7F8CE0(a1);
}

uint64_t sub_24F7F928C()
{
  return sub_24F7F8E90();
}

uint64_t sub_24F7F92C8()
{
  return sub_24F7F87E8();
}

uint64_t sub_24F7F9304()
{
  return sub_24F8CFF80();
}

double sub_24F7F9354@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for RowDecoder();
  swift_initStackObject();
  sub_24F7FA288(a1, &v8);
  swift_release();
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  *(_OWORD *)a2 = v8;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  double result = *(double *)&v11;
  long long v7 = v12;
  *(_OWORD *)(a2 + 32) = v11;
  *(_OWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_24F7F93F4(__n128 *a1)
{
  sub_24F7FF364(a1);
  long long v2 = v1[1];
  v6[0] = *v1;
  v6[1] = v2;
  long long v3 = v1[3];
  void v6[2] = v1[2];
  v6[3] = v3;
  return sub_24F7F88F0(v5, v6) & 1;
}

uint64_t sub_24F7F9434(void *a1, void *a2)
{
  return sub_24F7F93F0(*a1, *a2);
}

uint64_t sub_24F7F9440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F7F9458(a1, a2);
}

uint64_t sub_24F7F9458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  type metadata accessor for StatementArgumentsSink();
  swift_allocObject();
  swift_retain();
  uint64_t v7 = sub_24F778A30(0);
  unint64_t v8 = MEMORY[0x263F8EE78];
  sub_24F778B08();
  type metadata accessor for SQLGenerationContext();
  swift_allocObject();
  uint64_t v9 = sub_24F779224(a1, v7, v8);
  swift_retain();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_24F76BCC0(v10, (uint64_t)v9);
  if (v3)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v21[0] = v11;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
  uint64_t v12 = sub_24F8CED30();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v15 = *(unsigned __int8 *)(v4 + 48);
  if (v15 == 2)
  {
    uint64_t v16 = sub_24F87F808(v12, v14, 0);
  }
  else if (v15)
  {
    uint64_t v16 = sub_24F772E94(v12, v14);
  }
  else
  {
    uint64_t v16 = Database.cachedStatement(sql:)(v12, v14);
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_24F778A9C(v21);
  v22[0] = v21[0];
  v22[1] = v21[1];
  v18.values._rawValue = v22;
  Statement.setArguments(_:)(v18);
  if (v19)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7786CC(v4, (uint64_t)v21);
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(void *)(a2 + 56) = 0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(void *)a2 = v17;
  sub_24F7AC1D0((uint64_t)v21, a2 + 8);
  sub_24F787238(*(void *)(a2 + 48));
  uint64_t result = swift_release();
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_24F7F96D4(uint64_t a1, uint64_t a2)
{
  sub_24F7F9458(a1, (uint64_t)&v10);
  if (v2) {
    return a2;
  }
  uint64_t v4 = v12;
  if (!v12)
  {
    sub_24F78C440(0);
    sub_24F787238(0);
    sub_24F7786CC((uint64_t)&v11, (uint64_t)v9);
    sub_24F781274(&qword_26B1F5560);
    swift_allocObject();
    uint64_t v5 = swift_retain_n();
    a2 = sub_24F7FA104(v5, 0, 0, (uint64_t)v9);
    sub_24F7AD1E4((uint64_t)&v10);
    swift_release();
    return a2;
  }
  uint64_t v7 = v13;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v7;
  sub_24F78C440(v4);
  uint64_t result = sub_24F787238((uint64_t)sub_24F7CC5C0);
  __break(1u);
  return result;
}

uint64_t sub_24F7F97F4(uint64_t a1, uint64_t a2)
{
  sub_24F7F9458(&v42, a1, 0);
  if (v2) {
    return a2;
  }
  uint64_t v5 = v44;
  if (!v44)
  {
    sub_24F7786CC((uint64_t)v43, (uint64_t)v41);
    sub_24F781274(&qword_26B1F7638);
    swift_allocObject();
    uint64_t v7 = swift_retain_n();
    uint64_t v10 = sub_24F7FA104(v7, 0, 0, (uint64_t)v41);
    uint64_t v45 = MEMORY[0x263F8EE78];
    swift_beginAccess();
    if (*(unsigned char *)(v10 + 24) == 1)
    {
      swift_release();
      a2 = MEMORY[0x263F8EE78];
    }
    else
    {
      swift_retain();
      uint64_t v31 = swift_retain();
      sub_24F8999A8(v31, v10, &v45);
      swift_release();
      *(unsigned char *)(v10 + 24) = 1;
      swift_release();
      a2 = v45;
    }
    sub_24F7AD1E4((uint64_t)&v42);
    swift_release();
    return a2;
  }
  type metadata accessor for Row();
  v41[0] = 0uLL;
  sub_24F78C440((uint64_t)v5);
  uint64_t v6 = swift_retain();
  unint64_t v8 = static Row.fetchAll(_:arguments:adapter:)(v6, v41, (uint64_t)v43);
  swift_release();
  v5(a1, v8);
  if (!(v8 >> 62))
  {
    uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_10;
    }
LABEL_22:
    sub_24F787238((uint64_t)v5);
    a2 = MEMORY[0x263F8EE78];
LABEL_23:
    sub_24F7AD1E4((uint64_t)&v42);
    swift_bridgeObjectRelease();
    return a2;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_24F8CF9E0();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_22;
  }
LABEL_10:
  uint64_t v32 = (uint64_t)v5;
  *(void *)&v41[0] = MEMORY[0x263F8EE78];
  sub_24F795720(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = 0;
    a2 = *(void *)&v41[0];
    unint64_t v33 = v8 & 0xC000000000000001;
    uint64_t v34 = v11;
    unint64_t v35 = v8;
    do
    {
      if (v33) {
        MEMORY[0x253364060](v12, v8);
      }
      else {
        swift_retain();
      }
      sub_24F77B274();
      uint64_t v14 = v13;
      sub_24F767950();
      uint64_t v16 = v15;
      sub_24F767950();
      uint64_t v38 = v18;
      uint64_t v39 = v17;
      uint64_t v40 = v16;
      sub_24F77B168();
      char v20 = v19;
      uint64_t v21 = sub_24F7F76FC(0x6C61765F746C6664);
      uint64_t v23 = v22;
      sub_24F77B274();
      uint64_t v25 = v24;
      uint64_t v37 = sub_24F7F77D0(0x6E6564646968);
      char v36 = v26;
      swift_release();
      *(void *)&v41[0] = a2;
      unint64_t v27 = *(void *)(a2 + 16);
      unint64_t v28 = *(void *)(a2 + 24);
      unint64_t v29 = v27 + 1;
      if (v27 >= v28 >> 1)
      {
        sub_24F795720(v28 > 1, v27 + 1, 1);
        unint64_t v29 = v27 + 1;
        a2 = *(void *)&v41[0];
      }
      ++v12;
      *(void *)(a2 + 16) = v29;
      uint64_t v30 = a2 + 88 * v27;
      *(void *)(v30 + 32) = v14;
      *(void *)(v30 + 40) = v37;
      *(unsigned char *)(v30 + 48) = v36 & 1;
      *(void *)(v30 + 56) = v40;
      *(void *)(v30 + 64) = 0;
      *(void *)(v30 + 72) = v39;
      *(void *)(v30 + 80) = v38;
      *(unsigned char *)(v30 + 88) = v20 & 1;
      *(void *)(v30 + 96) = v21;
      *(void *)(v30 + 104) = v23;
      *(void *)(v30 + 112) = v25;
      unint64_t v8 = v35;
    }
    while (v34 != v12);
    sub_24F787238(v32);
    goto LABEL_23;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_24F7F9CE4(uint64_t a1, uint64_t a2)
{
  sub_24F7F9458(&v17, a1, 0);
  if (v2) {
    return a2;
  }
  uint64_t v5 = v19;
  if (!v19)
  {
    sub_24F7786CC((uint64_t)v18, (uint64_t)v15);
    sub_24F781274(&qword_26B1F76C8);
    swift_allocObject();
    uint64_t v7 = swift_retain_n();
    uint64_t v10 = sub_24F7FA104(v7, 0, 0, (uint64_t)v15);
    uint64_t v16 = MEMORY[0x263F8EE88];
    swift_beginAccess();
    if (*(unsigned char *)(v10 + 24) == 1)
    {
      swift_release();
      a2 = MEMORY[0x263F8EE88];
    }
    else
    {
      swift_retain();
      uint64_t v12 = swift_retain();
      sub_24F8990C8(v12);
      swift_release();
      *(unsigned char *)(v10 + 24) = 1;
      swift_release();
      a2 = v16;
    }
    sub_24F7AD1E4((uint64_t)&v17);
    swift_release();
    return a2;
  }
  type metadata accessor for Row();
  v15[0] = 0uLL;
  sub_24F78C440((uint64_t)v5);
  uint64_t v6 = swift_retain();
  unint64_t v8 = static Row.fetchAll(_:arguments:adapter:)(v6, v15, (uint64_t)v18);
  swift_release();
  v5(a1, v8);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
  sub_24F7FEA90();
  a2 = sub_24F8CF300();
  uint64_t v16 = a2;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_24F787238((uint64_t)v5);
LABEL_23:
    sub_24F7AD1E4((uint64_t)&v17);
    return a2;
  }
  uint64_t v24 = v5;
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        MEMORY[0x253364060](v13, v8);
      }
      else {
        swift_retain();
      }
      type metadata accessor for RowDecoder();
      swift_initStackObject();
      uint64_t v14 = swift_retain();
      sub_24F7FA288(v14, v15);
      swift_release();
      ++v13;
      swift_release();
      long long v20 = v15[0];
      long long v21 = v15[1];
      long long v22 = v15[2];
      long long v23 = v15[3];
      sub_24F8B6950();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    sub_24F787238((uint64_t)v24);
    a2 = v16;
    goto LABEL_23;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_24F7FA104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  sub_24F773688();
  *(unsigned char *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v11;
  type metadata accessor for Row();
  swift_allocObject();
  uint64_t v12 = swift_retain_n();
  sub_24F778494(v12);
  v16[3] = type metadata accessor for Statement();
  v16[4] = (uint64_t)&protocol witness table for Statement;
  v16[0] = v6;
  swift_retain();
  uint64_t v13 = sub_24F77852C(a4);
  swift_release();
  if (v5)
  {
    sub_24F77835C(a2);
    swift_release();
    sub_24F7783C0(a4, &qword_26B1F7F10);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v16);
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v16);
    *(void *)(v7 + 32) = v13;
    v16[0] = a2;
    v16[1] = a3;
    sub_24F77C958(v16, v14);
    swift_release();
    sub_24F7783C0(a4, &qword_26B1F7F10);
    sub_24F77835C(a2);
  }
  return v7;
}

double sub_24F7FA288@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  v10[3] = sub_24F781274(qword_26B1F7808);
  _OWORD v10[4] = sub_24F778988(&qword_26B1F7A18, qword_26B1F7808);
  uint64_t v5 = (void *)sub_24F76BAD0();
  v10[0] = v5;
  uint64_t v6 = MEMORY[0x263F8EE78];
  v5[2] = a1;
  v5[3] = v6;
  v5[4] = 0;
  v5[5] = 0;
  swift_retain();
  sub_24F7F8ED0(v10, (uint64_t *)v11);
  if (!v2)
  {
    long long v8 = v11[1];
    *a2 = v11[0];
    a2[1] = v8;
    double result = *(double *)&v12;
    long long v9 = v13;
    a2[2] = v12;
    a2[3] = v9;
  }
  return result;
}

void sub_24F7FA348()
{
  sub_24F77D7C0();
  uint64_t v2 = sub_24F77F588(v1);
  v3(v2);
  if (v4)
  {
    uint64_t v11 = (void *)sub_24F77AF2C();
    sub_24F77733C(v11);
    sub_24F7D29A4();
    uint64_t v12 = sub_24F770FA4();
    sub_24F782FB8(v12, v13);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_10;
  }
  sub_24F77DAC0();
  if (!v0)
  {
    sub_24F7807E8();
    sub_24F7EFFBC();
    goto LABEL_10;
  }
  sub_24F782AB8();
  if (v5 == v6)
  {
    sub_24F77BCD0();
    if (!(v5 ^ v6 | v7)) {
      goto LABEL_14;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v8);
    if (sub_24F77E820() == 5 || (sqlite3_int64 v9 = sub_24F780354(), v9 != (char)v9))
    {
      uint64_t v10 = sub_24F7814C0();
      sub_24F7D1204(v10);
      sub_24F781D34();
    }
LABEL_10:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24F7FA448()
{
  sub_24F77D7C0();
  uint64_t v2 = sub_24F77F588(v1);
  v3(v2);
  if (v4)
  {
    uint64_t v11 = (void *)sub_24F77AF2C();
    sub_24F77733C(v11);
    sub_24F7D29A4();
    uint64_t v12 = sub_24F770FA4();
    sub_24F782FB8(v12, v13);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_10;
  }
  sub_24F77DAC0();
  if (!v0)
  {
    sub_24F7807E8();
    sub_24F7F001C();
    goto LABEL_10;
  }
  sub_24F782AB8();
  if (v5 == v6)
  {
    sub_24F77BCD0();
    if (!(v5 ^ v6 | v7)) {
      goto LABEL_14;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v8);
    if (sub_24F77E820() == 5 || (sqlite3_int64 v9 = sub_24F780354(), v9 != (__int16)v9))
    {
      uint64_t v10 = sub_24F7814C0();
      sub_24F7D1274(v10);
      sub_24F781D34();
    }
LABEL_10:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24F7FA548()
{
  sub_24F77D7C0();
  uint64_t v2 = sub_24F77F588(v1);
  v3(v2);
  if (v4)
  {
    uint64_t v10 = (void *)sub_24F77AF2C();
    sub_24F77733C(v10);
    sub_24F7D29A4();
    uint64_t v11 = sub_24F770FA4();
    sub_24F782FB8(v11, v12);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_10;
  }
  sub_24F77DAC0();
  if (!v0)
  {
    sub_24F7807E8();
    sub_24F7F007C();
    goto LABEL_10;
  }
  sub_24F782AB8();
  if (v5 == v6)
  {
    sub_24F77BCD0();
    if (!(v5 ^ v6 | v7)) {
      goto LABEL_14;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v8);
    if (sub_24F77E820() == 5 || (sqlite3_int64 v9 = sub_24F780354(), v9 != (int)v9))
    {
      sub_24F7814C0();
      sub_24F7D117C();
      sub_24F781D34();
    }
LABEL_10:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24F7FA648()
{
  sub_24F77D7C0();
  uint64_t v3 = sub_24F77F588(v2);
  v4(v3);
  if (v5)
  {
    uint64_t v11 = (void *)sub_24F77AF2C();
    sub_24F77733C(v11);
    sub_24F7D29A4();
    uint64_t v12 = sub_24F770FA4();
    sub_24F782FB8(v12, v13);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_9;
  }
  sub_24F77DAC0();
  if (!v1)
  {
    sub_24F7807E8();
    sub_24F7F00DC();
    goto LABEL_9;
  }
  sub_24F782AB8();
  if (v6 == v7)
  {
    sub_24F77BCD0();
    if (!(v6 ^ v7 | v8)) {
      goto LABEL_13;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v9);
    if (sub_24F77E820() == 5)
    {
      uint64_t v10 = sub_24F7814C0();
      sub_24F7D110C(v10);
      sub_24F781D34();
    }
    else
    {
      sqlite3_column_int64(v1, v0);
    }
LABEL_9:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

void sub_24F7FA748()
{
  sub_24F77D7C0();
  uint64_t v2 = sub_24F77F588(v1);
  v3(v2);
  if (v4)
  {
    uint64_t v9 = (void *)sub_24F77AF2C();
    sub_24F77733C(v9);
    sub_24F7D29A4();
    uint64_t v10 = sub_24F770FA4();
    sub_24F782FB8(v10, v11);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_12;
  }
  sub_24F77DAC0();
  if (!v0)
  {
    sub_24F7807E8();
    sub_24F7F013C();
    goto LABEL_12;
  }
  sub_24F782AB8();
  if (v5 == v6)
  {
    sub_24F77BCD0();
    if (!(v5 ^ v6 | v7)) {
      goto LABEL_14;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v8);
    if (sub_24F77E820() == 5 || sub_24F780354() < 0)
    {
      uint64_t v12 = sub_24F7814C0();
      sub_24F7D12E4(v12);
      sub_24F781D34();
    }
LABEL_12:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24F7FA844()
{
  sub_24F77D7C0();
  uint64_t v2 = sub_24F77F588(v1);
  v3(v2);
  if (v4)
  {
    uint64_t v10 = (void *)sub_24F77AF2C();
    sub_24F77733C(v10);
    sub_24F7D29A4();
    uint64_t v11 = sub_24F770FA4();
    sub_24F782FB8(v11, v12);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_10;
  }
  sub_24F77DAC0();
  if (!v0)
  {
    sub_24F7807E8();
    sub_24F7F019C();
    goto LABEL_10;
  }
  sub_24F782AB8();
  if (v5 == v6)
  {
    sub_24F77BCD0();
    if (!(v5 ^ v6 | v7)) {
      goto LABEL_14;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v8);
    if (sub_24F77E820() == 5 || (unint64_t)sub_24F780354() >= 0x100)
    {
      uint64_t v9 = sub_24F7814C0();
      sub_24F7D1354(v9);
      sub_24F781D34();
    }
LABEL_10:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24F7FA944()
{
  sub_24F77D7C0();
  uint64_t v2 = sub_24F77F588(v1);
  v3(v2);
  if (v4)
  {
    uint64_t v10 = (void *)sub_24F77AF2C();
    sub_24F77733C(v10);
    sub_24F7D29A4();
    uint64_t v11 = sub_24F770FA4();
    sub_24F782FB8(v11, v12);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_10;
  }
  sub_24F77DAC0();
  if (!v0)
  {
    sub_24F7807E8();
    sub_24F7F01FC();
    goto LABEL_10;
  }
  sub_24F782AB8();
  if (v5 == v6)
  {
    sub_24F77BCD0();
    if (!(v5 ^ v6 | v7)) {
      goto LABEL_14;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v8);
    if (sub_24F77E820() == 5 || (unint64_t)sub_24F780354() >= 0x10000)
    {
      uint64_t v9 = sub_24F7814C0();
      sub_24F7D13C4(v9);
      sub_24F781D34();
    }
LABEL_10:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24F7FAA44()
{
  sub_24F77D7C0();
  uint64_t v2 = sub_24F77F588(v1);
  v3(v2);
  if (v4)
  {
    uint64_t v10 = (void *)sub_24F77AF2C();
    sub_24F77733C(v10);
    sub_24F7D29A4();
    uint64_t v11 = sub_24F770FA4();
    sub_24F782FB8(v11, v12);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_10;
  }
  sub_24F77DAC0();
  if (!v0)
  {
    sub_24F7807E8();
    sub_24F7F025C();
    goto LABEL_10;
  }
  sub_24F782AB8();
  if (v5 == v6)
  {
    sub_24F77BCD0();
    if (!(v5 ^ v6 | v7)) {
      goto LABEL_14;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v8);
    if (sub_24F77E820() == 5 || (unint64_t)sub_24F780354() >> 32)
    {
      uint64_t v9 = sub_24F7814C0();
      sub_24F7D1434(v9);
      sub_24F781D34();
    }
LABEL_10:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24F7FAB44()
{
  sub_24F77D7C0();
  uint64_t v2 = sub_24F77F588(v1);
  v3(v2);
  if (v4)
  {
    uint64_t v9 = (void *)sub_24F77AF2C();
    sub_24F77733C(v9);
    sub_24F7D29A4();
    uint64_t v10 = sub_24F770FA4();
    sub_24F782FB8(v10, v11);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_12;
  }
  sub_24F77DAC0();
  if (!v0)
  {
    sub_24F7807E8();
    sub_24F7F02BC();
    goto LABEL_12;
  }
  sub_24F782AB8();
  if (v5 == v6)
  {
    sub_24F77BCD0();
    if (!(v5 ^ v6 | v7)) {
      goto LABEL_14;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v8);
    if (sub_24F77E820() == 5 || sub_24F780354() < 0)
    {
      uint64_t v12 = sub_24F7814C0();
      sub_24F7D14A4(v12);
      sub_24F781D34();
    }
LABEL_12:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_24F7FAC40()
{
  sub_24F77D7C0();
  uint64_t v3 = sub_24F77F588(v2);
  v4(v3);
  if (v5)
  {
    uint64_t v11 = (void *)sub_24F77AF2C();
    sub_24F77733C(v11);
    sub_24F7D29A4();
    uint64_t v12 = sub_24F770FA4();
    sub_24F782FB8(v12, v13);
    sub_24F773B28();
    sub_24F77EF24();
    sub_24F775C24();
    swift_willThrow();
    goto LABEL_9;
  }
  sub_24F77DAC0();
  if (!v1)
  {
    sub_24F7807E8();
    sub_24F7F031C();
    goto LABEL_9;
  }
  sub_24F782AB8();
  if (v6 == v7)
  {
    sub_24F77BCD0();
    if (!(v6 ^ v7 | v8)) {
      goto LABEL_13;
    }
    sub_24F77B8F8();
    MEMORY[0x270FA5388](v9);
    if (sub_24F77E820() == 5)
    {
      uint64_t v10 = sub_24F7814C0();
      sub_24F7D1514(v10);
      sub_24F781D34();
    }
    else
    {
      sqlite3_column_double(v1, v0);
    }
LABEL_9:
    sub_24F77B584();
    sub_24F77C020();
    return;
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

uint64_t sub_24F7FAD44(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = result;
    if (result)
    {
      type metadata accessor for Row();
      double result = sub_24F8CF120();
      *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = v1;
    }
    else
    {
      return MEMORY[0x263F8EE78];
    }
  }
  return result;
}

uint64_t sub_24F7FADA0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_24F897598();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_24F7FBCE4((unint64_t)v6);
  return sub_24F8CF880();
}

uint64_t sub_24F7FAE1C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_24F7FAEA0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_129;
    }
    if (v3) {
      return (uint64_t)sub_24F7FCDC0(0, (char *)v3, (char *)1, a1);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_128;
  }
  uint64_t v97 = result;
  uint64_t v92 = a1;
  if (v3 > 1)
  {
    uint64_t result = sub_24F8CF120();
    *(void *)(result + 16) = v3 / 2;
    uint64_t v96 = result;
    uint64_t v104 = (char *)(result + 32);
LABEL_9:
    uint64_t v6 = 0;
    uint64_t v7 = *a1;
    uint64_t v95 = *a1 + 176;
    uint64_t v91 = *a1 + 80;
    uint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v98 = (char *)v3;
    while (1)
    {
      uint64_t v8 = v6;
      uint64_t v9 = v6 + 1;
      uint64_t v101 = v6;
      if (v6 + 1 < v3)
      {
        uint64_t v10 = *(void *)(v7 + 88 * v9);
        uint64_t v11 = *(void *)(v7 + 88 * v6);
        uint64_t v9 = v8 + 2;
        if (v8 + 2 < v3)
        {
          uint64_t v12 = (uint64_t *)(v95 + 88 * v8);
          uint64_t v13 = v10;
          while (1)
          {
            uint64_t v15 = *v12;
            v12 += 11;
            uint64_t v14 = v15;
            if (v10 < v11 == v15 >= v13) {
              break;
            }
            ++v9;
            uint64_t v13 = v14;
            if (v9 >= v3)
            {
              uint64_t v9 = v3;
              break;
            }
          }
        }
        if (v10 < v11)
        {
          if (v9 < v8) {
            goto LABEL_130;
          }
          if (v8 < v9)
          {
            uint64_t v93 = v5;
            uint64_t v16 = 88 * v9;
            uint64_t v17 = v9;
            uint64_t v18 = 88 * v8;
            do
            {
              if (v8 != --v9)
              {
                if (!v7) {
                  goto LABEL_135;
                }
                uint64_t v19 = v7 + v16;
                char v20 = *(unsigned char *)(v7 + v18 + 16);
                long long v107 = *(_OWORD *)(v7 + v18 + 24);
                uint64_t v21 = *(void *)(v7 + v18 + 40);
                uint64_t v105 = *(void *)(v7 + v18 + 48);
                char v111 = *(unsigned char *)(v7 + v18 + 56);
                uint64_t v109 = *(void *)(v7 + v18 + 80);
                long long v99 = *(_OWORD *)(v7 + v18);
                long long v102 = *(_OWORD *)(v7 + v18 + 64);
                uint64_t result = (uint64_t)memmove((void *)(v7 + v18), (const void *)(v7 + v16 - 88), 0x58uLL);
                *(_OWORD *)(v19 - 88) = v99;
                *(unsigned char *)(v19 - 72) = v20;
                *(_OWORD *)(v19 - 64) = v107;
                *(void *)(v19 - 48) = v21;
                *(void *)(v19 - 40) = v105;
                *(unsigned char *)(v19 - 32) = v111;
                *(_OWORD *)(v19 - 24) = v102;
                *(void *)(v19 - 8) = v109;
              }
              ++v8;
              v16 -= 88;
              v18 += 88;
            }
            while (v8 < v9);
            uint64_t v5 = v93;
            uint64_t v3 = (uint64_t)v98;
            uint64_t v9 = v17;
            uint64_t v8 = v101;
          }
        }
      }
      if (v9 < v3)
      {
        if (__OFSUB__(v9, v8)) {
          goto LABEL_127;
        }
        if (v9 - v8 < v97)
        {
          if (__OFADD__(v8, v97)) {
            goto LABEL_131;
          }
          if (v8 + v97 >= v3) {
            uint64_t v22 = v3;
          }
          else {
            uint64_t v22 = v8 + v97;
          }
          if (v22 < v8)
          {
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
            return result;
          }
          if (v9 != v22)
          {
            uint64_t v94 = v5;
            long long v23 = (void *)(v91 + 88 * v9);
            uint64_t v100 = v22;
            do
            {
              uint64_t v112 = v9;
              uint64_t v24 = *(void *)(v7 + 88 * v9);
              uint64_t v103 = v23;
              uint64_t v25 = v23;
              do
              {
                if (v24 >= *(v25 - 21)) {
                  break;
                }
                if (!v7) {
                  goto LABEL_133;
                }
                uint64_t v26 = v7;
                uint64_t v108 = *(v25 - 9);
                char v27 = *((unsigned char *)v25 - 64);
                long long v106 = *(_OWORD *)(v25 - 7);
                uint64_t v29 = *(v25 - 5);
                uint64_t v28 = *(v25 - 4);
                char v30 = *((unsigned char *)v25 - 24);
                uint64_t v31 = *v25;
                long long v110 = *((_OWORD *)v25 - 1);
                uint64_t result = (uint64_t)memcpy(v25 - 10, v25 - 21, 0x58uLL);
                *(v25 - 11) = v31;
                v25 -= 11;
                *(v25 - 10) = v24;
                *(v25 - 9) = v108;
                *((unsigned char *)v25 - 64) = v27;
                *(_OWORD *)(v25 - 7) = v106;
                *(v25 - 5) = v29;
                *(v25 - 4) = v28;
                *((unsigned char *)v25 - 24) = v30;
                ++v8;
                *((_OWORD *)v25 - 1) = v110;
                uint64_t v7 = v26;
              }
              while (v112 != v8);
              uint64_t v9 = v112 + 1;
              uint64_t v8 = v101;
              long long v23 = v103 + 11;
            }
            while (v112 + 1 != v100);
            uint64_t v9 = v100;
            uint64_t v5 = v94;
          }
        }
      }
      if (v9 < v8) {
        goto LABEL_122;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
        uint64_t v5 = result;
      }
      unint64_t v33 = *(void *)(v5 + 16);
      unint64_t v32 = *(void *)(v5 + 24);
      unint64_t v34 = v33 + 1;
      if (v33 >= v32 >> 1)
      {
        uint64_t result = (uint64_t)sub_24F897440((char *)(v32 > 1), v33 + 1, 1, (char *)v5);
        uint64_t v5 = result;
      }
      *(void *)(v5 + 16) = v34;
      uint64_t v35 = v5 + 32;
      char v36 = (uint64_t *)(v5 + 32 + 16 * v33);
      *char v36 = v101;
      v36[1] = v9;
      uint64_t v113 = v9;
      if (v33)
      {
        while (1)
        {
          unint64_t v37 = v34 - 1;
          if (v34 >= 4)
          {
            unint64_t v42 = v35 + 16 * v34;
            uint64_t v43 = *(void *)(v42 - 64);
            uint64_t v44 = *(void *)(v42 - 56);
            BOOL v48 = __OFSUB__(v44, v43);
            uint64_t v45 = v44 - v43;
            if (v48) {
              goto LABEL_111;
            }
            uint64_t v47 = *(void *)(v42 - 48);
            uint64_t v46 = *(void *)(v42 - 40);
            BOOL v48 = __OFSUB__(v46, v47);
            uint64_t v40 = v46 - v47;
            char v41 = v48;
            if (v48) {
              goto LABEL_112;
            }
            unint64_t v49 = v34 - 2;
            uint64_t v50 = (uint64_t *)(v35 + 16 * (v34 - 2));
            uint64_t v52 = *v50;
            uint64_t v51 = v50[1];
            BOOL v48 = __OFSUB__(v51, v52);
            uint64_t v53 = v51 - v52;
            if (v48) {
              goto LABEL_113;
            }
            BOOL v48 = __OFADD__(v40, v53);
            uint64_t v54 = v40 + v53;
            if (v48) {
              goto LABEL_115;
            }
            if (v54 >= v45)
            {
              uint64_t v72 = (uint64_t *)(v35 + 16 * v37);
              uint64_t v74 = *v72;
              uint64_t v73 = v72[1];
              BOOL v48 = __OFSUB__(v73, v74);
              uint64_t v75 = v73 - v74;
              if (v48) {
                goto LABEL_121;
              }
              BOOL v65 = v40 < v75;
              goto LABEL_78;
            }
          }
          else
          {
            if (v34 != 3)
            {
              uint64_t v66 = *(void *)(v5 + 32);
              uint64_t v67 = *(void *)(v5 + 40);
              BOOL v48 = __OFSUB__(v67, v66);
              uint64_t v59 = v67 - v66;
              char v60 = v48;
              goto LABEL_72;
            }
            uint64_t v39 = *(void *)(v5 + 32);
            uint64_t v38 = *(void *)(v5 + 40);
            BOOL v48 = __OFSUB__(v38, v39);
            uint64_t v40 = v38 - v39;
            char v41 = v48;
          }
          if (v41) {
            goto LABEL_114;
          }
          unint64_t v49 = v34 - 2;
          uint64_t v55 = (uint64_t *)(v35 + 16 * (v34 - 2));
          uint64_t v57 = *v55;
          uint64_t v56 = v55[1];
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v59 = v56 - v57;
          char v60 = v58;
          if (v58) {
            goto LABEL_116;
          }
          uint64_t v61 = (uint64_t *)(v35 + 16 * v37);
          uint64_t v63 = *v61;
          uint64_t v62 = v61[1];
          BOOL v48 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          if (v48) {
            goto LABEL_118;
          }
          if (__OFADD__(v59, v64)) {
            goto LABEL_120;
          }
          if (v59 + v64 >= v40)
          {
            BOOL v65 = v40 < v64;
LABEL_78:
            if (v65) {
              unint64_t v37 = v49;
            }
            goto LABEL_80;
          }
LABEL_72:
          if (v60) {
            goto LABEL_117;
          }
          uint64_t v68 = (uint64_t *)(v35 + 16 * v37);
          uint64_t v70 = *v68;
          uint64_t v69 = v68[1];
          BOOL v48 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          if (v48) {
            goto LABEL_119;
          }
          if (v71 < v59) {
            goto LABEL_89;
          }
LABEL_80:
          uint64_t v76 = v5;
          unint64_t v77 = v37 - 1;
          if (v37 - 1 >= v34)
          {
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
            goto LABEL_132;
          }
          if (!v7) {
            goto LABEL_134;
          }
          uint64_t v78 = (uint64_t *)(v35 + 16 * v77);
          uint64_t v79 = *v78;
          uint64_t v80 = (void *)(v35 + 16 * v37);
          uint64_t v81 = v80[1];
          uint64_t result = sub_24F7FD36C((char *)(v7 + 88 * *v78), (char *)(v7 + 88 * *v80), v7 + 88 * v81, v104);
          if (v1)
          {
LABEL_104:
            swift_bridgeObjectRelease();
            *(void *)(v96 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v81 < v79) {
            goto LABEL_108;
          }
          if (v37 > *(void *)(v76 + 16)) {
            goto LABEL_109;
          }
          *uint64_t v78 = v79;
          *(void *)(v35 + 16 * v77 + 8) = v81;
          unint64_t v82 = *(void *)(v76 + 16);
          if (v37 >= v82) {
            goto LABEL_110;
          }
          uint64_t v5 = v76;
          unint64_t v34 = v82 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v35 + 16 * v37), v80 + 2, 16 * (v82 - 1 - v37));
          *(void *)(v76 + 16) = v82 - 1;
          if (v82 <= 2) {
            goto LABEL_89;
          }
        }
      }
      unint64_t v34 = 1;
LABEL_89:
      uint64_t v3 = (uint64_t)v98;
      uint64_t v6 = v113;
      if (v113 >= (uint64_t)v98) {
        goto LABEL_92;
      }
    }
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v104 = (char *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v96 = MEMORY[0x263F8EE78];
  if (v3 == 1) {
    goto LABEL_9;
  }
  unint64_t v34 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_92:
  if (v34 >= 2)
  {
    uint64_t v83 = *v92;
    do
    {
      unint64_t v84 = v34 - 2;
      if (v34 < 2) {
        goto LABEL_123;
      }
      if (!v83) {
        goto LABEL_136;
      }
      uint64_t v85 = v5;
      uint64_t v86 = v5 + 32;
      uint64_t v87 = *(void *)(v5 + 32 + 16 * v84);
      uint64_t v88 = *(void *)(v86 + 16 * (v34 - 1) + 8);
      uint64_t result = sub_24F7FD36C((char *)(v83 + 88 * v87), (char *)(v83 + 88 * *(void *)(v86 + 16 * (v34 - 1))), v83 + 88 * v88, v104);
      if (v1) {
        goto LABEL_104;
      }
      if (v88 < v87) {
        goto LABEL_124;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897538();
        uint64_t v85 = result;
      }
      if (v84 >= *(void *)(v85 + 16)) {
        goto LABEL_125;
      }
      unint64_t v89 = (void *)(v85 + 32 + 16 * v84);
      *unint64_t v89 = v87;
      v89[1] = v88;
      unint64_t v90 = *(void *)(v85 + 16);
      if (v34 > v90) {
        goto LABEL_126;
      }
      uint64_t v5 = v85;
      uint64_t result = (uint64_t)memmove((void *)(v85 + 32 + 16 * (v34 - 1)), (const void *)(v85 + 32 + 16 * v34), 16 * (v90 - v34));
      *(void *)(v85 + 16) = v90 - 1;
      unint64_t v34 = v90 - 1;
    }
    while (v90 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v96 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F7FB5C4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_130;
    }
    if (v3) {
      return (uint64_t)sub_24F7FCEE4(0, (char *)v3, (char *)1, a1);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_129;
  }
  uint64_t v97 = result;
  uint64_t v94 = a1;
  if (v3 > 1)
  {
    uint64_t result = sub_24F8CF120();
    *(void *)(result + 16) = v3 / 2;
    uint64_t v96 = result;
    uint64_t v105 = (char *)(result + 32);
LABEL_10:
    uint64_t v6 = 0;
    uint64_t v7 = *a1;
    uint64_t v95 = *a1 + 256;
    uint64_t v93 = *a1 + 64;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v98 = (char *)v3;
    uint64_t v112 = *a1;
    while (1)
    {
      uint64_t v9 = v6++;
      uint64_t v104 = v9;
      if (v6 < v3)
      {
        uint64_t v10 = *(void *)(v7 + 88 * v6 + 80);
        uint64_t v11 = *(void *)(v7 + 88 * v9 + 80);
        uint64_t v6 = v9 + 2;
        if (v9 + 2 < v3)
        {
          uint64_t v12 = (uint64_t *)(v95 + 88 * v9);
          uint64_t v13 = v10;
          while (1)
          {
            uint64_t v15 = *v12;
            v12 += 11;
            uint64_t v14 = v15;
            if (v10 < v11 == v15 >= v13) {
              break;
            }
            ++v6;
            uint64_t v13 = v14;
            if (v6 >= v3)
            {
              uint64_t v6 = v3;
              break;
            }
          }
        }
        if (v10 < v11)
        {
          if (v6 < v9) {
            goto LABEL_131;
          }
          if (v9 < v6)
          {
            uint64_t v16 = v8;
            uint64_t v17 = 88 * v6;
            uint64_t v18 = v9;
            uint64_t v19 = v6;
            uint64_t v20 = v18;
            uint64_t v21 = 88 * v18;
            do
            {
              if (v20 != --v19)
              {
                if (!v7) {
                  goto LABEL_136;
                }
                uint64_t v22 = v7 + v17;
                char v23 = *(unsigned char *)(v7 + v21 + 16);
                long long v108 = *(_OWORD *)(v7 + v21 + 24);
                uint64_t v24 = *(void *)(v7 + v21 + 40);
                uint64_t v106 = *(void *)(v7 + v21 + 48);
                char v102 = *(unsigned char *)(v7 + v21 + 56);
                uint64_t v110 = *(void *)(v7 + v21 + 80);
                long long v99 = *(_OWORD *)(v7 + v21);
                long long v100 = *(_OWORD *)(v7 + v21 + 64);
                uint64_t result = (uint64_t)memmove((void *)(v7 + v21), (const void *)(v7 + v17 - 88), 0x58uLL);
                uint64_t v7 = v112;
                *(_OWORD *)(v22 - 88) = v99;
                *(unsigned char *)(v22 - 72) = v23;
                *(_OWORD *)(v22 - 64) = v108;
                *(void *)(v22 - 48) = v24;
                *(void *)(v22 - 40) = v106;
                *(unsigned char *)(v22 - 32) = v102;
                *(_OWORD *)(v22 - 24) = v100;
                *(void *)(v22 - 8) = v110;
              }
              ++v20;
              v17 -= 88;
              v21 += 88;
            }
            while (v20 < v19);
            uint64_t v8 = v16;
            uint64_t v3 = (uint64_t)v98;
            uint64_t v9 = v104;
          }
        }
      }
      if (v6 < v3)
      {
        if (__OFSUB__(v6, v9)) {
          goto LABEL_128;
        }
        if (v6 - v9 < v97)
        {
          if (__OFADD__(v9, v97)) {
            goto LABEL_132;
          }
          if (v9 + v97 >= v3) {
            uint64_t v25 = v3;
          }
          else {
            uint64_t v25 = v9 + v97;
          }
          if (v25 < v9)
          {
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
            return result;
          }
          if (v6 != v25)
          {
            uint64_t v101 = v8;
            uint64_t v26 = v93 + 88 * v6;
            uint64_t v103 = v25;
            do
            {
              uint64_t v27 = *(void *)(v7 + 88 * v6 + 80);
              uint64_t v28 = v9;
              uint64_t v29 = v26;
              do
              {
                if (v27 >= *(void *)(v29 - 72)) {
                  break;
                }
                if (!v7) {
                  goto LABEL_134;
                }
                char v30 = *(unsigned char *)(v29 - 48);
                long long v111 = *(_OWORD *)(v29 - 40);
                uint64_t v32 = *(void *)(v29 - 24);
                uint64_t v31 = *(void *)(v29 - 16);
                char v33 = *(unsigned char *)(v29 - 8);
                long long v107 = *(_OWORD *)v29;
                long long v109 = *(_OWORD *)(v29 - 64);
                uint64_t result = (uint64_t)memcpy((void *)(v29 - 64), (const void *)(v29 - 152), 0x58uLL);
                *(_OWORD *)(v29 - 88) = v107;
                v29 -= 88;
                *(_OWORD *)(v29 - 64) = v109;
                *(unsigned char *)(v29 - 48) = v30;
                *(_OWORD *)(v29 - 40) = v111;
                *(void *)(v29 - 24) = v32;
                *(void *)(v29 - 16) = v31;
                *(unsigned char *)(v29 - 8) = v33;
                ++v28;
                *(void *)(v29 + 16) = v27;
                uint64_t v7 = v112;
              }
              while (v6 != v28);
              ++v6;
              v26 += 88;
              uint64_t v9 = v104;
            }
            while (v6 != v103);
            uint64_t v6 = v103;
            uint64_t v8 = v101;
          }
        }
      }
      if (v6 < v9) {
        goto LABEL_123;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      unint64_t v35 = *(void *)(v8 + 16);
      unint64_t v34 = *(void *)(v8 + 24);
      unint64_t v36 = v35 + 1;
      uint64_t v7 = v112;
      if (v35 >= v34 >> 1)
      {
        uint64_t result = (uint64_t)sub_24F897440((char *)(v34 > 1), v35 + 1, 1, (char *)v8);
        uint64_t v7 = v112;
        uint64_t v8 = result;
      }
      *(void *)(v8 + 16) = v36;
      uint64_t v37 = v8 + 32;
      uint64_t v38 = (uint64_t *)(v8 + 32 + 16 * v35);
      *uint64_t v38 = v9;
      v38[1] = v6;
      if (v35)
      {
        while (1)
        {
          unint64_t v39 = v36 - 1;
          if (v36 >= 4)
          {
            unint64_t v44 = v37 + 16 * v36;
            uint64_t v45 = *(void *)(v44 - 64);
            uint64_t v46 = *(void *)(v44 - 56);
            BOOL v50 = __OFSUB__(v46, v45);
            uint64_t v47 = v46 - v45;
            if (v50) {
              goto LABEL_112;
            }
            uint64_t v49 = *(void *)(v44 - 48);
            uint64_t v48 = *(void *)(v44 - 40);
            BOOL v50 = __OFSUB__(v48, v49);
            uint64_t v42 = v48 - v49;
            char v43 = v50;
            if (v50) {
              goto LABEL_113;
            }
            unint64_t v51 = v36 - 2;
            uint64_t v52 = (uint64_t *)(v37 + 16 * (v36 - 2));
            uint64_t v54 = *v52;
            uint64_t v53 = v52[1];
            BOOL v50 = __OFSUB__(v53, v54);
            uint64_t v55 = v53 - v54;
            if (v50) {
              goto LABEL_114;
            }
            BOOL v50 = __OFADD__(v42, v55);
            uint64_t v56 = v42 + v55;
            if (v50) {
              goto LABEL_116;
            }
            if (v56 >= v47)
            {
              uint64_t v74 = (uint64_t *)(v37 + 16 * v39);
              uint64_t v76 = *v74;
              uint64_t v75 = v74[1];
              BOOL v50 = __OFSUB__(v75, v76);
              uint64_t v77 = v75 - v76;
              if (v50) {
                goto LABEL_122;
              }
              BOOL v67 = v42 < v77;
              goto LABEL_79;
            }
          }
          else
          {
            if (v36 != 3)
            {
              uint64_t v68 = *(void *)(v8 + 32);
              uint64_t v69 = *(void *)(v8 + 40);
              BOOL v50 = __OFSUB__(v69, v68);
              uint64_t v61 = v69 - v68;
              char v62 = v50;
              goto LABEL_73;
            }
            uint64_t v41 = *(void *)(v8 + 32);
            uint64_t v40 = *(void *)(v8 + 40);
            BOOL v50 = __OFSUB__(v40, v41);
            uint64_t v42 = v40 - v41;
            char v43 = v50;
          }
          if (v43) {
            goto LABEL_115;
          }
          unint64_t v51 = v36 - 2;
          uint64_t v57 = (uint64_t *)(v37 + 16 * (v36 - 2));
          uint64_t v59 = *v57;
          uint64_t v58 = v57[1];
          BOOL v60 = __OFSUB__(v58, v59);
          uint64_t v61 = v58 - v59;
          char v62 = v60;
          if (v60) {
            goto LABEL_117;
          }
          uint64_t v63 = (uint64_t *)(v37 + 16 * v39);
          uint64_t v65 = *v63;
          uint64_t v64 = v63[1];
          BOOL v50 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          if (v50) {
            goto LABEL_119;
          }
          if (__OFADD__(v61, v66)) {
            goto LABEL_121;
          }
          if (v61 + v66 >= v42)
          {
            BOOL v67 = v42 < v66;
LABEL_79:
            if (v67) {
              unint64_t v39 = v51;
            }
            goto LABEL_81;
          }
LABEL_73:
          if (v62) {
            goto LABEL_118;
          }
          uint64_t v70 = (uint64_t *)(v37 + 16 * v39);
          uint64_t v72 = *v70;
          uint64_t v71 = v70[1];
          BOOL v50 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          if (v50) {
            goto LABEL_120;
          }
          if (v73 < v61) {
            goto LABEL_90;
          }
LABEL_81:
          uint64_t v78 = v8;
          unint64_t v79 = v39 - 1;
          if (v39 - 1 >= v36)
          {
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
            goto LABEL_133;
          }
          if (!v7) {
            goto LABEL_135;
          }
          uint64_t v80 = (uint64_t *)(v37 + 16 * v79);
          uint64_t v81 = *v80;
          unint64_t v82 = (void *)(v37 + 16 * v39);
          uint64_t v83 = v82[1];
          uint64_t result = sub_24F7FD524((char *)(v7 + 88 * *v80), (char *)(v7 + 88 * *v82), v7 + 88 * v83, v105);
          if (v1)
          {
LABEL_105:
            swift_bridgeObjectRelease();
            *(void *)(v96 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v83 < v81) {
            goto LABEL_109;
          }
          if (v39 > *(void *)(v78 + 16)) {
            goto LABEL_110;
          }
          *uint64_t v80 = v81;
          *(void *)(v37 + 16 * v79 + 8) = v83;
          unint64_t v84 = *(void *)(v78 + 16);
          if (v39 >= v84) {
            goto LABEL_111;
          }
          uint64_t v8 = v78;
          unint64_t v36 = v84 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v37 + 16 * v39), v82 + 2, 16 * (v84 - 1 - v39));
          *(void *)(v78 + 16) = v84 - 1;
          uint64_t v7 = v112;
          if (v84 <= 2) {
            goto LABEL_90;
          }
        }
      }
      unint64_t v36 = 1;
LABEL_90:
      uint64_t v3 = (uint64_t)v98;
      if (v6 >= (uint64_t)v98)
      {
        uint64_t v5 = v96;
        goto LABEL_93;
      }
    }
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v105 = (char *)(MEMORY[0x263F8EE78] + 32);
  if (v3 == 1)
  {
    uint64_t v96 = MEMORY[0x263F8EE78];
    goto LABEL_10;
  }
  unint64_t v36 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_93:
  uint64_t v96 = v5;
  if (v36 >= 2)
  {
    uint64_t v85 = *v94;
    do
    {
      unint64_t v86 = v36 - 2;
      if (v36 < 2) {
        goto LABEL_124;
      }
      if (!v85) {
        goto LABEL_137;
      }
      uint64_t v87 = v8;
      uint64_t v88 = v8 + 32;
      uint64_t v89 = *(void *)(v8 + 32 + 16 * v86);
      uint64_t v90 = *(void *)(v88 + 16 * (v36 - 1) + 8);
      uint64_t result = sub_24F7FD524((char *)(v85 + 88 * v89), (char *)(v85 + 88 * *(void *)(v88 + 16 * (v36 - 1))), v85 + 88 * v90, v105);
      if (v1) {
        goto LABEL_105;
      }
      if (v90 < v89) {
        goto LABEL_125;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897538();
        uint64_t v87 = result;
      }
      if (v86 >= *(void *)(v87 + 16)) {
        goto LABEL_126;
      }
      uint64_t v91 = (void *)(v87 + 32 + 16 * v86);
      *uint64_t v91 = v89;
      v91[1] = v90;
      unint64_t v92 = *(void *)(v87 + 16);
      if (v36 > v92) {
        goto LABEL_127;
      }
      uint64_t v8 = v87;
      uint64_t result = (uint64_t)memmove((void *)(v87 + 32 + 16 * (v36 - 1)), (const void *)(v87 + 32 + 16 * v36), 16 * (v92 - v36));
      *(void *)(v87 + 16) = v92 - 1;
      unint64_t v36 = v92 - 1;
    }
    while (v92 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v96 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F7FBCE4(unint64_t a1)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = sub_24F8CFAD0();
  if (result < v4)
  {
    uint64_t v6 = result;
    uint64_t isUniquelyReferenced_nonNull_native = sub_24F7FAD44(v4 / 2);
    uint64_t v103 = v8;
    uint64_t v108 = isUniquelyReferenced_nonNull_native;
    uint64_t v100 = v4;
    uint64_t v96 = (uint64_t *)v3;
    if (v4 <= 0)
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      unint64_t v3 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_115:
      if (v3 >= 2)
      {
        uint64_t v84 = *v96;
        do
        {
          unint64_t v85 = v3 - 2;
          if (v3 < 2) {
            goto LABEL_149;
          }
          if (!v84) {
            goto LABEL_163;
          }
          sqlite3_int64 v86 = *(void *)&v10[16 * v85 + 32];
          sqlite3_int64 v2 = *(void *)&v10[16 * v3 + 24];
          sub_24F7FD6D8((char *)(v84 + 8 * v86), (char *)(v84 + 8 * *(void *)&v10[16 * v3 + 16]), v84 + 8 * v2, v103);
          if (v1) {
            goto LABEL_127;
          }
          if (v2 < v86) {
            goto LABEL_150;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_24F897538();
          }
          if (v85 >= *((void *)v10 + 2)) {
            goto LABEL_151;
          }
          uint64_t v87 = &v10[16 * v85 + 32];
          *(void *)uint64_t v87 = v86;
          *((void *)v87 + 1) = v2;
          unint64_t v88 = *((void *)v10 + 2);
          if (v3 > v88) {
            goto LABEL_152;
          }
          memmove(&v10[16 * v3 + 16], &v10[16 * v3 + 32], 16 * (v88 - v3));
          *((void *)v10 + 2) = v88 - 1;
          unint64_t v3 = v88 - 1;
        }
        while (v88 > 2);
      }
    }
    else
    {
      uint64_t v97 = v6;
      sqlite3_int64 v2 = 0;
      sqlite3_int64 v9 = *(void *)v3;
      uint64_t v95 = *(void *)v3 - 8;
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      sqlite3_int64 v104 = v9;
      while (1)
      {
        sqlite3_int64 v11 = v2++;
        sqlite3_int64 v101 = v11;
        if (v2 >= v4) {
          goto LABEL_32;
        }
        uint64_t v98 = v10;
        uint64_t v12 = *(void *)(v9 + 8 * v2);
        unint64_t v3 = *(void *)(v9 + 8 * v11);
        unint64_t v106 = v3;
        uint64_t v107 = v12;
        swift_retain();
        swift_retain();
        int v13 = sub_24F7F489C(&v107, (uint64_t *)&v106);
        if (v1) {
          break;
        }
        int v14 = v13;
        swift_release();
        uint64_t isUniquelyReferenced_nonNull_native = swift_release();
        sqlite3_int64 v2 = v11 + 2;
        uint64_t v15 = v4;
        sqlite3_int64 v16 = v11;
        sqlite3_int64 v9 = v104;
        if (v11 + 2 >= v15) {
          goto LABEL_20;
        }
        do
        {
          sqlite3_int64 v17 = v9 + 8 * v16;
          unint64_t v18 = *(void *)(v17 + 16);
          if (*(uint64_t *)(v18 + 72) < 1) {
            goto LABEL_164;
          }
          uint64_t v19 = *(void *)(v17 + 8);
          unint64_t v3 = *(void *)(v18 + 64);
          if (v3)
          {
            MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
            sqlite3_int64 v2 = (sqlite3_int64)v91;
            uint64_t v92 = v18;
            uint64_t v93 = 0;
            swift_retain();
            swift_retain();
            if (sqlite3_column_type((sqlite3_stmt *)v3, 0) == 5) {
              goto LABEL_170;
            }
            sqlite3_int64 v20 = sqlite3_column_int64((sqlite3_stmt *)v3, 0);
            sqlite3_int64 v2 = v20;
          }
          else
          {
            swift_retain();
            swift_retain();
            unint64_t v3 = v18;
            sqlite3_int64 v20 = sub_24F7EFEF8();
            sqlite3_int64 v2 = v20;
          }
          if (*(uint64_t *)(v19 + 72) < 1) {
            goto LABEL_164;
          }
          unint64_t v3 = *(void *)(v19 + 64);
          if (v3)
          {
            MEMORY[0x270FA5388](v20);
            uint64_t v92 = v19;
            uint64_t v93 = 0;
            if (sqlite3_column_type((sqlite3_stmt *)v3, 0) == 5)
            {
LABEL_168:
              sub_24F7D102C(v3, 0, sub_24F7FF1AC, v91);
              goto LABEL_169;
            }
            unint64_t v3 = sqlite3_column_int64((sqlite3_stmt *)v3, 0);
            swift_release();
            uint64_t isUniquelyReferenced_nonNull_native = swift_release();
            sqlite3_int64 v11 = v101;
          }
          else
          {
            unint64_t v3 = sub_24F7EFEF8();
            swift_release();
            uint64_t isUniquelyReferenced_nonNull_native = swift_release();
          }
          sqlite3_int64 v9 = v104;
          if (((v14 ^ (v2 >= (uint64_t)v3)) & 1) == 0)
          {
            sqlite3_int64 v2 = v16 + 2;
            if ((v14 & 1) == 0) {
              goto LABEL_31;
            }
            goto LABEL_23;
          }
          uint64_t v21 = v16 + 3;
          ++v16;
        }
        while (v21 < v100);
        sqlite3_int64 v2 = v100;
LABEL_20:
        if ((v14 & 1) == 0)
        {
LABEL_31:
          uint64_t v4 = v100;
          uint64_t v10 = v98;
          goto LABEL_32;
        }
LABEL_23:
        if (v2 < v11) {
          goto LABEL_158;
        }
        if (v11 >= v2) {
          goto LABEL_31;
        }
        uint64_t v22 = (uint64_t *)(v95 + 8 * v2);
        sqlite3_int64 v23 = v2;
        sqlite3_int64 v24 = v11;
        uint64_t v25 = (uint64_t *)(v9 + 8 * v11);
        uint64_t v4 = v100;
        uint64_t v10 = v98;
        do
        {
          if (v24 != --v23)
          {
            if (!v9) {
              goto LABEL_162;
            }
            uint64_t v26 = *v25;
            *uint64_t v25 = *v22;
            *uint64_t v22 = v26;
          }
          ++v24;
          --v22;
          ++v25;
        }
        while (v24 < v23);
LABEL_32:
        if (v2 < v4)
        {
          if (__OFSUB__(v2, v11)) {
            goto LABEL_155;
          }
          if (v2 - v11 < v97)
          {
            if (__OFADD__(v11, v97)) {
              goto LABEL_156;
            }
            if (v11 + v97 >= v4) {
              uint64_t v27 = v4;
            }
            else {
              uint64_t v27 = v11 + v97;
            }
            if (v27 >= v11)
            {
              if (v2 != v27)
              {
                uint64_t v98 = v10;
                sqlite3_int64 v99 = v27;
                uint64_t v28 = (unint64_t *)(v95 + 8 * v2);
                do
                {
                  unint64_t v29 = *(void *)(v9 + 8 * v2);
                  char v102 = v28;
                  do
                  {
                    if (*(uint64_t *)(v29 + 72) < 1) {
                      goto LABEL_164;
                    }
                    unint64_t v30 = *v28;
                    unint64_t v3 = *(void *)(v29 + 64);
                    if (v3)
                    {
                      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
                      uint64_t v92 = v29;
                      uint64_t v93 = 0;
                      swift_retain();
                      swift_retain();
                      if (sqlite3_column_type((sqlite3_stmt *)v3, 0) == 5)
                      {
                        unint64_t v89 = v3;
                        uint64_t v90 = v91;
                        goto LABEL_167;
                      }
                      sqlite3_int64 v31 = sqlite3_column_int64((sqlite3_stmt *)v3, 0);
                      sqlite3_int64 v32 = v31;
                    }
                    else
                    {
                      swift_retain();
                      swift_retain();
                      unint64_t v3 = v29;
                      sqlite3_int64 v31 = sub_24F7EFEF8();
                      if (v1) {
                        goto LABEL_169;
                      }
                      sqlite3_int64 v32 = v31;
                    }
                    if (*(uint64_t *)(v30 + 72) < 1) {
                      goto LABEL_164;
                    }
                    unint64_t v3 = *(void *)(v30 + 64);
                    if (v3)
                    {
                      uint64_t v105 = &v94;
                      MEMORY[0x270FA5388](v31);
                      uint64_t v92 = v30;
                      uint64_t v93 = 0;
                      if (sqlite3_column_type((sqlite3_stmt *)v3, 0) == 5) {
                        goto LABEL_168;
                      }
                      unint64_t v3 = sqlite3_column_int64((sqlite3_stmt *)v3, 0);
                      swift_release();
                      uint64_t isUniquelyReferenced_nonNull_native = swift_release();
                    }
                    else
                    {
                      unint64_t v3 = v30;
                      uint64_t v33 = sub_24F7EFEF8();
                      if (v1) {
                        goto LABEL_169;
                      }
                      unint64_t v3 = v33;
                      swift_release();
                      uint64_t isUniquelyReferenced_nonNull_native = swift_release();
                    }
                    sqlite3_int64 v9 = v104;
                    if (v32 >= (uint64_t)v3) {
                      break;
                    }
                    if (!v104) {
                      goto LABEL_160;
                    }
                    unint64_t v34 = *v28;
                    unint64_t v29 = v28[1];
                    *uint64_t v28 = v29;
                    v28[1] = v34;
                    --v28;
                    ++v11;
                  }
                  while (v2 != v11);
                  ++v2;
                  sqlite3_int64 v11 = v101;
                  uint64_t v28 = v102 + 1;
                }
                while (v2 != v99);
                sqlite3_int64 v2 = v99;
                uint64_t v10 = v98;
              }
              goto LABEL_60;
            }
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            LODWORD(v93) = 0;
            uint64_t v92 = 825;
            sub_24F8CF9D0();
            __break(1u);
            while (1)
            {
LABEL_169:
              swift_unexpectedError();
              __break(1u);
LABEL_170:
              unint64_t v89 = v3;
              uint64_t v90 = (unsigned char *)v2;
LABEL_167:
              sub_24F7D102C(v89, 0, sub_24F7FF1AC, v90);
            }
          }
        }
LABEL_60:
        if (v2 < v11) {
          goto LABEL_153;
        }
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_24F897440(0, *((void *)v10 + 2) + 1, 1, v10);
          uint64_t v10 = (char *)isUniquelyReferenced_nonNull_native;
        }
        unint64_t v36 = *((void *)v10 + 2);
        unint64_t v35 = *((void *)v10 + 3);
        unint64_t v3 = v36 + 1;
        sqlite3_int64 v9 = v104;
        if (v36 >= v35 >> 1)
        {
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_24F897440((char *)(v35 > 1), v36 + 1, 1, v10);
          sqlite3_int64 v9 = v104;
          uint64_t v10 = (char *)isUniquelyReferenced_nonNull_native;
        }
        *((void *)v10 + 2) = v3;
        uint64_t v37 = v10 + 32;
        uint64_t v38 = &v10[16 * v36 + 32];
        *(void *)uint64_t v38 = v11;
        *((void *)v38 + 1) = v2;
        if (v36)
        {
          uint64_t v105 = (uint64_t *)v2;
          while (1)
          {
            unint64_t v39 = v3 - 1;
            if (v3 >= 4)
            {
              unint64_t v44 = &v37[16 * v3];
              uint64_t v45 = *((void *)v44 - 8);
              uint64_t v46 = *((void *)v44 - 7);
              BOOL v50 = __OFSUB__(v46, v45);
              uint64_t v47 = v46 - v45;
              if (v50) {
                goto LABEL_138;
              }
              uint64_t v49 = *((void *)v44 - 6);
              uint64_t v48 = *((void *)v44 - 5);
              BOOL v50 = __OFSUB__(v48, v49);
              uint64_t v42 = v48 - v49;
              char v43 = v50;
              if (v50) {
                goto LABEL_139;
              }
              unint64_t v51 = v3 - 2;
              uint64_t v52 = &v37[16 * v3 - 32];
              uint64_t v54 = *(void *)v52;
              uint64_t v53 = *((void *)v52 + 1);
              BOOL v50 = __OFSUB__(v53, v54);
              uint64_t v55 = v53 - v54;
              if (v50) {
                goto LABEL_141;
              }
              BOOL v50 = __OFADD__(v42, v55);
              uint64_t v56 = v42 + v55;
              if (v50) {
                goto LABEL_144;
              }
              if (v56 >= v47)
              {
                uint64_t v74 = &v37[16 * v39];
                uint64_t v76 = *(void *)v74;
                uint64_t v75 = *((void *)v74 + 1);
                BOOL v50 = __OFSUB__(v75, v76);
                uint64_t v77 = v75 - v76;
                if (v50) {
                  goto LABEL_148;
                }
                BOOL v67 = v42 < v77;
                goto LABEL_98;
              }
            }
            else
            {
              if (v3 != 3)
              {
                uint64_t v68 = *((void *)v10 + 4);
                uint64_t v69 = *((void *)v10 + 5);
                BOOL v50 = __OFSUB__(v69, v68);
                uint64_t v61 = v69 - v68;
                char v62 = v50;
                goto LABEL_92;
              }
              uint64_t v41 = *((void *)v10 + 4);
              uint64_t v40 = *((void *)v10 + 5);
              BOOL v50 = __OFSUB__(v40, v41);
              uint64_t v42 = v40 - v41;
              char v43 = v50;
            }
            if (v43) {
              goto LABEL_140;
            }
            unint64_t v51 = v3 - 2;
            uint64_t v57 = &v37[16 * v3 - 32];
            uint64_t v59 = *(void *)v57;
            uint64_t v58 = *((void *)v57 + 1);
            BOOL v60 = __OFSUB__(v58, v59);
            uint64_t v61 = v58 - v59;
            char v62 = v60;
            if (v60) {
              goto LABEL_143;
            }
            uint64_t v63 = &v37[16 * v39];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v50 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v50) {
              goto LABEL_146;
            }
            if (__OFADD__(v61, v66)) {
              goto LABEL_147;
            }
            if (v61 + v66 >= v42)
            {
              BOOL v67 = v42 < v66;
LABEL_98:
              if (v67) {
                unint64_t v39 = v51;
              }
              goto LABEL_100;
            }
LABEL_92:
            if (v62) {
              goto LABEL_142;
            }
            uint64_t v70 = &v37[16 * v39];
            uint64_t v72 = *(void *)v70;
            uint64_t v71 = *((void *)v70 + 1);
            BOOL v50 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v50) {
              goto LABEL_145;
            }
            if (v73 < v61) {
              goto LABEL_109;
            }
LABEL_100:
            unint64_t v78 = v39 - 1;
            if (v39 - 1 >= v3)
            {
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
              goto LABEL_157;
            }
            if (!v9) {
              goto LABEL_161;
            }
            unint64_t v3 = (unint64_t)&v37[16 * v78];
            sqlite3_int64 v2 = *(void *)v3;
            unint64_t v79 = v37;
            unint64_t v80 = v39;
            uint64_t v81 = &v37[16 * v39];
            sqlite3_int64 v82 = *((void *)v81 + 1);
            sub_24F7FD6D8((char *)(v9 + 8 * *(void *)v3), (char *)(v9 + 8 * *(void *)v81), v9 + 8 * v82, v103);
            if (v1)
            {
LABEL_127:
              swift_bridgeObjectRelease();
              uint64_t v4 = v100;
              goto LABEL_128;
            }
            if (v82 < v2) {
              goto LABEL_135;
            }
            if (v80 > *((void *)v10 + 2)) {
              goto LABEL_136;
            }
            *(void *)unint64_t v3 = v2;
            *(void *)&v79[16 * v78 + 8] = v82;
            unint64_t v83 = *((void *)v10 + 2);
            if (v80 >= v83) {
              goto LABEL_137;
            }
            unint64_t v3 = v83 - 1;
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)memmove(v81, v81 + 16, 16 * (v83 - 1 - v80));
            uint64_t v37 = v79;
            *((void *)v10 + 2) = v83 - 1;
            sqlite3_int64 v9 = v104;
            sqlite3_int64 v2 = (sqlite3_int64)v105;
            if (v83 <= 2) {
              goto LABEL_109;
            }
          }
        }
        unint64_t v3 = 1;
LABEL_109:
        uint64_t v4 = v100;
        if (v2 >= v100) {
          goto LABEL_115;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
LABEL_128:
      if (v4 >= -1) {
        goto LABEL_131;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
    if (v100 < -1) {
      goto LABEL_159;
    }
LABEL_131:
    *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_24F8CF0B0();
    return swift_bridgeObjectRelease();
  }
  if (v4 < 0) {
    goto LABEL_154;
  }
  if (v4) {
    return sub_24F7FCFF4(0, v4, 1, (uint64_t *)v3);
  }
  return result;
}

uint64_t sub_24F7FC738(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_127;
    }
    if (v3) {
      return sub_24F7FD2E4(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_126;
  }
  uint64_t v101 = result;
  uint64_t v105 = v1;
  uint64_t v98 = a1;
  if (v3 > 1)
  {
    sub_24F781274(&qword_26B1F5928);
    uint64_t v5 = sub_24F8CF120();
    *(void *)(v5 + 16) = v3 / 2;
    uint64_t v100 = v5;
    sqlite3_int64 v104 = (char *)(v5 + 32);
LABEL_10:
    uint64_t v7 = 0;
    uint64_t v8 = *a1;
    uint64_t v99 = *a1 + 112;
    uint64_t v97 = *a1 + 16;
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t result = 40;
    uint64_t v102 = v3;
    uint64_t v103 = v8;
    while (1)
    {
      uint64_t v10 = v7++;
      if (v7 < v3)
      {
        uint64_t v11 = *(void *)(v8 + 40 * v7 + 32);
        uint64_t v12 = *(void *)(v8 + 40 * v10 + 32);
        uint64_t v7 = v10 + 2;
        if (v10 + 2 < v3)
        {
          int v13 = (uint64_t *)(v99 + 40 * v10);
          uint64_t v14 = v11;
          while (1)
          {
            uint64_t v16 = *v13;
            v13 += 5;
            uint64_t v15 = v16;
            if (v11 < v12 == v16 >= v14) {
              break;
            }
            ++v7;
            uint64_t v14 = v15;
            if (v7 >= v3)
            {
              uint64_t v7 = v3;
              break;
            }
          }
        }
        if (v11 < v12)
        {
          if (v7 < v10) {
            goto LABEL_128;
          }
          if (v10 < v7)
          {
            uint64_t v17 = 40 * v7;
            uint64_t v18 = 40 * v10;
            uint64_t v19 = v7;
            uint64_t v20 = v10;
            do
            {
              if (v20 != --v19)
              {
                if (!v8) {
                  goto LABEL_133;
                }
                uint64_t v21 = v8 + v18;
                uint64_t v22 = v8 + v17;
                uint64_t v23 = *(void *)(v8 + v18);
                uint64_t v24 = *(void *)(v8 + v18 + 8);
                uint64_t v25 = *(void *)(v8 + v18 + 32);
                long long v26 = *(_OWORD *)(v8 + v18 + 16);
                uint64_t v27 = *(void *)(v8 + v17 - 8);
                long long v28 = *(_OWORD *)(v8 + v17 - 24);
                *(_OWORD *)uint64_t v21 = *(_OWORD *)(v8 + v17 - 40);
                *(_OWORD *)(v21 + 16) = v28;
                *(void *)(v21 + 32) = v27;
                *(void *)(v22 - 40) = v23;
                *(void *)(v22 - 32) = v24;
                *(_OWORD *)(v22 - 24) = v26;
                *(void *)(v22 - 8) = v25;
              }
              ++v20;
              v17 -= 40;
              v18 += 40;
            }
            while (v20 < v19);
          }
        }
      }
      if (v7 < v3)
      {
        if (__OFSUB__(v7, v10)) {
          goto LABEL_125;
        }
        if (v7 - v10 < v101)
        {
          uint64_t v29 = v10 + v101;
          if (__OFADD__(v10, v101)) {
            goto LABEL_129;
          }
          if (v29 >= v3) {
            uint64_t v29 = v3;
          }
          if (v29 < v10)
          {
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            return result;
          }
          if (v7 != v29)
          {
            uint64_t v30 = v97 + 40 * v7;
            do
            {
              uint64_t v31 = *(void *)(v8 + 40 * v7 + 32);
              uint64_t v32 = v10;
              uint64_t v33 = v30;
              do
              {
                if (v31 >= *(void *)(v33 - 24)) {
                  break;
                }
                if (!v8) {
                  goto LABEL_131;
                }
                uint64_t v34 = v33 - 16;
                uint64_t v35 = *(void *)(v33 - 24);
                long long v37 = *(_OWORD *)(v33 - 56);
                long long v36 = *(_OWORD *)(v33 - 40);
                *(_OWORD *)(v33 - 40) = *(_OWORD *)v33;
                v33 -= 40;
                uint64_t v38 = *(void *)(v33 + 24);
                uint64_t v39 = *(void *)(v33 + 32);
                *(_OWORD *)uint64_t v34 = v37;
                *(_OWORD *)(v34 + 16) = v36;
                *(void *)(v34 + 32) = v35;
                *(void *)(v33 - 16) = v38;
                *(void *)(v33 - 8) = v39;
                *(void *)(v33 + 16) = v31;
                ++v32;
              }
              while (v7 != v32);
              ++v7;
              v30 += 40;
            }
            while (v7 != v29);
            uint64_t v7 = v29;
          }
        }
      }
      if (v7 < v10) {
        goto LABEL_120;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
        uint64_t v9 = result;
      }
      unint64_t v41 = *(void *)(v9 + 16);
      unint64_t v40 = *(void *)(v9 + 24);
      unint64_t v42 = v41 + 1;
      uint64_t v8 = v103;
      if (v41 >= v40 >> 1)
      {
        uint64_t result = (uint64_t)sub_24F897440((char *)(v40 > 1), v41 + 1, 1, (char *)v9);
        uint64_t v8 = v103;
        uint64_t v9 = result;
      }
      *(void *)(v9 + 16) = v42;
      uint64_t v43 = v9 + 32;
      unint64_t v44 = (uint64_t *)(v9 + 32 + 16 * v41);
      uint64_t *v44 = v10;
      v44[1] = v7;
      if (v41)
      {
        while (1)
        {
          unint64_t v45 = v42 - 1;
          if (v42 >= 4)
          {
            unint64_t v50 = v43 + 16 * v42;
            uint64_t v51 = *(void *)(v50 - 64);
            uint64_t v52 = *(void *)(v50 - 56);
            BOOL v56 = __OFSUB__(v52, v51);
            uint64_t v53 = v52 - v51;
            if (v56) {
              goto LABEL_109;
            }
            uint64_t v55 = *(void *)(v50 - 48);
            uint64_t v54 = *(void *)(v50 - 40);
            BOOL v56 = __OFSUB__(v54, v55);
            uint64_t v48 = v54 - v55;
            char v49 = v56;
            if (v56) {
              goto LABEL_110;
            }
            unint64_t v57 = v42 - 2;
            uint64_t v58 = (uint64_t *)(v43 + 16 * (v42 - 2));
            uint64_t v60 = *v58;
            uint64_t v59 = v58[1];
            BOOL v56 = __OFSUB__(v59, v60);
            uint64_t v61 = v59 - v60;
            if (v56) {
              goto LABEL_111;
            }
            BOOL v56 = __OFADD__(v48, v61);
            uint64_t v62 = v48 + v61;
            if (v56) {
              goto LABEL_113;
            }
            if (v62 >= v53)
            {
              unint64_t v80 = (uint64_t *)(v43 + 16 * v45);
              uint64_t v82 = *v80;
              uint64_t v81 = v80[1];
              BOOL v56 = __OFSUB__(v81, v82);
              uint64_t v83 = v81 - v82;
              if (v56) {
                goto LABEL_119;
              }
              BOOL v73 = v48 < v83;
              goto LABEL_77;
            }
          }
          else
          {
            if (v42 != 3)
            {
              uint64_t v74 = *(void *)(v9 + 32);
              uint64_t v75 = *(void *)(v9 + 40);
              BOOL v56 = __OFSUB__(v75, v74);
              uint64_t v67 = v75 - v74;
              char v68 = v56;
              goto LABEL_71;
            }
            uint64_t v47 = *(void *)(v9 + 32);
            uint64_t v46 = *(void *)(v9 + 40);
            BOOL v56 = __OFSUB__(v46, v47);
            uint64_t v48 = v46 - v47;
            char v49 = v56;
          }
          if (v49) {
            goto LABEL_112;
          }
          unint64_t v57 = v42 - 2;
          uint64_t v63 = (uint64_t *)(v43 + 16 * (v42 - 2));
          uint64_t v65 = *v63;
          uint64_t v64 = v63[1];
          BOOL v66 = __OFSUB__(v64, v65);
          uint64_t v67 = v64 - v65;
          char v68 = v66;
          if (v66) {
            goto LABEL_114;
          }
          uint64_t v69 = (uint64_t *)(v43 + 16 * v45);
          uint64_t v71 = *v69;
          uint64_t v70 = v69[1];
          BOOL v56 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          if (v56) {
            goto LABEL_116;
          }
          if (__OFADD__(v67, v72)) {
            goto LABEL_118;
          }
          if (v67 + v72 >= v48)
          {
            BOOL v73 = v48 < v72;
LABEL_77:
            if (v73) {
              unint64_t v45 = v57;
            }
            goto LABEL_79;
          }
LABEL_71:
          if (v68) {
            goto LABEL_115;
          }
          uint64_t v76 = (uint64_t *)(v43 + 16 * v45);
          uint64_t v78 = *v76;
          uint64_t v77 = v76[1];
          BOOL v56 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          if (v56) {
            goto LABEL_117;
          }
          if (v79 < v67) {
            goto LABEL_88;
          }
LABEL_79:
          unint64_t v84 = v45 - 1;
          if (v45 - 1 >= v42)
          {
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
            goto LABEL_130;
          }
          if (!v8) {
            goto LABEL_132;
          }
          unint64_t v85 = (uint64_t *)(v43 + 16 * v84);
          uint64_t v86 = *v85;
          uint64_t v87 = (void *)(v43 + 16 * v45);
          uint64_t v88 = v87[1];
          uint64_t result = sub_24F7FD9EC((char *)(v8 + 40 * *v85), (char *)(v8 + 40 * *v87), v8 + 40 * v88, v104);
          if (v105)
          {
LABEL_90:
            swift_bridgeObjectRelease();
            *(void *)(v100 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v88 < v86) {
            goto LABEL_106;
          }
          if (v45 > *(void *)(v9 + 16)) {
            goto LABEL_107;
          }
          *unint64_t v85 = v86;
          *(void *)(v43 + 16 * v84 + 8) = v88;
          unint64_t v89 = *(void *)(v9 + 16);
          if (v45 >= v89) {
            goto LABEL_108;
          }
          unint64_t v42 = v89 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v43 + 16 * v45), v87 + 2, 16 * (v89 - 1 - v45));
          *(void *)(v9 + 16) = v89 - 1;
          uint64_t v8 = v103;
          if (v89 <= 2) {
            goto LABEL_88;
          }
        }
      }
      unint64_t v42 = 1;
LABEL_88:
      uint64_t v3 = v102;
      uint64_t result = 40;
      if (v7 >= v102)
      {
        uint64_t v6 = v100;
        goto LABEL_93;
      }
    }
  }
  uint64_t v6 = MEMORY[0x263F8EE78];
  sqlite3_int64 v104 = (char *)(MEMORY[0x263F8EE78] + 32);
  if (v3 == 1)
  {
    uint64_t v100 = MEMORY[0x263F8EE78];
    goto LABEL_10;
  }
  unint64_t v42 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
LABEL_93:
  uint64_t result = v9;
  uint64_t v100 = v6;
  if (v42 >= 2)
  {
    uint64_t v90 = *v98;
    do
    {
      unint64_t v91 = v42 - 2;
      if (v42 < 2) {
        goto LABEL_121;
      }
      if (!v90) {
        goto LABEL_134;
      }
      uint64_t v92 = result;
      uint64_t v93 = *(void *)(result + 32 + 16 * v91);
      uint64_t v94 = *(void *)(result + 32 + 16 * (v42 - 1) + 8);
      uint64_t result = sub_24F7FD9EC((char *)(v90 + 40 * v93), (char *)(v90 + 40 * *(void *)(result + 32 + 16 * (v42 - 1))), v90 + 40 * v94, v104);
      if (v105) {
        goto LABEL_90;
      }
      if (v94 < v93) {
        goto LABEL_122;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897538();
        uint64_t v92 = result;
      }
      if (v91 >= *(void *)(v92 + 16)) {
        goto LABEL_123;
      }
      uint64_t v95 = (void *)(v92 + 32 + 16 * v91);
      *uint64_t v95 = v93;
      v95[1] = v94;
      unint64_t v96 = *(void *)(v92 + 16);
      if (v42 > v96) {
        goto LABEL_124;
      }
      memmove((void *)(v92 + 32 + 16 * (v42 - 1)), (const void *)(v92 + 32 + 16 * v42), 16 * (v96 - v42));
      uint64_t result = v92;
      *(void *)(v92 + 16) = v96 - 1;
      unint64_t v42 = v96 - 1;
    }
    while (v96 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v100 + 16) = 0;
  return swift_bridgeObjectRelease();
}

char *sub_24F7FCDC0(char *result, char *a2, char *a3, uint64_t *a4)
{
  uint64_t v14 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v16 = *a4;
    uint64_t v5 = (void *)(*a4 + 88 * (void)a3 + 80);
    while (2)
    {
      uint64_t v6 = *(void *)(v16 + 88 * (void)v4);
      uint64_t v7 = v14;
      uint64_t v15 = v5;
      do
      {
        if (v6 >= *(v5 - 21)) {
          break;
        }
        if (!v16)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = *(v5 - 9);
        char v9 = *((unsigned char *)v5 - 64);
        long long v17 = *(_OWORD *)(v5 - 7);
        uint64_t v10 = *(v5 - 5);
        uint64_t v19 = *(v5 - 4);
        char v11 = *((unsigned char *)v5 - 24);
        uint64_t v12 = *v5;
        long long v18 = *((_OWORD *)v5 - 1);
        uint64_t result = (char *)memcpy(v5 - 10, v5 - 21, 0x58uLL);
        *(v5 - 11) = v12;
        v5 -= 11;
        *(v5 - 10) = v6;
        *(v5 - 9) = v8;
        *((unsigned char *)v5 - 64) = v9;
        *(_OWORD *)(v5 - 7) = v17;
        *(v5 - 5) = v10;
        *(v5 - 4) = v19;
        *((unsigned char *)v5 - 24) = v11;
        ++v7;
        *((_OWORD *)v5 - 1) = v18;
      }
      while (v4 != v7);
      ++v4;
      uint64_t v5 = v15 + 11;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

char *sub_24F7FCEE4(char *result, char *a2, char *a3, uint64_t *a4)
{
  uint64_t v14 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 88 * (void)a3 + 64;
    while (2)
    {
      uint64_t v7 = *(void *)(v5 + 88 * (void)v4 + 80);
      uint64_t v8 = v14;
      uint64_t v18 = v6;
      do
      {
        if (v7 >= *(void *)(v6 - 72)) {
          break;
        }
        if (!v5)
        {
          __break(1u);
          return result;
        }
        char v9 = *(unsigned char *)(v6 - 48);
        uint64_t v11 = *(void *)(v6 - 24);
        uint64_t v10 = *(void *)(v6 - 16);
        char v12 = *(unsigned char *)(v6 - 8);
        long long v16 = *(_OWORD *)(v6 - 64);
        long long v17 = *(_OWORD *)(v6 - 40);
        long long v15 = *(_OWORD *)v6;
        uint64_t result = (char *)memcpy((void *)(v6 - 64), (const void *)(v6 - 152), 0x58uLL);
        *(_OWORD *)(v6 - 88) = v15;
        v6 -= 88;
        *(_OWORD *)(v6 - 64) = v16;
        *(unsigned char *)(v6 - 48) = v9;
        *(_OWORD *)(v6 - 40) = v17;
        *(void *)(v6 - 24) = v11;
        *(void *)(v6 - 16) = v10;
        *(unsigned char *)(v6 - 8) = v12;
        ++v8;
        *(void *)(v6 + 16) = v7;
      }
      while (v4 != v8);
      ++v4;
      uint64_t v6 = v18 + 88;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_24F7FCFF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v19 = a2;
  uint64_t v20 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v22 = *a4;
    uint64_t v6 = (uint64_t *)(v22 + 8 * a3 - 8);
    while (2)
    {
      uint64_t v7 = *(void *)(v22 + 8 * v5);
      uint64_t v8 = v20;
      uint64_t v21 = v6;
      do
      {
        if (*(uint64_t *)(v7 + 72) < 1) {
          goto LABEL_22;
        }
        uint64_t v9 = *v6;
        uint64_t v10 = *(sqlite3_stmt **)(v7 + 64);
        if (v10)
        {
          MEMORY[0x270FA5388](result);
          uint64_t v17 = v7;
          uint64_t v18 = 0;
          swift_retain();
          swift_retain();
          if (sqlite3_column_type(v10, 0) == 5) {
            goto LABEL_24;
          }
          sqlite3_int64 v11 = sqlite3_column_int64(v10, 0);
          sqlite3_int64 v12 = v11;
        }
        else
        {
          swift_retain();
          swift_retain();
          sqlite3_int64 v11 = sub_24F7EFEF8();
          if (v4) {
            goto LABEL_25;
          }
          sqlite3_int64 v12 = v11;
        }
        if (*(uint64_t *)(v9 + 72) < 1) {
          goto LABEL_22;
        }
        uint64_t v10 = *(sqlite3_stmt **)(v9 + 64);
        if (v10)
        {
          uint64_t v23 = &v19;
          MEMORY[0x270FA5388](v11);
          uint64_t v17 = v9;
          uint64_t v18 = 0;
          if (sqlite3_column_type(v10, 0) == 5)
          {
LABEL_24:
            sub_24F7D102C(v10, 0, sub_24F7FF1AC, &v16);
            goto LABEL_25;
          }
          sqlite3_int64 v13 = sqlite3_column_int64(v10, 0);
          swift_release();
          uint64_t result = swift_release();
        }
        else
        {
          uint64_t v14 = sub_24F7EFEF8();
          if (v4) {
            goto LABEL_25;
          }
          sqlite3_int64 v13 = v14;
          swift_release();
          uint64_t result = swift_release();
        }
        if (v12 >= v13) {
          break;
        }
        if (!v22)
        {
          __break(1u);
LABEL_22:
          LODWORD(v18) = 0;
          uint64_t v17 = 825;
          sub_24F8CF9D0();
          __break(1u);
LABEL_25:
          uint64_t result = swift_unexpectedError();
          __break(1u);
          return result;
        }
        uint64_t v15 = *v6;
        uint64_t v7 = v6[1];
        *uint64_t v6 = v7;
        v6[1] = v15;
        --v6;
        ++v8;
      }
      while (v5 != v8);
      ++v5;
      uint64_t v6 = v21 + 1;
      if (v5 != v19) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_24F7FD2E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 40 * a3 + 16;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 40 * a3 + 32);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      do
      {
        if (v6 >= *(void *)(v8 - 24)) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = v8 - 16;
        uint64_t v10 = *(void *)(v8 - 24);
        long long v12 = *(_OWORD *)(v8 - 56);
        long long v11 = *(_OWORD *)(v8 - 40);
        *(_OWORD *)(v8 - 40) = *(_OWORD *)v8;
        v8 -= 40;
        uint64_t v13 = *(void *)(v8 + 24);
        uint64_t v14 = *(void *)(v8 + 32);
        *(_OWORD *)uint64_t v9 = v12;
        *(_OWORD *)(v9 + 16) = v11;
        *(void *)(v9 + 32) = v10;
        *(void *)(v8 - 16) = v13;
        *(void *)(v8 - 8) = v14;
        *(void *)(v8 + 16) = v6;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 40;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_24F7FD36C(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 88;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 88;
  if (v9 >= v11)
  {
    sub_24F8B4F98(a2, (uint64_t)(a3 - (void)a2) / 88, a4);
    long long v12 = &v4[88 * v11];
    if (v7 >= v6 || v10 < 88) {
      goto LABEL_35;
    }
    uint64_t v16 = (char *)(a3 - 88);
    while (1)
    {
      uint64_t v17 = v16 + 88;
      uint64_t v18 = v6 - 88;
      if (*((void *)v12 - 11) >= *((void *)v6 - 11))
      {
        BOOL v20 = v17 != v12 || v16 >= v12;
        uint64_t v18 = v12 - 88;
        v12 -= 88;
        if (!v20) {
          goto LABEL_31;
        }
      }
      else
      {
        BOOL v19 = v17 != v6 || v16 >= v6;
        v6 -= 88;
        if (!v19) {
          goto LABEL_31;
        }
      }
      memmove(v16, v18, 0x58uLL);
LABEL_31:
      v16 -= 88;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_35;
      }
    }
  }
  sub_24F8B4F98(a1, (a2 - a1) / 88, a4);
  long long v12 = &v4[88 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 88)
  {
    while (*(void *)v6 >= *(void *)v4)
    {
      uint64_t v13 = v4;
      BOOL v14 = v7 == v4;
      v4 += 88;
      if (!v14) {
        goto LABEL_9;
      }
LABEL_10:
      v7 += 88;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_15;
      }
    }
    uint64_t v13 = v6;
    BOOL v14 = v7 == v6;
    v6 += 88;
    if (v14) {
      goto LABEL_10;
    }
LABEL_9:
    memmove(v7, v13, 0x58uLL);
    goto LABEL_10;
  }
LABEL_15:
  uint64_t v6 = v7;
LABEL_35:
  uint64_t v22 = (v12 - v4) / 88;
  if (v6 != v4 || v6 >= &v4[88 * v22]) {
    memmove(v6, v4, 88 * v22);
  }
  return 1;
}

uint64_t sub_24F7FD524(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 88;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 88;
  if (v9 >= v11)
  {
    sub_24F8B4F98(a2, (uint64_t)(a3 - (void)a2) / 88, a4);
    long long v12 = &v4[88 * v11];
    if (v7 >= v6 || v10 < 88) {
      goto LABEL_41;
    }
    uint64_t v18 = (char *)(a3 - 88);
    while (1)
    {
      BOOL v19 = v18 + 88;
      if (*((void *)v12 - 1) >= *((void *)v6 - 1))
      {
        BOOL v20 = v12 - 88;
        BOOL v22 = v19 != v12 || v18 >= v12;
        v12 -= 88;
        if (!v22) {
          goto LABEL_37;
        }
      }
      else
      {
        BOOL v20 = v6 - 88;
        BOOL v21 = v19 != v6 || v18 >= v6;
        v6 -= 88;
        if (!v21) {
          goto LABEL_37;
        }
      }
      memmove(v18, v20, 0x58uLL);
LABEL_37:
      v18 -= 88;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_41;
      }
    }
  }
  sub_24F8B4F98(a1, (a2 - a1) / 88, a4);
  long long v12 = &v4[88 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 88)
  {
    do
    {
      if (*((void *)v6 + 10) >= *((void *)v4 + 10))
      {
        BOOL v13 = v7 == v4;
        BOOL v14 = v4;
        v4 += 88;
        if (v13 && v7 < v4) {
          goto LABEL_16;
        }
      }
      else
      {
        BOOL v13 = v7 == v6;
        BOOL v14 = v6;
        v6 += 88;
        if (v13 && v7 < v6) {
          goto LABEL_16;
        }
      }
      memmove(v7, v14, 0x58uLL);
LABEL_16:
      v7 += 88;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  uint64_t v6 = v7;
LABEL_41:
  uint64_t v24 = (v12 - v4) / 88;
  if (v6 != v4 || v6 >= &v4[88 * v24]) {
    memmove(v6, v4, 88 * v24);
  }
  return 1;
}

uint64_t sub_24F7FD6D8(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v7 = (uint64_t *)a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 8;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_24F8BED84(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v16 = (uint64_t *)a2;
    unint64_t v42 = (uint64_t *)a4;
    BOOL v19 = &a4[8 * v11];
    if (v7 >= (uint64_t *)a2 || v10 < 8)
    {
      uint64_t v15 = (uint64_t *)a4;
      goto LABEL_38;
    }
    uint64_t v25 = (uint64_t *)(a3 - 8);
    uint64_t v15 = v42;
    unint64_t v41 = v7;
    while (1)
    {
      unint64_t v26 = (unint64_t)v19;
      uint64_t v27 = *((void *)v19 - 1);
      v19 -= 8;
      uint64_t v44 = v27;
      uint64_t v7 = v16;
      long long v28 = v16 - 1;
      uint64_t v43 = *(v16 - 1);
      swift_retain();
      swift_retain();
      char v29 = sub_24F7F489C(&v44, &v43);
      if (v4)
      {
        swift_release();
        swift_release();
        uint64_t v38 = (uint64_t)(v26 - (void)v15) / 8;
        if (v7 < v15 || v7 >= &v15[v38])
        {
          memmove(v7, v15, 8 * v38);
          return 1;
        }
        if (v7 == v15) {
          return 1;
        }
LABEL_59:
        size_t v36 = 8 * v38;
        uint64_t v16 = v7;
LABEL_44:
        memmove(v16, v15, v36);
        return 1;
      }
      char v30 = v29;
      uint64_t v31 = v25 + 1;
      swift_release();
      swift_release();
      if (v30)
      {
        BOOL v32 = v31 != v7 || v25 >= v7;
        uint64_t v16 = v28;
        BOOL v19 = (char *)v26;
        if (!v32) {
          goto LABEL_36;
        }
      }
      else
      {
        BOOL v33 = v31 != (uint64_t *)v26 || (unint64_t)v25 >= v26;
        long long v28 = (uint64_t *)v19;
        uint64_t v16 = v7;
        if (!v33) {
          goto LABEL_36;
        }
      }
      *uint64_t v25 = *v28;
LABEL_36:
      uint64_t v15 = v42;
      if (v16 > v41)
      {
        --v25;
        if (v19 > (char *)v42) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
  sub_24F8BED84(a1, (a2 - a1) / 8, a4);
  BOOL v13 = (uint64_t *)a2;
  BOOL v14 = (unint64_t)a2 >= a3 || v8 < 8;
  uint64_t v15 = (uint64_t *)a4;
  if (v14)
  {
    uint64_t v16 = v7;
    BOOL v19 = &a4[8 * v9];
LABEL_38:
    uint64_t v34 = (v19 - (char *)v15) / 8;
    BOOL v35 = v16 < v15 || v16 >= &v15[v34];
    if (!v35 && v16 == v15) {
      return 1;
    }
    size_t v36 = 8 * v34;
    goto LABEL_44;
  }
  BOOL v19 = &a4[8 * v9];
  while (1)
  {
    BOOL v20 = v13;
    uint64_t v44 = *v13;
    uint64_t v43 = *v15;
    swift_retain();
    swift_retain();
    char v21 = sub_24F7F489C(&v44, &v43);
    if (v4) {
      break;
    }
    char v22 = v21;
    swift_release();
    swift_release();
    if ((v22 & 1) == 0)
    {
      uint64_t v23 = v15;
      BOOL v24 = v7 == v15++;
      BOOL v13 = v20;
      if (v24) {
        goto LABEL_20;
      }
LABEL_19:
      *uint64_t v7 = *v23;
      goto LABEL_20;
    }
    uint64_t v23 = v20;
    BOOL v13 = v20 + 1;
    if (v7 != v20) {
      goto LABEL_19;
    }
LABEL_20:
    ++v7;
    if (v15 >= (uint64_t *)v19 || (unint64_t)v13 >= a3)
    {
      uint64_t v16 = v7;
      goto LABEL_38;
    }
  }
  swift_release();
  swift_release();
  uint64_t v38 = (v19 - (char *)v15) / 8;
  BOOL v39 = v7 < v15 || v7 >= &v15[v38];
  if (v39 || v7 != v15) {
    goto LABEL_59;
  }
  return 1;
}

uint64_t sub_24F7FD9EC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  if (v9 >= v11)
  {
    sub_24F8B4FE0(a2, (uint64_t)(a3 - (void)a2) / 40, a4);
    long long v12 = &v4[40 * v11];
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_41;
    }
    unint64_t v20 = a3 - 40;
    while (1)
    {
      char v21 = (char *)(v20 + 40);
      if (*((void *)v12 - 1) >= *((void *)v6 - 1))
      {
        char v22 = v12 - 40;
        BOOL v24 = v21 != v12 || v20 >= (unint64_t)v12;
        v12 -= 40;
        if (!v24) {
          goto LABEL_37;
        }
      }
      else
      {
        char v22 = v6 - 40;
        BOOL v23 = v21 != v6 || v20 >= (unint64_t)v6;
        v6 -= 40;
        if (!v23) {
          goto LABEL_37;
        }
      }
      long long v25 = *(_OWORD *)v22;
      long long v26 = *((_OWORD *)v22 + 1);
      *(void *)(v20 + 32) = *((void *)v22 + 4);
      *(_OWORD *)unint64_t v20 = v25;
      *(_OWORD *)(v20 + 16) = v26;
LABEL_37:
      v20 -= 40;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_41;
      }
    }
  }
  sub_24F8B4FE0(a1, (a2 - a1) / 40, a4);
  long long v12 = &v4[40 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    do
    {
      if (*((void *)v6 + 4) >= *((void *)v4 + 4))
      {
        BOOL v13 = v7 == v4;
        BOOL v14 = v4;
        v4 += 40;
        if (v13 && v7 < v4) {
          goto LABEL_16;
        }
      }
      else
      {
        BOOL v13 = v7 == v6;
        BOOL v14 = v6;
        v6 += 40;
        if (v13 && v7 < v6) {
          goto LABEL_16;
        }
      }
      long long v17 = *(_OWORD *)v14;
      long long v18 = *((_OWORD *)v14 + 1);
      *((void *)v7 + 4) = *((void *)v14 + 4);
      *(_OWORD *)uint64_t v7 = v17;
      *((_OWORD *)v7 + 1) = v18;
LABEL_16:
      v7 += 40;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  uint64_t v6 = v7;
LABEL_41:
  uint64_t v28 = (v12 - v4) / 40;
  if (v6 != v4 || v6 >= &v4[40 * v28]) {
    memmove(v6, v4, 40 * v28);
  }
  return 1;
}

uint64_t sub_24F7FDBA8(uint64_t a1, uint64_t a2)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v2;
  *sqlite3_int64 v2 = 0x8000000000000000;
  sub_24F7DC000(a1, a2);
  *sqlite3_int64 v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F7FDC38(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F7FDC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24F7FDCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for ColumnInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ColumnInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ColumnInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

void *initializeWithTake for ColumnInfo(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for ColumnInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColumnInfo(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColumnInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ColumnInfo()
{
}

uint64_t destroy for IndexInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IndexInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IndexInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for IndexInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for IndexInfo(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IndexInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for IndexInfo()
{
}

uint64_t destroy for ForeignKeyViolation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ForeignKeyViolation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ForeignKeyViolation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ForeignKeyViolation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForeignKeyViolation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForeignKeyViolation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ForeignKeyViolation()
{
}

void type metadata accessor for PrimaryKeyInfo()
{
}

uint64_t destroy for ForeignKeyInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ForeignKeyInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ForeignKeyInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ForeignKeyInfo(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForeignKeyInfo(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForeignKeyInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ForeignKeyInfo()
{
}

uint64_t destroy for PrimaryKeyInfo.Impl(uint64_t a1)
{
  return sub_24F790830(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12GRDBInternal14PrimaryKeyInfoV4ImplOwCP_0(uint64_t a1, uint64_t a2)
{
  sub_24F780DF0(a1, a2);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(unsigned char *)(v2 + 16) = v5;
  return v2;
}

uint64_t _s12GRDBInternal14PrimaryKeyInfoV4ImplOwca_0(uint64_t a1, uint64_t a2)
{
  sub_24F780DF0(a1, a2);
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = *(void *)(v2 + 8);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(v2 + 16);
  *(unsigned char *)(v2 + 16) = v5;
  sub_24F790830(v6, v7, v8);
  return v2;
}

uint64_t _s12GRDBInternal14PrimaryKeyInfoV4ImplOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24F790830(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for PrimaryKeyInfo.Impl()
{
  return &type metadata for PrimaryKeyInfo.Impl;
}

unint64_t sub_24F7FE634(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F7FE64C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_24F7FE698(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24F7FE73C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24F7FE7A0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_24F7FE7F4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

void *sub_24F7FE850(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void _s16SchemaIdentifierOMa()
{
}

unint64_t sub_24F7FE880()
{
  unint64_t result = qword_26B1F7DE8;
  if (!qword_26B1F7DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7DE8);
  }
  return result;
}

uint64_t (*sub_24F7FE8CC())()
{
  uint64_t v1 = sub_24F7FF1D8();
  uint64_t v2 = sub_24F7804C4((uint64_t)v1);
  *(void *)(v0 + 32) = sub_24F7FE9B0(v2, v3);
  return sub_24F7FE918;
}

uint64_t (*sub_24F7FE91C())()
{
  uint64_t v1 = sub_24F7FF1D8();
  uint64_t v2 = sub_24F7804C4((uint64_t)v1);
  *(void *)(v0 + 32) = sub_24F7FEA1C(v2, v3);
  return sub_24F7FE918;
}

void sub_24F7FE968(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_24F7FE9B0(uint64_t a1, uint64_t a2))()
{
  uint64_t v6 = sub_24F785878(a1, a2);
  sub_24F8A0264(v6);
  if (v5) {
    uint64_t v7 = MEMORY[0x253364060](v4, v3);
  }
  else {
    uint64_t v7 = swift_retain();
  }
  *uint64_t v2 = v7;
  return sub_24F7FF1A8;
}

uint64_t (*sub_24F7FEA1C(uint64_t a1, uint64_t a2))()
{
  uint64_t v6 = sub_24F785878(a1, a2);
  sub_24F8A0264(v6);
  if (v5) {
    uint64_t v7 = MEMORY[0x253364060](v4, v3);
  }
  else {
    uint64_t v7 = swift_retain();
  }
  *uint64_t v2 = v7;
  return sub_24F7FEA88;
}

uint64_t sub_24F7FEA88()
{
  return swift_release();
}

unint64_t sub_24F7FEA90()
{
  unint64_t result = qword_269A2B348;
  if (!qword_269A2B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B348);
  }
  return result;
}

uint64_t sub_24F7FEADC()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32) >= 2uLL) {
    swift_release();
  }
  return swift_deallocObject();
}

unint64_t sub_24F7FEB30()
{
  unint64_t result = qword_26B1F77E8;
  if (!qword_26B1F77E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F77E8);
  }
  return result;
}

uint64_t sub_24F7FEB7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F7FEBB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F7FEBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_24F7F6368(a1, a2, a3, a4, a5);
}

uint64_t sub_24F7FEC08(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F7FEC4C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_24F7903D0(a1, a2, a3);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SchemaInfo.SchemaObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SchemaInfo.SchemaObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F7FEDB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SchemaInfo.SchemaObject.CodingKeys()
{
  return &type metadata for SchemaInfo.SchemaObject.CodingKeys;
}

uint64_t destroy for SchemaInfo.SchemaObject()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SchemaInfo.SchemaObject(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SchemaInfo.SchemaObject(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SchemaInfo.SchemaObject(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SchemaInfo.SchemaObject(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SchemaInfo.SchemaObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SchemaInfo.SchemaObject()
{
  return &type metadata for SchemaInfo.SchemaObject;
}

void type metadata accessor for SchemaInfo()
{
}

unint64_t sub_24F7FF068()
{
  unint64_t result = qword_269A2B350;
  if (!qword_269A2B350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B350);
  }
  return result;
}

unint64_t sub_24F7FF0B8()
{
  unint64_t result = qword_26B1F77F8;
  if (!qword_26B1F77F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F77F8);
  }
  return result;
}

unint64_t sub_24F7FF108()
{
  unint64_t result = qword_26B1F77F0;
  if (!qword_26B1F77F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F77F0);
  }
  return result;
}

unint64_t sub_24F7FF158()
{
  unint64_t result = qword_26B1F7800;
  if (!qword_26B1F7800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7800);
  }
  return result;
}

void sub_24F7FF1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, _UNKNOWN **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_24F773288(v31, v30, v29, (uint64_t)&a9 + 8, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29);
}

void *sub_24F7FF1D8()
{
  return malloc(0x28uLL);
}

void sub_24F7FF210()
{
  *(void *)(v2 + 16) = v0;
  uint64_t v5 = v2 + 16 * v1;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v3;
}

void sub_24F7FF228()
{
  sub_24F77C4AC();
}

void sub_24F7FF270()
{
  sub_24F8B6490();
}

uint64_t sub_24F7FF290()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_24F7FF2A8()
{
  return sub_24F8CEEB0();
}

void sub_24F7FF2C8()
{
  sub_24F77C4AC();
}

__n128 *sub_24F7FF2E8(__n128 *result, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  result[1] = a2;
  result[2].n128_u64[0] = a16;
  result[2].n128_u64[1] = a13;
  return result;
}

uint64_t sub_24F7FF2FC(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x5F000000000000;
}

double sub_24F7FF324(uint64_t a1, uint64_t a2)
{
  return sub_24F7DB178(a2);
}

uint64_t sub_24F7FF344()
{
  return swift_unexpectedError();
}

__n128 sub_24F7FF364(__n128 *a1)
{
  return a1[2];
}

uint64_t sub_24F7FF378()
{
  return sub_24F8CEC70();
}

uint64_t sub_24F7FF398()
{
  return sub_24F8CFD00();
}

void sub_24F7FF3B8(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_24F7FF3D4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v5;
      *(void *)(a1 + 48) = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_24F7783C0(a1 + 40, &qword_269A2A6A0);
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v5;
    *(void *)(a1 + 48) = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
LABEL_8:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a1 + 112);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 112);
  if (v8)
  {
    if (v9)
    {
      uint64_t v10 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = v9;
      *(void *)(a1 + 120) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_24F7783C0(a1 + 112, qword_269A2A6A8);
  }
  else if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v9;
    *(void *)(a1 + 120) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
LABEL_15:
  uint64_t v12 = *(void *)(a2 + 128);
  if (!*(void *)(a1 + 128))
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = v12;
      *(void *)(a1 + 136) = v14;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    goto LABEL_22;
  }
  if (!v12)
  {
    sub_24F7783C0(a1 + 128, &qword_269A2A6A0);
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = v12;
  *(void *)(a1 + 136) = v13;
  swift_retain();
  swift_release();
LABEL_22:
  long long v15 = *(_OWORD *)(a2 + 144);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = v15;
  return a1;
}

uint64_t sub_24F7FF60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v5;
      *(void *)(a1 + 48) = v6;
      swift_release();
      goto LABEL_6;
    }
    sub_24F7783C0(a1 + 40, &qword_269A2A6A0);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
LABEL_6:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 112);
  uint64_t v8 = *(void *)(a1 + 112);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  if (v8)
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = v7;
      *(void *)(a1 + 120) = v9;
      swift_release();
      goto LABEL_11;
    }
    sub_24F7783C0(a1 + 112, qword_269A2A6A8);
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 128);
  if (!*(void *)(a1 + 128))
  {
LABEL_15:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    goto LABEL_16;
  }
  if (!v10)
  {
    sub_24F7783C0(a1 + 128, &qword_269A2A6A0);
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = v10;
  *(void *)(a1 + 136) = v11;
  swift_release();
LABEL_16:
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  return a1;
}

void type metadata accessor for SQLRelation()
{
}

void sub_24F7FF7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_24F7955AC();
    if (*(void *)(a3 + 16))
    {
      uint64_t v6 = v12;
      uint64_t v7 = a1 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        unint64_t v8 = sub_24F782950();
        if ((v9 & 1) == 0) {
          break;
        }
        memcpy(__dst, (const void *)(*(void *)(a3 + 56) + 216 * v8), 0xD2uLL);
        sub_24F7ADF80((uint64_t)__dst);
        swift_bridgeObjectRelease();
        uint64_t v12 = v6;
        unint64_t v10 = *(void *)(v6 + 16);
        if (v10 >= *(void *)(v6 + 24) >> 1)
        {
          sub_24F7955AC();
          uint64_t v6 = v12;
        }
        *(void *)(v6 + 16) = v10 + 1;
        memcpy((void *)(v6 + 216 * v10 + 32), __dst, 0xD2uLL);
        if (!--v4) {
          goto LABEL_10;
        }
        v7 += 16;
        if (!*(void *)(a3 + 16)) {
          goto LABEL_12;
        }
      }
      __break(1u);
    }
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24F7FF914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_24F795698();
    uint64_t v7 = v24;
    unint64_t v8 = (uint64_t *)(a1 + 56);
    for (uint64_t i = v5 - 1; ; --i)
    {
      uint64_t v10 = *(v8 - 3);
      uint64_t v11 = *(v8 - 2);
      uint64_t v12 = *v8;
      v17[0] = *(v8 - 1);
      v17[1] = v12;
      v17[2] = a2;
      sub_24F7ADE84((uint64_t)v17);
      sub_24F76F710((uint64_t)v17, (uint64_t)__src);
      v19[0] = v10;
      v19[1] = v11;
      v19[2] = a3;
      sub_24F7ADE84((uint64_t)v19);
      sub_24F76F710((uint64_t)v19, (uint64_t)v20);
      sub_24F76F710((uint64_t)v17, (uint64_t)v21);
      sub_24F76F710((uint64_t)v19, (uint64_t)&v22);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_retain_n();
      sub_24F7DA038((uint64_t)v21);
      memcpy(__dst, __src, 0xA3uLL);
      memcpy(v15, v20, 0xA3uLL);
      sub_24F815BAC(0, __dst, v15, v23);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      if (v13 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F795698();
        uint64_t v7 = v24;
      }
      *(void *)(v7 + 16) = v13 + 1;
      memcpy((void *)(v7 + 168 * v13 + 32), v23, 0xA3uLL);
      if (!i) {
        break;
      }
      v8 += 4;
    }
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  swift_release();
  return v7;
}

uint64_t sub_24F7FFB44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_24F795E30();
    uint64_t v2 = v18;
    uint64_t v4 = (char *)(a1 + 32);
    for (uint64_t i = v1 - 1; ; --i)
    {
      memcpy(__dst, v4, 0xA3uLL);
      sub_24F808CB0((uint64_t)__dst, (uint64_t)v17);
      switch(sub_24F808D0C((uint64_t)v17))
      {
        case 1u:
          char v9 = (const void *)sub_24F808DF4((uint64_t)v17);
          memcpy(v13, v9, 0xA3uLL);
          sub_24F808E20((uint64_t)v13);
          goto LABEL_9;
        case 2u:
          unint64_t v8 = (const void *)sub_24F808DF4((uint64_t)v17);
          memcpy(v13, v8, 0xA3uLL);
          sub_24F808DB0((uint64_t)v13);
          goto LABEL_9;
        case 3u:
          uint64_t v10 = (const void *)sub_24F808DF4((uint64_t)v17);
          memcpy(v13, v10, 0xA3uLL);
          sub_24F808D6C((uint64_t)v13);
          goto LABEL_9;
        case 4u:
          uint64_t v7 = (const void *)sub_24F808DF4((uint64_t)v17);
          memcpy(v13, v7, 0xA3uLL);
          sub_24F808D20((uint64_t)v13);
LABEL_9:
          sub_24F808CB0((uint64_t)v13, (uint64_t)__src);
          memcpy(v15, __src, 0xA3uLL);
          break;
        case 5u:
          sub_24F808DF4((uint64_t)v17);
          sub_24F8CF9D0();
          __break(1u);
          JUMPOUT(0x24F7FFDB4);
        default:
          uint64_t v6 = (const void *)sub_24F808DF4((uint64_t)v17);
          memcpy(__src, v6, 0xA3uLL);
          sub_24F808E20((uint64_t)__src);
          sub_24F808CB0((uint64_t)__src, (uint64_t)v15);
          break;
      }
      sub_24F76F994((uint64_t)__dst);
      uint64_t v18 = v2;
      unint64_t v11 = *(void *)(v2 + 16);
      if (v11 >= *(void *)(v2 + 24) >> 1)
      {
        sub_24F795E30();
        uint64_t v2 = v18;
      }
      *(void *)(v2 + 16) = v11 + 1;
      memcpy((void *)(v2 + 168 * v11 + 32), v15, 0xA3uLL);
      if (!i) {
        break;
      }
      v4 += 168;
    }
  }
  return v2;
}

uint64_t sub_24F7FFDCC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_24F795E30();
    uint64_t v5 = v23;
    uint64_t v6 = (char *)(a1 + 32);
    for (uint64_t i = v3 - 1; ; --i)
    {
      memcpy(__dst, v6, 0xA3uLL);
      sub_24F808CB0((uint64_t)__dst, (uint64_t)v22);
      switch(sub_24F808D0C((uint64_t)v22))
      {
        case 1u:
          char v9 = (const void *)sub_24F808DF4((uint64_t)v22);
          memcpy(v19, v9, 0xA3uLL);
          sub_24F76F994((uint64_t)__dst);
          sub_24F814C38(a2, v17);
          sub_24F76F994((uint64_t)__dst);
          memcpy(__src, v17, 0xA3uLL);
          sub_24F808DB0((uint64_t)__src);
          goto LABEL_10;
        case 2u:
          uint64_t v10 = (const void *)sub_24F808DF4((uint64_t)v22);
          memcpy(v19, v10, 0xA3uLL);
          sub_24F76F994((uint64_t)__dst);
          sub_24F814C38(a2, v17);
          sub_24F76F994((uint64_t)__dst);
          memcpy(__src, v17, 0xA3uLL);
          sub_24F808E20((uint64_t)__src);
          goto LABEL_10;
        case 3u:
          unint64_t v11 = (const void *)sub_24F808DF4((uint64_t)v22);
          memcpy(v19, v11, 0xA3uLL);
          sub_24F76F994((uint64_t)__dst);
          sub_24F814C38(a2, v17);
          sub_24F76F994((uint64_t)__dst);
          memcpy(__src, v17, 0xA3uLL);
          sub_24F808D20((uint64_t)__src);
          goto LABEL_10;
        case 4u:
          uint64_t v12 = (const void *)sub_24F808DF4((uint64_t)v22);
          memcpy(v19, v12, 0xA3uLL);
          sub_24F76F994((uint64_t)__dst);
          sub_24F814C38(a2, v17);
          sub_24F76F994((uint64_t)__dst);
          memcpy(__src, v17, 0xA3uLL);
          sub_24F808D6C((uint64_t)__src);
          goto LABEL_10;
        case 5u:
          sub_24F808DF4((uint64_t)v22);
          sub_24F76F994((uint64_t)__dst);
          sub_24F76F994((uint64_t)__dst);
          swift_retain();
          sub_24F8511E4();
          uint64_t v14 = v13;
          sub_24F76F994((uint64_t)__dst);
          sub_24F76F994((uint64_t)__dst);
          __src[0] = v14;
          sub_24F8095BC((uint64_t)__src);
LABEL_10:
          sub_24F808CB0((uint64_t)__src, (uint64_t)v19);
          memcpy(v20, v19, 0xA3uLL);
          break;
        default:
          unint64_t v8 = (const void *)sub_24F808DF4((uint64_t)v22);
          memcpy(v19, v8, 0xA3uLL);
          sub_24F76F994((uint64_t)__dst);
          sub_24F814C38(a2, __src);
          sub_24F76F994((uint64_t)__dst);
          memcpy(v19, __src, 0xA3uLL);
          sub_24F809608((uint64_t)v19);
          sub_24F808CB0((uint64_t)v19, (uint64_t)v20);
          break;
      }
      uint64_t v23 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      if (v15 >= *(void *)(v5 + 24) >> 1)
      {
        sub_24F795E30();
        uint64_t v5 = v23;
      }
      *(void *)(v5 + 16) = v15 + 1;
      memcpy((void *)(v5 + 168 * v15 + 32), v20, 0xA3uLL);
      if (!i) {
        break;
      }
      v6 += 168;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v5;
}

void sub_24F80025C()
{
  void (*v17)(unsigned char *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  long long v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  long long v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void v103[8];
  char v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  void (*v121)(void *__return_ptr, void);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  char v139;
  void v140[21];
  void v141[8];
  char v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  char v155;
  unsigned char v156[168];
  unsigned char v157[168];
  unsigned char v158[168];
  unsigned char __dst[216];
  unsigned char __src[226];
  uint64_t v161;
  char v162;
  uint64_t v163;
  char v164;
  unsigned char v165[162];
  unsigned char v166[162];
  char v167;
  char v168;
  char v169;

  sub_24F76FF94();
  uint64_t v3 = v0;
  uint64_t v4 = v2;
  if (*((void *)v0 + 14)) {
    goto LABEL_4;
  }
  if (*((unsigned char *)v0 + 161) != 1) {
    goto LABEL_4;
  }
  uint64_t v5 = *((void *)v0 + 9);
  if (*(void *)(v5 + 16)) {
    goto LABEL_4;
  }
  uint64_t v95 = *((void *)v0 + 15);
  unint64_t v96 = *((void *)v0 + 18);
  uint64_t v97 = *((void *)v0 + 19);
  char v7 = *((unsigned char *)v0 + 160);
  uint64_t v8 = *((void *)v0 + 11);
  uint64_t v98 = *((void *)v3 + 10);
  uint64_t v99 = v5;
  uint64_t v9 = *((void *)v3 + 12);
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    v167 = v7;
    uint64_t v100 = v2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    if (!*(void *)(v9 + 16))
    {
LABEL_14:
      __break(1u);
LABEL_15:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v6 = v100;
      goto LABEL_5;
    }
    unint64_t v11 = (uint64_t *)(v8 + 40);
    while (1)
    {
      uint64_t v13 = *(v11 - 1);
      uint64_t v12 = *v11;
      swift_bridgeObjectRetain_n();
      sub_24F782950();
      if ((v14 & 1) == 0) {
        break;
      }
      sub_24F76FFAC();
      memcpy(__dst, v15, 0xD2uLL);
      sub_24F7ADF80((uint64_t)__dst);
      swift_bridgeObjectRelease();
      *(void *)__src = v13;
      *(void *)&__src[8] = v12;
      memcpy(&__src[16], __dst, 0xD2uLL);
      swift_bridgeObjectRetain();
      sub_24F7ADF80((uint64_t)__dst);
      sub_24F7AE06C((uint64_t)__src);
      sub_24F7CC600((uint64_t)__src);
      swift_bridgeObjectRelease();
      sub_24F7AE180((uint64_t)__dst);
      sub_24F7AE06C((uint64_t)__src);
      if (__dst[0] < 2u) {
        goto LABEL_15;
      }
      if (!--v10)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v4 = v100;
        char v7 = v167;
        goto LABEL_17;
      }
      v11 += 2;
      if (!*(void *)(v9 + 16)) {
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_17:
  long long v17 = (void (*)(unsigned char *__return_ptr, uint64_t))*((void *)v3 + 3);
  uint64_t v16 = *((void *)v3 + 4);
  v17(__src, v4);
  if (v1) {
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(*(void *)__src + 16);
  if (v18 == 1)
  {
    memcpy(__src, (const void *)(*(void *)__src + 32), 0xB8uLL);
    sub_24F809664((uint64_t)__src);
    swift_bridgeObjectRelease();
    memcpy(__dst, __src, 0xB8uLL);
    sub_24F7A3924(*((unsigned char *)v3 + 104), (uint64_t)v156);
    sub_24F809664((uint64_t)__src);
    sub_24F8096D0((uint64_t)v156, (uint64_t)v157, &qword_269A2A0E0);
    sub_24F8096D0((uint64_t)v157, (uint64_t)v158, &qword_269A2A0E0);
    if (sub_24F799760((uint64_t)v158) != 1)
    {
      v161 = *((void *)v3 + 7);
      v162 = *((unsigned char *)v3 + 64);
      unint64_t v85 = *((void *)v3 + 16);
      uint64_t v82 = *((void *)v3 + 17);
      BOOL v19 = *((void *)v3 + 5);
      uint64_t v101 = *((void *)v3 + 6);
      unint64_t v91 = *((void *)v3 + 1);
      uint64_t v93 = *(void *)v3;
      unint64_t v89 = *((void *)v3 + 2);
      sub_24F7D8D44(v3);
      sub_24F809590((uint64_t)&v161);
      unint64_t v20 = MEMORY[0x263F8EE78];
      char v21 = sub_24F8CEC70();
      sub_24F80AD4C(v21, v21, v22, v23, (uint64_t)sub_24F801AF8, v24, v25, v26, v75, v77);
      uint64_t v87 = v28;
      uint64_t v88 = v27;
      uint64_t v83 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F7A4720(v158, __dst);
      uint64_t v86 = v19;
      if (sub_24F7996B8((uint64_t)__dst) == 1)
      {
        uint64_t v118 = v93;
        unint64_t v119 = v91;
        char v120 = v89;
        int v121 = (void (*)(void *__return_ptr, void))v17;
        uint64_t v122 = v16;
        char v123 = v19;
        v124 = v101;
        uint64_t v125 = v20;
        uint64_t v126 = 0;
        uint64_t v127 = v99;
        v128 = v98;
        __int16 v129 = v88;
        char v130 = v87;
        char v131 = 0;
        char v132 = 0;
        char v133 = v95;
        uint64_t v29 = v82;
        v134 = v85;
        v135 = v82;
        v136 = v96;
        v137 = v97;
        v138 = v7;
        v139 = 1;
        uint64_t v30 = sub_24F77229C();
        *(void *)(v30 + 16) = &unk_2700FDFB8;
        uint64_t v31 = sub_24F80AD10();
        *(void *)(v31 + 16) = sub_24F80AB60;
        *(void *)(v31 + 24) = v30;
        sub_24F7D8D44(&v118);
        uint64_t v32 = swift_release();
        v140[0] = v93;
        v140[1] = v91;
        v140[2] = v89;
        v140[3] = v17;
        BOOL v33 = v85;
        uint64_t v34 = v95;
        v140[4] = v16;
        BOOL v35 = v96;
        v140[5] = v19;
        v140[6] = v101;
        v140[7] = MEMORY[0x263F8EE78];
        LOBYTE(v140[8]) = 0;
        v140[9] = v99;
        size_t v36 = v98;
        v140[10] = v98;
        sub_24F776004(v32, v37, v38, v39, v40, v41, v42, v43, v76, v78, v79, v81, v82, v1, v85, v19, v87, v88);
        v140[15] = v95;
        v140[16] = v33;
        v140[17] = v29;
        v140[18] = v96;
        uint64_t v44 = v97;
        v140[19] = v97;
        LOBYTE(v140[20]) = v7;
        BYTE1(v140[20]) = 1;
        unint64_t v45 = sub_24F7920F8(v140);
      }
      else
      {
        v103[0] = v93;
        v103[1] = v91;
        v103[2] = v89;
        v103[3] = v17;
        v103[4] = v16;
        v103[5] = v19;
        v103[6] = v101;
        v103[7] = v20;
        sqlite3_int64 v104 = 0;
        uint64_t v105 = v99;
        unint64_t v106 = v98;
        uint64_t v107 = v88;
        uint64_t v108 = v87;
        long long v109 = 0;
        uint64_t v110 = 0;
        long long v111 = v95;
        uint64_t v29 = v82;
        uint64_t v112 = v85;
        uint64_t v113 = v82;
        uint64_t v114 = v96;
        sqlite3_int64 v115 = v97;
        char v116 = v7;
        uint64_t v117 = 1;
        sub_24F781274(&qword_26B1F7358);
        char v68 = swift_allocObject();
        unint64_t v80 = xmmword_24F8DDBF0;
        *(_OWORD *)(v68 + 16) = xmmword_24F8DDBF0;
        v169 = v7;
        uint64_t v69 = swift_allocObject();
        *(_OWORD *)(v69 + 16) = xmmword_24F8DDBF0;
        memcpy((void *)(v69 + 32), __dst, 0xA3uLL);
        uint64_t v118 = 0x544E554F43;
        unint64_t v119 = 0xE500000000000000;
        LOWORD(v120) = 257;
        int v121 = (void (*)(void *__return_ptr, void))v69;
        sub_24F7A45E4((uint64_t)&v118);
        sub_24F76F710((uint64_t)&v118, (uint64_t)v140);
        memcpy((void *)(v68 + 32), v140, 0xA3uLL);
        uint64_t v70 = sub_24F77229C();
        *(void *)(v70 + 16) = v68;
        uint64_t v31 = sub_24F80AD10();
        *(void *)(v31 + 16) = sub_24F80AB60;
        *(void *)(v31 + 24) = v70;
        char v7 = v169;
        sub_24F809730((uint64_t)v157);
        sub_24F7D8D44(v103);
        swift_release();
        uint64_t v34 = v95;
        v141[0] = v93;
        v141[1] = v91;
        v141[2] = v89;
        v141[3] = v17;
        BOOL v33 = v85;
        v141[4] = v16;
        BOOL v35 = v96;
        v141[5] = v19;
        v141[6] = v101;
        v141[7] = MEMORY[0x263F8EE78];
        v142 = 0;
        v143 = v99;
        size_t v36 = v98;
        v144 = v98;
        v145 = v88;
        v146 = v87;
        v147 = 0;
        v148 = 0;
        v149 = v95;
        v150 = v85;
        v151 = v82;
        v152 = v96;
        uint64_t v44 = v97;
        v153 = v97;
        v154 = v169;
        v155 = 1;
        unint64_t v45 = sub_24F7920F8(v141);
      }
      v140[0] = v93;
      v140[1] = v91;
      v140[2] = v89;
      v140[3] = sub_24F7AD2C4;
      v140[4] = v31;
      v140[5] = v86;
      v140[6] = v101;
      v140[7] = MEMORY[0x263F8EE78];
      LOBYTE(v140[8]) = 0;
      v140[9] = v99;
      v140[10] = v36;
      sub_24F776004((uint64_t)v45, v46, v47, v48, v49, v50, v51, v52, v76, v78, v80, *((uint64_t *)&v80 + 1), v82, v83, v85, v86, v87, v88);
      v140[15] = v34;
      v140[16] = v33;
      v140[17] = v29;
      v140[18] = v35;
      v140[19] = v44;
      LOBYTE(v140[20]) = v7;
      BYTE1(v140[20]) = 1;
      memcpy(v165, v140, sizeof(v165));
      sub_24F7D8D44(v140);
      sub_24F7ABBDC();
      if (v84)
      {
        sub_24F809730((uint64_t)v157);
        sub_24F7920F8(v140);
        sub_24F7920F8(v140);
        goto LABEL_6;
      }
      uint64_t v72 = v71;
      sub_24F7920F8(v140);
      if ((v72 & 1) == 0)
      {
        sub_24F7920F8(v140);
        sub_24F809730((uint64_t)v157);
        goto LABEL_6;
      }
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_4:
    uint64_t v6 = v4;
LABEL_5:
    sub_24F803504(v6);
LABEL_6:
    sub_24F77BC10();
    return;
  }
  if (v18)
  {
    swift_bridgeObjectRelease();
    if ((*((unsigned char *)v3 + 104) & 1) == 0)
    {
      v163 = *((void *)v3 + 7);
      v164 = *((unsigned char *)v3 + 64);
      uint64_t v102 = *((void *)v3 + 16);
      uint64_t v92 = *((void *)v3 + 5);
      uint64_t v94 = *((void *)v3 + 17);
      v168 = v7;
      uint64_t v53 = *((void *)v3 + 6);
      uint64_t v90 = *v3;
      uint64_t v54 = *((void *)v3 + 2);
      sub_24F7D8D44(v3);
      sub_24F809590((uint64_t)&v163);
      uint64_t v55 = MEMORY[0x263F8EE78];
      BOOL v56 = sub_24F8CEC70();
      sub_24F80AD4C(v56, v56, v57, v58, (uint64_t)sub_24F801AF8, v59, v60, v61, v75, v77);
      uint64_t v63 = v62;
      uint64_t v65 = v64;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v66 = sub_24F77229C();
      *(void *)(v66 + 16) = &unk_2700FDEF0;
      uint64_t v67 = sub_24F80AD10();
      *(void *)(v67 + 16) = sub_24F809648;
      *(void *)(v67 + 24) = v66;
      swift_release();
      *(_OWORD *)__src = v90;
      *(void *)&__src[16] = v54;
      *(void *)&__src[24] = sub_24F7AD2C4;
      *(void *)&__src[32] = v67;
      *(void *)&__src[40] = v92;
      *(void *)&__src[48] = v53;
      *(void *)&__src[56] = v55;
      __src[64] = 0;
      *(void *)&__src[72] = v99;
      *(void *)&__src[80] = v98;
      *(void *)&__src[88] = v63;
      *(void *)&__src[96] = v65;
      __src[104] = 0;
      *(void *)&__src[112] = 0;
      *(void *)&__src[120] = v95;
      *(void *)&__src[128] = v102;
      *(void *)&__src[136] = v94;
      *(void *)&__src[144] = v96;
      *(void *)&__src[152] = v97;
      __src[160] = v168;
      __src[161] = 1;
      memcpy(v166, __src, sizeof(v166));
      sub_24F7D8D44(__src);
      sub_24F7ABBDC();
      uint64_t v74 = v73;
      sub_24F7920F8(__src);
      if ((v74 & 1) == 0)
      {
        sub_24F7920F8(__src);
        goto LABEL_6;
      }
      goto LABEL_34;
    }
    goto LABEL_4;
  }
LABEL_35:
  sub_24F770EAC();
  sub_24F76BB08();
  sub_24F8CF9D0();
  __break(1u);
}

__n128 sub_24F800CBC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *((void *)v1 + 6);
  uint64_t v30 = *((void *)v1 + 7);
  char v31 = *((unsigned char *)v1 + 64);
  uint64_t v28 = *((void *)v1 + 19);
  uint64_t v29 = *((void *)v1 + 18);
  char v27 = *((unsigned char *)v1 + 160);
  char v5 = *((unsigned char *)v1 + 161);
  long long v25 = v1[7];
  __n128 v26 = (__n128)v1[8];
  char v24 = *((unsigned char *)v1 + 104);
  uint64_t v6 = *((void *)v1 + 5);
  long long v7 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 11);
  uint64_t v10 = *((void *)v2 + 12);
  long long v20 = *(long long *)((char *)v2 + 24);
  long long v22 = v7;
  long long v23 = *(long long *)((char *)v2 + 72);
  sub_24F7D8D44(v2);
  sub_24F809590((uint64_t)&v30);
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v12 = sub_24F8CEC70();
  sub_24F8011A8(v11, v12, v9, v10, (uint64_t)sub_24F801AF8, 0, v13, v14, v20, *((uint64_t *)&v20 + 1));
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = v22;
  *(void *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 24) = v21;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 72) = v23;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v18;
  *(unsigned char *)(a1 + 104) = v24;
  __n128 result = v26;
  *(_OWORD *)(a1 + 112) = v25;
  *(__n128 *)(a1 + 128) = v26;
  *(void *)(a1 + 144) = v29;
  *(void *)(a1 + 152) = v28;
  *(unsigned char *)(a1 + 160) = v27;
  *(unsigned char *)(a1 + 161) = v5;
  return result;
}

uint64_t sub_24F800E40(uint64_t a1)
{
  char v6 = *(unsigned char *)(v1 + 32);
  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_24F82862C(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v7)
  {
    uint64_t v5 = sub_24F8289CC(v6, v3);
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

void *sub_24F800F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24F80AB78;
  *(void *)(v7 + 24) = v6;
  long long v39 = *(_OWORD *)(v3 + 24);
  swift_bridgeObjectRetain();
  sub_24F7D8D44((void *)v3);
  sub_24F809564((uint64_t)&v39);
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v29 = *(void *)(v3 + 48);
  uint64_t v30 = *(void *)(v3 + 40);
  uint64_t v28 = *(void *)(v3 + 56);
  char v27 = *(unsigned char *)(v3 + 64);
  uint64_t v24 = *(void *)(v3 + 80);
  uint64_t v26 = *(void *)(v3 + 72);
  uint64_t v10 = *(void *)(v3 + 88);
  uint64_t v11 = *(void *)(v3 + 96);
  char v12 = *(unsigned char *)(v3 + 104);
  uint64_t v37 = *(void *)(v3 + 112);
  uint64_t v35 = *(void *)(v3 + 128);
  uint64_t v36 = *(void *)(v3 + 120);
  uint64_t v33 = *(void *)(v3 + 144);
  uint64_t v34 = *(void *)(v3 + 136);
  uint64_t v32 = *(void *)(v3 + 152);
  char v31 = *(unsigned char *)(v3 + 160);
  char v13 = *(unsigned char *)(v3 + 161);
  v40[0] = *(void *)v3;
  uint64_t v38 = v40[0];
  v40[1] = v8;
  _OWORD v40[2] = v9;
  v40[3] = sub_24F7AD2C4;
  v40[4] = v7;
  v40[5] = v30;
  v40[6] = v29;
  v40[7] = v28;
  char v41 = v27;
  uint64_t v42 = v26;
  uint64_t v43 = v24;
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  char v46 = v12;
  uint64_t v47 = v37;
  uint64_t v48 = v36;
  uint64_t v49 = v35;
  uint64_t v50 = v34;
  uint64_t v51 = v33;
  uint64_t v52 = v32;
  char v53 = v31;
  char v54 = v13;
  sub_24F7D8D44(v40);
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v15 = sub_24F8CEC70();
  sub_24F8011A8(v14, v15, v10, v11, (uint64_t)sub_24F8018E4, 0, v16, v17, v23, v24);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24F7920F8(v40);
  char v55 = v13;
  *(void *)a2 = v38;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = sub_24F7AD2C4;
  *(void *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v30;
  *(void *)(a2 + 48) = v29;
  *(void *)(a2 + 56) = v28;
  *(unsigned char *)(a2 + 64) = v27;
  *(void *)(a2 + 72) = v26;
  *(void *)(a2 + 80) = v25;
  *(void *)(a2 + 88) = v19;
  *(void *)(a2 + 96) = v21;
  *(unsigned char *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = v37;
  *(void *)(a2 + 120) = v36;
  *(void *)(a2 + 128) = v35;
  *(void *)(a2 + 136) = v34;
  *(void *)(a2 + 144) = v33;
  *(void *)(a2 + 152) = v32;
  *(unsigned char *)(a2 + 160) = v31;
  *(unsigned char *)(a2 + 161) = v55;
  return result;
}

void sub_24F8011A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void (*v15)(void *__return_ptr, unsigned char *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  const void *v25;
  unint64_t v26;
  char v27;
  char v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void (*v42)(void *__return_ptr, unsigned char *);
  unint64_t v43;
  uint64_t v44;
  unsigned char v45[216];
  unsigned char v46[216];
  void v47[27];
  unsigned char v48[232];
  unsigned char __dst[216];
  void __src[30];

  sub_24F76FF94();
  uint64_t v14 = v10;
  uint64_t v42 = v15;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v12 + 16);
  if (v20)
  {
    uint64_t v21 = v13;
    char v41 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (*(void *)(v21 + 16))
    {
      unint64_t v11 = v41 + 40;
      while (1)
      {
        long long v22 = *(void *)(v11 - 8);
        uint64_t v23 = *(void *)v11;
        swift_bridgeObjectRetain_n();
        sub_24F782950();
        if ((v24 & 1) == 0) {
          break;
        }
        sub_24F76FFAC();
        memcpy(__dst, v25, 0xD2uLL);
        sub_24F7ADF80((uint64_t)__dst);
        swift_bridgeObjectRelease();
        __src[0] = v22;
        __src[1] = v23;
        memcpy(&__src[2], __dst, 0xD2uLL);
        swift_bridgeObjectRetain();
        sub_24F7ADF80((uint64_t)__dst);
        sub_24F7AE06C((uint64_t)__src);
        memcpy(v48, __src, 0xE2uLL);
        v42(v47, &v48[16]);
        if (v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F7AE06C((uint64_t)__src);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        uint64_t v43 = v11;
        uint64_t v44 = v20;
        memcpy(v46, v47, 0xD2uLL);
        sub_24F7ADF80((uint64_t)v46);
        swift_isUniquelyReferenced_nonNull_native();
        a10 = v17;
        sub_24F782950();
        sub_24F80AC0C();
        if (v28) {
          goto LABEL_24;
        }
        unint64_t v11 = v26;
        uint64_t v29 = v27;
        sub_24F781274(&qword_26B1F5858);
        if (sub_24F8CF980())
        {
          uint64_t v30 = sub_24F782950();
          if ((v29 & 1) != (v31 & 1)) {
            goto LABEL_27;
          }
          unint64_t v11 = v30;
        }
        if (v29) {
          goto LABEL_26;
        }
        sub_24F80AE64(v17 + 8 * (v11 >> 6));
        uint64_t v33 = (void *)(v32 + 16 * v11);
        *uint64_t v33 = v22;
        v33[1] = v23;
        memcpy((void *)(*(void *)(v17 + 56) + 216 * v11), v46, 0xD2uLL);
        sub_24F80AE8C();
        if (v28) {
          goto LABEL_25;
        }
        *(void *)(v17 + 16) = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24F787184();
          uint64_t v19 = v38;
        }
        uint64_t v36 = *(void *)(v19 + 16);
        uint64_t v35 = *(void *)(v19 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_24F772244(v35);
          sub_24F787184();
          uint64_t v19 = v39;
        }
        *(void *)(v19 + 16) = v36 + 1;
        uint64_t v37 = v19 + 16 * v36;
        *(void *)(v37 + 32) = v22;
        *(void *)(v37 + 40) = v23;
        sub_24F7AE180((uint64_t)v46);
        sub_24F7AE06C((uint64_t)__src);
        --v20;
        if (v44 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        unint64_t v11 = v43 + 16;
        uint64_t v14 = 0;
        if (!*(void *)(v21 + 16)) {
          goto LABEL_22;
        }
      }
    }
    else
    {
LABEL_22:
      __break(1u);
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    unint64_t v40 = (void *)(*(void *)(a10 + 56) + 216 * v11);
    memcpy(v45, v40, 0xD2uLL);
    memcpy(v40, v46, 0xD2uLL);
    swift_bridgeObjectRelease();
    sub_24F7AE180((uint64_t)v45);
    sub_24F770EAC();
    sub_24F80AC5C();
    sub_24F8CF9D0();
    __break(1u);
LABEL_27:
    sub_24F8CFEA0();
    __break(1u);
  }
  else
  {
LABEL_21:
    sub_24F77BC10();
  }
}

void *sub_24F80154C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, void *(*a4)(uint64_t *__return_ptr))
{
  return sub_24F801608(a1, a2, a3, a4);
}

void *sub_24F801564(uint64_t a1, void (*a2)(void *), uint64_t a3, void *(*a4)(void *__return_ptr))
{
  uint64_t result = a4(__src);
  if (!v4)
  {
    a2(__src);
    memcpy(v7, __src, 0xA3uLL);
    return (void *)sub_24F76F994((uint64_t)v7);
  }
  return result;
}

void *sub_24F801608(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, void *(*a4)(uint64_t *__return_ptr))
{
  uint64_t result = a4(&v7);
  if (!v4)
  {
    a2(&v8, &v7);
    swift_bridgeObjectRelease();
    return (void *)v8;
  }
  return result;
}

uint64_t sub_24F801688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8016A4(a1, a2, a3, a4) & 1;
}

uint64_t sub_24F8016A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_24F8CFD00() & 1;
  }
}

uint64_t sub_24F8016E8(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = 0;
  for (uint64_t i = (uint64_t *)(a3 + 40); ; i += 2)
  {
    uint64_t v8 = *i;
    v11[0] = *(i - 1);
    v11[1] = v8;
    swift_bridgeObjectRetain();
    char v9 = a1(v11);
    swift_bridgeObjectRelease();
    if (v3 || (v9 & 1) != 0) {
      break;
    }
    if (v4 == ++v6) {
      return 0;
    }
  }
  return v6;
}

void *sub_24F8017AC()
{
  return &unk_2700FE080;
}

uint64_t sub_24F8017B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24F795850();
    uint64_t v3 = v11;
    uint64_t v5 = (char *)(a2 + 32);
    do
    {
      memcpy(__dst, v5, 0xA3uLL);
      sub_24F76F994((uint64_t)__dst);
      uint64_t v11 = v3;
      unint64_t v6 = *(void *)(v3 + 16);
      if (v6 >= *(void *)(v3 + 24) >> 1)
      {
        sub_24F795850();
        uint64_t v3 = v11;
      }
      memcpy(v8, __dst, 0xA3uLL);
      sub_24F799920(v8);
      sub_24F7997BC((uint64_t)v8, (uint64_t)__src);
      *(void *)(v3 + 16) = v6 + 1;
      memcpy((void *)(v3 + 184 * v6 + 32), __src, 0xB8uLL);
      v5 += 168;
      --v2;
    }
    while (v2);
  }
  return v3;
}

void *sub_24F8018E4@<X0>(void *__src@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, __src, 0xD2uLL);
  long long v8 = *(_OWORD *)&__dst[1];
  uint64_t v3 = __dst[3];
  uint64_t v4 = __dst[4];
  char v5 = __dst[5];
  char v6 = __dst[0];
  memcpy(v9, &__dst[6], sizeof(v9));
  sub_24F7ADF80((uint64_t)__dst);
  sub_24F800F48(__srca, MEMORY[0x263F8EE78]);
  sub_24F7920F8(&__dst[6]);
  memcpy(&v12[7], __srca, 0xA2uLL);
  *(unsigned char *)a2 = v6;
  *(_OWORD *)(a2 + 8) = v8;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  *(unsigned char *)(a2 + 40) = v5;
  return memcpy((void *)(a2 + 41), v12, 0xA9uLL);
}

void sub_24F8019CC(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X1>, void (*a3)(uint64_t)@<X3>, void *a4@<X8>)
{
  a2(&v9);
  if (!v4)
  {
    uint64_t v8 = v9;
    a3(a1);
    sub_24F793314();
    *a4 = v8;
  }
}

uint64_t sub_24F801A74()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F801A90(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, void (*a4)(uint64_t))
{
  return sub_24F807FCC(a1, a2, a3, a4);
}

uint64_t sub_24F801AA8@<X0>(const void *a1@<X1>, void *a2@<X8>)
{
  return sub_24F76F994((uint64_t)a1);
}

void sub_24F801AF8()
{
  sub_24F76FF94();
  uint64_t v1 = v0;
  memcpy(__dst, v2, 0xD2uLL);
  long long v25 = *(_OWORD *)((char *)__dst + 8);
  uint64_t v23 = *(void *)&__dst[2];
  uint64_t v24 = *((void *)&__dst[1] + 1);
  char v21 = __dst[0];
  char v22 = BYTE8(__dst[2]);
  uint64_t v29 = *((void *)&__dst[12] + 1);
  uint64_t v30 = *(void *)&__dst[12];
  char v32 = __dst[13];
  char v3 = BYTE1(__dst[13]);
  long long v27 = __dst[10];
  long long v28 = __dst[11];
  char v26 = BYTE8(__dst[9]);
  uint64_t v19 = *(void *)&__dst[6];
  uint64_t v20 = *((void *)&__dst[5] + 1);
  uint64_t v16 = *(void *)&__dst[4];
  uint64_t v4 = *((void *)&__dst[8] + 1);
  uint64_t v5 = *(void *)&__dst[9];
  long long v14 = *(_OWORD *)((char *)&__dst[4] + 8);
  long long v17 = __dst[3];
  long long v18 = *(_OWORD *)((char *)&__dst[7] + 8);
  sub_24F7ADF80((uint64_t)__dst);
  sub_24F7D8D44(&__dst[3]);
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v7 = sub_24F8CEC70();
  sub_24F8011A8(v6, v7, v4, v5, (uint64_t)sub_24F801AF8, 0, v8, v9, v14, *((uint64_t *)&v14 + 1));
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7920F8(&__dst[3]);
  *(unsigned char *)uint64_t v1 = v21;
  *(_OWORD *)(v1 + 8) = v25;
  *(void *)(v1 + 24) = v24;
  *(void *)(v1 + 32) = v23;
  *(unsigned char *)(v1 + 40) = v22;
  *(_OWORD *)(v1 + 48) = v17;
  *(void *)(v1 + 64) = v16;
  *(_OWORD *)(v1 + 72) = v15;
  *(void *)(v1 + 88) = v20;
  *(void *)(v1 + 96) = v19;
  *(void *)(v1 + 104) = v6;
  *(unsigned char *)(v1 + 112) = 0;
  *(_OWORD *)(v1 + 120) = v18;
  *(void *)(v1 + 136) = v11;
  *(void *)(v1 + 144) = v13;
  *(unsigned char *)(v1 + 152) = v26;
  *(_OWORD *)(v1 + 160) = v27;
  *(_OWORD *)(v1 + 176) = v28;
  *(void *)(v1 + 192) = v30;
  *(void *)(v1 + 200) = v29;
  *(unsigned char *)(v1 + 208) = v32;
  *(unsigned char *)(v1 + 209) = v3;
  sub_24F77BC10();
}

uint64_t sub_24F801CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v5 = swift_retain();
    sub_24F8298B0(v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_24F829D14(a2, a3);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  return a2;
}

void sub_24F801D6C()
{
  sub_24F76FF94();
  uint64_t v10 = *v9;
  if (!*(void *)(*v9 + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = v0;
  uint64_t v4 = v5;
  uint64_t v2 = v6;
  uint64_t v35 = v7;
  uint64_t v36 = v10;
  uint64_t v37 = v8;
  memcpy(v50, (const void *)(v10 + 32), 0xE3uLL);
  char v11 = BYTE2(v50[28]);
  uint64_t v12 = v50[0];
  unint64_t v13 = v50[1];
  char v14 = v50[2];
  sub_24F79900C((uint64_t)v50);
  uint64_t v15 = sub_24F8690F8((v11 & 1) == 0, v12, v13, v14);
  uint64_t v17 = v16;
  sub_24F7AD5F4((uint64_t)v50);
  memcpy(v49, (const void *)(v4 + 48), 0xA2uLL);
  memcpy(v48, (const void *)(v4 + 48), 0xA2uLL);
  v47[0] = v15;
  v47[1] = v17;
  sub_24F7ADF80(v4);
  sub_24F7D8D44(v49);
  sub_24F808AD4(v40);
  sub_24F8096D0((uint64_t)v40, (uint64_t)v51, &qword_26B1F5708);
  sub_24F8096D0((uint64_t)v51, (uint64_t)v52, &qword_26B1F5708);
  uint64_t v18 = sub_24F808F30((uint64_t)v52);
  if (v18 == 1)
  {
    uint64_t v34 = v0;
    sub_24F7920F8(v49);
    swift_bridgeObjectRelease();
LABEL_8:
    memcpy(v39, v48, 0xA2uLL);
    uint64_t v25 = *(void *)(v4 + 8);
    uint64_t v26 = *(void *)(v4 + 16);
    uint64_t v27 = *(void *)(v4 + 24);
    uint64_t v28 = *(void *)(v4 + 32);
    v40[0] = *(unsigned char *)v4;
    uint64_t v41 = v25;
    uint64_t v42 = v26;
    uint64_t v43 = v27;
    uint64_t v44 = v28;
    char v29 = *(unsigned char *)(v4 + 40);
    char v45 = v29;
    memcpy(v46, v48, sizeof(v46));
    BOOL v30 = v40[0] > 1u;
    memcpy(&v38[7], v48, 0xA2uLL);
    sub_24F781274(&qword_26B1F5658);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_24F8DDBF0;
    *(void *)(v31 + 32) = v2;
    *(void *)(v31 + 40) = v35;
    *(unsigned char *)(v31 + 48) = 3;
    *(void *)(v31 + 56) = v25;
    *(void *)(v31 + 64) = v26;
    *(void *)(v31 + 72) = v27;
    *(void *)(v31 + 80) = v28;
    *(unsigned char *)(v31 + 88) = v29;
    memcpy((void *)(v31 + 89), v38, 0xA9uLL);
    *(unsigned char *)(v31 + 258) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F799140(v25, v26, v27, v28, v29);
    sub_24F7D8D44(v39);
    swift_bridgeObjectRetain();
    sub_24F793240();
    sub_24F7AE180((uint64_t)v40);
    swift_bridgeObjectRelease();
    *uint64_t v37 = v31;
    sub_24F77BC10();
    return;
  }
  uint64_t v19 = v49[11];
  MEMORY[0x270FA5388](v18);
  v33[2] = v47;
  swift_bridgeObjectRetain();
  unint64_t v1 = sub_24F8016E8(sub_24F80AB44, (uint64_t)v33, v19);
  char v21 = v20;
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    uint64_t v22 = v48[11];
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_6:
      unint64_t v23 = *(void *)(v22 + 16);
      if (v1 < v23)
      {
        uint64_t v34 = v3;
        unint64_t v24 = v23 - 1;
        sub_24F8B4E84((char *)(v22 + 16 * v1 + 48), v23 - 1 - v1, (char *)(v22 + 16 * v1 + 32));
        *(void *)(v22 + 16) = v24;
        swift_bridgeObjectRelease();
        sub_24F808F48(v51);
        sub_24F7920F8(v49);
        swift_bridgeObjectRelease();
        v48[11] = v22;
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_12;
    }
LABEL_10:
    sub_24F83CC28();
    uint64_t v22 = v32;
    goto LABEL_6;
  }
LABEL_12:
  __break(1u);
}

void sub_24F8020D8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = (char *)(swift_bridgeObjectRetain() + 48);
    uint64_t v7 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v8 = *((void *)v6 - 2);
      uint64_t v9 = *((void *)v6 - 1);
      char v10 = *v6;
      v19[0] = v8;
      v19[1] = v9;
      char v20 = v10;
      sub_24F808C90(v8, v9, v10);
      a3(&v21, v19, a2);
      if (v3)
      {
        sub_24F808CA0(v8, v9, v10);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      sub_24F808CA0(v8, v9, v10);
      uint64_t v11 = v21;
      uint64_t v12 = *(void *)(v21 + 16);
      uint64_t v13 = *(void *)(v7 + 16);
      if (__OFADD__(v13, v12)) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v7 + 24) >> 1)
      {
        sub_24F787918();
        uint64_t v7 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        if ((*(void *)(v7 + 24) >> 1) - *(void *)(v7 + 16) < v12) {
          goto LABEL_20;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v15 = *(void *)(v7 + 16);
          BOOL v16 = __OFADD__(v15, v12);
          uint64_t v17 = v15 + v12;
          if (v16) {
            goto LABEL_21;
          }
          *(void *)(v7 + 16) = v17;
        }
      }
      else if (v12)
      {
        goto LABEL_19;
      }
      v6 += 24;
      swift_bridgeObjectRelease();
      if (!--v5)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_24F8022A4()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_24F7FF7B4(v2, v2, v1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0[9];
  uint64_t v5 = v0[10];
  uint64_t v17 = v6;
  uint64_t v16 = v5;
  v15[0] = v6;
  v15[1] = v5;
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    sub_24F8092B8((uint64_t)&v17);
    sub_24F8092B8((uint64_t)&v16);
    swift_bridgeObjectRetain();
    uint64_t v8 = v7 - 1;
    for (uint64_t i = 32; ; i += 216)
    {
      memcpy(v14, (const void *)(v4 + i), 0xD2uLL);
      if ((v14[0] & 0xFE) != 2)
      {
        memcpy(__dst, &v14[48], sizeof(__dst));
        uint64_t v10 = sub_24F7ADF80((uint64_t)v14);
        uint64_t v11 = sub_24F8022A4(v10);
        sub_24F7D43D0(v11, v12, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F7AE180((uint64_t)v14);
      }
      if (!v8) {
        break;
      }
      --v8;
    }
    swift_bridgeObjectRelease_n();
    return v15[0];
  }
  else
  {
    sub_24F8092B8((uint64_t)&v17);
    sub_24F8092B8((uint64_t)&v16);
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_24F802408()
{
  sub_24F76B80C();
  uint64_t v11 = *v10;
  unsigned int v52 = v8;
  if (v8 >= 2u)
  {
    if (v8 == 2)
    {
      char v12 = 0;
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      if (!v13)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      char v12 = *(unsigned char *)(v11 + 232 * v13 + 26) ^ 1;
    }
  }
  else
  {
    char v12 = 1;
  }
  uint64_t v14 = *(void *)(v11 + 16);
  if (!v14)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v49 = v9;
  uint64_t v15 = v11 + 232 * v14;
  uint64_t v16 = *(void *)(v15 - 200);
  unint64_t v17 = *(void *)(v15 - 192);
  char v18 = *(unsigned char *)(v15 - 184);
  sub_24F799128(v16, v17, v18);
  uint64_t v50 = sub_24F8690F8(v12 & 1, v16, v17, v18);
  uint64_t v20 = v19;
  sub_24F7AD5DC(v16, v17, v18);
  uint64_t v5 = *(void *)(v15 - 176);
  uint64_t v1 = *(void *)(v15 - 168);
  uint64_t v7 = *(void *)(v15 - 160);
  uint64_t v21 = *(void *)(v15 - 152);
  uint64_t v6 = *(unsigned __int8 *)(v15 - 144);
  memcpy(__dst, (const void *)(v15 - 136), 0xA2uLL);
  if (v52 == 2)
  {
LABEL_12:
    uint64_t v51 = v20;
    LOBYTE(__src[0]) = v52;
    __src[1] = v5;
    __src[2] = v1;
    __src[3] = v7;
    __src[4] = v21;
    LOBYTE(__src[5]) = v6;
    memcpy(&__src[6], __dst, 0xA2uLL);
    unint64_t v0 = sub_24F8904D0(1, v11);
    if (v23 == (unsigned char *)(v24 >> 1))
    {
      memcpy(v58, __src, 0xD2uLL);
      sub_24F7D8D44(__dst);
      sub_24F80AD28();
      swift_bridgeObjectRetain();
      sub_24F802A28(v58, v50, v51, (uint64_t)v54);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_24F7AE180((uint64_t)__src);
      char v25 = v54[160];
      char v26 = v54[161];
      long long v28 = *(_OWORD *)&v54[128];
      long long v27 = *(_OWORD *)&v54[144];
      long long v29 = *(_OWORD *)&v54[112];
      char v30 = v54[104];
      long long v31 = *(_OWORD *)&v54[88];
      long long v32 = *(_OWORD *)&v54[72];
      uint64_t v33 = *(void *)&v54[56];
      char v34 = v54[64];
      long long v35 = *(_OWORD *)&v54[40];
      long long v36 = *(_OWORD *)&v54[24];
      uint64_t v37 = *(void *)v54;
      uint64_t v38 = *(void *)&v54[8];
      uint64_t v39 = *(void *)&v54[16];
LABEL_23:
      LOBYTE(v58[0]) = v26;
      *(void *)uint64_t v49 = v37;
      *(void *)(v49 + 8) = v38;
      *(void *)(v49 + 16) = v39;
      *(_OWORD *)(v49 + 24) = v36;
      *(_OWORD *)(v49 + 40) = v35;
      *(void *)(v49 + 56) = v33;
      *(unsigned char *)(v49 + 64) = v34;
      *(_OWORD *)(v49 + 72) = v32;
      *(_OWORD *)(v49 + 88) = v31;
      *(unsigned char *)(v49 + 104) = v30;
      *(_OWORD *)(v49 + 112) = v29;
      *(_OWORD *)(v49 + 128) = v28;
      *(_OWORD *)(v49 + 144) = v27;
      *(unsigned char *)(v49 + 160) = v25;
      *(unsigned char *)(v49 + 161) = v26;
      sub_24F77344C();
      return;
    }
    uint64_t v3 = v22;
    uint64_t v4 = v23;
    unint64_t v2 = v24;
    sub_24F7D8D44(__dst);
    sub_24F80AD28();
    swift_bridgeObjectRetain();
    uint64_t v40 = swift_unknownObjectRetain();
    uint64_t v41 = sub_24F81D9E0(v40, (uint64_t)v3, (uint64_t)v4, v2);
    uint64_t v42 = *(void *)(v41 + 16);
    if (v42)
    {
      uint64_t v43 = v41;
      uint64_t v3 = v56;
      uint64_t v4 = v55;
      unint64_t v2 = v41 + 32;
      memcpy(v55, (const void *)(v41 + 32 + 232 * v42 - 168), sizeof(v55));
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = MEMORY[0x263F8EE78];
      uint64_t v1 = swift_allocObject();
      *(void *)(v1 + 16) = sub_24F808F14;
      *(void *)(v1 + 24) = v44;
      sub_24F7D8D44(v55);
      swift_release();
      *(_OWORD *)BOOL v56 = *(_OWORD *)v55;
      *(void *)&v56[16] = *(void *)&v55[16];
      *(void *)&v56[24] = sub_24F7AD2C4;
      *(void *)&v56[32] = v1;
      *(_OWORD *)&v56[40] = *(_OWORD *)&v55[40];
      *(void *)&v56[56] = *(void *)&v55[56];
      v56[64] = v55[64];
      *(_OWORD *)&v56[72] = *(_OWORD *)&v55[72];
      *(_OWORD *)&v56[88] = *(_OWORD *)&v55[88];
      v56[104] = v55[104];
      *(_OWORD *)&v56[112] = *(_OWORD *)&v55[112];
      *(_OWORD *)&v56[128] = *(_OWORD *)&v55[128];
      *(_OWORD *)&v56[144] = *(_OWORD *)&v55[144];
      v56[160] = v55[160];
      v56[161] = v55[161];
      memcpy(v76, v56, 0xA2uLL);
      memcpy(v54, __src, 0xD2uLL);
      unint64_t v0 = (unint64_t)v76;
      LOBYTE(v11) = v51;
      sub_24F802A28(v54, v50, v51, (uint64_t)v57);
      sub_24F7920F8(v56);
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void *)(v43 + 16);
      if (v45)
      {
        memcpy(v58, (const void *)(v2 + 232 * v45 - 232), 0xE3uLL);
        LOBYTE(v51) = BYTE2(v58[28]);
        uint64_t v5 = v58[3];
        uint64_t v1 = v58[4];
        unint64_t v2 = v58[5];
        uint64_t v3 = (unsigned char *)v58[6];
        LOBYTE(v4) = v58[7];
        uint64_t v6 = v58[0];
        uint64_t v7 = v58[1];
        LOBYTE(v11) = v58[2];
        sub_24F79900C((uint64_t)v58);
        sub_24F7920F8(&v58[8]);
        memcpy(&v59[7], v57, 0xA2uLL);
        unint64_t v0 = *(void *)(v43 + 16);
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          if (v0) {
            goto LABEL_18;
          }
          goto LABEL_28;
        }
LABEL_27:
        sub_24F83CCE4();
        uint64_t v43 = v48;
        if (v0)
        {
LABEL_18:
          if (v0 <= *(void *)(v43 + 16))
          {
            unint64_t v46 = v43 + 232 * v0;
            memcpy(v54, (const void *)(v46 - 200), sizeof(v54));
            *(void *)(v46 - 200) = v6;
            *(void *)(v46 - 192) = v7;
            *(unsigned char *)(v46 - 184) = v11;
            *(_DWORD *)(v46 - 183) = *(_DWORD *)v60;
            *(_DWORD *)(v46 - 180) = *(_DWORD *)&v60[3];
            *(void *)(v46 - 176) = v5;
            *(void *)(v46 - 168) = v1;
            *(void *)(v46 - 160) = v2;
            *(void *)(v46 - 152) = v3;
            *(unsigned char *)(v46 - 144) = (_BYTE)v4;
            memcpy((void *)(v46 - 143), v59, 0xA9uLL);
            *(unsigned char *)(v46 + 26) = v51;
            sub_24F7AD5F4((uint64_t)v54);
            uint64_t v53 = v43;
            swift_bridgeObjectRetain();
            if (v52 == 2) {
              uint64_t v47 = 3;
            }
            else {
              uint64_t v47 = v52;
            }
            sub_24F802408(v63, &v53, v47);
            sub_24F7AE180((uint64_t)__src);
            swift_bridgeObjectRelease_n();
            swift_unknownObjectRelease();
            long long v27 = v73;
            char v25 = v74;
            char v26 = v75;
            long long v28 = v72;
            long long v29 = v71;
            char v30 = v70;
            long long v31 = v69;
            long long v32 = v68;
            char v34 = v67;
            long long v35 = v65;
            long long v36 = v64;
            uint64_t v37 = v63[0];
            uint64_t v38 = v63[1];
            uint64_t v33 = v66;
            uint64_t v39 = v63[2];
            goto LABEL_23;
          }
          goto LABEL_29;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (LOBYTE(__dst[13]) != 1)
  {
    if (__dst[14] | __dst[16])
    {
      sub_24F80AC78();
      goto LABEL_33;
    }
    if ((__dst[20] & 0x100) == 0)
    {
      sub_24F770EAC();
      sub_24F80AE78();
      goto LABEL_35;
    }
    goto LABEL_12;
  }
LABEL_31:
  sub_24F778CB0();
LABEL_33:
  sub_24F770EAC();
  sub_24F76BB08();
LABEL_35:
  sub_24F8CF9D0();
  __break(1u);
}

void sub_24F802A28(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  memcpy(v48, __src, 0xD2uLL);
  memcpy(v46, v4, sizeof(v46));
  v45[0] = a2;
  v45[1] = a3;
  sub_24F7D8D44(v4);
  sub_24F808AD4(v47);
  sub_24F8096D0((uint64_t)v47, (uint64_t)v49, &qword_26B1F5708);
  sub_24F8096D0((uint64_t)v49, (uint64_t)v50, &qword_26B1F5708);
  uint64_t v8 = sub_24F808F30((uint64_t)v50);
  if (v8 == 1)
  {
    sub_24F7ADF80((uint64_t)v48);
    uint64_t v9 = *(void *)&v46[96];
    swift_isUniquelyReferenced_nonNull_native();
    v44[0] = v9;
    sub_24F8085E4(v48, a2, a3, v42);
    *(void *)&v46[96] = v44[0];
    swift_bridgeObjectRelease();
    sub_24F8096D0((uint64_t)v42, (uint64_t)v43, &qword_26B1F5708);
    sub_24F8096D0((uint64_t)v43, (uint64_t)v44, &qword_26B1F5708);
    if (sub_24F808F30((uint64_t)v44) == 1)
    {
      uint64_t v10 = *(void *)&v46[88];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F787184();
        uint64_t v10 = v29;
      }
      unint64_t v11 = *(void *)(v10 + 16);
      if (v11 >= *(void *)(v10 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v10 = v30;
      }
      *(void *)(v10 + 16) = v11 + 1;
      uint64_t v12 = v10 + 16 * v11;
      *(void *)(v12 + 32) = a2;
      *(void *)(v12 + 40) = a3;
LABEL_18:
      uint64_t v22 = *(void *)&v46[16];
      uint64_t v23 = *(void *)&v46[56];
      char v24 = v46[64];
      uint64_t v25 = *(void *)&v46[96];
      char v26 = v46[104];
      char v27 = v46[160];
      LOBYTE(v44[0]) = v46[161];
      *(_OWORD *)a4 = *(_OWORD *)v46;
      *(void *)(a4 + 16) = v22;
      *(_OWORD *)(a4 + 24) = *(_OWORD *)&v46[24];
      *(_OWORD *)(a4 + 40) = *(_OWORD *)&v46[40];
      *(void *)(a4 + 56) = v23;
      *(unsigned char *)(a4 + 64) = v24;
      *(_OWORD *)(a4 + 72) = *(_OWORD *)&v46[72];
      *(void *)(a4 + 88) = v10;
      *(void *)(a4 + 96) = v25;
      *(unsigned char *)(a4 + 104) = v26;
      long long v28 = *(_OWORD *)&v46[128];
      *(_OWORD *)(a4 + 112) = *(_OWORD *)&v46[112];
      *(_OWORD *)(a4 + 128) = v28;
      *(_OWORD *)(a4 + 144) = *(_OWORD *)&v46[144];
      *(unsigned char *)(a4 + 160) = v27;
      *(unsigned char *)(a4 + 161) = v44[0];
      return;
    }
    goto LABEL_22;
  }
  uint64_t v13 = v4[11];
  MEMORY[0x270FA5388](v8);
  uint64_t v36 = (uint64_t)v45;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_24F8016E8(sub_24F8090C0, (uint64_t)&v35, v13);
  char v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    __break(1u);
LABEL_22:
    char v34 = v43;
LABEL_25:
    sub_24F808F48(v34);
    int v37 = 0;
    uint64_t v36 = 59;
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)&v46[88];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F83CC28();
    uint64_t v10 = v31;
  }
  unint64_t v17 = *(void *)(v10 + 16);
  if (v14 >= v17)
  {
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v18 = v17 - 1;
  sub_24F8B4E84((char *)(v10 + 16 * v14 + 48), v17 - 1 - v14, (char *)(v10 + 16 * v14 + 32));
  *(void *)(v10 + 16) = v18;
  swift_bridgeObjectRelease();
  *(void *)&v46[88] = v10;
  sub_24F8096D0((uint64_t)v49, (uint64_t)v42, &qword_26B1F5708);
  memcpy(v47, v42, 0xD2uLL);
  memcpy(v44, v48, 0xD2uLL);
  sub_24F802FE4();
  sub_24F8096D0((uint64_t)&v41, (uint64_t)v43, &qword_26B1F5708);
  sub_24F8096D0((uint64_t)v43, (uint64_t)v44, &qword_26B1F5708);
  if (sub_24F808F30((uint64_t)v44) != 1)
  {
    memcpy(v47, v44, 0xD2uLL);
    sub_24F7ADF80((uint64_t)v44);
    uint64_t v19 = *(void *)&v46[96];
    swift_isUniquelyReferenced_nonNull_native();
    v40[0] = v19;
    sub_24F8085E4(v47, a2, a3, v38);
    *(void *)&v46[96] = v40[0];
    swift_bridgeObjectRelease();
    sub_24F8096D0((uint64_t)v38, (uint64_t)v39, &qword_26B1F5708);
    sub_24F8096D0((uint64_t)v39, (uint64_t)v40, &qword_26B1F5708);
    if (sub_24F808F30((uint64_t)v40) != 1)
    {
      char v34 = (uint64_t *)v39;
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_15:
      unint64_t v20 = *(void *)(v10 + 16);
      if (v20 >= *(void *)(v10 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v10 = v33;
      }
      *(void *)(v10 + 16) = v20 + 1;
      uint64_t v21 = v10 + 16 * v20;
      *(void *)(v21 + 32) = a2;
      *(void *)(v21 + 40) = a3;
      sub_24F808F48(v49);
      sub_24F808F48(v43);
      goto LABEL_18;
    }
LABEL_20:
    sub_24F787184();
    uint64_t v10 = v32;
    goto LABEL_15;
  }
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_24F8CF7D0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  int v37 = 0;
  uint64_t v36 = 501;
LABEL_26:
  sub_24F8CF9D0();
  __break(1u);
}

void sub_24F802FE4()
{
  sub_24F76B80C();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *v1;
  unsigned __int8 v6 = v1[40];
  memcpy(__dst, v1 + 48, sizeof(__dst));
  char v7 = *(unsigned char *)v0;
  char v8 = *(unsigned char *)(v0 + 40);
  memcpy(v59, (const void *)(v0 + 48), sizeof(v59));
  long long v9 = *(_OWORD *)(v0 + 24);
  long long v31 = *(_OWORD *)(v0 + 8);
  long long v32 = v9;
  LOBYTE(v33) = v8;
  long long v10 = *(_OWORD *)(v2 + 24);
  v45[0] = *(_OWORD *)(v2 + 8);
  v45[1] = v10;
  unsigned __int8 v46 = v6;
  sub_24F8080EC((uint64_t *)v45, (uint64_t)__src);
  char v11 = __src[4];
  if (LOBYTE(__src[4]) > 0xFDu) {
    goto LABEL_4;
  }
  uint64_t v12 = __src[0];
  uint64_t v13 = __src[1];
  uint64_t v14 = __src[2];
  uint64_t v15 = __src[3];
  sub_24F80731C();
  sub_24F8096D0((uint64_t)v45, (uint64_t)__src, &qword_269A2B360);
  if (sub_24F77A988((uint64_t)__src) != 1)
  {
    *(void *)&long long v26 = v13;
    *((void *)&v26 + 1) = v14;
    uint64_t v27 = v15;
    memcpy(v30, __src, sizeof(v30));
    char v16 = v48;
    v29[0] = *(_DWORD *)v49;
    *(_DWORD *)((char *)v29 + 3) = *(_DWORD *)&v49[3];
    uint64_t v17 = v50;
    uint64_t v18 = v52;
    uint64_t v24 = v53;
    uint64_t v25 = v51;
    uint64_t v22 = v55;
    uint64_t v23 = v54;
    char v21 = v56;
    char v19 = v57;
    char v20 = sub_24F808264(v5, v7);
    switch(v20)
    {
      case 2:
        goto LABEL_10;
      case 4:
        sub_24F8090E8(v12, v26, *((uint64_t *)&v26 + 1), v27, v11);
        sub_24F8090FC((uint64_t *)v45);
        goto LABEL_4;
      default:
        if (v16)
        {
          sub_24F778CB0();
        }
        else
        {
          if (!(v17 | v18))
          {
            if (v19)
            {
LABEL_10:
              memcpy(&v28[7], v30, 0x68uLL);
              LOBYTE(v31) = v20;
              *((void *)&v31 + 1) = v12;
              long long v32 = v26;
              uint64_t v33 = v27;
              char v34 = v11;
              memcpy(v35, v28, 0x6FuLL);
              v35[111] = v16;
              *(_DWORD *)uint64_t v36 = v29[0];
              *(_DWORD *)&v36[3] = *(_DWORD *)((char *)v29 + 3);
              uint64_t v37 = v17;
              uint64_t v38 = v25;
              uint64_t v39 = v18;
              uint64_t v40 = v24;
              uint64_t v41 = v23;
              uint64_t v42 = v22;
              char v43 = v21;
              char v44 = v19;
              nullsub_1(&v31);
              goto LABEL_5;
            }
            sub_24F770EAC();
            sub_24F80AE78();
LABEL_16:
            sub_24F8CF9D0();
            __break(1u);
            JUMPOUT(0x24F8032CCLL);
          }
          sub_24F80AC78();
        }
        sub_24F770EAC();
        sub_24F76BB08();
        goto LABEL_16;
    }
  }
  sub_24F8090E8(v12, v13, v14, v15, v11);
LABEL_4:
  sub_24F8090E0(&v31);
LABEL_5:
  sub_24F8096D0((uint64_t)&v31, v4, &qword_26B1F5708);
  sub_24F77344C();
}

BOOL sub_24F8032E0(unsigned char *a1)
{
  return (*a1 & 0xFE) != 2;
}

void sub_24F8032F4()
{
  sub_24F76FF94();
  if (!*(void *)(*v1 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_24F77CE04(*v1, v31, v34, v37, v40, v45, v48, v51, v54, v58, v62, v64, v66, v67, v69, v70, v72, v73, v75,
    v76,
    v78,
    v79,
    v81,
    v82,
    v84,
    v86,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116[0]);
  uint64_t v2 = sub_24F77229C();
  *(void *)(v2 + 16) = MEMORY[0x263F8EE78];
  uint64_t v3 = sub_24F80AD10();
  *(void *)(v3 + 16) = sub_24F80AB78;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = v116[4];
  sub_24F7D8D44(v116);
  swift_release();
  sub_24F77C74C();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_24F782AC4(v5);
  sub_24F777354();
  sub_24F7920F8(v0);
  LODWORD(v6) = sub_24F80AEE0();
  if (v6)
  {
    if (v0) {
      goto LABEL_5;
    }
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_9:
  sub_24F83CCE4();
  uint64_t v4 = v6;
  if (!v0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((unint64_t)v0 <= *(void *)(v4 + 16))
  {
    uint64_t v14 = sub_24F80ADEC(v6, v7, v8, v9, v10, v11, v12, v13, v31, v34, v37, v40, v45, v48, v51, v54, v58, v62, v64,
            v66,
            v67,
            v69,
            v70,
            v72,
            v73,
            v75,
            v76,
            v78,
            v79,
            v81,
            v82,
            v84,
            v86);
    sub_24F80ABDC((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v32, v35, v38, v41, v46, v49, v52);
    *(v0 - 15) = v22;
    *(v0 - 14) = sub_24F7AD2C4;
    sub_24F77E848(v23, v24, v25, v26, v27, v28, v29, v30, v33, v36, v39, v42, v43, v44, v47, v50, v53, v55, v56,
      v57,
      v59,
      v60,
      v61,
      v63,
      v65,
      v68,
      v71,
      v74,
      v77,
      v80,
      v83,
      v85,
      v87);
    sub_24F80AE98();
    sub_24F77BC10();
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_24F8033FC()
{
  sub_24F76FF94();
  if (!*(void *)(*v1 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_24F77CE04(*v1, v31, v34, v37, v40, v45, v48, v51, v54, v58, v62, v64, v66, v67, v69, v70, v72, v73, v75,
    v76,
    v78,
    v79,
    v81,
    v82,
    v84,
    v86,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116[0]);
  uint64_t v2 = sub_24F77229C();
  *(void *)(v2 + 16) = MEMORY[0x263F8EE78];
  uint64_t v3 = sub_24F80AD10();
  *(void *)(v3 + 16) = sub_24F80AB78;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = v116[4];
  sub_24F7D8D44(v116);
  swift_release();
  sub_24F77C74C();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_24F782AC4(v5);
  sub_24F777354();
  sub_24F7920F8(v0);
  LODWORD(v6) = sub_24F80AEE0();
  if (v6)
  {
    if (v0) {
      goto LABEL_5;
    }
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_9:
  sub_24F83CCE4();
  uint64_t v4 = v6;
  if (!v0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((unint64_t)v0 <= *(void *)(v4 + 16))
  {
    uint64_t v14 = sub_24F80ADEC(v6, v7, v8, v9, v10, v11, v12, v13, v31, v34, v37, v40, v45, v48, v51, v54, v58, v62, v64,
            v66,
            v67,
            v69,
            v70,
            v72,
            v73,
            v75,
            v76,
            v78,
            v79,
            v81,
            v82,
            v84,
            v86);
    sub_24F80ABDC((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v32, v35, v38, v41, v46, v49, v52);
    *(v0 - 15) = v22;
    *(v0 - 14) = sub_24F7AD2C4;
    sub_24F77E848(v23, v24, v25, v26, v27, v28, v29, v30, v33, v36, v39, v42, v43, v44, v47, v50, v53, v55, v56,
      v57,
      v59,
      v60,
      v61,
      v63,
      v65,
      v68,
      v71,
      v74,
      v77,
      v80,
      v83,
      v85,
      v87);
    sub_24F80AE98();
    sub_24F77BC10();
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_24F803504(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = MEMORY[0x263F8EE78];
  sub_24F7662F0();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x263F8EE80];
  uint64_t v51 = a1;
  if (((unint64_t)"QL with empty selection" & 0x2000000000000000) == 0
    || (((unint64_t)"QL with empty selection" >> 56) & 0xF) != 0)
  {
    unint64_t v9 = *(void *)(v6 + 16);
    if (v9 >= *(void *)(v6 + 24) >> 1)
    {
      sub_24F7662F0();
      uint64_t v7 = v31;
    }
    v47[0] = 0xD000000000000016;
    v47[1] = 0x800000024F8D2A70;
    void v47[2] = v5;
    v47[3] = v8;
    sub_24F7725D4(v47);
    *(void *)(v7 + 16) = v9 + 1;
    sub_24F76C344((uint64_t)v47, v7 + 184 * v9 + 32);
  }
  uint64_t v10 = v5;
  uint64_t v11 = *((void *)v3 + 6);
  uint64_t v49 = *((void *)v3 + 7);
  char v50 = *((unsigned char *)v3 + 64);
  uint64_t v41 = *((void *)v3 + 19);
  uint64_t v42 = *((void *)v3 + 18);
  char v39 = *((unsigned char *)v3 + 161);
  char v40 = *((unsigned char *)v3 + 160);
  long long v37 = v3[7];
  long long v38 = v3[8];
  char v36 = *((unsigned char *)v3 + 104);
  uint64_t v12 = *((void *)v3 + 5);
  uint64_t v13 = *((void *)v3 + 2);
  uint64_t v14 = *((void *)v3 + 11);
  uint64_t v15 = *((void *)v3 + 12);
  long long v32 = *(long long *)((char *)v3 + 24);
  long long v34 = *v3;
  long long v35 = *(long long *)((char *)v3 + 72);
  sub_24F7D8D44(v3);
  sub_24F809590((uint64_t)&v49);
  uint64_t v16 = sub_24F8CEC70();
  sub_24F8011A8(v10, v16, v14, v15, (uint64_t)sub_24F801AF8, 0, v17, v18, v32, *((uint64_t *)&v32 + 1));
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)__src = v34;
  *(_OWORD *)&__src[24] = v33;
  *(void *)&__src[16] = v13;
  *(void *)&__src[40] = v12;
  *(void *)&__src[48] = v11;
  *(void *)&__src[56] = v10;
  __src[64] = 0;
  *(_OWORD *)&__src[72] = v35;
  *(void *)&__src[88] = v20;
  *(void *)&__src[96] = v22;
  __src[104] = v36;
  *(_OWORD *)&__src[112] = v37;
  *(_OWORD *)&__src[128] = v38;
  *(void *)&__src[144] = v42;
  *(void *)&__src[152] = v41;
  __src[160] = v40;
  __src[161] = v39;
  memcpy(__dst, __src, 0xA2uLL);
  sub_24F7AA6BC((uint64_t)__dst);
  sub_24F7AA6E8((uint64_t)__dst, (uint64_t)v46);
  sub_24F7D8D44(__src);
  unint64_t v23 = *(void *)(v7 + 16);
  if (v23 >= *(void *)(v7 + 24) >> 1)
  {
    sub_24F7662F0();
    uint64_t v7 = v29;
  }
  memcpy(v47, v46, 0xA2uLL);
  sub_24F794E2C(v47);
  *(void *)(v7 + 16) = v23 + 1;
  sub_24F76C344((uint64_t)v47, v7 + 184 * v23 + 32);
  sub_24F7920F8(__src);
  unint64_t v24 = *(void *)(v7 + 16);
  uint64_t v25 = MEMORY[0x263F8EE80];
  if (v24 >= *(void *)(v7 + 24) >> 1)
  {
    sub_24F7662F0();
    uint64_t v7 = v30;
  }
  v43[0] = 41;
  v43[1] = 0xE100000000000000;
  _OWORD v43[2] = v10;
  v43[3] = v25;
  sub_24F7725D4(v43);
  *(void *)(v7 + 16) = v24 + 1;
  sub_24F76C344((uint64_t)v43, v7 + 184 * v24 + 32);
  sub_24F7AA964(v48, v7);
  uint64_t result = sub_24F7ABB4C();
  uint64_t v28 = result;
  if (!v2 && (v27 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_24F7783C0((uint64_t)v48, &qword_269A2A1B0);
    return v28;
  }
  return result;
}

uint64_t sub_24F80388C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return sub_24F8CFAE0();
  }
  uint64_t v4 = sub_24F8CFAE0();
  sub_24F8CEEB0();
  sub_24F8CFAE0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24F803950@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_retain();
  uint64_t result = sub_24F7FFDCC(v5, a2);
  *a3 = result;
  return result;
}

void sub_24F80399C()
{
  sub_24F76FF94();
  uint64_t v5 = v1;
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if ((v9 & 1) == 0)
  {
    v453[0] = MEMORY[0x263F8EE78];
    uint64_t v417 = *(void *)(v4 + 16);
    if (!v417) {
      goto LABEL_304;
    }
    uint64_t v430 = v4 + 32;
    uint64_t v421 = v4;
    swift_bridgeObjectRetain_n();
    uint64_t v166 = 0;
    while (1)
    {
      uint64_t v441 = v166;
      uint64_t v167 = v430 + 24 * v166;
      uint64_t v168 = *(void *)v167;
      uint64_t v169 = *(void *)(v167 + 8);
      if (*(unsigned char *)(v167 + 16))
      {
        uint64_t v170 = *(void *)(v168 + 16);
        uint64_t v432 = v169;
        uint64_t v444 = v168;
        if (v169)
        {
          if (!v170) {
            goto LABEL_262;
          }
          uint64_t v438 = *(void *)(v168 + 16);
          uint64_t v413 = v168 + 32;
          sub_24F7746A8();
          uint64_t v0 = 0;
          uint64_t v210 = v8;
          uint64_t v407 = v7;
          while (2)
          {
            uint64_t v434 = v0;
            sub_24F77550C();
            uint64_t v448 = v210;
            if (v211)
            {
              if (v0)
              {
                uint64_t v191 = *(void *)(v2 + 16);
                if (v191)
                {
                  sub_24F808C90(v2, v0, 1);
                  sub_24F7807F8(v2);
                  uint64_t v228 = v8;
                  uint64_t v240 = v2 + 48;
                  while (1)
                  {
                    sub_24F7752D4();
                    if (v241)
                    {
                      sub_24F7814D4(v2);
                      uint64_t v242 = sub_24F771E20();
                      if (v0) {
                        v244 = sub_24F8050D8;
                      }
                      else {
                        v244 = sub_24F806D04;
                      }
                      sub_24F7736A0(v242, v243, (void (*)(uint64_t *__return_ptr, void *, uint64_t))v244);
                      uint64_t v5 = v1;
                      if (v1)
                      {
                        uint64_t v325 = sub_24F77EF58();
                        goto LABEL_277;
                      }
                      uint64_t v210 = v249;
                      sub_24F77FD8C();
                    }
                    else
                    {
                      sub_24F780ACC();
                      uint64_t v245 = sub_24F782FDC();
                      ((void (*)(uint64_t))v2)(v245);
                      uint64_t v5 = v1;
                      uint64_t v246 = sub_24F773B4C();
                      if (v1)
                      {
                        sub_24F808CA0(v246, v247, v248);
                        uint64_t v325 = sub_24F773B4C();
LABEL_277:
                        sub_24F808CA0(v325, v326, v327);
                        sub_24F776108(v2, v328, v329, v330, v331, v332, v333, v334, v396, v399, v2, v407, v413, v417, v421, v0);
                        swift_bridgeObjectRelease();
                        uint64_t v335 = sub_24F77F5E8();
                        uint64_t v317 = v444;
                        sub_24F80AC3C(v335, v336, v337, v338, v339, v340, v341, v342, v398, v401, v406, v409, v415, v419, v423, v428, v430, v432);
                        goto LABEL_278;
                      }
                      sub_24F780E18(v246, v247, v248);
                    }
                    sub_24F770934();
                    if (v35) {
                      break;
                    }
                    if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v228 + 24) >> 1)
                    {
                      sub_24F772DE0();
                      uint64_t v228 = v250;
                    }
                    if (*(void *)(v210 + 16))
                    {
                      sub_24F780C44();
                      if (v34 != v35) {
                        goto LABEL_315;
                      }
                      sub_24F7804D8(v228 + 168 * v251);
                      swift_arrayInitWithCopy();
                      if (v0)
                      {
                        uint64_t v252 = *(void *)(v228 + 16);
                        BOOL v35 = __OFADD__(v252, v0);
                        uint64_t v253 = v252 + v0;
                        if (v35) {
                          goto LABEL_320;
                        }
                        *(void *)(v228 + 16) = v253;
                      }
                    }
                    else if (v0)
                    {
                      goto LABEL_306;
                    }
                    v240 += 24;
                    swift_bridgeObjectRelease();
                    if (!--v191)
                    {
                      sub_24F776108(v2, v254, v255, v256, v257, v258, v259, v260, v396, v399, v2, v407, v413, v417, v421, v0);
                      sub_24F77DACC();
                      goto LABEL_250;
                    }
                  }
                  __break(1u);
LABEL_306:
                  __break(1u);
LABEL_307:
                  __break(1u);
LABEL_308:
                  __break(1u);
LABEL_309:
                  __break(1u);
LABEL_310:
                  __break(1u);
LABEL_311:
                  __break(1u);
LABEL_312:
                  __break(1u);
LABEL_313:
                  __break(1u);
LABEL_314:
                  __break(1u);
LABEL_315:
                  __break(1u);
LABEL_316:
                  __break(1u);
LABEL_317:
                  __break(1u);
LABEL_318:
                  __break(1u);
LABEL_319:
                  __break(1u);
LABEL_320:
                  __break(1u);
LABEL_321:
                  __break(1u);
LABEL_322:
                  __break(1u);
LABEL_323:
                  __break(1u);
LABEL_324:
                  __break(1u);
LABEL_325:
                  __break(1u);
LABEL_326:
                  __break(1u);
LABEL_327:
                  __break(1u);
LABEL_328:
                  __break(1u);
LABEL_329:
                  __break(1u);
LABEL_330:
                  __break(1u);
LABEL_331:
                  __break(1u);
LABEL_332:
                  __break(1u);
LABEL_333:
                  __break(1u);
LABEL_334:
                  __break(1u);
LABEL_335:
                  __break(1u);
LABEL_336:
                  __break(1u);
LABEL_337:
                  __break(1u);
LABEL_338:
                  __break(1u);
LABEL_339:
                  __break(1u);
LABEL_340:
                  __break(1u);
LABEL_341:
                  sub_24F808DF4((uint64_t)v458);
                  sub_24F770EAC();
                  sub_24F76BB08();
                  sub_24F8CF9D0();
                  __break(1u);
                  JUMPOUT(0x24F8050C0);
                }
              }
              else
              {
                v458[0] = v8;
                uint64_t v191 = *(void *)(v2 + 16);
                if (v191)
                {
                  sub_24F808C90(v2, v0, 1);
                  uint64_t v426 = v0;
                  sub_24F7807F8(v2);
                  uint64_t v3 = v2;
                  v212 = (unsigned char *)(v2 + 48);
                  do
                  {
                    v214 = (void (*)(uint64_t))*((void *)v212 - 2);
                    uint64_t v213 = *((void *)v212 - 1);
                    if (*v212)
                    {
                      sub_24F7814D4(*((void *)v212 - 2));
                      sub_24F808C90((uint64_t)v214, v213, 1);
                      if (v213) {
                        v215 = sub_24F806D04;
                      }
                      else {
                        v215 = sub_24F8050D8;
                      }
                      uint64_t v1 = v5;
                      sub_24F8020D8((uint64_t)v214, v7, (void (*)(uint64_t *__return_ptr, void *, uint64_t))v215);
                      if (v5)
                      {
                        uint64_t v306 = sub_24F77B590();
                        goto LABEL_273;
                      }
                      uint64_t v2 = v220;
                      uint64_t v217 = sub_24F77B590();
                    }
                    else
                    {
                      sub_24F77BCDC(*((void *)v212 - 2));
                      uint64_t v216 = sub_24F77AF4C();
                      v214(v216);
                      uint64_t v5 = v1;
                      if (v1)
                      {
                        sub_24F808CA0((uint64_t)v214, v213, 0);
                        sub_24F77101C();
LABEL_273:
                        sub_24F808CA0(v306, v307, v308);
                        sub_24F776108(v3, v309, v310, v311, v312, v313, v314, v315, v396, v399, v402, v407, v413, v417, v421, v426);
                        swift_bridgeObjectRelease();
                        sub_24F808CA0(v3, v191, 1);
                        uint64_t v305 = v3;
                        goto LABEL_274;
                      }
                      uint64_t v210 = __dst[0];
                      uint64_t v1 = 0;
                      sub_24F7FFB44(__dst[0]);
                      sub_24F80AEAC();
                      sub_24F808CA0((uint64_t)v214, v213, 0);
                      sub_24F77101C();
                    }
                    sub_24F808CA0(v217, v218, v219);
                    v212 += 24;
                    sub_24F792BFC();
                    --v191;
                  }
                  while (v191);
                  sub_24F776108(v3, v221, v222, v223, v224, v225, v226, v227, v396, v399, v402, v407, v413, v417, v421, v426);
                  sub_24F808CA0(v3, 0, 1);
                  sub_24F808CA0(v3, 0, 1);
                  uint64_t v228 = v458[0];
LABEL_250:
                  uint64_t v269 = *(void *)(v228 + 16);
                  uint64_t v270 = *(void *)(v210 + 16);
                  if (__OFADD__(v270, v269)) {
                    goto LABEL_327;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0
                    || v270 + v269 > *(void *)(v210 + 24) >> 1)
                  {
                    sub_24F80AE10();
                    uint64_t v210 = v271;
                  }
                  uint64_t v8 = MEMORY[0x263F8EE78];
                  if (*(void *)(v228 + 16))
                  {
                    sub_24F778DB8();
                    if (v34 != v35) {
                      goto LABEL_334;
                    }
                    sub_24F80AD94(v272);
                    swift_arrayInitWithCopy();
                    if (v269)
                    {
                      uint64_t v273 = *(void *)(v210 + 16);
                      BOOL v35 = __OFADD__(v273, v269);
                      uint64_t v274 = v273 + v269;
                      if (v35) {
                        goto LABEL_338;
                      }
                      *(void *)(v210 + 16) = v274;
                    }
                  }
                  else if (v269)
                  {
                    goto LABEL_328;
                  }
                  uint64_t v0 = v434 + 1;
                  swift_bridgeObjectRelease();
                  uint64_t v169 = v432;
                  uint64_t v168 = v444;
                  if (v434 + 1 == v438)
                  {
LABEL_261:
                    sub_24F808CA0(v168, v169, 1);
                    sub_24F808CA0(v168, v169, 1);
                    sub_24F808CA0(v168, v169, 1);
                    goto LABEL_262;
                  }
                  continue;
                }
              }
              uint64_t v228 = v8;
              goto LABEL_250;
            }
            break;
          }
          sub_24F77BCDC(v2);
          uint64_t v1 = v5;
          ((void (*)(void *__return_ptr, uint64_t))v2)(__src, v7);
          if (v5)
          {
            sub_24F808CA0(v2, v0, 0);
            uint64_t v395 = v2;
            goto LABEL_292;
          }
          uint64_t v2 = __src[0];
          uint64_t v229 = *(void *)(__src[0] + 16);
          if (v229)
          {
            sub_24F795E30();
            uint64_t v228 = v8;
            uint64_t v230 = v229 - 1;
            for (uint64_t i = 32; ; i += 168)
            {
              memcpy(__dst, (const void *)(v2 + i), 0xA3uLL);
              sub_24F880B00((uint64_t)v458);
              *(void *)v451 = v228;
              uint64_t v3 = *(void *)(v228 + 16);
              if ((unint64_t)v3 >= *(void *)(v228 + 24) >> 1)
              {
                sub_24F795E30();
                uint64_t v228 = *(void *)v451;
              }
              *(void *)(v228 + 16) = v3 + 1;
              memcpy((void *)(v228 + 168 * v3 + 32), v458, 0xA3uLL);
              if (!v230) {
                break;
              }
              --v230;
            }
            uint64_t v232 = swift_bridgeObjectRelease();
            sub_24F80AC94(v232, v233, v234, v235, v236, v237, v238, v239, v396, v399, v402, v407, v413, v417, v421, v0);
          }
          else
          {
            uint64_t v261 = swift_bridgeObjectRelease();
            sub_24F80AC94(v261, v262, v263, v264, v265, v266, v267, v268, v396, v399, v402, v407, v413, v417, v421, v0);
            uint64_t v228 = v8;
          }
          uint64_t v210 = v448;
          uint64_t v7 = v407;
          goto LABEL_250;
        }
        if (v170)
        {
          uint64_t v437 = *(void *)(v168 + 16);
          uint64_t v425 = v168 + 32;
          sub_24F7746A8();
          uint64_t v3 = 0;
          uint64_t v171 = v8;
          while (1)
          {
            sub_24F77550C();
            if (v172)
            {
              uint64_t v447 = v171;
              if (v0)
              {
                v458[0] = v8;
                uint64_t v191 = *(void *)(v2 + 16);
                if (v191)
                {
                  sub_24F808C90(v2, v0, 1);
                  uint64_t v412 = v0;
                  sub_24F7807F8(v2);
                  v192 = (unsigned char *)(v2 + 48);
                  do
                  {
                    v194 = (void (*)(uint64_t))*((void *)v192 - 2);
                    uint64_t v193 = *((void *)v192 - 1);
                    if (*v192)
                    {
                      sub_24F7814D4(*((void *)v192 - 2));
                      sub_24F808C90((uint64_t)v194, v193, 1);
                      if (v193) {
                        v195 = sub_24F806D04;
                      }
                      else {
                        v195 = sub_24F8050D8;
                      }
                      uint64_t v1 = v5;
                      sub_24F8020D8((uint64_t)v194, v7, (void (*)(uint64_t *__return_ptr, void *, uint64_t))v195);
                      if (v5)
                      {
                        uint64_t v294 = sub_24F77B590();
LABEL_270:
                        uint64_t v297 = sub_24F808CA0(v294, v295, v296);
                        sub_24F76B710(v297, v298, v299, v300, v301, v302, v303, v304, v396, v399, v402, v407, v412, v417, v421, v425, v430, v432, v2);
                        swift_bridgeObjectRelease();
                        sub_24F808CA0(v193, v191, 1);
                        uint64_t v305 = v193;
LABEL_274:
                        uint64_t v316 = sub_24F808CA0(v305, v191, 1);
                        uint64_t v317 = v444;
                        sub_24F80AC3C(v316, v318, v319, v320, v321, v322, v323, v324, v397, v400, v405, v408, v414, v418, v422, v427, v430, v432);
LABEL_278:
                        swift_bridgeObjectRelease();
                        sub_24F808CA0(v317, v191, 1);
                        uint64_t v343 = v317;
                        uint64_t v344 = v191;
                        goto LABEL_294;
                      }
                      uint64_t v197 = sub_24F77B590();
                    }
                    else
                    {
                      sub_24F77BCDC(*((void *)v192 - 2));
                      uint64_t v196 = sub_24F77AF4C();
                      v194(v196);
                      uint64_t v5 = v1;
                      if (v1)
                      {
                        sub_24F808CA0((uint64_t)v194, v193, 0);
                        sub_24F77101C();
                        goto LABEL_270;
                      }
                      uint64_t v171 = __dst[0];
                      uint64_t v1 = 0;
                      sub_24F7FFB44(__dst[0]);
                      sub_24F80AEAC();
                      sub_24F808CA0((uint64_t)v194, v193, 0);
                      sub_24F77101C();
                    }
                    sub_24F808CA0(v197, v198, v199);
                    v192 += 24;
                    sub_24F792BFC();
                    --v191;
                  }
                  while (v191);
                  sub_24F808CA0(v2, v412, 1);
                  sub_24F77F5E8();
                  uint64_t v190 = v458[0];
                  uint64_t v169 = v432;
                  goto LABEL_187;
                }
LABEL_186:
                uint64_t v190 = v8;
                goto LABEL_187;
              }
              v458[0] = v8;
              uint64_t v173 = *(void *)(v2 + 16);
              if (!v173) {
                goto LABEL_186;
              }
              sub_24F808C90(v2, v0, 1);
              uint64_t v411 = v0;
              sub_24F7807F8(v2);
              uint64_t v174 = v2 + 48;
              do
              {
                sub_24F7752D4();
                if (v175)
                {
                  sub_24F7814D4(v2);
                  uint64_t v176 = sub_24F771E20();
                  if (v0) {
                    v178 = sub_24F8050D8;
                  }
                  else {
                    v178 = sub_24F806D04;
                  }
                  sub_24F7736A0(v176, v177, (void (*)(uint64_t *__return_ptr, void *, uint64_t))v178);
                  uint64_t v5 = v1;
                  if (v1)
                  {
                    uint64_t v286 = sub_24F77FD8C();
                    sub_24F76B710(v286, v287, v288, v289, v290, v291, v292, v293, v396, v399, v402, v407, v411, v417, v421, v425, v430, v432, v2);
LABEL_267:
                    swift_bridgeObjectRelease();
                    sub_24F77F5E8();
                    uint64_t v168 = v444;
LABEL_293:
                    sub_24F808CA0(v168, v169, 1);
                    swift_bridgeObjectRelease();
                    sub_24F808CA0(v168, v169, 1);
                    uint64_t v343 = v168;
                    uint64_t v344 = v169;
LABEL_294:
                    char v391 = 1;
LABEL_295:
                    sub_24F808CA0(v343, v344, v391);
                    swift_bridgeObjectRelease();
                    goto LABEL_303;
                  }
                  sub_24F77FD8C();
                }
                else
                {
                  sub_24F780ACC();
                  uint64_t v179 = sub_24F77AF4C();
                  ((void (*)(uint64_t))v2)(v179);
                  uint64_t v5 = v1;
                  uint64_t v180 = sub_24F773B4C();
                  if (v1)
                  {
                    uint64_t v278 = sub_24F76B8F4(v180, v181, v182);
                    sub_24F76B710(v278, v279, v280, v281, v282, v283, v284, v285, v396, v399, v402, v407, v411, v417, v421, v425, v430, v432, v2);
                    goto LABEL_267;
                  }
                  sub_24F76B8F4(v180, v181, v182);
                }
                v174 += 24;
                uint64_t v0 = (uint64_t)v458;
                sub_24F792BFC();
                --v173;
                uint64_t v171 = v447;
              }
              while (v173);
              sub_24F808CA0(v2, v411, 1);
              uint64_t v183 = sub_24F775C3C();
            }
            else
            {
              sub_24F780ACC();
              uint64_t v186 = sub_24F782FDC();
              ((void (*)(uint64_t))v2)(v186);
              uint64_t v5 = v1;
              uint64_t v187 = sub_24F773B4C();
              if (v1)
              {
                sub_24F808CA0(v187, v188, v189);
                uint64_t v395 = v2;
LABEL_292:
                sub_24F808CA0(v395, v0, 0);
                goto LABEL_293;
              }
              sub_24F808CA0(v187, v188, v189);
              sub_24F77101C();
            }
            sub_24F808CA0(v183, v184, v185);
            uint64_t v190 = v458[0];
LABEL_187:
            uint64_t v0 = *(void *)(v190 + 16);
            uint64_t v200 = *(void *)(v171 + 16);
            uint64_t v2 = v200 + v0;
            if (__OFADD__(v200, v0)) {
              goto LABEL_325;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v2 > *(void *)(v171 + 24) >> 1)
            {
              sub_24F787918();
              uint64_t v171 = v201;
            }
            uint64_t v8 = MEMORY[0x263F8EE78];
            if (*(void *)(v190 + 16))
            {
              sub_24F780C44();
              if (v34 != v35) {
                goto LABEL_333;
              }
              swift_arrayInitWithCopy();
              if (v0)
              {
                uint64_t v202 = *(void *)(v171 + 16);
                BOOL v35 = __OFADD__(v202, v0);
                uint64_t v203 = v202 + v0;
                if (v35) {
                  goto LABEL_337;
                }
                *(void *)(v171 + 16) = v203;
              }
            }
            else if (v0)
            {
              goto LABEL_326;
            }
            ++v3;
            swift_bridgeObjectRelease();
            uint64_t v168 = v444;
            if (v3 == v437) {
              goto LABEL_261;
            }
          }
        }
      }
      else
      {
        swift_retain_n();
        uint64_t v1 = v5;
        ((void (*)(uint64_t *__return_ptr, uint64_t))v168)(v458, v7);
        uint64_t v204 = sub_24F80ADAC();
        if (v5)
        {
          sub_24F808CA0(v204, v205, v206);
          uint64_t v343 = sub_24F80ADAC();
          goto LABEL_295;
        }
        sub_24F808CA0(v204, v205, v206);
        uint64_t v207 = sub_24F80ADAC();
        sub_24F808CA0(v207, v208, v209);
      }
LABEL_262:
      uint64_t v166 = v441 + 1;
      uint64_t v0 = (uint64_t)v453;
      sub_24F792BFC();
      if (v441 + 1 == v417)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_304;
      }
    }
  }
  uint64_t v456 = MEMORY[0x263F8EE78];
  uint64_t v429 = *(void *)(v4 + 16);
  if (!v429) {
    goto LABEL_304;
  }
  uint64_t v433 = v4 + 32;
  uint64_t v420 = v4;
  swift_bridgeObjectRetain_n();
  uint64_t v10 = 0;
  while (1)
  {
    sub_24F77550C();
    if ((v11 & 1) == 0)
    {
      sub_24F77BCDC(v2);
      uint64_t v123 = sub_24F782FDC();
      ((void (*)(uint64_t))v2)(v123);
      if (v1)
      {
        sub_24F808CA0(v2, v0, 0);
        uint64_t v392 = sub_24F773B4C();
        goto LABEL_302;
      }
      uint64_t v3 = v10;
      uint64_t v1 = 0;
      sub_24F7FFB44(v458[0]);
      uint64_t v5 = 0;
      swift_bridgeObjectRelease();
      sub_24F76B8F4(v2, v0, 0);
      goto LABEL_149;
    }
    uint64_t v12 = *(void *)(v2 + 16);
    if ((v0 & 1) == 0) {
      break;
    }
    if (v12)
    {
      uint64_t v443 = *(void *)(v2 + 16);
      uint64_t v403 = v10;
      sub_24F808C90(v2, v0, 1);
      uint64_t v416 = v0;
      sub_24F808C90(v2, v0, 1);
      uint64_t v410 = v2;
      swift_bridgeObjectRetain();
      uint64_t v124 = 0;
      uint64_t v125 = v8;
      do
      {
        sub_24F77550C();
        uint64_t v440 = v124;
        if (v126)
        {
          uint64_t v127 = *(void *)(v2 + 16);
          uint64_t v446 = v125;
          if (v0)
          {
            if (v127)
            {
              sub_24F77DFE8();
              uint64_t v128 = v8;
              uint64_t v147 = v2 + 48;
              while (1)
              {
                sub_24F7752D4();
                if (v148)
                {
                  sub_24F808C90(v2, v0, 1);
                  uint64_t v149 = sub_24F7814D4(v2);
                  if (v0) {
                    v151 = sub_24F806D04;
                  }
                  else {
                    v151 = sub_24F8050D8;
                  }
                  sub_24F7736A0(v149, v150, (void (*)(uint64_t *__return_ptr, void *, uint64_t))v151);
                  uint64_t v5 = v1;
                  if (v1)
                  {
                    uint64_t v372 = sub_24F77EF58();
                    goto LABEL_283;
                  }
                  uint64_t v125 = v156;
                  uint64_t v153 = sub_24F77EF58();
                }
                else
                {
                  sub_24F77BCDC(v2);
                  uint64_t v152 = sub_24F782FDC();
                  ((void (*)(uint64_t))v2)(v152);
                  if (v1)
                  {
                    sub_24F808CA0(v2, v0, 0);
                    uint64_t v372 = sub_24F773B4C();
LABEL_283:
                    sub_24F808CA0(v372, v373, v374);
                    sub_24F808CA0(v2, v431, 1);
                    goto LABEL_287;
                  }
                  uint64_t v3 = v458[0];
                  uint64_t v1 = 0;
                  uint64_t v125 = sub_24F7FFB44(v458[0]);
                  uint64_t v5 = 0;
                  swift_bridgeObjectRelease();
                  sub_24F808CA0(v2, v0, 0);
                  uint64_t v153 = sub_24F773B4C();
                }
                sub_24F808CA0(v153, v154, v155);
                sub_24F770934();
                if (v35) {
                  goto LABEL_310;
                }
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v3 > *(void *)(v128 + 24) >> 1)
                {
                  sub_24F772DE0();
                  uint64_t v128 = v157;
                }
                if (*(void *)(v125 + 16))
                {
                  sub_24F780C44();
                  if (v34 != v35) {
                    goto LABEL_319;
                  }
                  sub_24F7804D8(v128 + 168 * v158);
                  swift_arrayInitWithCopy();
                  if (v0)
                  {
                    uint64_t v159 = *(void *)(v128 + 16);
                    BOOL v35 = __OFADD__(v159, v0);
                    uint64_t v160 = v159 + v0;
                    if (v35) {
                      goto LABEL_324;
                    }
                    *(void *)(v128 + 16) = v160;
                  }
                }
                else if (v0)
                {
                  goto LABEL_314;
                }
                v147 += 24;
                swift_bridgeObjectRelease();
                if (!--v127)
                {
                  sub_24F808CA0(v2, v431, 1);
                  sub_24F77DACC();
                  goto LABEL_137;
                }
              }
            }
          }
          else if (v127)
          {
            sub_24F77DFE8();
            uint64_t v128 = v8;
            uint64_t v129 = v2 + 48;
            while (1)
            {
              sub_24F7752D4();
              if (v130)
              {
                sub_24F7814D4(v2);
                uint64_t v131 = sub_24F771E20();
                if (v0) {
                  char v133 = sub_24F8050D8;
                }
                else {
                  char v133 = sub_24F806D04;
                }
                sub_24F7736A0(v131, v132, (void (*)(uint64_t *__return_ptr, void *, uint64_t))v133);
                uint64_t v5 = v1;
                if (v1)
                {
                  uint64_t v356 = sub_24F77FD8C();
                  sub_24F80ACD4(v356, v357, v358, v359, v360, v361, v362, v363, v396, v399, v403, v407, v2, v416, v420, v2, v429, v431);
                  uint64_t v364 = sub_24F77DACC();
LABEL_300:
                  sub_24F7856CC(v364, v365, v366, v367, v368, v369, v370, v371, v396, v399, v403, v407, v410, v416);
                  goto LABEL_301;
                }
                uint64_t v125 = v138;
                sub_24F77FD8C();
              }
              else
              {
                sub_24F780ACC();
                uint64_t v134 = sub_24F782FDC();
                ((void (*)(uint64_t))v2)(v134);
                uint64_t v5 = v1;
                uint64_t v135 = sub_24F773B4C();
                if (v1)
                {
                  uint64_t v345 = sub_24F76B8F4(v135, v136, v137);
                  sub_24F80ACD4(v345, v346, v347, v348, v349, v350, v351, v352, v396, v399, v403, v407, v2, v416, v420, v2, v429, v431);
                  uint64_t v353 = sub_24F775C3C();
LABEL_299:
                  uint64_t v364 = sub_24F808CA0(v353, v354, v355);
                  goto LABEL_300;
                }
                sub_24F780E18(v135, v136, v137);
              }
              sub_24F770934();
              if (v35) {
                goto LABEL_309;
              }
              if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v128 + 24) >> 1)
              {
                sub_24F772DE0();
                uint64_t v128 = v139;
              }
              if (*(void *)(v125 + 16))
              {
                sub_24F780C44();
                if (v34 != v35) {
                  goto LABEL_318;
                }
                sub_24F7804D8(v128 + 168 * v140);
                swift_arrayInitWithCopy();
                if (v0)
                {
                  uint64_t v141 = *(void *)(v128 + 16);
                  BOOL v35 = __OFADD__(v141, v0);
                  uint64_t v142 = v141 + v0;
                  if (v35) {
                    goto LABEL_323;
                  }
                  *(void *)(v128 + 16) = v142;
                }
              }
              else if (v0)
              {
                goto LABEL_313;
              }
              v129 += 24;
              swift_bridgeObjectRelease();
              --v127;
              uint64_t v125 = v446;
              if (!v127)
              {
                sub_24F808CA0(v2, v431, 1);
                sub_24F77F5E8();
                goto LABEL_137;
              }
            }
          }
          uint64_t v128 = v8;
        }
        else
        {
          sub_24F780ACC();
          uint64_t v143 = sub_24F782FDC();
          ((void (*)(uint64_t))v2)(v143);
          uint64_t v5 = v1;
          uint64_t v144 = sub_24F773B4C();
          if (v1)
          {
            sub_24F808CA0(v144, v145, v146);
            uint64_t v353 = v2;
            uint64_t v354 = v0;
LABEL_298:
            char v355 = 0;
            goto LABEL_299;
          }
          sub_24F76B8F4(v144, v145, v146);
          uint64_t v128 = v458[0];
        }
LABEL_137:
        uint64_t v161 = *(void *)(v128 + 16);
        uint64_t v0 = *(void *)(v125 + 16);
        if (__OFADD__(v0, v161)) {
          goto LABEL_330;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v0 + v161 > *(void *)(v125 + 24) >> 1)
        {
          sub_24F80AE10();
          uint64_t v125 = v162;
        }
        uint64_t v8 = MEMORY[0x263F8EE78];
        if (*(void *)(v128 + 16))
        {
          sub_24F778DB8();
          if (v34 != v35) {
            goto LABEL_336;
          }
          sub_24F80AD94(v163);
          swift_arrayInitWithCopy();
          if (v161)
          {
            uint64_t v164 = *(void *)(v125 + 16);
            BOOL v35 = __OFADD__(v164, v161);
            uint64_t v165 = v164 + v161;
            if (v35) {
              goto LABEL_340;
            }
            *(void *)(v125 + 16) = v165;
          }
        }
        else if (v161)
        {
          goto LABEL_332;
        }
        uint64_t v124 = v440 + 1;
        uint64_t v115 = swift_bridgeObjectRelease();
      }
      while (v440 + 1 != v443);
LABEL_148:
      sub_24F7856CC(v115, v116, v117, v118, v119, v120, v121, v122, v396, v399, v403, v407, v410, v416);
      sub_24F77F5E8();
      uint64_t v10 = v404;
    }
LABEL_149:
    ++v10;
    uint64_t v0 = (uint64_t)&v456;
    sub_24F792BFC();
    if (v10 == v429)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_304;
    }
  }
  if (!v12) {
    goto LABEL_149;
  }
  uint64_t v442 = *(void *)(v2 + 16);
  uint64_t v403 = v10;
  uint64_t v424 = v2 + 32;
  sub_24F808C90(v2, v0, 1);
  uint64_t v416 = v0;
  sub_24F808C90(v2, v0, 1);
  uint64_t v410 = v2;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v13 = v8;
  while (1)
  {
    uint64_t v14 = v424 + 24 * v2;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v439 = v2;
    if ((*(unsigned char *)(v14 + 16) & 1) == 0)
    {
      sub_24F77BCDC(v15);
      uint64_t v431 = v16;
      uint64_t v1 = v5;
      long long v38 = ((void *(*)(uint64_t *__return_ptr, uint64_t))v15)(&v455, v7);
      if (v5)
      {
        uint64_t v353 = sub_24F80ADBC((uint64_t)v38, v39, v40, v41, v42, v43, v44, v45, v396, v399, v403, v407, v410, v416, v420, v424, v429, v16);
        goto LABEL_298;
      }
      uint64_t v445 = v13;
      uint64_t v46 = v455;
      uint64_t v47 = *(void *)(v455 + 16);
      if (v47)
      {
        uint64_t v436 = v15;
        uint64_t v454 = v8;
        sub_24F795E30();
        uint64_t v8 = v454;
        uint64_t v48 = v47 - 1;
        uint64_t v3 = 32;
        while (1)
        {
          memcpy(__dst, (const void *)(v46 + v3), 0xA3uLL);
          sub_24F808CB0((uint64_t)__dst, (uint64_t)v458);
          switch(sub_24F808D0C((uint64_t)v458))
          {
            case 1u:
              long long v74 = (void *)sub_24F808DF4((uint64_t)v458);
              sub_24F80AC20(v74, v75, v76, v77, v78, v79, v80, v81, v396, v399, v403, v407, v410, v416, v420, v424, v429, v431, v433,
                v436,
                v439,
                v442,
                v445,
                v449,
                v450,
                v451[0]);
              sub_24F808E20((uint64_t)v451);
              goto LABEL_41;
            case 2u:
              uint64_t v58 = (void *)sub_24F808DF4((uint64_t)v458);
              sub_24F80AC20(v58, v59, v60, v61, v62, v63, v64, v65, v396, v399, v403, v407, v410, v416, v420, v424, v429, v431, v433,
                v436,
                v439,
                v442,
                v445,
                v449,
                v450,
                v451[0]);
              sub_24F808DB0((uint64_t)v451);
              goto LABEL_41;
            case 3u:
              uint64_t v66 = (void *)sub_24F808DF4((uint64_t)v458);
              sub_24F80AC20(v66, v67, v68, v69, v70, v71, v72, v73, v396, v399, v403, v407, v410, v416, v420, v424, v429, v431, v433,
                v436,
                v439,
                v442,
                v445,
                v449,
                v450,
                v451[0]);
              sub_24F808D6C((uint64_t)v451);
              goto LABEL_41;
            case 4u:
              char v50 = (void *)sub_24F808DF4((uint64_t)v458);
              sub_24F80AC20(v50, v51, v52, v53, v54, v55, v56, v57, v396, v399, v403, v407, v410, v416, v420, v424, v429, v431, v433,
                v436,
                v439,
                v442,
                v445,
                v449,
                v450,
                v451[0]);
              sub_24F808D20((uint64_t)v451);
LABEL_41:
              sub_24F808CB0((uint64_t)v451, (uint64_t)__src);
              memcpy(v453, __src, 0xA3uLL);
              goto LABEL_42;
            case 5u:
              goto LABEL_341;
            default:
              uint64_t v49 = (const void *)sub_24F808DF4((uint64_t)v458);
              memcpy(__src, v49, 0xA3uLL);
              sub_24F808E20((uint64_t)__src);
              sub_24F808CB0((uint64_t)__src, (uint64_t)v453);
LABEL_42:
              sub_24F76F994((uint64_t)__dst);
              uint64_t v454 = v8;
              unint64_t v82 = *(void *)(v8 + 16);
              if (v82 >= *(void *)(v8 + 24) >> 1)
              {
                sub_24F795E30();
                uint64_t v16 = v431;
                uint64_t v8 = v454;
              }
              *(void *)(v8 + 16) = v82 + 1;
              memcpy((void *)(v8 + 168 * v82 + 32), v453, 0xA3uLL);
              if (!v48)
              {
                swift_bridgeObjectRelease();
                sub_24F808CA0(v436, v16, 0);
                uint64_t v83 = sub_24F76B8E8();
                goto LABEL_70;
              }
              --v48;
              v3 += 168;
              break;
          }
        }
      }
      uint64_t v102 = swift_bridgeObjectRelease();
      uint64_t v83 = sub_24F80ADBC(v102, v103, v104, v105, v106, v107, v108, v109, v396, v399, v403, v407, v410, v416, v420, v424, v429, v16);
LABEL_70:
      char v101 = 0;
      goto LABEL_71;
    }
    uint64_t v435 = *(void *)v14;
    uint64_t v17 = *(void *)(v15 + 16);
    if ((v16 & 1) == 0) {
      break;
    }
    if (v17)
    {
      uint64_t v445 = v13;
      sub_24F77DFE8();
      uint64_t v3 = v435 + 48;
      do
      {
        uint64_t v86 = *(void (**)(uint64_t))(v3 - 16);
        uint64_t v85 = *(void *)(v3 - 8);
        if (*(unsigned char *)v3)
        {
          sub_24F7814D4(*(void *)(v3 - 16));
          uint64_t v87 = sub_24F771E20();
          if (v85) {
            uint64_t v89 = sub_24F8050D8;
          }
          else {
            uint64_t v89 = sub_24F806D04;
          }
          sub_24F7736A0(v87, v88, (void (*)(uint64_t *__return_ptr, void *, uint64_t))v89);
          uint64_t v5 = v1;
          if (v1)
          {
LABEL_264:
            uint64_t v275 = sub_24F77EF58();
            goto LABEL_286;
          }
          uint64_t v13 = v94;
          sub_24F77FD8C();
        }
        else
        {
          sub_24F780ACC();
          uint64_t v90 = sub_24F782FDC();
          v86(v90);
          uint64_t v5 = v1;
          uint64_t v91 = sub_24F773B4C();
          if (v1) {
            goto LABEL_285;
          }
          sub_24F780E18(v91, v92, v93);
        }
        uint64_t v95 = *(void *)(v13 + 16);
        uint64_t v96 = *(void *)(v8 + 16);
        if (__OFADD__(v96, v95)) {
          goto LABEL_308;
        }
        if (!swift_isUniquelyReferenced_nonNull_native() || v96 + v95 > *(void *)(v8 + 24) >> 1)
        {
          sub_24F787918();
          uint64_t v8 = v97;
        }
        if (*(void *)(v13 + 16))
        {
          sub_24F780C44();
          if (v34 != v35) {
            goto LABEL_317;
          }
          sub_24F7804D8(v8 + 168 * v98);
          swift_arrayInitWithCopy();
          if (v95)
          {
            uint64_t v99 = *(void *)(v8 + 16);
            BOOL v35 = __OFADD__(v99, v95);
            uint64_t v100 = v99 + v95;
            if (v35) {
              goto LABEL_322;
            }
            *(void *)(v8 + 16) = v100;
          }
        }
        else if (v95)
        {
          goto LABEL_312;
        }
        v3 += 24;
        swift_bridgeObjectRelease();
        --v17;
      }
      while (v17);
LABEL_68:
      sub_24F808CA0(v435, v431, 1);
      uint64_t v83 = sub_24F775C3C();
LABEL_71:
      sub_24F808CA0(v83, v84, v101);
      uint64_t v13 = v445;
    }
LABEL_72:
    uint64_t v110 = *(void *)(v8 + 16);
    uint64_t v111 = *(void *)(v13 + 16);
    if (__OFADD__(v111, v110)) {
      goto LABEL_329;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v111 + v110 > *(void *)(v13 + 24) >> 1)
    {
      sub_24F787918();
      uint64_t v13 = v112;
    }
    if (*(void *)(v8 + 16))
    {
      sub_24F778DB8();
      if (v34 != v35) {
        goto LABEL_335;
      }
      swift_arrayInitWithCopy();
      if (v110)
      {
        uint64_t v113 = *(void *)(v13 + 16);
        BOOL v35 = __OFADD__(v113, v110);
        uint64_t v114 = v113 + v110;
        if (v35) {
          goto LABEL_339;
        }
        *(void *)(v13 + 16) = v114;
      }
    }
    else if (v110)
    {
      goto LABEL_331;
    }
    uint64_t v2 = v439 + 1;
    uint64_t v115 = swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (v439 + 1 == v442) {
      goto LABEL_148;
    }
  }
  if (!v17) {
    goto LABEL_72;
  }
  uint64_t v445 = v13;
  sub_24F77DFE8();
  uint64_t v18 = (unsigned char *)(v435 + 48);
  while (1)
  {
    uint64_t v20 = (void (*)(uint64_t))*((void *)v18 - 2);
    uint64_t v19 = *((void *)v18 - 1);
    if (*v18)
    {
      sub_24F7814D4(*((void *)v18 - 2));
      uint64_t v21 = sub_24F771E20();
      if (v19) {
        unint64_t v23 = sub_24F806D04;
      }
      else {
        unint64_t v23 = sub_24F8050D8;
      }
      sub_24F7736A0(v21, v22, (void (*)(uint64_t *__return_ptr, void *, uint64_t))v23);
      uint64_t v5 = v1;
      if (v1) {
        goto LABEL_264;
      }
      uint64_t v25 = v29;
      uint64_t v26 = sub_24F77EF58();
      goto LABEL_20;
    }
    sub_24F77BCDC(*((void *)v18 - 2));
    uint64_t v24 = sub_24F782FDC();
    v20(v24);
    if (v1) {
      break;
    }
    uint64_t v1 = 0;
    uint64_t v25 = sub_24F7FFB44(v458[0]);
    uint64_t v5 = 0;
    swift_bridgeObjectRelease();
    sub_24F808CA0((uint64_t)v20, v19, 0);
    uint64_t v26 = sub_24F773B4C();
LABEL_20:
    sub_24F808CA0(v26, v27, v28);
    uint64_t v30 = *(void *)(v25 + 16);
    uint64_t v31 = *(void *)(v8 + 16);
    uint64_t v3 = v31 + v30;
    if (__OFADD__(v31, v30)) {
      goto LABEL_307;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v8 + 24) >> 1)
    {
      sub_24F787918();
      uint64_t v8 = v32;
    }
    if (*(void *)(v25 + 16))
    {
      sub_24F780C44();
      if (v34 != v35) {
        goto LABEL_316;
      }
      sub_24F7804D8(v8 + 168 * v33);
      swift_arrayInitWithCopy();
      if (v30)
      {
        uint64_t v36 = *(void *)(v8 + 16);
        BOOL v35 = __OFADD__(v36, v30);
        uint64_t v37 = v36 + v30;
        if (v35) {
          goto LABEL_321;
        }
        *(void *)(v8 + 16) = v37;
      }
    }
    else if (v30)
    {
      goto LABEL_311;
    }
    v18 += 24;
    swift_bridgeObjectRelease();
    if (!--v17) {
      goto LABEL_68;
    }
  }
  uint64_t v91 = sub_24F773B4C();
LABEL_285:
  sub_24F808CA0(v91, v92, v93);
  uint64_t v275 = sub_24F773B4C();
LABEL_286:
  uint64_t v375 = sub_24F808CA0(v275, v276, v277);
  sub_24F80AC3C(v375, v376, v377, v378, v379, v380, v381, v382, v396, v399, v403, v407, v410, v416, v420, v424, v429, v431);
LABEL_287:
  swift_bridgeObjectRelease();
  uint64_t v383 = sub_24F77F5E8();
  sub_24F7856CC(v383, v384, v385, v386, v387, v388, v389, v390, v396, v399, v403, v407, v410, v416);
LABEL_301:
  swift_bridgeObjectRelease();
  uint64_t v392 = sub_24F775C3C();
LABEL_302:
  sub_24F808CA0(v392, v393, v394);
  swift_bridgeObjectRelease();
LABEL_303:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_304:
  sub_24F77BC10();
}

void sub_24F8050D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = a2;
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    swift_retain();
    ((void (*)(uint64_t *__return_ptr, uint64_t))v7)(&v237, v4);
    if (v3)
    {
      uint64_t v16 = v7;
      uint64_t v17 = v6;
      char v18 = 0;
      goto LABEL_222;
    }
    uint64_t v8 = sub_24F7FFB44(v237);
    swift_bridgeObjectRelease();
    sub_24F808CA0(v7, v6, 0);
    goto LABEL_204;
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  if ((v6 & 1) == 0)
  {
    uint64_t v240 = MEMORY[0x263F8EE78];
    uint64_t v9 = *(void *)(v7 + 16);
    if (v9)
    {
      uint64_t v10 = v6;
      swift_bridgeObjectRetain_n();
      uint64_t v11 = v7;
      uint64_t v12 = (char *)(v7 + 48);
      while (1)
      {
        uint64_t v13 = *((void *)v12 - 2);
        uint64_t v14 = *((void *)v12 - 1);
        char v15 = *v12;
        uint64_t v237 = v13;
        uint64_t v238 = v14;
        char v239 = v15;
        sub_24F808C90(v13, v14, v15);
        sub_24F8050D8(&v236, &v237, a2);
        if (v3) {
          break;
        }
        v12 += 24;
        sub_24F808CA0(v13, v14, v15);
        sub_24F792BFC();
        if (!--v9)
        {
          sub_24F808CA0(v11, v10, 1);
          sub_24F808CA0(v11, v10, 1);
          uint64_t v8 = v240;
          goto LABEL_204;
        }
      }
      sub_24F808CA0(v13, v14, v15);
      sub_24F808CA0(v11, v10, 1);
      swift_bridgeObjectRelease();
      uint64_t v16 = v11;
      uint64_t v17 = v10;
      goto LABEL_221;
    }
    goto LABEL_204;
  }
  uint64_t v240 = MEMORY[0x263F8EE78];
  uint64_t v19 = *(void *)(v7 + 16);
  if (!v19)
  {
LABEL_204:
    *a3 = v8;
    return;
  }
  uint64_t v231 = v7 + 32;
  sub_24F808C90(v7, v6, 1);
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  v212 = a3;
  uint64_t v228 = v6;
  uint64_t v230 = v7;
  uint64_t v222 = v19;
  while (1)
  {
    uint64_t v232 = v20;
    uint64_t v21 = v231 + 24 * v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    if (*(unsigned char *)(v21 + 16)) {
      break;
    }
    swift_retain_n();
    ((void (*)(uint64_t *__return_ptr, uint64_t))v23)(&v237, v4);
    if (v3)
    {
      sub_24F808CA0(v23, v22, 0);
      uint64_t v181 = v23;
      uint64_t v182 = v22;
      char v183 = 0;
      goto LABEL_218;
    }
    sub_24F808CA0(v23, v22, 0);
    sub_24F808CA0(v23, v22, 0);
LABEL_201:
    uint64_t v20 = v232 + 1;
    sub_24F792BFC();
    if (v232 + 1 == v19)
    {
      sub_24F808CA0(v7, v6, 1);
      sub_24F808CA0(v7, v6, 1);
      uint64_t v8 = v240;
      a3 = v212;
      goto LABEL_204;
    }
  }
  uint64_t v24 = *(void *)(v23 + 16);
  if (v22)
  {
    if (v24)
    {
      uint64_t v224 = *(void *)(v21 + 8);
      sub_24F808C90(v23, v22, 1);
      swift_bridgeObjectRetain_n();
      uint64_t v168 = v23;
      uint64_t v169 = (char *)(v23 + 48);
      uint64_t v170 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v171 = *((void *)v169 - 2);
        uint64_t v172 = *((void *)v169 - 1);
        char v173 = *v169;
        uint64_t v237 = v171;
        uint64_t v238 = v172;
        char v239 = v173;
        sub_24F808C90(v171, v172, v173);
        sub_24F8050D8(&v236, &v237, v4);
        if (v3)
        {
          sub_24F808CA0(v171, v172, v173);
          sub_24F808CA0(v168, v224, 1);
          swift_bridgeObjectRelease();
          sub_24F808CA0(v168, v224, 1);
          sub_24F808CA0(v168, v224, 1);
          uint64_t v7 = v230;
          uint64_t v180 = v230;
          uint64_t v6 = v228;
          goto LABEL_220;
        }
        sub_24F808CA0(v171, v172, v173);
        uint64_t v174 = v236;
        uint64_t v175 = *(void *)(v236 + 16);
        uint64_t v176 = *(void *)(v170 + 16);
        if (__OFADD__(v176, v175))
        {
          __break(1u);
LABEL_229:
          __break(1u);
LABEL_230:
          __break(1u);
LABEL_231:
          __break(1u);
LABEL_232:
          __break(1u);
LABEL_233:
          __break(1u);
LABEL_234:
          __break(1u);
LABEL_235:
          __break(1u);
LABEL_236:
          __break(1u);
LABEL_237:
          __break(1u);
LABEL_238:
          __break(1u);
LABEL_239:
          __break(1u);
LABEL_240:
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
LABEL_244:
          __break(1u);
LABEL_245:
          __break(1u);
LABEL_246:
          __break(1u);
LABEL_247:
          __break(1u);
LABEL_248:
          __break(1u);
LABEL_249:
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
LABEL_253:
          __break(1u);
LABEL_254:
          __break(1u);
LABEL_255:
          __break(1u);
LABEL_256:
          __break(1u);
LABEL_257:
          __break(1u);
LABEL_258:
          __break(1u);
LABEL_259:
          __break(1u);
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
LABEL_264:
          __break(1u);
LABEL_265:
          __break(1u);
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
          return;
        }
        if (!swift_isUniquelyReferenced_nonNull_native() || v176 + v175 > *(void *)(v170 + 24) >> 1)
        {
          sub_24F787918();
          uint64_t v170 = v177;
        }
        uint64_t v4 = a2;
        if (*(void *)(v174 + 16))
        {
          if ((*(void *)(v170 + 24) >> 1) - *(void *)(v170 + 16) < v175) {
            goto LABEL_230;
          }
          swift_arrayInitWithCopy();
          if (v175)
          {
            uint64_t v178 = *(void *)(v170 + 16);
            BOOL v68 = __OFADD__(v178, v175);
            uint64_t v179 = v178 + v175;
            if (v68) {
              goto LABEL_233;
            }
            *(void *)(v170 + 16) = v179;
          }
        }
        else if (v175)
        {
          goto LABEL_229;
        }
        v169 += 24;
        swift_bridgeObjectRelease();
        --v24;
      }
      while (v24);
      sub_24F808CA0(v168, v224, 1);
      sub_24F808CA0(v168, v224, 1);
      sub_24F808CA0(v168, v224, 1);
      uint64_t v6 = v228;
      uint64_t v7 = v230;
      uint64_t v19 = v222;
    }
    else
    {
LABEL_200:
      uint64_t v6 = v228;
      uint64_t v19 = v222;
    }
    goto LABEL_201;
  }
  if (!v24) {
    goto LABEL_200;
  }
  uint64_t v227 = v23 + 32;
  sub_24F808C90(v23, v22, 1);
  uint64_t v223 = v22;
  sub_24F808C90(v23, v22, 1);
  uint64_t v214 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  uint64_t v26 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v27 = v227 + 24 * v25;
    uint64_t v29 = *(void *)v27;
    uint64_t v28 = *(void *)(v27 + 8);
    uint64_t v229 = v25;
    if ((*(unsigned char *)(v27 + 16) & 1) == 0)
    {
      swift_retain_n();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v29)(&v237, v4);
      if (v3)
      {
        sub_24F808CA0(v29, v28, 0);
        sub_24F808CA0(v29, v28, 0);
        sub_24F808CA0(v214, v223, 1);
        swift_bridgeObjectRelease();
        sub_24F808CA0(v214, v223, 1);
        sub_24F808CA0(v214, v223, 1);
        uint64_t v6 = v228;
        goto LABEL_219;
      }
      sub_24F808CA0(v29, v28, 0);
      sub_24F808CA0(v29, v28, 0);
      uint64_t v148 = v237;
      goto LABEL_171;
    }
    uint64_t v30 = *(void *)(v29 + 16);
    uint64_t v226 = v28;
    uint64_t v233 = v30;
    if (v28)
    {
      if (v30)
      {
        sub_24F808C90(v29, v28, 1);
        swift_bridgeObjectRetain_n();
        uint64_t v216 = v29;
        v151 = (char *)(v29 + 48);
        uint64_t v148 = MEMORY[0x263F8EE78];
        do
        {
          uint64_t v152 = *((void *)v151 - 2);
          uint64_t v153 = *((void *)v151 - 1);
          char v154 = *v151;
          uint64_t v237 = v152;
          uint64_t v238 = v153;
          char v239 = v154;
          sub_24F808C90(v152, v153, v154);
          sub_24F8050D8(&v236, &v237, v4);
          if (v3)
          {
            sub_24F808CA0(v152, v153, v154);
            sub_24F808CA0(v216, v226, 1);
            swift_bridgeObjectRelease();
            sub_24F808CA0(v216, v226, 1);
            sub_24F808CA0(v216, v226, 1);
            sub_24F808CA0(v214, v223, 1);
            swift_bridgeObjectRelease();
            sub_24F808CA0(v214, v223, 1);
            sub_24F808CA0(v214, v223, 1);
            uint64_t v6 = v228;
            uint64_t v7 = v230;
            goto LABEL_219;
          }
          sub_24F808CA0(v152, v153, v154);
          uint64_t v155 = v236;
          uint64_t v156 = *(void *)(v236 + 16);
          uint64_t v157 = *(void *)(v148 + 16);
          if (__OFADD__(v157, v156)) {
            goto LABEL_231;
          }
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v159 = v148;
          if (!isUniquelyReferenced_nonNull_native || v157 + v156 > *(void *)(v148 + 24) >> 1)
          {
            sub_24F787918();
            uint64_t v159 = v160;
          }
          uint64_t v4 = a2;
          if (*(void *)(v155 + 16))
          {
            if ((*(void *)(v159 + 24) >> 1) - *(void *)(v159 + 16) < v156) {
              goto LABEL_234;
            }
            uint64_t v148 = v159;
            swift_arrayInitWithCopy();
            if (v156)
            {
              uint64_t v161 = *(void *)(v148 + 16);
              BOOL v68 = __OFADD__(v161, v156);
              uint64_t v162 = v161 + v156;
              if (v68) {
                goto LABEL_237;
              }
              *(void *)(v148 + 16) = v162;
            }
          }
          else
          {
            uint64_t v148 = v159;
            if (v156) {
              goto LABEL_232;
            }
          }
          v151 += 24;
          swift_bridgeObjectRelease();
          --v233;
        }
        while (v233);
        sub_24F808CA0(v216, v226, 1);
        sub_24F808CA0(v216, v226, 1);
        uint64_t v149 = v216;
        uint64_t v150 = v226;
LABEL_169:
        sub_24F808CA0(v149, v150, 1);
        uint64_t v7 = v230;
        goto LABEL_171;
      }
      goto LABEL_170;
    }
    if (v30) {
      break;
    }
LABEL_170:
    uint64_t v148 = MEMORY[0x263F8EE78];
LABEL_171:
    uint64_t v163 = *(void *)(v148 + 16);
    uint64_t v164 = *(void *)(v26 + 16);
    if (__OFADD__(v164, v163)) {
      goto LABEL_241;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v164 + v163 > *(void *)(v26 + 24) >> 1)
    {
      sub_24F787918();
      uint64_t v26 = v165;
    }
    if (*(void *)(v148 + 16))
    {
      if ((*(void *)(v26 + 24) >> 1) - *(void *)(v26 + 16) < v163) {
        goto LABEL_247;
      }
      swift_arrayInitWithCopy();
      if (v163)
      {
        uint64_t v166 = *(void *)(v26 + 16);
        BOOL v68 = __OFADD__(v166, v163);
        uint64_t v167 = v166 + v163;
        if (v68) {
          goto LABEL_252;
        }
        *(void *)(v26 + 16) = v167;
      }
    }
    else if (v163)
    {
      goto LABEL_242;
    }
    uint64_t v25 = v229 + 1;
    swift_bridgeObjectRelease();
    if (v229 + 1 == v24)
    {
      sub_24F808CA0(v214, v223, 1);
      sub_24F808CA0(v214, v223, 1);
      sub_24F808CA0(v214, v223, 1);
      goto LABEL_200;
    }
  }
  uint64_t v221 = v29 + 32;
  sub_24F808C90(v29, v28, 1);
  sub_24F808C90(v29, v28, 1);
  uint64_t v215 = v29;
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v213 = v26;
  while (1)
  {
    uint64_t v225 = v31;
    uint64_t v33 = v221 + 24 * v31;
    uint64_t v35 = *(void *)v33;
    uint64_t v34 = *(void *)(v33 + 8);
    if ((*(unsigned char *)(v33 + 16) & 1) == 0)
    {
      uint64_t v123 = v32;
      swift_retain_n();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v35)(&v237, v4);
      if (v3)
      {
        sub_24F808CA0(v35, v34, 0);
        sub_24F808CA0(v35, v34, 0);
        sub_24F808CA0(v215, v28, 1);
        swift_bridgeObjectRelease();
        sub_24F808CA0(v215, v28, 1);
        sub_24F808CA0(v215, v28, 1);
        uint64_t v6 = v228;
        uint64_t v7 = v230;
        goto LABEL_217;
      }
      sub_24F808CA0(v35, v34, 0);
      sub_24F808CA0(v35, v34, 0);
      uint64_t v122 = v237;
      uint64_t v32 = v123;
      goto LABEL_140;
    }
    uint64_t v36 = *(void *)(v35 + 16);
    if ((v34 & 1) == 0) {
      break;
    }
    if (v36)
    {
      uint64_t v205 = *(void *)(v33 + 8);
      uint64_t v207 = v32;
      sub_24F808C90(v35, v34, 1);
      swift_bridgeObjectRetain_n();
      uint64_t v203 = v35;
      uint64_t v124 = (char *)(v35 + 48);
      uint64_t v125 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v126 = *((void *)v124 - 2);
        uint64_t v127 = *((void *)v124 - 1);
        char v128 = *v124;
        uint64_t v237 = v126;
        uint64_t v238 = v127;
        char v239 = v128;
        sub_24F808C90(v126, v127, v128);
        sub_24F8050D8(&v236, &v237, v4);
        if (v3)
        {
          sub_24F808CA0(v126, v127, v128);
          sub_24F808CA0(v203, v205, 1);
          swift_bridgeObjectRelease();
          sub_24F808CA0(v203, v205, 1);
          sub_24F808CA0(v203, v205, 1);
          sub_24F808CA0(v215, v226, 1);
          swift_bridgeObjectRelease();
          sub_24F808CA0(v215, v226, 1);
          sub_24F808CA0(v215, v226, 1);
          uint64_t v6 = v228;
          uint64_t v7 = v230;
          goto LABEL_217;
        }
        sub_24F808CA0(v126, v127, v128);
        uint64_t v129 = v236;
        uint64_t v130 = *(void *)(v236 + 16);
        uint64_t v131 = *(void *)(v125 + 16);
        if (__OFADD__(v131, v130)) {
          goto LABEL_235;
        }
        int v132 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v133 = v125;
        if (!v132 || v131 + v130 > *(void *)(v125 + 24) >> 1)
        {
          sub_24F787918();
          uint64_t v133 = v134;
        }
        uint64_t v4 = a2;
        if (*(void *)(v129 + 16))
        {
          if ((*(void *)(v133 + 24) >> 1) - *(void *)(v133 + 16) < v130) {
            goto LABEL_238;
          }
          uint64_t v125 = v133;
          swift_arrayInitWithCopy();
          if (v130)
          {
            uint64_t v135 = *(void *)(v125 + 16);
            BOOL v68 = __OFADD__(v135, v130);
            uint64_t v136 = v135 + v130;
            if (v68) {
              goto LABEL_243;
            }
            *(void *)(v125 + 16) = v136;
          }
        }
        else
        {
          uint64_t v125 = v133;
          if (v130) {
            goto LABEL_236;
          }
        }
        v124 += 24;
        swift_bridgeObjectRelease();
        --v36;
      }
      while (v36);
      sub_24F808CA0(v203, v205, 1);
      sub_24F808CA0(v203, v205, 1);
      sub_24F808CA0(v203, v205, 1);
      uint64_t v32 = v207;
      uint64_t v122 = v125;
      goto LABEL_139;
    }
LABEL_138:
    uint64_t v122 = MEMORY[0x263F8EE78];
LABEL_139:
    uint64_t v26 = v213;
LABEL_140:
    uint64_t v137 = *(void *)(v122 + 16);
    uint64_t v138 = *(void *)(v32 + 16);
    if (__OFADD__(v138, v137)) {
      goto LABEL_248;
    }
    uint64_t v139 = v122;
    uint64_t v140 = v32;
    char v141 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v142 = v140;
    if ((v141 & 1) == 0 || v138 + v137 > *(void *)(v140 + 24) >> 1)
    {
      sub_24F787918();
      uint64_t v142 = v143;
    }
    uint64_t v28 = v226;
    if (*(void *)(v139 + 16))
    {
      if ((*(void *)(v142 + 24) >> 1) - *(void *)(v142 + 16) < v137) {
        goto LABEL_253;
      }
      uint64_t v144 = v142;
      swift_arrayInitWithCopy();
      uint64_t v145 = v233;
      if (v137)
      {
        uint64_t v146 = *(void *)(v144 + 16);
        BOOL v68 = __OFADD__(v146, v137);
        uint64_t v147 = v146 + v137;
        if (v68) {
          goto LABEL_257;
        }
        *(void *)(v144 + 16) = v147;
      }
    }
    else
    {
      uint64_t v144 = v142;
      uint64_t v145 = v233;
      if (v137) {
        goto LABEL_249;
      }
    }
    uint64_t v31 = v225 + 1;
    swift_bridgeObjectRelease();
    uint64_t v32 = v144;
    if (v225 + 1 == v145)
    {
      uint64_t v148 = v144;
      sub_24F808CA0(v215, v226, 1);
      sub_24F808CA0(v215, v226, 1);
      uint64_t v149 = v215;
      uint64_t v150 = v226;
      goto LABEL_169;
    }
  }
  if (!v36) {
    goto LABEL_138;
  }
  uint64_t v201 = *(void *)(v35 + 16);
  uint64_t v206 = v32;
  uint64_t v211 = v35 + 32;
  sub_24F808C90(v35, v34, 1);
  uint64_t v204 = v34;
  sub_24F808C90(v35, v34, 1);
  uint64_t v202 = v35;
  swift_bridgeObjectRetain();
  uint64_t v37 = 0;
  uint64_t v38 = MEMORY[0x263F8EE78];
  uint64_t v26 = v213;
  while (1)
  {
    uint64_t v39 = v211 + 24 * v37;
    uint64_t v41 = *(void *)v39;
    uint64_t v40 = *(void *)(v39 + 8);
    uint64_t v217 = v37;
    if ((*(unsigned char *)(v39 + 16) & 1) == 0)
    {
      uint64_t v94 = v38;
      swift_retain_n();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v41)(&v237, v4);
      uint64_t v95 = v41;
      uint64_t v7 = v230;
      if (v3)
      {
        sub_24F808CA0(v95, v40, 0);
        sub_24F808CA0(v95, v40, 0);
        sub_24F808CA0(v202, v204, 1);
        swift_bridgeObjectRelease();
        sub_24F808CA0(v202, v204, 1);
        sub_24F808CA0(v202, v204, 1);
        uint64_t v6 = v228;
        goto LABEL_216;
      }
      sub_24F808CA0(v95, v40, 0);
      sub_24F808CA0(v95, v40, 0);
      uint64_t v93 = v237;
      uint64_t v38 = v94;
      goto LABEL_109;
    }
    uint64_t v209 = *(void *)v39;
    uint64_t v42 = *(void *)(v41 + 16);
    uint64_t v7 = v230;
    uint64_t v210 = *(void *)(v39 + 8);
    if (v40)
    {
      if (v42)
      {
        uint64_t v196 = v38;
        sub_24F808C90(v209, v40, 1);
        swift_bridgeObjectRetain_n();
        uint64_t v96 = (char *)(v209 + 48);
        uint64_t v97 = MEMORY[0x263F8EE78];
        do
        {
          uint64_t v98 = v24;
          uint64_t v99 = v42;
          uint64_t v100 = *((void *)v96 - 2);
          uint64_t v101 = *((void *)v96 - 1);
          char v102 = *v96;
          uint64_t v237 = v100;
          uint64_t v238 = v101;
          char v239 = v102;
          sub_24F808C90(v100, v101, v102);
          sub_24F8050D8(&v236, &v237, v4);
          if (v3)
          {
            sub_24F808CA0(v100, v101, v102);
            sub_24F808CA0(v209, v210, 1);
            swift_bridgeObjectRelease();
            sub_24F808CA0(v209, v210, 1);
            sub_24F808CA0(v209, v210, 1);
            sub_24F808CA0(v202, v204, 1);
            swift_bridgeObjectRelease();
            sub_24F808CA0(v202, v204, 1);
            sub_24F808CA0(v202, v204, 1);
            uint64_t v6 = v228;
            uint64_t v7 = v230;
            goto LABEL_216;
          }
          sub_24F808CA0(v100, v101, v102);
          uint64_t v103 = v236;
          uint64_t v104 = *(void *)(v236 + 16);
          uint64_t v105 = *(void *)(v97 + 16);
          if (__OFADD__(v105, v104)) {
            goto LABEL_239;
          }
          int v106 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v107 = v97;
          if (!v106 || v105 + v104 > *(void *)(v97 + 24) >> 1)
          {
            sub_24F787918();
            uint64_t v107 = v108;
          }
          uint64_t v4 = a2;
          uint64_t v109 = v99;
          uint64_t v24 = v98;
          if (*(void *)(v103 + 16))
          {
            if ((*(void *)(v107 + 24) >> 1) - *(void *)(v107 + 16) < v104) {
              goto LABEL_244;
            }
            uint64_t v97 = v107;
            swift_arrayInitWithCopy();
            if (v104)
            {
              uint64_t v110 = *(void *)(v97 + 16);
              BOOL v68 = __OFADD__(v110, v104);
              uint64_t v111 = v110 + v104;
              if (v68) {
                goto LABEL_250;
              }
              *(void *)(v97 + 16) = v111;
            }
          }
          else
          {
            uint64_t v97 = v107;
            if (v104) {
              goto LABEL_240;
            }
          }
          v96 += 24;
          swift_bridgeObjectRelease();
          uint64_t v42 = v109 - 1;
        }
        while (v42);
        sub_24F808CA0(v209, v210, 1);
        sub_24F808CA0(v209, v210, 1);
        sub_24F808CA0(v209, v210, 1);
        uint64_t v38 = v196;
        uint64_t v93 = v97;
        uint64_t v26 = v213;
        goto LABEL_109;
      }
      goto LABEL_108;
    }
    if (v42) {
      break;
    }
LABEL_108:
    uint64_t v93 = MEMORY[0x263F8EE78];
LABEL_109:
    uint64_t v112 = *(void *)(v93 + 16);
    uint64_t v113 = *(void *)(v38 + 16);
    if (__OFADD__(v113, v112)) {
      goto LABEL_254;
    }
    uint64_t v114 = v93;
    uint64_t v115 = v38;
    char v116 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v117 = v115;
    if ((v116 & 1) == 0 || v113 + v112 > *(void *)(v115 + 24) >> 1)
    {
      sub_24F787918();
      uint64_t v117 = v118;
    }
    if (*(void *)(v114 + 16))
    {
      if ((*(void *)(v117 + 24) >> 1) - *(void *)(v117 + 16) < v112) {
        goto LABEL_258;
      }
      uint64_t v119 = v117;
      swift_arrayInitWithCopy();
      if (v112)
      {
        uint64_t v120 = *(void *)(v119 + 16);
        BOOL v68 = __OFADD__(v120, v112);
        uint64_t v121 = v120 + v112;
        if (v68) {
          goto LABEL_264;
        }
        *(void *)(v119 + 16) = v121;
      }
    }
    else
    {
      uint64_t v119 = v117;
      if (v112) {
        goto LABEL_255;
      }
    }
    uint64_t v37 = v217 + 1;
    swift_bridgeObjectRelease();
    uint64_t v38 = v119;
    if (v217 + 1 == v201)
    {
      sub_24F808CA0(v202, v204, 1);
      sub_24F808CA0(v202, v204, 1);
      sub_24F808CA0(v202, v204, 1);
      uint64_t v122 = v119;
      uint64_t v32 = v206;
      goto LABEL_140;
    }
  }
  uint64_t v195 = v38;
  uint64_t v197 = v42;
  sub_24F808C90(v209, v40, 1);
  sub_24F808C90(v209, v40, 1);
  swift_bridgeObjectRetain();
  uint64_t v43 = 0;
  uint64_t v44 = MEMORY[0x263F8EE78];
  uint64_t v191 = v24;
  while (1)
  {
    uint64_t v208 = v43;
    uint64_t v45 = v209 + 32 + 24 * v43;
    uint64_t v47 = *(void *)v45;
    uint64_t v46 = *(void *)(v45 + 8);
    if ((*(unsigned char *)(v45 + 16) & 1) == 0)
    {
      uint64_t v199 = v44;
      swift_retain_n();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v47)(&v237, v4);
      if (v3)
      {
        sub_24F808CA0(v47, v46, 0);
        sub_24F808CA0(v47, v46, 0);
        sub_24F808CA0(v209, v40, 1);
        swift_bridgeObjectRelease();
        sub_24F808CA0(v209, v40, 1);
        uint64_t v184 = v209;
        uint64_t v185 = v40;
        goto LABEL_213;
      }
      sub_24F808CA0(v47, v46, 0);
      sub_24F808CA0(v47, v46, 0);
      uint64_t v70 = v237;
LABEL_61:
      uint64_t v44 = v199;
      goto LABEL_79;
    }
    uint64_t v48 = *(void *)(v47 + 16);
    if ((v46 & 1) == 0) {
      break;
    }
    if (v48)
    {
      uint64_t v200 = v44;
      uint64_t v190 = *(void *)(v45 + 8);
      sub_24F808C90(v47, v46, 1);
      swift_bridgeObjectRetain_n();
      uint64_t v188 = v47;
      int v71 = (char *)(v47 + 48);
      uint64_t v72 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v73 = *((void *)v71 - 2);
        uint64_t v74 = *((void *)v71 - 1);
        char v75 = *v71;
        uint64_t v237 = v73;
        uint64_t v238 = v74;
        char v239 = v75;
        sub_24F808C90(v73, v74, v75);
        sub_24F8050D8(&v236, &v237, v4);
        if (v3)
        {
          sub_24F808CA0(v73, v74, v75);
          sub_24F808CA0(v188, v190, 1);
          swift_bridgeObjectRelease();
          sub_24F808CA0(v188, v190, 1);
          sub_24F808CA0(v188, v190, 1);
          sub_24F808CA0(v209, v210, 1);
          swift_bridgeObjectRelease();
          sub_24F808CA0(v209, v210, 1);
          sub_24F808CA0(v209, v210, 1);
          uint64_t v6 = v228;
          uint64_t v7 = v230;
          goto LABEL_215;
        }
        sub_24F808CA0(v73, v74, v75);
        uint64_t v76 = v236;
        uint64_t v77 = *(void *)(v236 + 16);
        uint64_t v78 = *(void *)(v72 + 16);
        if (__OFADD__(v78, v77)) {
          goto LABEL_245;
        }
        int v79 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v80 = v72;
        if (!v79 || v78 + v77 > *(void *)(v72 + 24) >> 1)
        {
          sub_24F787918();
          uint64_t v80 = v81;
        }
        uint64_t v7 = v230;
        uint64_t v4 = a2;
        if (*(void *)(v76 + 16))
        {
          if ((*(void *)(v80 + 24) >> 1) - *(void *)(v80 + 16) < v77) {
            goto LABEL_251;
          }
          uint64_t v72 = v80;
          swift_arrayInitWithCopy();
          if (v77)
          {
            uint64_t v82 = *(void *)(v72 + 16);
            BOOL v68 = __OFADD__(v82, v77);
            uint64_t v83 = v82 + v77;
            if (v68) {
              goto LABEL_256;
            }
            *(void *)(v72 + 16) = v83;
          }
        }
        else
        {
          uint64_t v72 = v80;
          if (v77) {
            goto LABEL_246;
          }
        }
        v71 += 24;
        swift_bridgeObjectRelease();
        --v48;
      }
      while (v48);
      sub_24F808CA0(v188, v190, 1);
      sub_24F808CA0(v188, v190, 1);
      sub_24F808CA0(v188, v190, 1);
      uint64_t v44 = v200;
      uint64_t v70 = v72;
      goto LABEL_78;
    }
LABEL_77:
    uint64_t v70 = MEMORY[0x263F8EE78];
LABEL_78:
    uint64_t v24 = v191;
LABEL_79:
    uint64_t v220 = v70;
    uint64_t v84 = *(void *)(v70 + 16);
    uint64_t v85 = *(void *)(v44 + 16);
    if (__OFADD__(v85, v84)) {
      goto LABEL_259;
    }
    uint64_t v86 = v44;
    char v87 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v88 = v86;
    if ((v87 & 1) == 0 || v85 + v84 > *(void *)(v86 + 24) >> 1)
    {
      sub_24F787918();
      uint64_t v88 = v89;
    }
    uint64_t v40 = v210;
    if (*(void *)(v220 + 16))
    {
      if ((*(void *)(v88 + 24) >> 1) - *(void *)(v88 + 16) < v84) {
        goto LABEL_263;
      }
      uint64_t v90 = v88;
      swift_arrayInitWithCopy();
      if (v84)
      {
        uint64_t v91 = *(void *)(v90 + 16);
        BOOL v68 = __OFADD__(v91, v84);
        uint64_t v92 = v91 + v84;
        if (v68) {
          goto LABEL_266;
        }
        *(void *)(v90 + 16) = v92;
      }
    }
    else
    {
      uint64_t v90 = v88;
      if (v84) {
        goto LABEL_260;
      }
    }
    uint64_t v43 = v208 + 1;
    swift_bridgeObjectRelease();
    uint64_t v44 = v90;
    if (v208 + 1 == v197)
    {
      sub_24F808CA0(v209, v210, 1);
      sub_24F808CA0(v209, v210, 1);
      sub_24F808CA0(v209, v210, 1);
      uint64_t v93 = v90;
      uint64_t v38 = v195;
      goto LABEL_109;
    }
  }
  if (!v48) {
    goto LABEL_77;
  }
  uint64_t v192 = *(void *)(v47 + 16);
  uint64_t v199 = v44;
  uint64_t v194 = v47 + 32;
  sub_24F808C90(v47, v46, 1);
  uint64_t v189 = v46;
  sub_24F808C90(v47, v46, 1);
  uint64_t v187 = v47;
  swift_bridgeObjectRetain();
  uint64_t v49 = 0;
  uint64_t v50 = MEMORY[0x263F8EE78];
  uint64_t v24 = v191;
  while (1)
  {
    uint64_t v51 = v194 + 24 * v49;
    uint64_t v53 = *(void *)v51;
    uint64_t v52 = *(void *)(v51 + 8);
    uint64_t v198 = v49;
    if ((*(unsigned char *)(v51 + 16) & 1) == 0) {
      break;
    }
    uint64_t v193 = *(void *)(v51 + 8);
    uint64_t v54 = MEMORY[0x263F8EE78];
    if (v52)
    {
      uint64_t v236 = MEMORY[0x263F8EE78];
      uint64_t v60 = *(void *)(v53 + 16);
      if (v60)
      {
        uint64_t v218 = v50;
        sub_24F808C90(v53, v193, 1);
        swift_bridgeObjectRetain_n();
        uint64_t v186 = v53;
        int v61 = (char *)(v53 + 48);
        while (1)
        {
          uint64_t v57 = *((void *)v61 - 2);
          uint64_t v58 = *((void *)v61 - 1);
          char v59 = *v61;
          uint64_t v237 = v57;
          uint64_t v238 = v58;
          char v239 = v59;
          sub_24F808C90(v57, v58, v59);
          sub_24F8050D8(&v235, &v237, a2);
          if (v3) {
            goto LABEL_211;
          }
          v61 += 24;
          sub_24F808CA0(v57, v58, v59);
          sub_24F792BFC();
          if (!--v60)
          {
LABEL_45:
            sub_24F808CA0(v186, v193, 1);
            sub_24F808CA0(v186, v193, 1);
            sub_24F808CA0(v186, v193, 1);
            uint64_t v54 = v236;
            uint64_t v4 = a2;
            goto LABEL_46;
          }
        }
      }
    }
    else
    {
      uint64_t v236 = MEMORY[0x263F8EE78];
      uint64_t v55 = *(void *)(v53 + 16);
      if (v55)
      {
        uint64_t v218 = v50;
        sub_24F808C90(v53, v193, 1);
        swift_bridgeObjectRetain_n();
        uint64_t v186 = v53;
        int v56 = (char *)(v53 + 48);
        while (1)
        {
          uint64_t v57 = *((void *)v56 - 2);
          uint64_t v58 = *((void *)v56 - 1);
          char v59 = *v56;
          uint64_t v237 = v57;
          uint64_t v238 = v58;
          char v239 = v59;
          sub_24F808C90(v57, v58, v59);
          sub_24F806D04((uint64_t)&v237, a2, &v235);
          if (v3) {
            break;
          }
          v56 += 24;
          sub_24F808CA0(v57, v58, v59);
          sub_24F792BFC();
          if (!--v55) {
            goto LABEL_45;
          }
        }
LABEL_211:
        sub_24F808CA0(v57, v58, v59);
        sub_24F808CA0(v186, v193, 1);
        swift_bridgeObjectRelease();
        sub_24F808CA0(v186, v193, 1);
        sub_24F808CA0(v186, v193, 1);
        sub_24F808CA0(v187, v189, 1);
        swift_bridgeObjectRelease();
        sub_24F808CA0(v187, v189, 1);
        sub_24F808CA0(v187, v189, 1);
        uint64_t v7 = v230;
        goto LABEL_212;
      }
    }
LABEL_47:
    uint64_t v219 = v54;
    uint64_t v62 = *(void *)(v54 + 16);
    uint64_t v63 = *(void *)(v50 + 16);
    if (__OFADD__(v63, v62)) {
      goto LABEL_261;
    }
    uint64_t v64 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v63 + v62 > *(void *)(v64 + 24) >> 1)
    {
      sub_24F787918();
      uint64_t v64 = v65;
    }
    uint64_t v7 = v230;
    if (*(void *)(v219 + 16))
    {
      if ((*(void *)(v64 + 24) >> 1) - *(void *)(v64 + 16) < v62) {
        goto LABEL_265;
      }
      uint64_t v66 = v64;
      swift_arrayInitWithCopy();
      if (v62)
      {
        uint64_t v67 = *(void *)(v64 + 16);
        BOOL v68 = __OFADD__(v67, v62);
        uint64_t v69 = v67 + v62;
        if (v68) {
          goto LABEL_267;
        }
        *(void *)(v64 + 16) = v69;
      }
    }
    else
    {
      uint64_t v66 = v64;
      if (v62) {
        goto LABEL_262;
      }
    }
    uint64_t v49 = v198 + 1;
    swift_bridgeObjectRelease();
    uint64_t v50 = v66;
    if (v198 + 1 == v192)
    {
      sub_24F808CA0(v187, v189, 1);
      sub_24F808CA0(v187, v189, 1);
      sub_24F808CA0(v187, v189, 1);
      uint64_t v70 = v66;
      goto LABEL_61;
    }
  }
  uint64_t v218 = v50;
  swift_retain_n();
  ((void (*)(uint64_t *__return_ptr, uint64_t))v53)(&v237, v4);
  if (!v3)
  {
    sub_24F808CA0(v53, v52, 0);
    sub_24F808CA0(v53, v52, 0);
    uint64_t v54 = v237;
LABEL_46:
    uint64_t v50 = v218;
    goto LABEL_47;
  }
  sub_24F808CA0(v53, v52, 0);
  sub_24F808CA0(v53, v52, 0);
  sub_24F808CA0(v187, v189, 1);
  swift_bridgeObjectRelease();
  sub_24F808CA0(v187, v189, 1);
  sub_24F808CA0(v187, v189, 1);
LABEL_212:
  sub_24F808CA0(v209, v210, 1);
  swift_bridgeObjectRelease();
  sub_24F808CA0(v209, v210, 1);
  uint64_t v184 = v209;
  uint64_t v185 = v210;
LABEL_213:
  sub_24F808CA0(v184, v185, 1);
  uint64_t v6 = v228;
LABEL_215:
  sub_24F808CA0(v202, v204, 1);
  swift_bridgeObjectRelease();
  sub_24F808CA0(v202, v204, 1);
  sub_24F808CA0(v202, v204, 1);
LABEL_216:
  sub_24F808CA0(v215, v226, 1);
  swift_bridgeObjectRelease();
  sub_24F808CA0(v215, v226, 1);
  sub_24F808CA0(v215, v226, 1);
LABEL_217:
  sub_24F808CA0(v214, v223, 1);
  swift_bridgeObjectRelease();
  sub_24F808CA0(v214, v223, 1);
  uint64_t v181 = v214;
  uint64_t v182 = v223;
  char v183 = 1;
LABEL_218:
  sub_24F808CA0(v181, v182, v183);
LABEL_219:
  uint64_t v180 = v7;
LABEL_220:
  sub_24F808CA0(v180, v6, 1);
  swift_bridgeObjectRelease();
  uint64_t v16 = v7;
  uint64_t v17 = v6;
LABEL_221:
  char v18 = 1;
LABEL_222:
  sub_24F808CA0(v16, v17, v18);
}

void sub_24F806D04(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    swift_retain();
    ((void (*)(uint64_t *__return_ptr, uint64_t))v7)(&v37, a2);
    sub_24F808CA0(v7, v6, 0);
    if (v3) {
      return;
    }
    uint64_t v10 = v37;
LABEL_36:
    *uint64_t v5 = v10;
    return;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (v6)
  {
    if (v8)
    {
      uint64_t v36 = *(void *)(a1 + 8);
      uint64_t v34 = a3;
      swift_bridgeObjectRetain_n();
      uint64_t v35 = v7;
      uint64_t v24 = (char *)(v7 + 48);
      uint64_t v10 = MEMORY[0x263F8EE78];
      while (1)
      {
        uint64_t v25 = *((void *)v24 - 2);
        uint64_t v26 = *((void *)v24 - 1);
        char v27 = *v24;
        uint64_t v37 = v25;
        uint64_t v38 = v26;
        char v39 = v27;
        sub_24F808C90(v25, v26, v27);
        sub_24F8050D8(&v40, &v37, a2);
        uint64_t v14 = v25;
        uint64_t v15 = v26;
        char v16 = v27;
        if (v3) {
          goto LABEL_37;
        }
        sub_24F808CA0(v25, v26, v27);
        uint64_t v28 = v40;
        uint64_t v29 = *(void *)(v40 + 16);
        uint64_t v30 = *(void *)(v10 + 16);
        if (__OFADD__(v30, v29))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return;
        }
        if (!swift_isUniquelyReferenced_nonNull_native() || v30 + v29 > *(void *)(v10 + 24) >> 1)
        {
          sub_24F787918();
          uint64_t v10 = v31;
        }
        if (*(void *)(v28 + 16))
        {
          if ((*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16) < v29) {
            goto LABEL_44;
          }
          swift_arrayInitWithCopy();
          if (v29)
          {
            uint64_t v32 = *(void *)(v10 + 16);
            BOOL v22 = __OFADD__(v32, v29);
            uint64_t v33 = v32 + v29;
            if (v22) {
              goto LABEL_45;
            }
            *(void *)(v10 + 16) = v33;
          }
        }
        else if (v29)
        {
          goto LABEL_42;
        }
        v24 += 24;
        swift_bridgeObjectRelease();
        if (!--v8)
        {
LABEL_34:
          sub_24F808CA0(v35, v36, 1);
          sub_24F808CA0(v35, v36, 1);
          uint64_t v5 = v34;
          goto LABEL_36;
        }
      }
    }
    goto LABEL_35;
  }
  if (!v8)
  {
LABEL_35:
    uint64_t v10 = MEMORY[0x263F8EE78];
    goto LABEL_36;
  }
  uint64_t v36 = *(void *)(a1 + 8);
  uint64_t v34 = a3;
  swift_bridgeObjectRetain_n();
  uint64_t v35 = v7;
  uint64_t v9 = (char *)(v7 + 48);
  uint64_t v10 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v11 = *((void *)v9 - 2);
    uint64_t v12 = *((void *)v9 - 1);
    char v13 = *v9;
    uint64_t v37 = v11;
    uint64_t v38 = v12;
    char v39 = v13;
    sub_24F808C90(v11, v12, v13);
    sub_24F806D04(&v40, &v37, a2);
    uint64_t v14 = v11;
    uint64_t v15 = v12;
    char v16 = v13;
    if (v3) {
      break;
    }
    sub_24F808CA0(v11, v12, v13);
    uint64_t v17 = v40;
    uint64_t v18 = *(void *)(v40 + 16);
    uint64_t v19 = *(void *)(v10 + 16);
    if (__OFADD__(v19, v18))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v19 + v18 > *(void *)(v10 + 24) >> 1)
    {
      sub_24F787918();
      uint64_t v10 = v20;
    }
    if (*(void *)(v17 + 16))
    {
      if ((*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16) < v18) {
        goto LABEL_43;
      }
      swift_arrayInitWithCopy();
      if (v18)
      {
        uint64_t v21 = *(void *)(v10 + 16);
        BOOL v22 = __OFADD__(v21, v18);
        uint64_t v23 = v21 + v18;
        if (v22) {
          goto LABEL_46;
        }
        *(void *)(v10 + 16) = v23;
      }
    }
    else if (v18)
    {
      goto LABEL_41;
    }
    v9 += 24;
    swift_bridgeObjectRelease();
    if (!--v8) {
      goto LABEL_34;
    }
  }
LABEL_37:
  sub_24F808CA0(v14, v15, v16);
  sub_24F808CA0(v35, v36, 1);
  swift_bridgeObjectRelease();
  sub_24F808CA0(v35, v36, 1);
}

uint64_t sub_24F807080@<X0>(uint64_t a1@<X8>)
{
  sub_24F7A46F0((uint64_t)v3);
  return sub_24F8096D0((uint64_t)v3, a1, qword_26B1F7458);
}

uint64_t sub_24F8070C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a2, a1);
}

uint64_t sub_24F8070F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  swift_retain();
  swift_retain();
  sub_24F7FF914(a3, a2, a1);
  v11[0] = 4476481;
  v11[1] = 0xE300000000000000;
  long long v12 = xmmword_24F8DF640;
  __int16 v13 = 256;
  char v14 = 0;
  sub_24F781274(&qword_26B1F5970);
  sub_24F808E88();
  swift_getKeyPath();
  swift_retain();
  sub_24F8C4C14();
  unint64_t v9 = v8;
  swift_release();
  sub_24F816D90((uint64_t)v11, v9, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8071FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (v9 = sub_24F8CFD00(), uint64_t result = 0, (v9 & 1) != 0))
  {
    if (v2)
    {
      if (v6)
      {
        if (sub_24F7EBE30(v2, v6))
        {
          if (v3)
          {
            if (v5 && (sub_24F7EBE30(v3, v5) & 1) != 0) {
              goto LABEL_12;
            }
          }
          else if (!v5)
          {
LABEL_12:
            sub_24F799198((uint64_t)v2);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v4 ^ v7 ^ 1u;
          }
        }
        sub_24F799198((uint64_t)v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      sub_24F799198((uint64_t)v2);
    }
    else if (!v6)
    {
      return v4 ^ v7 ^ 1u;
    }
    uint64_t v11 = sub_24F77390C();
    sub_24F799198(v11);
    uint64_t v12 = sub_24F76B8E8();
    sub_24F77835C(v12);
    uint64_t v13 = sub_24F77390C();
    sub_24F77835C(v13);
    return 0;
  }
  return result;
}

void sub_24F80731C()
{
  sub_24F76B80C();
  uint64_t v3 = v2;
  long long v138 = *(_OWORD *)v0;
  uint64_t v118 = v0;
  uint64_t v120 = v1;
  uint64_t v139 = *((void *)v0 + 2);
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)&v138 + 1);
  BOOL v6 = (void)v138 == *(void *)v1 && *((void *)&v138 + 1) == *((void *)v1 + 1);
  if (!v6 && (sub_24F8CFD00() & 1) == 0) {
    goto LABEL_9;
  }
  sub_24F8096D0((uint64_t)&v139, (uint64_t)&v140, &qword_269A2B368);
  sub_24F8096D0((uint64_t)&v140, (uint64_t)&v141, &qword_269A2B368);
  uint64_t v7 = v141;
  if (!v141)
  {
    uint64_t v7 = v4;
    if (!v4) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (!v4)
  {
LABEL_11:
    sub_24F809260((uint64_t)&v140);
    swift_retain();
    goto LABEL_12;
  }
  sub_24F809260((uint64_t)&v140);
  uint64_t v8 = swift_retain();
  uint64_t v7 = sub_24F8299BC(v8);
  sub_24F80928C((uint64_t)&v140);
  swift_release();
  if (!v7)
  {
LABEL_9:
    sub_24F809258(&v133);
    sub_24F8096D0((uint64_t)&v133, (uint64_t)v127, &qword_269A2B360);
    goto LABEL_97;
  }
LABEL_12:
  uint64_t v10 = *((void *)v0 + 5);
  uint64_t v9 = *((void *)v0 + 6);
  uint64_t v11 = *((void *)v120 + 5);
  uint64_t v12 = *((void *)v120 + 6);
  uint64_t v117 = v3;
  uint64_t v112 = v138;
  uint64_t v115 = v7;
  if (!v10)
  {
    uint64_t v13 = (uint64_t (*)(uint64_t))*((void *)v120 + 5);
    char v14 = (void *)*((void *)v120 + 6);
    if (!v11)
    {
      uint64_t v113 = 0;
      uint64_t v114 = (void *)*((void *)v120 + 6);
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  uint64_t v13 = (uint64_t (*)(uint64_t))*((void *)v118 + 5);
  char v14 = (void *)*((void *)v118 + 6);
  if (!v11)
  {
LABEL_16:
    uint64_t v113 = v13;
    uint64_t v114 = v14;
    uint64_t v16 = sub_24F77390C();
    sub_24F78C440(v16);
    goto LABEL_18;
  }
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v15[2] = v10;
  v15[3] = v9;
  long long v15[4] = v11;
  v15[5] = v12;
  uint64_t v114 = v15;
  swift_retain();
  uint64_t v113 = sub_24F80AB90;
LABEL_18:
  uint64_t v116 = v5;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_24F76B8E8();
  sub_24F78C440(v17);
  sub_24F7CB298();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v22 = *((void *)v118 + 11);
  uint64_t v23 = *((void *)v118 + 12);
  uint64_t v136 = v23;
  uint64_t v137 = v22;
  unint64_t v24 = *(void *)(v22 + 16);
  if (!v24) {
    goto LABEL_54;
  }
  uint64_t v25 = (void *)*((void *)v120 + 12);
  sub_24F8092B8((uint64_t)&v137);
  sub_24F8092B8((uint64_t)&v136);
  if (!*(void *)(v23 + 16)) {
    goto LABEL_100;
  }
  uint64_t v26 = (uint64_t *)(v22 + 40);
  while (1)
  {
    uint64_t v28 = *(v26 - 1);
    uint64_t v27 = *v26;
    swift_bridgeObjectRetain_n();
    sub_24F782950();
    if ((v29 & 1) == 0) {
      goto LABEL_101;
    }
    sub_24F76FFAC();
    memcpy(__dst, v30, 0xD2uLL);
    sub_24F7ADF80((uint64_t)__dst);
    swift_bridgeObjectRelease();
    uint64_t v133 = v28;
    uint64_t v134 = v27;
    memcpy(v135, __dst, 0xD2uLL);
    swift_bridgeObjectRetain();
    sub_24F7ADF80((uint64_t)__dst);
    sub_24F7AE06C((uint64_t)&v133);
    if (!v25[2]) {
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    sub_24F77390C();
    sub_24F782950();
    if ((v31 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      uint64_t v25 = v19;
      sub_24F7ADF80((uint64_t)__dst);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v130[0] = v21;
      sub_24F782950();
      sub_24F80AC0C();
      if (v36) {
        goto LABEL_104;
      }
      uint64_t v5 = v45;
      char v47 = v46;
      sub_24F781274(&qword_26B1F5858);
      uint64_t v38 = v130;
      if (sub_24F8CF980())
      {
        uint64_t v38 = (uint64_t *)v130[0];
        sub_24F782950();
        sub_24F782F34();
        if (!v6) {
          goto LABEL_108;
        }
        uint64_t v5 = v48;
      }
      if (v47)
      {
        uint64_t v101 = (void *)(*(void *)(v130[0] + 56) + 216 * v5);
        goto LABEL_111;
      }
      uint64_t v21 = v130[0];
      uint64_t v49 = (void *)sub_24F77B904();
      memcpy(v49, __dst, 0xD2uLL);
      sub_24F80AE8C();
      if (v36) {
        goto LABEL_105;
      }
      *(void *)(v21 + 16) = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v19 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F781940();
        uint64_t v19 = v52;
      }
      sub_24F80AE30();
      if (v42)
      {
        sub_24F80AD70();
        uint64_t v19 = v53;
      }
      void v19[2] = v5;
      uint64_t v51 = &v19[2 * isUniquelyReferenced_nonNull_native];
      v51[4] = v28;
      v51[5] = v27;
      swift_bridgeObjectRelease();
      sub_24F7AE180((uint64_t)__dst);
      goto LABEL_50;
    }
    sub_24F76FFAC();
    memcpy(__src, v32, 0xD2uLL);
    sub_24F7ADF80((uint64_t)__src);
    swift_bridgeObjectRelease();
    memcpy(v127, __dst, 0xD2uLL);
    memcpy(v126, __src, 0xD2uLL);
    sub_24F802FE4(v128, v126);
    sub_24F8096D0((uint64_t)v128, (uint64_t)v130, &qword_26B1F5708);
    sub_24F8096D0((uint64_t)v130, (uint64_t)v131, &qword_26B1F5708);
    if (sub_24F808F30((uint64_t)v131) == 1)
    {
      sub_24F809590((uint64_t)&v137);
      sub_24F809590((uint64_t)&v136);
      sub_24F787238((uint64_t)v113);
      sub_24F7AE180((uint64_t)__src);
      sub_24F7AE180((uint64_t)__dst);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_24F809258(v126);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v92 = (uint64_t *)v126;
      goto LABEL_96;
    }
    uint64_t v25 = v19;
    sub_24F8096D0((uint64_t)v130, (uint64_t)v127, &qword_26B1F5708);
    sub_24F7ADF80((uint64_t)v127);
    uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v125 = (uint64_t *)v21;
    sub_24F782950();
    sub_24F80AC0C();
    if (v36) {
      goto LABEL_106;
    }
    uint64_t v5 = v34;
    char v37 = v35;
    sub_24F781274(&qword_26B1F5858);
    uint64_t v38 = (uint64_t *)&v125;
    if (sub_24F8CF980())
    {
      uint64_t v38 = v125;
      sub_24F782950();
      sub_24F782F34();
      if (!v6) {
        goto LABEL_108;
      }
      uint64_t v5 = v39;
    }
    if (v37) {
      goto LABEL_113;
    }
    uint64_t v21 = (uint64_t)v125;
    uint64_t v40 = (void *)sub_24F77B904();
    memcpy(v40, v131, 0xD2uLL);
    sub_24F80AE8C();
    if (v36) {
      goto LABEL_107;
    }
    *(void *)(v21 + 16) = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v19 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F781940();
      uint64_t v19 = v54;
    }
    sub_24F80AE30();
    if (v42)
    {
      sub_24F80AD70();
      uint64_t v19 = v55;
    }
    void v19[2] = v5;
    uint64_t v43 = &v19[2 * v33];
    v43[4] = v28;
    v43[5] = v27;
    sub_24F7AE180((uint64_t)__src);
    sub_24F7AE180((uint64_t)__dst);
    swift_bridgeObjectRelease();
    sub_24F808F48(v130);
LABEL_50:
    if (!--v24) {
      break;
    }
    v26 += 2;
    if (!v38[2]) {
      goto LABEL_100;
    }
  }
  sub_24F809590((uint64_t)&v137);
  sub_24F809590((uint64_t)&v136);
LABEL_54:
  int v56 = v118;
  uint64_t v58 = *((void *)v120 + 11);
  uint64_t v57 = *((void *)v120 + 12);
  v130[0] = v58;
  __src[0] = v57;
  char v59 = *(char **)(v58 + 16);
  if (v59)
  {
    sub_24F8092B8((uint64_t)v130);
    sub_24F8092B8((uint64_t)__src);
    if (*(void *)(v57 + 16))
    {
      uint64_t v60 = (uint64_t *)(v58 + 40);
      unint64_t v24 = 216;
      while (1)
      {
        uint64_t v5 = *(v60 - 1);
        uint64_t v61 = *v60;
        swift_bridgeObjectRetain_n();
        unint64_t v62 = sub_24F782950();
        if ((v63 & 1) == 0) {
          goto LABEL_99;
        }
        memcpy(__dst, (const void *)(*(void *)(v57 + 56) + 216 * v62), 0xD2uLL);
        sub_24F7ADF80((uint64_t)__dst);
        swift_bridgeObjectRelease();
        uint64_t v133 = v5;
        uint64_t v134 = v61;
        memcpy(v135, __dst, 0xD2uLL);
        swift_bridgeObjectRetain();
        sub_24F7ADF80((uint64_t)__dst);
        sub_24F7AE06C((uint64_t)&v133);
        if (!*(void *)(v21 + 16)) {
          goto LABEL_61;
        }
        swift_bridgeObjectRetain();
        sub_24F782950();
        char v65 = v64;
        swift_bridgeObjectRelease();
        if (v65)
        {
          sub_24F7AE180((uint64_t)__dst);
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_61:
          uint64_t v123 = v59;
          uint64_t v66 = v57;
          uint64_t v67 = v19;
          sub_24F7ADF80((uint64_t)__dst);
          swift_isUniquelyReferenced_nonNull_native();
          v128[0] = v21;
          sub_24F782950();
          sub_24F80AC0C();
          if (v36) {
            goto LABEL_102;
          }
          unint64_t v24 = v68;
          char v70 = v69;
          sub_24F781274(&qword_26B1F5858);
          if (sub_24F8CF980())
          {
            sub_24F782950();
            sub_24F782F34();
            if (!v6) {
              goto LABEL_108;
            }
            unint64_t v24 = v71;
          }
          if (v70) {
            goto LABEL_109;
          }
          uint64_t v21 = v128[0];
          sub_24F80AE64(v128[0] + 8 * (v24 >> 6));
          uint64_t v73 = (void *)(v72 + 16 * v24);
          *uint64_t v73 = v5;
          v73[1] = v61;
          uint64_t v74 = (void *)(*(void *)(v21 + 56) + 216 * v24);
          unint64_t v24 = 216;
          memcpy(v74, __dst, 0xD2uLL);
          sub_24F80AE8C();
          if (v36) {
            goto LABEL_103;
          }
          *(void *)(v21 + 16) = v75;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v19 = v67;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24F781940();
            uint64_t v19 = v79;
          }
          uint64_t v57 = v66;
          char v59 = v123;
          unint64_t v77 = v19[2];
          unint64_t v76 = v19[3];
          if (v77 >= v76 >> 1)
          {
            sub_24F772244(v76);
            sub_24F787184();
            uint64_t v19 = v80;
          }
          void v19[2] = v77 + 1;
          uint64_t v78 = &v19[2 * v77];
          v78[4] = v5;
          v78[5] = v61;
          swift_bridgeObjectRelease();
          sub_24F7AE180((uint64_t)__dst);
        }
        if (!--v59) {
          break;
        }
        v60 += 2;
        if (!*(void *)(v57 + 16)) {
          goto LABEL_98;
        }
      }
      sub_24F809590((uint64_t)v130);
      sub_24F809590((uint64_t)__src);
      int v56 = v118;
      goto LABEL_77;
    }
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    sub_24F8CFEA0();
    __break(1u);
LABEL_109:
    uint64_t v101 = (void *)(*(void *)(v128[0] + 56) + 216 * v24);
LABEL_111:
    memcpy(v131, v101, 0xD2uLL);
    memcpy(v101, __dst, 0xD2uLL);
    swift_bridgeObjectRelease();
    for (uint64_t i = v131; ; uint64_t i = v126)
    {
      sub_24F7AE180((uint64_t)i);
      sub_24F770EAC();
      sub_24F80AC5C();
      sub_24F8CF9D0();
      __break(1u);
LABEL_113:
      uint64_t v103 = (void *)(v125[7] + 216 * v5);
      memcpy(v126, v103, 0xD2uLL);
      memcpy(v103, v131, 0xD2uLL);
      swift_bridgeObjectRelease();
    }
  }
LABEL_77:
  uint64_t v81 = swift_allocObject();
  memcpy((void *)(v81 + 16), v120, 0xA2uLL);
  uint64_t v121 = v81;
  memcpy((void *)(v81 + 184), v56, 0xA2uLL);
  uint64_t v124 = (void *)*((void *)v120 + 7);
  if (v124[2])
  {
    char v119 = v120[64];
  }
  else
  {
    char v119 = v56[64];
    uint64_t v124 = (void *)*((void *)v56 + 7);
  }
  swift_bridgeObjectRetain();
  if (v56[104]) {
    char v82 = 1;
  }
  else {
    char v82 = v120[104];
  }
  char v111 = v82;
  uint64_t v122 = v19;
  uint64_t v83 = *((void *)v120 + 14);
  uint64_t v84 = *((void *)v120 + 15);
  uint64_t v85 = v83;
  if (!v83)
  {
    uint64_t v85 = *((void *)v56 + 14);
    uint64_t v84 = *((void *)v56 + 15);
    sub_24F78C440(v85);
  }
  uint64_t v109 = v84;
  uint64_t v110 = v85;
  uint64_t v86 = *((void *)v56 + 16);
  uint64_t v87 = *((void *)v56 + 17);
  uint64_t v89 = *((void *)v120 + 16);
  uint64_t v88 = *((void *)v120 + 17);
  if (!v86)
  {
    uint64_t v90 = (uint64_t (*)(uint64_t))*((void *)v120 + 16);
    uint64_t v91 = (void *)*((void *)v120 + 17);
    if (!v89)
    {
      uint64_t v108 = 0;
      uint64_t v91 = (void *)*((void *)v120 + 17);
      goto LABEL_92;
    }
    goto LABEL_89;
  }
  uint64_t v90 = (uint64_t (*)(uint64_t))*((void *)v56 + 16);
  uint64_t v91 = (void *)*((void *)v56 + 17);
  if (!v89)
  {
LABEL_89:
    uint64_t v108 = v90;
    sub_24F78C440(v86);
    goto LABEL_92;
  }
  uint64_t v91 = (void *)swift_allocObject();
  v91[2] = v86;
  v91[3] = v87;
  v91[4] = v89;
  v91[5] = v88;
  swift_retain();
  uint64_t v108 = sub_24F809418;
LABEL_92:
  if (v120[161]) {
    uint64_t v93 = v56;
  }
  else {
    uint64_t v93 = v120;
  }
  char v104 = v120[161] & v56[161];
  char v107 = v93[160];
  uint64_t v105 = *((void *)v93 + 18);
  uint64_t v106 = *((void *)v93 + 19);
  uint64_t v94 = *((void *)v56 + 9);
  uint64_t v95 = *((void *)v56 + 10);
  uint64_t v96 = *((void *)v120 + 9);
  uint64_t v97 = *((void *)v120 + 10);
  sub_24F7D8D44(v120);
  sub_24F7D8D44(v56);
  sub_24F78C440(v83);
  sub_24F78C440(v89);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v98 = sub_24F7D4818(v96, v97, v94, v95);
  uint64_t v100 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __dst[0] = v104;
  uint64_t v133 = v112;
  uint64_t v134 = v116;
  v135[0] = v115;
  v135[1] = sub_24F8093F4;
  v135[2] = v121;
  v135[3] = v113;
  v135[4] = v114;
  v135[5] = v124;
  LOBYTE(v135[6]) = v119;
  v135[7] = v98;
  v135[8] = v100;
  v135[9] = v122;
  v135[10] = v21;
  LOBYTE(v135[11]) = v111;
  v135[12] = v110;
  v135[13] = v109;
  v135[14] = v108;
  v135[15] = v91;
  v135[16] = v105;
  v135[17] = v106;
  LOBYTE(v135[18]) = v107;
  BYTE1(v135[18]) = v104;
  nullsub_1(&v133);
  uint64_t v92 = &v133;
LABEL_96:
  sub_24F8096D0((uint64_t)v92, (uint64_t)v127, &qword_269A2B360);
  uint64_t v3 = v117;
LABEL_97:
  sub_24F8096D0((uint64_t)v127, v3, &qword_269A2B360);
  sub_24F77344C();
}

void *sub_24F807F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t result = (*(void *(**)(void **__return_ptr))(a2 + 24))(&v9);
  if (!v4)
  {
    uint64_t result = v9;
    if (v9[2])
    {
      *a4 = v9;
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)(*(uint64_t (**)(uint64_t))(a3 + 24))(a1);
    }
  }
  return result;
}

uint64_t sub_24F807FCC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, void (*a4)(uint64_t))
{
  v10[3] = &type metadata for SQLExpression;
  _OWORD v10[4] = &protocol witness table for SQLExpression;
  v10[0] = swift_allocObject();
  a2(a1);
  if (v4) {
    return sub_24F8094B0((uint64_t)v10);
  }
  v9[3] = &type metadata for SQLExpression;
  v9[4] = &protocol witness table for SQLExpression;
  v9[0] = swift_allocObject();
  a4(a1);
  && infix(_:_:)();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v10);
}

uint64_t sub_24F8080EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  int v7 = *((char *)a1 + 32);
  uint64_t v8 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  int v12 = *(char *)(v2 + 32);
  if (v12 < 0)
  {
    if (v7 < 0)
    {
      sub_24F774458();
      sub_24F782488();
      sub_24F772278();
      sub_24F781D40();
      uint64_t result = sub_24F77C034();
      *(void *)a2 = v4;
      *(void *)(a2 + 8) = v3;
      *(void *)(a2 + 16) = v6;
      *(void *)(a2 + 24) = v2;
      *(unsigned char *)(a2 + 32) = v7;
      return result;
    }
    goto LABEL_8;
  }
  if (v7 < 0)
  {
LABEL_8:
    sub_24F799140(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), v10, v12);
    sub_24F772278();
    sub_24F781D40();
    uint64_t result = sub_24F77C034();
    goto LABEL_9;
  }
  v18[0] = *(void *)v2;
  v18[1] = v9;
  void v18[2] = v11;
  v18[3] = v10;
  char v19 = v12 & 1;
  v16[0] = v4;
  v16[1] = v3;
  v16[2] = v6;
  v16[3] = v5;
  char v17 = v7 & 1;
  sub_24F774458();
  sub_24F782488();
  sub_24F782488();
  sub_24F772278();
  char v14 = sub_24F8071FC((uint64_t)v18, (uint64_t)v16);
  sub_24F781D40();
  sub_24F77C034();
  sub_24F77C034();
  uint64_t result = sub_24F781D40();
  if ((v14 & 1) == 0)
  {
LABEL_9:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(unsigned char *)(a2 + 32) = -2;
    return result;
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v12;
  swift_bridgeObjectRetain();
  return sub_24F799198(v11);
}

uint64_t sub_24F808264(uint64_t result, char a2)
{
  switch(a2)
  {
    case 1:
      goto LABEL_11;
    case 2:
      if (result == 2) {
        return result;
      }
      if (result != 3) {
        return 4;
      }
      goto LABEL_10;
    case 3:
      if (result == 3) {
        return result;
      }
      if (result != 2) {
        return 4;
      }
LABEL_10:
      sub_24F770EAC();
      sub_24F76BB08();
      LOBYTE(result) = sub_24F8CF9D0();
      __break(1u);
LABEL_11:
      if ((result & 0xFE) != 0) {
        return 4;
      }
      else {
        return 1;
      }
    default:
      if (result == 1) {
        return 1;
      }
      else {
        return 4 * (result != 0);
      }
  }
}

uint64_t sub_24F808344(const void *a1, uint64_t a2, uint64_t a3)
{
  sub_24F80AE44();
  sub_24F7734BC();
  if (v10)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v8;
  char v12 = v9;
  sub_24F781274(&qword_269A2A308);
  if ((sub_24F8CF980() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_24F782950();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    uint64_t result = sub_24F8CFEA0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  if (v12)
  {
    uint64_t v15 = (void *)(*(void *)(*v4 + 56) + 176 * v11);
    uint64_t v16 = (void *)sub_24F76B8E8();
    memmove(v16, v17, 0xABuLL);
    memcpy(v15, a1, 0xABuLL);
    return nullsub_1(v3);
  }
  else
  {
    sub_24F81034C(v11, a2, a3, (uint64_t)a1, *v4);
    sub_24F809504((uint64_t)v19);
    sub_24F8096D0((uint64_t)v19, v3, &qword_269A2A300);
    return swift_bridgeObjectRetain();
  }
}

void sub_24F8084AC()
{
  sub_24F76B80C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_24F80AE44();
  sub_24F7734BC();
  if (v11)
  {
    __break(1u);
LABEL_12:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
  unint64_t v12 = v9;
  char v13 = v10;
  sub_24F781274(&qword_26B1F7278);
  if (sub_24F8CF980())
  {
    sub_24F782950();
    sub_24F782F34();
    if (!v15) {
      goto LABEL_12;
    }
    unint64_t v12 = v14;
  }
  uint64_t v16 = *v1;
  if (v13)
  {
    sub_24F8096D0(*(void *)(v16 + 56) + 40 * v12, v0, &qword_26B1F7AC0);
    sub_24F8096D0(v8, *(void *)(v16 + 56) + 40 * v12, &qword_26B1F7AC0);
    sub_24F77344C();
  }
  else
  {
    sub_24F810454(v12, v6, v4, v8, *v2);
    *(void *)uint64_t v0 = 0;
    *(void *)(v0 + 8) = 0;
    *(void *)(v0 + 16) = 0;
    *(_OWORD *)(v0 + 24) = xmmword_24F8DF640;
    sub_24F77344C();
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_24F8085E4@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v11 = sub_24F782950();
  if (__OFADD__(*(void *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v13 = v11;
  char v14 = v12;
  sub_24F781274(&qword_26B1F5858);
  if ((sub_24F8CF980() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v15 = sub_24F782950();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_11:
    uint64_t result = sub_24F8CFEA0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  if (v14)
  {
    uint64_t v17 = (void *)(*(void *)(*v5 + 56) + 216 * v13);
    memmove(a4, v17, 0xD2uLL);
    memcpy(v17, a1, 0xD2uLL);
    return nullsub_1(a4);
  }
  else
  {
    sub_24F8104E4(v13, a2, a3, (uint64_t)a1, *v5);
    sub_24F8090E0(v19);
    sub_24F8096D0((uint64_t)v19, (uint64_t)a4, &qword_26B1F5708);
    return swift_bridgeObjectRetain();
  }
}

void sub_24F80876C()
{
  sub_24F76B80C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_24F782950();
  sub_24F7734BC();
  if (v13)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v14 = v11;
  char v15 = v12;
  sub_24F781274(&qword_26B1F5520);
  if (sub_24F8CF980())
  {
    unint64_t v16 = sub_24F782950();
    if ((v15 & 1) == (v17 & 1))
    {
      unint64_t v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    sub_24F8CFEA0();
    __break(1u);
    return;
  }
LABEL_5:
  uint64_t v18 = *v0;
  if (v15)
  {
    char v19 = (uint64_t *)(*(void *)(v18 + 56) + 24 * v14);
    *char v19 = v10;
    v19[1] = v8;
    void v19[2] = v6;
  }
  else
  {
    sub_24F81052C(v14, v4, v2, v10, v8, v6, v18);
    swift_bridgeObjectRetain();
  }
  sub_24F77344C();
}

uint64_t sub_24F808888()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_24F7C007C();
  char v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 1;
  }
  swift_isUniquelyReferenced_nonNull_native();
  sub_24F80AECC();
  sub_24F781274((uint64_t *)&unk_26B1F7ED0);
  sub_24F8CF980();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(*(void *)(v7 + 56) + 16 * v2);
  sub_24F776A80();
  sub_24F8CF9A0();
  *uint64_t v1 = v7;
  swift_bridgeObjectRelease();
  return v5;
}

double sub_24F8089AC@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_24F782950();
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_24F80AECC();
    sub_24F781274(&qword_26B1F7278);
    sub_24F8CF980();
    swift_bridgeObjectRelease();
    sub_24F8096D0(*(void *)(v8 + 56) + 40 * v4, a1, &qword_26B1F7AC0);
    sub_24F781274(&qword_26B1F7AC0);
    sub_24F8CF9A0();
    *unint64_t v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)&double result = 1;
    *(_OWORD *)(a1 + 24) = xmmword_24F8DF640;
  }
  return result;
}

uint64_t sub_24F808AD4@<X0>(void *a1@<X8>)
{
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_24F782950();
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v8[0] = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_24F781274(&qword_26B1F5858);
    sub_24F8CF980();
    swift_bridgeObjectRelease();
    memmove(a1, (const void *)(*(void *)(v8[0] + 56) + 216 * v4), 0xD2uLL);
    sub_24F8CF9A0();
    *unint64_t v2 = v8[0];
    swift_bridgeObjectRelease();
    return nullsub_1(a1);
  }
  else
  {
    sub_24F8090E0(v8);
    return sub_24F8096D0((uint64_t)v8, (uint64_t)a1, &qword_26B1F5708);
  }
}

uint64_t sub_24F808C38(uint64_t *a1, uint64_t *a2)
{
  return sub_24F8016A4(*a1, a1[1], *a2, a2[1]) & 1;
}

void *sub_24F808C64@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X2>, void *(*a4)(uint64_t *__return_ptr)@<X3>, void *a5@<X8>)
{
  double result = sub_24F801608(a1, a2, a3, a4);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

uint64_t sub_24F808C90(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_24F808CA0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_24F808CB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24F808D0C(uint64_t a1)
{
  return *(unsigned char *)(a1 + 162) & 6 | (*(unsigned __int16 *)(a1 + 160) >> 14) & 1u;
}

uint64_t sub_24F808D20(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  uint64_t v3 = *(void *)(result - 56) & 1;
  int v4 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF981FF | 0x24000;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v3;
  *(_WORD *)uint64_t result = v4;
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_24F808D6C(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  uint64_t v3 = *(void *)(result - 56) & 1;
  int v4 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF981FF;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v3;
  *(_WORD *)uint64_t result = v4;
  *(unsigned char *)(result + 2) = (v4 | 0x40000u) >> 16;
  return result;
}

uint64_t sub_24F808DB0(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  uint64_t v3 = *(void *)(result - 56) & 1;
  int v4 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF981FF;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v3;
  *(_WORD *)uint64_t result = v4 | 0x4000;
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_24F808DF4(uint64_t result)
{
  int v1 = (*(unsigned __int16 *)(result + 160) | (*(unsigned __int8 *)(result + 162) << 16)) & 0xF9BFFF;
  *(_WORD *)(result + 160) &= ~0x4000u;
  *(unsigned char *)(result + 162) = BYTE2(v1);
  return result;
}

uint64_t sub_24F808E20(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  uint64_t v3 = *(void *)(result - 56) & 1;
  int v4 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF981FF;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v3;
  *(_WORD *)uint64_t result = v4;
  *(unsigned char *)(result + 2) = (v4 | 0x20000u) >> 16;
  return result;
}

uint64_t sub_24F808E68()
{
  return 24;
}

__n128 sub_24F808E74(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

unint64_t sub_24F808E88()
{
  unint64_t result = qword_26B1F5978;
  if (!qword_26B1F5978)
  {
    sub_24F7688B8(&qword_26B1F5970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F5978);
  }
  return result;
}

uint64_t sub_24F808EDC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F808F14()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F808F30(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t *sub_24F808F48(uint64_t *a1)
{
  sub_24F808FBC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

void sub_24F808FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (a8)
  {
    sub_24F7AD3A0(a2, a3, a4, a5, a6);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_24F787238(a12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F787238(a21);
    sub_24F787238(a23);
  }
}

uint64_t sub_24F8090C0(uint64_t *a1)
{
  return sub_24F808C38(a1, *(uint64_t **)(v1 + 16)) & 1;
}

void sub_24F8090E0(void *a1)
{
}

uint64_t sub_24F8090E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 <= 0xFDu) {
    return sub_24F7AD3A0(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t *sub_24F8090FC(uint64_t *a1)
{
  return a1;
}

void sub_24F809168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_24F787238(a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F787238(a15);
    sub_24F787238(a17);
  }
}

void sub_24F809258(void *a1)
{
}

uint64_t sub_24F809260(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F80928C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F8092B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F8092E4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0[7]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[16]) {
    swift_release();
  }
  if (v0[18]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0[28]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[37]) {
    swift_release();
  }
  if (v0[39]) {
    swift_release();
  }
  return swift_deallocObject();
}

void *sub_24F8093F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24F807F44(a1, v2 + 16, v2 + 184, a2);
}

uint64_t sub_24F809418(uint64_t a1)
{
  return sub_24F807FCC(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

uint64_t sub_24F80943C()
{
  unsigned int v22 = *(unsigned __int16 *)(v0 + 176) | (*(unsigned __int8 *)(v0 + 178) << 16);
  uint64_t v20 = *(void *)(v0 + 160);
  uint64_t v21 = *(void *)(v0 + 168);
  sub_24F77294C();
  sub_24F76C98C(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return swift_deallocObject();
}

uint64_t sub_24F8094B0(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x2533654D0);
  }
  return result;
}

double sub_24F809504(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0x1FFFFFFFELL;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 155) = 0u;
  return result;
}

uint64_t sub_24F80952C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F809564(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F809590(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F8095BC(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  uint64_t v3 = *(void *)(result - 56) & 1;
  int v4 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF981FF | 0x44000;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v3;
  *(_WORD *)uint64_t result = v4;
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_24F809608(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  uint64_t v3 = *(void *)(result - 56) & 1;
  int v4 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF981FF;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v3;
  *(_WORD *)uint64_t result = v4;
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

uint64_t sub_24F809648(uint64_t a1)
{
  return sub_24F8017B8(a1, *(void *)(v1 + 16));
}

uint64_t sub_24F809664(uint64_t a1)
{
  sub_24F77294C();
  v2();
  return a1;
}

uint64_t sub_24F8096D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_24F781274(a3);
  uint64_t v4 = sub_24F76B8E8();
  v5(v4);
  return a2;
}

uint64_t sub_24F809730(uint64_t a1)
{
  sub_24F77E030();
  uint64_t v28 = v2;
  int v27 = v3;
  uint64_t v25 = v4;
  uint64_t v26 = v5;
  sub_24F77294C();
  sub_24F809780(v6, v13, v7, v8, v9, v10, v11, v12, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25,
    v26,
    v27,
    v28);
  return a1;
}

uint64_t sub_24F809780(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))
{
  BOOL v22 = a9 >> 1 != 4294967294 || a14 > 1;
  if (v22 || (a21 & 0xFE7E00) != 0) {
    return sub_24F80981C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
  }
             a20,
             a21,
             a22);
  return result;
}

uint64_t sub_24F80981C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))
{
  BOOL v23 = a9 >> 1 != 0xFFFFFFFF || a14 > 1;
  if (v23 || (a21 & 0xFE7E00) != 0)
  {
    return a22(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  }
  return result;
}

void type metadata accessor for DummyRow()
{
}

void type metadata accessor for DummyRow.DummyIndex()
{
}

uint64_t destroy for SQLRelation.Ordering.Element(uint64_t a1)
{
  return sub_24F808CA0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12GRDBInternal11SQLRelationV8OrderingV7ElementOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24F808C90(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SQLRelation.Ordering.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24F808C90(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24F808CA0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SQLRelation.Ordering.Element(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24F808CA0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseFunction.Kind(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseFunction.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24F809A50(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SQLRelation.Ordering.Element()
{
  return &type metadata for SQLRelation.Ordering.Element;
}

uint64_t sub_24F809A6C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24F809A8C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

void type metadata accessor for SQLLimit()
{
}

uint64_t sub_24F809AC4(uint64_t a1)
{
  sub_24F7AD3A0(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 88)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 160)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + 176))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_24F809B80(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_24F799140(v4, v5, v6, v7, v8);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v9)
  {
    uint64_t v12 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v14;
  uint64_t v15 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v15;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13)
  {
    uint64_t v16 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v13;
    *(void *)(a1 + 168) = v16;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  }
  uint64_t v17 = *(void *)(a2 + 176);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = v17;
    *(void *)(a1 + 184) = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  }
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  return a1;
}

uint64_t sub_24F809D08(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_24F799140(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v13 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_24F7AD3A0(v9, v10, v11, v12, v13);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v14 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v15)
    {
      uint64_t v16 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v15;
      *(void *)(a1 + 96) = v16;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_24F7783C0(a1 + 88, &qword_269A2A6A0);
  }
  else if (v15)
  {
    uint64_t v17 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v17;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_8:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a1 + 160);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v19 = *(void *)(a2 + 160);
  if (v18)
  {
    if (v19)
    {
      uint64_t v20 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = v19;
      *(void *)(a1 + 168) = v20;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_24F7783C0(a1 + 160, qword_269A2A6A8);
  }
  else if (v19)
  {
    uint64_t v21 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v19;
    *(void *)(a1 + 168) = v21;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
LABEL_15:
  uint64_t v22 = *(void *)(a2 + 176);
  if (!*(void *)(a1 + 176))
  {
    if (v22)
    {
      uint64_t v24 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = v22;
      *(void *)(a1 + 184) = v24;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    goto LABEL_22;
  }
  if (!v22)
  {
    sub_24F7783C0(a1 + 176, &qword_269A2A6A0);
    goto LABEL_21;
  }
  uint64_t v23 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = v22;
  *(void *)(a1 + 184) = v23;
  swift_retain();
  swift_release();
LABEL_22:
  long long v25 = *(_OWORD *)(a2 + 192);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = v25;
  return a1;
}

void *sub_24F809F98(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD2uLL);
}

uint64_t sub_24F809FA0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_24F7AD3A0(v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  uint64_t v11 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v11)
    {
      uint64_t v12 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v11;
      *(void *)(a1 + 96) = v12;
      swift_release();
      goto LABEL_6;
    }
    sub_24F7783C0(a1 + 88, &qword_269A2A6A0);
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_6:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 160);
  uint64_t v14 = *(void *)(a1 + 160);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  if (v14)
  {
    if (v13)
    {
      uint64_t v15 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = v13;
      *(void *)(a1 + 168) = v15;
      swift_release();
      goto LABEL_11;
    }
    sub_24F7783C0(a1 + 160, qword_269A2A6A8);
  }
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
LABEL_11:
  uint64_t v16 = *(void *)(a2 + 176);
  if (!*(void *)(a1 + 176))
  {
LABEL_15:
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    goto LABEL_16;
  }
  if (!v16)
  {
    sub_24F7783C0(a1 + 176, &qword_269A2A6A0);
    goto LABEL_15;
  }
  uint64_t v17 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = v16;
  *(void *)(a1 + 184) = v17;
  swift_release();
LABEL_16:
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  return a1;
}

uint64_t sub_24F80A170(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 210))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F80A1B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 208) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 210) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 210) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLRelation.Child()
{
}

uint64_t sub_24F80A234(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DatabaseRegion()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F80A274(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_24F80A2C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_24F80A304(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F80A344(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLRelation.Ordering()
{
}

uint64_t destroy for SQLQualifiedSource()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *_s12GRDBInternal18SQLQualifiedSourceVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_24F80A410(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SQLQualifiedSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

void type metadata accessor for SQLSource()
{
}

uint64_t sub_24F80A4CC(uint64_t a1)
{
  return sub_24F7AD3A0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_24F80A4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24F799140(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_24F80A544(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24F799140(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_24F7AD3A0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_24F80A5B8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_24F7AD3A0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_24F80A604(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 33))
    {
      unsigned int v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      unsigned int v2 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
      if (v2 >= 0x7E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_24F80A64C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_24F80A6A8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_24F80A6B4(uint64_t result)
{
  *(unsigned char *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_24F80A6C4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (a2 << 7);
  return result;
}

void type metadata accessor for SQLAssociationCondition()
{
}

unsigned char *sub_24F80A6E4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F80A7B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLRelation.Child.Kind()
{
}

uint64_t sub_24F80A7E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F80A838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v6;
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_24F80A8B0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_24F80A984(a1 + 16);
    goto LABEL_7;
  }
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_24F80A984(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F80A9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_24F80A984(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_24F80AA64(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F80AAA4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLForeignKeyCondition()
{
}

unint64_t sub_24F80AAF8()
{
  unint64_t result = qword_269A2B370;
  if (!qword_269A2B370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B370);
  }
  return result;
}

uint64_t sub_24F80AB44(uint64_t *a1)
{
  return sub_24F8090C0(a1) & 1;
}

uint64_t sub_24F80AB60(uint64_t a1)
{
  return sub_24F809648(a1);
}

uint64_t sub_24F80AB78()
{
  return sub_24F808F14();
}

uint64_t sub_24F80AB90(uint64_t a1)
{
  return sub_24F809418(a1);
}

void sub_24F80ABDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v17 - 200) = v16;
  *(void *)(v17 - 192) = v15;
  *(unsigned char *)(v17 - 184) = v18;
  *(void *)(v17 - 176) = v21;
  *(void *)(v17 - 168) = a11;
  *(void *)(v17 - 160) = a10;
  *(void *)(v17 - 152) = v19;
  *(unsigned char *)(v17 - 144) = v20;
  *(void *)(v17 - 136) = a15;
  *(void *)(v17 - 128) = a14;
}

void *sub_24F80AC20(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char __dst)
{
  return memcpy(&__dst, __src, 0xA3uLL);
}

uint64_t sub_24F80AC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return sub_24F808CA0(v18, a18, 1);
}

uint64_t sub_24F80AC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_24F808CA0(v16, a16, 0);
  return sub_24F808CA0(v16, a16, 0);
}

uint64_t sub_24F80ACD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_24F808CA0(a16, a18, 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F80AD10()
{
  return swift_allocObject();
}

uint64_t sub_24F80AD28()
{
  return sub_24F799140(v2, v0, v4, v1, v3);
}

void sub_24F80AD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_24F8011A8(v12, a2, v10, v11, a5, 0, a7, a8, a9, a10);
}

void sub_24F80AD70()
{
  sub_24F787184();
}

uint64_t sub_24F80AD94@<X0>(uint64_t a1@<X8>)
{
  return v1 + 168 * a1 + 32;
}

uint64_t sub_24F80ADAC()
{
  return v0;
}

uint64_t sub_24F80ADBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_24F808CA0(v18, a18, 0);
  return v18;
}

void *sub_24F80ADEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char __dst)
{
  return memcpy(&__dst, (const void *)(v33 + 232 * v34 - 200), 0xE3uLL);
}

void sub_24F80AE10()
{
  sub_24F787918();
}

unint64_t sub_24F80AE44()
{
  return sub_24F782950();
}

void sub_24F80AE64(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

void sub_24F80AE98()
{
  *uint64_t v1 = v0;
}

uint64_t sub_24F80AEAC()
{
  return swift_bridgeObjectRelease();
}

void sub_24F80AECC()
{
  void *v0 = 0x8000000000000000;
}

uint64_t sub_24F80AEE0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_24F80AF00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v2 = v17;
    uint64_t v4 = (uint64_t *)(a1 + 72);
    do
    {
      uint64_t v5 = *(v4 - 5);
      uint64_t v6 = *(v4 - 4);
      uint64_t v7 = *(v4 - 3);
      uint64_t v8 = *(v4 - 2);
      uint64_t v9 = *(v4 - 1);
      uint64_t v10 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_24F80DE30(v5, v6, v7, v8, v9, v10);
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = *(void *)(v17 + 16);
      if (v14 >= *(void *)(v17 + 24) >> 1) {
        sub_24F77C4AC();
      }
      v4 += 6;
      *(void *)(v17 + 16) = v14 + 1;
      uint64_t v15 = v17 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v13;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24F80B044(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_24F77C4AC();
  uint64_t v2 = v19;
  uint64_t result = sub_24F8265A0(a1);
  uint64_t v5 = result;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v7) {
      goto LABEL_14;
    }
    char v18 = v9;
    uint64_t v10 = *(void *)(a1 + 48) + 32 * v5;
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = *(void *)(v10 + 24);
    unint64_t v14 = *(void *)(v19 + 16);
    unint64_t v13 = *(void *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      sub_24F77C4AC();
    }
    *(void *)(v19 + 16) = v14 + 1;
    uint64_t v15 = v19 + 16 * v14;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 40) = v12;
    uint64_t result = sub_24F8264B8(v5, v7, v18 & 1, a1);
    uint64_t v5 = result;
    uint64_t v7 = v16;
    char v9 = v17 & 1;
    if (!--v1)
    {
      sub_24F7705C4(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_24F80B1BC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void *a3@<X8>)
{
  sub_24F8BDD6C(v24, a1);
  uint64_t v3 = v24[0];
  uint64_t v21 = v24[1];
  int64_t v25 = v24[3];
  unint64_t v4 = v24[4];
  int64_t v22 = (unint64_t)(v24[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  unint64_t v7 = v6 | (v25 << 6);
  while (1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v3 + 48) + 32 * v7);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    uint64_t v16 = v12[2];
    uint64_t v15 = v12[3];
    char v17 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v7);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (a2(v14, v13, v16, v15, v18, v19))
    {
      uint64_t result = swift_release();
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v8 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v8 >= v22) {
      goto LABEL_23;
    }
    unint64_t v9 = *(void *)(v21 + 8 * v8);
    int64_t v10 = v25 + 1;
    if (!v9)
    {
      int64_t v10 = v25 + 2;
      if (v25 + 2 >= v22) {
        goto LABEL_23;
      }
      unint64_t v9 = *(void *)(v21 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v25 + 3;
        if (v25 + 3 >= v22) {
          goto LABEL_23;
        }
        unint64_t v9 = *(void *)(v21 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v25 + 4;
          if (v25 + 4 >= v22) {
            goto LABEL_23;
          }
          unint64_t v9 = *(void *)(v21 + 8 * v10);
          if (!v9)
          {
            int64_t v10 = v25 + 5;
            if (v25 + 5 >= v22) {
              goto LABEL_23;
            }
            unint64_t v9 = *(void *)(v21 + 8 * v10);
            if (!v9)
            {
              int64_t v11 = v25 + 6;
              while (v11 < v22)
              {
                unint64_t v9 = *(void *)(v21 + 8 * v11++);
                if (v9)
                {
                  int64_t v10 = v11 - 1;
                  goto LABEL_18;
                }
              }
LABEL_23:
              uint64_t result = swift_release();
              uint64_t v14 = 0;
              uint64_t v13 = 0;
              uint64_t v16 = 0;
              uint64_t v15 = 0;
              uint64_t v18 = 0;
              uint64_t v19 = 0;
LABEL_24:
              *a3 = v14;
              a3[1] = v13;
              a3[2] = v16;
              a3[3] = v15;
              a3[4] = v18;
              a3[5] = v19;
              return result;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v4 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v25 = v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F80B400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_24F8CED00();
  uint64_t v8 = v7;
  sub_24F781274(&qword_26B1F7F30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 64) = 0;
  *(void *)(inited + 72) = 0;
  sub_24F776A80();
  swift_bridgeObjectRetain();
  uint64_t result = sub_24F8CEC70();
  *a3 = result;
  return result;
}

uint64_t sub_24F80B4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_24F8CED00();
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v33 = v9;
    uint64_t v34 = v8;
    uint64_t v35 = a1;
    uint64_t v36 = a2;
    char v37 = a4;
    uint64_t v42 = MEMORY[0x263F8EE78];
    sub_24F795D08();
    uint64_t v13 = v42;
    uint64_t result = sub_24F8265A0(a3);
    uint64_t v15 = result;
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    uint64_t v38 = a3 + 56;
    while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a3 + 32))
    {
      if (((*(void *)(v38 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(a3 + 36) != v17) {
        goto LABEL_15;
      }
      char v41 = v19;
      char v20 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v15);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      uint64_t v23 = sub_24F8CED00();
      uint64_t v39 = v24;
      uint64_t v40 = v23;
      uint64_t v25 = a3;
      unint64_t v26 = *(void *)(v42 + 16);
      unint64_t v27 = *(void *)(v42 + 24);
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1) {
        sub_24F795D08();
      }
      *(void *)(v42 + 16) = v26 + 1;
      uint64_t v28 = (void *)(v42 + 32 * v26);
      v28[4] = v40;
      void v28[5] = v39;
      v28[6] = v21;
      v28[7] = v22;
      uint64_t result = sub_24F8264B8(v15, v17, v41 & 1, v25);
      uint64_t v15 = result;
      uint64_t v17 = v29;
      char v19 = v30 & 1;
      --v12;
      a3 = v25;
      if (!v12)
      {
        sub_24F7705C4(result, v29, v19);
        swift_bridgeObjectRelease();
        a2 = v36;
        a4 = v37;
        uint64_t v10 = v34;
        a1 = v35;
        uint64_t v11 = v33;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x263F8EE78];
LABEL_12:
    uint64_t v31 = sub_24F78E308(v13);
    sub_24F781274(&qword_26B1F7F30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v11;
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = a2;
    *(void *)(inited + 64) = v31;
    *(void *)(inited + 72) = 0;
    sub_24F776A80();
    uint64_t result = sub_24F8CEC70();
    *a4 = result;
  }
  return result;
}

uint64_t DatabaseRegion.init()@<X0>(uint64_t *a1@<X8>)
{
  sub_24F776A80();
  uint64_t result = sub_24F8CEC70();
  *a1 = result;
  return result;
}

uint64_t DatabaseRegion.formUnion(_:)(uint64_t *a1)
{
  uint64_t v2 = *v1;
  v4[0] = *a1;
  v4[1] = v2;
  DatabaseRegion.union(_:)(v4, &v5);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v5;
  return result;
}

BOOL DatabaseRegion.isModified(byEventsOfKind:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  v16[1] = *v4;
  if (a4 > 1u)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F80B4AC(a1, a2, a3, v16);
    uint64_t v11 = v16[0];
  }
  else
  {
    uint64_t v7 = sub_24F8CED00();
    uint64_t v9 = v8;
    sub_24F781274(&qword_26B1F7F30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 40) = v9;
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = a2;
    *(void *)(inited + 64) = 0;
    *(void *)(inited + 72) = 0;
    sub_24F776A80();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24F8CEC70();
  }
  uint64_t v15 = v11;
  sub_24F80C6C4(&v15, &v17);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v13 = *(void *)(v17 + 16);
    swift_bridgeObjectRelease();
    return v13 != 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 1;
  }
}

uint64_t DatabaseRegion.isModified(by:)(void *a1)
{
  uint64_t v2 = *v1;
  if (!*v1) {
    goto LABEL_3;
  }
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_24F7811D0(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v8 = v7;
  uint64_t v9 = sub_24F8CED00();
  uint64_t v11 = sub_24F80BA40(v9, v10, v6, v8, v2);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11 != 1)
  {
    if (v13)
    {
      sub_24F80E278(a1[6], v13);
      char v14 = v15;
    }
    else
    {
      char v14 = 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_3:
    char v14 = 1;
  }
  return v14 & 1;
}

uint64_t sub_24F80B9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_24F782950(), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_24F785894();
  }
  return sub_24F76B8E8();
}

uint64_t sub_24F80BA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return 1;
  }
  unint64_t v6 = sub_24F7C007C();
  if ((v7 & 1) == 0) {
    return 1;
  }
  uint64_t v8 = *(void *)(*(void *)(a5 + 56) + 16 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_24F80BAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a5 + 16) && (sub_24F7C01FC(), (v5 & 1) != 0)) {
    sub_24F782FF0();
  }
  else {
    sub_24F785894();
  }
  return sub_24F76B8E8();
}

uint64_t sub_24F80BAE0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_24F7C02B0(), (v2 & 1) != 0)) {
    sub_24F782FF0();
  }
  else {
    sub_24F785894();
  }
  return sub_24F76B8E8();
}

uint64_t sub_24F80BB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_24F782950(), (v3 & 1) != 0)) {
    sub_24F782FF0();
  }
  else {
    sub_24F785894();
  }
  return sub_24F76B8E8();
}

uint64_t sub_24F80BB60(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v29 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v32 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v8 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  int64_t v31 = v3;
  for (unint64_t i = v8 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    uint64_t v14 = result;
    char v15 = (uint64_t *)(*(void *)(result + 48) + 32 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_24F8CFF80();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v32 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 32 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_24F8CFD00() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t j = v20 + 1; ; unint64_t j = v26 + 1)
      {
        uint64_t v26 = j & v24;
        if (((*(void *)(v32 + (((j & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v24)) & 1) == 0) {
          break;
        }
        unint64_t v27 = (void *)(v21 + 32 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_24F8CFD00() & 1) != 0) {
          goto LABEL_28;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
    if (v7) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v11 - 1) & v11;
    int64_t v31 = v12;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24F80BE20(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_32;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    uint64_t v16 = *(void *)(*(void *)(v3 + 48) + 8 * v12);
    uint64_t result = sub_24F8CFF20();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(void *)(v19 + 8 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(void *)(v19 + 8 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

void sub_24F80BFE8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24F76B924();
    if (v33)
    {
      uint64_t v4 = 0;
      uint64_t v5 = v3 + 56;
      uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
      if (v6 < 64) {
        uint64_t v7 = ~(-1 << v6);
      }
      else {
        uint64_t v7 = -1;
      }
      unint64_t v8 = v7 & *(void *)(v3 + 56);
      int64_t v9 = (unint64_t)(v6 + 63) >> 6;
      uint64_t v44 = v2 + 56;
      uint64_t v42 = v2;
      uint64_t v38 = v3 + 56;
      uint64_t v39 = v3;
      int64_t v37 = v9;
      if (v8) {
        goto LABEL_8;
      }
LABEL_9:
      int64_t v11 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_61:
        __break(1u);
        return;
      }
      if (v11 >= v9) {
        return;
      }
      if (!*(void *)(v5 + 8 * v11))
      {
        if (v4 + 2 >= v9) {
          return;
        }
        if (!*(void *)(v5 + 8 * (v4 + 2)))
        {
          if (v4 + 3 >= v9) {
            return;
          }
          if (!*(void *)(v5 + 8 * (v4 + 3)))
          {
            if (v4 + 4 >= v9) {
              return;
            }
            if (!*(void *)(v5 + 8 * (v4 + 4)))
            {
              uint64_t v12 = v4 + 5;
              if (v4 + 5 >= v9) {
                return;
              }
              if (!*(void *)(v5 + 8 * v12))
              {
                do
                {
                  int64_t v13 = v12 + 1;
                  if (__OFADD__(v12, 1)) {
                    goto LABEL_61;
                  }
                  if (v13 >= v9) {
                    return;
                  }
                  ++v12;
                }
                while (!*(void *)(v5 + 8 * v13));
              }
            }
          }
        }
      }
      sub_24F775C68();
      uint64_t v40 = v14;
      uint64_t v41 = v15;
      unint64_t v10 = v16 + (v15 << 6);
LABEL_24:
      uint64_t v17 = (long long *)(*(void *)(v3 + 48) + (v10 << 6));
      long long v18 = v17[3];
      long long v20 = *v17;
      long long v19 = v17[1];
      long long v47 = v17[2];
      long long v48 = v18;
      long long v45 = v20;
      long long v46 = v19;
      sub_24F8CFF30();
      sub_24F810894((uint64_t)&v45);
      sub_24F7F87E8();
      uint64_t v21 = sub_24F8CFF80();
      uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v23 = v21 & ~v22;
      if (((*(void *)(v44 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      {
LABEL_59:
        sub_24F8108EC((uint64_t)&v45);
        return;
      }
      uint64_t v43 = ~v22;
      uint64_t v24 = *(void *)(v42 + 48);
      long long v25 = v45;
      while (1)
      {
        uint64_t v26 = (void *)(v24 + (v23 << 6));
        uint64_t v27 = v26[2];
        uint64_t v28 = v26[3];
        uint64_t v30 = v26[4];
        uint64_t v29 = v26[5];
        uint64_t v32 = v26[6];
        uint64_t v31 = v26[7];
        BOOL v33 = *v26 == (void)v25 && v26[1] == *((void *)&v25 + 1);
        if (!v33 && (sub_24F8CFD00() & 1) == 0) {
          goto LABEL_54;
        }
        BOOL v34 = v27 == (void)v46 && v28 == *((void *)&v46 + 1);
        if (!v34 && (sub_24F8CFD00() & 1) == 0) {
          goto LABEL_54;
        }
        if (v29)
        {
          if (!*((void *)&v47 + 1)) {
            goto LABEL_54;
          }
          BOOL v35 = v30 == (void)v47 && v29 == *((void *)&v47 + 1);
          if (!v35 && (sub_24F8CFD00() & 1) == 0) {
            goto LABEL_54;
          }
        }
        else if (*((void *)&v47 + 1))
        {
          goto LABEL_54;
        }
        if (v31)
        {
          if (*((void *)&v48 + 1))
          {
            BOOL v36 = v32 == (void)v48 && v31 == *((void *)&v48 + 1);
            if (v36 || (sub_24F8CFD00() & 1) != 0)
            {
LABEL_56:
              sub_24F8108EC((uint64_t)&v45);
              uint64_t v4 = v41;
              uint64_t v2 = v42;
              uint64_t v5 = v38;
              uint64_t v3 = v39;
              int64_t v9 = v37;
              unint64_t v8 = v40;
              if (!v40) {
                goto LABEL_9;
              }
LABEL_8:
              uint64_t v40 = (v8 - 1) & v8;
              uint64_t v41 = v4;
              unint64_t v10 = __clz(__rbit64(v8)) | (v4 << 6);
              goto LABEL_24;
            }
          }
        }
        else if (!*((void *)&v48 + 1))
        {
          goto LABEL_56;
        }
LABEL_54:
        unint64_t v23 = (v23 + 1) & v43;
        if (((*(void *)(v44 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          goto LABEL_59;
        }
      }
    }
  }
}

void sub_24F80C2E8(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  sub_24F76B924();
  if (!v27) {
    return;
  }
  sub_24F77E05C();
  unint64_t v7 = v6 & v5;
  uint64_t v8 = v2 + 56;
  if ((v6 & v5) == 0) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  uint64_t v33 = v4;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v15 << 6))
  {
    uint64_t v18 = v3;
    long long v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t v22 = sub_24F8CFF80();
    uint64_t v23 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v24 = v22 & ~v23;
    if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
      goto LABEL_45;
    }
    uint64_t v25 = *(void *)(v2 + 48);
    uint64_t v26 = (void *)(v25 + 16 * v24);
    BOOL v27 = *v26 == v21 && v26[1] == v20;
    if (!v27 && (sub_24F8CFD00() & 1) == 0)
    {
      uint64_t v28 = ~v23;
      for (unint64_t j = v24 + 1; ; unint64_t j = v30 + 1)
      {
        uint64_t v30 = j & v28;
        if (((*(void *)(v8 + (((j & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v28)) & 1) == 0) {
          break;
        }
        uint64_t v31 = (void *)(v25 + 16 * v30);
        BOOL v32 = *v31 == v21 && v31[1] == v20;
        if (v32 || (sub_24F8CFD00() & 1) != 0) {
          goto LABEL_34;
        }
      }
LABEL_45:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v3 = v18;
    uint64_t v4 = v33;
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    sub_24F781D64();
    if (v11 == v12) {
      return;
    }
    sub_24F777398();
    uint64_t v15 = v14;
    if (!v13)
    {
      sub_24F77C058();
      if (v11 == v12) {
        return;
      }
      sub_24F77DB1C();
      if (!v13)
      {
        sub_24F77C058();
        if (v11 == v12) {
          return;
        }
        sub_24F77DB1C();
        if (!v13)
        {
          sub_24F77C058();
          if (v11 == v12) {
            return;
          }
          sub_24F77DB1C();
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v7 = (v13 - 1) & v13;
    uint64_t v33 = v15;
  }
  sub_24F781D64();
  if (v11 == v12) {
    return;
  }
  sub_24F777398();
  if (v13)
  {
    uint64_t v15 = v16;
    goto LABEL_27;
  }
  while (!__OFADD__(v16, 1))
  {
    sub_24F77C058();
    if (v11 == v12) {
      return;
    }
    sub_24F77DB1C();
    uint64_t v16 = v17 + 1;
    if (v13) {
      goto LABEL_27;
    }
  }
LABEL_47:
  __break(1u);
}

BOOL DatabaseRegion.isEmpty.getter()
{
  return *(void *)v0 && *(void *)(*(void *)v0 + 16) == 0;
}

BOOL DatabaseRegion.isFullDatabase.getter()
{
  return *v0 == 0;
}

void static DatabaseRegion.fullDatabase.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t DatabaseRegion.init(table:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_24F8CED00();
  uint64_t v8 = v7;
  sub_24F781274(&qword_26B1F7F30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  sub_24F776A80();
  *(void *)(inited + 64) = 0;
  *(void *)(inited + 72) = 0;
  uint64_t result = sub_24F8CEC70();
  *a3 = result;
  return result;
}

uint64_t sub_24F80C618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_24F8CED00();
  uint64_t v10 = v9;
  sub_24F781274(&qword_26B1F7F30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 64) = 0;
  *(void *)(inited + 72) = a3;
  sub_24F776A80();
  uint64_t result = sub_24F8CEC70();
  *a4 = result;
  return result;
}

void sub_24F80C6C4(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v37 = *v2;
  if (!*v2)
  {
    *a2 = v3;
LABEL_30:
    swift_bridgeObjectRetain();
    return;
  }
  if (!v3)
  {
    *a2 = v37;
    goto LABEL_30;
  }
  sub_24F776A80();
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_24F8CEC70();
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  sub_24F77DB00();
  uint64_t v8 = v7 & v6;
  sub_24F77C78C();
  uint64_t v33 = v37 + 64;
  uint64_t v34 = v9;
  while (v8)
  {
    sub_24F8109B0();
    uint64_t v12 = v11 | (v4 << 6);
LABEL_17:
    uint64_t v16 = *(void *)(v37 + 48) + 32 * v12;
    uint64_t v17 = *(void *)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 24);
    long long v19 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v12);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    MEMORY[0x270FA5388](v10);
    uint64_t v35 = v23;
    uint64_t v36 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F80B1BC(v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F810944, v40);
    sub_24F8096D0((uint64_t)v40, (uint64_t)v41, &qword_269A2B378);
    if (v42)
    {
      uint64_t v38 = v8;
      uint64_t v39 = v5;
      uint64_t v24 = v4;
      uint64_t v25 = v3;
      uint64_t v26 = v43;
      uint64_t v27 = v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = sub_24F80CA74(v26, v27, v21, v20);
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (sub_24F80CB70(v28, v30))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v25;
        uint64_t v4 = v24;
        uint64_t v8 = v38;
        uint64_t v5 = v39;
        goto LABEL_21;
      }
      swift_isUniquelyReferenced_nonNull_native();
      sub_24F7DBDDC(v28, v30, v36, v17, v35, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v25;
      uint64_t v4 = v24;
      uint64_t v8 = v38;
      uint64_t v5 = v39;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v4++, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v4 >= v34) {
    goto LABEL_27;
  }
  if (*(void *)(v33 + 8 * v4))
  {
LABEL_16:
    sub_24F780C54();
    uint64_t v12 = v15 + (v4 << 6);
    goto LABEL_17;
  }
  uint64_t v14 = v4 + 1;
  if (v4 + 1 >= v34) {
    goto LABEL_27;
  }
  if (*(void *)(v33 + 8 * v14)) {
    goto LABEL_15;
  }
  uint64_t v14 = v4 + 2;
  if (v4 + 2 >= v34) {
    goto LABEL_27;
  }
  if (*(void *)(v33 + 8 * v14)) {
    goto LABEL_15;
  }
  uint64_t v14 = v4 + 3;
  if (v4 + 3 >= v34)
  {
LABEL_27:
    swift_release();
    *a2 = v32;
    return;
  }
  if (*(void *)(v33 + 8 * v14))
  {
LABEL_15:
    uint64_t v4 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    uint64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v34) {
      goto LABEL_27;
    }
    ++v14;
    if (*(void *)(v33 + 8 * v4)) {
      goto LABEL_16;
    }
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_24F80CA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  if (a3 && (uint64_t v7 = a3, a1))
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_24F80E7BC(v8, a3, (uint64_t (*)(uint64_t))sub_24F80ECB0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if (a4 && a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_24F80E7BC(v9, a4, (uint64_t (*)(uint64_t))sub_24F80E934);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

BOOL sub_24F80CB70(uint64_t a1, uint64_t a2)
{
  return a1 && !*(void *)(a1 + 16) || a2 && !*(void *)(a2 + 16);
}

void sub_24F80CB98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *v4;
  if (v9)
  {
    uint64_t v10 = sub_24F8CED00();
    uint64_t v12 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24F7736BC();
    uint64_t v17 = sub_24F80BA40(v13, v14, v15, v16, v9);
    if (v17 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a4 = v9;
      sub_24F778C78();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v25 = v17;
      uint64_t v26 = v18;
      if (v18)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v27 = swift_bridgeObjectRetain();
        uint64_t v28 = sub_24F80E7BC(v27, v26, (uint64_t (*)(uint64_t))sub_24F80E934);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v28;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      if (sub_24F80CB70(v25, a3))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F7736BC();
        uint64_t v29 = sub_24F808888();
        sub_24F810964(v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v30 = v9;
      }
      else
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_24F7DBDDC(v25, a3, v10, v12, a1, a2);
        uint64_t v30 = v9;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      *a4 = v30;
      sub_24F778C78();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F778C78();
    sub_24F80C618(v20, v21, v22, v23);
  }
}

uint64_t *DatabaseRegion.union(_:)@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *v2;
  if (v3 && (uint64_t v4 = *result) != 0)
  {
    uint64_t v51 = a2;
    sub_24F776A80();
    uint64_t v5 = (void *)sub_24F8CEC70();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_24F78E034(v6);
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_24F78E034(v8);
    uint64_t v10 = sub_24F80D298((uint64_t)v9, (uint64_t)v7);
    uint64_t v52 = v10 + 56;
    uint64_t v55 = v3;
    uint64_t v56 = v10;
    sub_24F77DB00();
    sub_24F77C78C();
    uint64_t v53 = v13;
    uint64_t v54 = v4;
    if (!v11) {
      goto LABEL_5;
    }
LABEL_4:
    uint64_t v57 = (v11 - 1) & v11;
    uint64_t v58 = v12;
    for (unint64_t i = __clz(__rbit64(v11)) | (v12 << 6); ; unint64_t i = v20 + (v19 << 6))
    {
      uint64_t v21 = (uint64_t *)(*(void *)(v56 + 48) + 32 * i);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = v21[2];
      uint64_t v25 = v21[3];
      uint64_t v26 = *(void *)(v3 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F8109C4();
        unint64_t v27 = sub_24F7C007C();
        if (v28)
        {
          uint64_t v29 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v27);
          uint64_t v30 = *v29;
          uint64_t v26 = v29[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v26 = 0;
          uint64_t v30 = 1;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = 1;
      }
      if (*(void *)(v4 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F8109C4();
        unint64_t v31 = sub_24F7C007C();
        if (v32)
        {
          uint64_t v33 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v31);
          uint64_t v34 = *v33;
          uint64_t v35 = v33[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v35 = 0;
          uint64_t v34 = 1;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = 0;
        uint64_t v34 = 1;
      }
      if (v30 == 1)
      {
        uint64_t v36 = v24;
        uint64_t v37 = v23;
        uint64_t v59 = v34;
        if (v34 == 1) {
          goto LABEL_61;
        }
      }
      else if (v34 == 1)
      {
        uint64_t v36 = v24;
        uint64_t v37 = v23;
        uint64_t v59 = v30;
        uint64_t v35 = v26;
      }
      else
      {
        uint64_t v38 = 0;
        if (v30 && v34)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v38 = sub_24F80D298(v34, v30);
        }
        uint64_t v36 = v24;
        uint64_t v59 = v38;
        uint64_t v37 = v23;
        if (v26)
        {
          if (v35)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v35 = sub_24F80D440(v35, v26);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v35 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_isUniquelyReferenced_nonNull_native();
      sub_24F77B93C();
      unint64_t v39 = sub_24F7C007C();
      if (__OFADD__(v5[2], (v40 & 1) == 0))
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      unint64_t v41 = v39;
      char v42 = v40;
      sub_24F781274((uint64_t *)&unk_26B1F7ED0);
      if (sub_24F8CF980())
      {
        sub_24F77B93C();
        unint64_t v43 = sub_24F7C007C();
        if ((v42 & 1) != (v44 & 1)) {
          goto LABEL_62;
        }
        unint64_t v41 = v43;
      }
      if (v42)
      {
        long long v45 = (uint64_t *)(v5[7] + 16 * v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *long long v45 = v59;
        v45[1] = v35;
      }
      else
      {
        v5[(v41 >> 6) + 8] |= 1 << v41;
        long long v46 = (void *)(v5[6] + 32 * v41);
        *long long v46 = v37;
        v46[1] = v22;
        long long v46[2] = v36;
        v46[3] = v25;
        long long v47 = (uint64_t *)(v5[7] + 16 * v41);
        *long long v47 = v59;
        v47[1] = v35;
        uint64_t v48 = v5[2];
        BOOL v49 = __OFADD__(v48, 1);
        uint64_t v50 = v48 + 1;
        if (v49) {
          goto LABEL_58;
        }
        v5[2] = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v54;
      uint64_t v3 = v55;
      unint64_t v11 = v57;
      uint64_t v12 = v58;
      if (v57) {
        goto LABEL_4;
      }
LABEL_5:
      uint64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_59;
      }
      if (v15 >= v53) {
        goto LABEL_55;
      }
      if (!*(void *)(v52 + 8 * v15))
      {
        if (v12 + 2 >= v53) {
          goto LABEL_55;
        }
        if (!*(void *)(v52 + 8 * (v12 + 2)))
        {
          if (v12 + 3 >= v53) {
            goto LABEL_55;
          }
          if (!*(void *)(v52 + 8 * (v12 + 3)))
          {
            uint64_t v16 = v12 + 4;
            if (v12 + 4 >= v53)
            {
LABEL_55:
              uint64_t result = (uint64_t *)swift_release();
              a2 = v51;
              goto LABEL_56;
            }
            if (!*(void *)(v52 + 8 * v16)) {
              break;
            }
          }
        }
      }
LABEL_17:
      sub_24F775C68();
      uint64_t v57 = v18;
      uint64_t v58 = v19;
    }
    while (1)
    {
      uint64_t v17 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        break;
      }
      if (v17 >= v53) {
        goto LABEL_55;
      }
      ++v16;
      if (*(void *)(v52 + 8 * v17)) {
        goto LABEL_17;
      }
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    uint64_t result = (uint64_t *)sub_24F8CFEA0();
    __break(1u);
  }
  else
  {
    uint64_t v5 = 0;
LABEL_56:
    *a2 = v5;
  }
  return result;
}

uint64_t sub_24F80D298(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v24 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 32 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F8B62D4((uint64_t)&v23, v15, v16, v17, v18, v19, v20, v21, v22, v23);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v24;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24F80D440(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    uint64_t result = sub_24F8B6860(&v14, *(void *)(*(void *)(v2 + 48) + 8 * i));
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_24F80D5A0(uint64_t *a1@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  if (!*v1)
  {
    *a1 = 0;
    return;
  }
  sub_24F776A80();
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_24F8CEC70();
  uint64_t v33 = v4 + 64;
  sub_24F77DB00();
  unint64_t v7 = v6 & v5;
  sub_24F77C78C();
  uint64_t v34 = v9;
  if (!v7) {
    goto LABEL_4;
  }
LABEL_3:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  uint64_t v35 = v8;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v13 << 6))
  {
    uint64_t v16 = v4;
    uint64_t v17 = *(void *)(v4 + 48) + 32 * i;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v17 + 24);
    uint64_t v20 = (uint64_t *)(*(void *)(v4 + 56) + 16 * i);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_24F7F6BBC(v18, v19);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v25 = v23;
    uint64_t v26 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26)
    {
      uint64_t v27 = sub_24F8CED00();
      uint64_t v29 = v28;
      sub_24F781274(&qword_26B1F7F30);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
      *(void *)(inited + 32) = v27;
      *(void *)(inited + 40) = v29;
      *(void *)(inited + 48) = v25;
      *(void *)(inited + 56) = v26;
      *(void *)(inited + 64) = v21;
      *(void *)(inited + 72) = v22;
      v36[0] = sub_24F8CEC70();
      v36[1] = v32;
      DatabaseRegion.union(_:)(v36, &v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = v37;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = v16;
    uint64_t v8 = v35;
    if (v7) {
      goto LABEL_3;
    }
LABEL_4:
    BOOL v12 = __OFADD__(v8, 1);
    uint64_t v13 = v8 + 1;
    if (v12)
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v34) {
      goto LABEL_27;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v13);
    if (!v14) {
      break;
    }
LABEL_14:
    unint64_t v7 = (v14 - 1) & v14;
    uint64_t v35 = v13;
  }
  uint64_t v15 = v13 + 1;
  if (v13 + 1 >= v34) {
    goto LABEL_27;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14) {
    goto LABEL_13;
  }
  uint64_t v15 = v13 + 2;
  if (v13 + 2 >= v34) {
    goto LABEL_27;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14) {
    goto LABEL_13;
  }
  uint64_t v15 = v13 + 3;
  if (v13 + 3 >= v34)
  {
LABEL_27:
    swift_release();
    *a1 = v32;
    return;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14)
  {
LABEL_13:
    uint64_t v13 = v15;
    goto LABEL_14;
  }
  while (1)
  {
    uint64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v34) {
      goto LABEL_27;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_14;
    }
  }
LABEL_29:
  __break(1u);
}

uint64_t DatabaseRegion.description.getter()
{
  if (!*(void *)v0) {
    return 0x746164206C6C7566;
  }
  if (!*(void *)(*(void *)v0 + 16)) {
    return 0x7974706D65;
  }
  swift_bridgeObjectRetain();
  sub_24F794B60();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v6 = v2;
  sub_24F80F290(&v6, (uint64_t (*)(uint64_t))sub_24F897548, sub_24F80F314);
  uint64_t v3 = sub_24F80AF00(v6);
  swift_release();
  uint64_t v6 = v3;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  uint64_t v4 = sub_24F8CED30();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static DatabaseRegion.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (!*a1) {
    return v3 == 0;
  }
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24F78E034(v2);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_24F78E034(v5);
  char v7 = sub_24F80BB60((uint64_t)v4, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v35 = v2;
  uint64_t v36 = v3;
  int64_t v8 = 0;
  uint64_t v33 = v4 + 7;
  sub_24F77DB00();
  uint64_t v11 = v10 & v9;
  int64_t v34 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v11 &= v11 - 1;
      goto LABEL_23;
    }
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    sub_24F781D64();
    if (v13 == v14) {
      goto LABEL_40;
    }
    sub_24F777398();
    int64_t v8 = v15;
    if (!v16)
    {
      int64_t v8 = v15 + 1;
      if (v15 + 1 >= v34) {
        goto LABEL_40;
      }
      uint64_t v16 = v33[v8];
      if (!v16)
      {
        int64_t v8 = v15 + 2;
        if (v15 + 2 >= v34) {
          goto LABEL_40;
        }
        uint64_t v16 = v33[v8];
        if (!v16) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v11 = (v16 - 1) & v16;
LABEL_23:
    uint64_t v18 = *(void *)(v35 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (!v18) {
      goto LABEL_52;
    }
    uint64_t v20 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_24F78555C();
    if ((v22 & 1) == 0) {
      goto LABEL_51;
    }
    uint64_t v23 = (uint64_t *)(*(void *)(v35 + 56) + 16 * v21);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(void *)(v36 + 16)) {
      goto LABEL_50;
    }
    unint64_t v26 = sub_24F78555C();
    if ((v27 & 1) == 0) {
      goto LABEL_50;
    }
    uint64_t v28 = (uint64_t *)(*(void *)(v36 + 56) + 16 * v26);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24)
    {
      if (!v29)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_44:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_46:
        swift_release();
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v31 = sub_24F80BB60(v24, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_43:
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
    else if (v29)
    {
      goto LABEL_45;
    }
    if (v25)
    {
      if (!v30)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      char v32 = sub_24F80BE20(v25, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v20;
      if ((v32 & 1) == 0) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v30)
      {
LABEL_45:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v20;
    }
  }
  sub_24F781D64();
  if (v13 == v14)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return 1;
  }
  sub_24F777398();
  if (v16)
  {
    int64_t v8 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v8 >= v34) {
      goto LABEL_40;
    }
    uint64_t v16 = v33[v8];
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_51:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_24F80DE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_24F80B044(a5);
    swift_bridgeObjectRetain();
    sub_24F897428(&v20);
    swift_bridgeObjectRelease();
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    swift_release();
    uint64_t v20 = 40;
    unint64_t v21 = 0xE100000000000000;
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    if (!a6) {
      return v23;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    if (!a6) {
      return v23;
    }
  }
  swift_bridgeObjectRetain();
  sub_24F795224();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v20 = v9;
  sub_24F80F290(&v20, (uint64_t (*)(uint64_t))sub_24F8975B8, sub_24F80FA04);
  uint64_t v10 = v20;
  uint64_t v11 = *(void *)(v20 + 16);
  if (v11)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v12 = 0;
    uint64_t v13 = v20;
    do
    {
      uint64_t v22 = *(void *)(v10 + 8 * v12 + 32);
      uint64_t v14 = sub_24F8CFAE0();
      uint64_t v16 = v15;
      uint64_t v20 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      if (v17 >= *(void *)(v13 + 24) >> 1)
      {
        sub_24F77C4AC();
        uint64_t v13 = v20;
      }
      ++v12;
      *(void *)(v13 + 16) = v17 + 1;
      uint64_t v18 = v13 + 16 * v17;
      *(void *)(v18 + 32) = v14;
      *(void *)(v18 + 40) = v16;
    }
    while (v11 != v12);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v13 = MEMORY[0x263F8EE78];
  }
  uint64_t v20 = v13;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  uint64_t v20 = 91;
  unint64_t v21 = 0xE100000000000000;
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  return v23;
}

void sub_24F80E164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_24F8CFF30();
    sub_24F8CEE50();
    uint64_t v6 = sub_24F8CFF80();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v8 = v6 & ~v7;
    sub_24F77AF5C();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_24F8CFD00() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_24F77AF5C();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_24F8CFD00()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_24F77AF5C();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_24F80E278(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v4 = sub_24F8CFF20() & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0
      && *(void *)(*(void *)(a2 + 48) + 8 * v4) != a1)
    {
      sub_24F781504();
      if (v7)
      {
        do
        {
          if (*(void *)(v5 + 8 * v6) == a1) {
            break;
          }
          sub_24F781504();
        }
        while ((v8 & 1) != 0);
      }
    }
  }
}

BOOL sub_24F80E31C(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    char v3 = sub_24F8CF750();
    swift_release();
    return v3 & 1;
  }
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_24F8CFF30();
  sub_24F82A114();
  uint64_t v5 = sub_24F8CFF80();
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = v5 & ~v6;
  sub_24F77EF84();
  if ((v8 & 1) == 0) {
    return 0;
  }
  type metadata accessor for TableAlias();
  swift_retain();
  BOOL v9 = static TableAlias.== infix(_:_:)();
  swift_release();
  if (!v9)
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = (v7 + 1) & v11;
    sub_24F77EF84();
    if (v13)
    {
      do
      {
        swift_retain();
        BOOL v10 = static TableAlias.== infix(_:_:)();
        swift_release();
        if (v10) {
          break;
        }
        uint64_t v12 = (v12 + 1) & v11;
        sub_24F77EF84();
      }
      while ((v14 & 1) != 0);
      return v10;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_24F80E470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    if (!a3) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    char v8 = sub_24F80BB60(v7, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (a3)
  {
    return 0;
  }
  if (a2)
  {
    if (a4 && (sub_24F80BE20(a2, a4) & 1) != 0) {
      return 1;
    }
  }
  else if (!a4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_24F80E514(uint64_t *a1, uint64_t *a2)
{
  return sub_24F80E470(*a1, a1[1], *a2, a2[1]);
}

uint64_t DatabaseRegion.databaseRegion(_:)@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F80E548@<X0>(void *a1@<X8>)
{
  return DatabaseRegion.databaseRegion(_:)(a1);
}

uint64_t AnyDatabaseRegionConvertible.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t AnyDatabaseRegionConvertible.init(_:)@<X0>(long long *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_24F794DE0(a1, v4 + 16);
  *a2 = sub_24F8105D8;
  a2[1] = (uint64_t (*)(uint64_t))v4;
  return result;
}

uint64_t sub_24F80E5CC(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  sub_24F7811D0(a2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t AnyDatabaseRegionConvertible.databaseRegion(_:)()
{
  return (*v0)();
}

uint64_t sub_24F80E66C()
{
  return AnyDatabaseRegionConvertible.databaseRegion(_:)();
}

uint64_t sub_24F80E684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_24F776A80();
  uint64_t result = sub_24F8CEC70();
  uint64_t v8 = result;
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    BOOL v10 = (void *)(a2 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v11 = v10[3];
      uint64_t v12 = v10[4];
      sub_24F7811D0(v10, v11);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v12 + 8))(&v15, a1, v11, v12);
      if (v3) {
        break;
      }
      v13[0] = v15;
      v13[1] = v8;
      DatabaseRegion.union(_:)(v13, &v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v14;
      v10 += 5;
      if (!--v9)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    *a3 = v8;
  }
  return result;
}

uint64_t sub_24F80E7BC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = (void *)isStackAllocationSafe;
  v11[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a2 + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    sub_24F838880(0, v6, (void *)((char *)v11 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0)));
    uint64_t v7 = sub_24F771028();
    a3 = (uint64_t (*)(uint64_t))a3(v7);
    unint64_t v6 = (unint64_t)v4;
    swift_release();
    if (!v4) {
      return (uint64_t)a3;
    }
    swift_willThrow();

    __break(1u);
  }
  uint64_t v8 = (void *)swift_slowAlloc();
  sub_24F838880(0, v6, v8);
  uint64_t v9 = sub_24F771028();
  a3 = (uint64_t (*)(uint64_t))a3(v9);
  swift_release();
  if (!v4)
  {
    MEMORY[0x2533654D0](v8, -1, -1);
    return (uint64_t)a3;
  }

  uint64_t result = MEMORY[0x2533654D0](v8, -1, -1);
  __break(1u);
  return result;
}

void sub_24F80E934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = a4 + 56;
    sub_24F77E05C();
    uint64_t v11 = v10 & v9;
    int64_t v13 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v14 = a3 + 56;
    while (1)
    {
LABEL_3:
      if (v11)
      {
        sub_24F8109B0();
        int64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        if (v17 >= v13) {
          goto LABEL_54;
        }
        ++v7;
        if (!*(void *)(v8 + 8 * v17))
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v13) {
            goto LABEL_54;
          }
          if (!*(void *)(v8 + 8 * v7))
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v13) {
              goto LABEL_54;
            }
            if (!*(void *)(v8 + 8 * v7))
            {
              int64_t v18 = v17 + 3;
              if (v18 >= v13)
              {
LABEL_54:
                swift_retain();
                sub_24F825624(a1, a2, v6, a3);
                return;
              }
              if (!*(void *)(v8 + 8 * v18))
              {
                while (1)
                {
                  int64_t v7 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    break;
                  }
                  if (v7 >= v13) {
                    goto LABEL_54;
                  }
                  ++v18;
                  if (*(void *)(v8 + 8 * v7)) {
                    goto LABEL_18;
                  }
                }
LABEL_57:
                __break(1u);
                goto LABEL_58;
              }
              int64_t v7 = v18;
            }
          }
        }
LABEL_18:
        sub_24F780C54();
        int64_t v16 = v19 + (v7 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(a4 + 48) + 8 * v16);
      uint64_t v21 = sub_24F8CFF20();
      uint64_t v22 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v23 = v21 & ~v22;
      unint64_t v24 = v23 >> 6;
      uint64_t v25 = 1 << v23;
      if (((1 << v23) & *(void *)(v14 + 8 * (v23 >> 6))) != 0)
      {
        uint64_t v26 = *(void *)(a3 + 48);
        if (*(void *)(v26 + 8 * v23) != v20)
        {
          for (unint64_t i = v23 + 1; ; unint64_t i = v28 + 1)
          {
            unint64_t v28 = i & ~v22;
            if (((*(void *)(v14 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
              goto LABEL_3;
            }
            if (*(void *)(v26 + 8 * v28) == v20) {
              break;
            }
          }
          unint64_t v24 = v28 >> 6;
          uint64_t v25 = 1 << v28;
        }
        *(void *)(a1 + 8 * v24) |= v25;
        BOOL v29 = __OFADD__(v6++, 1);
        if (v29) {
          break;
        }
      }
    }
    __break(1u);
  }
  uint64_t v30 = 0;
  uint64_t v31 = a3 + 56;
  sub_24F77E05C();
  unint64_t v34 = v33 & v32;
  sub_24F77C78C();
  uint64_t v50 = v35;
  uint64_t v36 = a4 + 56;
  while (v34)
  {
    unint64_t v37 = __clz(__rbit64(v34));
    v34 &= v34 - 1;
    unint64_t v38 = v37 | (v30 << 6);
LABEL_46:
    uint64_t v42 = *(void *)(*(void *)(a3 + 48) + 8 * v38);
    uint64_t v43 = sub_24F8CFF20();
    uint64_t v44 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v45 = v43 & ~v44;
    if ((*(void *)(v36 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45))
    {
      uint64_t v46 = *(void *)(a4 + 48);
      if (*(void *)(v46 + 8 * v45) == v42)
      {
LABEL_51:
        *(void *)(a1 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
        BOOL v29 = __OFADD__(v6++, 1);
        if (v29)
        {
          __break(1u);
          goto LABEL_54;
        }
      }
      else
      {
        uint64_t v47 = ~v44;
        while (1)
        {
          unint64_t v45 = (v45 + 1) & v47;
          if (((*(void *)(v36 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
            break;
          }
          if (*(void *)(v46 + 8 * v45) == v42) {
            goto LABEL_51;
          }
        }
      }
    }
  }
  uint64_t v39 = v30 + 1;
  if (__OFADD__(v30, 1)) {
    goto LABEL_56;
  }
  if (v39 >= v50) {
    goto LABEL_54;
  }
  unint64_t v40 = *(void *)(v31 + 8 * v39);
  ++v30;
  if (v40) {
    goto LABEL_45;
  }
  uint64_t v30 = v39 + 1;
  if (v39 + 1 >= v50) {
    goto LABEL_54;
  }
  unint64_t v40 = *(void *)(v31 + 8 * v30);
  if (v40) {
    goto LABEL_45;
  }
  uint64_t v30 = v39 + 2;
  if (v39 + 2 >= v50) {
    goto LABEL_54;
  }
  unint64_t v40 = *(void *)(v31 + 8 * v30);
  if (v40)
  {
LABEL_45:
    unint64_t v34 = (v40 - 1) & v40;
    unint64_t v38 = __clz(__rbit64(v40)) + (v30 << 6);
    goto LABEL_46;
  }
  uint64_t v41 = v39 + 3;
  if (v41 >= v50) {
    goto LABEL_54;
  }
  unint64_t v40 = *(void *)(v31 + 8 * v41);
  if (v40)
  {
    uint64_t v30 = v41;
    goto LABEL_45;
  }
  while (1)
  {
    uint64_t v30 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v30 >= v50) {
      goto LABEL_54;
    }
    unint64_t v40 = *(void *)(v31 + 8 * v30);
    ++v41;
    if (v40) {
      goto LABEL_45;
    }
  }
LABEL_58:
  __break(1u);
}

void sub_24F80ECB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v60 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v62 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v64 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          uint64_t v65 = (v9 - 1) & v9;
          int64_t v67 = v6;
          unint64_t v11 = __clz(__rbit64(v9)) | (v6 << 6);
        }
        else
        {
          int64_t v12 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_82;
          }
          if (v12 >= v62) {
            goto LABEL_80;
          }
          unint64_t v13 = *(void *)(v60 + 8 * v12);
          int64_t v14 = v6 + 1;
          if (!v13)
          {
            int64_t v14 = v6 + 2;
            if (v6 + 2 >= v62) {
              goto LABEL_80;
            }
            unint64_t v13 = *(void *)(v60 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v6 + 3;
              if (v6 + 3 >= v62) {
                goto LABEL_80;
              }
              unint64_t v13 = *(void *)(v60 + 8 * v14);
              if (!v13)
              {
                uint64_t v15 = v6 + 4;
                if (v6 + 4 >= v62) {
                  goto LABEL_80;
                }
                unint64_t v13 = *(void *)(v60 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_84;
                    }
                    if (v14 >= v62) {
                      goto LABEL_80;
                    }
                    unint64_t v13 = *(void *)(v60 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_21;
                    }
                  }
                }
                int64_t v14 = v6 + 4;
              }
            }
          }
LABEL_21:
          uint64_t v65 = (v13 - 1) & v13;
          int64_t v67 = v14;
          unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        }
        int64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v11);
        uint64_t v17 = *v16;
        uint64_t v18 = v16[1];
        sub_24F8CFF30();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F8CEE50();
        uint64_t v19 = sub_24F8CFF80();
        uint64_t v20 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v21 = v19 & ~v20;
        unint64_t v22 = v21 >> 6;
        uint64_t v23 = 1 << v21;
        if (((1 << v21) & *(void *)(v10 + 8 * (v21 >> 6))) != 0) {
          break;
        }
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v6 = v67;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
        unint64_t v9 = v65;
      }
      uint64_t v24 = *(void *)(a3 + 48);
      uint64_t v25 = (void *)(v24 + 32 * v21);
      BOOL v26 = *v25 == v17 && v25[1] == v18;
      if (!v26 && (sub_24F8CFD00() & 1) == 0)
      {
        uint64_t v27 = ~v20;
        for (unint64_t i = v21 + 1; ; unint64_t i = v29 + 1)
        {
          unint64_t v29 = i & v27;
          if (((*(void *)(v10 + (((i & v27) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v27)) & 1) == 0) {
            break;
          }
          uint64_t v30 = (void *)(v24 + 32 * v29);
          BOOL v31 = *v30 == v17 && v30[1] == v18;
          if (v31 || (sub_24F8CFD00() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v22 = v29 >> 6;
            uint64_t v23 = 1 << v29;
            goto LABEL_38;
          }
        }
        goto LABEL_36;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v67;
      uint64_t v5 = a3;
      a1[v22] |= v23;
      unint64_t v9 = v65;
      BOOL v32 = __OFADD__(v64++, 1);
      uint64_t v4 = a4;
      if (v32) {
        goto LABEL_83;
      }
    }
  }
  int64_t v33 = 0;
  uint64_t v61 = a3 + 56;
  uint64_t v34 = 1 << *(unsigned char *)(a3 + 32);
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  else {
    uint64_t v35 = -1;
  }
  unint64_t v36 = v35 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v34 + 63) >> 6;
  uint64_t v64 = 0;
  uint64_t v37 = a4 + 56;
  while (1)
  {
    if (v36)
    {
      unint64_t v38 = __clz(__rbit64(v36));
      v36 &= v36 - 1;
      int64_t v68 = v33;
      unint64_t v39 = v38 | (v33 << 6);
      goto LABEL_62;
    }
    int64_t v40 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    if (v40 >= v63) {
      goto LABEL_80;
    }
    unint64_t v41 = *(void *)(v61 + 8 * v40);
    int64_t v42 = v33 + 1;
    if (!v41)
    {
      int64_t v42 = v33 + 2;
      if (v33 + 2 >= v63) {
        goto LABEL_80;
      }
      unint64_t v41 = *(void *)(v61 + 8 * v42);
      if (!v41)
      {
        int64_t v42 = v33 + 3;
        if (v33 + 3 >= v63) {
          goto LABEL_80;
        }
        unint64_t v41 = *(void *)(v61 + 8 * v42);
        if (!v41) {
          break;
        }
      }
    }
LABEL_61:
    unint64_t v36 = (v41 - 1) & v41;
    int64_t v68 = v42;
    unint64_t v39 = __clz(__rbit64(v41)) + (v42 << 6);
LABEL_62:
    unint64_t v66 = v39;
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v39);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t v47 = sub_24F8CFF80();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v37 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_76;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 32 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_24F8CFD00() & 1) != 0)
    {
LABEL_77:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v33 = v68;
      *(unint64_t *)((char *)a1 + ((v66 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v66;
      BOOL v32 = __OFADD__(v64++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v32)
      {
        __break(1u);
LABEL_80:
        swift_retain();
        sub_24F825828(a1, a2, v64, v5);
        return;
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      for (unint64_t j = v49 + 1; ; unint64_t j = v55 + 1)
      {
        uint64_t v55 = j & v53;
        if (((*(void *)(v37 + (((j & v53) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v53)) & 1) == 0) {
          break;
        }
        uint64_t v56 = (void *)(v50 + 32 * v55);
        BOOL v57 = *v56 == v46 && v56[1] == v45;
        if (v57 || (sub_24F8CFD00() & 1) != 0) {
          goto LABEL_77;
        }
      }
LABEL_76:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v33 = v68;
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  uint64_t v43 = v33 + 4;
  if (v33 + 4 >= v63) {
    goto LABEL_80;
  }
  unint64_t v41 = *(void *)(v61 + 8 * v43);
  if (v41)
  {
    int64_t v42 = v33 + 4;
    goto LABEL_61;
  }
  while (1)
  {
    int64_t v42 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v42 >= v63) {
      goto LABEL_80;
    }
    unint64_t v41 = *(void *)(v61 + 8 * v42);
    ++v43;
    if (v41) {
      goto LABEL_61;
    }
  }
LABEL_85:
  __break(1u);
}

uint64_t sub_24F80F250(uint64_t *a1)
{
  return sub_24F80F290(a1, (uint64_t (*)(uint64_t))sub_24F897548, sub_24F80F314);
}

uint64_t sub_24F80F290(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_24F80F314(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_147;
    }
    if (v3) {
      return sub_24F810008(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v107 = result;
  char v104 = a1;
  if (v3 <= 1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v110 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v47 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v8 = MEMORY[0x263F8EE78];
      goto LABEL_113;
    }
    uint64_t v106 = MEMORY[0x263F8EE78];
  }
  else
  {
    sub_24F781274(&qword_269A2A598);
    uint64_t result = sub_24F8CF120();
    *(void *)(result + 16) = v3 / 2;
    uint64_t v106 = result;
    uint64_t v110 = (char *)(result + 32);
  }
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v105 = *a1 + 24;
  uint64_t v103 = *a1 + 32;
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v108 = v3;
  uint64_t v109 = v7;
  while (1)
  {
    uint64_t v9 = v6++;
    if (v6 >= v3) {
      goto LABEL_39;
    }
    uint64_t v10 = v7 + 48 * v6;
    uint64_t result = *(void *)(v10 + 16);
    uint64_t v11 = *(void *)(v10 + 24);
    uint64_t v12 = v7 + 48 * v9;
    if (result == *(void *)(v12 + 16) && v11 == *(void *)(v12 + 24))
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_38;
      }
      int v14 = 0;
    }
    else
    {
      uint64_t result = sub_24F8CFD00();
      int v14 = result;
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_30;
      }
    }
    int64_t v16 = (void *)(v105 + 48 * v15);
    do
    {
      uint64_t result = *(v16 - 1);
      uint64_t v17 = v7 + 48 * v6;
      if (result == *(void *)(v17 + 16) && *v16 == *(void *)(v17 + 24))
      {
        if (v14) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t result = sub_24F8CFD00();
        if ((v14 ^ result)) {
          goto LABEL_30;
        }
      }
      uint64_t v19 = v15 + 1;
      v16 += 6;
      uint64_t v6 = v15;
      uint64_t v15 = v19;
    }
    while (v19 < v3);
    uint64_t v15 = v19;
LABEL_30:
    uint64_t v6 = v15;
    if (v14)
    {
LABEL_31:
      if (v15 < v9) {
        goto LABEL_150;
      }
      if (v9 < v15)
      {
        uint64_t v20 = 48 * v15;
        uint64_t v21 = 48 * v9;
        uint64_t v22 = v15;
        uint64_t v23 = v9;
        do
        {
          if (v23 != --v22)
          {
            if (!v7) {
              goto LABEL_153;
            }
            uint64_t v24 = (_OWORD *)(v7 + v21);
            long long v25 = *(_OWORD *)(v7 + v21);
            uint64_t v26 = v7 + v20;
            uint64_t v27 = *(void *)(v7 + v21 + 16);
            uint64_t v28 = *(void *)(v7 + v21 + 24);
            long long v29 = *(_OWORD *)(v7 + v21 + 32);
            long long v31 = *(_OWORD *)(v7 + v20 - 32);
            long long v30 = *(_OWORD *)(v7 + v20 - 16);
            *uint64_t v24 = *(_OWORD *)(v7 + v20 - 48);
            v24[1] = v31;
            v24[2] = v30;
            *(_OWORD *)(v26 - 48) = v25;
            *(void *)(v26 - 32) = v27;
            *(void *)(v26 - 24) = v28;
            *(_OWORD *)(v26 - 16) = v29;
          }
          ++v23;
          v20 -= 48;
          v21 += 48;
        }
        while (v23 < v22);
      }
LABEL_38:
      uint64_t v6 = v15;
    }
LABEL_39:
    if (v6 < v3)
    {
      if (__OFSUB__(v6, v9)) {
        goto LABEL_145;
      }
      if (v6 - v9 < v107) {
        break;
      }
    }
LABEL_59:
    if (v6 < v9) {
      goto LABEL_140;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    unint64_t v46 = *(void *)(v8 + 16);
    unint64_t v45 = *(void *)(v8 + 24);
    unint64_t v47 = v46 + 1;
    if (v46 >= v45 >> 1)
    {
      uint64_t result = (uint64_t)sub_24F897440((char *)(v45 > 1), v46 + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    *(void *)(v8 + 16) = v47;
    uint64_t v48 = v8 + 32;
    unint64_t v49 = (uint64_t *)(v8 + 32 + 16 * v46);
    *unint64_t v49 = v9;
    v49[1] = v6;
    if (v46)
    {
      uint64_t v7 = v109;
      while (1)
      {
        unint64_t v50 = v47 - 1;
        if (v47 >= 4)
        {
          unint64_t v55 = v48 + 16 * v47;
          uint64_t v56 = *(void *)(v55 - 64);
          uint64_t v57 = *(void *)(v55 - 56);
          BOOL v61 = __OFSUB__(v57, v56);
          uint64_t v58 = v57 - v56;
          if (v61) {
            goto LABEL_129;
          }
          uint64_t v60 = *(void *)(v55 - 48);
          uint64_t v59 = *(void *)(v55 - 40);
          BOOL v61 = __OFSUB__(v59, v60);
          uint64_t v53 = v59 - v60;
          char v54 = v61;
          if (v61) {
            goto LABEL_130;
          }
          unint64_t v62 = v47 - 2;
          int64_t v63 = (uint64_t *)(v48 + 16 * (v47 - 2));
          uint64_t v65 = *v63;
          uint64_t v64 = v63[1];
          BOOL v61 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          if (v61) {
            goto LABEL_131;
          }
          BOOL v61 = __OFADD__(v53, v66);
          uint64_t v67 = v53 + v66;
          if (v61) {
            goto LABEL_133;
          }
          if (v67 >= v58)
          {
            uint64_t v85 = (uint64_t *)(v48 + 16 * v50);
            uint64_t v87 = *v85;
            uint64_t v86 = v85[1];
            BOOL v61 = __OFSUB__(v86, v87);
            uint64_t v88 = v86 - v87;
            if (v61) {
              goto LABEL_139;
            }
            BOOL v78 = v53 < v88;
            goto LABEL_97;
          }
        }
        else
        {
          if (v47 != 3)
          {
            uint64_t v79 = *(void *)(v8 + 32);
            uint64_t v80 = *(void *)(v8 + 40);
            BOOL v61 = __OFSUB__(v80, v79);
            uint64_t v72 = v80 - v79;
            char v73 = v61;
            goto LABEL_91;
          }
          uint64_t v52 = *(void *)(v8 + 32);
          uint64_t v51 = *(void *)(v8 + 40);
          BOOL v61 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          char v54 = v61;
        }
        if (v54) {
          goto LABEL_132;
        }
        unint64_t v62 = v47 - 2;
        int64_t v68 = (uint64_t *)(v48 + 16 * (v47 - 2));
        uint64_t v70 = *v68;
        uint64_t v69 = v68[1];
        BOOL v71 = __OFSUB__(v69, v70);
        uint64_t v72 = v69 - v70;
        char v73 = v71;
        if (v71) {
          goto LABEL_134;
        }
        uint64_t v74 = (uint64_t *)(v48 + 16 * v50);
        uint64_t v76 = *v74;
        uint64_t v75 = v74[1];
        BOOL v61 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v61) {
          goto LABEL_136;
        }
        if (__OFADD__(v72, v77)) {
          goto LABEL_138;
        }
        if (v72 + v77 >= v53)
        {
          BOOL v78 = v53 < v77;
LABEL_97:
          if (v78) {
            unint64_t v50 = v62;
          }
          goto LABEL_99;
        }
LABEL_91:
        if (v73) {
          goto LABEL_135;
        }
        uint64_t v81 = (uint64_t *)(v48 + 16 * v50);
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        BOOL v61 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v61) {
          goto LABEL_137;
        }
        if (v84 < v72) {
          goto LABEL_108;
        }
LABEL_99:
        unint64_t v89 = v50 - 1;
        if (v50 - 1 >= v47)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (!v7) {
          goto LABEL_152;
        }
        uint64_t v90 = v7;
        uint64_t v91 = (uint64_t *)(v48 + 16 * v89);
        uint64_t v92 = *v91;
        uint64_t v93 = (void *)(v48 + 16 * v50);
        uint64_t v94 = v93[1];
        uint64_t result = sub_24F8100F0((char *)(v90 + 48 * *v91), (char *)(v90 + 48 * *v93), v90 + 48 * v94, v110);
        if (v1)
        {
LABEL_110:
          swift_bridgeObjectRelease();
          *(void *)(v106 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v94 < v92) {
          goto LABEL_126;
        }
        if (v50 > *(void *)(v8 + 16)) {
          goto LABEL_127;
        }
        *uint64_t v91 = v92;
        *(void *)(v48 + 16 * v89 + 8) = v94;
        unint64_t v95 = *(void *)(v8 + 16);
        if (v50 >= v95) {
          goto LABEL_128;
        }
        unint64_t v47 = v95 - 1;
        uint64_t result = (uint64_t)memmove((void *)(v48 + 16 * v50), v93 + 2, 16 * (v95 - 1 - v50));
        *(void *)(v8 + 16) = v95 - 1;
        BOOL v78 = v95 > 2;
        uint64_t v7 = v109;
        if (!v78) {
          goto LABEL_108;
        }
      }
    }
    unint64_t v47 = 1;
    uint64_t v7 = v109;
LABEL_108:
    uint64_t v3 = v108;
    if (v6 >= v108)
    {
      uint64_t v5 = v106;
LABEL_113:
      uint64_t result = v8;
      uint64_t v106 = v5;
      if (v47 >= 2)
      {
        uint64_t v96 = *v104;
        do
        {
          unint64_t v97 = v47 - 2;
          if (v47 < 2) {
            goto LABEL_141;
          }
          if (!v96) {
            goto LABEL_154;
          }
          uint64_t v98 = result;
          uint64_t v99 = *(void *)(result + 32 + 16 * v97);
          uint64_t v100 = *(void *)(result + 32 + 16 * (v47 - 1) + 8);
          uint64_t result = sub_24F8100F0((char *)(v96 + 48 * v99), (char *)(v96 + 48 * *(void *)(result + 32 + 16 * (v47 - 1))), v96 + 48 * v100, v110);
          if (v1) {
            goto LABEL_110;
          }
          if (v100 < v99) {
            goto LABEL_142;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_24F897538();
            uint64_t v98 = result;
          }
          if (v97 >= *(void *)(v98 + 16)) {
            goto LABEL_143;
          }
          uint64_t v101 = (void *)(v98 + 32 + 16 * v97);
          *uint64_t v101 = v99;
          v101[1] = v100;
          unint64_t v102 = *(void *)(v98 + 16);
          if (v47 > v102) {
            goto LABEL_144;
          }
          memmove((void *)(v98 + 32 + 16 * (v47 - 1)), (const void *)(v98 + 32 + 16 * v47), 16 * (v102 - v47));
          uint64_t result = v98;
          *(void *)(v98 + 16) = v102 - 1;
          unint64_t v47 = v102 - 1;
        }
        while (v102 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v9, v107)) {
    goto LABEL_148;
  }
  if (v9 + v107 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v9 + v107;
  }
  if (v32 >= v9)
  {
    if (v6 != v32)
    {
      uint64_t v33 = v103 + 48 * v6;
      do
      {
        uint64_t v34 = v7 + 48 * v6;
        uint64_t result = *(void *)(v34 + 16);
        uint64_t v35 = *(void *)(v34 + 24);
        uint64_t v36 = v9;
        uint64_t v37 = v33;
        do
        {
          if (result == *(void *)(v37 - 64) && v35 == *(void *)(v37 - 56)) {
            break;
          }
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            break;
          }
          if (!v7) {
            goto LABEL_151;
          }
          unint64_t v39 = (_OWORD *)(v37 - 32);
          int64_t v40 = (_OWORD *)(v37 - 80);
          long long v42 = *(_OWORD *)(v37 - 64);
          long long v41 = *(_OWORD *)(v37 - 48);
          *(_OWORD *)(v37 - 48) = *(_OWORD *)v37;
          v37 -= 48;
          uint64_t v43 = *(void *)(v37 + 16);
          uint64_t v44 = *(void *)(v37 + 24);
          uint64_t result = *(void *)(v37 + 32);
          uint64_t v35 = *(void *)(v37 + 40);
          *unint64_t v39 = *v40;
          v39[1] = v42;
          v39[2] = v41;
          *(void *)(v37 - 32) = v43;
          *(void *)(v37 - 24) = v44;
          *(void *)(v37 - 16) = result;
          *(void *)(v37 - 8) = v35;
          ++v36;
        }
        while (v6 != v36);
        ++v6;
        v33 += 48;
      }
      while (v6 != v32);
      uint64_t v6 = v32;
    }
    goto LABEL_59;
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
  return result;
}

uint64_t sub_24F80FA04(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_127;
    }
    if (v3) {
      return sub_24F7D088C(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_126;
  }
  uint64_t v85 = result;
  uint64_t v86 = v3;
  if (v3 > 1)
  {
    uint64_t result = sub_24F8CF120();
    *(void *)(result + 16) = v3 / 2;
    uint64_t v84 = result;
    uint64_t v88 = (char *)(result + 32);
LABEL_10:
    uint64_t v6 = 0;
    uint64_t v7 = *v2;
    uint64_t v82 = v2;
    uint64_t v83 = *v2 - 8;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v87 = *v2;
    while (1)
    {
      uint64_t v9 = v6++;
      if (v6 < v3)
      {
        uint64_t v10 = *(void *)(v7 + 8 * v6);
        uint64_t v11 = *(void *)(v7 + 8 * v9);
        uint64_t v6 = v9 + 2;
        if (v9 + 2 < v3)
        {
          uint64_t v12 = v10;
          while (1)
          {
            uint64_t v13 = *(void *)(v7 + 8 * v6);
            if (v10 < v11 == v13 >= v12) {
              break;
            }
            ++v6;
            uint64_t v12 = v13;
            if (v6 >= v3)
            {
              uint64_t v6 = v3;
              break;
            }
          }
        }
        if (v10 < v11)
        {
          if (v6 < v9) {
            goto LABEL_128;
          }
          if (v9 < v6)
          {
            uint64_t v14 = v6 - 1;
            uint64_t v15 = v9;
            do
            {
              if (v15 != v14)
              {
                if (!v7) {
                  goto LABEL_133;
                }
                uint64_t v16 = *(void *)(v7 + 8 * v15);
                *(void *)(v7 + 8 * v15) = *(void *)(v7 + 8 * v14);
                *(void *)(v7 + 8 * v14) = v16;
              }
              BOOL v56 = ++v15 < v14--;
            }
            while (v56);
          }
        }
      }
      if (v6 < v3)
      {
        if (__OFSUB__(v6, v9)) {
          goto LABEL_125;
        }
        if (v6 - v9 < v85)
        {
          uint64_t v17 = v9 + v85;
          if (__OFADD__(v9, v85)) {
            goto LABEL_129;
          }
          if (v17 >= v3) {
            uint64_t v17 = v3;
          }
          if (v17 < v9)
          {
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            return result;
          }
          if (v6 != v17)
          {
            uint64_t v18 = (uint64_t *)(v83 + 8 * v6);
            do
            {
              uint64_t v19 = *(void *)(v7 + 8 * v6);
              uint64_t v20 = v9;
              uint64_t v21 = v18;
              do
              {
                uint64_t v22 = *v21;
                if (v19 >= *v21) {
                  break;
                }
                if (!v7) {
                  goto LABEL_131;
                }
                *uint64_t v21 = v19;
                v21[1] = v22;
                --v21;
                ++v20;
              }
              while (v6 != v20);
              ++v6;
              ++v18;
            }
            while (v6 != v17);
            uint64_t v6 = v17;
          }
        }
      }
      if (v6 < v9) {
        goto LABEL_120;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }
      unint64_t v24 = *(void *)(v8 + 16);
      unint64_t v23 = *(void *)(v8 + 24);
      unint64_t v25 = v24 + 1;
      uint64_t v7 = v87;
      if (v24 >= v23 >> 1)
      {
        uint64_t result = (uint64_t)sub_24F897440((char *)(v23 > 1), v24 + 1, 1, (char *)v8);
        uint64_t v7 = v87;
        uint64_t v8 = result;
      }
      *(void *)(v8 + 16) = v25;
      uint64_t v26 = v8 + 32;
      uint64_t v27 = (uint64_t *)(v8 + 32 + 16 * v24);
      *uint64_t v27 = v9;
      v27[1] = v6;
      if (v24)
      {
        while (1)
        {
          unint64_t v28 = v25 - 1;
          if (v25 >= 4)
          {
            unint64_t v33 = v26 + 16 * v25;
            uint64_t v34 = *(void *)(v33 - 64);
            uint64_t v35 = *(void *)(v33 - 56);
            BOOL v39 = __OFSUB__(v35, v34);
            uint64_t v36 = v35 - v34;
            if (v39) {
              goto LABEL_109;
            }
            uint64_t v38 = *(void *)(v33 - 48);
            uint64_t v37 = *(void *)(v33 - 40);
            BOOL v39 = __OFSUB__(v37, v38);
            uint64_t v31 = v37 - v38;
            char v32 = v39;
            if (v39) {
              goto LABEL_110;
            }
            unint64_t v40 = v25 - 2;
            long long v41 = (uint64_t *)(v26 + 16 * (v25 - 2));
            uint64_t v43 = *v41;
            uint64_t v42 = v41[1];
            BOOL v39 = __OFSUB__(v42, v43);
            uint64_t v44 = v42 - v43;
            if (v39) {
              goto LABEL_111;
            }
            BOOL v39 = __OFADD__(v31, v44);
            uint64_t v45 = v31 + v44;
            if (v39) {
              goto LABEL_113;
            }
            if (v45 >= v36)
            {
              int64_t v63 = (uint64_t *)(v26 + 16 * v28);
              uint64_t v65 = *v63;
              uint64_t v64 = v63[1];
              BOOL v39 = __OFSUB__(v64, v65);
              uint64_t v66 = v64 - v65;
              if (v39) {
                goto LABEL_119;
              }
              BOOL v56 = v31 < v66;
              goto LABEL_77;
            }
          }
          else
          {
            if (v25 != 3)
            {
              uint64_t v57 = *(void *)(v8 + 32);
              uint64_t v58 = *(void *)(v8 + 40);
              BOOL v39 = __OFSUB__(v58, v57);
              uint64_t v50 = v58 - v57;
              char v51 = v39;
              goto LABEL_71;
            }
            uint64_t v30 = *(void *)(v8 + 32);
            uint64_t v29 = *(void *)(v8 + 40);
            BOOL v39 = __OFSUB__(v29, v30);
            uint64_t v31 = v29 - v30;
            char v32 = v39;
          }
          if (v32) {
            goto LABEL_112;
          }
          unint64_t v40 = v25 - 2;
          unint64_t v46 = (uint64_t *)(v26 + 16 * (v25 - 2));
          uint64_t v48 = *v46;
          uint64_t v47 = v46[1];
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v50 = v47 - v48;
          char v51 = v49;
          if (v49) {
            goto LABEL_114;
          }
          uint64_t v52 = (uint64_t *)(v26 + 16 * v28);
          uint64_t v54 = *v52;
          uint64_t v53 = v52[1];
          BOOL v39 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v39) {
            goto LABEL_116;
          }
          if (__OFADD__(v50, v55)) {
            goto LABEL_118;
          }
          if (v50 + v55 >= v31)
          {
            BOOL v56 = v31 < v55;
LABEL_77:
            if (v56) {
              unint64_t v28 = v40;
            }
            goto LABEL_79;
          }
LABEL_71:
          if (v51) {
            goto LABEL_115;
          }
          uint64_t v59 = (uint64_t *)(v26 + 16 * v28);
          uint64_t v61 = *v59;
          uint64_t v60 = v59[1];
          BOOL v39 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v39) {
            goto LABEL_117;
          }
          if (v62 < v50) {
            goto LABEL_88;
          }
LABEL_79:
          unint64_t v67 = v28 - 1;
          if (v28 - 1 >= v25)
          {
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
            goto LABEL_130;
          }
          if (!v7) {
            goto LABEL_132;
          }
          int64_t v68 = (uint64_t *)(v26 + 16 * v67);
          uint64_t v69 = *v68;
          uint64_t v70 = v26;
          BOOL v71 = (void *)(v26 + 16 * v28);
          uint64_t v72 = v71[1];
          uint64_t result = sub_24F7D08E4((char *)(v7 + 8 * *v68), (char *)(v7 + 8 * *v71), v7 + 8 * v72, v88);
          if (v1)
          {
LABEL_90:
            swift_bridgeObjectRelease();
            *(void *)(v84 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v72 < v69) {
            goto LABEL_106;
          }
          if (v28 > *(void *)(v8 + 16)) {
            goto LABEL_107;
          }
          uint64_t *v68 = v69;
          *(void *)(v70 + 16 * v67 + 8) = v72;
          unint64_t v73 = *(void *)(v8 + 16);
          if (v28 >= v73) {
            goto LABEL_108;
          }
          unint64_t v25 = v73 - 1;
          uint64_t result = (uint64_t)memmove(v71, v71 + 2, 16 * (v73 - 1 - v28));
          uint64_t v26 = v70;
          *(void *)(v8 + 16) = v73 - 1;
          uint64_t v7 = v87;
          if (v73 <= 2) {
            goto LABEL_88;
          }
        }
      }
      unint64_t v25 = 1;
LABEL_88:
      uint64_t v3 = v86;
      if (v6 >= v86)
      {
        uint64_t v5 = v84;
        uint64_t v2 = v82;
        goto LABEL_93;
      }
    }
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v88 = (char *)(MEMORY[0x263F8EE78] + 32);
  if (v3 == 1)
  {
    uint64_t v84 = MEMORY[0x263F8EE78];
    goto LABEL_10;
  }
  unint64_t v25 = *(void *)(MEMORY[0x263F8EE78] + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_93:
  uint64_t v84 = v5;
  if (v25 >= 2)
  {
    uint64_t v74 = *v2;
    do
    {
      unint64_t v75 = v25 - 2;
      if (v25 < 2) {
        goto LABEL_121;
      }
      if (!v74) {
        goto LABEL_134;
      }
      uint64_t v76 = v8;
      uint64_t v77 = v8 + 32;
      uint64_t v78 = *(void *)(v8 + 32 + 16 * v75);
      uint64_t v79 = *(void *)(v8 + 32 + 16 * (v25 - 1) + 8);
      uint64_t result = sub_24F7D08E4((char *)(v74 + 8 * v78), (char *)(v74 + 8 * *(void *)(v77 + 16 * (v25 - 1))), v74 + 8 * v79, v88);
      if (v1) {
        goto LABEL_90;
      }
      if (v79 < v78) {
        goto LABEL_122;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24F897538();
        uint64_t v76 = result;
      }
      if (v75 >= *(void *)(v76 + 16)) {
        goto LABEL_123;
      }
      uint64_t v80 = (void *)(v76 + 32 + 16 * v75);
      *uint64_t v80 = v78;
      v80[1] = v79;
      unint64_t v81 = *(void *)(v76 + 16);
      if (v25 > v81) {
        goto LABEL_124;
      }
      uint64_t result = (uint64_t)memmove((void *)(v76 + 32 + 16 * (v25 - 1)), (const void *)(v76 + 32 + 16 * v25), 16 * (v81 - v25));
      uint64_t v8 = v76;
      *(void *)(v76 + 16) = v81 - 1;
      unint64_t v25 = v81 - 1;
    }
    while (v81 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v84 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F810008(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 48 * a3 + 32;
    while (2)
    {
      uint64_t v9 = v7 + 48 * v4;
      uint64_t result = *(void *)(v9 + 16);
      uint64_t v10 = *(void *)(v9 + 24);
      uint64_t v11 = v6;
      uint64_t v12 = v8;
      do
      {
        if (result == *(void *)(v12 - 64) && v10 == *(void *)(v12 - 56)) {
          break;
        }
        uint64_t result = sub_24F8CFD00();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v14 = (_OWORD *)(v12 - 32);
        uint64_t v15 = (_OWORD *)(v12 - 80);
        long long v17 = *(_OWORD *)(v12 - 64);
        long long v16 = *(_OWORD *)(v12 - 48);
        *(_OWORD *)(v12 - 48) = *(_OWORD *)v12;
        v12 -= 48;
        uint64_t v18 = *(void *)(v12 + 16);
        uint64_t v19 = *(void *)(v12 + 24);
        uint64_t result = *(void *)(v12 + 32);
        uint64_t v10 = *(void *)(v12 + 40);
        *uint64_t v14 = *v15;
        v14[1] = v17;
        v14[2] = v16;
        *(void *)(v12 - 32) = v18;
        *(void *)(v12 - 24) = v19;
        *(void *)(v12 - 16) = result;
        *(void *)(v12 - 8) = v10;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 48;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_24F8100F0(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  if (v9 >= v11)
  {
    sub_24F8B4EA4(a2, (uint64_t)(a3 - (void)a2) / 48, a4);
    uint64_t v12 = &v4[48 * v11];
    if (v7 >= v6 || v10 < 48) {
      goto LABEL_49;
    }
    uint64_t v20 = (char *)(a3 - 48);
    while (1)
    {
      uint64_t v21 = v20 + 48;
      BOOL v22 = *((void *)v12 - 4) == *((void *)v6 - 4) && *((void *)v12 - 3) == *((void *)v6 - 3);
      if (v22 || (sub_24F8CFD00() & 1) == 0)
      {
        unint64_t v23 = v12 - 48;
        BOOL v25 = v21 != v12 || v20 >= v12;
        v12 -= 48;
        if (!v25) {
          goto LABEL_45;
        }
      }
      else
      {
        unint64_t v23 = v6 - 48;
        BOOL v24 = v21 != v6 || v20 >= v6;
        v6 -= 48;
        if (!v24) {
          goto LABEL_45;
        }
      }
      long long v26 = *(_OWORD *)v23;
      long long v27 = *((_OWORD *)v23 + 2);
      *((_OWORD *)v20 + 1) = *((_OWORD *)v23 + 1);
      *((_OWORD *)v20 + 2) = v27;
      *(_OWORD *)uint64_t v20 = v26;
LABEL_45:
      v20 -= 48;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_49;
      }
    }
  }
  sub_24F8B4EA4(a1, (a2 - a1) / 48, a4);
  uint64_t v12 = &v4[48 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 48)
  {
    do
    {
      BOOL v13 = *((void *)v6 + 2) == *((void *)v4 + 2) && *((void *)v6 + 3) == *((void *)v4 + 3);
      if (v13 || (sub_24F8CFD00() & 1) == 0)
      {
        BOOL v13 = v7 == v4;
        uint64_t v14 = v4;
        v4 += 48;
        if (v13 && v7 < v4) {
          goto LABEL_20;
        }
      }
      else
      {
        BOOL v13 = v7 == v6;
        uint64_t v14 = v6;
        v6 += 48;
        if (v13 && v7 < v6) {
          goto LABEL_20;
        }
      }
      long long v17 = *(_OWORD *)v14;
      long long v18 = *((_OWORD *)v14 + 2);
      *((_OWORD *)v7 + 1) = *((_OWORD *)v14 + 1);
      *((_OWORD *)v7 + 2) = v18;
      *(_OWORD *)uint64_t v7 = v17;
LABEL_20:
      v7 += 48;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  uint64_t v6 = v7;
LABEL_49:
  uint64_t v29 = (v12 - v4) / 48;
  if (v6 != v4 || v6 >= &v4[48 * v29]) {
    memmove(v6, v4, 48 * v29);
  }
  return 1;
}

void sub_24F8102CC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = sub_24F77D7D4(a1, a2, a3, a4, a5);
  *(void *)(v8 + 8 * v5) = v7;
  uint64_t v9 = (void *)(*(void *)(v6 + 56) + 16 * v5);
  *uint64_t v9 = v10;
  v9[1] = v11;
  uint64_t v12 = *(void *)(v6 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    sub_24F780828(v6, v14);
  }
}

unint64_t sub_24F8102FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t result = sub_24F782B14(a1, a2, a3, a4, a5, a6, a7, a8);
  *uint64_t v12 = v10;
  v12[1] = v11;
  _OWORD v12[2] = v13;
  v12[3] = v14;
  uint64_t v15 = (void *)(*(void *)(v9 + 56) + 16 * result);
  *uint64_t v15 = v16;
  v15[1] = v17;
  uint64_t v18 = *(void *)(v9 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v9 + 16) = v20;
  }
  return result;
}

void sub_24F810334(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24F77E8BC(a1, a2, a3, a4, a5);
  if (v7) {
    __break(1u);
  }
  else {
    sub_24F780828(v5, v6);
  }
}

void *sub_24F81034C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = sub_24F77F624(a1, a2, a3, a4, a5);
  unint64_t result = memcpy((void *)(v7 + 176 * v6), v8, 0xABuLL);
  uint64_t v10 = *(void *)(v5 + 16);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v12;
  }
  return result;
}

void sub_24F810394(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = (void *)(a5[6] + 16 * a1);
  *uint64_t v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 40 * a1;
  long long v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(void *)(v6 + 32) = *(void *)(a4 + 32);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    sub_24F780828((uint64_t)a5, v10);
  }
}

unint64_t sub_24F8103F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t result = sub_24F773B5C(a1, a2, a3, a4, a5, a6, a7);
  *(unsigned char *)(v10 + 16) = v9;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    *(void *)(v8 + 16) = v13;
  }
  return result;
}

unint64_t sub_24F810418(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t result = sub_24F782B14(a1, a2, a3, a4, a5, a6, a7, a8);
  *(unsigned char *)uint64_t v11 = v10;
  *(void *)(v11 + 8) = v12;
  *(void *)(v11 + 16) = v13;
  *(void *)(v11 + 24) = v14;
  uint64_t v15 = (void *)(*(void *)(v9 + 56) + 16 * result);
  *uint64_t v15 = v16;
  v15[1] = v17;
  uint64_t v18 = *(void *)(v9 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v9 + 16) = v20;
  }
  return result;
}

uint64_t sub_24F810454(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = sub_24F77F624(a1, a2, a3, a4, a5);
  uint64_t result = sub_24F8096D0(v8, v7 + 40 * v6, &qword_26B1F7AC0);
  uint64_t v10 = *(void *)(v5 + 16);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v12;
  }
  return result;
}

void sub_24F8104A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = sub_24F77D7D4(a1, a2, a3, a4, a5);
  uint64_t v8 = v7 + 40 * v5;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  BOOL v11 = (void *)(*(void *)(v6 + 56) + 16 * v5);
  *BOOL v11 = v12;
  v11[1] = v13;
  uint64_t v14 = *(void *)(v6 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    sub_24F780828(v6, v16);
  }
}

void *sub_24F8104E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = sub_24F77F624(a1, a2, a3, a4, a5);
  uint64_t result = memcpy((void *)(v7 + 216 * v6), v8, 0xD2uLL);
  uint64_t v10 = *(void *)(v5 + 16);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v12;
  }
  return result;
}

unint64_t sub_24F81052C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t result = sub_24F773B5C(a1, a2, a3, a4, a5, a6, a7);
  *(void *)(v10 + 16) = v9;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    *(void *)(v8 + 16) = v13;
  }
  return result;
}

unint64_t sub_24F810554(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  unint64_t v6 = (void *)(a6[6] + 16 * result);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t sub_24F8105A0()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_24F8105D8(uint64_t a1)
{
  return sub_24F80E5CC(a1, (void *)(v1 + 16));
}

void *initializeBufferWithCopyOfBuffer for DatabaseRegion(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DatabaseRegion(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DatabaseRegion(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseRegion(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseRegion(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseRegion()
{
  return &type metadata for DatabaseRegion;
}

uint64_t dispatch thunk of DatabaseRegionConvertible.databaseRegion(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for AnyDatabaseRegionConvertible()
{
  return &type metadata for AnyDatabaseRegionConvertible;
}

void *assignWithCopy for TableRegion(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TableRegion(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TableRegion(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TableRegion()
{
  return &type metadata for TableRegion;
}

uint64_t sub_24F810894(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F8108EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F810944(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + 16) == a1 && *(void *)(v2 + 24) == a2) {
    return 1;
  }
  else {
    return sub_24F8CFD00();
  }
}

uint64_t sub_24F810964(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F8109C4()
{
  return v0;
}

uint64_t UUID.databaseValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v12 = sub_24F8CE9B0();
  char v13 = v2;
  char v14 = v3;
  char v15 = v4;
  char v16 = v5;
  char v17 = v6;
  char v18 = v7;
  char v19 = v8;
  char v20 = v9;
  uint64_t result = MEMORY[0x253363140](&v12, 16);
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = 3;
  return result;
}

uint64_t NSUUID.databaseValue.getter@<X0>(uint64_t a1@<X8>)
{
  char v3 = (void *)sub_24F8CF120();
  v3[2] = 16;
  v3[5] = 0;
  v3[4] = 0;
  char v4 = v3 + 4;
  objc_msgSend(v1, sel_getUUIDBytes_, v3 + 4);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8F8]), sel_initWithBytes_length_, v4, 16);
  uint64_t v6 = sub_24F8CE8D0();
  uint64_t v8 = v7;

  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = 3;
  return swift_release();
}

id static NSUUID.fromDatabaseValue(_:)(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  unint64_t v1 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 == 3)
  {
    switch(v1 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v2), v2))
        {
          __break(1u);
LABEL_17:
          __break(1u);
          JUMPOUT(0x24F810CF4);
        }
        uint64_t v5 = HIDWORD(v2) - (int)v2;
LABEL_11:
        a1 = sub_24F78419C(*(void *)a1, v1);
LABEL_12:
        if (v5 == 16)
        {
          MEMORY[0x270FA5388](a1);
          sub_24F8CE8B0();
          sub_24F781F10(v2, v1, 3);
          id result = v8;
        }
        else
        {
LABEL_14:
          sub_24F781F10(v2, v1, 3);
          id result = 0;
        }
        break;
      case 2uLL:
        uint64_t v7 = *(void *)(v2 + 16);
        uint64_t v6 = *(void *)(v2 + 24);
        uint64_t v5 = v6 - v7;
        if (!__OFSUB__(v6, v7)) {
          goto LABEL_11;
        }
        goto LABEL_17;
      case 3uLL:
        goto LABEL_14;
      default:
        uint64_t v5 = BYTE6(v1);
        goto LABEL_12;
    }
  }
  else
  {
    id result = 0;
    if (v3 == 2)
    {
      swift_bridgeObjectRetain();
      return sub_24F810D58();
    }
  }
  return result;
}

id sub_24F810D04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithUUIDBytes_, a1);
  *a2 = result;
  return result;
}

id sub_24F810D58()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v1 = (void *)sub_24F8CED70();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithUUIDString_, v1);

  return v2;
}

uint64_t sub_24F810DCC@<X0>(uint64_t a1@<X8>)
{
  return NSUUID.databaseValue.getter(a1);
}

id sub_24F810DF0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = static NSUUID.fromDatabaseValue(_:)(a1);
  *a2 = result;
  return result;
}

id sub_24F810E18@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24F810D04(a1, a2);
}

uint64_t static UUID.fromDatabaseValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a1 + 16);
  if (v5 != 3)
  {
    if (v5 == 2)
    {
      return sub_24F8CE980();
    }
    goto LABEL_18;
  }
  unint64_t v7 = v3 >> 62;
  switch(v3 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v4), v4))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v8 = HIDWORD(v4) - (int)v4;
LABEL_11:
      sub_24F78419C(*(void *)a1, v3);
LABEL_12:
      if (v8 == 16)
      {
        if (!v7)
        {
          sub_24F811628(v4, v3 & 0xFFFFFFFFFFFFFFLL);
          goto LABEL_24;
        }
        if (v7 != 1)
        {
          uint64_t v14 = *(void *)(v4 + 16);
          uint64_t v15 = *(void *)(v4 + 24);
          swift_retain();
          swift_retain();
          sub_24F8116EC(v14, v15);
          swift_release();
          swift_release();
          goto LABEL_24;
        }
        if (v4 >> 32 >= (int)v4)
        {
          swift_retain();
          sub_24F8116EC((int)v4, v4 >> 32);
          sub_24F77F658();
LABEL_24:
          sub_24F77F658();
          uint64_t v11 = sub_24F8CE9C0();
          uint64_t v12 = a2;
          uint64_t v13 = 0;
          goto LABEL_19;
        }
LABEL_27:
        __break(1u);
        JUMPOUT(0x24F811010);
      }
LABEL_17:
      sub_24F77F658();
LABEL_18:
      uint64_t v11 = sub_24F8CE9C0();
      uint64_t v12 = a2;
      uint64_t v13 = 1;
LABEL_19:
      return sub_24F7771BC(v12, v13, 1, v11);
    case 2uLL:
      uint64_t v10 = *(void *)(v4 + 16);
      uint64_t v9 = *(void *)(v4 + 24);
      uint64_t v8 = v9 - v10;
      if (!__OFSUB__(v9, v10)) {
        goto LABEL_11;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v8 = BYTE6(v3);
      goto LABEL_12;
  }
}

uint64_t sub_24F811020(uint64_t result, uint64_t a2)
{
  if (result && (unint64_t)(a2 - result + 15) >= 0x1F) {
    return sub_24F8CE9A0();
  }
  __break(1u);
  return result;
}

const unsigned __int8 *UUID.init(sqliteStatement:index:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24F781274(&qword_26B1F7248);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24F8CE9C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = (sqlite3_stmt *)sub_24F77FDC8();
  int v14 = sqlite3_column_type(v12, v13);
  if (v14 == 4)
  {
    char v18 = (sqlite3_stmt *)sub_24F77FDC8();
    if (sqlite3_column_bytes(v18, v19) != 16) {
      goto LABEL_9;
    }
    char v20 = (sqlite3_stmt *)sub_24F77FDC8();
    if (!sqlite3_column_blob(v20, v21)) {
      goto LABEL_9;
    }
    sub_24F8CE9A0();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v11, v5);
    goto LABEL_11;
  }
  if (v14 != 3)
  {
LABEL_9:
    uint64_t v22 = 1;
    return (const unsigned __int8 *)sub_24F7771BC(a1, v22, 1, v5);
  }
  uint64_t v15 = (sqlite3_stmt *)sub_24F77FDC8();
  id result = sqlite3_column_text(v15, v16);
  if (result)
  {
    sub_24F8CEEE0();
    sub_24F8CE980();
    swift_bridgeObjectRelease();
    if (sub_24F777048((uint64_t)v4, 1, v5) == 1)
    {
      sub_24F811780((uint64_t)v4);
      goto LABEL_9;
    }
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v4, v5);
    sub_24F8CE9B0();
    sub_24F8CE9A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v23((char *)a1, v11, v5);
LABEL_11:
    uint64_t v22 = 0;
    return (const unsigned __int8 *)sub_24F7771BC(a1, v22, 1, v5);
  }
  __break(1u);
  return result;
}

const unsigned __int8 *sub_24F81135C@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24F781274(&qword_26B1F7248);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v17 = (char *)&v22 - v16;
  int v18 = sqlite3_column_type(a1, a2);
  if (v18 == 4)
  {
    if (sqlite3_column_bytes(a1, a2) != 16 || !sqlite3_column_blob(a1, a2)) {
      goto LABEL_9;
    }
    sub_24F8CE9A0();
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v17, a3);
    goto LABEL_11;
  }
  if (v18 != 3)
  {
LABEL_9:
    uint64_t v20 = 1;
    return (const unsigned __int8 *)sub_24F7771BC(a4, v20, 1, a3);
  }
  id result = sqlite3_column_text(a1, a2);
  if (result)
  {
    sub_24F8CEEE0();
    sub_24F8CE980();
    swift_bridgeObjectRelease();
    if (sub_24F777048((uint64_t)v11, 1, a3) == 1)
    {
      sub_24F811780((uint64_t)v11);
      goto LABEL_9;
    }
    int v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v21(v15, v11, a3);
    sub_24F8CE9B0();
    sub_24F8CE9A0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a3);
    v21((char *)a4, v17, a3);
LABEL_11:
    uint64_t v20 = 0;
    return (const unsigned __int8 *)sub_24F7771BC(a4, v20, 1, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_24F811628(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v3 = a1;
  __int16 v4 = a2;
  char v5 = BYTE2(a2);
  char v6 = BYTE3(a2);
  char v7 = BYTE4(a2);
  char v8 = BYTE5(a2);
  return sub_24F811020((uint64_t)&v3, (uint64_t)&v3 + BYTE6(a2));
}

uint64_t sub_24F8116EC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24F8CE6A0();
  uint64_t v5 = result;
  if (result)
  {
    uint64_t result = sub_24F8CE6C0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_24F8CE6B0();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v5 + v9;
  if (v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  return sub_24F811020(v5, v11);
}

uint64_t sub_24F811780(uint64_t a1)
{
  uint64_t v2 = sub_24F781274(&qword_26B1F7248);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_24F8117E0()
{
  return *(unsigned char *)(v0 + 16) == 4 && *(_OWORD *)v0 == 0;
}

uint64_t sub_24F8117FC()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  if (*(unsigned char *)(v0 + 16))
  {
    if (v2 != 1)
    {
      uint64_t v5 = *(void *)(v0 + 24);
      unint64_t v6 = *(void *)(v0 + 8);
      v9[3] = &type metadata for DatabaseValueDecodingContainer;
      v9[4] = sub_24F8131EC();
      uint64_t v7 = swift_allocObject();
      v9[0] = v7;
      *(void *)(v7 + 16) = v1;
      *(void *)(v7 + 24) = v6;
      *(unsigned char *)(v7 + 32) = v2;
      *(void *)(v7 + 40) = v5;
      sub_24F8CF850();
      swift_allocError();
      sub_24F781F34(v1, v6, v2);
      swift_bridgeObjectRetain();
      sub_24F8CF830();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
      swift_willThrow();
      return v4 & 1;
    }
    BOOL v3 = (v1 & 0x7FFFFFFFFFFFFFFFLL) == 0;
  }
  else
  {
    BOOL v3 = v1 == 0;
  }
  char v4 = !v3;
  return v4 & 1;
}

uint64_t sub_24F81191C()
{
  double v2 = *(double *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t result = *(void *)v0;
  if (!*(unsigned char *)(v0 + 16))
  {
LABEL_13:
    if (result == (char)result) {
      return result;
    }
    goto LABEL_14;
  }
  if (v3 == 1 && v2 >= -9.22337204e18 && v2 < 9.22337204e18)
  {
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -9.22337204e18)
      {
        uint64_t result = (uint64_t)v2;
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_14:
  v9[3] = &type metadata for DatabaseValueDecodingContainer;
  v9[4] = sub_24F8131EC();
  uint64_t v8 = swift_allocObject();
  v9[0] = v8;
  *(double *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(unsigned char *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  sub_24F8CF850();
  swift_allocError();
  sub_24F781F34(*(uint64_t *)&v2, v1, v3);
  swift_bridgeObjectRetain();
  sub_24F8CF830();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
  return swift_willThrow();
}

uint64_t sub_24F811A70()
{
  double v2 = *(double *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t result = *(void *)v0;
  if (!*(unsigned char *)(v0 + 16))
  {
LABEL_13:
    if (result == (__int16)result) {
      return result;
    }
    goto LABEL_14;
  }
  if (v3 == 1 && v2 >= -9.22337204e18 && v2 < 9.22337204e18)
  {
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -9.22337204e18)
      {
        uint64_t result = (uint64_t)v2;
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_14:
  v9[3] = &type metadata for DatabaseValueDecodingContainer;
  v9[4] = sub_24F8131EC();
  uint64_t v8 = swift_allocObject();
  v9[0] = v8;
  *(double *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(unsigned char *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  sub_24F8CF850();
  swift_allocError();
  sub_24F781F34(*(uint64_t *)&v2, v1, v3);
  swift_bridgeObjectRetain();
  sub_24F8CF830();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
  return swift_willThrow();
}

uint64_t sub_24F811BC4()
{
  double v2 = *(double *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t result = *(void *)v0;
  if (!*(unsigned char *)(v0 + 16))
  {
LABEL_13:
    if (result == (int)result) {
      return result;
    }
    goto LABEL_14;
  }
  if (v3 == 1 && v2 >= -9.22337204e18 && v2 < 9.22337204e18)
  {
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -9.22337204e18)
      {
        uint64_t result = (uint64_t)v2;
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_14:
  v9[3] = &type metadata for DatabaseValueDecodingContainer;
  v9[4] = sub_24F8131EC();
  uint64_t v8 = swift_allocObject();
  v9[0] = v8;
  *(double *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(unsigned char *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  sub_24F8CF850();
  swift_allocError();
  sub_24F781F34(*(uint64_t *)&v2, v1, v3);
  swift_bridgeObjectRetain();
  sub_24F8CF830();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
  return swift_willThrow();
}

void sub_24F811D18()
{
  double v1 = *(double *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  if (*(unsigned char *)(v0 + 16))
  {
    if (v2 != 1 || v1 < -9.22337204e18 || v1 >= 9.22337204e18)
    {
      unint64_t v5 = *(void *)(v0 + 8);
      uint64_t v6 = *(void *)(v0 + 24);
      v8[3] = &type metadata for DatabaseValueDecodingContainer;
      v8[4] = sub_24F8131EC();
      uint64_t v7 = swift_allocObject();
      v8[0] = v7;
      *(double *)(v7 + 16) = v1;
      *(void *)(v7 + 24) = v5;
      *(unsigned char *)(v7 + 32) = v2;
      *(void *)(v7 + 40) = v6;
      sub_24F8CF850();
      swift_allocError();
      sub_24F781F34(*(uint64_t *)&v1, v5, v2);
      swift_bridgeObjectRetain();
      sub_24F77FDD4();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v8);
      swift_willThrow();
      return;
    }
    if ((~*(void *)&v1 & 0x7FF0000000000000) != 0)
    {
      if (v1 > -9.22337204e18) {
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

unint64_t sub_24F811E4C()
{
  double v2 = *(double *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  unint64_t result = *(void *)v0;
  if (!*(unsigned char *)(v0 + 16))
  {
LABEL_13:
    if (result <= 0xFF) {
      return result;
    }
    goto LABEL_14;
  }
  if (v3 == 1 && v2 >= -9.22337204e18 && v2 < 9.22337204e18)
  {
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -9.22337204e18)
      {
        unint64_t result = (uint64_t)v2;
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_14:
  v9[3] = &type metadata for DatabaseValueDecodingContainer;
  v9[4] = sub_24F8131EC();
  uint64_t v8 = swift_allocObject();
  v9[0] = v8;
  *(double *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(unsigned char *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  sub_24F8CF850();
  swift_allocError();
  sub_24F781F34(*(uint64_t *)&v2, v1, v3);
  swift_bridgeObjectRetain();
  sub_24F8CF830();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
  return swift_willThrow();
}

unint64_t sub_24F811FA0()
{
  double v2 = *(double *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  unint64_t result = *(void *)v0;
  if (!*(unsigned char *)(v0 + 16))
  {
LABEL_13:
    if (!(result >> 16)) {
      return result;
    }
    goto LABEL_14;
  }
  if (v3 == 1 && v2 >= -9.22337204e18 && v2 < 9.22337204e18)
  {
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -9.22337204e18)
      {
        unint64_t result = (uint64_t)v2;
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_14:
  v9[3] = &type metadata for DatabaseValueDecodingContainer;
  v9[4] = sub_24F8131EC();
  uint64_t v8 = swift_allocObject();
  v9[0] = v8;
  *(double *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(unsigned char *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  sub_24F8CF850();
  swift_allocError();
  sub_24F781F34(*(uint64_t *)&v2, v1, v3);
  swift_bridgeObjectRetain();
  sub_24F8CF830();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
  return swift_willThrow();
}

unint64_t sub_24F8120F4()
{
  double v2 = *(double *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  unint64_t result = *(void *)v0;
  if (!*(unsigned char *)(v0 + 16))
  {
LABEL_13:
    if (!HIDWORD(result)) {
      return result;
    }
    goto LABEL_14;
  }
  if (v3 == 1 && v2 >= -9.22337204e18 && v2 < 9.22337204e18)
  {
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -9.22337204e18)
      {
        unint64_t result = (uint64_t)v2;
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_14:
  v9[3] = &type metadata for DatabaseValueDecodingContainer;
  v9[4] = sub_24F8131EC();
  uint64_t v8 = swift_allocObject();
  v9[0] = v8;
  *(double *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(unsigned char *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  sub_24F8CF850();
  swift_allocError();
  sub_24F781F34(*(uint64_t *)&v2, v1, v3);
  swift_bridgeObjectRetain();
  sub_24F8CF830();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
  return swift_willThrow();
}

uint64_t sub_24F812248()
{
  double v2 = *(double *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t result = *(void *)v0;
  if (!*(unsigned char *)(v0 + 16))
  {
LABEL_13:
    if ((result & 0x8000000000000000) == 0) {
      return result;
    }
    goto LABEL_14;
  }
  if (v3 == 1 && v2 >= -9.22337204e18 && v2 < 9.22337204e18)
  {
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -9.22337204e18)
      {
        uint64_t result = (uint64_t)v2;
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_14:
  v9[3] = &type metadata for DatabaseValueDecodingContainer;
  v9[4] = sub_24F8131EC();
  uint64_t v8 = swift_allocObject();
  v9[0] = v8;
  *(double *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(unsigned char *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  sub_24F8CF850();
  swift_allocError();
  sub_24F781F34(*(uint64_t *)&v2, v1, v3);
  swift_bridgeObjectRetain();
  sub_24F77FDD4();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
  return swift_willThrow();
}

void sub_24F812378()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  if (*(unsigned char *)(v0 + 16))
  {
    if (v2 != 1)
    {
      uint64_t v3 = *(void *)(v0 + 24);
      unint64_t v4 = *(void *)(v0 + 8);
      v6[3] = &type metadata for DatabaseValueDecodingContainer;
      _OWORD v6[4] = sub_24F8131EC();
      uint64_t v5 = swift_allocObject();
      v6[0] = v5;
      *(void *)(v5 + 16) = v1;
      *(void *)(v5 + 24) = v4;
      *(unsigned char *)(v5 + 32) = v2;
      *(void *)(v5 + 40) = v3;
      sub_24F8CF850();
      swift_allocError();
      sub_24F781F34(v1, v4, v2);
      swift_bridgeObjectRetain();
      sub_24F8CF830();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
      swift_willThrow();
    }
  }
}

void sub_24F812494()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  if (*(unsigned char *)(v0 + 16))
  {
    if (v2 != 1)
    {
      uint64_t v3 = *(void *)(v0 + 24);
      unint64_t v4 = *(void *)(v0 + 8);
      v6[3] = &type metadata for DatabaseValueDecodingContainer;
      _OWORD v6[4] = sub_24F8131EC();
      uint64_t v5 = swift_allocObject();
      v6[0] = v5;
      *(void *)(v5 + 16) = v1;
      *(void *)(v5 + 24) = v4;
      *(unsigned char *)(v5 + 32) = v2;
      *(void *)(v5 + 40) = v3;
      sub_24F8CF850();
      swift_allocError();
      sub_24F781F34(v1, v4, v2);
      swift_bridgeObjectRetain();
      sub_24F8CF830();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
      swift_willThrow();
    }
  }
}

uint64_t sub_24F8125AC()
{
  uint64_t v1 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  int v4 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  if (v4 == 3)
  {
    sub_24F781F34(*(void *)v0, *(void *)(v0 + 8), 3);
    sub_24F8CEDC0();
    uint64_t v6 = sub_24F8CEDA0();
    uint64_t v8 = v7;
    sub_24F781F10(v3, v2, 3);
    if (v8) {
      return v6;
    }
LABEL_6:
    _OWORD v11[3] = &type metadata for DatabaseValueDecodingContainer;
    v11[4] = sub_24F8131EC();
    uint64_t v9 = swift_allocObject();
    v11[0] = v9;
    *(void *)(v9 + 16) = v3;
    *(void *)(v9 + 24) = v2;
    *(unsigned char *)(v9 + 32) = v4;
    *(void *)(v9 + 40) = v5;
    sub_24F8CF850();
    swift_allocError();
    sub_24F781F34(v3, v2, v4);
    swift_bridgeObjectRetain();
    sub_24F8CF830();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v11);
    swift_willThrow();
    return v3;
  }
  if (v4 != 2) {
    goto LABEL_6;
  }
  sub_24F781F34(*(void *)v0, *(void *)(v0 + 8), 2);
  return v3;
}

uint64_t sub_24F81276C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  unint64_t v38 = *(void *)(v2 + 8);
  int v6 = *(unsigned __int8 *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = sub_24F76AE28(a1);
  if (v8)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v9;
    uint64_t v26 = a2;
    uint64_t v27 = v7;
    uint64_t v28 = v3;
    v30[0] = v5;
    v30[1] = v38;
    int v25 = v6;
    char v31 = v6;
    uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 32);
    uint64_t v13 = sub_24F8CF610();
    uint64_t v29 = v24;
    uint64_t v14 = *(void *)(v13 - 8);
    MEMORY[0x270FA5388](v13);
    uint64_t v16 = &v24[-v15];
    v12(v30, v10, v11);
    if (sub_24F777048((uint64_t)v16, 1, v10) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t v36 = &type metadata for DatabaseValueDecodingContainer;
      unint64_t v37 = sub_24F8131EC();
      uint64_t v17 = swift_allocObject();
      *(void *)&long long v35 = v17;
      unint64_t v18 = v38;
      *(void *)(v17 + 16) = v5;
      *(void *)(v17 + 24) = v18;
      char v19 = v25;
      *(unsigned char *)(v17 + 32) = v25;
      *(void *)(v17 + 40) = v27;
      sub_24F8CF850();
      swift_allocError();
      sub_24F781F34(v5, v18, v19);
      swift_bridgeObjectRetain();
      sub_24F8CF830();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v35);
      return swift_willThrow();
    }
    else
    {
      uint64_t v33 = v10;
      uint64_t v34 = v11;
      unint64_t v23 = sub_24F76ADC4((uint64_t *)&v32);
      (*(void (**)(uint64_t *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v23, v16, v10);
      sub_24F794DE0(&v32, (uint64_t)&v35);
      sub_24F794DE0(&v35, (uint64_t)&v32);
      sub_24F781274(&qword_26B1F7250);
      return swift_dynamicCast();
    }
  }
  else
  {
    uint64_t v36 = &type metadata for DatabaseValueDecoder;
    unint64_t v37 = sub_24F813174();
    uint64_t v21 = swift_allocObject();
    *(void *)&long long v35 = v21;
    unint64_t v22 = v38;
    *(void *)(v21 + 16) = v5;
    *(void *)(v21 + 24) = v22;
    *(unsigned char *)(v21 + 32) = v6;
    *(void *)(v21 + 40) = v7;
    sub_24F781F34(v5, v22, v6);
    swift_bridgeObjectRetain();
    return sub_24F8CF2F0();
  }
}

uint64_t sub_24F812AA0()
{
  return sub_24F8117FC() & 1;
}

uint64_t sub_24F812ABC()
{
  return sub_24F8125AC();
}

void sub_24F812AD4()
{
}

void sub_24F812AEC()
{
}

void sub_24F812B04()
{
}

uint64_t sub_24F812B1C()
{
  return sub_24F81191C();
}

uint64_t sub_24F812B34()
{
  return sub_24F811A70();
}

uint64_t sub_24F812B4C()
{
  return sub_24F811BC4();
}

uint64_t sub_24F812B64()
{
  return sub_24F8CFD20();
}

uint64_t sub_24F812B7C()
{
  return sub_24F812248();
}

unint64_t sub_24F812B94()
{
  return sub_24F811E4C();
}

unint64_t sub_24F812BAC()
{
  return sub_24F811FA0();
}

unint64_t sub_24F812BC4()
{
  return sub_24F8120F4();
}

uint64_t sub_24F812BDC()
{
  return sub_24F8CFD30();
}

uint64_t sub_24F812BF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_24F81276C(a1, a2);
}

uint64_t sub_24F812C0C()
{
  sub_24F8CF970();
  return sub_24F8CEC70();
}

uint64_t sub_24F812C58()
{
  return swift_willThrow();
}

uint64_t sub_24F812CA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  unint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 24);
  a1[3] = (uint64_t)&type metadata for DatabaseValueDecodingContainer;
  char v6 = *(unsigned char *)(v1 + 16);
  a1[4] = sub_24F8131EC();
  uint64_t v7 = swift_allocObject();
  *a1 = v7;
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v4;
  *(unsigned char *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v5;
  sub_24F781F34(v3, v4, v6);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F812D38()
{
  return sub_24F812C58();
}

uint64_t sub_24F812D50@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F812CA0(a1);
}

uint64_t static DatabaseValueConvertible<>.fromDatabaseValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24F8CE4E0();
  sub_24F770DF4();
  MEMORY[0x270FA5388](v6);
  sub_24F77BBBC();
  sub_24F8CE4B0();
  sub_24F770DF4();
  MEMORY[0x270FA5388](v7);
  sub_24F77BBBC();
  sub_24F8CE4A0();
  sub_24F770DF4();
  MEMORY[0x270FA5388](v8);
  sub_24F77BBBC();
  sub_24F8CEDD0();
  sub_24F770DF4();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = *(void *)a1;
  unint64_t v11 = *(void *)(a1 + 8);
  char v12 = *(unsigned char *)(a1 + 16);
  sub_24F813174();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v10;
  *(void *)(v14 + 24) = v11;
  *(unsigned char *)(v14 + 32) = v12;
  *(void *)(v14 + 40) = MEMORY[0x263F8EE78];
  sub_24F781F34(v10, v11, v12);
  sub_24F8CF2F0();
  return sub_24F7771BC(a3, 0, 1, a2);
}

unint64_t sub_24F813174()
{
  unint64_t result = qword_26B1F58E8;
  if (!qword_26B1F58E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F58E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseValueDecoder()
{
  return &type metadata for DatabaseValueDecoder;
}

unint64_t sub_24F8131EC()
{
  unint64_t result = qword_269A2B380;
  if (!qword_269A2B380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B380);
  }
  return result;
}

uint64_t _s12GRDBInternal20DatabaseValueDecoderVwxx_0(uint64_t a1)
{
  sub_24F781F10(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s12GRDBInternal20DatabaseValueDecoderVwcp_0(uint64_t a1, uint64_t a2)
{
  sub_24F77E8F8(a1, a2);
  *(void *)uint64_t v3 = v4;
  *(void *)(v3 + 8) = v5;
  *(unsigned char *)(v3 + 16) = v6;
  *(void *)(v3 + 24) = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t _s12GRDBInternal20DatabaseValueDecoderVwca_0(uint64_t a1, uint64_t a2)
{
  sub_24F77E8F8(a1, a2);
  uint64_t v7 = *(void *)v3;
  unint64_t v8 = *(void *)(v3 + 8);
  *(void *)uint64_t v3 = v4;
  *(void *)(v3 + 8) = v5;
  char v9 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(v3 + 16) = v6;
  sub_24F781F10(v7, v8, v9);
  *(void *)(v3 + 24) = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t _s12GRDBInternal20DatabaseValueDecoderVwta_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F781F10(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12GRDBInternal20DatabaseValueDecoderVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F8133C0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseValueDecodingContainer()
{
  return &type metadata for DatabaseValueDecodingContainer;
}

uint64_t sub_24F813414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_24F795698();
    uint64_t v7 = v15;
    unint64_t v8 = (char *)(a1 + 32);
    for (uint64_t i = v4 - 1; ; --i)
    {
      memcpy(__dst, v8, 0xA3uLL);
      v12[0] = a2;
      v12[1] = a3;
      sub_24F8168DC(__src, __dst, v12);
      uint64_t v15 = v7;
      unint64_t v10 = *(void *)(v7 + 16);
      if (v10 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F795698();
        uint64_t v7 = v15;
      }
      *(void *)(v7 + 16) = v10 + 1;
      memcpy((void *)(v7 + 168 * v10 + 32), __src, 0xA3uLL);
      if (!i) {
        break;
      }
      v8 += 168;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

void sub_24F813544()
{
  sub_24F76FF94();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  if (v3)
  {
    uint64_t v4 = v0;
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24F795698();
    uint64_t v5 = v4 + 32;
    for (uint64_t i = v3 - 1; ; --i)
    {
      sub_24F771060(v9);
      sub_24F771060(&v8);
      sub_24F76F86C(v9);
      sub_24F814C38(v2);
      sub_24F76F86C(v9);
      unint64_t v7 = *(void *)(v11 + 16);
      if (v7 >= *(void *)(v11 + 24) >> 1) {
        sub_24F795698();
      }
      *(void *)(v11 + 16) = v7 + 1;
      memcpy((void *)(v11 + 168 * v7 + 32), v10, 0xA3uLL);
      if (!i) {
        break;
      }
      v5 += 168;
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  sub_24F77BC10();
}

uint64_t sub_24F813694(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v8 = v21;
    uint64_t v9 = a1 + 32;
    uint64_t v18 = v5 - 1;
    unsigned int v17 = a3 & 1;
    while (1)
    {
      sub_24F771060(v20);
      sub_24F771060(v19);
      sub_24F76F86C(v20);
      uint64_t v10 = sub_24F76D734(a2, v17);
      if (v3)
      {
        sub_24F76F86C(v20);
        swift_release();
        swift_release();
        return v8;
      }
      uint64_t v12 = v10;
      uint64_t v13 = v11;
      sub_24F76F86C(v20);
      uint64_t v21 = v8;
      unint64_t v14 = *(void *)(v8 + 16);
      if (v14 >= *(void *)(v8 + 24) >> 1)
      {
        sub_24F77C4AC();
        uint64_t v8 = v21;
      }
      *(void *)(v8 + 16) = v14 + 1;
      uint64_t v15 = v8 + 16 * v14;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 40) = v13;
      if (!v18) {
        break;
      }
      v9 += 168;
      --v18;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v8;
}

uint64_t sub_24F813840(uint64_t a1, uint64_t a2)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  void *v17;
  uint64_t i;
  unsigned char v19[168];
  unsigned char v20[168];
  void v21[21];
  unsigned char v22[168];
  void __src[21];
  uint64_t v24;
  void v25[2];
  char v26;
  void v27[3];
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  unsigned char v32[168];
  __n128 __dst[10];
  void v34[21];
  unsigned char v35[176];
  uint64_t v36;

  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_24F795698();
  uint64_t v5 = v36;
  unint64_t v6 = (void *)(a1 + 40);
  for (uint64_t i = v3 - 1; ; --i)
  {
    uint64_t v7 = *v6;
    unsigned int v17 = v6;
    v34[0] = *(v6 - 1);
    v34[1] = v7;
    uint64_t v34[2] = a2;
    sub_24F7ADE84((uint64_t)v34);
    sub_24F76F710((uint64_t)v34, (uint64_t)v35);
    char v31 = 0;
    memset(v30, 0, sizeof(v30));
    sub_24F81C6B8((uint64_t)v30, (uint64_t)v27);
    uint64_t v8 = v28;
    if (v28)
    {
      uint64_t v9 = v29;
      sub_24F7811D0(v27, v28);
      uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v10(__src, v8, v9);
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v27);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      sub_24F7783C0((uint64_t)v27, &qword_26B1F7350);
      v25[1] = 0;
      v25[0] = 0;
      uint64_t v26 = 4;
      sub_24F7667B8((uint64_t)v25);
      sub_24F76F710((uint64_t)v25, (uint64_t)__src);
    }
    memcpy(__dst, __src, 0xA3uLL);
    sub_24F76F710((uint64_t)v34, (uint64_t)__src);
    sub_24F76F710((uint64_t)__dst, (uint64_t)&v24);
    sub_24F76F710((uint64_t)__dst, (uint64_t)v25);
    if (sub_24F76F978((uint64_t)v25) == 2)
    {
      uint64_t v11 = sub_24F76F774((uint64_t)v25);
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *(void *)(v11 + 8);
      unint64_t v14 = *(unsigned __int8 *)(v11 + 16);
      if (v14 == 4 && !(v13 | v12))
      {
        sub_24F76F86C(__dst);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_24F76F86C(__dst);
        sub_24F781F10(0, 0, 4);
        sub_24F781F10(0, 0, 4);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_24F7DA038((uint64_t)__src);
        memcpy(v20, v35, 0xA3uLL);
        v21[0] = 0;
        v21[1] = 0;
        LOBYTE(v21[2]) = 4;
        sub_24F7667B8((uint64_t)v21);
        sub_24F76F710((uint64_t)v21, (uint64_t)v22);
        memcpy(v19, v22, 0xA3uLL);
        sub_24F815BAC(2, v20, v19, v32);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      sub_24F76F86C(__dst);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_24F76F86C(__dst);
      sub_24F781F10(0, 0, 4);
      sub_24F781F10(v12, v13, v14);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_24F76F86C(__dst);
    }
    sub_24F7DA038((uint64_t)__src);
    memcpy(v22, v35, 0xA3uLL);
    memcpy(v21, __dst, 0xA3uLL);
    sub_24F815BAC(0, v22, v21, v32);
LABEL_13:
    sub_24F76F86C(__dst);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24F7783C0((uint64_t)v30, &qword_26B1F7350);
    swift_release();
    swift_bridgeObjectRelease_n();
    memcpy(v22, v32, 0xA3uLL);
    uint64_t v36 = v5;
    uint64_t v15 = *(void *)(v5 + 16);
    if (v15 >= *(void *)(v5 + 24) >> 1)
    {
      sub_24F795698();
      uint64_t v5 = v36;
    }
    *(void *)(v5 + 16) = v15 + 1;
    memcpy((void *)(v5 + 168 * v15 + 32), v22, 0xA3uLL);
    if (!i) {
      break;
    }
    unint64_t v6 = v17 + 2;
  }
  swift_release();
  return v5;
}

uint64_t sub_24F813CC4(uint64_t a1, uint64_t a2)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  void *v17;
  unsigned char v18[168];
  unsigned char v19[168];
  unsigned char v20[163];
  unsigned char v21[168];
  void __src[21];
  uint64_t v23;
  void v24[2];
  char v25;
  void v26[3];
  uint64_t v27;
  uint64_t v28;
  unsigned char v29[168];
  unsigned char v30[32];
  uint64_t v31;
  __n128 __dst[10];
  void v33[21];
  unsigned char v34[168];
  uint64_t v35;
  uint64_t i;

  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  long long v35 = MEMORY[0x263F8EE78];
  sub_24F795698();
  uint64_t v5 = v35;
  unint64_t v6 = (void *)(a1 + 40);
  for (uint64_t i = v3 - 1; ; --i)
  {
    uint64_t v7 = *v6;
    unsigned int v17 = v6;
    v33[0] = *(v6 - 1);
    v33[1] = v7;
    v33[2] = a2;
    sub_24F7ADE84((uint64_t)v33);
    sub_24F76F710((uint64_t)v33, (uint64_t)v34);
    char v31 = 0;
    memset(v30, 0, sizeof(v30));
    sub_24F81C6B8((uint64_t)v30, (uint64_t)v26);
    uint64_t v8 = v27;
    if (v27)
    {
      uint64_t v9 = v28;
      sub_24F7811D0(v26, v27);
      uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v10(__src, v8, v9);
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v26);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      sub_24F7783C0((uint64_t)v26, &qword_26B1F7350);
      v24[1] = 0;
      v24[0] = 0;
      int v25 = 4;
      sub_24F7667B8((uint64_t)v24);
      sub_24F76F710((uint64_t)v24, (uint64_t)__src);
    }
    memcpy(__dst, __src, 0xA3uLL);
    sub_24F76F710((uint64_t)v33, (uint64_t)__src);
    sub_24F76F710((uint64_t)__dst, (uint64_t)&v23);
    sub_24F76F710((uint64_t)__dst, (uint64_t)v24);
    if (sub_24F76F978((uint64_t)v24) == 2)
    {
      uint64_t v11 = sub_24F76F774((uint64_t)v24);
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *(void *)(v11 + 8);
      unint64_t v14 = *(unsigned __int8 *)(v11 + 16);
      if (v14 == 4 && !(v13 | v12))
      {
        sub_24F76F86C(__dst);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_24F76F86C(__dst);
        sub_24F781F10(0, 0, 4);
        sub_24F781F10(0, 0, 4);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_24F7DA038((uint64_t)__src);
        memcpy(v19, v34, 0xA3uLL);
        *(void *)uint64_t v20 = 0;
        *(void *)&v20[8] = 0;
        v20[16] = 4;
        sub_24F7667B8((uint64_t)v20);
        sub_24F76F710((uint64_t)v20, (uint64_t)v21);
        memcpy(v18, v21, 0xA3uLL);
        sub_24F815BAC(2, v19, v18, v29);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      sub_24F76F86C(__dst);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_24F76F86C(__dst);
      sub_24F781F10(0, 0, 4);
      sub_24F781F10(v12, v13, v14);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_24F76F86C(__dst);
    }
    sub_24F7DA038((uint64_t)__src);
    memcpy(v21, v34, 0xA3uLL);
    memcpy(v20, __dst, sizeof(v20));
    sub_24F815BAC(0, v21, v20, v29);
LABEL_13:
    sub_24F76F86C(__dst);
    swift_release();
    swift_bridgeObjectRelease();
    memcpy(v20, v29, sizeof(v20));
    sub_24F81A714((void *)2, v21);
    sub_24F76F86C((__n128 *)v20);
    sub_24F7783C0((uint64_t)v30, &qword_26B1F7350);
    swift_release();
    swift_bridgeObjectRelease_n();
    long long v35 = v5;
    uint64_t v15 = *(void *)(v5 + 16);
    if (v15 >= *(void *)(v5 + 24) >> 1)
    {
      sub_24F795698();
      uint64_t v5 = v35;
    }
    *(void *)(v5 + 16) = v15 + 1;
    memcpy((void *)(v5 + 168 * v15 + 32), v21, 0xA3uLL);
    if (!i) {
      break;
    }
    unint64_t v6 = v17 + 2;
  }
  swift_release();
  return v5;
}

uint64_t sub_24F814174@<X0>(void *a1@<X8>)
{
  return sub_24F81421C(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_24F814180@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0xA2uLL);
  sub_24F81BC0C((uint64_t)__dst);
  sub_24F76F710((uint64_t)__dst, (uint64_t)__src);
  memcpy(v6, __src, 0xA3uLL);
  sub_24F799920(v6);
  sub_24F7997BC((uint64_t)v6, (uint64_t)v7);
  memcpy(a1, v7, 0xB8uLL);
  return sub_24F81C668(v1);
}

uint64_t sub_24F81421C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  v9[0] = a1;
  v9[1] = a2;
  char v10 = a3;
  sub_24F7667B8((uint64_t)v9);
  sub_24F76F710((uint64_t)v9, (uint64_t)__src);
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F799920(__dst);
  sub_24F7997BC((uint64_t)__dst, (uint64_t)v13);
  memcpy(a4, v13, 0xB8uLL);
  return sub_24F781F34(a1, a2, a3);
}

uint64_t sub_24F8142C0@<X0>(void *a1@<X8>)
{
  sub_24F770944(v4);
  sub_24F799920(v4);
  sub_24F7997BC((uint64_t)v4, (uint64_t)__src);
  memcpy(a1, __src, 0xB8uLL);
  return sub_24F76F86C(v1);
}

uint64_t sub_24F814330@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  __dst[0] = a1;
  LOBYTE(__dst[1]) = a2;
  v6[0] = sub_24F7EA6A4();
  v6[1] = v4;
  char v7 = 2;
  sub_24F7667B8((uint64_t)v6);
  sub_24F76F710((uint64_t)v6, (uint64_t)__src);
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F799920(__dst);
  return sub_24F7997BC((uint64_t)__dst, a3);
}

uint64_t sub_24F8143B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v5[0] = a1;
  v5[1] = a2;
  sub_24F7991DC((uint64_t)v5);
  sub_24F76F710((uint64_t)v5, (uint64_t)__src);
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F799920(__dst);
  sub_24F7997BC((uint64_t)__dst, a3);
  return swift_bridgeObjectRetain();
}

uint64_t SQLSpecificExpressible.sqlSelection.getter@<X0>(uint64_t a1@<X8>)
{
  sub_24F81CD64();
  v2();
  sub_24F799920(v4);
  return sub_24F7997BC((uint64_t)v4, a1);
}

uint64_t sub_24F814470@<X0>(void *a1@<X8>)
{
  return sub_24F814518(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_24F81447C@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0xA2uLL);
  sub_24F81BC0C((uint64_t)__dst);
  sub_24F76F710((uint64_t)__dst, (uint64_t)__src);
  memcpy(v6, __src, 0xA3uLL);
  sub_24F809608((uint64_t)v6);
  sub_24F808CB0((uint64_t)v6, (uint64_t)v7);
  memcpy(a1, v7, 0xA3uLL);
  return sub_24F81C668(v1);
}

uint64_t sub_24F814518@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  v9[0] = a1;
  v9[1] = a2;
  char v10 = a3;
  sub_24F7667B8((uint64_t)v9);
  sub_24F76F710((uint64_t)v9, (uint64_t)__src);
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F809608((uint64_t)__dst);
  sub_24F808CB0((uint64_t)__dst, (uint64_t)v13);
  memcpy(a4, v13, 0xA3uLL);
  return sub_24F781F34(a1, a2, a3);
}

uint64_t sub_24F8145BC@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0xA3uLL);
  sub_24F809608((uint64_t)__dst);
  sub_24F808CB0((uint64_t)__dst, (uint64_t)__src);
  memcpy(a1, __src, 0xA3uLL);
  return sub_24F76F86C(v1);
}

uint64_t sub_24F814634@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  __dst[0] = a1;
  LOBYTE(__dst[1]) = a2;
  v6[0] = sub_24F7EA6A4();
  v6[1] = v4;
  char v7 = 2;
  sub_24F7667B8((uint64_t)v6);
  sub_24F76F710((uint64_t)v6, (uint64_t)__src);
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F809608((uint64_t)__dst);
  return sub_24F808CB0((uint64_t)__dst, a3);
}

uint64_t sub_24F8146B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v5[0] = a1;
  v5[1] = a2;
  sub_24F7991DC((uint64_t)v5);
  sub_24F76F710((uint64_t)v5, (uint64_t)__src);
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F809608((uint64_t)__dst);
  sub_24F808CB0((uint64_t)__dst, a3);
  return swift_bridgeObjectRetain();
}

uint64_t SQLSpecificExpressible.sqlOrdering.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F81B18C((void (*)(unsigned char *))sub_24F809608, a1);
}

uint64_t sub_24F8147B4()
{
  sub_24F76F710(v0, (uint64_t)v38);
  sub_24F76F710((uint64_t)v38, (uint64_t)v39);
  char v1 = 1;
  switch(sub_24F76F978((uint64_t)v39))
  {
    case 3u:
      uint64_t v4 = sub_24F76F774((uint64_t)v39);
      goto LABEL_6;
    case 6u:
    case 0xFu:
    case 0x10u:
    case 0x12u:
      uint64_t v2 = (void *)sub_24F76F774((uint64_t)v39);
      uint64_t v3 = (const void *)(*v2 + 16);
      goto LABEL_15;
    case 7u:
      uint64_t v5 = sub_24F76F774((uint64_t)v39);
      uint64_t v6 = *(void *)v5;
      char v7 = sub_24F7736D0(v5, (const void *)(*(void *)v5 + 32));
      uint64_t v8 = (const void *)(v6 + 200);
      goto LABEL_17;
    case 9u:
      uint64_t v4 = sub_24F76F774((uint64_t)v39) + 40;
LABEL_6:
      uint64_t v9 = *(void *)v4;
      uint64_t v10 = *(void *)(*(void *)v4 + 16);
      if (!v10) {
        goto LABEL_35;
      }
      swift_bridgeObjectRetain();
      sub_24F770944(v37);
      uint64_t v11 = sub_24F773BAC();
      uint64_t v12 = sub_24F8147B4(v11);
      if (v12) {
        goto LABEL_11;
      }
      uint64_t v13 = 200;
      while (--v10)
      {
        uint64_t v14 = v13 + 168;
        sub_24F775C7C(v12, (const void *)(v9 + v13));
        uint64_t v15 = sub_24F773BAC();
        uint64_t v12 = sub_24F8147B4(v15);
        uint64_t v13 = v14;
        if (v12)
        {
LABEL_11:
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 0xBu:
      uint64_t v16 = sub_24F76F774((uint64_t)v39);
      uint64_t v17 = *(void *)v16;
      sub_24F775C7C(v16, (const void *)(*(void *)v16 + 16));
      memcpy(__dst, (const void *)(v17 + 184), 0xA2uLL);
      sub_24F773BAC();
      sub_24F76F86C(v37);
      uint64_t v18 = sub_24F81C668(__dst);
      if (sub_24F8147B4(v18))
      {
        sub_24F81C668(__dst);
LABEL_18:
        sub_24F76F86C(v37);
LABEL_19:
        char v1 = 1;
      }
      else
      {
        sub_24F7AD780((uint64_t)__dst, (uint64_t)v34);
        if (sub_24F7D2F28((uint64_t)v34))
        {
          sub_24F7D2F34((uint64_t)v34);
          sub_24F76F86C(v37);
        }
        else
        {
          uint64_t v24 = sub_24F7D2F34((uint64_t)v34);
          uint64_t v25 = *(void *)v24;
          uint64_t v26 = *(void *)(*(void *)v24 + 16);
          if (v26)
          {
            sub_24F81C668(__dst);
            memcpy(v36, (const void *)(v25 + 32), sizeof(v36));
            uint64_t v27 = sub_24F81CCFC(v33);
            uint64_t v28 = sub_24F8147B4(v27);
            if (v28)
            {
LABEL_31:
              sub_24F76F86C(v37);
              sub_24F81C668(__dst);
              sub_24F81C668(__dst);
              goto LABEL_19;
            }
            uint64_t v29 = (char *)(v25 + 200);
            while (--v26)
            {
              uint64_t v30 = v29 + 168;
              sub_24F7736D0(v28, v29);
              char v31 = sub_24F81CCFC(v33);
              uint64_t v28 = sub_24F8147B4(v31);
              uint64_t v29 = v30;
              if (v28) {
                goto LABEL_31;
              }
            }
          }
          else
          {
            sub_24F81C668(__dst);
          }
          sub_24F76F86C(v37);
          sub_24F81C668(__dst);
        }
        sub_24F81C668(__dst);
LABEL_35:
        char v1 = 0;
      }
      return v1 & 1;
    case 0xCu:
      uint64_t v2 = (void *)sub_24F76F774((uint64_t)v39);
      uint64_t v3 = (const void *)(*v2 + 40);
LABEL_15:
      sub_24F775C7C((uint64_t)v2, v3);
      char v19 = sub_24F773BAC();
      char v1 = sub_24F8147B4(v19);
      return v1 & 1;
    case 0xDu:
      uint64_t v20 = sub_24F76F774((uint64_t)v39);
      uint64_t v21 = *(void *)v20;
      char v7 = sub_24F7736D0(v20, (const void *)(*(void *)v20 + 24));
      uint64_t v8 = (const void *)(v21 + 192);
LABEL_17:
      sub_24F775C7C((uint64_t)v7, v8);
      sub_24F81CCFC(v33);
      uint64_t v22 = sub_24F76F86C(v37);
      if (sub_24F8147B4(v22)) {
        goto LABEL_18;
      }
      unint64_t v23 = sub_24F781520(v33);
      char v1 = sub_24F8147B4(v23);
      sub_24F76F86C(v37);
      return v1 & 1;
    case 0x11u:
      if (*(unsigned char *)(sub_24F76F774((uint64_t)v39) + 16)) {
        return v1 & 1;
      }
      goto LABEL_35;
    case 0x15u:
      return v1 & 1;
    default:
      goto LABEL_35;
  }
}

void *sub_24F814C38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  memcpy(__dst, (const void *)v2, 0xA3uLL);
  sub_24F76F710((uint64_t)__dst, (uint64_t)v87);
  uint64_t v6 = sub_24F76F978((uint64_t)v87);
  switch((int)v6)
  {
    case 1:
      sub_24F76F774((uint64_t)v87);
      sub_24F76F86C(__dst);
      swift_release();
      uint64_t v7 = swift_bridgeObjectRelease();
      goto LABEL_3;
    case 2:
    case 4:
    case 10:
    case 19:
    case 20:
      uint64_t v7 = sub_24F76F774((uint64_t)v87);
LABEL_3:
      sub_24F77B950(v7, __dst);
      return (void *)sub_24F76F86C(__dst);
    case 3:
      sub_24F78506C();
      sub_24F76F86C(__dst);
      swift_retain();
      sub_24F81CEBC();
      unint64_t v25 = v24;
      sub_24F76F86C(__dst);
      uint64_t v26 = *(void *)(v25 + 16);
      if (!v26)
      {
        swift_bridgeObjectRelease();
        __break(1u);
        JUMPOUT(0x24F815A08);
      }
      memcpy(v85, (const void *)(v25 + 32), sizeof(v85));
      if (v26 == 1)
      {
        sub_24F76F86C((__n128 *)v85);
        swift_bridgeObjectRelease();
        uint64_t v6 = (uint64_t)sub_24F7824AC(v84);
      }
      else
      {
        v83[0].n128_u64[0] = v25;
        sub_24F7AD710((uint64_t)v83);
        uint64_t v6 = sub_24F76F710((uint64_t)v83, (uint64_t)v84);
      }
      uint64_t v69 = (__n128 *)v84;
      return sub_24F77B950(v6, v69);
    case 5:
      sub_24F78506C();
      sub_24F76F86C(__dst);
      swift_retain();
      sub_24F8511E4();
      uint64_t v28 = v27;
      sub_24F76F86C(__dst);
      *(void *)uint64_t v85 = v28;
      sub_24F7A45A0((uint64_t)v85);
      goto LABEL_27;
    case 6:
      sub_24F76F774((uint64_t)v87);
      sub_24F81CDBC();
      memcpy(v80, v8, 0xA3uLL);
      memcpy(v81, (const void *)(v2 + 184), 0xA3uLL);
      memcpy(v82, (const void *)(v2 + 352), sizeof(v82));
      char v9 = *(unsigned char *)(v2 + 515);
      memcpy(v85, v80, sizeof(v85));
      sub_24F76F86C(__dst);
      sub_24F81CFEC();
      sub_24F76F86C(v81);
      sub_24F775904();
      sub_24F81CE38();
      sub_24F81CE08(v79);
      memcpy(v85, v81, sizeof(v85));
      sub_24F77BD0C();
      sub_24F771E3C(v78);
      memcpy(__src, v82, 0xA3uLL);
      sub_24F814C38(a1);
      sub_24F7824AC(__src);
      sub_24F8166D8(v79, __src, v9, a2);
      sub_24F76F86C((__n128 *)v82);
      sub_24F76F86C(v81);
      sub_24F76F86C(v80);
      sub_24F76F86C((__n128 *)v85);
      sub_24F76F86C((__n128 *)v84);
      uint64_t v10 = v83;
      goto LABEL_23;
    case 7:
      sub_24F78506C();
      memcpy(v82, (const void *)(v2 + 32), sizeof(v82));
      memcpy(v83, (const void *)(v2 + 200), 0xA3uLL);
      memcpy(v85, v82, sizeof(v85));
      sub_24F76F86C(__dst);
      sub_24F775904();
      sub_24F780AE4();
      sub_24F77BD0C();
      sub_24F771E3C(v81);
      sub_24F81CE08(v80);
      sub_24F814C38(a1);
      sub_24F7824AC(v80);
      uint64_t v29 = sub_24F774654();
      sub_24F816B28(v29, v30, v31, v32);
      goto LABEL_20;
    case 8:
      sub_24F78506C();
      uint64_t v34 = *(void *)(v2 + 16);
      uint64_t v33 = *(void *)(v2 + 24);
      uint64_t v36 = *(void *)(v2 + 32);
      uint64_t v35 = *(void *)(v2 + 40);
      memcpy(v80, (const void *)(v2 + 48), 0xA3uLL);
      memcpy(v81, (const void *)(v2 + 216), 0xA3uLL);
      sub_24F7D9FD0(v2 + 384, (uint64_t)v82);
      memcpy(v85, v80, sizeof(v85));
      sub_24F76F86C(__dst);
      sub_24F81CFEC();
      sub_24F76F86C(v81);
      sub_24F81C3B4((uint64_t)v82);
      sub_24F81CE38();
      memcpy(v85, v81, sizeof(v85));
      sub_24F77BD0C();
      sub_24F7D9FD0((uint64_t)v82, (uint64_t)v85);
      if (sub_24F7996B8((uint64_t)v85) == 1)
      {
        sub_24F76F86C(v81);
        sub_24F81CFEC();
        unint64_t v37 = v82;
      }
      else
      {
        sub_24F7824AC(v79);
        sub_24F7D9FD0((uint64_t)v82, (uint64_t)v76);
        sub_24F76F86C(v76);
        sub_24F814C38(a1);
        sub_24F76F86C(v81);
        sub_24F81CFEC();
        sub_24F81C3B4((uint64_t)v82);
        sub_24F81C3B4((uint64_t)v82);
        memcpy(v78, __src, 0xA3uLL);
        nullsub_1(v78);
        unint64_t v37 = v78;
      }
      sub_24F7D9FD0((uint64_t)v37, (uint64_t)v79);
      BOOL v71 = (void *)swift_allocObject();
      v71[2] = v34;
      v71[3] = v33;
      v71[4] = v36;
      v71[5] = v35;
      sub_24F81CE08(v71 + 6);
      memcpy(v71 + 27, v84, 0xA3uLL);
      sub_24F7D9FD0((uint64_t)v79, (uint64_t)(v71 + 48));
      __src[0] = v71;
      sub_24F81C370((uint64_t)__src);
      uint64_t v72 = sub_24F76F710((uint64_t)__src, (uint64_t)v78);
      sub_24F77B950(v72, v78);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return (void *)sub_24F76F86C(__dst);
    case 9:
      uint64_t v38 = sub_24F76F774((uint64_t)v87);
      uint64_t v39 = *(void *)(v38 + 8);
      uint64_t v40 = *(void *)(v38 + 16);
      uint64_t v41 = *(void *)(v38 + 24);
      char v42 = *(unsigned char *)(v38 + 33);
      char v43 = *(unsigned char *)(v38 + 34);
      char v44 = *(unsigned char *)(v38 + 32);
      *(void *)uint64_t v85 = *(void *)v38;
      *(void *)&v85[8] = v39;
      *(void *)&v85[16] = v40;
      *(void *)&v85[24] = v41;
      v85[32] = v44;
      v85[33] = v42;
      v85[34] = v43;
      sub_24F76F86C(__dst);
      swift_retain();
      sub_24F813544();
      unint64_t v46 = v45;
      swift_bridgeObjectRelease();
      sub_24F816D90((uint64_t)v85, v46, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = sub_24F774654();
      return (void *)sub_24F781F10(v47, v48, v44);
    case 11:
      sub_24F76F774((uint64_t)v87);
      sub_24F81CDBC();
      memcpy(v84, v50, sizeof(v84));
      memcpy(v81, (const void *)(v2 + 184), 0xA2uLL);
      unsigned __int8 v51 = *(unsigned char *)(v2 + 346);
      sub_24F771E3C(v83);
      sub_24F76F86C(__dst);
      sub_24F76F86C((__n128 *)v84);
      sub_24F81C668(v81);
      uint64_t v52 = v83;
      sub_24F814C38(a1);
      sub_24F7AD780((uint64_t)v81, (uint64_t)v82);
      if (sub_24F7D2F28((uint64_t)v82))
      {
        sub_24F7D2F34((uint64_t)v82);
        sub_24F76F86C((__n128 *)v84);
        memcpy(v80, v81, 0xA2uLL);
      }
      else
      {
        sub_24F7D2F34((uint64_t)v82);
        swift_retain();
        sub_24F81CEBC();
        uint64_t v52 = v73;
        sub_24F76F86C((__n128 *)v84);
        sub_24F81C668(v81);
        v83[0].n128_u64[0] = (unint64_t)v52;
        sub_24F7D9FA8((uint64_t)v83);
        sub_24F7AD780((uint64_t)v83, (uint64_t)v80);
      }
      uint64_t v74 = swift_allocObject();
      unint64_t v75 = (void *)sub_24F7752E0(v74);
      sub_24F7824AC(v75);
      memcpy(a1, v80, 0xA2uLL);
      v52[21].n128_u8[10] = v51;
      sub_24F76F86C(__dst);
      v83[0].n128_u64[0] = (unint64_t)v52;
      sub_24F7AD91C((uint64_t)v83);
      int64_t v68 = v83;
      return (void *)sub_24F76F710((uint64_t)v68, (uint64_t)a2);
    case 12:
      sub_24F772974();
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v12 = *(void *)(v11 + 24);
      char v14 = *(unsigned char *)(v11 + 32);
      sub_24F770944(v82);
      sub_24F770944(v85);
      sub_24F76F86C(__dst);
      sub_24F775904();
      sub_24F81CE38();
      sub_24F76F86C((__n128 *)v82);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v13;
      *(void *)(v15 + 24) = v12;
      *(unsigned char *)(v15 + 32) = v14;
      sub_24F81CE08((void *)(v15 + 40));
      *(void *)uint64_t v84 = v15;
      sub_24F81C570((uint64_t)v84);
      uint64_t v16 = sub_24F76F710((uint64_t)v84, (uint64_t)v85);
      sub_24F77B950(v16, v85);
      swift_bridgeObjectRetain();
      return (void *)sub_24F76F86C(__dst);
    case 13:
      sub_24F78506C();
      uint64_t v53 = *(unsigned __int8 *)(v2 + 16);
      memcpy(v82, (const void *)(v2 + 24), sizeof(v82));
      memcpy(v83, (const void *)(v2 + 192), 0xA3uLL);
      memcpy(v85, v82, sizeof(v85));
      sub_24F76F86C(__dst);
      sub_24F775904();
      sub_24F780AE4();
      sub_24F77BD0C();
      sub_24F771E3C(v81);
      sub_24F81CE08(v80);
      sub_24F814C38(a1);
      sub_24F7824AC(v80);
      sub_24F815BAC(v53, v81, v80, a2);
LABEL_20:
      sub_24F76F86C(v83);
      sub_24F76F86C((__n128 *)v82);
      sub_24F76F86C((__n128 *)v85);
      uint64_t v10 = (__n128 *)v84;
      goto LABEL_23;
    case 14:
      sub_24F772974();
      uint64_t v18 = *(void *)(v17 + 16);
      sub_24F770944(v83);
      sub_24F770944(v85);
      sub_24F76F86C(__dst);
      swift_retain();
      sub_24F780AE4();
      sub_24F77BD0C();
      sub_24F76F86C(v83);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v18;
      sub_24F771E3C((void *)(v19 + 24));
      sub_24F76F86C(__dst);
      sub_24F81CF80();
      sub_24F81C4B4(v20);
      goto LABEL_27;
    case 15:
      sub_24F772974();
      sub_24F770944(v83);
      sub_24F770944(v85);
      sub_24F76F86C(__dst);
      sub_24F780AE4();
      sub_24F77BD0C();
      sub_24F76F86C(v83);
      uint64_t v54 = swift_allocObject();
      sub_24F771E3C((void *)(v54 + 16));
      sub_24F76F86C(__dst);
      sub_24F81CF80();
      sub_24F81C018(v55);
      goto LABEL_27;
    case 16:
      sub_24F81D03C();
      sub_24F770944(v84);
      uint64_t v57 = *(void *)(v3 + 184);
      uint64_t v56 = *(void *)(v3 + 192);
      sub_24F770944(v83);
      sub_24F76F86C(__dst);
      sub_24F76F86C((__n128 *)v84);
      sub_24F814C38(a1);
      sub_24F7824AC(v83);
      *(void *)uint64_t v82 = v57;
      *(void *)&v82[8] = v56;
      sub_24F8168DC(v83, (uint64_t)v82, a2);
      sub_24F76F86C((__n128 *)v84);
      uint64_t v10 = (__n128 *)v85;
LABEL_23:
      sub_24F76F86C(v10);
      return (void *)sub_24F76F86C(__dst);
    case 17:
      uint64_t v58 = sub_24F76F774((uint64_t)v87);
      uint64_t v59 = *(void *)v58;
      uint64_t v60 = *(void *)(v58 + 8);
      char v61 = *(unsigned char *)(v58 + 16);
      char v62 = *(unsigned char *)(v58 + 17);
      sub_24F76F86C(__dst);
      swift_retain();
      sub_24F81CEBC();
      uint64_t v64 = v63;
      swift_bridgeObjectRelease();
      *(void *)uint64_t v85 = v59;
      *(void *)&v85[8] = v60;
      v85[16] = v61;
      v85[17] = v62;
      *(void *)&v85[24] = v64;
      sub_24F7A45E4((uint64_t)v85);
      goto LABEL_27;
    case 18:
      sub_24F81D03C();
      sub_24F770944(v83);
      char v65 = *(unsigned char *)(v3 + 179);
      sub_24F770944(v85);
      sub_24F76F86C(__dst);
      sub_24F780AE4();
      sub_24F77BD0C();
      sub_24F76F86C(v83);
      uint64_t v66 = swift_allocObject();
      sub_24F771E3C((void *)(v66 + 16));
      *(unsigned char *)(v66 + 179) = v65;
      sub_24F76F86C(__dst);
      sub_24F81CF80();
      sub_24F81C11C(v67);
LABEL_27:
      int64_t v68 = (__n128 *)v85;
      return (void *)sub_24F76F710((uint64_t)v68, (uint64_t)a2);
    case 21:
      uint64_t v69 = __dst;
      return sub_24F77B950(v6, v69);
    case 22:
      sub_24F81CF80();
      sub_24F81C3F8(v70);
      sub_24F76F710((uint64_t)v85, (uint64_t)a2);
      return (void *)swift_retain();
    default:
      uint64_t v21 = (void *)sub_24F76F774((uint64_t)v87);
      uint64_t v22 = v21[1];
      *(void *)uint64_t v84 = *v21;
      *(void *)&v84[8] = v22;
      *(void *)&v84[16] = a1;
      sub_24F7ADE84((uint64_t)v84);
      uint64_t v23 = sub_24F76F710((uint64_t)v84, (uint64_t)v85);
      sub_24F77B950(v23, v85);
      sub_24F76F86C(__dst);
      return (void *)swift_retain();
  }
}

uint64_t sub_24F815A64()
{
  memcpy(__dst, v0, 0xA2uLL);
  sub_24F81BC0C((uint64_t)__dst);
  uint64_t v1 = sub_24F76F710((uint64_t)__dst, (uint64_t)v4);
  sub_24F77B950(v1, v4);
  return sub_24F81C668(v0);
}

uint64_t sub_24F815AD4@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlSelection.getter(a1);
}

uint64_t sub_24F815AE0@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlOrdering.getter(a1);
}

uint64_t SQLSpecificExpressible.forKey(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(a4 + 8) + 8))(v9, a3);
  v9[21] = a1;
  v9[22] = a2;
  sub_24F7998DC(v9);
  sub_24F7997BC((uint64_t)v9, a5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F815B64@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlSelection.getter(a1);
}

uint64_t sub_24F815B70@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlOrdering.getter(a1);
}

uint64_t sub_24F815B7C@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlSelection.getter(a1);
}

uint64_t sub_24F815B88@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlOrdering.getter(a1);
}

uint64_t sub_24F815B94@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlSelection.getter(a1);
}

uint64_t sub_24F815BA0@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlOrdering.getter(a1);
}

uint64_t sub_24F815BAC@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, const void *a3@<X2>, void *a4@<X8>)
{
  memcpy(__dst, a2, 0xA3uLL);
  memcpy(__src, a3, 0xA3uLL);
  sub_24F76F710((uint64_t)__dst, (uint64_t)v60);
  if (sub_24F76F978((uint64_t)v60) == 16)
  {
    uint64_t v7 = (void *)sub_24F76F774((uint64_t)v60);
    sub_24F81CDE4(v7, v8, v9, v10, v11, v12, v13, v14, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      *(uint64_t *)v52,
      *(uint64_t *)&v52[8],
      *(uint64_t *)&v52[16],
      *(uint64_t *)&v52[24],
      *(uint64_t *)&v52[32],
      *(uint64_t *)&v52[40],
      *(uint64_t *)&v52[48],
      *(uint64_t *)&v52[56],
      *(uint64_t *)&v52[64],
      *(uint64_t *)&v52[72],
      *(uint64_t *)&v52[80],
      *(uint64_t *)&v52[88],
      *(uint64_t *)&v52[96],
      *(uint64_t *)&v52[104],
      *(uint64_t *)&v52[112],
      *(uint64_t *)&v52[120],
      *(uint64_t *)&v52[128],
      *(uint64_t *)&v52[136],
      *(uint64_t *)&v52[144],
      *(uint64_t *)&v52[152],
      *(uint64_t *)&v52[160],
      v53[0].n128_i8[0]);
    uint64_t v16 = v54;
    uint64_t v15 = v55;
    sub_24F774F3C(v56);
    memcpy(v52, __src, 0xA3uLL);
    sub_24F7A44D8((uint64_t)v53);
    sub_24F815BAC(v57, a1, v56, v52);
    memcpy(v56, v57, 0xA3uLL);
    *(void *)uint64_t v52 = v16;
    *(void *)&v52[8] = v15;
    sub_24F8168DC(v56, (uint64_t)v52, a4);
    sub_24F76F86C(v53);
    uint64_t v17 = (__n128 *)v57;
LABEL_5:
    sub_24F76F86C(v17);
    return swift_bridgeObjectRelease();
  }
  sub_24F76F710((uint64_t)__src, (uint64_t)v57);
  if (sub_24F76F978((uint64_t)v57) == 16)
  {
    uint64_t v18 = (void *)sub_24F76F774((uint64_t)v57);
    sub_24F81CDE4(v18, v19, v20, v21, v22, v23, v24, v25, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      *(uint64_t *)v52,
      *(uint64_t *)&v52[8],
      *(uint64_t *)&v52[16],
      *(uint64_t *)&v52[24],
      *(uint64_t *)&v52[32],
      *(uint64_t *)&v52[40],
      *(uint64_t *)&v52[48],
      *(uint64_t *)&v52[56],
      *(uint64_t *)&v52[64],
      *(uint64_t *)&v52[72],
      *(uint64_t *)&v52[80],
      *(uint64_t *)&v52[88],
      *(uint64_t *)&v52[96],
      *(uint64_t *)&v52[104],
      *(uint64_t *)&v52[112],
      *(uint64_t *)&v52[120],
      *(uint64_t *)&v52[128],
      *(uint64_t *)&v52[136],
      *(uint64_t *)&v52[144],
      *(uint64_t *)&v52[152],
      *(uint64_t *)&v52[160],
      v53[0].n128_i8[0]);
    uint64_t v27 = v54;
    uint64_t v26 = v55;
    sub_24F81D0B8(v52);
    sub_24F774F3C(&v31);
    sub_24F7A44D8((uint64_t)v53);
    sub_24F815BAC(v56, a1, v52, &v31);
    memcpy(v52, v56, 0xA3uLL);
    uint64_t v31 = v27;
    uint64_t v32 = v26;
    sub_24F8168DC(v52, (uint64_t)&v31, a4);
    sub_24F76F86C(v53);
    uint64_t v17 = (__n128 *)v56;
    goto LABEL_5;
  }
  uint64_t v29 = (unsigned char *)swift_allocObject();
  v29[16] = a1;
  sub_24F81D0B8(v29 + 24);
  memcpy(v29 + 192, __src, 0xA3uLL);
  v56[0] = v29;
  sub_24F81BFCC((uint64_t)v56);
  uint64_t v30 = sub_24F76F710((uint64_t)v56, (uint64_t)v53);
  sub_24F77B950(v30, v53);
  sub_24F76F86C(__dst);
  return sub_24F76F86C(__src);
}

uint64_t sub_24F815DEC@<X0>(uint64_t a1@<X8>)
{
  return sub_24F814330(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_24F815DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_24F814634(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t Sequence<>.joined(operator:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  sub_24F81CF6C();
  v21[0] = v8;
  v21[1] = v9;
  long long v22 = *(_OWORD *)(v10 + 16);
  char v23 = v11;
  char v24 = v12;
  char v25 = v13;
  v20[6] = v14;
  v20[7] = v15;
  v20[8] = v16;
  v20[2] = a1;
  _OWORD v20[3] = a2;
  v20[4] = a3;
  v20[5] = swift_getKeyPath();
  unint64_t v18 = sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F81AFD4, (uint64_t)v20, a1, (uint64_t)&type metadata for SQLExpression, MEMORY[0x263F8E628], a2, MEMORY[0x263F8E658], v17);
  swift_release();
  sub_24F816D90((uint64_t)v21, v18, a4);
  return swift_bridgeObjectRelease();
}

void static SQLExpression.AssociativeBinaryOperator.add.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 43;
  *(void *)(a1 + 8) = 0xE100000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 31) = 0;
}

void static SQLExpression.AssociativeBinaryOperator.multiply.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 42;
  *(void *)(a1 + 8) = 0xE100000000000000;
  *(void *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 31) = 0;
}

double static SQLExpression.AssociativeBinaryOperator.and.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 4476481;
  *(void *)(a1 + 8) = 0xE300000000000000;
  *(void *)&double result = 1;
  *(_OWORD *)(a1 + 16) = xmmword_24F8DF640;
  *(_WORD *)(a1 + 32) = 256;
  *(unsigned char *)(a1 + 34) = 0;
  return result;
}

void static SQLExpression.AssociativeBinaryOperator.or.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 21071;
  *(void *)(a1 + 8) = 0xE200000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 33) = 1;
}

double static SQLExpression.AssociativeBinaryOperator.concat.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 31868;
  *(void *)(a1 + 8) = 0xE200000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_24F8E12A0;
  *(_WORD *)(a1 + 32) = 258;
  *(unsigned char *)(a1 + 34) = 1;
  return result;
}

uint64_t SQLExpression.AssociativeBinaryOperator.hash(into:)()
{
  return sub_24F8CFF50();
}

uint64_t static SQLExpression.AssociativeBinaryOperator.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 32);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 33);
  int v5 = *(unsigned __int8 *)(a1 + 34);
  long long v6 = *(_OWORD *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 33);
  int v9 = *(unsigned __int8 *)(a2 + 34);
  BOOL v10 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v10
    || (long long v16 = *(_OWORD *)(a2 + 16),
        long long v17 = *(_OWORD *)(a1 + 16),
        char v11 = sub_24F8CFD00(),
        long long v6 = v16,
        long long v2 = v17,
        char v12 = v11,
        uint64_t result = 0,
        (v12 & 1) != 0))
  {
    long long v20 = v2;
    char v21 = v3;
    long long v18 = v6;
    char v19 = v7;
    char v14 = static DatabaseValue.== infix(_:_:)((uint64_t)&v20, (uint64_t)&v18);
    if ((v4 ^ v8)) {
      unsigned int v15 = 0;
    }
    else {
      unsigned int v15 = v5 ^ v9 ^ 1;
    }
    if (v14) {
      return v15;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t SQLExpression.AssociativeBinaryOperator.hashValue.getter()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8161BC()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F81626C()
{
  swift_bridgeObjectRetain();
  sub_24F77AD28();
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8162C4()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F816324()
{
  return sub_24F8162C4();
}

uint64_t sub_24F81632C()
{
  return sub_24F81626C();
}

uint64_t sub_24F816334()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F81638C(uint64_t *a1, uint64_t *a2)
{
  return sub_24F7DA670(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_24F8163A0()
{
  unint64_t v0 = sub_24F8CFA50();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_24F8163EC(char a1)
{
  uint64_t result = 61;
  switch(a1)
  {
    case 1:
      uint64_t result = 15932;
      break;
    case 2:
      uint64_t result = 21321;
      break;
    case 3:
      uint64_t result = 0x544F4E205349;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F816458(char *a1, char *a2)
{
  return sub_24F7DA928(*a1, *a2);
}

uint64_t sub_24F816464()
{
  return sub_24F8A2324(*v0);
}

uint64_t sub_24F81646C()
{
  return sub_24F8A283C();
}

uint64_t sub_24F816474(uint64_t a1)
{
  return sub_24F8A2AEC(a1, *v1);
}

uint64_t sub_24F81647C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F8163A0();
  *a1 = result;
  return result;
}

uint64_t sub_24F8164AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F8163EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24F8164D8()
{
  return sub_24F8CFF50();
}

uint64_t sub_24F816538(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v8 = a1 == a4 && a2 == a5;
  if (v8 || (char v9 = sub_24F8CFD00(), v10 = 0, (v9 & 1) != 0)) {
    char v10 = a3 ^ a6 ^ 1;
  }
  return v10 & 1;
}

uint64_t sub_24F81658C()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F816604()
{
  return sub_24F81658C();
}

uint64_t sub_24F816610()
{
  return sub_24F8164D8();
}

uint64_t sub_24F81661C()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F81668C(uint64_t a1, uint64_t a2)
{
  return sub_24F816538(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_24F8166A8()
{
  uint64_t result = sqlite3_libversion_number();
  byte_269A33120 = (int)result > 3014999;
  return result;
}

uint64_t sub_24F8166D8@<X0>(const void *a1@<X0>, const void *a2@<X2>, char a3@<W3>, void *a4@<X8>)
{
  memcpy(__dst, a1, 0xA3uLL);
  sub_24F774F3C(v19);
  memcpy(v20, a2, 0xA3uLL);
  sub_24F76F710((uint64_t)__dst, (uint64_t)v21);
  if (sub_24F76F978((uint64_t)v21) == 16)
  {
    uint64_t v7 = sub_24F76F774((uint64_t)v21);
    memcpy(v16, (const void *)(*(void *)v7 + 16), sizeof(v16));
    uint64_t v8 = *(void *)&v16[168];
    uint64_t v9 = *(void *)&v16[176];
    sub_24F774F3C(__src);
    memcpy(v14, v19, 0xA3uLL);
    memcpy(v13, v20, 0xA3uLL);
    sub_24F7A44D8((uint64_t)v16);
    sub_24F8166D8(v17, __src, v14, v13, a3 & 1);
    memcpy(__src, v17, 0xA3uLL);
    v14[0] = v8;
    v14[1] = v9;
    sub_24F8168DC(__src, (uint64_t)v14, a4);
    sub_24F76F86C((__n128 *)v16);
    sub_24F76F86C(v17);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = (unsigned char *)swift_allocObject();
    memcpy(v11 + 16, __dst, 0xA3uLL);
    memcpy(v11 + 184, v19, 0xA3uLL);
    memcpy(v11 + 352, v20, 0xA3uLL);
    v11[515] = a3 & 1;
    v17[0].n128_u64[0] = (unint64_t)v11;
    sub_24F81BD10((uint64_t)v17);
    uint64_t v12 = sub_24F76F710((uint64_t)v17, (uint64_t)v16);
    sub_24F77B950(v12, v16);
    sub_24F76F86C(__dst);
    sub_24F76F86C(v19);
    return sub_24F76F86C(v20);
  }
}

uint64_t sub_24F8168DC@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  memcpy(__dst, a1, 0xA3uLL);
  long long v6 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  sub_24F76F710((uint64_t)__dst, (uint64_t)v28);
  int v7 = sub_24F76F978((uint64_t)v28);
  if (v7 == 9)
  {
    uint64_t v12 = sub_24F76F774((uint64_t)v28);
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
    unint64_t v15 = *(void *)(v12 + 24);
    char v16 = *(unsigned char *)(v12 + 33);
    char v17 = *(unsigned char *)(v12 + 34);
    uint64_t v18 = *(void *)(v12 + 40);
    char v19 = *(unsigned char *)(v12 + 32);
    __src[0] = *(void *)v12;
    __src[1] = v13;
    __src[2] = v14;
    __src[3] = v15;
    LOBYTE(__src[4]) = v19;
    BYTE1(__src[4]) = v16;
    BYTE2(__src[4]) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F781F34(v14, v15, v19);
    unint64_t v20 = sub_24F813414(v18, (uint64_t)v6, v5);
    sub_24F816D90((uint64_t)__src, v20, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_24F781F10(v14, v15, v19);
  }
  else if (v7 == 11)
  {
    uint64_t v8 = *(unsigned char **)sub_24F76F774((uint64_t)v28);
    memcpy(__src, v8 + 16, 0xA3uLL);
    memcpy(v24, v8 + 184, 0xA2uLL);
    LOBYTE(v8) = v8[346];
    v23[0] = v6;
    v23[1] = v5;
    sub_24F81C668(v24);
    sub_24F8168DC(v25, __src, v23);
    uint64_t v9 = swift_allocObject();
    char v10 = (void *)sub_24F7752E0(v9);
    memcpy(v10, v25, 0xA3uLL);
    memcpy(v6, v24, 0xA2uLL);
    *(unsigned char *)(v5 + 346) = (_BYTE)v8;
    __src[0] = v5;
    sub_24F7AD91C((uint64_t)__src);
    return sub_24F76F710((uint64_t)__src, (uint64_t)a3);
  }
  else
  {
    char v21 = (void *)swift_allocObject();
    memcpy(v21 + 2, __dst, 0xA3uLL);
    v21[23] = v6;
    v21[24] = v5;
    v25[0] = v21;
    sub_24F81C624((uint64_t)v25);
    uint64_t v22 = sub_24F76F710((uint64_t)v25, (uint64_t)__src);
    sub_24F77B950(v22, __src);
    swift_bridgeObjectRetain();
    return sub_24F76F86C(__dst);
  }
}

uint64_t sub_24F816B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, void *a4@<X8>)
{
  memcpy(__dst, a3, 0xA3uLL);
  sub_24F774F3C(v26);
  sub_24F76F710((uint64_t)__dst, (uint64_t)v27);
  if (sub_24F76F978((uint64_t)v27) == 16)
  {
    sub_24F772974();
    sub_24F81CFA4(v8, *(uint64_t *)v18, *(uint64_t *)&v18[8], *(uint64_t *)&v18[16], *(uint64_t *)&v18[24], *(uint64_t *)&v18[32], *(uint64_t *)&v18[40], *(uint64_t *)&v18[48], *(uint64_t *)&v18[56], *(uint64_t *)&v18[64], *(uint64_t *)&v18[72], *(uint64_t *)&v18[80], *(uint64_t *)&v18[88], *(uint64_t *)&v18[96], *(uint64_t *)&v18[104], *(uint64_t *)&v18[112], *(uint64_t *)&v18[120], *(uint64_t *)&v18[128], *(uint64_t *)&v18[136],
      *(uint64_t *)&v18[144],
      *(uint64_t *)&v18[152],
      *(uint64_t *)&v18[160],
      *(uint64_t *)v19,
      *(uint64_t *)&v19[8],
      *(uint64_t *)&v19[16],
      *(uint64_t *)&v19[24],
      *(uint64_t *)&v19[32],
      *(uint64_t *)&v19[40],
      *(uint64_t *)&v19[48],
      *(uint64_t *)&v19[56],
      *(uint64_t *)&v19[64],
      *(uint64_t *)&v19[72],
      *(uint64_t *)&v19[80],
      *(uint64_t *)&v19[88],
      *(uint64_t *)&v19[96],
      *(uint64_t *)&v19[104],
      *(uint64_t *)&v19[112],
      *(uint64_t *)&v19[120],
      *(uint64_t *)&v19[128],
      *(uint64_t *)&v19[136],
      *(uint64_t *)&v19[144],
      *(uint64_t *)&v19[152],
      *(uint64_t *)&v19[160],
      v20[0].n128_i8[0]);
    uint64_t v10 = v21;
    uint64_t v9 = v22;
    memcpy(__src, v4, 0xA3uLL);
    memcpy(v19, v26, 0xA3uLL);
    sub_24F7A44D8((uint64_t)v20);
    sub_24F816B28(v24, a1, a2, __src, v19);
    memcpy(__src, v24, 0xA3uLL);
    *(void *)char v19 = v10;
    *(void *)&v19[8] = v9;
    sub_24F8168DC(__src, (uint64_t)v19, a4);
    sub_24F76F86C(v20);
    char v11 = (__n128 *)v24;
LABEL_5:
    sub_24F76F86C(v11);
    return swift_bridgeObjectRelease();
  }
  sub_24F76F710((uint64_t)v26, (uint64_t)v24);
  if (sub_24F76F978((uint64_t)v24) == 16)
  {
    uint64_t v12 = (uint64_t *)sub_24F76F774((uint64_t)v24);
    sub_24F81CFA4(*v12, *(uint64_t *)v18, *(uint64_t *)&v18[8], *(uint64_t *)&v18[16], *(uint64_t *)&v18[24], *(uint64_t *)&v18[32], *(uint64_t *)&v18[40], *(uint64_t *)&v18[48], *(uint64_t *)&v18[56], *(uint64_t *)&v18[64], *(uint64_t *)&v18[72], *(uint64_t *)&v18[80], *(uint64_t *)&v18[88], *(uint64_t *)&v18[96], *(uint64_t *)&v18[104], *(uint64_t *)&v18[112], *(uint64_t *)&v18[120], *(uint64_t *)&v18[128], *(uint64_t *)&v18[136],
      *(uint64_t *)&v18[144],
      *(uint64_t *)&v18[152],
      *(uint64_t *)&v18[160],
      *(uint64_t *)v19,
      *(uint64_t *)&v19[8],
      *(uint64_t *)&v19[16],
      *(uint64_t *)&v19[24],
      *(uint64_t *)&v19[32],
      *(uint64_t *)&v19[40],
      *(uint64_t *)&v19[48],
      *(uint64_t *)&v19[56],
      *(uint64_t *)&v19[64],
      *(uint64_t *)&v19[72],
      *(uint64_t *)&v19[80],
      *(uint64_t *)&v19[88],
      *(uint64_t *)&v19[96],
      *(uint64_t *)&v19[104],
      *(uint64_t *)&v19[112],
      *(uint64_t *)&v19[120],
      *(uint64_t *)&v19[128],
      *(uint64_t *)&v19[136],
      *(uint64_t *)&v19[144],
      *(uint64_t *)&v19[152],
      *(uint64_t *)&v19[160],
      v20[0].n128_i8[0]);
    uint64_t v14 = v21;
    uint64_t v13 = v22;
    sub_24F81D0B8(v19);
    memcpy(v18, v4, 0xA3uLL);
    sub_24F7A44D8((uint64_t)v20);
    sub_24F816B28(__src, a1, a2, v19, v18);
    memcpy(v19, __src, 0xA3uLL);
    *(void *)uint64_t v18 = v14;
    *(void *)&v18[8] = v13;
    sub_24F8168DC(v19, (uint64_t)v18, a4);
    sub_24F76F86C(v20);
    char v11 = (__n128 *)__src;
    goto LABEL_5;
  }
  char v16 = (void *)swift_allocObject();
  uint64_t v16[2] = a1;
  v16[3] = a2;
  sub_24F81D0B8(v16 + 4);
  memcpy(v16 + 25, v26, 0xA3uLL);
  __src[0] = v16;
  sub_24F81C7CC((uint64_t)__src);
  uint64_t v17 = sub_24F76F710((uint64_t)__src, (uint64_t)v20);
  sub_24F77B950(v17, v20);
  swift_bridgeObjectRetain();
  sub_24F76F86C(__dst);
  return sub_24F76F86C(v26);
}

void *sub_24F816D90@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v3 = a2;
  uint64_t v4 = a3;
  uint64_t v265 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(uint64_t *)(a1 + 16);
  long long v249 = *(_OWORD *)a1;
  unint64_t v6 = *(void *)(a1 + 24);
  uint64_t v248 = *(unsigned __int8 *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a1 + 33);
  HIDWORD(v240) = *(unsigned __int8 *)(a1 + 34);
  if (v7 != 1)
  {
    a1 = swift_bridgeObjectRetain();
    uint64_t v13 = (void *)v3;
    goto LABEL_168;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    HIDWORD(v234) = 1;
    uint64_t v236 = (uint64_t)a3;
    uint64_t v238 = v6 >> 62;
    uint64_t v218 = HIDWORD(v5);
    BOOL v9 = __OFSUB__(HIDWORD(v5), v5);
    HIDWORD(v232) = v9;
    uint64_t v228 = HIDWORD(v5) - (int)v5;
    uint64_t v230 = BYTE6(v6);
    uint64_t v226 = v6 & 0x3FFFFFFFFFFFFFFFLL;
    double v10 = *(double *)(a1 + 16);
    double v11 = trunc(*(double *)&v5);
    uint64_t v220 = (int)v5;
    uint64_t v222 = (uint64_t)*(double *)&v5;
    uint64_t v245 = *(void *)&v10;
    uint64_t v216 = v5 >> 32;
    uint64_t v214 = (v5 >> 32) - (int)v5;
    uint64_t v12 = swift_bridgeObjectRetain_n();
    uint64_t v224 = 0;
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    uint64_t v14 = v8 - 1;
    uint64_t v15 = 32;
    uint64_t v247 = v3;
    while (1)
    {
      sub_24F7736D0(v12, (const void *)(v3 + v15));
      sub_24F76F710((uint64_t)v263, (uint64_t)__src);
      if (sub_24F76F978((uint64_t)__src) != 9) {
        break;
      }
      uint64_t v16 = sub_24F76F774((uint64_t)__src);
      uint64_t v22 = *(void *)v16;
      uint64_t v23 = *(void *)(v16 + 8);
      uint64_t v24 = *(uint64_t *)(v16 + 16);
      unint64_t v3 = *(void *)(v16 + 24);
      int v25 = *(unsigned __int8 *)(v16 + 32);
      int v26 = *(unsigned __int8 *)(v16 + 33);
      int v27 = *(unsigned __int8 *)(v16 + 34);
      uint64_t v28 = *(void *)(v16 + 40);
      if ((void)v249 != *(void *)v16 || *((void *)&v249 + 1) != v23)
      {
        LODWORD(v242) = *(unsigned __int8 *)(v16 + 32);
        uint64_t v30 = *(void *)(v16 + 40);
        uint64_t v31 = v13;
        int v32 = *(unsigned __int8 *)(v16 + 34);
        uint64_t v33 = v15;
        uint64_t v34 = v14;
        uint64_t v35 = *(void *)(v16 + 16);
        unint64_t v36 = *(void *)(v16 + 24);
        int v37 = *(unsigned __int8 *)(v16 + 33);
        unint64_t v38 = v6;
        uint64_t v39 = *(void *)(v16 + 8);
        uint64_t v16 = sub_24F8CFD00();
        uint64_t v23 = v39;
        unint64_t v6 = v38;
        int v26 = v37;
        unint64_t v3 = v36;
        uint64_t v24 = v35;
        uint64_t v14 = v34;
        uint64_t v15 = v33;
        int v27 = v32;
        uint64_t v13 = v31;
        uint64_t v28 = v30;
        int v25 = v242;
        if ((v16 & 1) == 0)
        {
          sub_24F76F86C((__n128 *)v263);
          sub_24F776124();
LABEL_45:
          swift_bridgeObjectRelease();
          sub_24F781F10(v24, v3, v25);
LABEL_46:
          swift_bridgeObjectRelease();
          unint64_t v3 = v247;
          goto LABEL_151;
        }
      }
      switch(v248)
      {
        case 1:
          if (v25)
          {
            if (v25 != 1) {
              goto LABEL_44;
            }
            sub_24F76F86C((__n128 *)v263);
            sub_24F77C798();
            sub_24F781F10(v245, v6, 1);
            sub_24F81CD3C(v24, v3, 1);
            sub_24F781F10(v24, v3, 1);
            BOOL v64 = v10 == *(double *)&v24;
            goto LABEL_48;
          }
          sub_24F76F86C((__n128 *)v263);
          sub_24F77C798();
          sub_24F781F10(v245, v6, 1);
          sub_24F81CD3C(v24, v3, 0);
          sub_24F781F10(v24, v3, 0);
          if (v10 > -9.22337204e18 && v10 < 9.22337204e18 && v11 == v10)
          {
            BOOL v64 = v24 == v222;
            goto LABEL_48;
          }
          goto LABEL_46;
        case 2:
          if (v25 != 2)
          {
            swift_bridgeObjectRetain();
            goto LABEL_44;
          }
          LODWORD(v242) = v26;
          if (v245 == v24 && v6 == v3)
          {
            sub_24F76F86C((__n128 *)v263);
            sub_24F77C798();
            sub_24F7856EC(v245, v6);
            sub_24F81CD3C(v245, v6, 2);
            sub_24F781F10(v245, v6, 2);
            unint64_t v3 = v247;
            goto LABEL_148;
          }
          LODWORD(v234) = sub_24F8CFD00();
          sub_24F76F86C((__n128 *)v263);
          sub_24F76F86C((__n128 *)v263);
          sub_24F7856EC(v24, v3);
          sub_24F81CD3C(v24, v3, 2);
          sub_24F781F10(v24, v3, 2);
          unint64_t v3 = v247;
          if (v234) {
            goto LABEL_148;
          }
          goto LABEL_150;
        case 3:
          if (v25 != 3)
          {
            uint64_t v65 = sub_24F81CF20(v16, v17, v22, v23, v18, v19, v20, v21, (uint64_t)v177, __n, v183, v185, v187, v189, v191, v193, v195, v197, v199,
                    v201,
                    v203,
                    v205,
                    v207,
                    v210,
                    v212,
                    v214,
                    v216,
                    v218,
                    v220,
                    v222,
                    v224,
                    v226,
                    v228,
                    v230,
                    v232,
                    v234,
                    v236,
                    v238,
                    v240,
                    v242,
                    v245);
            sub_24F78419C(v65, v66);
LABEL_44:
            sub_24F76F86C((__n128 *)v263);
            sub_24F776124();
            uint64_t v67 = sub_24F781F34(v24, v3, v25);
            uint64_t v75 = sub_24F81CF20(v67, v68, v69, v70, v71, v72, v73, v74, (uint64_t)v177, __n, v183, v185, v187, v189, v191, v193, v195, v197, v199,
                    v201,
                    v203,
                    v205,
                    v207,
                    v210,
                    v212,
                    v214,
                    v216,
                    v218,
                    v220,
                    v222,
                    v224,
                    v226,
                    v228,
                    v230,
                    v232,
                    v234,
                    v236,
                    v238,
                    v240,
                    v242,
                    v245);
            sub_24F781F10(v75, v76, v248);
            sub_24F781F10(v24, v3, v25);
            goto LABEL_45;
          }
          LODWORD(v234) = v27;
          uint64_t v62 = v238;
          uint64_t v63 = 0;
          switch((int)v238)
          {
            case 1:
              if ((v232 & 0x100000000) != 0) {
                goto LABEL_178;
              }
              sub_24F781F34(v245, v6, 3);
              sub_24F781F34(v245, v6, 3);
              uint64_t v63 = v228;
              break;
            case 2:
              uint64_t v242 = v238;
              uint64_t v78 = *(void *)(v245 + 16);
              uint64_t v77 = *(void *)(v245 + 24);
              uint64_t v63 = v77 - v78;
              if (__OFSUB__(v77, v78)) {
                goto LABEL_179;
              }
              sub_24F781F34(v245, v6, 3);
              sub_24F781F34(v245, v6, 3);
              uint64_t v62 = v238;
              break;
            case 3:
              break;
            default:
              uint64_t v63 = v230;
              break;
          }
          unint64_t v79 = v3 >> 62;
          switch(v3 >> 62)
          {
            case 1uLL:
              LODWORD(v80) = HIDWORD(v24) - v24;
              if (__OFSUB__(HIDWORD(v24), v24)) {
                goto LABEL_180;
              }
              uint64_t v80 = (int)v80;
LABEL_64:
              if (v63 != v80)
              {
LABEL_76:
                sub_24F76F86C((__n128 *)v263);
                sub_24F781F34(v24, v3, 3);
                uint64_t v88 = sub_24F77C798();
                sub_24F782B3C(v88, v89, v90, v91, v92, v93, v94, v95, (uint64_t)v177, __n, v183, v185, v187, v189, v191, v193, v195, v197, v199,
                  v201,
                  v203,
                  v205,
                  v207,
                  v210,
                  v212,
                  v214,
                  v216,
                  v218,
                  v220,
                  v222,
                  v224,
                  v226,
                  v228,
                  v230,
                  v232,
                  v234,
                  v236,
                  v238,
                  v240,
                  v242,
                  v245);
                sub_24F7734EC();
LABEL_150:
                swift_bridgeObjectRelease();
                goto LABEL_151;
              }
              if (v63 >= 1)
              {
                uint64_t v84 = v24 >> 32;
                switch(v62)
                {
                  case 1:
                    sub_24F780E40();
                    size_t __na = v104;
                    if (v216 < v220) {
                      goto LABEL_182;
                    }
                    sub_24F78557C();
                    sub_24F76F86C((__n128 *)v263);
                    sub_24F781F34(v24, v3, 3);
                    sub_24F77C798();
                    uint64_t v105 = sub_24F78557C();
                    uint64_t v113 = sub_24F81CF20(v105, v106, v107, v108, v109, v110, v111, v112, (uint64_t)v177, __na, (unint64_t)v24 >> 8, (unint64_t)v24 >> 16, v187, v189, v191, v193, v195, v197, v199,
                             v201,
                             v203,
                             v205,
                             v207,
                             v210,
                             v212,
                             v214,
                             v216,
                             v218,
                             v220,
                             v222,
                             v224,
                             v226,
                             v228,
                             v230,
                             v232,
                             v234,
                             v236,
                             v238,
                             v240,
                             v242,
                             v245);
                    sub_24F781F34(v113, v114, 3);
                    uint64_t v115 = (char *)sub_24F8CE6A0();
                    if (!v115) {
                      goto LABEL_82;
                    }
                    uint64_t v116 = sub_24F8CE6C0();
                    if (__OFSUB__(v221, v116)) {
                      goto LABEL_185;
                    }
                    v115 += v221 - v116;
LABEL_82:
                    uint64_t v117 = sub_24F8CE6B0();
                    uint64_t v118 = v215;
                    if (v117 < v215) {
                      uint64_t v118 = v117;
                    }
                    char v119 = &v115[v118];
                    if (v115) {
                      uint64_t v120 = (uint64_t)v119;
                    }
                    else {
                      uint64_t v120 = 0;
                    }
                    uint64_t v121 = v115;
                    if (v208)
                    {
                      uint64_t v244 = v120;
                      if (v208 == 1)
                      {
                        if ((uint64_t)v211 < (int)v24) {
                          goto LABEL_190;
                        }
                        uint64_t v209 = v3 & 0x3FFFFFFFFFFFFFFFLL;
                        swift_retain();
                        uint64_t v122 = v115;
                        uint64_t v115 = (char *)v225;
                        char v123 = sub_24F7ECD0C(v213, (uint64_t)v211, v3 & 0x3FFFFFFFFFFFFFFFLL, v122);
                        uint64_t v124 = sub_24F771044();
                      }
                      else
                      {
                        uint64_t v213 = *(void *)(v24 + 16);
                        uint64_t v209 = v3 & 0x3FFFFFFFFFFFFFFFLL;
                        uint64_t v211 = *(void **)(v24 + 24);
                        swift_retain();
                        swift_retain();
                        uint64_t v115 = (char *)v225;
                        char v123 = sub_24F7ECD0C(v213, (uint64_t)v211, v3 & 0x3FFFFFFFFFFFFFFFLL, v121);
                        swift_release();
                        uint64_t v124 = swift_release();
                      }
                      sub_24F772E00(v124, v125, v126, v127, v128, v129, v130, v131, v178, __nb, v184, v186, v188, v190, v192, v194, v196, v198, v200,
                        v202,
                        v204,
                        v206,
                        v209,
                        (uint64_t)v211,
                        v213,
                        v215,
                        v217,
                        v219,
                        v221,
                        v223,
                        v225,
                        v227,
                        v229,
                        v231,
                        v233,
                        v235,
                        v237,
                        v239,
                        v241,
                        v244,
                        v246);
                      goto LABEL_132;
                    }
                    sub_24F77E078();
                    if (!v115) {
                      goto LABEL_197;
                    }
                    uint64_t v155 = memcmp(v115, &__s1, __nb);
                    int v156 = v155;
                    sub_24F772E00(v155, v157, v158, v159, v160, v161, v162, v163, v178, __nb, v184, v186, v188, v190, v192, v194, v196, v198, v200,
                      v202,
                      v204,
                      v206,
                      v208,
                      (uint64_t)v211,
                      v213,
                      v215,
                      v217,
                      v219,
                      v221,
                      v223,
                      v225,
                      v227,
                      v229,
                      v231,
                      v233,
                      v235,
                      v237,
                      v239,
                      v241,
                      v243,
                      v246);
                    sub_24F771044();
                    char v123 = v156 == 0;
                    goto LABEL_133;
                  case 2:
                    uint64_t v183 = (unint64_t)v24 >> 8;
                    uint64_t v185 = (unint64_t)v24 >> 16;
                    sub_24F780E40();
                    unint64_t v179 = v6;
                    size_t __n = v132;
                    LODWORD(v242) = v26;
                    uint64_t v133 = *(void *)(v245 + 16);
                    uint64_t v134 = *(void *)(v245 + 24);
                    sub_24F78557C();
                    sub_24F76F86C((__n128 *)v263);
                    sub_24F781F34(v24, v3, 3);
                    sub_24F77C798();
                    sub_24F78557C();
                    swift_retain();
                    swift_retain();
                    uint64_t v135 = sub_24F8CE6A0();
                    if (v135)
                    {
                      uint64_t v136 = v135;
                      uint64_t v137 = sub_24F8CE6C0();
                      if (__OFSUB__(v133, v137)) {
                        goto LABEL_184;
                      }
                      long long v138 = (char *)(v136 + v133 - v137);
                    }
                    else
                    {
                      long long v138 = 0;
                    }
                    unint64_t v6 = v179;
                    uint64_t v177 = v138;
                    BOOL v83 = __OFSUB__(v134, v133);
                    uint64_t v142 = v134 - v133;
                    int v26 = v242;
                    if (v83) {
                      goto LABEL_183;
                    }
                    uint64_t v143 = sub_24F8CE6B0();
                    if (v143 >= v142) {
                      uint64_t v144 = v142;
                    }
                    else {
                      uint64_t v144 = v143;
                    }
                    uint64_t v145 = &v177[v144];
                    if (v177) {
                      uint64_t v146 = (uint64_t)v145;
                    }
                    else {
                      uint64_t v146 = 0;
                    }
                    if (v207)
                    {
                      if (v207 == 1)
                      {
                        if (v210 < (int)v24) {
                          goto LABEL_191;
                        }
                        uint64_t v207 = v3 & 0x3FFFFFFFFFFFFFFFLL;
                        swift_retain();
                        char v123 = sub_24F7ECD0C(v212, v210, v3 & 0x3FFFFFFFFFFFFFFFLL, v177);
                        sub_24F771044();
                      }
                      else
                      {
                        uint64_t v210 = *(void *)(v24 + 16);
                        uint64_t v212 = v146;
                        uint64_t v205 = v3 & 0x3FFFFFFFFFFFFFFFLL;
                        uint64_t v207 = *(void *)(v24 + 24);
                        swift_retain();
                        swift_retain();
                        char v123 = sub_24F7ECD0C(v210, v207, v3 & 0x3FFFFFFFFFFFFFFFLL, v177);
                        swift_release();
                        swift_release();
                      }
                      sub_24F781F10(v24, v3, 3);
                      swift_release();
                      uint64_t v115 = (char *)v245;
                      swift_release();
                    }
                    else
                    {
                      sub_24F77E078();
                      if (!v177) {
                        goto LABEL_198;
                      }
                      int v164 = memcmp(v177, &__s1, __n);
                      sub_24F781F10(v24, v3, 3);
                      swift_release();
                      uint64_t v115 = (char *)v245;
                      swift_release();
                      char v123 = v164 == 0;
                    }
LABEL_132:
                    sub_24F771044();
LABEL_133:
                    sub_24F781F10((uint64_t)v115, v6, 3);
                    sub_24F781F10((uint64_t)v115, v6, 3);
                    sub_24F771044();
                    goto LABEL_147;
                  case 3:
                    *(void *)((char *)&__s1 + 6) = 0;
                    *(void *)&long long __s1 = 0;
                    if (!v79) {
                      goto LABEL_105;
                    }
                    if (v79 == 1)
                    {
                      uint64_t v210 = v24 >> 32;
                      uint64_t v212 = (int)v24;
                      if (v84 < (int)v24) {
                        goto LABEL_187;
                      }
                      sub_24F76F86C((__n128 *)v263);
                      sub_24F781F34(v24, v3, 3);
                      sub_24F776124();
                      sub_24F781F34(v24, v3, 3);
                      uint64_t v85 = (char *)sub_24F8CE6A0();
                      if (v85)
                      {
                        uint64_t v139 = sub_24F8CE6C0();
                        if (__OFSUB__((int)v24, v139)) {
                          goto LABEL_195;
                        }
                        v85 += (int)v24 - v139;
                      }
                      uint64_t v87 = sub_24F8CE6B0();
                      if (!v85) {
                        goto LABEL_196;
                      }
LABEL_101:
                      if (v87 >= v210 - v212) {
                        size_t v140 = v210 - v212;
                      }
                      else {
                        size_t v140 = v87;
                      }
                      int v141 = memcmp(&__s1, v85, v140);
                    }
                    else
                    {
                      sub_24F81CE54();
                      sub_24F76F86C((__n128 *)v263);
                      sub_24F781F34(v24, v3, 3);
                      sub_24F776124();
                      sub_24F781F34(v24, v3, 3);
                      swift_retain();
                      swift_retain();
                      uint64_t v151 = sub_24F8CE6A0();
                      if (v151)
                      {
                        uint64_t v152 = v151;
                        uint64_t v153 = sub_24F8CE6C0();
                        uint64_t v154 = v242;
                        if (__OFSUB__(v242, v153)) {
                          goto LABEL_193;
                        }
                        uint64_t v210 = v152 + v242 - v153;
                      }
                      else
                      {
                        uint64_t v210 = 0;
                        uint64_t v154 = v242;
                      }
                      int64_t v165 = v212 - v154;
                      if (__OFSUB__(v212, v154)) {
                        goto LABEL_189;
                      }
                      uint64_t v166 = sub_24F8CE6B0();
                      uint64_t v167 = (const void *)v210;
                      if (!v210) {
                        goto LABEL_200;
                      }
LABEL_141:
                      if (v166 >= v165) {
                        size_t v168 = v165;
                      }
                      else {
                        size_t v168 = v166;
                      }
                      int v141 = memcmp(&__s1, v167, v168);
                      swift_release();
                      swift_release();
                    }
                    sub_24F771044();
LABEL_146:
                    sub_24F781F10(v245, v6, 3);
                    sub_24F781F10(v245, v6, 3);
                    sub_24F771044();
                    char v123 = v141 == 0;
LABEL_147:
                    swift_bridgeObjectRelease();
                    sub_24F7734EC();
                    int v27 = v234;
                    if (v123) {
                      goto LABEL_148;
                    }
                    goto LABEL_150;
                  default:
                    LODWORD(__s1) = v245;
                    BYTE4(__s1) = v218;
                    *(_WORD *)((char *)&__s1 + 5) = *(_WORD *)((char *)&v245 + 5);
                    BYTE7(__s1) = HIBYTE(v245);
                    WORD4(__s1) = v6;
                    BYTE10(__s1) = BYTE2(v6);
                    BYTE11(__s1) = BYTE3(v6);
                    BYTE12(__s1) = BYTE4(v6);
                    BYTE13(__s1) = BYTE5(v6);
                    if (!v79)
                    {
LABEL_105:
                      uint64_t __s2 = v24;
                      __int16 v251 = v3;
                      char v252 = BYTE2(v3);
                      char v253 = BYTE3(v3);
                      char v254 = BYTE4(v3);
                      char v255 = BYTE5(v3);
                      sub_24F76F86C((__n128 *)v263);
                      sub_24F781F34(v24, v3, 3);
                      sub_24F77C798();
                      int v141 = memcmp(&__s1, &__s2, BYTE6(v3));
                      goto LABEL_146;
                    }
                    if (v79 == 1)
                    {
                      uint64_t v210 = v24 >> 32;
                      uint64_t v212 = (int)v24;
                      if (v84 < (int)v24) {
                        goto LABEL_186;
                      }
                      sub_24F76F86C((__n128 *)v263);
                      sub_24F781F34(v24, v3, 3);
                      sub_24F776124();
                      sub_24F781F34(v24, v3, 3);
                      uint64_t v85 = (char *)sub_24F8CE6A0();
                      if (v85)
                      {
                        uint64_t v86 = sub_24F8CE6C0();
                        if (__OFSUB__((int)v24, v86)) {
                          goto LABEL_194;
                        }
                        v85 += (int)v24 - v86;
                      }
                      uint64_t v87 = sub_24F8CE6B0();
                      if (!v85)
                      {
                        __break(1u);
LABEL_196:
                        __break(1u);
LABEL_197:
                        __break(1u);
LABEL_198:
                        __break(1u);
LABEL_199:
                        __break(1u);
LABEL_200:
                        __break(1u);
                        JUMPOUT(0x24F81807CLL);
                      }
                      goto LABEL_101;
                    }
                    sub_24F81CE54();
                    sub_24F76F86C((__n128 *)v263);
                    sub_24F781F34(v24, v3, 3);
                    sub_24F776124();
                    sub_24F781F34(v24, v3, 3);
                    swift_retain();
                    swift_retain();
                    uint64_t v147 = sub_24F8CE6A0();
                    if (v147)
                    {
                      uint64_t v148 = v147;
                      uint64_t v149 = sub_24F8CE6C0();
                      uint64_t v150 = v242;
                      if (__OFSUB__(v242, v149)) {
                        goto LABEL_192;
                      }
                      uint64_t v210 = v148 + v242 - v149;
                    }
                    else
                    {
                      uint64_t v210 = 0;
                      uint64_t v150 = v242;
                    }
                    int64_t v165 = v212 - v150;
                    if (__OFSUB__(v212, v150)) {
                      goto LABEL_188;
                    }
                    uint64_t v166 = sub_24F8CE6B0();
                    uint64_t v167 = (const void *)v210;
                    if (!v210) {
                      goto LABEL_199;
                    }
                    goto LABEL_141;
                }
              }
LABEL_77:
              sub_24F76F86C((__n128 *)v263);
              sub_24F781F34(v24, v3, 3);
              uint64_t v96 = sub_24F77C798();
              sub_24F782B3C(v96, v97, v98, v99, v100, v101, v102, v103, (uint64_t)v177, __n, v183, v185, v187, v189, v191, v193, v195, v197, v199,
                v201,
                v203,
                v205,
                v207,
                v210,
                v212,
                v214,
                v216,
                v218,
                v220,
                v222,
                v224,
                v226,
                v228,
                v230,
                v232,
                v234,
                v236,
                v238,
                v240,
                v242,
                v245);
              sub_24F7734EC();
              int v27 = v234;
LABEL_148:
              if (!v26 || HIDWORD(v240) != v27) {
                goto LABEL_150;
              }
              sub_24F76F86C((__n128 *)v263);
              uint64_t v169 = *(void *)(v28 + 16);
              break;
            case 2uLL:
              uint64_t v82 = *(void *)(v24 + 16);
              uint64_t v81 = *(void *)(v24 + 24);
              BOOL v83 = __OFSUB__(v81, v82);
              uint64_t v80 = v81 - v82;
              if (!v83) {
                goto LABEL_64;
              }
              goto LABEL_181;
            case 3uLL:
              if (v63) {
                goto LABEL_76;
              }
              goto LABEL_77;
            default:
              uint64_t v80 = BYTE6(v3);
              goto LABEL_64;
          }
          break;
        case 4:
          if (v25 != 4 || (v3 | v24) != 0) {
            goto LABEL_44;
          }
          sub_24F76F86C((__n128 *)v263);
          uint64_t v51 = sub_24F77C798();
          uint64_t v59 = sub_24F81CF20(v51, v52, v53, v54, v55, v56, v57, v58, (uint64_t)v177, __n, v183, v185, v187, v189, v191, v193, v195, v197, v199,
                  v201,
                  v203,
                  v205,
                  v207,
                  v210,
                  v212,
                  v214,
                  v216,
                  v218,
                  v220,
                  v222,
                  v224,
                  v226,
                  v228,
                  v230,
                  v232,
                  v234,
                  v236,
                  v238,
                  v240,
                  v242,
                  v245);
          sub_24F781F10(v59, v60, 4);
          sub_24F81CD14();
          swift_bridgeObjectRelease();
          sub_24F81CD14();
          unint64_t v3 = v247;
          goto LABEL_148;
        default:
          if (v25)
          {
            if (v25 != 1) {
              goto LABEL_44;
            }
            sub_24F76F86C((__n128 *)v263);
            uint64_t v40 = sub_24F77C798();
            uint64_t v48 = sub_24F81CF20(v40, v41, v42, v43, v44, v45, v46, v47, (uint64_t)v177, __n, v183, v185, v187, v189, v191, v193, v195, v197, v199,
                    v201,
                    v203,
                    v205,
                    v207,
                    v210,
                    v212,
                    v214,
                    v216,
                    v218,
                    v220,
                    v222,
                    v224,
                    v226,
                    v228,
                    v230,
                    v232,
                    v234,
                    v236,
                    v238,
                    v240,
                    v242,
                    v245);
            sub_24F781F10(v48, v49, 0);
            sub_24F81CD3C(v24, v3, 1);
            sub_24F781F10(v24, v3, 1);
            if (*(double *)&v24 <= -9.22337204e18) {
              goto LABEL_46;
            }
            unint64_t v3 = v247;
            if (*(double *)&v24 < 9.22337204e18
              && trunc(*(double *)&v24) == *(double *)&v24
              && v245 == (uint64_t)*(double *)&v24)
            {
              goto LABEL_148;
            }
          }
          else
          {
            sub_24F76F86C((__n128 *)v263);
            sub_24F77C798();
            sub_24F781F10(v245, v6, 0);
            sub_24F81CD3C(v24, v3, 0);
            sub_24F781F10(v24, v3, 0);
            BOOL v64 = v245 == v24;
LABEL_48:
            unint64_t v3 = v247;
            if (v64) {
              goto LABEL_148;
            }
          }
          goto LABEL_150;
      }
LABEL_152:
      uint64_t v170 = v13[2];
      if (__OFADD__(v170, v169))
      {
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v170 + v169 > v13[3] >> 1)
      {
        sub_24F7878C8();
        uint64_t v13 = v171;
      }
      if (*(void *)(v28 + 16))
      {
        if ((v13[3] >> 1) - v13[2] < v169) {
          goto LABEL_176;
        }
        swift_arrayInitWithCopy();
        if (v169)
        {
          uint64_t v172 = v13[2];
          BOOL v83 = __OFADD__(v172, v169);
          uint64_t v173 = v172 + v169;
          if (v83) {
            goto LABEL_177;
          }
          uint64_t v13[2] = v173;
        }
      }
      else if (v169)
      {
        goto LABEL_175;
      }
      uint64_t v12 = swift_bridgeObjectRelease();
      if (!v14)
      {
        a1 = swift_bridgeObjectRelease_n();
        uint64_t v4 = (void *)v236;
        uint64_t v5 = v245;
        LOBYTE(v7) = BYTE4(v234);
        goto LABEL_168;
      }
      --v14;
      v15 += 168;
    }
    sub_24F76F86C((__n128 *)v263);
LABEL_151:
    sub_24F781274(&qword_26B1F7358);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_24F8DDBF0;
    sub_24F81CCFC((void *)(v28 + 32));
    uint64_t v169 = 1;
    goto LABEL_152;
  }
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
LABEL_168:
  uint64_t v174 = v13[2];
  if (v174)
  {
    sub_24F775C7C(a1, v13 + 4);
    if (v174 == 1)
    {
      sub_24F76F86C(__src);
      swift_bridgeObjectRelease();
      return memcpy(v4, __src, 0xA3uLL);
    }
    long long __s1 = v249;
    uint64_t v257 = v5;
    unint64_t v258 = v6;
    char v176 = v248;
    char v259 = v248;
    char v260 = v7;
    char v261 = BYTE4(v240);
    uint64_t v262 = v13;
    sub_24F81C810((uint64_t)&__s1);
    sub_24F76F710((uint64_t)&__s1, (uint64_t)v263);
    memcpy(v4, v263, 0xA3uLL);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)uint64_t v263 = v5;
    *(void *)&v263[8] = v6;
    char v176 = v248;
    v263[16] = v248;
    sub_24F7667B8((uint64_t)v263);
    sub_24F76F710((uint64_t)v263, (uint64_t)__src);
    memcpy(v4, __src, 0xA3uLL);
  }
  return (void *)sub_24F781F34(v5, v6, v176);
}

uint64_t sub_24F8180C0@<X0>(const void *a1@<X0>, void *a2@<X8>)
{
  sub_24F81CEF0((uint64_t)a1, a1);
  sub_24F770944(v21);
  sub_24F76F710((uint64_t)v20, (uint64_t)v22);
  sub_24F76F710((uint64_t)v21, (uint64_t)&v23);
  sub_24F76F710((uint64_t)v21, (uint64_t)v24);
  if (sub_24F76F978((uint64_t)v24) == 2)
  {
    uint64_t v3 = sub_24F76F774((uint64_t)v24);
    uint64_t v4 = *(void *)v3;
    unint64_t v5 = *(void *)(v3 + 8);
    int v6 = *(unsigned __int8 *)(v3 + 16);
    sub_24F76F86C(v21);
    sub_24F76F86C(v21);
    sub_24F76F86C(v20);
    sub_24F781F10(0, 0, 4);
    if (v6 == 4 && !(v5 | v4))
    {
      sub_24F81CD14();
      int v7 = v20;
LABEL_11:
      sub_24F76F710((uint64_t)v7, (uint64_t)v19);
      sub_24F76F86C(v19);
      sub_24F7DA038((uint64_t)v22);
      sub_24F76F710((uint64_t)v19, (uint64_t)__src);
      memcpy(__dst, __src, 0xA3uLL);
      v16[1] = 0;
      v16[0] = 0;
      LOBYTE(v17) = 4;
      sub_24F7667B8((uint64_t)v16);
      sub_24F76F710((uint64_t)v16, (uint64_t)v18);
      sub_24F781520(v13);
      sub_24F815BAC(2, __dst, v13, a2);
      return sub_24F76F86C(v19);
    }
    sub_24F781F10(v4, v5, v6);
  }
  else
  {
    sub_24F76F86C(v21);
    sub_24F76F86C(v20);
  }
  sub_24F76F710((uint64_t)v20, (uint64_t)v18);
  if (sub_24F76F978((uint64_t)v18) == 2)
  {
    uint64_t v8 = sub_24F76F774((uint64_t)v18);
    uint64_t v9 = *(void *)v8;
    unint64_t v10 = *(void *)(v8 + 8);
    int v11 = *(unsigned __int8 *)(v8 + 16);
    sub_24F76F86C(v20);
    sub_24F781F10(0, 0, 4);
    if (v11 == 4 && !(v10 | v9))
    {
      sub_24F81CD14();
      int v7 = v21;
      goto LABEL_11;
    }
    sub_24F781F10(v9, v10, v11);
  }
  sub_24F7DA038((uint64_t)v22);
  sub_24F81CED8(v19);
  sub_24F76B938(v16);
  return sub_24F815BAC(0, v19, v16, a2);
}

uint64_t SQLSpecificExpressible.collating(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  (*(void (**)(__n128 *__return_ptr, uint64_t))(*(void *)(a3 + 8) + 8))(__src, a2);
  memcpy(__dst, __src, 0xA3uLL);
  v8[0] = v5;
  v8[1] = v6;
  sub_24F8168DC(__dst, (uint64_t)v8, a4);
  return sub_24F76F86C(__src);
}

void sub_24F8183E4()
{
  sub_24F76FF94();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_24F76F710(v0, (uint64_t)v50);
  sub_24F76F710((uint64_t)v50, (uint64_t)v51);
  int v8 = sub_24F76F978((uint64_t)v51);
  switch(v8)
  {
    case 9:
      uint64_t v9 = sub_24F76F774((uint64_t)v51);
      if ((v3 & 1) == 0 || !*(unsigned char *)(v9 + 34)) {
        goto LABEL_63;
      }
      uint64_t v10 = *(void *)(v9 + 16);
      unint64_t v11 = *(void *)(v9 + 24);
      char v12 = *(unsigned char *)(v9 + 32);
      uint64_t v13 = *(void *)(*(void *)(v9 + 40) + 16);
      if (v13)
      {
        swift_bridgeObjectRetain();
        sub_24F781F34(v10, v11, v12);
        swift_bridgeObjectRetain();
        uint64_t v14 = v13 - 1;
        uint64_t v15 = (void *)MEMORY[0x263F8EE78];
        for (uint64_t i = 32; ; i += 168)
        {
          sub_24F770944(__src);
          sub_24F770944(__dst);
          sub_24F76F86C(__src);
          if (sub_24F818B40())
          {
            sub_24F76F86C(__src);
            if (!v14) {
              goto LABEL_48;
            }
          }
          else
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v46 = v15;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_24F795698();
              uint64_t v15 = v46;
            }
            unint64_t v18 = v15[2];
            if (v18 >= v15[3] >> 1)
            {
              sub_24F795698();
              uint64_t v15 = v46;
            }
            uint64_t v15[2] = v18 + 1;
            memcpy(&v15[21 * v18 + 4], __src, 0xA3uLL);
            if (!v14)
            {
LABEL_48:
              swift_bridgeObjectRelease();
              goto LABEL_52;
            }
          }
          --v14;
        }
      }
      swift_bridgeObjectRetain();
      sub_24F781F34(v10, v11, v12);
      uint64_t v15 = (void *)MEMORY[0x263F8EE78];
LABEL_52:
      if (v15[2] == 1)
      {
        memcpy(__src, v15 + 4, 0xA3uLL);
        sub_24F76F86C(__src);
        swift_release();
        memcpy(__dst, __src, 0xA3uLL);
        uint64_t v39 = sub_24F81CFD8();
        sub_24F8183E4(v39, v40, v41);
        if (!v1) {
          sub_24F81CD30();
        }
        sub_24F76F86C(__src);
        swift_bridgeObjectRelease();
        sub_24F81CE6C();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_24F81CE6C();
      }
      goto LABEL_63;
    case 10:
    case 11:
    case 13:
    case 14:
    case 15:
    case 18:
      goto LABEL_63;
    case 12:
      sub_24F81D004();
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(void *)(v20 + 24);
      char v23 = *(unsigned char *)(v20 + 32);
      memcpy(__src, (const void *)(v20 + 40), 0xA3uLL);
      if ((v3 & 1) == 0) {
        goto LABEL_63;
      }
      if (v21 != 45 || v22 != 0xE100000000000000)
      {
        if (v23 & 1 | ((sub_24F8CFD00() & 1) == 0)) {
          goto LABEL_63;
        }
LABEL_50:
        memcpy(__dst, __src, 0xA3uLL);
        sub_24F76F86C(__src);
        uint64_t v26 = sub_24F81CFD8();
        goto LABEL_27;
      }
      if ((v23 & 1) == 0) {
        goto LABEL_50;
      }
      goto LABEL_63;
    case 16:
      sub_24F76F774((uint64_t)v51);
      sub_24F770944(__src);
      sub_24F770944(__dst);
      sub_24F76F86C(__src);
      uint64_t v25 = v3 & 1;
      uint64_t v26 = v7;
      goto LABEL_26;
    case 17:
      uint64_t v28 = sub_24F76F774((uint64_t)v51);
      if ((*(unsigned char *)(v28 + 16) & 1) != 0 || (*(unsigned char *)(v28 + 17) & 1) != 0 || (v3 & 1) == 0) {
        goto LABEL_63;
      }
      uint64_t v29 = v7;
      uint64_t v30 = *(void *)(v28 + 24);
      uint64_t v31 = sub_24F8CED10();
      uint64_t v33 = v32;
      sub_24F781274((uint64_t *)&unk_26B1F7C88);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_24F8E0850;
      *(void *)(v34 + 32) = 5784904;
      *(void *)(v34 + 40) = 0xE300000000000000;
      *(void *)(v34 + 48) = 0x45544F5551;
      *(void *)(v34 + 56) = 0xE500000000000000;
      char v35 = sub_24F85FE9C(v31, v33, (void *)v34);
      swift_setDeallocating();
      sub_24F87FF54();
      if ((v35 & 1) != 0 && *(void *)(v30 + 16) == 1)
      {
        swift_bridgeObjectRelease();
        if (!*(void *)(v30 + 16))
        {
          __break(1u);
          goto LABEL_63;
        }
        goto LABEL_62;
      }
      if (v31 == 0x4C4C554E4649 && v33 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v38 = sub_24F8CFD00();
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0) {
          goto LABEL_63;
        }
      }
      if (*(void *)(v30 + 16) == 2)
      {
        memcpy(__src, (const void *)(v30 + 200), 0xA3uLL);
        if (sub_24F818B40())
        {
          if (!*(void *)(v30 + 16))
          {
            __break(1u);
            JUMPOUT(0x24F818B14);
          }
LABEL_62:
          sub_24F770944(__src);
          sub_24F770944(__dst);
          sub_24F76F86C(__src);
          uint64_t v25 = v3 & 1;
          uint64_t v26 = v29;
LABEL_26:
          uint64_t v27 = v5;
LABEL_27:
          sub_24F8183E4(v26, v27, v25);
          if (!v1) {
            sub_24F81CD30();
          }
          sub_24F76F86C(__src);
        }
      }
LABEL_63:
      sub_24F77BC10();
      return;
    case 19:
      sub_24F81D020();
      type metadata accessor for TableAlias();
      sub_24F76F710((uint64_t)v50, (uint64_t)__src);
      sub_24F76F774((uint64_t)__src);
      swift_retain();
      if (static TableAlias.== infix(_:_:)())
      {
        uint64_t v36 = sub_24F829718();
        Database.primaryKey(_:)(__dst, v36);
        if (v1)
        {
          sub_24F76F86C(v50);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          unsigned __int8 v42 = __dst[2];
          uint64_t v46 = (void *)__dst[0];
          uint64_t v47 = __dst[1];
          char v48 = __dst[2];
          sub_24F7F86CC();
          sub_24F81CD30();
          sub_24F76F86C(v50);
          uint64_t v43 = sub_24F774654();
          sub_24F790830(v43, v44, v42);
        }
      }
      else
      {
        sub_24F76F86C(v50);
      }
      goto LABEL_63;
    default:
      if (v8 == 1)
      {
        sub_24F76F774((uint64_t)v51);
        type metadata accessor for TableAlias();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_24F774654();
        BOOL v19 = static TableAlias.== infix(_:_:)();
        swift_release();
        if (!v19) {
          swift_bridgeObjectRelease();
        }
      }
      goto LABEL_63;
  }
}

uint64_t sub_24F818B40()
{
  sub_24F76F710(v0, (uint64_t)v63);
  sub_24F76F710((uint64_t)v63, (uint64_t)v64);
  char v1 = 0;
  switch(sub_24F76F978((uint64_t)v64))
  {
    case 2u:
      sub_24F76F774((uint64_t)v64);
      goto LABEL_66;
    case 3u:
      uint64_t v4 = sub_24F76F774((uint64_t)v64);
      goto LABEL_10;
    case 6u:
      uint64_t v5 = *(void *)sub_24F76F774((uint64_t)v64);
      uint64_t v6 = memcpy(__dst, (const void *)(v5 + 16), 0xA3uLL);
      uint64_t v7 = sub_24F7736D0((uint64_t)v6, (const void *)(v5 + 184));
      sub_24F775C7C((uint64_t)v7, (const void *)(v5 + 352));
      memcpy(v58, __dst, 0xA3uLL);
      sub_24F76F86C(__dst);
      sub_24F76F86C(v61);
      uint64_t v8 = sub_24F76F86C(v62);
      if ((sub_24F818B40(v8) & 1) == 0 || (uint64_t v9 = sub_24F81CCFC(v58), (sub_24F818B40(v9) & 1) == 0))
      {
        sub_24F76F86C(__dst);
        sub_24F76F86C(v61);
LABEL_49:
        sub_24F76F86C(v62);
        goto LABEL_62;
      }
      sub_24F781520(v58);
      uint64_t v10 = sub_24F76F86C(v62);
      char v1 = sub_24F818B40(v10);
      sub_24F76F86C(v61);
      sub_24F76F86C(v62);
      sub_24F76F86C(__dst);
LABEL_29:
      sub_24F76F86C(v62);
      return v1 & 1;
    case 7u:
      uint64_t v11 = sub_24F76F774((uint64_t)v64);
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = sub_24F7736D0(v11, (const void *)(*(void *)v11 + 32));
      uint64_t v14 = (const void *)(v12 + 200);
      goto LABEL_27;
    case 9u:
      uint64_t v4 = sub_24F76F774((uint64_t)v64) + 40;
LABEL_10:
      uint64_t v15 = *(void *)v4;
      uint64_t v16 = *(void *)(*(void *)v4 + 16);
      if (!v16) {
        goto LABEL_66;
      }
      swift_bridgeObjectRetain();
      sub_24F770944(v62);
      uint64_t v17 = sub_24F773BAC();
      uint64_t v18 = sub_24F818B40(v17);
      if ((v18 & 1) == 0) {
        goto LABEL_58;
      }
      uint64_t v19 = 200;
      do
      {
        if (!--v16)
        {
LABEL_59:
          swift_bridgeObjectRelease();
          goto LABEL_66;
        }
        uint64_t v20 = v19 + 168;
        sub_24F775C7C(v18, (const void *)(v15 + v19));
        uint64_t v21 = sub_24F773BAC();
        uint64_t v18 = sub_24F818B40(v21);
        uint64_t v19 = v20;
      }
      while ((v18 & 1) != 0);
LABEL_58:
      swift_bridgeObjectRelease();
LABEL_62:
      char v1 = 0;
      return v1 & 1;
    case 0xBu:
      uint64_t v22 = sub_24F76F774((uint64_t)v64);
      uint64_t v23 = *(void *)v22;
      sub_24F775C7C(v22, (const void *)(*(void *)v22 + 16));
      memcpy(v60, (const void *)(v23 + 184), 0xA2uLL);
      sub_24F7AD780((uint64_t)v60, (uint64_t)v58);
      LODWORD(v23) = sub_24F7D2F28((uint64_t)v58);
      uint64_t v24 = (void *)sub_24F7D2F34((uint64_t)v58);
      if (v23) {
        goto LABEL_62;
      }
      uint64_t v25 = (void *)*v24;
      sub_24F773BAC();
      sub_24F76F86C(v62);
      uint64_t v26 = sub_24F81C668(v60);
      if ((sub_24F818B40(v26) & 1) == 0)
      {
        sub_24F76F86C(v62);
        goto LABEL_61;
      }
      uint64_t v27 = v25[2];
      if (!v27)
      {
        sub_24F76F86C(v62);
        goto LABEL_65;
      }
      sub_24F81C668(v60);
      memcpy(v61, v25 + 4, 0xA3uLL);
      uint64_t v28 = sub_24F81CCFC(__dst);
      uint64_t v29 = sub_24F818B40(v28);
      if ((v29 & 1) == 0)
      {
LABEL_23:
        sub_24F81C668(v60);
        sub_24F76F86C(v62);
LABEL_61:
        sub_24F81C668(v60);
        goto LABEL_62;
      }
      uint64_t v30 = (char *)(v25 + 25);
      while (--v27)
      {
        uint64_t v31 = v30 + 168;
        sub_24F7736D0(v29, v30);
        uint64_t v32 = sub_24F81CCFC(__dst);
        uint64_t v29 = sub_24F818B40(v32);
        uint64_t v30 = v31;
        if ((v29 & 1) == 0) {
          goto LABEL_23;
        }
      }
      sub_24F81C668(v60);
      sub_24F76F86C(v62);
LABEL_65:
      sub_24F81C668(v60);
LABEL_66:
      char v1 = 1;
      return v1 & 1;
    case 0xCu:
      char v2 = (void *)sub_24F76F774((uint64_t)v64);
      char v3 = (const void *)(*v2 + 40);
      goto LABEL_25;
    case 0xDu:
      uint64_t v34 = sub_24F76F774((uint64_t)v64);
      uint64_t v35 = *(void *)v34;
      uint64_t v13 = sub_24F7736D0(v34, (const void *)(*(void *)v34 + 24));
      uint64_t v14 = (const void *)(v35 + 192);
LABEL_27:
      sub_24F775C7C((uint64_t)v13, v14);
      sub_24F81CCFC(__dst);
      uint64_t v36 = sub_24F76F86C(v62);
      if ((sub_24F818B40(v36) & 1) == 0) {
        goto LABEL_49;
      }
      int v37 = sub_24F781520(__dst);
      char v1 = sub_24F818B40(v37);
      goto LABEL_29;
    case 0xFu:
    case 0x10u:
    case 0x12u:
      char v2 = (void *)sub_24F76F774((uint64_t)v64);
      char v3 = (const void *)(*v2 + 16);
LABEL_25:
      sub_24F775C7C((uint64_t)v2, v3);
      uint64_t v33 = sub_24F773BAC();
      char v1 = sub_24F818B40(v33);
      return v1 & 1;
    case 0x11u:
      uint64_t v38 = sub_24F76F774((uint64_t)v64);
      char v1 = 0;
      if (*(unsigned char *)(v38 + 16) & 1) != 0 || (*(unsigned char *)(v38 + 17)) {
        return v1 & 1;
      }
      uint64_t v39 = *(void *)(v38 + 24);
      uint64_t v41 = sub_24F8CED10();
      uint64_t v42 = v40;
      BOOL v43 = v41 == 5783885 && v40 == 0xE300000000000000;
      if ((v43
         || ((sub_24F77AD28(), v44 = sub_24F8CFD00(), v41 == 5130573) ? (BOOL v45 = v42 == 0xE300000000000000) : (BOOL v45 = 0),
             !v45 ? (char v46 = 0) : (char v46 = 1),
             (v44 & 1) != 0 || (v46 & 1) != 0 || (sub_24F77AD28(), (sub_24F8CFD00() & 1) != 0)))
        && *(void *)(v39 + 16) >= 2uLL)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_269A2A330 != -1) {
          swift_once();
        }
        uint64_t v47 = sub_24F77AD28();
        char v50 = sub_24F85FE9C(v47, v48, v49);
        swift_bridgeObjectRelease();
        if ((v50 & 1) == 0) {
          goto LABEL_62;
        }
      }
      uint64_t v51 = *(void *)(v39 + 16);
      if (!v51) {
        goto LABEL_66;
      }
      swift_bridgeObjectRetain();
      sub_24F770944(v62);
      uint64_t v52 = sub_24F773BAC();
      uint64_t v53 = sub_24F818B40(v52);
      if (v53)
      {
        uint64_t v54 = 200;
        do
        {
          if (!--v51) {
            goto LABEL_59;
          }
          uint64_t v55 = v54 + 168;
          sub_24F775C7C(v53, (const void *)(v39 + v54));
          uint64_t v56 = sub_24F773BAC();
          uint64_t v53 = sub_24F818B40(v56);
          uint64_t v54 = v55;
        }
        while ((v53 & 1) != 0);
      }
      goto LABEL_58;
    default:
      return v1 & 1;
  }
}

void sub_24F819250()
{
  sub_24F76FF94();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_24F76F710(v0, (uint64_t)v144);
  sub_24F76F710((uint64_t)v144, (uint64_t)v145);
  int v6 = sub_24F76F978((uint64_t)v145);
  if (v6 == 16)
  {
    sub_24F76F774((uint64_t)v145);
    sub_24F770944(__dst);
    sub_24F770944(__src);
    sub_24F76F86C(__dst);
    sub_24F778DCC();
    uint64_t v28 = __dst;
    goto LABEL_23;
  }
  uint64_t v7 = MEMORY[0x263F8EE88];
  switch(v6)
  {
    case 9:
      uint64_t v105 = v5;
      uint64_t v111 = v3;
      uint64_t v29 = sub_24F76F774((uint64_t)v145);
      uint64_t v30 = *(void *)(v29 + 8);
      uint64_t v31 = *(void *)(v29 + 16);
      unint64_t v32 = *(void *)(v29 + 24);
      int v33 = *(unsigned __int8 *)(v29 + 32);
      uint64_t v117 = *(void *)(v29 + 40);
      sub_24F81CF08();
      sub_24F774480();
      *(void *)__src = v34;
      *(void *)&__src[8] = v35;
      *(_OWORD *)&__src[16] = xmmword_24F8DF640;
      *(_WORD *)&__src[32] = 256;
      __src[34] = 0;
      swift_bridgeObjectRetain();
      sub_24F781F34(v31, v32, v33);
      if (static SQLExpression.AssociativeBinaryOperator.== infix(_:_:)((uint64_t)__dst, (uint64_t)__src))
      {
        HIDWORD(v98) = v33;
        *(void *)uint64_t v121 = v7;
        uint64_t v36 = v117;
        uint64_t v37 = *(void *)(v117 + 16);
        if (v37)
        {
          swift_bridgeObjectRetain();
          memcpy(__dst, (const void *)(v117 + 32), 0xA3uLL);
          sub_24F81D0D0(__src, v38, v39, v40, v41, v42, v43, v44, v88, v30, v98, v105, v111, v117, *(uint64_t *)v121, v122, v123, v124, v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            *(uint64_t *)__src,
            *(uint64_t *)&__src[8],
            *(uint64_t *)&__src[16],
            *(uint64_t *)&__src[24],
            *(uint64_t *)&__src[32],
            *(uint64_t *)&__src[40],
            *(uint64_t *)&__src[48],
            *(uint64_t *)&__src[56],
            *(uint64_t *)&__src[64],
            *(uint64_t *)&__src[72],
            *(uint64_t *)&__src[80],
            *(uint64_t *)&__src[88],
            *(uint64_t *)&__src[96],
            *(uint64_t *)&__src[104],
            *(uint64_t *)&__src[112],
            *(uint64_t *)&__src[120],
            *(uint64_t *)&__src[128],
            *(uint64_t *)&__src[136],
            *(uint64_t *)&__src[144],
            *(uint64_t *)&__src[152],
            *(uint64_t *)&__src[160],
            __dst[0].n128_i8[0]);
          sub_24F76F86C(__dst);
          sub_24F819250(v106, v112);
          if (v1)
          {
            swift_bridgeObjectRelease();
            sub_24F76F86C(__dst);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_24F781F10(v31, v32, SBYTE4(v100));
          }
          else
          {
            uint64_t v90 = v32;
            for (uint64_t i = 200; ; i += 168)
            {
              sub_24F8AC790();
              sub_24F76F86C(__dst);
              if (!--v37) {
                break;
              }
              memcpy(__dst, (const void *)(v36 + i), 0xA3uLL);
              sub_24F81D0D0(__src, v46, v47, v48, v49, v50, v51, v52, v90, v95, v100, v106, v112, v118, *(uint64_t *)v121, v122, v123, v124, v125,
                v126,
                v127,
                v128,
                v129,
                v130,
                v131,
                v132,
                v133,
                v134,
                v135,
                v136,
                v137,
                v138,
                v139,
                v140,
                v141,
                *(uint64_t *)__src,
                *(uint64_t *)&__src[8],
                *(uint64_t *)&__src[16],
                *(uint64_t *)&__src[24],
                *(uint64_t *)&__src[32],
                *(uint64_t *)&__src[40],
                *(uint64_t *)&__src[48],
                *(uint64_t *)&__src[56],
                *(uint64_t *)&__src[64],
                *(uint64_t *)&__src[72],
                *(uint64_t *)&__src[80],
                *(uint64_t *)&__src[88],
                *(uint64_t *)&__src[96],
                *(uint64_t *)&__src[104],
                *(uint64_t *)&__src[112],
                *(uint64_t *)&__src[120],
                *(uint64_t *)&__src[128],
                *(uint64_t *)&__src[136],
                *(uint64_t *)&__src[144],
                *(uint64_t *)&__src[152],
                *(uint64_t *)&__src[160],
                __dst[0].n128_i8[0]);
              sub_24F76F86C(__dst);
              sub_24F778DCC();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_24F781F10(v31, v90, SBYTE4(v100));
          }
          break;
        }
        swift_bridgeObjectRelease();
        uint64_t v72 = v31;
        unint64_t v73 = v32;
        char v74 = BYTE4(v98);
      }
      else
      {
        sub_24F81CF08();
        *(void *)__src = 21071;
        *(void *)&__src[8] = 0xE200000000000000;
        memset(&__src[16], 0, 17);
        *(_WORD *)&__src[33] = 1;
        static SQLExpression.AssociativeBinaryOperator.== infix(_:_:)((uint64_t)__dst, (uint64_t)__src);
        swift_bridgeObjectRelease();
        uint64_t v72 = v31;
        unint64_t v73 = v32;
        char v74 = v33;
      }
      sub_24F781F10(v72, v73, v74);
      break;
    case 13:
      uint64_t v53 = sub_24F76F774((uint64_t)v145);
      uint64_t v54 = *(void *)v53;
      uint64_t v55 = *(unsigned __int8 *)(*(void *)v53 + 16);
      memcpy(__src, (const void *)(*(void *)v53 + 24), 0xA3uLL);
      int v56 = memcpy(__dst, (const void *)(v54 + 192), 0xA3uLL);
      switch(v55)
      {
        case 1:
        case 3:
          goto LABEL_38;
        default:
          sub_24F7722B4(v56, v57, v58, v59, v60, v61, v62, v63, v88, v93, v98, v103, v109, v115, v121[0], v122, v123, v124, v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            __src[0]);
          sub_24F76F86C((__n128 *)__src);
          sub_24F76F86C(__dst);
          sub_24F76BB14();
          if (v1)
          {
            sub_24F76F86C(__dst);
            uint64_t v28 = (__n128 *)__src;
            goto LABEL_23;
          }
          uint64_t v75 = v65;
          if (!v65) {
            goto LABEL_32;
          }
          uint64_t v76 = v64;
          sub_24F81D0D0(v121, v65, v66, v67, v68, v69, v70, v71, v91, v96, v101, v107, v113, v119, *(uint64_t *)v121, v122, v123, v124, v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            *(uint64_t *)__src,
            *(uint64_t *)&__src[8],
            *(uint64_t *)&__src[16],
            *(uint64_t *)&__src[24],
            *(uint64_t *)&__src[32],
            *(uint64_t *)&__src[40],
            *(uint64_t *)&__src[48],
            *(uint64_t *)&__src[56],
            *(uint64_t *)&__src[64],
            *(uint64_t *)&__src[72],
            *(uint64_t *)&__src[80],
            *(uint64_t *)&__src[88],
            *(uint64_t *)&__src[96],
            *(uint64_t *)&__src[104],
            *(uint64_t *)&__src[112],
            *(uint64_t *)&__src[120],
            *(uint64_t *)&__src[128],
            *(uint64_t *)&__src[136],
            *(uint64_t *)&__src[144],
            *(uint64_t *)&__src[152],
            *(uint64_t *)&__src[160],
            __dst[0].n128_i8[0]);
          if (sub_24F818B40())
          {
            sub_24F781274((uint64_t *)&unk_26B1F7C88);
            uint64_t v77 = swift_allocObject();
            *(_OWORD *)(v77 + 16) = xmmword_24F8DDBF0;
            *(void *)(v77 + 32) = v76;
            *(void *)(v77 + 40) = v75;
LABEL_35:
            sub_24F81BD54(v77);
            sub_24F76F86C(__dst);
            uint64_t v28 = (__n128 *)__src;
            goto LABEL_23;
          }
          swift_bridgeObjectRelease();
LABEL_32:
          sub_24F81D0D0(v121, v65, v66, v67, v68, v69, v70, v71, v91, v96, v101, v107, v113, v119, *(uint64_t *)v121, v122, v123, v124, v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            *(uint64_t *)__src,
            *(uint64_t *)&__src[8],
            *(uint64_t *)&__src[16],
            *(uint64_t *)&__src[24],
            *(uint64_t *)&__src[32],
            *(uint64_t *)&__src[40],
            *(uint64_t *)&__src[48],
            *(uint64_t *)&__src[56],
            *(uint64_t *)&__src[64],
            *(uint64_t *)&__src[72],
            *(uint64_t *)&__src[80],
            *(uint64_t *)&__src[88],
            *(uint64_t *)&__src[96],
            *(uint64_t *)&__src[104],
            *(uint64_t *)&__src[112],
            *(uint64_t *)&__src[120],
            *(uint64_t *)&__src[128],
            *(uint64_t *)&__src[136],
            *(uint64_t *)&__src[144],
            *(uint64_t *)&__src[152],
            *(uint64_t *)&__src[160],
            __dst[0].n128_i8[0]);
          sub_24F76BB14();
          uint64_t v86 = v79;
          if (v79)
          {
            uint64_t v87 = v78;
            sub_24F7722B4(v78, v79, v80, v81, v82, v83, v84, v85, v92, v97, v102, v108, v114, v120, v121[0], v122, v123, v124, v125,
              v126,
              v127,
              v128,
              v129,
              v130,
              v131,
              v132,
              v133,
              v134,
              v135,
              v136,
              v137,
              v138,
              v139,
              v140,
              v141,
              __src[0]);
            if (sub_24F818B40())
            {
              sub_24F781274((uint64_t *)&unk_26B1F7C88);
              uint64_t v77 = swift_allocObject();
              *(_OWORD *)(v77 + 16) = xmmword_24F8DDBF0;
              *(void *)(v77 + 32) = v87;
              *(void *)(v77 + 40) = v86;
              goto LABEL_35;
            }
            swift_bridgeObjectRelease();
          }
          sub_24F76F86C(__dst);
          sub_24F76F86C((__n128 *)__src);
          goto LABEL_38;
      }
    case 3:
      uint64_t v8 = sub_24F76F774((uint64_t)v145);
      uint64_t v9 = *(void *)v8;
      uint64_t v10 = *(void *)(*(void *)v8 + 16);
      if (v10)
      {
        sub_24F76F710((uint64_t)v144, (uint64_t)__dst);
        sub_24F76F774((uint64_t)__dst);
        swift_bridgeObjectRetain();
        int v11 = sub_24F770944(__src);
        sub_24F7722B4(v11, v12, v13, v14, v15, v16, v17, v18, v88, v93, v98, v103, v109, v115, v121[0], v122, v123, v124, v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138,
          v139,
          v140,
          v141,
          __src[0]);
        sub_24F76F86C((__n128 *)__src);
        sub_24F778DCC();
        if (!v1)
        {
          for (uint64_t j = v9 + 200; ; j += 168)
          {
            sub_24F8AC790();
            sub_24F76F86C((__n128 *)__src);
            if (!--v10) {
              break;
            }
            int v20 = sub_24F771060(__src);
            sub_24F7722B4(v20, v21, v22, v23, v24, v25, v26, v27, v89, v94, v99, v104, v110, v116, v121[0], v122, v123, v124, v125,
              v126,
              v127,
              v128,
              v129,
              v130,
              v131,
              v132,
              v133,
              v134,
              v135,
              v136,
              v137,
              v138,
              v139,
              v140,
              v141,
              __src[0]);
            sub_24F76F86C((__n128 *)__src);
            sub_24F778DCC();
          }
          sub_24F76F86C(v144);
          break;
        }
        swift_bridgeObjectRelease();
        sub_24F76F86C((__n128 *)__src);
        uint64_t v28 = v144;
LABEL_23:
        sub_24F76F86C(v28);
      }
      break;
  }
LABEL_38:
  sub_24F77BC10();
}

unint64_t sub_24F81990C(uint64_t a1, uint64_t a2)
{
  v108[21] = *MEMORY[0x263EF8340];
  sub_24F76F710(v2, (uint64_t)v107);
  sub_24F76F710((uint64_t)v107, (uint64_t)v108);
  int v6 = sub_24F76F978((uint64_t)v108);
  unint64_t v7 = 0;
  switch(v6)
  {
    case 9:
      uint64_t v99 = v3;
      uint64_t v100 = a1;
      uint64_t v96 = a2;
      uint64_t v8 = sub_24F76F774((uint64_t)v108);
      uint64_t v9 = *(void *)(v8 + 8);
      uint64_t v10 = *(void *)(v8 + 16);
      unint64_t v7 = *(void *)(v8 + 24);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 32);
      uint64_t v12 = *(void *)(v8 + 40);
      sub_24F77CE34();
      sub_24F774480();
      *(void *)uint64_t v105 = v13;
      *(void *)&v105[8] = v14;
      *(_OWORD *)&v105[16] = xmmword_24F8DF640;
      *(_WORD *)&v105[32] = 256;
      v105[34] = 0;
      swift_bridgeObjectRetain();
      sub_24F781F34(v10, v7, v11);
      swift_bridgeObjectRetain();
      uint64_t v15 = static SQLExpression.AssociativeBinaryOperator.== infix(_:_:)((uint64_t)v106, (uint64_t)v105);
      if (v15)
      {
        v94[1] = v9;
        uint64_t v98 = v10;
        int v97 = v11;
        uint64_t v16 = *(void *)(v12 + 16);
        if (v16)
        {
          unint64_t v95 = v7;
          sub_24F7746EC(v15, (const void *)(v12 + 32));
          sub_24F77D7F8();
          sub_24F76F86C(v106);
          uint64_t v17 = sub_24F81CE88();
          if (v3)
          {
            unint64_t v7 = 0;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_24F781F10(v98, v95, v97);
            goto LABEL_20;
          }
          uint64_t v48 = v17;
          uint64_t v101 = v12;
          unint64_t v7 = 0;
          for (uint64_t i = 200; ; i += 168)
          {
            if (v48)
            {
              if (v7)
              {
                char v50 = *(unsigned char *)(v7 + 32);
                int v51 = (void *)(v50 & 0x3F);
                unint64_t v52 = (unint64_t)((1 << v50) + 63) >> 6;
                uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
                if (v51 > 0xD)
                {
                  uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
                  if ((isStackAllocationSafe & 1) == 0)
                  {
                    uint64_t v54 = (void *)swift_slowAlloc();
                    sub_24F838880(0, v52, v54);
                    sub_24F81CD98();
                    int v57 = v51;
                    goto LABEL_105;
                  }
                }
                uint64_t v99 = v94;
                MEMORY[0x270FA5388](isStackAllocationSafe);
                uint64_t v54 = (void *)((char *)v94 - ((8 * v52 + 15) & 0x3FFFFFFFFFFFFFF0));
                sub_24F838880(0, v52, v54);
                sub_24F81CD98();
                unint64_t v56 = v55;
                int v57 = v51;
                swift_bridgeObjectRelease();
                if (v51)
                {
                  swift_willThrow();

                  __break(1u);
LABEL_105:
                  swift_bridgeObjectRelease();

                  MEMORY[0x2533654D0](v54, -1, -1);
                  __break(1u);
                  JUMPOUT(0x24F81A6E4);
                }
                unint64_t v59 = v95;
                swift_bridgeObjectRelease();
                sub_24F76F86C(v106);
                uint64_t v58 = swift_bridgeObjectRelease();
                if (!*(void *)(v56 + 16))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_24F781F10(v98, v59, v97);
                  return v56;
                }
                unint64_t v7 = v56;
              }
              else
              {
                uint64_t v58 = sub_24F76F86C(v106);
                unint64_t v7 = v48;
              }
            }
            else
            {
              uint64_t v58 = sub_24F76F86C(v106);
            }
            if (!--v16)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_24F81CDC8();
              return v7;
            }
            sub_24F7746EC(v58, (const void *)(v101 + i));
            sub_24F77D7F8();
            sub_24F76F86C(v106);
            uint64_t v48 = sub_24F81D078();
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = v98;
        unint64_t v43 = v7;
        char v44 = v97;
LABEL_37:
        sub_24F781F10(v42, v43, v44);
        return 0;
      }
      uint64_t v101 = v12;
      sub_24F77CE34();
      *(void *)uint64_t v105 = 21071;
      *(void *)&v105[8] = 0xE200000000000000;
      memset(&v105[16], 0, 17);
      *(_WORD *)&v105[33] = 1;
      uint64_t v38 = static SQLExpression.AssociativeBinaryOperator.== infix(_:_:)((uint64_t)v106, (uint64_t)v105);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = v10;
        unint64_t v43 = v7;
        char v44 = v11;
        goto LABEL_37;
      }
      int v97 = v11;
      uint64_t v98 = v10;
      v104[0] = MEMORY[0x263F8EE88];
      uint64_t v39 = *(void *)(v101 + 16);
      if (!v39)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F781F10(v98, v7, v97);
        return MEMORY[0x263F8EE88];
      }
      sub_24F7746EC(v38, (const void *)(v101 + 32));
      sub_24F77D7F8();
      sub_24F76F86C(v106);
      uint64_t v40 = sub_24F81CE88();
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_24F781F10(v98, v7, v97);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      unint64_t v95 = v7;
      uint64_t v65 = 200;
      while (v40)
      {
        sub_24F8AC64C(v40);
        uint64_t v66 = sub_24F76F86C(v106);
        if (!--v39)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F81CDC8();
          return v104[0];
        }
        sub_24F7746EC(v66, (const void *)(v101 + v65));
        sub_24F77D7F8();
        sub_24F76F86C(v106);
        uint64_t v40 = sub_24F81990C(v11, v10);
        v65 += 168;
      }
      swift_bridgeObjectRelease();
      sub_24F81CDC8();
      sub_24F76F86C(v106);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    case 10:
    case 12:
    case 14:
    case 15:
      return v7;
    case 11:
      sub_24F76F774((uint64_t)v108);
      sub_24F81CDBC();
      sub_24F7746EC(v36, v37);
      memcpy(v103, (const void *)(v2 + 184), 0xA2uLL);
      if (*(unsigned char *)(v2 + 346)) {
        return 0;
      }
      sub_24F7AD780((uint64_t)v103, (uint64_t)v102);
      if (sub_24F7D2F28((uint64_t)v102))
      {
        sub_24F7D2F34((uint64_t)v102);
        return 0;
      }
      uint64_t v46 = *(void *)sub_24F7D2F34((uint64_t)v102);
      sub_24F77D7F8();
      sub_24F81C668(v103);
      sub_24F81C668(v103);
      sub_24F76F86C(v106);
      sub_24F81CF2C();
      if (v3)
      {
        sub_24F81C668(v103);
        sub_24F81C668(v103);
LABEL_20:
        uint64_t v34 = v106;
        goto LABEL_31;
      }
      if (v47)
      {
        sub_24F829718();
        uint64_t v60 = sub_24F77095C();
        char v64 = sub_24F7F37AC(v60, v61, v62, v63);
        char v80 = v64;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v80)
        {
          uint64_t v81 = *(void *)(v46 + 16);
          if (!v81)
          {
            sub_24F81C668(v103);
            uint64_t v83 = MEMORY[0x263F8EE78];
            goto LABEL_102;
          }
          uint64_t v82 = v46 + 32;
          sub_24F81C668(v103);
          uint64_t v83 = MEMORY[0x263F8EE78];
          for (uint64_t j = v81 - 1; ; --j)
          {
            sub_24F76F710(v82, (uint64_t)v104);
            sub_24F76F710((uint64_t)v104, (uint64_t)v105);
            if (sub_24F76F978((uint64_t)v105) != 2) {
              goto LABEL_93;
            }
            uint64_t v85 = sub_24F76F774((uint64_t)v105);
            double v86 = *(double *)v85;
            if (*(unsigned char *)(v85 + 16))
            {
              if (*(unsigned char *)(v85 + 16) != 1 || v86 < -9.22337204e18 || v86 >= 9.22337204e18) {
                goto LABEL_93;
              }
              if ((~*(void *)&v86 & 0x7FF0000000000000) == 0)
              {
                __break(1u);
LABEL_104:
                __break(1u);
              }
              if (v86 <= -9.22337204e18) {
                goto LABEL_104;
              }
              *(void *)&double v86 = (uint64_t)v86;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_24F7879E8(0, *(void *)(v83 + 16) + 1, 1, v83);
              uint64_t v83 = v91;
            }
            unint64_t v90 = *(void *)(v83 + 16);
            unint64_t v89 = *(void *)(v83 + 24);
            if (v90 >= v89 >> 1)
            {
              sub_24F7879E8(v89 > 1, v90 + 1, 1, v83);
              uint64_t v83 = v92;
            }
            *(void *)(v83 + 16) = v90 + 1;
            *(double *)(v83 + 8 * v90 + 32) = v86;
LABEL_93:
            if (!j)
            {
              sub_24F81C668(v103);
              sub_24F81C668(v103);
LABEL_102:
              unint64_t v7 = sub_24F78E1CC(v83);
              sub_24F81C668(v103);
LABEL_30:
              uint64_t v34 = v106;
LABEL_31:
              sub_24F76F86C(v34);
              return v7;
            }
            v82 += 168;
          }
        }
      }
      sub_24F81C668(v103);
      sub_24F76F86C(v106);
      sub_24F81C668(v103);
      return 0;
    case 13:
      uint64_t v23 = sub_24F76F774((uint64_t)v108);
      uint64_t v24 = *(void *)v23;
      uint64_t v25 = *(unsigned __int8 *)(*(void *)v23 + 16);
      int v26 = memcpy(v105, (const void *)(*(void *)v23 + 24), sizeof(v105));
      sub_24F7746EC((uint64_t)v26, (const void *)(v24 + 192));
      switch(v25)
      {
        case 1:
        case 3:
          return 0;
        default:
          memcpy(v104, v105, 0xA3uLL);
          sub_24F76F86C((__n128 *)v105);
          sub_24F76F86C(v106);
          sub_24F81CF2C();
          if (v3)
          {
            sub_24F76F86C(v106);
            uint64_t v34 = (__n128 *)v105;
            goto LABEL_31;
          }
          uint64_t v29 = v28;
          if (!v28
            || (uint64_t v30 = v27,
                uint64_t v31 = sub_24F829718(),
                char v33 = sub_24F7F37AC(v30, v29, v31, v32),
                (char v67 = v33, swift_bridgeObjectRelease(), swift_bridgeObjectRelease(), (v67 & 1) == 0)
             || (sub_24F76F710((uint64_t)v106, (uint64_t)v104), sub_24F76F978((uint64_t)v104) != 2)))
          {
            memcpy(v104, v106, 0xA3uLL);
            sub_24F81CF2C();
            if (!v74
              || (sub_24F829718(),
                  uint64_t v75 = sub_24F77095C(),
                  char v79 = sub_24F7F37AC(v75, v76, v77, v78),
                  (char v93 = v79, swift_bridgeObjectRelease(), swift_bridgeObjectRelease(), (v93 & 1) == 0)
               || (sub_24F76F710((uint64_t)v105, (uint64_t)v104), sub_24F76F978((uint64_t)v104) != 2)))
            {
              sub_24F76F86C(v106);
              int v22 = (__n128 *)v105;
              goto LABEL_13;
            }
          }
          int v68 = (__n128 *)sub_24F76F774((uint64_t)v104);
          unsigned __int8 v69 = v68[1].n128_u8[0];
          v103[0] = *v68;
          v103[1].n128_u8[0] = v69;
          uint64_t v70 = static Int64.fromDatabaseValue(_:)((uint64_t *)v103);
          if ((v71 & 1) == 0)
          {
            uint64_t v72 = v70;
            sub_24F781274(qword_269A2A0E8);
            uint64_t v73 = swift_allocObject();
            *(_OWORD *)(v73 + 16) = xmmword_24F8DDBF0;
            *(void *)(v73 + 32) = v72;
            unint64_t v7 = sub_24F81C854(v73);
            sub_24F76F86C(v106);
            uint64_t v34 = (__n128 *)v105;
            goto LABEL_31;
          }
          sub_24F76F86C(v106);
          int v41 = (__n128 *)v105;
          break;
      }
      goto LABEL_34;
    case 16:
      sub_24F76F774((uint64_t)v108);
      sub_24F770944(v106);
      sub_24F770944(v105);
      sub_24F76F86C(v106);
      uint64_t v35 = sub_24F81D078();
      if (v3) {
        goto LABEL_20;
      }
      unint64_t v7 = v35;
      goto LABEL_30;
    default:
      if (v6 != 2) {
        return v7;
      }
      uint64_t v18 = sub_24F76F774((uint64_t)v108);
      uint64_t v19 = *(void *)(v18 + 8);
      int v20 = *(unsigned __int8 *)(v18 + 16);
      if (v20 == 4 && *(_OWORD *)v18 == 0)
      {
        sub_24F76F710((uint64_t)v107, (uint64_t)v106);
        sub_24F780C68((uint64_t)v106);
      }
      else
      {
        *(void *)uint64_t v105 = *(void *)v18;
        *(void *)&v105[8] = v19;
        v105[16] = v20;
        memset(v104, 0, 17);
        sub_24F76F710((uint64_t)v107, (uint64_t)v106);
        sub_24F780C68((uint64_t)v106);
        if ((static DatabaseValue.== infix(_:_:)((uint64_t)v105, (uint64_t)v104) & 1) == 0)
        {
          int v22 = (__n128 *)v107;
LABEL_13:
          sub_24F76F86C(v22);
          return 0;
        }
      }
      int v41 = (__n128 *)v107;
LABEL_34:
      sub_24F76F86C(v41);
      return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_24F81A714@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  memcpy(__dst, v2, 0xA3uLL);
  sub_24F76F710((uint64_t)__dst, (uint64_t)v62);
  switch(sub_24F76F978((uint64_t)v62))
  {
    case 2u:
      uint64_t v6 = sub_24F772974();
      if (*(unsigned char *)(v6 + 16))
      {
        if (*(unsigned char *)(v6 + 16) != 4 || *(void *)(v6 + 8) | v7) {
          goto LABEL_22;
        }
        __n128 v59 = 0uLL;
        char v60 = 4;
      }
      else
      {
        if (v7 > 1) {
          goto LABEL_22;
        }
        if ((_BYTE)a1) {
          BOOL v44 = v7 == 0;
        }
        else {
          BOOL v44 = v7 == 1;
        }
        uint64_t v52 = v44;
        __n128 v59 = (__n128)(unint64_t)v52;
        char v60 = 0;
      }
      sub_24F7667B8((uint64_t)&v59);
      return sub_24F76F710((uint64_t)&v59, (uint64_t)a2);
    case 6u:
      uint64_t v21 = sub_24F81D05C();
      if (v44) {
        goto LABEL_31;
      }
      if (v22 == 1) {
        goto LABEL_30;
      }
      uint64_t v23 = (const void *)(*(void *)v21 + 184);
      char v24 = *(unsigned char *)(*(void *)v21 + 515);
      sub_24F81CEF0(v21, (const void *)(*(void *)v21 + 16));
      memcpy(v58, v23, sizeof(v58));
      sub_24F770944(__src);
      return sub_24F8166D8(&v59, __src, (v24 & 1) == 0, a2);
    case 8u:
      uint64_t v8 = sub_24F76F774((uint64_t)v62);
      uint64_t v9 = *(void *)v8;
      uint64_t v11 = *(void *)(*(void *)v8 + 16);
      uint64_t v10 = *(void *)(*(void *)v8 + 24);
      uint64_t v13 = *(void *)(*(void *)v8 + 32);
      uint64_t v12 = *(void *)(*(void *)v8 + 40);
      memcpy(__src, (const void *)(*(void *)v8 + 48), 0xA3uLL);
      memcpy(v58, (const void *)(v9 + 216), sizeof(v58));
      sub_24F7D9FD0(v9 + 384, (uint64_t)&v59);
      if (!(_BYTE)a1)
      {
        sub_24F76B938(v54);
        *(_OWORD *)unint64_t v55 = xmmword_24F8DF640;
        goto LABEL_40;
      }
      if (a1 == 1)
      {
        sub_24F76B938(v54);
        *(_OWORD *)unint64_t v55 = 0uLL;
LABEL_40:
        v55[16] = 0;
        sub_24F7667B8((uint64_t)v55);
        sub_24F76F710((uint64_t)v55, (uint64_t)v56);
        memcpy(v53, v56, 0xA3uLL);
        uint64_t v17 = v54;
        uint64_t v18 = v53;
        goto LABEL_33;
      }
      BOOL v45 = (void *)swift_allocObject();
      _OWORD v45[2] = v13;
      v45[3] = v12;
      v45[4] = v11;
      v45[5] = v10;
      memcpy(v45 + 6, __src, 0xA3uLL);
      memcpy(v45 + 27, v58, 0xA3uLL);
      sub_24F7D9FD0((uint64_t)&v59, (uint64_t)(v45 + 48));
      *(void *)unint64_t v55 = v45;
      sub_24F81C370((uint64_t)v55);
      uint64_t v46 = sub_24F76F710((uint64_t)v55, (uint64_t)v56);
      sub_24F77B950(v46, v56);
      sub_24F76F86C(__src);
      sub_24F76F86C((__n128 *)v58);
      sub_24F81C3B4((uint64_t)&v59);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    case 0xAu:
      int v26 = (unsigned char *)sub_24F81D05C();
      if (v44) {
        goto LABEL_31;
      }
      if (v27 == 1) {
        goto LABEL_30;
      }
      BOOL v28 = (v26[162] & 1) == 0;
      memmove(v58, v26, 0xA2uLL);
      v58[162] = v28;
      sub_24F81C1FC((uint64_t)v58);
      goto LABEL_46;
    case 0xBu:
      uint64_t v29 = sub_24F76F774((uint64_t)v62);
      unint64_t v30 = *(void *)v29;
      sub_24F81CEF0(v29, (const void *)(*(void *)v29 + 16));
      memcpy(v54, (const void *)(v30 + 184), 0xA2uLL);
      if (!(_BYTE)a1)
      {
        sub_24F76B938(v56);
        __src[0] = (__n128)xmmword_24F8DF640;
        goto LABEL_43;
      }
      if (a1 == 1)
      {
        sub_24F76B938(v56);
        __src[0] = 0uLL;
LABEL_43:
        __src[1].n128_u8[0] = 0;
        sub_24F7667B8((uint64_t)__src);
        sub_24F76F710((uint64_t)__src, (uint64_t)v58);
        memcpy(v55, v58, sizeof(v55));
        uint64_t v17 = (__n128 *)v56;
        uint64_t v18 = v55;
        goto LABEL_33;
      }
      char v47 = *(unsigned char *)(v30 + 346);
      uint64_t v48 = swift_allocObject();
      int v49 = (void *)sub_24F7752E0(v48);
      sub_24F81CED8(v49);
      memcpy(a1, v54, 0xA2uLL);
      *(unsigned char *)(v30 + 346) = (v47 & 1) == 0;
      __src[0].n128_u64[0] = v30;
      sub_24F7AD91C((uint64_t)__src);
      uint64_t v50 = sub_24F76F710((uint64_t)__src, (uint64_t)v58);
      sub_24F77B950(v50, v58);
      sub_24F76F86C(&v59);
      return sub_24F81C668(v54);
    case 0xDu:
      uint64_t v14 = sub_24F81D05C();
      if (v44) {
        goto LABEL_31;
      }
      if (v15 == 1) {
        goto LABEL_30;
      }
      uint64_t v16 = 0x2030001u >> (8 * *(unsigned char *)(*(void *)v14 + 16));
      sub_24F81CEF0(v14, (const void *)(*(void *)v14 + 24));
      sub_24F770944(v58);
      uint64_t v17 = &v59;
      uint64_t v18 = v58;
      uint64_t v19 = a2;
      uint64_t v20 = v16;
      return sub_24F815BAC(v20, v17, v18, v19);
    case 0xFu:
      sub_24F76F774((uint64_t)v62);
      goto LABEL_22;
    case 0x10u:
      sub_24F81D03C();
      sub_24F770944(v58);
      uint64_t v33 = *(void *)(v3 + 184);
      uint64_t v32 = *(void *)(v3 + 192);
      sub_24F770944(__src);
      sub_24F76F86C((__n128 *)v58);
      sub_24F81A714(&v59, a1);
      sub_24F81CED8(__src);
      v56[0] = v33;
      v56[1] = v32;
      sub_24F8168DC(__src, (uint64_t)v56, a2);
      sub_24F76F86C((__n128 *)v58);
      uint64_t v34 = &v59;
      return sub_24F76F86C(v34);
    case 0x12u:
      uint64_t v35 = sub_24F76F774((uint64_t)v62);
      uint64_t v36 = *(void *)v35;
      uint64_t v37 = (uint64_t)sub_24F81CEF0(v35, (const void *)(*(void *)v35 + 16));
      if ((_BYTE)a1)
      {
        char v38 = *(unsigned char *)(v36 + 179);
        uint64_t v39 = swift_allocObject();
        sub_24F81CED8((void *)(v39 + 16));
        *(unsigned char *)(v39 + 179) = (v38 & 1) == 0;
        __src[0].n128_u64[0] = v39;
        sub_24F81C11C((uint64_t)__src);
        uint64_t v40 = sub_24F76F710((uint64_t)__src, (uint64_t)v58);
        sub_24F77B950(v40, v58);
        uint64_t v34 = &v59;
        return sub_24F76F86C(v34);
      }
      unint64_t v43 = (__n128 *)__dst;
      goto LABEL_47;
    case 0x14u:
      uint64_t v41 = sub_24F81D05C();
      if (v44) {
        goto LABEL_31;
      }
      if (v42 == 1) {
        goto LABEL_30;
      }
      char v51 = *(unsigned char *)(v41 + 8);
      *(void *)uint64_t v58 = *(void *)v41;
      v58[8] = (v51 & 1) == 0;
      sub_24F81C05C((uint64_t)v58);
      goto LABEL_46;
    default:
LABEL_22:
      if (!(_BYTE)a1)
      {
LABEL_31:
        sub_24F76B938(__src);
        *(_OWORD *)uint64_t v58 = xmmword_24F8DF640;
LABEL_32:
        v58[16] = 0;
        sub_24F7667B8((uint64_t)v58);
        sub_24F76F710((uint64_t)v58, (uint64_t)&v59);
        sub_24F81CED8(v56);
        uint64_t v17 = __src;
        uint64_t v18 = v56;
LABEL_33:
        uint64_t v19 = a2;
        uint64_t v20 = 0;
        return sub_24F815BAC(v20, v17, v18, v19);
      }
      if (a1 == 1)
      {
LABEL_30:
        sub_24F76B938(__src);
        *(void *)&v58[8] = 0;
        *(void *)uint64_t v58 = 0;
        goto LABEL_32;
      }
      uint64_t v31 = swift_allocObject();
      sub_24F76B938((void *)(v31 + 16));
      *(void *)uint64_t v58 = v31;
      sub_24F81C018((uint64_t)v58);
LABEL_46:
      uint64_t v37 = sub_24F76F710((uint64_t)v58, (uint64_t)&v59);
      unint64_t v43 = &v59;
LABEL_47:
      sub_24F77B950(v37, v43);
      uint64_t v34 = (__n128 *)__dst;
      return sub_24F76F86C(v34);
  }
}

void sub_24F81AE1C()
{
  qword_269A2B388 = (uint64_t)&unk_2700FF3C8;
}

void static SQLExpressible<>.rowID.getter(void *a1@<X8>)
{
  *a1 = 0x6469776F72;
  a1[1] = 0xE500000000000000;
}

uint64_t SQLExpression.sqlExpression.getter@<X0>(void *a1@<X8>)
{
  sub_24F770944(v3);
  sub_24F770944(a1);
  return sub_24F76F86C(v3);
}

uint64_t sub_24F81AEA0@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_24F8142C0(a1);
}

uint64_t sub_24F81AEE4@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_24F8145BC(a1);
}

void *sub_24F81AF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *(*v4)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  void *v6;
  void v8[21];

  uint64_t v3 = *(void *)(*(void *)(a3 + a2 - 8) + 8);
  uint64_t v4 = *(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = v4(v8, AssociatedTypeWitness, v3);
  return sub_24F77B950((uint64_t)v6, v8);
}

uint64_t sub_24F81AFB4()
{
  return 24;
}

__n128 sub_24F81AFC0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_24F81AFD4()
{
  return swift_getAtKeyPath();
}

uint64_t Sequence<>.joined(operator:)@<X0>(void *a1@<X8>)
{
  sub_24F81CF6C();
  v13[0] = v2;
  v13[1] = v3;
  long long v14 = *(_OWORD *)(v4 + 16);
  char v15 = v5;
  char v16 = v6;
  char v17 = v7;
  unint64_t v11 = sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F81B0B4, 0, v8, (uint64_t)&type metadata for SQLExpression, MEMORY[0x263F8E628], v9, MEMORY[0x263F8E658], v10);
  sub_24F816D90((uint64_t)v13, v11, a1);
  return swift_bridgeObjectRelease();
}

void *sub_24F81B0B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  sub_24F7811D0(a1, v4);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v3 + 8) + 8))(__src, v4);
  return memcpy(a2, __src, 0xA3uLL);
}

uint64_t SQLSpecificExpressible.asc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F81B18C((void (*)(unsigned char *))sub_24F808DB0, a1);
}

uint64_t SQLSpecificExpressible.desc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F81B18C((void (*)(unsigned char *))sub_24F808E20, a1);
}

uint64_t SQLSpecificExpressible.ascNullsLast.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F81B18C((void (*)(unsigned char *))sub_24F808D20, a1);
}

uint64_t SQLSpecificExpressible.descNullsFirst.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F81B18C((void (*)(unsigned char *))sub_24F808D6C, a1);
}

uint64_t sub_24F81B18C@<X0>(void (*a1)(unsigned char *)@<X2>, uint64_t a2@<X8>)
{
  sub_24F81CD64();
  v4();
  a1(v6);
  return sub_24F808CB0((uint64_t)v6, a2);
}

uint64_t SQLSpecificExpressible.forKey(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_24F7811D0(a1, a1[3]);
  uint64_t v7 = sub_24F8CFFE0();
  SQLSpecificExpressible.forKey(_:)(v7, v8, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t SQLSpecificExpressible.collating(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  (*(void (**)(__n128 *__return_ptr, uint64_t))(*(void *)(a3 + 8) + 8))(__src, a2);
  memcpy(__dst, __src, 0xA3uLL);
  uint64_t v6 = *(void *)(a1 + 24);
  v8[0] = *(void *)(a1 + 16);
  v8[1] = v6;
  sub_24F8168DC(__dst, (uint64_t)v8, a4);
  return sub_24F76F86C(__src);
}

unint64_t sub_24F81B30C()
{
  unint64_t result = qword_269A2B390;
  if (!qword_269A2B390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B390);
  }
  return result;
}

void type metadata accessor for SQLExpression()
{
}

uint64_t destroy for SQLExpression.AssociativeBinaryOperator(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  return sub_24F781F10(v2, v3, v4);
}

uint64_t initializeWithCopy for SQLExpression.AssociativeBinaryOperator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_24F781F34(v5, v6, v7);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  return a1;
}

uint64_t assignWithCopy for SQLExpression.AssociativeBinaryOperator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_24F781F34(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  sub_24F781F10(v7, v8, v9);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

__n128 initializeWithTake for SQLExpression.AssociativeBinaryOperator(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SQLExpression.AssociativeBinaryOperator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  char v8 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v5;
  sub_24F781F10(v6, v7, v8);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLExpression.AssociativeBinaryOperator(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 35))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLExpression.AssociativeBinaryOperator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 35) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLExpression.AssociativeBinaryOperator()
{
}

uint64_t dispatch thunk of SQLExpressible.sqlExpression.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t _s12GRDBInternal13SQLExpressionV4ImplOwxx_0()
{
  sub_24F77C064();
  return sub_24F76C98C(v7, v0, v1, v2, v3, v4, v5, v6, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
}

uint64_t _s12GRDBInternal13SQLExpressionV4ImplOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  int v24 = *(unsigned __int8 *)(a2 + 162);
  int v25 = *(unsigned __int16 *)(a2 + 160);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v9 = *(void *)a2;
  unint64_t v10 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_24F76CB14(*(void *)a2, v10, v3, v4, v5, v6, v7, v11, v8, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v25 | (v24 << 16));
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(unsigned char *)(a1 + 162) = v24;
  *(_WORD *)(a1 + 160) = v25;
  return a1;
}

uint64_t _s12GRDBInternal13SQLExpressionV4ImplOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v29 = *(void *)(a2 + 64);
  uint64_t v30 = *(void *)(a2 + 72);
  uint64_t v31 = *(void *)(a2 + 80);
  uint64_t v32 = *(void *)(a2 + 88);
  uint64_t v33 = *(void *)(a2 + 96);
  uint64_t v34 = *(void *)(a2 + 104);
  uint64_t v35 = *(void *)(a2 + 112);
  uint64_t v36 = *(void *)(a2 + 120);
  uint64_t v37 = *(void *)(a2 + 128);
  uint64_t v38 = *(void *)(a2 + 136);
  int v41 = *(unsigned __int8 *)(a2 + 162);
  int v11 = *(unsigned __int16 *)(a2 + 160);
  uint64_t v39 = *(void *)(a2 + 144);
  uint64_t v40 = *(void *)(a2 + 152);
  sub_24F76CB14(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v11 | (v41 << 16));
  unsigned int v12 = *(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16);
  uint64_t v13 = *(void *)a1;
  unint64_t v14 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  long long v21 = *(_OWORD *)(a1 + 64);
  long long v22 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v29;
  *(void *)(a1 + 72) = v30;
  *(void *)(a1 + 80) = v31;
  *(void *)(a1 + 88) = v32;
  long long v23 = *(_OWORD *)(a1 + 96);
  long long v24 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v33;
  *(void *)(a1 + 104) = v34;
  *(void *)(a1 + 112) = v35;
  *(void *)(a1 + 120) = v36;
  long long v25 = *(_OWORD *)(a1 + 128);
  *(void *)(a1 + 128) = v37;
  *(void *)(a1 + 136) = v38;
  *(_WORD *)(a1 + 160) = v11;
  *(unsigned char *)(a1 + 162) = v41;
  uint64_t v26 = *(void *)(a1 + 144);
  uint64_t v27 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = v39;
  *(void *)(a1 + 152) = v40;
  sub_24F76C98C(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26,
    v27,
    v12);
  return a1;
}

uint64_t _s12GRDBInternal13SQLExpressionV4ImplOwta_0(uint64_t a1)
{
  __n128 v2 = sub_24F7858A0();
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 152);
  unsigned int v5 = *(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16);
  long long v7 = v6[1];
  *(_OWORD *)a1 = *v6;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = v6[3];
  *(_OWORD *)(a1 + 32) = v6[2];
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = v6[5];
  *(_OWORD *)(a1 + 64) = v6[4];
  *(_OWORD *)(a1 + 80) = v9;
  long long v10 = v6[7];
  *(_OWORD *)(a1 + 96) = v6[6];
  *(_OWORD *)(a1 + 112) = v10;
  long long v11 = v6[9];
  *(_OWORD *)(a1 + 128) = v6[8];
  *(_OWORD *)(a1 + 144) = v11;
  *(unsigned char *)(a1 + 162) = v12;
  *(_WORD *)(a1 + 160) = v13;
  sub_24F76C98C(v14, v21, v15, v16, v17, v18, v19, v20, v2.n128_i64[0], v2.n128_i64[1], v22, v23, v24, v25, v26, v27, v28, v29, v3,
    v4,
    v5);
  return a1;
}

uint64_t _s12GRDBInternal11SQLOrderingV4ImplOwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 163))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *(void *)(a1 + 64) >> 1;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

double sub_24F81B9F0(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 152) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 162) = 0;
    *(_WORD *)(a1 + 160) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 163) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 64) = 2 * -a2;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_OWORD *)(a1 + 136) = 0u;
      *(_OWORD *)(a1 + 147) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 163) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24F81BA88(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  *(unsigned char *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 7;
  *(_WORD *)uint64_t result = v2;
  return result;
}

void sub_24F81BAA4(uint64_t a1, unsigned int a2)
{
  if (a2 < 0x15)
  {
    uint64_t v4 = *(void *)(a1 + 104) & 1;
    int v3 = (*(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16)) & 0x181FF | (a2 << 19);
    *(void *)(a1 + 64) &= 1uLL;
    *(void *)(a1 + 104) = v4;
  }
  else
  {
    *(void *)a1 = a2 - 21;
    bzero((void *)(a1 + 8), 0x98uLL);
    int v3 = 11010048;
  }
  *(_WORD *)(a1 + 160) = v3;
  *(unsigned char *)(a1 + 162) = BYTE2(v3);
}

ValueMetadata *type metadata accessor for SQLExpression.Impl()
{
  return &type metadata for SQLExpression.Impl;
}

uint64_t sub_24F81BB30(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_24F81D098(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  return sub_24F814180(v8);
}

uint64_t sub_24F81BB64(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_24F81D098(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  return sub_24F81447C(v8);
}

uint64_t sub_24F81BB98@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlSelection.getter(a1);
}

uint64_t sub_24F81BBA4@<X0>(uint64_t a1@<X8>)
{
  return SQLSpecificExpressible.sqlOrdering.getter(a1);
}

uint64_t sub_24F81BBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v5[0] = a1;
  v5[1] = a2;
  sub_24F7991DC((uint64_t)v5);
  sub_24F76F710((uint64_t)v5, a3);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F81BBFC@<X0>(uint64_t a1@<X8>)
{
  return sub_24F8143B4(*v1, v1[1], a1);
}

uint64_t sub_24F81BC04@<X0>(uint64_t a1@<X8>)
{
  return sub_24F8146B8(*v1, v1[1], a1);
}

uint64_t sub_24F81BC0C(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x200000u) >> 16;
  return result;
}

uint64_t sub_24F81BC50()
{
  sub_24F77F674(v0[1].n128_i64[0], v0[1].n128_u64[1], v0[2].n128_i64[0], v0[2].n128_u64[1], v0[3].n128_i64[0], v0[3].n128_i64[1], v0[4].n128_i64[0], v0[4].n128_i64[1], v0[11].n128_u16[0] | (v0[11].n128_u8[2] << 16), v0[5], v0[6], v0[7], v0[8], v0[9]);
  __n128 v1 = sub_24F7773A4();
  sub_24F77F674(v2, v3, v4, v5, v6, v7, v8, v9, v0[21].n128_u16[4] | (v0[21].n128_u8[10] << 16), v1, v10, v11, v12, v13);
  sub_24F77F674(v0[22].n128_i64[0], v0[22].n128_u64[1], v0[23].n128_i64[0], v0[23].n128_u64[1], v0[24].n128_i64[0], v0[24].n128_i64[1], v0[25].n128_i64[0], v0[25].n128_i64[1], v0[32].n128_u16[0] | (v0[32].n128_u8[2] << 16), v0[26], v0[27], v0[28], v0[29], v0[30]);
  return swift_deallocObject();
}

uint64_t sub_24F81BD10(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x300000u) >> 16;
  return result;
}

uint64_t sub_24F81BD54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = MEMORY[0x263F8EE88];
    goto LABEL_25;
  }
  sub_24F781274(&qword_26B1F7F20);
  uint64_t result = sub_24F8CF7A0();
  uint64_t v3 = result;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  while (v4 < *(void *)(a1 + 16))
  {
    uint64_t v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t result = sub_24F8CFF80();
    uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
    uint64_t v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      uint64_t v14 = *(void *)(v3 + 48);
      uint64_t v15 = (void *)(v14 + 16 * v10);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (uint64_t result = sub_24F8CFD00(), (result & 1) != 0))
      {
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v17 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v17;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
    *(void *)(v5 + 8 * v11) = v13 | v12;
    uint64_t v20 = (void *)(*(void *)(v3 + 48) + 16 * v10);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = *(void *)(v3 + 16);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v23;
LABEL_22:
    if (++v4 == v24) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24F81BF24()
{
  sub_24F77F674(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 184) | (*(unsigned __int8 *)(v0 + 186) << 16), *(__n128 *)(v0 + 88), *(__n128 *)(v0 + 104), *(__n128 *)(v0 + 120), *(__n128 *)(v0 + 136), *(__n128 *)(v0 + 152));
  sub_24F77F674(*(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(unsigned __int16 *)(v0 + 352) | (*(unsigned __int8 *)(v0 + 354) << 16), *(__n128 *)(v0 + 256), *(__n128 *)(v0 + 272), *(__n128 *)(v0 + 288), *(__n128 *)(v0 + 304), *(__n128 *)(v0 + 320));
  return swift_deallocObject();
}

uint64_t sub_24F81BFCC(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x680000u) >> 16;
  return result;
}

uint64_t sub_24F81C010()
{
  return sub_24F81C0A8();
}

uint64_t sub_24F81C018(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x780000u) >> 16;
  return result;
}

uint64_t sub_24F81C05C(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0xA00000u) >> 16;
  return result;
}

uint64_t sub_24F81C0A0()
{
  return sub_24F81C0A8();
}

uint64_t sub_24F81C0A8()
{
  sub_24F77F674(v0[1].n128_i64[0], v0[1].n128_u64[1], v0[2].n128_i64[0], v0[2].n128_u64[1], v0[3].n128_i64[0], v0[3].n128_i64[1], v0[4].n128_i64[0], v0[4].n128_i64[1], v0[11].n128_u16[0] | (v0[11].n128_u8[2] << 16), v0[5], v0[6], v0[7], v0[8], v0[9]);
  return swift_deallocObject();
}

uint64_t sub_24F81C11C(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x900000u) >> 16;
  return result;
}

uint64_t sub_24F81C160()
{
  sub_24F77F674(v0[1].n128_i64[0], v0[1].n128_u64[1], v0[2].n128_i64[0], v0[2].n128_u64[1], v0[3].n128_i64[0], v0[3].n128_i64[1], v0[4].n128_i64[0], v0[4].n128_i64[1], v0[11].n128_u16[0] | (v0[11].n128_u8[2] << 16), v0[5], v0[6], v0[7], v0[8], v0[9]);
  __n128 v1 = sub_24F7773A4();
  sub_24F7AD880(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v10, v11, v12, v13, v14, v15, v16, v17, v0[20].n128_i64[1],
    v0[21].n128_i64[0],
    v0[21].n128_u16[4]);
  return swift_deallocObject();
}

uint64_t sub_24F81C1FC(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x500000u) >> 16;
  return result;
}

uint64_t sub_24F81C240()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F77F674(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned __int16 *)(v0 + 208) | (*(unsigned __int8 *)(v0 + 210) << 16), *(__n128 *)(v0 + 112), *(__n128 *)(v0 + 128), *(__n128 *)(v0 + 144), *(__n128 *)(v0 + 160), *(__n128 *)(v0 + 176));
  sub_24F77F674(*(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272), *(unsigned __int16 *)(v0 + 376) | (*(unsigned __int8 *)(v0 + 378) << 16), *(__n128 *)(v0 + 280), *(__n128 *)(v0 + 296), *(__n128 *)(v0 + 312), *(__n128 *)(v0 + 328), *(__n128 *)(v0 + 344));
  unint64_t v1 = *(void *)(v0 + 448);
  unint64_t v2 = *(void *)(v0 + 488);
  unsigned int v3 = *(unsigned __int16 *)(v0 + 544) | (*(unsigned __int8 *)(v0 + 546) << 16);
  BOOL v4 = v1 >> 1 != 0xFFFFFFFF || v2 > 1;
  if (v4 || (v3 & 0xFE7E00) != 0) {
    sub_24F76C98C(*(void *)(v0 + 384), *(void *)(v0 + 392), *(void *)(v0 + 400), *(void *)(v0 + 408), *(void *)(v0 + 416), *(void *)(v0 + 424), *(void *)(v0 + 432), *(void *)(v0 + 440), v1, *(void *)(v0 + 456), *(void *)(v0 + 464), *(void *)(v0 + 472), *(void *)(v0 + 480), v2, *(void *)(v0 + 496), *(void *)(v0 + 504), *(void *)(v0 + 512), *(void *)(v0 + 520), *(void *)(v0 + 528),
  }
      *(void *)(v0 + 536),
      v3);
  return swift_deallocObject();
}

uint64_t sub_24F81C370(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x400000u) >> 16;
  return result;
}

uint64_t sub_24F81C3B4(uint64_t a1)
{
  sub_24F7858A0();
  sub_24F76F948();
  uint64_t v25 = v2;
  sub_24F77C064();
  sub_24F80981C(v3, v10, v4, v5, v6, v7, v8, v9, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t sub_24F81C3F8(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x980000u) >> 16;
  return result;
}

uint64_t sub_24F81C43C()
{
  swift_release();
  sub_24F77F674(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 184) | (*(unsigned __int8 *)(v0 + 186) << 16), *(__n128 *)(v0 + 88), *(__n128 *)(v0 + 104), *(__n128 *)(v0 + 120), *(__n128 *)(v0 + 136), *(__n128 *)(v0 + 152));
  return swift_deallocObject();
}

uint64_t sub_24F81C4B4(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x700000u) >> 16;
  return result;
}

uint64_t sub_24F81C4F8()
{
  swift_bridgeObjectRelease();
  sub_24F77F674(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(unsigned __int16 *)(v0 + 200) | (*(unsigned __int8 *)(v0 + 202) << 16), *(__n128 *)(v0 + 104), *(__n128 *)(v0 + 120), *(__n128 *)(v0 + 136), *(__n128 *)(v0 + 152), *(__n128 *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_24F81C570(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x600000u) >> 16;
  return result;
}

uint64_t sub_24F81C5B4()
{
  sub_24F77F674(v0[1].n128_i64[0], v0[1].n128_u64[1], v0[2].n128_i64[0], v0[2].n128_u64[1], v0[3].n128_i64[0], v0[3].n128_i64[1], v0[4].n128_i64[0], v0[4].n128_i64[1], v0[11].n128_u16[0] | (v0[11].n128_u8[2] << 16), v0[5], v0[6], v0[7], v0[8], v0[9]);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F81C624(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x800000u) >> 16;
  return result;
}

uint64_t sub_24F81C668(__n128 *a1)
{
  __n128 v2 = sub_24F773BC8(a1);
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_u64[0], v2.n128_u64[1], v12, v13, v14);
  return v1;
}

uint64_t sub_24F81C6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_26B1F7350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F81C720()
{
  swift_bridgeObjectRelease();
  sub_24F77F674(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned __int16 *)(v0 + 192) | (*(unsigned __int8 *)(v0 + 194) << 16), *(__n128 *)(v0 + 96), *(__n128 *)(v0 + 112), *(__n128 *)(v0 + 128), *(__n128 *)(v0 + 144), *(__n128 *)(v0 + 160));
  sub_24F77F674(*(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(unsigned __int16 *)(v0 + 360) | (*(unsigned __int8 *)(v0 + 362) << 16), *(__n128 *)(v0 + 264), *(__n128 *)(v0 + 280), *(__n128 *)(v0 + 296), *(__n128 *)(v0 + 312), *(__n128 *)(v0 + 328));
  return swift_deallocObject();
}

uint64_t sub_24F81C7CC(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x380000u) >> 16;
  return result;
}

uint64_t sub_24F81C810(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = v2 | (*(unsigned __int8 *)(result + 2) << 16);
  uint64_t v4 = *(void *)(result - 56) & 1;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v3 & 0x81FF;
  *(unsigned char *)(result + 2) = (v3 & 0x1FFFF | 0x480000u) >> 16;
  return result;
}

uint64_t sub_24F81C854(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = MEMORY[0x263F8EE88];
    goto LABEL_13;
  }
  sub_24F781274(&qword_269A2A1C8);
  uint64_t result = sub_24F8CF7A0();
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 56;
  uint64_t v7 = ~(-1 << *(unsigned char *)(result + 32));
  while (v5 < *(void *)(a1 + 16))
  {
    uint64_t v8 = *(void *)(a1 + 32 + 8 * v5);
    uint64_t result = sub_24F8CFF20();
    unint64_t v9 = result & v7;
    unint64_t v10 = (result & (unint64_t)v7) >> 6;
    uint64_t v11 = *(void *)(v6 + 8 * v10);
    uint64_t v12 = 1 << (result & v7);
    uint64_t v13 = *(void *)(v3 + 48);
    if ((v12 & v11) != 0)
    {
      while (*(void *)(v13 + 8 * v9) != v8)
      {
        unint64_t v9 = (v9 + 1) & v7;
        unint64_t v10 = v9 >> 6;
        uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
        uint64_t v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0) {
          goto LABEL_8;
        }
      }
    }
    else
    {
LABEL_8:
      *(void *)(v6 + 8 * v10) = v12 | v11;
      *(void *)(v13 + 8 * v9) = v8;
      uint64_t v14 = *(void *)(v3 + 16);
      BOOL v15 = __OFADD__(v14, 1);
      uint64_t v16 = v14 + 1;
      if (v15) {
        goto LABEL_15;
      }
      *(void *)(v3 + 16) = v16;
    }
    if (++v5 == v4) {
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

unsigned char *sub_24F81C990(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F81CA5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLExpression.EqualityOperator()
{
}

uint64_t sub_24F81CA94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24F81CACC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_24F81CB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_24F81CB64(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F81CBA4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLExpression.UnaryOperator()
{
}

void type metadata accessor for SQLExpression.EscapableBinaryOperator()
{
}

void type metadata accessor for SQLExpression.BinaryOperator()
{
}

unint64_t sub_24F81CC0C()
{
  unint64_t result = qword_269A2B398;
  if (!qword_269A2B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B398);
  }
  return result;
}

unint64_t sub_24F81CC5C()
{
  unint64_t result = qword_269A2B3A0;
  if (!qword_269A2B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B3A0);
  }
  return result;
}

unint64_t sub_24F81CCAC()
{
  unint64_t result = qword_269A2B3A8;
  if (!qword_269A2B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B3A8);
  }
  return result;
}

void *sub_24F81CCFC(void *a1)
{
  return memcpy(a1, &STACK[0x200], 0xA3uLL);
}

uint64_t sub_24F81CD14()
{
  return sub_24F781F10(0, 0, 4);
}

uint64_t sub_24F81CD3C(uint64_t a1, unint64_t a2, char a3)
{
  sub_24F781F10(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

void sub_24F81CD80()
{
  *(void *)(v0 + 960) = 40;
  *(void *)(v0 + 968) = 0xE100000000000000;
}

void sub_24F81CD98()
{
  sub_24F80E934(v1, v3, v2, v0);
}

uint64_t sub_24F81CDC8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  unint64_t v3 = *(void *)(v0 + 16);
  int v4 = *(_DWORD *)(v0 + 36);
  return sub_24F781F10(v2, v3, v4);
}

void *sub_24F81CDE4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char __dst)
{
  uint64_t v52 = (const void *)(*a1 + 16);
  return memcpy(&__dst, v52, 0xB8uLL);
}

void *sub_24F81CE08(void *a1)
{
  return memcpy(a1, &STACK[0x4C8], 0xA3uLL);
}

void sub_24F81CE20()
{
  *(void *)(v0 + 792) = 34;
  *(void *)(v0 + 800) = 0xE100000000000000;
}

uint64_t sub_24F81CE38()
{
  return sub_24F814C38(v0);
}

uint64_t sub_24F81CE6C()
{
  return sub_24F781F10(v2, v1, v0);
}

uint64_t sub_24F81CE88()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_24F81990C(v2, v3);
}

uint64_t sub_24F81CEAC()
{
  return v0;
}

void sub_24F81CEBC()
{
  sub_24F813544();
}

void *sub_24F81CED8(void *a1)
{
  return memcpy(a1, &STACK[0x3F8], 0xA3uLL);
}

void *sub_24F81CEF0(uint64_t a1, const void *a2)
{
  return memcpy(&STACK[0x3F8], a2, 0xA3uLL);
}

uint64_t sub_24F81CF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  return a41;
}

void sub_24F81CF2C()
{
  sub_24F8183E4();
}

uint64_t sub_24F81CF48()
{
  uint64_t v2 = *(void *)(v0 + 800);
  *(void *)(v0 + 792) = *(void *)(v0 + 792);
  *(void *)(v0 + 800) = v2;
  return swift_bridgeObjectRetain();
}

void sub_24F81CF80()
{
  STACK[0x618] = v0;
}

void *sub_24F81CF8C(uint64_t a1, const void *a2)
{
  return memcpy((void *)(v2 + 792), a2, 0xA3uLL);
}

void *sub_24F81CFA4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char __dst)
{
  return memcpy(&__dst, (const void *)(a1 + 16), 0xB8uLL);
}

uint64_t sub_24F81CFC4()
{
  return v0;
}

uint64_t sub_24F81CFD8()
{
  return v0;
}

uint64_t sub_24F81CFEC()
{
  return sub_24F76F86C((__n128 *)&STACK[0x2C0]);
}

uint64_t sub_24F81D004()
{
  return sub_24F76F774(v0 - 256);
}

uint64_t sub_24F81D020()
{
  return sub_24F76F774(v0 - 256);
}

uint64_t sub_24F81D03C()
{
  return sub_24F76F774(v0 - 232);
}

uint64_t sub_24F81D05C()
{
  return sub_24F76F774(v0 - 232);
}

uint64_t sub_24F81D078()
{
  return sub_24F81990C(v1, v0);
}

void *sub_24F81D098(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, v10, 0xA2uLL);
}

void *sub_24F81D0B8(void *a1)
{
  return memcpy(a1, &STACK[0x358], 0xA3uLL);
}

void *sub_24F81D0D0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char __src)
{
  return memcpy(a1, &__src, 0xA3uLL);
}

void NSDecimal.databaseValue.getter(unint64_t a1@<X0>, unint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t *a4@<X8>)
{
  __int16 v4 = a3;
  __int16 v5 = a2;
  int v6 = a1;
  uint64_t v25 = a4;
  unint64_t v7 = HIDWORD(a1);
  unint64_t v8 = HIWORD(a1);
  unint64_t v9 = a2 >> 16;
  unint64_t v10 = HIDWORD(a2);
  unint64_t v23 = HIWORD(a2);
  unsigned int v24 = HIWORD(a3);
  uint64_t v11 = sub_24F8CE9F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_allocWithZone(MEMORY[0x263F087B0]);
  int v26 = v6;
  __int16 v27 = v7;
  __int16 v28 = v8;
  __int16 v29 = v5;
  __int16 v30 = v9;
  __int16 v31 = v10;
  __int16 v32 = v23;
  __int16 v33 = v4;
  __int16 v34 = v24;
  id v16 = objc_msgSend(v15, sel_initWithDecimal_, &v26);
  sub_24F8CE9D0();
  unint64_t v17 = (void *)sub_24F8CE9E0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v18 = objc_msgSend(v16, sel_descriptionWithLocale_, v17);

  uint64_t v19 = sub_24F8CED80();
  uint64_t v21 = v20;

  uint64_t v22 = v25;
  *uint64_t v25 = v19;
  v22[1] = v21;
  *((unsigned char *)v22 + 16) = 2;
}

uint64_t static NSDecimal.fromDatabaseValue(_:)(uint64_t a1)
{
  uint64_t v3 = sub_24F781274(&qword_26B1F5388);
  MEMORY[0x270FA5388](v3 - 8);
  sub_24F77F698();
  double v4 = *(double *)a1;
  int v5 = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    sub_24F8CF600();
LABEL_6:
    sub_24F77E0E4();
    return *(void *)&v4;
  }
  if (v5 != 2)
  {
    if (v5 != 1)
    {
      double v4 = 0.0;
      return *(void *)&v4;
    }
    MEMORY[0x253363E40](*(double *)a1);
    goto LABEL_6;
  }
  if (qword_269A2A338 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24F8CE9F0();
  uint64_t v7 = sub_24F79F3A0(v6, (uint64_t)qword_269A2B3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v1, v7, v6);
  sub_24F7771BC(v1, 0, 1, v6);
  sub_24F8CF5E0();
  sub_24F77E0E4();
  sub_24F81D968(v1);
  return *(void *)&v4;
}

void sub_24F81D44C(uint64_t *a1@<X8>)
{
  NSDecimal.databaseValue.getter(*(void *)v1, *(void *)(v1 + 8), *(_DWORD *)(v1 + 16), a1);
}

uint64_t sub_24F81D458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = static NSDecimal.fromDatabaseValue(_:)(a1);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 20) = v6 & 1;
  return result;
}

void __swiftcall NSDecimal.init(sqliteStatement:index:)(NSDecimal_optional *__return_ptr retstr, Swift::OpaquePointer sqliteStatement, Swift::Int32 index)
{
  uint64_t v4 = sub_24F781274(&qword_26B1F5388);
  MEMORY[0x270FA5388](v4 - 8);
  sub_24F77F698();
  int v5 = (sqlite3_stmt *)sub_24F77AD28();
  int v7 = sqlite3_column_type(v5, v6);
  switch(v7)
  {
    case 3:
      uint64_t v13 = (sqlite3_stmt *)sub_24F77AD28();
      if (sqlite3_column_text(v13, v14))
      {
        sub_24F8CEEE0();
        if (qword_269A2A338 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_24F8CE9F0();
        uint64_t v16 = sub_24F79F3A0(v15, (uint64_t)qword_269A2B3B0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v3, v16, v15);
        sub_24F7771BC(v3, 0, 1, v15);
        sub_24F8CF5E0();
        sub_24F77E0E4();
        swift_bridgeObjectRelease();
        sub_24F81D968(v3);
      }
      else
      {
        __break(1u);
      }
      break;
    case 2:
      unint64_t v10 = (sqlite3_stmt *)sub_24F77AD28();
      double v12 = sqlite3_column_double(v10, v11);
      MEMORY[0x253363E40](v12);
      goto LABEL_6;
    case 1:
      unint64_t v8 = (sqlite3_stmt *)sub_24F77AD28();
      sqlite3_column_int64(v8, v9);
      sub_24F8CF600();
LABEL_6:
      sub_24F77E0E4();
      break;
  }
}

uint64_t _posixLocale.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269A2A338 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24F8CE9F0();
  uint64_t v3 = sub_24F79F3A0(v2, (uint64_t)qword_269A2B3B0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_24F81D708@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24F781274(&qword_26B1F5388);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sqlite3_column_type(a1, a2);
  if (result != 3)
  {
    if (result == 2)
    {
      double v12 = sqlite3_column_double(a1, a2);
      uint64_t result = MEMORY[0x253363E40](v12);
    }
    else
    {
      if (result != 1)
      {
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        LODWORD(v15) = 0;
        char v16 = 1;
        goto LABEL_14;
      }
      sqlite3_column_int64(a1, a2);
      uint64_t result = sub_24F8CF600();
    }
    uint64_t v13 = result;
    uint64_t v14 = v10;
    LODWORD(v15) = v11;
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sqlite3_column_text(a1, a2);
  if (result)
  {
    sub_24F8CEEE0();
    if (qword_269A2A338 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_24F8CE9F0();
    uint64_t v18 = sub_24F79F3A0(v17, (uint64_t)qword_269A2B3B0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v18, v17);
    char v16 = 1;
    sub_24F7771BC((uint64_t)v8, 0, 1, v17);
    uint64_t v13 = sub_24F8CF5E0();
    uint64_t v14 = v19;
    uint64_t v15 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = sub_24F81D968((uint64_t)v8);
    if ((v15 & 0x100000000) != 0)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      LODWORD(v15) = 0;
      goto LABEL_14;
    }
LABEL_7:
    char v16 = 0;
LABEL_14:
    *(void *)a3 = v13;
    *(void *)(a3 + 8) = v14;
    *(_DWORD *)(a3 + 16) = v15;
    *(unsigned char *)(a3 + 20) = v16;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F81D900()
{
  uint64_t v0 = sub_24F8CE9F0();
  sub_24F79F440(v0, qword_269A2B3B0);
  sub_24F79F3A0(v0, (uint64_t)qword_269A2B3B0);
  return sub_24F8CE9D0();
}

uint64_t sub_24F81D968(uint64_t a1)
{
  uint64_t v2 = sub_24F781274(&qword_26B1F5388);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F81D9C8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_24F81DA10(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_24F794BD8);
}

uint64_t sub_24F81D9E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_24F81DA10(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_24F794E84);
}

uint64_t sub_24F81D9F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_24F81DA10(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_24F795440);
}

uint64_t sub_24F81DA10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  if ((a4 & 1) == 0) {
    goto LABEL_2;
  }
  sub_24F8CFD90();
  swift_unknownObjectRetain_n();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v12 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    uint64_t v10 = a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
LABEL_9:
  swift_unknownObjectRelease();
  return v10;
}

uint64_t Database.makeTokenizer(_:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = sub_24F7CF11C(v2);
  uint64_t v5 = swift_slowAlloc();
  uint64_t result = swift_slowAlloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(v4 + 16);
  if (!v7) {
    goto LABEL_9;
  }
  if (!*(void *)(v3 + 16))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v8 = (uint64_t *)result;
  uint64_t v9 = sub_24F8CEE30();
  int v10 = v7(v4, v9 + 32, v8, v5);
  swift_release();
  if (!v10)
  {
    uint64_t v26 = *v8;
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, void *))v5;
    uint64_t v16 = *(void *)(v5 + 8);
    uint64_t v17 = *(void *)(v5 + 16);
    uint64_t v18 = sub_24F81DE04(1, v3);
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    unint64_t v24 = v23;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24F81DA10(v18, v20, v22, v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_24F79504C);
    _s23FTS5RegisteredTokenizerCMa();
    swift_allocObject();
    uint64_t v12 = sub_24F81E4D8(v15, v16, v17, v26, v25);
    sub_24F77FE20();
    sub_24F77FE20();
    return (uint64_t)v12;
  }
  sub_24F7DC6DC();
  swift_allocError();
  uint64_t v12 = v11;
  uint64_t result = (uint64_t)sqlite3_errstr(v10);
  if (result)
  {
    uint64_t v13 = sub_24F8CEED0();
    *(_DWORD *)uint64_t v12 = v10;
    v12[1] = v13;
    void v12[2] = v14;
    *(_OWORD *)(v12 + 3) = 0u;
    *(_OWORD *)(v12 + 5) = 0u;
    *((unsigned char *)v12 + 56) = 0;
    swift_willThrow();
    sub_24F77FE20();
    sub_24F77FE20();
    return (uint64_t)v12;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t FTS5Tokenizer.tokenize(query:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = 1;
  return sub_24F81DFE4(a1, a2, &v5, a3, a4);
}

unint64_t sub_24F81DD3C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 < result >> 14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = sub_24F8CEFA0();
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t _s23FTS5RegisteredTokenizerCMa()
{
  return self;
}

uint64_t sub_24F81DE04(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t FTS5Tokenization.rawValue.getter()
{
  return *v0;
}

uint64_t FTS5Tokenization.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static FTS5Tokenization.query.getter(_DWORD *a1@<X8>)
{
}

void static FTS5Tokenization.prefix.getter(_DWORD *a1@<X8>)
{
}

void static FTS5Tokenization.document.getter(_DWORD *a1@<X8>)
{
}

void static FTS5Tokenization.aux.getter(_DWORD *a1@<X8>)
{
}

uint64_t sub_24F81DE68@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return FTS5Tokenization.init(rawValue:)(*a1, a2);
}

uint64_t sub_24F81DE74(unsigned int *a1)
{
  return sub_24F8AA264(*a1, *v1);
}

uint64_t sub_24F81DE80(unsigned int *a1)
{
  return sub_24F8AA280(*a1, *v1);
}

uint64_t sub_24F81DE8C(unsigned int *a1)
{
  return sub_24F85956C(*a1, *v1);
}

uint64_t sub_24F81DE98(unsigned int *a1)
{
  return sub_24F8AA288(*a1, *v1);
}

uint64_t sub_24F81DEA4(uint64_t a1, unsigned int *a2)
{
  return sub_24F85954C(a1, *a2);
}

uint64_t sub_24F81DEAC(unsigned int *a1)
{
  return sub_24F8A2C78(*a1);
}

uint64_t sub_24F81DEB4(unsigned int *a1)
{
  return sub_24F8A2CC0(*a1);
}

uint64_t sub_24F81DEBC(unsigned int *a1)
{
  return sub_24F85955C(*a1);
}

uint64_t sub_24F81DEC4(unsigned int *a1)
{
  return sub_24F859554(*a1);
}

uint64_t sub_24F81DECC(unsigned int *a1)
{
  return sub_24F8AA260(*a1);
}

uint64_t sub_24F81DED4(unsigned int *a1)
{
  return sub_24F8AA2A0(*a1, *v1);
}

uint64_t sub_24F81DEE0(unsigned int *a1)
{
  return sub_24F8AA270(*a1, *v1);
}

uint64_t sub_24F81DEEC(unsigned int *a1)
{
  return sub_24F8AA278(*a1, *v1);
}

BOOL sub_24F81DEF8()
{
  return sub_24F8A2D7C(*v0);
}

uint64_t sub_24F81DF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

uint64_t sub_24F81DF18(unsigned int *a1)
{
  return sub_24F8AA238(*a1);
}

uint64_t sub_24F81DF20@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = FTS5Tokenization.init(rawValue:)(*a1, (_DWORD *)a2);
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_24F81DF4C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = FTS5Tokenization.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_24F81DF78()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t FTS5Tokenizer.tokenize(document:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = 4;
  return sub_24F81DFE4(a1, a2, &v5, a3, a4);
}

uint64_t sub_24F81DFE4(uint64_t a1, unint64_t a2, int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v6;
  int v12 = *a3;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24F87CFA4(a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v16[2] = a4;
  v16[3] = a5;
  uint64_t v17 = v5;
  int v18 = v12;
  uint64_t v14 = sub_24F81E494((void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_24F81EDCC, (uint64_t)v16, v13);
  swift_release();
  if (!v7)
  {
    a5 = sub_24F7E6474((uint64_t)v14);
    swift_bridgeObjectRelease();
  }
  return a5;
}

uint64_t sub_24F81E0B8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  v18[1] = *MEMORY[0x263EF8340];
  if (!result)
  {
    *a7 = MEMORY[0x263F8EE78];
    return result;
  }
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (a2 > 0x7FFFFFFF) {
    goto LABEL_9;
  }
  uint64_t v14 = result;
  type metadata accessor for TokenizeContext();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = MEMORY[0x263F8EE78];
  v18[0] = v15;
  sub_24F81E1F4((uint64_t)v18, a3, a4, v14, a2, a5, a6, &v17);
  if (v7) {
    return swift_release();
  }
  uint64_t v16 = *(void *)(v18[0] + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  *a7 = v16;
  return result;
}

uint64_t sub_24F81E1F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  int v16 = a3;
  uint64_t result = (*(uint64_t (**)(uint64_t, int *, uint64_t, uint64_t, uint64_t (*)()))(a7 + 8))(a1, &v16, a4, a5, sub_24F81E490);
  if (result)
  {
    int v10 = result;
    sub_24F7DC6DC();
    uint64_t v11 = swift_allocError();
    uint64_t v13 = v12;
    uint64_t result = (uint64_t)sqlite3_errstr(v10);
    if (result)
    {
      uint64_t v14 = sub_24F8CEED0();
      *(_DWORD *)uint64_t v13 = v10;
      *(void *)(v13 + 8) = v14;
      *(void *)(v13 + 16) = v15;
      *(_OWORD *)(v13 + 24) = 0u;
      *(_OWORD *)(v13 + 40) = 0u;
      *(unsigned char *)(v13 + 56) = 0;
      uint64_t result = swift_willThrow();
      *a8 = v11;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24F81E2CC(uint64_t *a1, int a2, uint64_t a3, int a4)
{
  uint64_t v8 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_24F8CE860();
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 1;
  }
  if (a3)
  {
    (*(void (**)(char *, void))(v10 + 104))(v12, *MEMORY[0x263F06F00]);
    uint64_t v13 = MEMORY[0x2533630C0](a3, a4, v12);
    unint64_t v15 = v14;
    sub_24F8CEDC0();
    uint64_t v16 = sub_24F8CEDA0();
    uint64_t v18 = v17;
    sub_24F783E24(v13, v15);
    if (v18)
    {
      uint64_t v19 = *a1;
      swift_retain();
      sub_24F786C38();
      uint64_t v20 = *(void *)(*(void *)(v19 + 16) + 16);
      sub_24F786FC8();
      uint64_t v21 = *(void *)(v19 + 16);
      *(void *)(v21 + 16) = v20 + 1;
      uint64_t v22 = v21 + 24 * v20;
      *(void *)(v22 + 32) = v16;
      *(void *)(v22 + 40) = v18;
      *(_DWORD *)(v22 + 48) = a2;
      swift_release();
    }
  }
  return 0;
}

void *sub_24F81E494(void *(*a1)(uint64_t *__return_ptr, uint64_t, void), uint64_t a2, uint64_t a3)
{
  uint64_t result = a1(&v5, a3 + 32, *(void *)(a3 + 16));
  if (!v3) {
    return (void *)v5;
  }
  return result;
}

void *sub_24F81E4D8(uint64_t (*a1)(uint64_t, uint64_t, unint64_t, void *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v27[1] = *MEMORY[0x263EF8340];
  uint64_t v8 = *v5;
  if (!a1)
  {
    swift_bridgeObjectRelease();
    sub_24F7DC6DC();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 1;
    *(void *)(v16 + 8) = 0xD00000000000001ALL;
    *(void *)(v16 + 16) = 0x800000024F8D2C20;
    *(_OWORD *)(v16 + 24) = 0u;
    *(_OWORD *)(v16 + 40) = 0u;
    *(unsigned char *)(v16 + 56) = 0;
LABEL_15:
    swift_willThrow();
    swift_deallocPartialClassInstance();
    return v6;
  }
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v27[0] = 0;
  unint64_t v11 = *(void *)(a5 + 16);
  if (v11)
  {
    v25[12] = v8;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_24F795EB8(0, v11, 0);
    uint64_t v13 = MEMORY[0x270FA5388](v12);
    v25[8] = a1;
    v25[9] = a4;
    v25[10] = v27;
    unint64_t v14 = *(void *)(v26 + 16);
    if (v14 == v11)
    {
      if (!(v11 >> 31))
      {
        swift_retain();
        unsigned int v15 = a1(a4, v26 + 32, v11, v27);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_12;
      }
      __break(1u);
    }
    else if (v14 < *(void *)(a5 + 16))
    {
      uint64_t v17 = a5 + 16 * v14;
      uint64_t v18 = *(void *)(v17 + 32);
      uint64_t v19 = *(void *)(v17 + 40);
      MEMORY[0x270FA5388](v13);
      v25[2] = &v26;
      v25[3] = a5;
      v25[4] = sub_24F81EDF0;
      v25[5] = v20;
      swift_bridgeObjectRetain();
      unsigned int v15 = sub_24F81EBA0((uint64_t)sub_24F81EE28, (uint64_t)v25, v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_12:
      swift_release();
      if (v15) {
        goto LABEL_13;
      }
      goto LABEL_8;
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
  unsigned int v15 = a1(a4, 0, 0, v27);
  if (v15)
  {
LABEL_13:
    sub_24F7DC6DC();
    swift_allocError();
    *(_DWORD *)uint64_t v21 = v15;
    unint64_t v22 = 0xD00000000000001DLL;
    unint64_t v23 = 0x800000024F8D2C40;
LABEL_14:
    *(void *)(v21 + 8) = v22;
    *(void *)(v21 + 16) = v23;
    *(_OWORD *)(v21 + 24) = 0u;
    *(_OWORD *)(v21 + 40) = 0u;
    *(unsigned char *)(v21 + 56) = 0;
    goto LABEL_15;
  }
LABEL_8:
  if (!v27[0])
  {
    sub_24F7DC6DC();
    swift_allocError();
    *(_DWORD *)uint64_t v21 = 0;
    unint64_t v23 = 0xED000072657A696ELL;
    unint64_t v22 = 0x656B6F74206C696ELL;
    goto LABEL_14;
  }
  void v6[5] = v27[0];
  return v6;
}

unint64_t sub_24F81E854()
{
  unint64_t result = qword_269A2B3C8;
  if (!qword_269A2B3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B3C8);
  }
  return result;
}

unint64_t sub_24F81E8A4()
{
  unint64_t result = qword_269A2B3D0;
  if (!qword_269A2B3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B3D0);
  }
  return result;
}

unint64_t sub_24F81E8F4()
{
  unint64_t result = qword_269A2B3D8;
  if (!qword_269A2B3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B3D8);
  }
  return result;
}

unint64_t sub_24F81E944()
{
  unint64_t result = qword_269A2B3E0;
  if (!qword_269A2B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B3E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FTS5Tokenization()
{
  return &type metadata for FTS5Tokenization;
}

uint64_t dispatch thunk of FTS5Tokenizer.tokenize(context:tokenization:pText:nText:tokenCallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t type metadata accessor for TokenizeContext()
{
  return self;
}

void *sub_24F81E9D8(void *result, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4)
{
  unint64_t v6 = *(void *)(*(void *)a2 + 16);
  unint64_t v7 = result[2];
  if (v6 == v7)
  {
    uint64_t v8 = swift_retain();
    a3(&v16, v8);
    swift_release();
    return (void *)v16;
  }
  if (v6 < v7)
  {
    uint64_t v10 = &result[2 * v6];
    uint64_t v11 = v10[4];
    uint64_t v12 = v10[5];
    uint64_t v13 = MEMORY[0x270FA5388](result);
    uint64_t v15[2] = v14;
    v15[3] = v13;
    long long v15[4] = a3;
    v15[5] = a4;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24F81EBA0((uint64_t)sub_24F81EE8C, (uint64_t)v15, v11, v12);
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

void *sub_24F81EACC(uint64_t a1, uint64_t *a2, void *a3, void (*a4)(uint64_t *__return_ptr, uint64_t), uint64_t a5)
{
  uint64_t v10 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_24F795EB8(0, *(void *)(v10 + 16) + 1, 1);
    uint64_t v10 = *a2;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    sub_24F795EB8(v12 > 1, v13 + 1, 1);
    uint64_t v10 = *a2;
  }
  *(void *)(v10 + 16) = v13 + 1;
  *(void *)(v10 + 8 * v13 + 32) = a1;
  *a2 = v10;
  return sub_24F81E9D8(a3, (uint64_t)a2, a4, a5);
}

void *sub_24F81EBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  void *result;
  void v11[2];
  uint64_t v12;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    unint64_t result = (void *)sub_24F8CF7C0();
    if (!v4) {
      return (void *)HIDWORD(v12);
    }
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v11[0] = v5;
      v11[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      unint64_t result = v7(&v12, v11);
      if (!v4) {
        return (void *)v12;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_24F8CF860();
      }
      return sub_24F81ED70(v8, v9, (void *(*)(uint64_t *__return_ptr))sub_24F81EE48);
    }
  }
  return result;
}

uint64_t sub_24F81ECB4@<X0>(uint64_t result@<X0>, uint64_t (*a2)(uint64_t, uint64_t, unint64_t)@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  unint64_t v5 = *(void *)(result + 16);
  if (v5 >> 31)
  {
    __break(1u);
  }
  else
  {
    unint64_t result = a2(a3, result + 32, v5);
    *a4 = result;
  }
  return result;
}

uint64_t sub_24F81ECFC()
{
  uint64_t v1 = *(void (**)(void))(v0 + 24);
  if (v1) {
    v1(*(void *)(v0 + 40));
  }
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_24F81ED3C(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t, uint64_t))(v5 + 32);
  if (v6) {
    return v6(*(void *)(v5 + 40), a1, *a2, a3, a4, a5);
  }
  else {
    return 1;
  }
}

void *sub_24F81ED70(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    unint64_t result = a3(&v5);
    if (!v3) {
      return (void *)v5;
    }
  }
  else
  {
    unint64_t result = ((void *(*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3) {
      return (void *)HIDWORD(v5);
    }
  }
  return result;
}

uint64_t sub_24F81EDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F81E0B8(a1, a2, *(void *)(v3 + 32), *(_DWORD *)(v3 + 40), *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_24F81EDF0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24F81ECB4(a1, *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v2 + 16), *(void *)(v2 + 24), a2);
}

void *sub_24F81EDFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void (*a4)(uint64_t *__return_ptr, uint64_t)@<X3>, uint64_t a5@<X4>, _DWORD *a6@<X8>)
{
  unint64_t result = sub_24F81EACC(a1, a2, a3, a4, a5);
  if (!v6) {
    *a6 = result;
  }
  return result;
}

void *sub_24F81EE28@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24F81EDFC(a1, *(uint64_t **)(v2 + 16), *(void **)(v2 + 24), *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 32), *(void *)(v2 + 40), a2);
}

void *sub_24F81EE48@<X0>(_DWORD *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_24F81EE8C()
{
  return sub_24F81EE28();
}

GRDBInternal::PersistenceConflictPolicy __swiftcall PersistenceConflictPolicy.init(insert:update:)(GRDBInternal::Database::ConflictResolution insert, GRDBInternal::Database::ConflictResolution update)
{
  char v3 = *(unsigned char *)update;
  *uint64_t v2 = *(unsigned char *)insert;
  v2[1] = v3;
  result.conflictResolutionForInsert = insert;
  return result;
}

uint64_t sub_24F81EEB8()
{
  sub_24F7752F0();
  swift_allocObject();
  sub_24F826CCC();
  sub_24F8237BC();
  return v0;
}

#error "24F81EFD0: call analysis failed (funcsize=77)"

uint64_t sub_24F81F03C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  int v3 = *(unsigned __int8 *)(v0 + 72);
  if (*(unsigned char *)(v0 + 72))
  {
    if (v3 == 1) {
      uint64_t v4 = *(_OWORD **)(v0 + 56);
    }
    else {
      uint64_t v4 = &unk_270104668;
    }
  }
  else
  {
    sub_24F781274((uint64_t *)&unk_26B1F7C88);
    uint64_t v4 = (_OWORD *)swift_allocObject();
    v4[1] = xmmword_24F8DDBF0;
    *((void *)v4 + 4) = v1;
    *((void *)v4 + 5) = v2;
  }
  sub_24F7903D0(v1, v2, v3);
  uint64_t v5 = sub_24F81FE68((void (*)(uint64_t *__return_ptr, void *))sub_24F826498, v0, (uint64_t)v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_24F7C7D98(v5);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_24F790850();
  uint64_t v9 = swift_allocError();
  *uint64_t v10 = v8;
  v10[1] = v7;
  v10[2] = v6;
  swift_bridgeObjectRetain();
  return v9;
}

void sub_24F81F144()
{
  sub_24F76FF94();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  unint64_t v6 = *v5;
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 64);
  int v9 = *(unsigned __int8 *)(v0 + 72);
  if (v9)
  {
    if (v9 == 1) {
      uint64_t v10 = (_OWORD *)v7;
    }
    else {
      uint64_t v10 = &unk_270104608;
    }
  }
  else
  {
    sub_24F781274((uint64_t *)&unk_26B1F7C88);
    uint64_t v10 = (_OWORD *)sub_24F76BAD0();
    v10[1] = xmmword_24F8DDBF0;
    *((void *)v10 + 4) = v7;
    *((void *)v10 + 5) = v8;
  }
  sub_24F7903D0(v7, v8, v9);
  uint64_t v11 = v1;
  if (!*(void *)(sub_24F81FB48((void (*)(long long *__return_ptr, void *))sub_24F8263D4, v2, (uint64_t)v10)+ 16))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_41:
    sub_24F77BC10();
    return;
  }
  while (1)
  {
    sub_24F77B5D4();
    BOOL v14 = v14 && v13 == 0;
    if (!v14) {
      break;
    }
    if (v12 == 1) {
      goto LABEL_13;
    }
  }
  uint64_t v15 = *(void *)(v4 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v66 = v2;
  char v67 = v10;
  if (!v15)
  {
LABEL_24:
    sub_24F78E25C(v16);
    uint64_t v32 = *(void *)(v2 + 24);
    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      uint64_t v69 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_24F826BBC();
      uint64_t v34 = v69;
      uint64_t v35 = v32 + 40;
      do
      {
        uint64_t v36 = sub_24F8CED00();
        uint64_t v38 = v37;
        sub_24F778CE4();
        if (v39)
        {
          sub_24F826B3C();
          uint64_t v34 = v69;
        }
        v35 += 16;
        *(void *)(v34 + 16) = v7;
        uint64_t v40 = v34 + 16 * v6;
        *(void *)(v40 + 32) = v36;
        *(void *)(v40 + 40) = v38;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      uint64_t v11 = v1;
      uint64_t v10 = v67;
    }
    sub_24F824FFC();
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = *((void *)v10 + 2);
    uint64_t v44 = MEMORY[0x263F8EE78];
    if (v43)
    {
      uint64_t v69 = MEMORY[0x263F8EE78];
      sub_24F77C4AC();
      uint64_t v44 = v69;
      BOOL v45 = (char *)v10 + 40;
      do
      {
        uint64_t v46 = sub_24F8CED00();
        uint64_t v48 = v47;
        sub_24F778CE4();
        if (v39)
        {
          sub_24F826B3C();
          uint64_t v44 = v69;
        }
        v45 += 16;
        *(void *)(v44 + 16) = v7;
        uint64_t v49 = v44 + 16 * v6;
        *(void *)(v49 + 32) = v46;
        *(void *)(v49 + 40) = v48;
        --v43;
      }
      while (v43);
    }
    sub_24F82514C(v44, v42);
    uint64_t v51 = v50;
    swift_bridgeObjectRelease();
    uint64_t v52 = *(void *)(v66 + 40);
    uint64_t v53 = *(void *)(v66 + 48);
    uint64_t v54 = Database.columns(in:)(v52, v53);
    if (v11)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = sub_24F7EEE74(v54);
      swift_bridgeObjectRelease();
      sub_24F8206E4(v55, v51);
      uint64_t v57 = v56;
      if (*(void *)(v56 + 16))
      {
        uint64_t v58 = v67;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v58 = v67;
        swift_bridgeObjectRetain();
        uint64_t v57 = (uint64_t)v67;
      }
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_24F81FB48((void (*)(long long *__return_ptr, void *))sub_24F8263D4, v66, v57);
      swift_bridgeObjectRelease();
      uint64_t v70 = v52;
      uint64_t v71 = v53;
      uint64_t v72 = v57;
      uint64_t v73 = v58;
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_24F824080();
      uint64_t v62 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F772E94(v60, v62);
      swift_bridgeObjectRelease();
      uint64_t v69 = v59;
      sub_24F76D490();
      MEMORY[0x270FA5388](v63);
      sub_24F781274(&qword_26B1F7348);
      sub_24F778988((unint64_t *)&qword_26B1F72B0, &qword_26B1F7348);
      swift_getKeyPath();
      swift_retain();
      uint64_t v64 = sub_24F87F4C4(v59);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v69 = v64;
      uint64_t v70 = MEMORY[0x263F8EE80];
      v65.values._rawValue = &v69;
      Statement.setUncheckedArguments(_:)(v65);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_41;
  }
  uint64_t v69 = MEMORY[0x263F8EE78];
  sub_24F826BBC();
  uint64_t v17 = sub_24F8265A4(v4);
  int v19 = v18;
  uint64_t v68 = v4 + 56;
  while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(unsigned char *)(v4 + 32))
  {
    if (((*(void *)(v68 + (((unint64_t)v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
      goto LABEL_43;
    }
    if (*(_DWORD *)(v4 + 36) != v19) {
      goto LABEL_44;
    }
    uint64_t v7 = sub_24F8CED00();
    uint64_t v21 = v20;
    uint64_t v69 = v16;
    uint64_t v22 = v4;
    unint64_t v23 = *(void *)(v16 + 16);
    unint64_t v6 = v23 + 1;
    if (v23 >= *(void *)(v16 + 24) >> 1)
    {
      sub_24F77C4AC();
      uint64_t v16 = v69;
    }
    *(void *)(v16 + 16) = v6;
    uint64_t v24 = v16 + 16 * v23;
    *(void *)(v24 + 32) = v7;
    *(void *)(v24 + 40) = v21;
    int64_t v25 = sub_24F772990();
    uint64_t v17 = sub_24F8264BC(v25, v26, v27, v22);
    int v19 = v28;
    --v15;
    uint64_t v4 = v22;
    if (!v15)
    {
      uint64_t v29 = sub_24F772990();
      sub_24F7705C4(v29, v30, v31);
      uint64_t v11 = v1;
      uint64_t v2 = v66;
      uint64_t v10 = v67;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

void PersistableRecord.performSave(_:)(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_24F76B74C();
  sub_24F826C64();
  sub_24F822CD0();
  if (!v26)
  {
    if (v27)
    {
      MutablePersistableRecord.update(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = sub_24F826B20();
      v29(v28);
    }
  }
  sub_24F771078();
}

BOOL MutablePersistableRecord.performDelete(_:)()
{
  sub_24F77AD10();
  MEMORY[0x270FA5388](v1);
  type metadata accessor for DAO();
  uint64_t v2 = sub_24F774490();
  v3(v2);
  swift_retain();
  sub_24F81EEB8();
  if (!v0)
  {
    sub_24F82300C();
    uint64_t v6 = v5;
    swift_release();
    if (v6)
    {
      v12[0] = 0;
      v12[1] = 0;
      int v9 = v12;
      Statement.execute(arguments:)(*(GRDBInternal::StatementArguments_optional *)(&v7 - 1));
      if (v10)
      {
        swift_release();
      }
      else
      {
        uint64_t v11 = Database.changesCount.getter();
        swift_release();
        return v11 > 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_24F81F9EC()
{
  return MutablePersistableRecord.exists(_:)() & 1;
}

uint64_t MutablePersistableRecord.exists(_:)()
{
  MutablePersistableRecord.performExists(_:)();
  return v0 & 1;
}

uint64_t sub_24F81FA24(uint64_t a1)
{
  return sub_24F7EEE74(a1);
}

void sub_24F81FA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_24F76B74C();
  a25 = v26;
  a26 = v28;
  uint64_t v30 = v29;
  uint64_t v31 = *(void *)(v27 + 16);
  if (v31)
  {
    uint64_t v32 = v27;
    sub_24F7776D8();
    sub_24F79580C();
    uint64_t v33 = a16;
    uint64_t v34 = v32 + 40;
    while (*(void *)(v30 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_24F782950();
      if ((v36 & 1) == 0) {
        goto LABEL_10;
      }
      sub_24F79089C(*(void *)(v30 + 56) + 40 * v35, (uint64_t)&a10);
      swift_bridgeObjectRelease();
      a16 = v33;
      unint64_t v38 = *(void *)(v33 + 16);
      unint64_t v37 = *(void *)(v33 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_24F785598(v37);
        sub_24F79580C();
        uint64_t v33 = a16;
      }
      *(void *)(v33 + 16) = v38 + 1;
      sub_24F7909A4((uint64_t)&a10, v33 + 40 * v38 + 32);
      v34 += 16;
      if (!--v31) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F77C7B0();
    sub_24F771078();
  }
}

uint64_t sub_24F81FB48(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_24F781818();
    uint64_t v6 = v20;
    int v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *v9;
      v17[0] = *(v9 - 1);
      v17[1] = v10;
      swift_bridgeObjectRetain();
      a1(&v18, v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      long long v11 = v18;
      char v12 = v19;
      uint64_t v20 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      if (v13 >= *(void *)(v6 + 24) >> 1)
      {
        long long v16 = v18;
        sub_24F781818();
        long long v11 = v16;
        uint64_t v6 = v20;
      }
      v9 += 2;
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 24 * v13;
      *(_OWORD *)(v14 + 32) = v11;
      *(unsigned char *)(v14 + 48) = v12;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_24F81FC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_24F77AF70();
    sub_24F7954E0();
    uint64_t v7 = v26;
    uint64_t v8 = (uint64_t *)(a1 + 40);
    uint64_t v18 = a3;
    uint64_t v19 = a2;
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      *(void *)&long long v21 = a2;
      *((void *)&v21 + 1) = a3;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F772990();
      sub_24F7BF460(v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v24;
      if (v24)
      {
        uint64_t v13 = v25;
        sub_24F7811D0(v23, v24);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v13 + 24))(&v21, v12, v13);
        long long v20 = v21;
        char v14 = v22;
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v23);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_24F7783C0((uint64_t)v23, &qword_26B1F7AC0);
        swift_bridgeObjectRelease();
        long long v20 = 0u;
        char v14 = 4;
      }
      uint64_t v26 = v7;
      unint64_t v15 = *(void *)(v7 + 16);
      if (v15 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F7954E0();
        uint64_t v7 = v26;
      }
      v8 += 2;
      *(void *)(v7 + 16) = v15 + 1;
      uint64_t v16 = v7 + 40 * v15;
      *(void *)(v16 + 32) = v9;
      *(void *)(v16 + 40) = v10;
      *(_OWORD *)(v16 + 48) = v20;
      *(unsigned char *)(v16 + 64) = v14;
      --v5;
      a3 = v18;
      a2 = v19;
    }
    while (v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

uint64_t sub_24F81FE68(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_24F7954E0();
    uint64_t v6 = v25;
    uint64_t v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      v20[0] = *(v8 - 1);
      v20[1] = v9;
      swift_bridgeObjectRetain();
      a1(&v21, v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v11 = v21;
      uint64_t v10 = v22;
      long long v12 = v23;
      char v13 = v24;
      uint64_t v25 = v6;
      unint64_t v14 = *(void *)(v6 + 16);
      if (v14 >= *(void *)(v6 + 24) >> 1)
      {
        long long v18 = v23;
        uint64_t v16 = v22;
        sub_24F7954E0();
        uint64_t v10 = v16;
        long long v12 = v18;
        uint64_t v6 = v25;
      }
      v8 += 2;
      *(void *)(v6 + 16) = v14 + 1;
      uint64_t v15 = v6 + 40 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v10;
      *(_OWORD *)(v15 + 48) = v12;
      *(unsigned char *)(v15 + 64) = v13;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_24F81FFB4(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    sub_24F77AF70();
    sub_24F795DEC();
    uint64_t v7 = a3 + 56;
    while (1)
    {
      sub_24F778DE8();
      swift_bridgeObjectRetain();
      sub_24F7736E8();
      a1();
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F826CEC();
      if (v9)
      {
        sub_24F773510();
        sub_24F795DEC();
        __n128 v8 = v12;
      }
      v7 += 32;
      sub_24F785088(v8);
      *(void *)(v10 + 48) = v13;
      if (!--v4) {
        return sub_24F77C7B0();
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_24F77C7B0();
}

void sub_24F8200C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((unint64_t)a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_24F781818();
    if (v5 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v6 = 0;
    while (v5 != v6)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        MEMORY[0x253364060](v6, a3);
      }
      else {
        swift_retain();
      }
      sub_24F7736E8();
      v7();
      if (v3)
      {
        swift_release();
        swift_release();
        return;
      }
      swift_release();
      long long v8 = v11;
      unint64_t v9 = *(void *)(v13 + 16);
      if (v9 >= *(void *)(v13 + 24) >> 1)
      {
        sub_24F781818();
        long long v8 = v11;
      }
      ++v6;
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 24 * v9;
      *(_OWORD *)(v10 + 32) = v8;
      *(unsigned char *)(v10 + 48) = v12;
      if (v5 == v6) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    if (a3 < 0) {
      uint64_t v3 = a3;
    }
    else {
      uint64_t v3 = a3 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24F820274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_24F795E74();
    uint64_t v6 = a3 + 56;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F7736E8();
      v7();
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v8 = *(void *)(v13 + 16);
      if (v8 >= *(void *)(v13 + 24) >> 1) {
        sub_24F795E74();
      }
      v6 += 32;
      *(void *)(v13 + 16) = v8 + 1;
      uint64_t v9 = v13 + 16 * v8;
      *(void *)(v9 + 32) = v11;
      *(void *)(v9 + 40) = v12;
      if (!--v4) {
        return sub_24F77C7B0();
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_24F77C7B0();
}

void sub_24F8203B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_24F76B74C();
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    sub_24F7752F0();
    sub_24F7776D8();
    sub_24F781818();
    while (1)
    {
      sub_24F7736E8();
      v16();
      if (v15) {
        break;
      }
      long long v19 = a11;
      unint64_t v20 = *(void *)(a15 + 16);
      if (v20 >= *(void *)(a15 + 24) >> 1)
      {
        sub_24F781818();
        long long v19 = a11;
      }
      *(void *)(a15 + 16) = v20 + 1;
      uint64_t v21 = a15 + 24 * v20;
      *(_OWORD *)(v21 + 32) = v19;
      *(unsigned char *)(v21 + 48) = a12;
      if (!--v18) {
        goto LABEL_9;
      }
    }
    swift_release();
  }
LABEL_9:
  sub_24F77C7B0();
  sub_24F771078();
}

uint64_t sub_24F820490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_24F77AF70();
    sub_24F795F38();
    uint64_t v6 = a3 + 56;
    while (1)
    {
      sub_24F778DE8();
      swift_bridgeObjectRetain();
      sub_24F7736E8();
      v7();
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v15;
      unint64_t v9 = *(void *)(v16 + 16);
      if (v9 >= *(void *)(v16 + 24) >> 1)
      {
        sub_24F795F38();
        uint64_t v8 = v15;
      }
      v6 += 32;
      *(void *)(v16 + 16) = v9 + 1;
      uint64_t v10 = (void *)(v16 + 32 * v9);
      _OWORD v10[4] = v12;
      void v10[5] = v13;
      v10[6] = v14;
      v10[7] = v8;
      if (!--v4) {
        return sub_24F77C7B0();
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_24F77C7B0();
}

uint64_t sub_24F8205C4(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    sub_24F77AF70();
    sub_24F781818();
    for (uint64_t i = a3 + 40; ; i += 16)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F7736E8();
      a1();
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F826CEC();
      if (v9)
      {
        sub_24F773510();
        sub_24F781818();
        __n128 v8 = v12;
      }
      sub_24F785088(v8);
      *(unsigned char *)(v10 + 48) = v13;
      if (!--v4) {
        return sub_24F77C7B0();
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_24F77C7B0();
}

void sub_24F8206E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = a1 + 40;
    uint64_t v6 = MEMORY[0x263F8EE78];
    uint64_t v19 = a1 + 40;
    do
    {
      uint64_t v20 = v6;
      uint64_t v7 = (uint64_t *)(v5 + 16 * v4);
      unint64_t v8 = v4;
      while (1)
      {
        if (v8 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v10 = *(v7 - 1);
        uint64_t v9 = *v7;
        unint64_t v4 = v8 + 1;
        uint64_t v11 = sub_24F8CED00();
        uint64_t v13 = v12;
        swift_bridgeObjectRetain();
        sub_24F80E164(v11, v13, a2);
        char v15 = v14;
        swift_bridgeObjectRelease();
        if (v15) {
          break;
        }
        swift_bridgeObjectRelease();
        v7 += 2;
        ++v8;
        if (v3 == v4) {
          goto LABEL_13;
        }
      }
      uint64_t v6 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F77C4AC();
        uint64_t v6 = v20;
      }
      unint64_t v17 = *(void *)(v6 + 16);
      unint64_t v16 = *(void *)(v6 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_24F785598(v16);
        sub_24F77C4AC();
        uint64_t v6 = v20;
      }
      *(void *)(v6 + 16) = v17 + 1;
      uint64_t v18 = v6 + 16 * v17;
      *(void *)(v18 + 32) = v10;
      *(void *)(v18 + 40) = v9;
      uint64_t v5 = v19;
    }
    while (v3 - 1 != v8);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F771078();
}

void sub_24F82085C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = a1;
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
    {
      uint64_t v37 = a1 + 64;
      sub_24F77BD28();
      unint64_t v7 = v6 & v5;
      int64_t v38 = (unint64_t)(v8 + 63) >> 6;
      uint64_t v39 = v3;
      while (1)
      {
        if (v7)
        {
          uint64_t v40 = (v7 - 1) & v7;
          uint64_t v41 = v4;
          unint64_t v9 = __clz(__rbit64(v7)) | (v4 << 6);
        }
        else
        {
          int64_t v10 = v4 + 1;
          if (__OFADD__(v4, 1)) {
            goto LABEL_55;
          }
          if (v10 >= v38) {
            return;
          }
          if (!*(void *)(v37 + 8 * v10))
          {
            if (v4 + 2 >= v38) {
              return;
            }
            if (!*(void *)(v37 + 8 * (v4 + 2)))
            {
              if (v4 + 3 >= v38) {
                return;
              }
              if (!*(void *)(v37 + 8 * (v4 + 3)))
              {
                uint64_t v11 = v4 + 4;
                if (v4 + 4 >= v38) {
                  return;
                }
                if (!*(void *)(v37 + 8 * v11))
                {
                  do
                  {
                    int64_t v12 = v11 + 1;
                    if (__OFADD__(v11, 1)) {
                      goto LABEL_56;
                    }
                    if (v12 >= v38) {
                      return;
                    }
                    ++v11;
                  }
                  while (!*(void *)(v37 + 8 * v12));
                }
              }
            }
          }
          sub_24F7773D0();
          uint64_t v40 = v14 & v13;
          uint64_t v41 = v15;
          unint64_t v9 = v16 + (v15 << 6);
        }
        unint64_t v17 = (uint64_t *)(*(void *)(v3 + 56) + 24 * v9);
        uint64_t v18 = *v17;
        uint64_t v19 = (void *)v17[1];
        uint64_t v20 = v17[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F76B950();
        unint64_t v21 = sub_24F782950();
        char v23 = v22;
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0) {
          goto LABEL_51;
        }
        uint64_t v42 = v20;
        char v24 = (void *)(*(void *)(a2 + 56) + 24 * v21);
        uint64_t v25 = (void *)v24[1];
        uint64_t v26 = v24[2];
        if (*v24)
        {
          if (!v18)
          {
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v27 = swift_bridgeObjectRetain();
          char v28 = sub_24F7EBF00(v27, v18);
          swift_bridgeObjectRelease();
          if ((v28 & 1) == 0) {
            goto LABEL_23;
          }
        }
        else
        {
          if (v18)
          {
LABEL_51:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        unint64_t v29 = v25[2];
        if (v29 != v19[2]) {
          goto LABEL_23;
        }
        if (v29 && v25 != v19)
        {
          BOOL v31 = v25[4] == v19[4] && v25[5] == v19[5];
          if (!v31 && (sub_24F8CFD00() & 1) == 0)
          {
LABEL_23:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_52:
            swift_bridgeObjectRelease();
            return;
          }
          if (v29 != 1) {
            break;
          }
        }
LABEL_45:
        char v36 = sub_24F82085C(v26, v42);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v39;
        unint64_t v7 = v40;
        uint64_t v4 = v41;
        if ((v36 & 1) == 0) {
          return;
        }
      }
      uint64_t v32 = v19 + 7;
      uint64_t v33 = v25 + 7;
      unint64_t v34 = 1;
      while (v34 < v29)
      {
        BOOL v35 = *(v33 - 1) == *(v32 - 1) && *v33 == *v32;
        if (!v35 && (sub_24F8CFD00() & 1) == 0) {
          goto LABEL_23;
        }
        ++v34;
        v32 += 2;
        v33 += 2;
        if (v29 == v34) {
          goto LABEL_45;
        }
      }
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
    }
  }
}

uint64_t sub_24F820C08(uint64_t a1, int64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  int64_t v2 = a2;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v155 = a1 + 64;
  sub_24F77BD28();
  unint64_t v7 = v6 & v5;
  int64_t v156 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v9 = 24;
  int64_t v154 = v2;
  while (2)
  {
    while (2)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        uint64_t v157 = v4;
        unint64_t v11 = v10 | (v4 << 6);
      }
      else
      {
        int64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
        }
        if (v12 >= v156) {
          return 1;
        }
        if (!*(void *)(v155 + 8 * v12))
        {
          if (v4 + 2 >= v156) {
            return 1;
          }
          if (!*(void *)(v155 + 8 * (v4 + 2)))
          {
            if (v4 + 3 >= v156) {
              return 1;
            }
            if (!*(void *)(v155 + 8 * (v4 + 3)))
            {
              uint64_t v13 = v4 + 4;
              if (v4 + 4 >= v156) {
                return 1;
              }
              if (!*(void *)(v155 + 8 * v13))
              {
                do
                {
                  int64_t v14 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_189;
                  }
                  if (v14 >= v156) {
                    return 1;
                  }
                  ++v13;
                }
                while (!*(void *)(v155 + 8 * v14));
              }
            }
          }
        }
        sub_24F7773D0();
        unint64_t v7 = v16 & v15;
        uint64_t v157 = v17;
        unint64_t v11 = v18 + (v17 << 6);
      }
      uint64_t v19 = v3;
      uint64_t v20 = *(void *)(v3 + 56) + v11 * v9;
      uint64_t v21 = *(uint64_t *)v20;
      unint64_t v22 = *(void *)(v20 + 8);
      int v23 = *(unsigned __int8 *)(v20 + 16);
      swift_bridgeObjectRetain();
      sub_24F781F34(v21, v22, v23);
      unint64_t v24 = sub_24F782950();
      char v26 = v25;
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_186;
      }
      uint64_t v27 = *(void *)(v2 + 56) + 24 * v24;
      uint64_t v28 = *(uint64_t *)v27;
      unint64_t v29 = *(void *)(v27 + 8);
      switch(*(unsigned char *)(v27 + 16))
      {
        case 1:
          if (v23)
          {
            if (v23 != 1)
            {
              uint64_t v114 = *(void *)v27;
              unint64_t v115 = *(void *)(v27 + 8);
              char v116 = 1;
              goto LABEL_185;
            }
            sub_24F77D814(*(void *)v27, *(void *)(v27 + 8), 1);
            BOOL v33 = *(double *)&v28 == *(double *)&v21;
          }
          else
          {
            sub_24F780C98(*(void *)v27, *(void *)(v27 + 8), 1);
            double v43 = trunc(*(double *)&v28);
            BOOL v33 = *(double *)&v28 > -9.22337204e18
               && *(double *)&v28 < 9.22337204e18
               && v43 == *(double *)&v28
               && v21 == (uint64_t)*(double *)&v28;
          }
          goto LABEL_61;
        case 2:
          if (v23 != 2)
          {
            swift_bridgeObjectRetain();
            uint64_t v114 = v28;
            unint64_t v115 = v29;
            char v116 = 2;
            goto LABEL_185;
          }
          if (v28 == v21 && v29 == v22)
          {
            swift_bridgeObjectRetain();
            sub_24F781F10(v21, v22, 2);
            uint64_t v39 = v21;
            unint64_t v40 = v22;
            char v41 = 2;
LABEL_64:
            sub_24F781F10(v39, v40, v41);
            goto LABEL_87;
          }
          sub_24F76B950();
          char v35 = sub_24F8CFD00();
          swift_bridgeObjectRetain();
          sub_24F781F10(v28, v29, 2);
          sub_24F781F10(v21, v22, 2);
          uint64_t v3 = sub_24F775C94();
          if ((v35 & 1) == 0) {
            return 0;
          }
          continue;
        case 3:
          if (v23 != 3)
          {
            uint64_t v117 = sub_24F76B950();
            sub_24F78419C(v117, v118);
            uint64_t v114 = sub_24F76B950();
            goto LABEL_182;
          }
          uint64_t v42 = 0;
          switch(v29 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v28), v28)) {
                goto LABEL_190;
              }
              uint64_t v42 = HIDWORD(v28) - (int)v28;
LABEL_68:
              sub_24F771E54();
              sub_24F771E54();
              break;
            case 2uLL:
              uint64_t v47 = *(void *)(v28 + 16);
              uint64_t v46 = *(void *)(v28 + 24);
              uint64_t v42 = v46 - v47;
              if (!__OFSUB__(v46, v47)) {
                goto LABEL_68;
              }
              goto LABEL_191;
            case 3uLL:
              goto LABEL_69;
            default:
              uint64_t v42 = BYTE6(v29);
              goto LABEL_69;
          }
          break;
        case 4:
          uint64_t v36 = sub_24F76B950();
          sub_24F781F10(v36, v37, 4);
          if (v23 != 4 || (v22 | v21) != 0) {
            goto LABEL_186;
          }
          sub_24F781F10(0, 0, 4);
          uint64_t v39 = 0;
          unint64_t v40 = 0;
          char v41 = 4;
          goto LABEL_64;
        default:
          if (v23)
          {
            if (v23 != 1)
            {
              uint64_t v114 = *(void *)v27;
              unint64_t v115 = *(void *)(v27 + 8);
              char v116 = 0;
              goto LABEL_185;
            }
            sub_24F77D814(*(void *)v27, *(void *)(v27 + 8), 0);
            double v30 = trunc(*(double *)&v21);
            BOOL v33 = *(double *)&v21 > -9.22337204e18
               && *(double *)&v21 < 9.22337204e18
               && v30 == *(double *)&v21
               && v28 == (uint64_t)*(double *)&v21;
          }
          else
          {
            sub_24F780C98(*(void *)v27, *(void *)(v27 + 8), 0);
            BOOL v33 = v28 == v21;
          }
LABEL_61:
          uint64_t v9 = 24;
          uint64_t v3 = v19;
          uint64_t v4 = v157;
          if (!v33) {
            return 0;
          }
          continue;
      }
      break;
    }
LABEL_69:
    int64_t v2 = v22 >> 62;
    switch(v22 >> 62)
    {
      case 1uLL:
        LODWORD(v48) = HIDWORD(v21) - v21;
        if (__OFSUB__(HIDWORD(v21), v21)) {
          goto LABEL_192;
        }
        uint64_t v48 = (int)v48;
LABEL_74:
        if (v42 == v48)
        {
          if (v42 < 1)
          {
LABEL_86:
            sub_24F781F34(v21, v22, 3);
            sub_24F77FE38();
LABEL_87:
            uint64_t v3 = sub_24F775C94();
          }
          else
          {
            uint64_t v52 = v21 >> 32;
            switch(v29 >> 62)
            {
              case 1uLL:
                sub_24F77B968();
                size_t __n = v56;
                uint64_t v150 = v21 >> 32;
                uint64_t v152 = v57;
                uint64_t v42 = (int)v28;
                if ((int)v28 > v28 >> 32) {
                  goto LABEL_194;
                }
                sub_24F781F34(v21, v22, 3);
                sub_24F771E54();
                uint64_t v58 = sub_24F77CE54();
                if (v58)
                {
                  uint64_t v59 = v58;
                  uint64_t v60 = sub_24F8CE6C0();
                  if (__OFSUB__((int)v28, v60)) {
                    goto LABEL_196;
                  }
                  uint64_t v119 = (const void *)(v59 + (int)v28 - v60);
                }
                else
                {
                  uint64_t v119 = 0;
                }
                uint64_t v81 = sub_24F8CE6B0();
                if (v2)
                {
                  if (v2 == 1)
                  {
                    if (v150 < (int)v21) {
                      goto LABEL_203;
                    }
                    swift_retain();
                    sub_24F8CE6A0();
                    sub_24F772E40();
                    if (v89)
                    {
                      sub_24F8CE6C0();
                      sub_24F77602C();
                      if (v51) {
                        goto LABEL_212;
                      }
                      uint64_t v42 = (int)v28 + v90;
                    }
                    uint64_t v91 = sub_24F8CE6B0();
                    size_t v92 = v150 - v152;
                    if (v91 < v150 - v152) {
                      size_t v92 = v91;
                    }
                    if (!v119) {
                      goto LABEL_216;
                    }
                    if (!v42) {
                      goto LABEL_217;
                    }
                    sub_24F782B94(v119, v92);
                    sub_24F77EF98();
                  }
                  else
                  {
                    uint64_t v107 = *(void *)(v21 + 16);
                    uint64_t v106 = *(void *)(v21 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v108 = sub_24F8CE6A0();
                    if (v108)
                    {
                      uint64_t v109 = sub_24F8CE6C0();
                      if (__OFSUB__(v107, v109)) {
                        goto LABEL_211;
                      }
                      v108 += v107 - v109;
                    }
                    BOOL v51 = __OFSUB__(v106, v107);
                    int64_t v110 = v106 - v107;
                    if (v51) {
                      goto LABEL_204;
                    }
                    uint64_t v111 = sub_24F8CE6B0();
                    if (v111 >= v110) {
                      size_t v112 = v110;
                    }
                    else {
                      size_t v112 = v111;
                    }
                    if (!v119) {
                      goto LABEL_224;
                    }
                    int64_t v2 = v154;
                    if (!v108) {
                      goto LABEL_225;
                    }
                    LODWORD(v42) = sub_24F782B94(v119, v112);
                    swift_release();
                    swift_release();
                  }
                  sub_24F781F10(v21, v22, 3);
                  sub_24F7722D0();
LABEL_174:
                  sub_24F7722D0();
                }
                else
                {
                  uint64_t v105 = (const void *)sub_24F77E0F0(v81, v82, v83, v84, v85, v86, v87, v88, (uint64_t)v119, __n, v126, v127, v128, v129, v130, v131, v132, v133, v134,
                                         v135,
                                         v136,
                                         v137,
                                         v138,
                                         v139,
                                         v140,
                                         v141,
                                         v142,
                                         v143,
                                         v144,
                                         v145,
                                         v146,
                                         v147,
                                         v148);
                  if (!v105) {
                    goto LABEL_223;
                  }
                  memcmp(v105, __s1, __nc);
                  sub_24F77EF98();
                  sub_24F781F10(v28, v29, 3);
                  sub_24F7722D0();
                  int64_t v2 = v154;
                }
                sub_24F780848();
LABEL_176:
                uint64_t v3 = sub_24F775C94();
                if (v42) {
                  return 0;
                }
                break;
              case 2uLL:
                sub_24F77B968();
                uint64_t v153 = v61;
                uint64_t v120 = *(void *)(v28 + 16);
                size_t __na = v62;
                sub_24F781F34(v21, v22, 3);
                sub_24F781F34(v21, v22, 3);
                swift_retain();
                swift_retain();
                uint64_t v63 = sub_24F8CE6A0();
                if (v63)
                {
                  uint64_t v42 = v63;
                  uint64_t v64 = sub_24F8CE6C0();
                  if (__OFSUB__(v120, v64)) {
                    goto LABEL_195;
                  }
                  uint64_t v121 = (const void *)(v42 + v120 - v64);
                }
                else
                {
                  uint64_t v121 = 0;
                }
                uint64_t v69 = sub_24F8CE6B0();
                if (v2)
                {
                  if (v2 == 1)
                  {
                    if (v52 < (int)v21) {
                      goto LABEL_199;
                    }
                    swift_retain();
                    sub_24F8CE6A0();
                    sub_24F772E40();
                    if (v77)
                    {
                      sub_24F8CE6C0();
                      sub_24F77602C();
                      if (v51) {
                        goto LABEL_210;
                      }
                      v42 += v78;
                    }
                    uint64_t v79 = sub_24F8CE6B0();
                    size_t v80 = v52 - v153;
                    if (v79 < v52 - v153) {
                      size_t v80 = v79;
                    }
                    if (!v121) {
                      goto LABEL_214;
                    }
                    if (!v42) {
                      goto LABEL_215;
                    }
                    sub_24F782B94(v121, v80);
                    sub_24F77EF98();
                  }
                  else
                  {
                    uint64_t v99 = *(void *)(v21 + 16);
                    uint64_t v98 = *(void *)(v21 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v100 = sub_24F8CE6A0();
                    if (v100)
                    {
                      uint64_t v101 = sub_24F8CE6C0();
                      if (__OFSUB__(v99, v101)) {
                        goto LABEL_209;
                      }
                      v100 += v99 - v101;
                    }
                    BOOL v51 = __OFSUB__(v98, v99);
                    int64_t v102 = v98 - v99;
                    if (v51) {
                      goto LABEL_202;
                    }
                    uint64_t v103 = sub_24F8CE6B0();
                    if (v103 >= v102) {
                      size_t v104 = v102;
                    }
                    else {
                      size_t v104 = v103;
                    }
                    if (!v121) {
                      goto LABEL_221;
                    }
                    int64_t v2 = v154;
                    if (!v100) {
                      goto LABEL_222;
                    }
                    LODWORD(v42) = sub_24F782B94(v121, v104);
                    swift_release();
                    swift_release();
                  }
                  sub_24F781F10(v21, v22, 3);
                  swift_release();
                  swift_release();
                }
                else
                {
                  int v97 = (const void *)sub_24F77E0F0(v69, v70, v71, v72, v73, v74, v75, v76, (uint64_t)v121, __na, v126, v127, v128, v129, v130, v131, v132, v133, v134,
                                        v135,
                                        v136,
                                        v137,
                                        v138,
                                        v139,
                                        v140,
                                        v141,
                                        v142,
                                        v143,
                                        v144,
                                        v145,
                                        v146,
                                        v147,
                                        v148);
                  if (!v97) {
                    goto LABEL_220;
                  }
                  memcmp(v97, __s1, __nb);
                  sub_24F77EF98();
                  swift_release();
                  swift_release();
                  int64_t v2 = v154;
                }
                goto LABEL_174;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v2) {
                  goto LABEL_106;
                }
                if (v2 == 1)
                {
                  uint64_t v149 = v21 >> 32;
                  uint64_t v151 = (int)v21;
                  if (v52 < (int)v21) {
                    goto LABEL_198;
                  }
                  sub_24F77CE54();
                  sub_24F772E40();
                  if (v65)
                  {
                    sub_24F8CE6C0();
                    sub_24F77602C();
                    if (v51) {
                      goto LABEL_208;
                    }
                    v42 += v66;
                  }
                  uint64_t v55 = sub_24F8CE6B0();
                  if (!v42) {
                    goto LABEL_213;
                  }
LABEL_102:
                  if (v55 >= v149 - v151) {
                    size_t v67 = v149 - v151;
                  }
                  else {
                    size_t v67 = v55;
                  }
                  int v68 = memcmp(__s1, (const void *)v42, v67);
                  sub_24F781F10(v28, v29, 3);
                  sub_24F780848();
LABEL_107:
                  uint64_t v3 = sub_24F775C94();
                  if (v68) {
                    return 0;
                  }
                  continue;
                }
                sub_24F78197C();
                swift_retain();
                uint64_t v42 = sub_24F8CE6A0();
                if (v42)
                {
                  uint64_t v95 = sub_24F8CE6C0();
                  if (__OFSUB__(v2, v95)) {
                    goto LABEL_206;
                  }
                  v42 += v2 - v95;
                }
                BOOL v51 = __OFSUB__(v52, v2);
                int64_t v2 = v52 - v2;
                if (v51) {
                  goto LABEL_201;
                }
                uint64_t v94 = sub_24F8CE6B0();
                if (!v42) {
                  goto LABEL_219;
                }
LABEL_144:
                if (v94 >= v2) {
                  size_t v96 = v2;
                }
                else {
                  size_t v96 = v94;
                }
                LODWORD(v42) = memcmp(__s1, (const void *)v42, v96);
                swift_release();
                swift_release();
                sub_24F77FE38();
                goto LABEL_176;
              default:
                __s1[0] = v28;
                LOWORD(__s1[1]) = v29;
                BYTE2(__s1[1]) = BYTE2(v29);
                BYTE3(__s1[1]) = BYTE3(v29);
                BYTE4(__s1[1]) = BYTE4(v29);
                BYTE5(__s1[1]) = BYTE5(v29);
                if (!v2)
                {
LABEL_106:
                  uint64_t __s2 = v21;
                  __int16 v159 = v22;
                  char v160 = BYTE2(v22);
                  char v161 = BYTE3(v22);
                  char v162 = BYTE4(v22);
                  char v163 = BYTE5(v22);
                  sub_24F781F34(v21, v22, 3);
                  int v68 = memcmp(__s1, &__s2, BYTE6(v22));
                  sub_24F77FE38();
                  goto LABEL_107;
                }
                if (v2 == 1)
                {
                  uint64_t v149 = v21 >> 32;
                  uint64_t v151 = (int)v21;
                  if (v52 < (int)v21) {
                    goto LABEL_197;
                  }
                  sub_24F77CE54();
                  sub_24F772E40();
                  if (v53)
                  {
                    sub_24F8CE6C0();
                    sub_24F77602C();
                    if (v51) {
                      goto LABEL_207;
                    }
                    v42 += v54;
                  }
                  uint64_t v55 = sub_24F8CE6B0();
                  if (!v42)
                  {
                    __break(1u);
LABEL_213:
                    __break(1u);
LABEL_214:
                    __break(1u);
LABEL_215:
                    __break(1u);
LABEL_216:
                    __break(1u);
LABEL_217:
                    __break(1u);
LABEL_218:
                    __break(1u);
LABEL_219:
                    __break(1u);
LABEL_220:
                    __break(1u);
LABEL_221:
                    __break(1u);
LABEL_222:
                    __break(1u);
LABEL_223:
                    __break(1u);
LABEL_224:
                    __break(1u);
LABEL_225:
                    __break(1u);
                    JUMPOUT(0x24F8217CCLL);
                  }
                  goto LABEL_102;
                }
                sub_24F78197C();
                swift_retain();
                uint64_t v42 = sub_24F8CE6A0();
                if (v42)
                {
                  uint64_t v93 = sub_24F8CE6C0();
                  if (__OFSUB__(v2, v93)) {
                    goto LABEL_205;
                  }
                  v42 += v2 - v93;
                }
                BOOL v51 = __OFSUB__(v52, v2);
                int64_t v2 = v52 - v2;
                if (v51) {
                  goto LABEL_200;
                }
                uint64_t v94 = sub_24F8CE6B0();
                if (!v42) {
                  goto LABEL_218;
                }
                goto LABEL_144;
            }
          }
          continue;
        }
LABEL_181:
        LOBYTE(v23) = 3;
        sub_24F781F34(v21, v22, 3);
        sub_24F781F10(v28, v29, 3);
        sub_24F781F10(v28, v29, 3);
        uint64_t v114 = v21;
        unint64_t v115 = v22;
LABEL_182:
        char v116 = 3;
LABEL_185:
        sub_24F781F10(v114, v115, v116);
LABEL_186:
        sub_24F781F10(v21, v22, v23);
        return 0;
      case 2uLL:
        uint64_t v50 = *(void *)(v21 + 16);
        uint64_t v49 = *(void *)(v21 + 24);
        BOOL v51 = __OFSUB__(v49, v50);
        uint64_t v48 = v49 - v50;
        if (!v51) {
          goto LABEL_74;
        }
        goto LABEL_193;
      case 3uLL:
        if (!v42) {
          goto LABEL_86;
        }
        goto LABEL_181;
      default:
        uint64_t v48 = BYTE6(v22);
        goto LABEL_74;
    }
  }
}

uint64_t sub_24F821810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24F7752F0();
  uint64_t v9 = v8;
  swift_getDynamicType();
  sub_24F7824C4();
  uint64_t v11 = v10();
  Database.columns(in:)(v11, v12);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_bridgeObjectRelease();
    sub_24F787184();
    uint64_t v14 = v13;
    sub_24F781274(&qword_26B1F7AC0);
    uint64_t v15 = sub_24F8CEC60();
    *uint64_t v9 = v14;
    v9[1] = v15;
    (*(void (**)(void *, uint64_t, uint64_t))(a4 + 8))(v9, a3, a4);
  }
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(v5, a3);
}

unint64_t PersistenceError.description.getter()
{
  sub_24F7DB6B4(*(void *)(v0 + 16));
  sub_24F78ED30(v1);
  swift_bridgeObjectRelease();
  type metadata accessor for Row();
  swift_initStackObject();
  sub_24F79036C();
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  Row.description.getter();
  sub_24F8CEEB0();
  swift_release();
  swift_bridgeObjectRelease();
  return 0xD000000000000017;
}

void PersistenceConflictPolicy.conflictResolutionForInsert.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void PersistenceConflictPolicy.conflictResolutionForUpdate.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

void sub_24F821A84(_WORD *a1@<X8>)
{
}

void static MutablePersistableRecord.persistenceConflictPolicy.getter(_WORD *a1@<X8>)
{
  *a1 = 257;
}

void sub_24F821AAC()
{
}

void MutablePersistableRecord.insert(_:)()
{
}

void sub_24F821ADC()
{
}

void MutablePersistableRecord.update(_:columns:)()
{
}

void sub_24F821B0C()
{
}

void MutablePersistableRecord.save(_:)()
{
}

BOOL sub_24F821B3C()
{
  return MutablePersistableRecord.delete(_:)();
}

BOOL MutablePersistableRecord.delete(_:)()
{
  return MutablePersistableRecord.performDelete(_:)();
}

void MutablePersistableRecord.performInsert(_:)()
{
  sub_24F76FF94();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  v21[1] = v5;
  sub_24F77AD10();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v12 = *(void (**)(void))(v7 + 16);
  sub_24F826C8C();
  v12();
  sub_24F770974();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 24))(v22, v4, v2);
  int v13 = LOBYTE(v22[0]);
  type metadata accessor for DAO();
  sub_24F826C8C();
  v12();
  swift_retain();
  uint64_t v14 = sub_24F81EEB8();
  if (!v0)
  {
    uint64_t v15 = v14;
    LOBYTE(v22[0]) = v13;
    sub_24F81EF08(v22);
    v22[0] = 0;
    v22[1] = 0;
    v16.value.values._rawValue = v22;
    Statement.execute(arguments:)(v16);
    if (v17)
    {
      swift_release();
LABEL_6:
      swift_release();
      goto LABEL_7;
    }
    swift_release();
    if (v13 == 3) {
      goto LABEL_6;
    }
    sqlite3_int64 v18 = Database.lastInsertedRowID.getter();
    if (*(unsigned char *)(v15 + 72))
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v19 = *(void *)(v15 + 56);
      uint64_t v20 = *(void *)(v15 + 64);
      sub_24F7903D0(v19, v20, 0);
    }
    (*(void (**)(sqlite3_int64, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32))(v18, v19, v20, v4, v2);
    swift_release();
    swift_bridgeObjectRelease();
  }
LABEL_7:
  sub_24F77BC10();
}

uint64_t MutablePersistableRecord.inserted(_:)()
{
  sub_24F77E924();
  uint64_t v1 = sub_24F826B78();
  v2(v1);
  uint64_t v3 = sub_24F780E60();
  uint64_t result = v4(v3);
  if (v0)
  {
    uint64_t v6 = sub_24F826BDC();
    return v7(v6);
  }
  return result;
}

void MutablePersistableRecord.performUpdate(_:columns:)()
{
  sub_24F76FF94();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_24F77AD10();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DAO();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v2, v6);
  swift_retain();
  sub_24F81EEB8();
  if (!v1)
  {
    swift_getDynamicType();
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v16, v6, v4);
    sub_24F81F144();
    if (v13)
    {
      v16[0] = 0;
      v16[1] = 0;
      uint64_t v14 = v16;
      Statement.execute(arguments:)(*(GRDBInternal::StatementArguments_optional *)(&v12 - 1));
      if (!v15 && !Database.changesCount.getter())
      {
        sub_24F81F03C();
        swift_willThrow();
      }
      swift_release();
    }
    else
    {
      sub_24F81F03C();
      swift_willThrow();
    }
    swift_release();
  }
  sub_24F77BC10();
}

uint64_t MutablePersistableRecord.update<A>(_:columns:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  void v11[2] = a3;
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v14 = a6;
  uint64_t v15 = a7;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F825F54, (uint64_t)v11, v12, MEMORY[0x263F8D310], MEMORY[0x263F8E628], v14, MEMORY[0x263F8E658], v7);
  swift_release();
  sub_24F78E25C(v8);
  sub_24F826C24();
  v9();
  return sub_24F826B90();
}

uint64_t sub_24F822100@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + a1 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = v5(AssociatedTypeWitness, v4);
  *a3 = result;
  a3[1] = v8;
  return result;
}

void MutablePersistableRecord.update<A>(_:columns:)()
{
  sub_24F77AD10();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = sub_24F781538(v1, v5);
  v3(v2);
  sub_24F8CF330();
  sub_24F826C24();
  v4();
  sub_24F826B90();
  sub_24F77B584();
}

uint64_t MutablePersistableRecord.update(_:)()
{
  swift_getDynamicType();
  sub_24F7824C4();
  uint64_t v2 = v1();
  uint64_t v4 = Database.columns(in:)(v2, v3);
  if (!v0)
  {
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_24F7EEE74(v5);
    swift_bridgeObjectRelease();
    sub_24F78E25C(v6);
    sub_24F76B950();
    sub_24F826C24();
    v7();
  }
  return swift_bridgeObjectRelease();
}

uint64_t MutablePersistableRecord.updateChanges<A>(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6;
  sub_24F77AD10();
  MEMORY[0x270FA5388](v14);
  GRDBInternal::StatementArguments_optional v16 = sub_24F781538(v15, v21[0]);
  v17(v16);
  uint64_t v18 = *(void *)(a6 + 8);
  uint64_t v19 = swift_retain();
  sub_24F821810(v19, v7, a4, v18);
  if (!v8)
  {
    v21[0] = v21[2];
    v21[1] = v21[3];
    LOBYTE(a5) = sub_24F82244C(a1, (uint64_t)v21, a3, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return a5 & 1;
}

uint64_t sub_24F82244C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  (*(void (**)(char *, uint64_t))(v16 + 16))(v12, v7);
  uint64_t v17 = *(void *)(a4 + 8);
  uint64_t v18 = swift_retain();
  sub_24F821810(v18, (uint64_t)v12, a3, v17);
  if (!v6)
  {
    uint64_t v36 = v7;
    uint64_t v37 = 0;
    uint64_t v35 = a1;
    uint64_t v33 = a3;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v43;
    *(void *)(v19 + 32) = 0;
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = v19;
    _OWORD v20[3] = v14;
    v20[4] = v15;
    sub_24F781274(&qword_26B1F53A8);
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = sub_24F7C2680;
    *(void *)(inited + 24) = v20;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v22 = MEMORY[0x263F8EE88];
    uint64_t v44 = MEMORY[0x263F8EE88];
    uint64_t v34 = inited;
    swift_retain();
    sub_24F7BF774((void *)v19, v14, v15, (uint64_t)&v38);
    uint64_t v23 = v39;
    if (v39)
    {
      uint64_t v32 = a4;
      do
      {
        uint64_t v24 = v40;
        unint64_t v25 = v41;
        uint64_t v26 = v38;
        char v27 = v42;
        swift_bridgeObjectRetain();
        sub_24F781F34(v24, v25, v27);
        sub_24F781F10(v24, v25, v27);
        sub_24F8B6490();
        swift_bridgeObjectRelease();
        sub_24F7C25DC(v26, v23, v24, v25, v27);
        sub_24F7BF774((void *)v19, v14, v15, (uint64_t)&v38);
        uint64_t v23 = v39;
      }
      while (v39);
      uint64_t v22 = v44;
      a4 = v32;
    }
    uint64_t v28 = v35;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v29 = *(void *)(v22 + 16);
    LOBYTE(v6) = v29 != 0;
    if (v29) {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 48))(v28, v22, v33, a4);
    }
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_release();
  }
  return v6 & 1;
}

void MutablePersistableRecord.updateChanges(_:with:)()
{
  sub_24F76FF94();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_24F77AD10();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, v0, v15);
  uint64_t v16 = *(void *)(v4 + 8);
  uint64_t v17 = swift_retain();
  sub_24F821810(v17, (uint64_t)v13, v6, v16);
  if (!v2)
  {
    uint64_t v18 = v20;
    uint64_t v19 = v21;
    v8(v0);
    uint64_t v20 = v18;
    uint64_t v21 = v19;
    sub_24F82244C(v10, (uint64_t)&v20, v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24F77BC10();
}

void MutablePersistableRecord.performSave(_:)()
{
  sub_24F76FF94();
  sub_24F826C64();
  sub_24F77AD10();
  MEMORY[0x270FA5388](v1);
  sub_24F826B60();
  sub_24F822CD0();
  if (!v0)
  {
    if (v2)
    {
      MutablePersistableRecord.update(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = sub_24F826B20();
      v4(v3);
    }
  }
  sub_24F77BC10();
}

uint64_t MutablePersistableRecord.saved(_:)()
{
  sub_24F77E924();
  uint64_t v1 = sub_24F826B78();
  v2(v1);
  uint64_t v3 = sub_24F780E60();
  uint64_t result = v4(v3);
  if (v0)
  {
    uint64_t v6 = sub_24F826BDC();
    return v7(v6);
  }
  return result;
}

void MutablePersistableRecord.performExists(_:)()
{
  sub_24F77AD10();
  MEMORY[0x270FA5388](v1);
  type metadata accessor for DAO();
  uint64_t v2 = sub_24F774490();
  v3(v2);
  swift_retain();
  sub_24F81EEB8();
  if (!v0)
  {
    sub_24F823228();
    uint64_t v5 = v4;
    swift_release();
    if (v5)
    {
      type metadata accessor for Row();
      long long v9 = 0uLL;
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      uint64_t v6 = static Row.fetchOne(_:arguments:adapter:)(v5, &v9, (uint64_t)v7);
      sub_24F7783C0((uint64_t)v7, &qword_26B1F7F10);
      swift_release();
      if (v6) {
        swift_release();
      }
    }
  }
  sub_24F77B584();
}

void sub_24F822CD0()
{
  sub_24F76FF94();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_24F77AD10();
  uint64_t v34 = v8;
  MEMORY[0x270FA5388](v9);
  sub_24F826B60();
  swift_getDynamicType();
  sub_24F7824C4();
  uint64_t v11 = v10();
  Database.primaryKey(_:)(v11, v12, &v35);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = (_OWORD *)v35;
    uint64_t v33 = v36;
    int v14 = v37;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v2, v3, v7);
    uint64_t v15 = *(void *)(v5 + 8);
    uint64_t v16 = swift_retain();
    sub_24F821810(v16, v2, v7, v15);
    uint64_t v18 = v35;
    uint64_t v17 = v36;
    if (v14)
    {
      if (v14 == 1) {
        uint64_t v19 = v13;
      }
      else {
        uint64_t v19 = &unk_270103970;
      }
    }
    else
    {
      sub_24F781274((uint64_t *)&unk_26B1F7C88);
      uint64_t v19 = (_OWORD *)sub_24F76BAD0();
      v19[1] = xmmword_24F8DDBF0;
      *((void *)v19 + 4) = v13;
      *((void *)v19 + 5) = v33;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_24F81FC88((uint64_t)v19, v18, v17);
    sub_24F826B90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_24F7C7D98(v20);
    sub_24F8BDD6C(&v38, v21);
    int64_t v22 = v41;
    unint64_t v23 = v42;
    int64_t v24 = (unint64_t)(v40 + 64) >> 6;
    while (1)
    {
      if (v23)
      {
        unint64_t v25 = __clz(__rbit64(v23));
        v23 &= v23 - 1;
        unint64_t v26 = v25 | (v22 << 6);
      }
      else
      {
        int64_t v27 = v22 + 1;
        if (__OFADD__(v22, 1))
        {
          __break(1u);
          return;
        }
        if (v27 >= v24) {
          goto LABEL_36;
        }
        unint64_t v28 = *(void *)(v39 + 8 * v27);
        int64_t v29 = v22 + 1;
        if (!v28)
        {
          int64_t v29 = v22 + 2;
          if (v22 + 2 >= v24) {
            goto LABEL_36;
          }
          unint64_t v28 = *(void *)(v39 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v22 + 3;
            if (v22 + 3 >= v24) {
              goto LABEL_36;
            }
            unint64_t v28 = *(void *)(v39 + 8 * v29);
            if (!v28)
            {
              int64_t v29 = v22 + 4;
              if (v22 + 4 >= v24) {
                goto LABEL_36;
              }
              unint64_t v28 = *(void *)(v39 + 8 * v29);
              if (!v28)
              {
                int64_t v29 = v22 + 5;
                if (v22 + 5 >= v24) {
                  goto LABEL_36;
                }
                unint64_t v28 = *(void *)(v39 + 8 * v29);
                if (!v28)
                {
                  int64_t v29 = v22 + 6;
                  if (v22 + 6 >= v24) {
                    goto LABEL_36;
                  }
                  unint64_t v28 = *(void *)(v39 + 8 * v29);
                  if (!v28)
                  {
                    int64_t v30 = v22 + 7;
                    while (v30 < v24)
                    {
                      unint64_t v28 = *(void *)(v39 + 8 * v30++);
                      if (v28)
                      {
                        int64_t v29 = v30 - 1;
                        goto LABEL_30;
                      }
                    }
LABEL_36:
                    swift_release();
                    goto LABEL_4;
                  }
                }
              }
            }
          }
        }
LABEL_30:
        unint64_t v23 = (v28 - 1) & v28;
        unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
        int64_t v22 = v29;
      }
      uint64_t v31 = *(void *)(v38 + 56) + 24 * v26;
      if (*(unsigned char *)(v31 + 16) != 4 || *(_OWORD *)v31 != 0)
      {
        swift_bridgeObjectRetain();
        swift_release();
        goto LABEL_4;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_4:
  sub_24F77BC10();
}

uint64_t type metadata accessor for DAO()
{
  return sub_24F777DE0();
}

void sub_24F82300C()
{
  sub_24F826CD8();
  if (!v1)
  {
    sub_24F781274((uint64_t *)&unk_26B1F7C88);
    uint64_t v4 = sub_24F76BAD0();
    *(_OWORD *)(v4 + 16) = xmmword_24F8DDBF0;
    *(void *)(v4 + 32) = v2;
    *(void *)(v4 + 40) = v3;
  }
  sub_24F7903D0(v2, v3, v1);
  if (!*(void *)(sub_24F826C30((void (*)(long long *__return_ptr, void *))sub_24F8263D4) + 16)) {
    goto LABEL_12;
  }
  while (1)
  {
    sub_24F77B5D4();
    BOOL v7 = v7 && v6 == 0;
    if (!v7) {
      break;
    }
    if (v5 == 1) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  sub_24F77C07C();
  uint64_t v13 = sub_24F824610(v8, v9, v10, v11, v12);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F772E94(v13, v15);
  if (!v0)
  {
    uint64_t v16 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v16);
    sub_24F781274(&qword_26B1F7348);
    sub_24F778988((unint64_t *)&qword_26B1F72B0, &qword_26B1F7348);
    swift_getKeyPath();
    swift_retain();
    uint64_t v17 = sub_24F826C04();
    sub_24F826B90();
    swift_release();
    v19[0] = v17;
    v19[1] = MEMORY[0x263F8EE80];
    v18.values._rawValue = v19;
    Statement.setUncheckedArguments(_:)(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24F77B584();
}

void sub_24F823228()
{
  sub_24F826CD8();
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v5 = (_OWORD *)v3;
    }
    else {
      uint64_t v5 = &unk_2701045A8;
    }
  }
  else
  {
    sub_24F781274((uint64_t *)&unk_26B1F7C88);
    uint64_t v5 = (_OWORD *)sub_24F76BAD0();
    v5[1] = xmmword_24F8DDBF0;
    *((void *)v5 + 4) = v3;
    *((void *)v5 + 5) = v4;
  }
  sub_24F7903D0(v3, v4, v1);
  uint64_t v6 = v0;
  if (!*(void *)(sub_24F826C30((void (*)(long long *__return_ptr, void *))sub_24F8263D4) + 16)) {
    goto LABEL_15;
  }
  while (1)
  {
    sub_24F77B5D4();
    BOOL v9 = v9 && v8 == 0;
    if (!v9) {
      break;
    }
    if (v7 == 1) {
      goto LABEL_15;
    }
  }
  uint64_t v10 = *(void *)(v2 + 40);
  uint64_t v11 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24F824610(v10, v11, (uint64_t)v5, 25, 0x31205443454C4553);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F772E94(v12, v14);
  if (!v6)
  {
    uint64_t v15 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v15);
    sub_24F781274(&qword_26B1F7348);
    sub_24F778988((unint64_t *)&qword_26B1F72B0, &qword_26B1F7348);
    swift_getKeyPath();
    swift_retain();
    uint64_t v16 = sub_24F826C04();
    sub_24F826B90();
    swift_release();
    v18[0] = v16;
    v18[1] = MEMORY[0x263F8EE80];
    v17.values._rawValue = v18;
    Statement.setUncheckedArguments(_:)(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24F77B584();
}

uint64_t MutablePersistableRecord<>.updateChanges(_:with:)(uint64_t a1, void (*a2)(uint64_t), char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v13 = *(void *)(a5 + 8);
  swift_retain();
  swift_unknownObjectRetain();
  sub_24F821810(a1, (uint64_t)&v17, a4, v13);
  if (!v6)
  {
    uint64_t v14 = sub_24F77C7B0();
    a2(v14);
    uint64_t v17 = v7;
    a3 = sub_24F82244C(a1, (uint64_t)&v16, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return a3 & 1;
}

void sub_24F82356C()
{
}

void PersistableRecord.insert(_:)()
{
}

uint64_t sub_24F82359C()
{
  return PersistableRecord.save(_:)();
}

#error "24F8235C0: call analysis failed (funcsize=6)"

void PersistableRecord.performInsert(_:)()
{
  sub_24F76FF94();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_24F77AD10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getDynamicType();
  uint64_t v11 = *(void *)(v3 + 8);
  uint64_t v12 = sub_24F826CCC();
  v13(v12, v11);
  int v14 = LOBYTE(v22[0]);
  type metadata accessor for DAO();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v0, v5);
  swift_retain();
  uint64_t v15 = sub_24F81EEB8();
  if (!v1)
  {
    uint64_t v16 = v15;
    LOBYTE(v22[0]) = v14;
    sub_24F81EF08(v22);
    v22[0] = 0;
    v22[1] = 0;
    v17.value.values._rawValue = v22;
    Statement.execute(arguments:)(v17);
    if (v18)
    {
      swift_release();
LABEL_6:
      swift_release();
      goto LABEL_7;
    }
    swift_release();
    if (v14 == 3) {
      goto LABEL_6;
    }
    sqlite3_int64 v19 = Database.lastInsertedRowID.getter();
    if (*(unsigned char *)(v16 + 72))
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v20 = *(void *)(v16 + 56);
      uint64_t v21 = *(void *)(v16 + 64);
      sub_24F7903D0(v20, v21, 0);
    }
    (*(void (**)(sqlite3_int64, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 16))(v19, v20, v21, v5, v3);
    swift_release();
    swift_bridgeObjectRelease();
  }
LABEL_7:
  sub_24F77BC10();
}

void sub_24F8237BC()
{
  sub_24F76FF94();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = *v0;
  uint64_t v30 = v4;
  uint64_t v5 = *(void *)(v4 + 80);
  sub_24F77AD10();
  uint64_t v31 = v6;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  int64_t v29 = (char *)&v28 - v9;
  v3[2] = v8;
  uint64_t v34 = v10;
  uint64_t v11 = sub_24F770974();
  uint64_t v12 = *(void *)(v4 + 88);
  uint64_t v13 = *(void *)(v12 + 16);
  int v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  swift_retain();
  uint64_t v15 = v14(v5, v13);
  uint64_t v17 = v16;
  v3[5] = v15;
  v3[6] = v16;
  swift_bridgeObjectRetain();
  Database.primaryKey(_:)(v15, v17, &v32);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v18 = v34;
    uint64_t v19 = v31;
    swift_release();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
LABEL_4:
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v5);
    sub_24F77BC10();
    return;
  }
  uint64_t v28 = v11;
  swift_bridgeObjectRelease();
  char v20 = v33;
  *(_OWORD *)(v3 + 7) = v32;
  *((unsigned char *)v3 + 72) = v20;
  uint64_t v19 = v31;
  uint64_t v21 = (uint64_t)v29;
  uint64_t v18 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, v34, v5);
  uint64_t v22 = *(void *)(v12 + 8);
  uint64_t v23 = swift_retain();
  sub_24F821810(v23, v21, v5, v22);
  uint64_t v24 = v32;
  *(_OWORD *)(v3 + 3) = v32;
  if (*(void *)(v24 + 16))
  {
    swift_release();
    goto LABEL_4;
  }
  *(void *)&long long v32 = 0;
  *((void *)&v32 + 1) = 0xE000000000000000;
  sub_24F8CF7D0();
  uint64_t v25 = sub_24F8D0020();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  *(void *)&long long v32 = v25;
  *((void *)&v32 + 1) = v27;
  sub_24F8CEEB0();
  sub_24F8CF9D0();
  __break(1u);
}

uint64_t sub_24F823AB8()
{
  uint64_t v1 = *(unsigned __int8 *)v0;
  uint64_t v3 = v0[1];
  uint64_t v2 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = qword_26B1F7048;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  swift_retain();
  sub_24F88296C((uint64_t)sub_24F826624, 0);
  uint64_t v7 = v6;
  swift_release();
  uint64_t v8 = sub_24F80BAA0(v1, v3, v2, v4, v7);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v10)
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_24F7922AC(v11);
    swift_bridgeObjectRelease();
    v16[0] = v12;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    v16[0] = *(void *)(v4 + 16);
    v16[1] = 63;
    void v16[2] = 0xE100000000000000;
    sub_24F781274(&qword_26B1F7228);
    sub_24F778988((unint64_t *)&qword_26B1F7268, &qword_26B1F7228);
    sub_24F8CED30();
    if (v1 == 1)
    {
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "INSERT INTO ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      sub_24F8CEEB0();
      sub_24F7738B4();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
    }
    else
    {
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "INSERT OR ");
      BYTE3(v16[1]) = 0;
      HIDWORD(v16[1]) = -369098752;
      sub_24F826CA0();
      switch((int)v1)
      {
        case 1:
          __break(1u);
          JUMPOUT(0x24F823F78);
        case 4:
          sub_24F826C78();
          break;
        default:
          break;
      }
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F7738B4();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
    }
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    uint64_t v8 = v16[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24F88296C((uint64_t)sub_24F826624, 0);
    uint64_t v14 = v13;
    swift_isUniquelyReferenced_nonNull_native();
    v16[0] = v14;
    sub_24F7DC3B0(v8, v16[1], v1, v3, v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F882A58();
    swift_release();
  }
  return v8;
}

uint64_t sub_24F823F8C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v9 = *(_OWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7BF460((uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
    uint64_t v3 = v13;
    sub_24F7811D0(v11, v12);
    uint64_t v4 = sub_24F826CCC();
    v5(v4, v3);
    char v6 = v10;
    uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v11);
    long long v8 = v9;
  }
  else
  {
    uint64_t result = sub_24F7783C0((uint64_t)v11, &qword_26B1F7AC0);
    long long v8 = 0uLL;
    char v6 = 4;
  }
  *(_OWORD *)a2 = v8;
  *(unsigned char *)(a2 + 16) = v6;
  return result;
}

uint64_t sub_24F824080()
{
  long long v1 = v0[1];
  long long v23 = *v0;
  long long v24 = v1;
  uint64_t v25 = *((void *)v0 + 4);
  sub_24F7DCAF0((uint64_t)&v23);
  if (qword_26B1F5A68 != -1) {
    swift_once();
  }
  swift_retain();
  sub_24F8829A0((uint64_t)sub_24F826B08, 0);
  uint64_t v3 = v2;
  swift_release();
  uint64_t v4 = sub_24F80BAE0((uint64_t)&v23, v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  sub_24F826654((uint64_t)&v23);
  if (!v6)
  {
    uint64_t v7 = *((void *)&v24 + 1);
    uint64_t v27 = *((void *)&v24 + 1);
    uint64_t v8 = *(void *)(*((void *)&v24 + 1) + 16);
    if (v8)
    {
      uint64_t v19 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_24F77C4AC();
      uint64_t v9 = v7 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        sub_24F7738B4();
        sub_24F780504();
        swift_bridgeObjectRelease();
        unint64_t v10 = *(void *)(v19 + 16);
        if (v10 >= *(void *)(v19 + 24) >> 1) {
          sub_24F77C4AC();
        }
        v9 += 16;
        *(void *)(v19 + 16) = v10 + 1;
        uint64_t v11 = v19 + 16 * v10;
        *(void *)(v11 + 32) = 34;
        *(void *)(v11 + 40) = 0xE100000000000000;
        --v8;
      }
      while (v8);
      sub_24F809590((uint64_t)&v27);
    }
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25;
    uint64_t v26 = v25;
    uint64_t v13 = *(void *)(v25 + 16);
    if (v13)
    {
      uint64_t v20 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_24F77C4AC();
      uint64_t v14 = v12 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_24F772990();
        sub_24F8CEEB0();
        sub_24F7738B4();
        sub_24F780504();
        swift_bridgeObjectRelease();
        unint64_t v15 = *(void *)(v20 + 16);
        if (v15 >= *(void *)(v20 + 24) >> 1) {
          sub_24F77C4AC();
        }
        v14 += 16;
        *(void *)(v20 + 16) = v15 + 1;
        uint64_t v16 = v20 + 16 * v15;
        *(void *)(v16 + 32) = 34;
        *(void *)(v16 + 40) = 0xE100000000000000;
        --v13;
      }
      while (v13);
      sub_24F809590((uint64_t)&v26);
    }
    sub_24F826BA8();
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    int v17 = v23;
    if (v23 == 1)
    {
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      uint64_t v21 = 0x20455441445055;
      uint64_t v22 = 0xE700000000000000;
    }
    else
    {
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      uint64_t v21 = 0x4F20455441445055;
      uint64_t v22 = 0xEA00000000002052;
      sub_24F826CA0();
      switch(v17)
      {
        case 1:
          __break(1u);
          JUMPOUT(0x24F8245ECLL);
        case 4:
          sub_24F826C78();
          break;
        default:
          break;
      }
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
    }
    sub_24F8CEEB0();
    sub_24F7738B4();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F77EFB8();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    uint64_t v4 = v21;
    sub_24F7DCAF0((uint64_t)&v23);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24F8829A0((uint64_t)sub_24F826B08, 0);
    swift_isUniquelyReferenced_nonNull_native();
    sub_24F7DC4FC(v21, v22, (uint64_t)&v23);
    swift_bridgeObjectRelease();
    sub_24F826654((uint64_t)&v23);
    sub_24F882A84();
    swift_release();
  }
  return v4;
}

uint64_t sub_24F824600()
{
  sub_24F77C07C();
  return sub_24F824610(v0, v1, v2, v3, v4);
}

uint64_t sub_24F824610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24F77C4AC();
    uint64_t v8 = a3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      sub_24F7738B4();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      unint64_t v9 = *(void *)(v13 + 16);
      if (v9 >= *(void *)(v13 + 24) >> 1) {
        sub_24F77C4AC();
      }
      v8 += 16;
      *(void *)(v13 + 16) = v9 + 1;
      uint64_t v10 = v13 + 16 * v9;
      *(void *)(v10 + 32) = 34;
      *(void *)(v10 + 40) = 0xE100000000000000;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v5 = a5;
  }
  sub_24F781274(&qword_26B1F7F48);
  sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
  sub_24F826BA8();
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  sub_24F7738B4();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F77EFB8();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24F824848@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1[1];
  *(void *)a3 = *a1;
  *(void *)(a3 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)&long long v12 = *(void *)(a2 + 24);
  *((void *)&v12 + 1) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7BF460((uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v15;
  if (v15)
  {
    uint64_t v7 = v16;
    sub_24F7811D0(v14, v15);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v7 + 24))(&v12, v6, v7);
    long long v11 = v12;
    char v8 = v13;
    uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v14);
    long long v10 = v11;
  }
  else
  {
    uint64_t result = sub_24F7783C0((uint64_t)v14, &qword_26B1F7AC0);
    long long v10 = 0uLL;
    char v8 = 4;
  }
  *(_OWORD *)(a3 + 16) = v10;
  *(unsigned char *)(a3 + 32) = v8;
  return result;
}

uint64_t sub_24F82494C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F790830(*(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  return v0;
}

uint64_t sub_24F824998()
{
  sub_24F82494C();
  return MEMORY[0x270FA0228](v0, 73, 7);
}

uint64_t sub_24F8249CC()
{
  sub_24F8A2454();
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F7C2D90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F824A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  if ((sub_24F7DA260(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  BOOL v8 = v2 == v5 && v3 == v6;
  if (!v8 && (sub_24F8CFD00() & 1) == 0) {
    return 0;
  }
  return sub_24F7EBE30(v4, v7);
}

uint64_t sub_24F824AF8()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F824B94()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F824C28()
{
  sub_24F8266E8();
  uint64_t v0 = sub_24F8CEC70();
  sub_24F781274(&qword_26B1F7060);
  swift_allocObject();
  uint64_t result = sub_24F882F70(v0);
  qword_26B1F7210 = result;
  return result;
}

uint64_t sub_24F824C98()
{
  sub_24F8A2454();
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F7C2D90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F7C2D90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F824D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  unint64_t v9 = *(void **)(a2 + 24);
  BOOL v8 = *(void **)(a2 + 32);
  if ((sub_24F7DA260(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  BOOL v10 = v2 == v6 && v3 == v7;
  if (!v10 && (sub_24F8CFD00() & 1) == 0 || (sub_24F7EBE30(v5, v9) & 1) == 0) {
    return 0;
  }
  return sub_24F7EBE30(v4, v8);
}

uint64_t sub_24F824DFC()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F824EBC()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F824F74()
{
  sub_24F82669C();
  uint64_t v0 = sub_24F8CEC70();
  sub_24F781274(&qword_26B1F58D0);
  swift_allocObject();
  uint64_t result = sub_24F882F70(v0);
  qword_26B1F58B8 = result;
  return result;
}

uint64_t sub_24F824FE4()
{
  return swift_bridgeObjectRetain();
}

void sub_24F824FFC()
{
  v6[1] = *MEMORY[0x263EF8340];
  sub_24F826C50();
  uint64_t v2 = (void *)(v1 >> 6);
  uint64_t v3 = 8 * (v1 >> 6);
  if (v4 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    sub_24F838880(0, (uint64_t)v2, (void *)((char *)v6 - ((v3 + 15) & 0x3FFFFFFFFFFFFFF0)));
    sub_24F785730();
    swift_release();
    if (!v2) {
      return;
    }
    swift_willThrow();

    __break(1u);
  }
  uint64_t v5 = (void *)swift_slowAlloc();
  sub_24F838880(0, (uint64_t)v2, v5);
  sub_24F785730();
  swift_release();
  if (v2)
  {

    sub_24F77FE20();
    __break(1u);
  }
  else
  {
    sub_24F77FE20();
  }
}

void sub_24F82514C(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return;
  }
  v25[11] = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return;
  }
  unsigned int v4 = (void *)(a2 + 56);
  v25[0] = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = (uint64_t *)(v25[0] + 16 * v5);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    ++v5;
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t v9 = sub_24F8CFF80();
    uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v11 = v9 & ~v10;
    sub_24F826BF0();
    if (v12) {
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    if (v5 == v3)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  uint64_t v13 = *(void *)(a2 + 48);
  uint64_t v14 = (void *)(v13 + 16 * v11);
  BOOL v15 = *v14 == v8 && v14[1] == v7;
  if (!v15 && (sub_24F8CFD00() & 1) == 0)
  {
    uint64_t v16 = ~v10;
    while (1)
    {
      uint64_t v11 = (v11 + 1) & v16;
      sub_24F826BF0();
      if ((v17 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v18 = (void *)(v13 + 16 * v11);
      BOOL v19 = *v18 == v8 && v18[1] == v7;
      if (v19 || (sub_24F8CFD00() & 1) != 0)
      {
        uint64_t v26 = v5;
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v5;
LABEL_22:
  sub_24F826C50();
  size_t v22 = 8 * (v21 >> 6);
  if (v23 < 0xE || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    memcpy((char *)v25 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v22);
    sub_24F781D88();
    swift_release();
    if (a2 == -56)
    {
      swift_bridgeObjectRelease();
      return;
    }
    swift_willThrow();

    __break(1u);
LABEL_31:

    sub_24F77FE20();
    __break(1u);
  }
  else
  {
    long long v24 = (void *)swift_slowAlloc();
    memcpy(v24, (const void *)(a2 + 56), v22);
    sub_24F781D88();
    swift_release();
    if (a2 != -56) {
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    sub_24F77FE20();
  }
}

uint64_t sub_24F8253FC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v30 = (unint64_t *)result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_24F825A90(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_30;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t v14 = sub_24F8CFF80();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_25;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    uint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_24F8CFD00() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_24F8CFD00() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_13;
        }
      }
LABEL_25:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_31;
      }
      --v31;
      if (!v23) {
        return MEMORY[0x263F8EE88];
      }
    }
LABEL_26:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_24F825624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
LABEL_35:
    swift_release();
    return;
  }
  uint64_t v7 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return;
  }
  sub_24F7752F0();
  sub_24F781274(&qword_269A2A1C8);
  uint64_t v8 = sub_24F8CF7A0();
  uint64_t v9 = v8;
  if (v4 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *v5;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v8 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v4) {
      goto LABEL_35;
    }
    ++v11;
    if (!v5[v15])
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v4) {
        goto LABEL_35;
      }
      if (!v5[v11])
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v4) {
          goto LABEL_35;
        }
        if (!v5[v11]) {
          break;
        }
      }
    }
LABEL_23:
    sub_24F7773D0();
    unint64_t v10 = v18 & v17;
    unint64_t v14 = v19 + (v11 << 6);
LABEL_24:
    uint64_t v20 = *(void *)(*(void *)(a4 + 48) + 8 * v14);
    unint64_t v21 = sub_24F8CFF20() & ~(-1 << *(unsigned char *)(v9 + 32));
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) == 0)
    {
      sub_24F77B984();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        BOOL v25 = v23 == v24;
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        v22 |= v25;
        if (*(void *)(v12 + 8 * v23) != -1)
        {
          sub_24F774704();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    sub_24F773BF4();
LABEL_33:
    sub_24F77C7BC();
    *(void *)(v12 + v26) |= v27;
    *(void *)(*(void *)(v9 + 48) + 8 * v28) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v7--, 1)) {
      goto LABEL_38;
    }
    if (!v7) {
      goto LABEL_35;
    }
  }
  uint64_t v16 = v15 + 3;
  if (v16 >= v4) {
    goto LABEL_35;
  }
  if (v5[v16])
  {
    uint64_t v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v4) {
      goto LABEL_35;
    }
    ++v16;
    if (v5[v11]) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
}

void sub_24F825828(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
LABEL_35:
    swift_release();
    return;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return;
  }
  sub_24F781274(&qword_26B1F7F18);
  uint64_t v8 = sub_24F8CF7A0();
  uint64_t v9 = v8;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v8 + 56;
  uint64_t v37 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v36) {
      goto LABEL_35;
    }
    ++v11;
    if (!v35[v15])
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v36) {
        goto LABEL_35;
      }
      if (!v35[v11])
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v36) {
          goto LABEL_35;
        }
        if (!v35[v11]) {
          break;
        }
      }
    }
LABEL_23:
    sub_24F7773D0();
    unint64_t v10 = v18 & v17;
    unint64_t v14 = v19 + (v11 << 6);
LABEL_24:
    uint64_t v20 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v14);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    uint64_t v24 = v20[3];
    sub_24F8CFF30();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    swift_bridgeObjectRelease();
    unint64_t v25 = sub_24F8CFF80() & ~(-1 << *(unsigned char *)(v9 + 32));
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) == 0)
    {
      sub_24F77B984();
      while (++v27 != v28 || (v26 & 1) == 0)
      {
        BOOL v29 = v27 == v28;
        if (v27 == v28) {
          uint64_t v27 = 0;
        }
        v26 |= v29;
        if (*(void *)(v12 + 8 * v27) != -1)
        {
          sub_24F774704();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    sub_24F773BF4();
LABEL_33:
    sub_24F77C7BC();
    *(void *)(v12 + v30) |= v31;
    char v33 = (void *)(*(void *)(v9 + 48) + 32 * v32);
    *char v33 = v21;
    v33[1] = v22;
    v33[2] = v23;
    v33[3] = v24;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    uint64_t v4 = v37;
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v16 = v15 + 3;
  if (v16 >= v36) {
    goto LABEL_35;
  }
  if (v35[v16])
  {
    uint64_t v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v36) {
      goto LABEL_35;
    }
    ++v16;
    if (v35[v11]) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_24F825A90(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_35:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_24F781274(&qword_26B1F7F20);
  uint64_t result = sub_24F8CF7A0();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_35;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_35;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t result = sub_24F8CFF80();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_35;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_24F825D20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t v10 = sub_24F8CFF80();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_22;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    uint64_t v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_24F8CFD00() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        char v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_24F8CFD00() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_10;
        }
      }
LABEL_22:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_24F825A90(a1, v5, v26, a4);
}

uint64_t sub_24F825F34()
{
  return 40;
}

__n128 sub_24F825F40(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_24F825F54()
{
  return swift_getAtKeyPath();
}

void *sub_24F825F84(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PersistenceError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PersistenceError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PersistenceError()
{
  return &type metadata for PersistenceError;
}

_WORD *initializeBufferWithCopyOfBuffer for PersistenceConflictPolicy(_WORD *result, _WORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PersistenceConflictPolicy(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 65284 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65284 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65285;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersistenceConflictPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65284 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65284 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 252;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F8261E8);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistenceConflictPolicy()
{
  return &type metadata for PersistenceConflictPolicy;
}

uint64_t dispatch thunk of static MutablePersistableRecord.persistenceConflictPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MutablePersistableRecord.didInsert(with:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of MutablePersistableRecord.insert(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of MutablePersistableRecord.update(_:columns:)()
{
  sub_24F826C24();
  return v0();
}

uint64_t dispatch thunk of MutablePersistableRecord.save(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of MutablePersistableRecord.delete(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))() & 1;
}

uint64_t dispatch thunk of MutablePersistableRecord.exists(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))() & 1;
}

uint64_t dispatch thunk of PersistableRecord.didInsert(with:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PersistableRecord.insert(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PersistableRecord.save(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_24F826378()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24F8263D4@<X0>(uint64_t a1@<X8>)
{
  return sub_24F826CB4(a1);
}

uint64_t sub_24F8263F0()
{
  return 24;
}

__n128 sub_24F8263FC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_24F826410()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F826450()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F826498@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F824848(a1, v2, a2);
}

int64_t sub_24F8264BC(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (__n128 result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_24F8265A4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24F826624@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F824FE4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_24F826654(uint64_t a1)
{
  return a1;
}

unint64_t sub_24F82669C()
{
  unint64_t result = qword_26B1F58C0;
  if (!qword_26B1F58C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F58C0);
  }
  return result;
}

unint64_t sub_24F8266E8()
{
  unint64_t result = qword_26B1F7050;
  if (!qword_26B1F7050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7050);
  }
  return result;
}

uint64_t initializeWithCopy for InsertQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InsertQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InsertQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InsertQuery()
{
  return &type metadata for InsertQuery;
}

uint64_t destroy for UpdateQuery()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UpdateQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UpdateQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UpdateQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateQuery(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateQuery()
{
  return &type metadata for UpdateQuery;
}

unint64_t sub_24F826A6C()
{
  unint64_t result = qword_26B1F7058;
  if (!qword_26B1F7058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7058);
  }
  return result;
}

unint64_t sub_24F826ABC()
{
  unint64_t result = qword_26B1F58C8;
  if (!qword_26B1F58C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F58C8);
  }
  return result;
}

uint64_t sub_24F826B08@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F826624(a1);
}

uint64_t sub_24F826B20()
{
  return v0;
}

void sub_24F826B3C()
{
  sub_24F77C4AC();
}

uint64_t sub_24F826B78()
{
  return v0;
}

uint64_t sub_24F826B90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F826BA8()
{
  return 0x20444E4120;
}

void sub_24F826BBC()
{
  sub_24F77C4AC();
}

uint64_t sub_24F826BDC()
{
  return v0;
}

uint64_t sub_24F826C04()
{
  return sub_24F87F4C4(v0);
}

uint64_t sub_24F826C30(void (*a1)(long long *__return_ptr, void *))
{
  return sub_24F81FB48(a1, v1, v2);
}

uint64_t sub_24F826C78()
{
  return 0x4543414C504552;
}

uint64_t sub_24F826CA0()
{
  return 0x4B4341424C4C4F52;
}

uint64_t sub_24F826CB4@<X0>(uint64_t a1@<X8>)
{
  return sub_24F823F8C(v1, a1);
}

uint64_t sub_24F826CCC()
{
  return v0;
}

void sub_24F826CEC()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_24F826D00(uint64_t a1)
{
  ppSnapshot[1] = *(sqlite3_snapshot **)MEMORY[0x263EF8340];
  ppSnapshot[0] = 0;
  swift_beginAccess();
  int v3 = sqlite3_snapshot_get(*(sqlite3 **)(a1 + 16), "main", ppSnapshot);
  swift_release();
  if (v3 || !ppSnapshot[0])
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(sqlite3_snapshot **)(v1 + 16) = ppSnapshot[0];
  }
  return v1;
}

uint64_t sub_24F826DEC()
{
  sqlite3_snapshot_free(*(sqlite3_snapshot **)(v0 + 16));
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for WALSnapshot()
{
  return self;
}

uint64_t sub_24F826E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24F7786CC(a6, (uint64_t)v18);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DDBF0;
  v21[0] = a2;
  v21[1] = a3;
  void v21[2] = a4;
  _OWORD v21[3] = a5;
  sub_24F7725D4(v21);
  sub_24F76C344((uint64_t)v21, v11 + 32);
  sub_24F7786CC((uint64_t)v18, (uint64_t)v17);
  long long v14 = 0u;
  long long v15 = 0u;
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7AC1D0((uint64_t)v17, (uint64_t)&v14);
  char v20 = 2;
  v19[0] = v14;
  v19[1] = v15;
  void v19[2] = v16;
  sub_24F7783C0((uint64_t)v18, &qword_26B1F7F10);
  uint64_t v12 = sub_24F826F8C(a1, (uint64_t)v19);
  sub_24F7783C0((uint64_t)v19, &qword_26B1F7D38);
  return v12;
}

uint64_t sub_24F826F8C(uint64_t a1, uint64_t a2)
{
  sub_24F7F9440(a1, (uint64_t)&v8);
  if (!v2)
  {
    sub_24F7786CC((uint64_t)&v9, (uint64_t)v7);
    sub_24F781274(&qword_26B1F7618);
    swift_allocObject();
    uint64_t v4 = swift_retain_n();
    uint64_t v6 = sub_24F85F910(v4, 0, 0, (uint64_t)v7);
    uint64_t v10 = MEMORY[0x263F8EE78];
    swift_beginAccess();
    if (*(unsigned char *)(v6 + 24) == 1)
    {
      swift_release();
      a2 = MEMORY[0x263F8EE78];
    }
    else
    {
      swift_retain();
      swift_retain();
      sub_24F899D40();
      swift_release();
      *(unsigned char *)(v6 + 24) = 1;
      swift_release();
      a2 = v10;
    }
    sub_24F7AD1E4((uint64_t)&v8);
    swift_release();
  }
  return a2;
}

BOOL static FTS3.Diacritics.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FTS3.Diacritics.hash(into:)()
{
  return sub_24F8CFF40();
}

uint64_t FTS3.Diacritics.hashValue.getter()
{
  return sub_24F8CFF80();
}

GRDBInternal::FTS3 __swiftcall FTS3.init()()
{
  void *v0 = 863204454;
  v0[1] = 0xE400000000000000;
  return result;
}

uint64_t static FTS3.tokenize(_:withTokenizer:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = type metadata accessor for Configuration();
  unint64_t v7 = (int *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a3;
  *(_WORD *)uint64_t v9 = 1;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *(_DWORD *)(v9 + 23) = 0;
  *((void *)v9 + 4) = MEMORY[0x263F8EE78];
  *((_WORD *)v9 + 20) = 0;
  v9[64] = 2;
  *((void *)v9 + 9) = 0;
  *((void *)v9 + 10) = 0;
  v9[88] = -1;
  *((void *)v9 + 12) = 5;
  *((void *)v9 + 6) = 0;
  *((void *)v9 + 7) = 0;
  sub_24F8CEBF0();
  *(void *)&v9[v7[19]] = 0;
  *(void *)&v9[v7[20]] = 0;
  v9[v7[21]] = 1;
  v9[v7[22]] = 0;
  uint64_t v11 = &v9[v7[23]];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = &v9[v7[24]];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  unint64_t v13 = &v9[v7[25]];
  type metadata accessor for DatabaseQueue();
  *(void *)unint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  long long v16 = *(_OWORD *)(a3 + 1);
  swift_initStackObject();
  DatabaseQueue.init(configuration:)((uint64_t)v9);
  uint64_t v17 = v10;
  long long v18 = v16;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v14 = sub_24F856764();
  swift_release();
  return v14;
}

uint64_t sub_24F827348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v34 = a1;
  swift_bridgeObjectRetain();
  sub_24F787184();
  uint64_t v14 = v13;
  unint64_t v15 = *(void *)(v13 + 16);
  if (v15 >= *(void *)(v13 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v14 = v30;
  }
  *(void *)(v14 + 16) = v15 + 1;
  uint64_t v16 = v14 + 16 * v15;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  uint64_t v17 = *(void *)(a4 + 16);
  if (v17)
  {
    uint64_t v31 = a5;
    swift_bridgeObjectRetain();
    uint64_t v18 = a4 + 40;
    do
    {
      *(void *)&v32[0] = 34;
      *((void *)&v32[0] + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      long long v19 = v32[0];
      unint64_t v20 = *(void *)(v14 + 16);
      if (v20 >= *(void *)(v14 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v14 = v21;
      }
      v18 += 16;
      *(void *)(v14 + 16) = v20 + 1;
      *(_OWORD *)(v14 + 16 * v20 + 32) = v19;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a5 = v31;
  }
  swift_bridgeObjectRetain();
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  v22._countAndFlagsBits = 0xD00000000000002FLL;
  v32[0] = MEMORY[0x263F8EE78];
  v23.values._rawValue = v32;
  v22._object = (void *)0x800000024F8D2D30;
  uint64_t v24 = v34;
  Database.execute(sql:arguments:)(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_24F781274(&qword_26B1F7AB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = &protocol witness table for String;
    *(void *)(inited + 32) = a5;
    *(void *)(inited + 40) = a6;
    swift_bridgeObjectRetain();
    sub_24F780F38(inited, v32);
    long long v27 = v32[0];
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
    uint64_t v28 = sub_24F826E48(v24, 0xD00000000000003ALL, 0x800000024F8D2D80, v27, *((uint64_t *)&v27 + 1), (uint64_t)v32);
    sub_24F7783C0((uint64_t)v32, &qword_26B1F7F10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a7 = v28;
  }
  return result;
}

uint64_t FTS3.moduleName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *FTS3.makeTableDefinition(configuration:)()
{
  type metadata accessor for FTS3TableDefinition();
  uint64_t result = (void *)swift_allocObject();
  result[2] = MEMORY[0x263F8EE78];
  result[3] = 0;
  result[4] = 0;
  result[5] = 0;
  return result;
}

uint64_t FTS3.moduleArguments(for:in:)(void *a1)
{
  uint64_t v2 = a1[2];
  swift_beginAccess();
  uint64_t v3 = a1[4];
  if (v3)
  {
    uint64_t v4 = a1[3];
    uint64_t v5 = a1[5];
    if (*(void *)(v5 + 16))
    {
      swift_bridgeObjectRetain();
      sub_24F827D20(v4, v3);
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6)
      {
        uint64_t v15 = v2;
        uint64_t v16 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_24F77C4AC();
        uint64_t v7 = v5 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          unint64_t v8 = *(void *)(v16 + 16);
          if (v8 >= *(void *)(v16 + 24) >> 1) {
            sub_24F77C4AC();
          }
          v7 += 16;
          *(void *)(v16 + 16) = v8 + 1;
          uint64_t v9 = v16 + 16 * v8;
          *(void *)(v9 + 32) = 34;
          *(void *)(v9 + 40) = 0xE100000000000000;
          --v6;
        }
        while (v6);
        sub_24F827D64(v4, v3);
        swift_bridgeObjectRelease();
        uint64_t v2 = v15;
      }
      else
      {
        sub_24F827D64(v4, v3);
      }
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      sub_24F8CED30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_24F827D20(v4, v3);
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      sub_24F827D64(v4, v3);
    }
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F787184();
      uint64_t v2 = v13;
    }
    unint64_t v10 = *(void *)(v2 + 16);
    if (v10 >= *(void *)(v2 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v2 = v14;
    }
    *(void *)(v2 + 16) = v10 + 1;
    uint64_t v11 = v2 + 16 * v10;
    *(void *)(v11 + 32) = 0x657A696E656B6F74;
    *(void *)(v11 + 40) = 0xE90000000000003DLL;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v2;
}

void sub_24F827AA8()
{
}

void *sub_24F827AB8@<X0>(void *a1@<X8>)
{
  uint64_t result = FTS3.makeTableDefinition(configuration:)();
  *a1 = result;
  return result;
}

uint64_t sub_24F827AE0(void **a1)
{
  return FTS3.moduleArguments(for:in:)(*a1);
}

uint64_t FTS3TableDefinition.tokenizer.getter@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return sub_24F827D20(v3, v4);
}

uint64_t FTS3TableDefinition.tokenizer.setter(long long *a1)
{
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  swift_beginAccess();
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  *(_OWORD *)(v1 + 3) = v6;
  v1[5] = v2;
  return sub_24F827D64(v3, v4);
}

uint64_t (*FTS3TableDefinition.tokenizer.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall FTS3TableDefinition.column(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  swift_bridgeObjectRetain();
  sub_24F786A44();
  uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 16);
  sub_24F786DF4();
  uint64_t v5 = *(void *)(v1 + 16);
  *(void *)(v5 + 16) = v4 + 1;
  uint64_t v6 = v5 + 16 * v4;
  *(void *)(v6 + 32) = countAndFlagsBits;
  *(void *)(v6 + 40) = object;
}

uint64_t FTS3TableDefinition.deinit()
{
  swift_bridgeObjectRelease();
  sub_24F827D64(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return v0;
}

uint64_t FTS3TableDefinition.__deallocating_deinit()
{
  FTS3TableDefinition.deinit();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_24F827CD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F827348(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t type metadata accessor for FTS3TableDefinition()
{
  return self;
}

uint64_t sub_24F827D20(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24F827D64(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24F827DAC()
{
  unint64_t result = qword_269A2B3E8[0];
  if (!qword_269A2B3E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269A2B3E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FTS3()
{
  return &type metadata for FTS3;
}

unsigned char *storeEnumTagSinglePayload for FTS3.Diacritics(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F827ED4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FTS3.Diacritics()
{
  return &type metadata for FTS3.Diacritics;
}

uint64_t method lookup function for FTS3TableDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FTS3TableDefinition);
}

uint64_t sub_24F827F24@<X0>(uint64_t *__src@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  long long v11 = *a2;
  uint64_t v4 = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a2 + 3);
  char v6 = *((unsigned char *)a2 + 32);
  uint64_t v8 = *__src;
  uint64_t v7 = __src[1];
  memcpy(&__srca[7], __src, 0xA2uLL);
  sub_24F781274(&qword_26B1F5658);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24F8DDBF0;
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = v7;
  *(unsigned char *)(v9 + 48) = 0;
  *(_OWORD *)(v9 + 56) = v11;
  *(void *)(v9 + 72) = v4;
  *(void *)(v9 + 80) = v5;
  *(unsigned char *)(v9 + 88) = v6;
  memcpy((void *)(v9 + 89), __srca, 0xA9uLL);
  *(unsigned char *)(v9 + 258) = 0;
  *a3 = v9;
  return swift_bridgeObjectRetain();
}

uint64_t JoinAssociation._sqlAssociation.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t JoinAssociation._sqlAssociation.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  return result;
}

uint64_t (*JoinAssociation._sqlAssociation.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_24F828054(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F828090(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void (*sub_24F8280D4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = JoinAssociation._sqlAssociation.modify();
  return sub_24F79A608;
}

uint64_t sub_24F82812C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_24F828168(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for JoinAssociation()
{
  return sub_24F777DE0();
}

void sub_24F8281BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    unint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_24F795784();
  unint64_t v29 = v5;
  unint64_t v30 = v4;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  unint64_t v26 = v6;
  if (v6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t *)(a2 + 40);
    uint64_t v8 = (uint64_t *)(a1 + 40);
    unint64_t v9 = v4;
    while (v9)
    {
      if (!v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *v8;
      uint64_t v11 = *v7;
      uint64_t v31 = *(v8 - 1);
      uint64_t v32 = *(v7 - 1);
      unint64_t v13 = *(void *)(v35 + 16);
      unint64_t v12 = *(void *)(v35 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1) {
        sub_24F795784();
      }
      *(void *)(v35 + 16) = v13 + 1;
      uint64_t v14 = (void *)(v35 + 32 * v13);
      v14[4] = v31;
      v14[5] = v10;
      --v5;
      v14[6] = v32;
      v14[7] = v11;
      --v9;
      v7 += 2;
      v8 += 2;
      if (!--v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    unint64_t v16 = v29;
    unint64_t v15 = v30;
    if (v30 <= v29)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    unint64_t v17 = v26;
    uint64_t v33 = 16 * v26;
    uint64_t v18 = v27;
    uint64_t v19 = v28;
    while (v17 < v15)
    {
      if (v16 == v17) {
        goto LABEL_21;
      }
      if (v17 >= v16) {
        goto LABEL_25;
      }
      uint64_t v20 = *(void *)(v19 + v33 + 40);
      uint64_t v34 = *(void *)(v19 + v33 + 32);
      uint64_t v22 = *(void *)(v18 + v33 + 32);
      uint64_t v21 = *(void *)(v18 + v33 + 40);
      unint64_t v24 = *(void *)(v35 + 16);
      unint64_t v23 = *(void *)(v35 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v24 >= v23 >> 1) {
        sub_24F795784();
      }
      ++v17;
      *(void *)(v35 + 16) = v24 + 1;
      uint64_t v25 = (void *)(v35 + 32 * v24);
      v25[4] = v34;
      v25[5] = v20;
      v25[6] = v22;
      v25[7] = v21;
      v19 += 16;
      v18 += 16;
      unint64_t v16 = v29;
      unint64_t v15 = v30;
      if (v30 == v17) {
        goto LABEL_21;
      }
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_24F8283FC(uint64_t a1, long long *a2)
{
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    unint64_t v4 = 0;
    unint64_t v5 = (_OWORD *)(a1 + 48);
    uint64_t v6 = MEMORY[0x263F8EE78];
    while (v4 < *(void *)(a1 + 16))
    {
      uint64_t v7 = *((void *)v5 - 2);
      uint64_t v8 = *((void *)v5 - 1);
      long long v16 = *v5;
      v17[0] = v7;
      v17[1] = v8;
      long long v18 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v9 = sub_24F828AC8((uint64_t)v17, (uint64_t)a2);
      if (v2)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v26 = *a2;
        sub_24F828E6C((uint64_t)&v26);
        long long v25 = a2[1];
        sub_24F828E6C((uint64_t)&v25);
        sub_24F828E04((uint64_t)(a2 + 2), (uint64_t)v27);
        sub_24F809590((uint64_t)v27);
        sub_24F828E04((uint64_t)a2 + 40, (uint64_t)v24);
        unint64_t v13 = v24;
        goto LABEL_15;
      }
      if (v9)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = v6;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24F795740();
          uint64_t v6 = v19;
        }
        unint64_t v11 = *(void *)(v6 + 16);
        if (v11 >= *(void *)(v6 + 24) >> 1)
        {
          sub_24F795740();
          uint64_t v6 = v19;
        }
        *(void *)(v6 + 16) = v11 + 1;
        uint64_t v12 = v6 + 32 * v11;
        *(void *)(v12 + 32) = v7;
        *(void *)(v12 + 40) = v8;
        *(_OWORD *)(v12 + 48) = v16;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v4;
      v5 += 2;
      if (v14 == v4) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    long long v23 = *a2;
    sub_24F828E6C((uint64_t)&v23);
    long long v22 = a2[1];
    sub_24F828E6C((uint64_t)&v22);
    sub_24F828E04((uint64_t)(a2 + 2), (uint64_t)v21);
    sub_24F809590((uint64_t)v21);
    sub_24F828E04((uint64_t)a2 + 40, (uint64_t)v20);
    unint64_t v13 = v20;
LABEL_15:
    sub_24F809590((uint64_t)v13);
  }
}

uint64_t sub_24F82862C(uint64_t a1)
{
  int v3 = v1;
  uint64_t v5 = v3[4];
  if (!v5
    || (sub_24F828E04((uint64_t)(v3 + 5), (uint64_t)v23), sub_24F828E04((uint64_t)v23, (uint64_t)&v24), (uint64_t v6 = v24) == 0))
  {
    uint64_t v8 = Database.foreignKeys(on:)(*v3, v3[1]);
    if (v2) {
      return a1;
    }
    uint64_t v9 = v8;
    uint64_t v10 = v3[2];
    sub_24F828E04((uint64_t)(v3 + 5), (uint64_t)v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F8092B8((uint64_t)v22);
    sub_24F8283FC(v9, (long long *)v3);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      a1 = *(void *)(v11 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != 1)
      {
        uint64_t v19 = 0;
        unint64_t v20 = 0xE000000000000000;
        sub_24F8CF7D0();
        swift_bridgeObjectRelease();
        sub_24F773C08();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F77E958();
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
LABEL_8:
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    if (v5)
    {
      Database.primaryKey(_:)(&v19, v10);
      uint64_t v14 = v19;
      if (v21)
      {
        if (v21 == 1) {
          unint64_t v15 = v19;
        }
        else {
          unint64_t v15 = &unk_2701026E0;
        }
      }
      else
      {
        unint64_t v16 = v20;
        sub_24F781274((uint64_t *)&unk_26B1F7C88);
        unint64_t v15 = (_OWORD *)swift_allocObject();
        v15[1] = xmmword_24F8DDBF0;
        *((void *)v15 + 4) = v14;
        *((void *)v15 + 5) = v16;
      }
      if (*(void *)(v5 + 16) == *((void *)v15 + 2))
      {
        uint64_t v17 = swift_bridgeObjectRetain();
        sub_24F8281BC(v17, (uint64_t)v15);
        a1 = v18;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    sub_24F8CF7D0();
    swift_bridgeObjectRelease();
    sub_24F773C08();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F77E958();
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (*(void *)(v5 + 16) == *(void *)(v24 + 16))
  {
    swift_bridgeObjectRetain();
    sub_24F8092B8((uint64_t)v23);
    sub_24F8281BC(v5, v6);
    a1 = v7;
    swift_bridgeObjectRelease();
    sub_24F809590((uint64_t)v23);
    return a1;
  }
LABEL_22:
  uint64_t result = sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F8289CC(char a1, uint64_t a2)
{
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (a1)
  {
    if (v9)
    {
      sub_24F77E160();
      uint64_t v10 = v16;
      uint64_t v11 = a2 + 56;
      do
      {
        sub_24F77F6B0();
        swift_bridgeObjectRetain();
        if (v6 >= v7 >> 1)
        {
          sub_24F77FE8C();
          uint64_t v10 = v16;
        }
        v11 += 32;
        *(void *)(v10 + 16) = v3;
        uint64_t v12 = (void *)(v10 + 32 * v6);
        v12[4] = v4;
        v12[5] = a2;
        v12[6] = v5;
        v12[7] = v2;
        --v9;
      }
      while (v9);
    }
  }
  else if (v9)
  {
    sub_24F77E160();
    uint64_t v10 = v16;
    uint64_t v13 = a2 + 56;
    do
    {
      sub_24F77F6B0();
      swift_bridgeObjectRetain();
      if (v6 >= v7 >> 1)
      {
        sub_24F77FE8C();
        uint64_t v10 = v16;
      }
      v13 += 32;
      *(void *)(v10 + 16) = v3;
      uint64_t v14 = (void *)(v10 + 32 * v6);
      v14[4] = v5;
      v14[5] = v2;
      v14[6] = v4;
      v14[7] = a2;
      --v9;
    }
    while (v9);
  }
  return v10;
}

BOOL sub_24F828AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = sub_24F8CED00();
  uint64_t v6 = v5;
  if (v4 == sub_24F8CED00() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_24F8CFD00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v9 & 1) == 0) {
      return result;
    }
  }
  uint64_t v11 = *(void *)(a2 + 32);
  if (v11)
  {
    uint64_t v12 = *(void *)(v11 + 16);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24F8CF300();
    uint64_t v33 = v13;
    if (v12)
    {
      uint64_t v14 = v11 + 40;
      do
      {
        sub_24F8CED00();
        sub_24F8B6490();
        swift_bridgeObjectRelease();
        v14 += 16;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      uint64_t v15 = v33;
    }
    else
    {
      uint64_t v15 = v13;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24F8CF300();
    uint64_t v34 = v16;
    uint64_t v17 = *(void *)(v3 + 16);
    if (v17)
    {
      uint64_t v18 = v3 + 40;
      do
      {
        sub_24F8CED00();
        sub_24F8B6490();
        swift_bridgeObjectRelease();
        v18 += 32;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      uint64_t v19 = v34;
    }
    else
    {
      uint64_t v19 = v16;
      swift_bridgeObjectRelease();
    }
    sub_24F80C2E8(v15, v19);
    char v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v22 = *(void *)(a2 + 40);
  if (!v22) {
    return 1;
  }
  uint64_t v23 = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_24F8CF300();
  uint64_t v35 = v24;
  if (v23)
  {
    uint64_t v25 = v22 + 40;
    do
    {
      sub_24F8CED00();
      sub_24F8B6490();
      swift_bridgeObjectRelease();
      v25 += 16;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v26 = v35;
  }
  else
  {
    uint64_t v26 = v24;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_24F8CF300();
  uint64_t v36 = v27;
  uint64_t v28 = *(void *)(v3 + 16);
  if (v28)
  {
    uint64_t v29 = v3 + 56;
    do
    {
      sub_24F8CED00();
      sub_24F8B6490();
      swift_bridgeObjectRelease();
      v29 += 32;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    uint64_t v30 = v36;
  }
  else
  {
    uint64_t v30 = v27;
    swift_bridgeObjectRelease();
  }
  sub_24F80C2E8(v26, v30);
  char v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v32 & 1) != 0;
}

uint64_t sub_24F828E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_26B1F5938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F828E6C(uint64_t a1)
{
  return a1;
}

uint64_t DatabaseBackupProgress.remainingPageCount.getter()
{
  return *(void *)v0;
}

uint64_t DatabaseBackupProgress.totalPageCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t DatabaseBackupProgress.completedPageCount.getter()
{
  uint64_t v1 = v0[1];
  uint64_t result = v1 - *v0;
  if (__OFSUB__(v1, *v0)) {
    __break(1u);
  }
  return result;
}

uint64_t DatabaseBackupProgress.isCompleted.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t getEnumTagSinglePayload for DatabaseBackupProgress(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseBackupProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseBackupProgress()
{
  return &type metadata for DatabaseBackupProgress;
}

uint64_t TableAlias.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

uint64_t sub_24F828FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *(void *)(v2 + 48);
  sub_24F8CED00();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_24F782950(), (v9 & 1) != 0))
  {
    memcpy(__dst, (const void *)(*(void *)(v7 + 56) + 176 * v8), 0xABuLL);
    sub_24F7ADA50((uint64_t)__dst);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_24F829230();
    if (__dst[0])
    {
      uint64_t v11 = *(void *)(__dst[0] + 16);
      swift_release();
      sub_24F7ADBB0((uint64_t)__dst);
    }
    else
    {
      memcpy(v16, &__dst[1], sizeof(v16));
      sub_24F82AAE8((__n128 *)&__dst[1]);
      uint64_t v11 = sub_24F83B220(v10);
      sub_24F82AAE8((__n128 *)&__dst[1]);
      swift_release();
      sub_24F7ADBB0((uint64_t)__dst);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v4 + 16);
    uint64_t v12 = *(void *)(v4 + 24);
    swift_retain();
    uint64_t v11 = v13;
    if (v12 < 0)
    {
      uint64_t v11 = sub_24F828FAC(a1);
      sub_24F768C88(v13, v12);
    }
    else
    {
      uint64_t v14 = Database.columns(in:)(a1, a2);
      swift_release();
      if (!v3)
      {
        uint64_t v11 = *(void *)(v14 + 16);
        swift_bridgeObjectRelease();
      }
    }
  }
  return v11;
}

uint64_t sub_24F829160(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_24F8297F8();
  if (v4)
  {
    swift_bridgeObjectRelease();
    return sub_24F8296F8();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 40);
    if (sub_24F80E31C(a1, v6) && sub_24F779FF0(v6) < 2) {
      return 0;
    }
    else {
      return sub_24F829284(a1);
    }
  }
}

BOOL static TableAlias.== infix(_:_:)()
{
  uint64_t v0 = sub_24F829670();
  swift_release();
  uint64_t v1 = sub_24F829670();
  swift_release();
  return v0 == v1;
}

uint64_t sub_24F829230()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = swift_retain();
  if ((v1 & 0x8000000000000000) == 0) {
    return v2;
  }
  uint64_t v5 = sub_24F829230(v3);
  uint64_t v6 = sub_24F77E978();
  sub_24F768C88(v6, v7);
  return v5;
}

uint64_t sub_24F829284(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 32);
  if (*(void *)(v4 + 16))
  {
    swift_retain();
    unint64_t v5 = sub_24F7C0104();
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
      swift_bridgeObjectRetain();
      swift_release();
      return v7;
    }
    swift_release();
  }
  uint64_t v8 = *(void *)(v2 + 24);
  if ((v8 & 0x8000000000000000) == 0) {
    return sub_24F8296F8();
  }
  uint64_t v9 = *(void *)(v2 + 16);
  swift_retain();
  uint64_t v7 = sub_24F829284(a1);
  sub_24F768C88(v9, v8);
  return v7;
}

uint64_t sub_24F829350@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24F82941C(a2 + 2, *a1, a1[1], a1 + 2);
  *a2 = result;
  a2[1] = v4;
  return result;
}

void *sub_24F829384(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[2] = a1;
  void v4[3] = 0x8000000000000000;
  swift_retain();
  v4[4] = sub_24F7792C8(a2);
  v4[5] = sub_24F779E1C(a2);
  uint64_t v8 = sub_24F77A010(a3, a4, (void (*)(void *__return_ptr, unsigned char *))sub_24F82934C, 0);
  swift_release();
  v4[6] = v8;
  return v4;
}

uint64_t sub_24F82941C(void *a1, int a2, int a3, void *__src)
{
  memcpy(v8, __src, 0xABuLL);
  uint64_t v6 = sub_24F8CED00();
  memcpy(a1, __src, 0xABuLL);
  sub_24F7ADA50((uint64_t)v8);
  return v6;
}

void *sub_24F82949C()
{
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_24F780894();
  return sub_24F829384(v0, v1, v2, v3);
}

uint64_t sub_24F829538(uint64_t a1)
{
  uint64_t v1 = sub_24F829284(a1);
  uint64_t v3 = v2;
  if (v1 == sub_24F829718() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_24F77E978();
    char v6 = sub_24F8CFD00();
    swift_bridgeObjectRelease();
    if (v6) {
      swift_bridgeObjectRelease();
    }
  }
  return sub_24F77E978();
}

uint64_t sub_24F8295CC()
{
  type metadata accessor for StatementArgumentsSink();
  swift_allocObject();
  uint64_t result = sub_24F778A30(1);
  qword_26B1FAB18 = result;
  return result;
}

uint64_t sub_24F82960C(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  v2 += 16;
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  char v7 = *(unsigned char *)(v2 + 32);
  sub_24F82A8F8(a1, v2);
  return sub_24F82A174(v3, v4, v5, v6, v7);
}

uint64_t sub_24F829670()
{
  if (*(unsigned char *)(v0 + 48) == 2)
  {
    uint64_t v1 = swift_retain();
    uint64_t v2 = sub_24F829670(v1);
    uint64_t v3 = sub_24F780894();
    sub_24F82A174(v3, v4, v5, v6, 2);
    return v2;
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_24F8296F8()
{
  uint64_t result = sub_24F8297F8();
  if (!v1) {
    return sub_24F829718();
  }
  return result;
}

uint64_t sub_24F829718()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 == 1)
  {
    swift_bridgeObjectRetain();
    return sub_24F77E978();
  }
  if (v1 == 2)
  {
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v0 + 40);
    uint64_t v4 = swift_retain();
    sub_24F829718(v4);
    uint64_t v5 = sub_24F77E978();
    sub_24F82A174(v5, v6, v3, v2, 2);
    return sub_24F77E978();
  }
  uint64_t result = sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F8297F8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 48))
  {
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    if (*(unsigned char *)(v0 + 48) == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v5 = swift_retain();
      uint64_t v6 = sub_24F8297F8(v5);
      sub_24F82A174(v2, v1, v3, v4, 2);
      return v6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    return v2;
  }
  return v3;
}

uint64_t TableAlias.init(name:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = 0;
  return v2;
}

uint64_t sub_24F8298B0(uint64_t result)
{
  uint64_t v2 = v1;
  if (v1 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void *)(v2 + 16);
    uint64_t v5 = *(void *)(v2 + 24);
    uint64_t v7 = *(void *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 40);
    if (!*(unsigned char *)(v2 + 48))
    {
      if (v5)
      {
        swift_bridgeObjectRetain();
        sub_24F829C28(v4, v5);
        uint64_t v8 = sub_24F781564();
        sub_24F82A174(v8, v9, v10, v11, 0);
      }
      goto LABEL_8;
    }
    if (*(unsigned char *)(v2 + 48) == 1)
    {
      swift_bridgeObjectRetain();
      if (v6)
      {
        sub_24F829C28(v7, v6);
        swift_bridgeObjectRelease();
      }
LABEL_8:
      long long v16 = (unint64_t)v3;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      char v19 = 2;
      swift_retain();
      return sub_24F82960C(&v16);
    }
    swift_retain();
    sub_24F8298B0(v3);
    uint64_t v12 = sub_24F781564();
    return sub_24F82A174(v12, v13, v14, v15, 2);
  }
  return result;
}

uint64_t sub_24F8299BC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (v1 == a1)
  {
    swift_retain();
  }
  else
  {
    uint64_t v3 = sub_24F829670();
    uint64_t v4 = sub_24F829670();
    uint64_t v2 = v4;
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v6 = *(void *)(v3 + 24);
    uint64_t v8 = *(void *)(v3 + 32);
    uint64_t v7 = *(void *)(v3 + 40);
    int v9 = *(unsigned __int8 *)(v3 + 48);
    uint64_t v10 = *(void *)(v4 + 16);
    uint64_t v12 = *(void *)(v4 + 32);
    uint64_t v11 = *(void *)(v4 + 40);
    if (v9 == 1 && *(unsigned char *)(v4 + 48) == 1)
    {
      BOOL v28 = v5 == v10 && v6 == *(void *)(v4 + 24);
      uint64_t v29 = *(void *)(v4 + 24);
      uint64_t v72 = *(void *)(v3 + 16);
      if (v28
        || (uint64_t v30 = *(void *)(v4 + 16),
            uint64_t v31 = *(void *)(v3 + 40),
            uint64_t v32 = *(void *)(v3 + 16),
            char v33 = sub_24F8CFD00(),
            uint64_t v5 = v32,
            uint64_t v7 = v31,
            uint64_t v10 = v30,
            (v33 & 1) != 0))
      {
        uint64_t v34 = v10;
        uint64_t v35 = v11;
        if (!v7 || !v11) {
          goto LABEL_21;
        }
        if (v8 == v12 && v7 == v11) {
          goto LABEL_21;
        }
        uint64_t v37 = v11;
        uint64_t v38 = v12;
        uint64_t v39 = v7;
        uint64_t v40 = v5;
        char v41 = sub_24F8CFD00();
        uint64_t v5 = v40;
        uint64_t v7 = v39;
        uint64_t v12 = v38;
        uint64_t v35 = v37;
        if (v41)
        {
LABEL_21:
          sub_24F77E184(v5, v6, v7);
          sub_24F77EFDC();
          uint64_t v42 = sub_24F8298B0(v2);
          sub_24F77FEB0(v42, v43, v44, v45, v46, v47, v48, v49, v71, v72);
          sub_24F82A174(v34, v29, v12, v35, 1);
          swift_release();
          return v2;
        }
        sub_24F77E184(v40, v6, v7);
        uint64_t v63 = sub_24F77EFDC();
        sub_24F77FEB0(v63, v64, v65, v66, v67, v68, v69, v70, v71, v72);
        uint64_t v59 = v34;
        uint64_t v60 = v29;
        uint64_t v61 = v12;
        uint64_t v62 = v37;
      }
      else
      {
        sub_24F77E184(v32, v6, v7);
        uint64_t v51 = sub_24F82A478(v30, v29, v12, v11, 1);
        sub_24F77FEB0(v51, v52, v53, v54, v55, v56, v57, v58, v71, v72);
        uint64_t v59 = v30;
        uint64_t v60 = v29;
        uint64_t v61 = v12;
        uint64_t v62 = v11;
      }
      sub_24F82A174(v59, v60, v61, v62, 1);
    }
    else
    {
      uint64_t v14 = *(void *)(v3 + 24);
      uint64_t v15 = *(void *)(v3 + 32);
      uint64_t v73 = v15;
      uint64_t v16 = *(void *)(v3 + 40);
      uint64_t v17 = *(void *)(v3 + 16);
      sub_24F82A478(v17, v14, v15, v7, v9);
      uint64_t v18 = sub_24F773C28();
      sub_24F82A478(v18, v19, v20, v21, v22);
      sub_24F82A174(v17, v6, v73, v16, v9);
      uint64_t v23 = sub_24F773C28();
      sub_24F82A174(v23, v24, v25, v26, v27);
    }
    swift_release();
    swift_release();
    return 0;
  }
  return v2;
}

uint64_t sub_24F829C28(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(v2 + 48))
  {
    *(void *)&long long v10 = a1;
    *((void *)&v10 + 1) = a2;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 0;
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  if (*(unsigned char *)(v2 + 48) == 1)
  {
    *(void *)&long long v10 = *(void *)(v2 + 16);
    *((void *)&v10 + 1) = v5;
    uint64_t v11 = a1;
    uint64_t v12 = a2;
    char v13 = 1;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRetain();
    return sub_24F82960C(&v10);
  }
  uint64_t v9 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  swift_retain();
  sub_24F829C28(a1, a2);
  return sub_24F82A174(v6, v5, v9, v8, 2);
}

uint64_t sub_24F829D14(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  if (*(unsigned char *)(v2 + 48))
  {
    if (*(unsigned char *)(v2 + 48) == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_24F8CED00();
      uint64_t v9 = v8;
      if (v7 == sub_24F8CED00() && v9 == v10)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease_n();
      }
      else
      {
        char v12 = sub_24F8CFD00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v12)
        {
          return swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t result = sub_24F8CF9D0();
          __break(1u);
        }
      }
    }
    else
    {
      swift_retain();
      sub_24F829D14(a1, a2);
      uint64_t v18 = sub_24F77BD48();
      return sub_24F82A174(v18, v19, v20, v21, 2);
    }
  }
  else
  {
    *(void *)&long long v22 = a1;
    *((void *)&v22 + 1) = a2;
    uint64_t v23 = v6;
    uint64_t v24 = v5;
    char v25 = 1;
    uint64_t v14 = sub_24F77BD48();
    sub_24F82A478(v14, v15, v16, v17, 0);
    swift_bridgeObjectRetain();
    return sub_24F82960C(&v22);
  }
  return result;
}

uint64_t sub_24F829EE4(void *a1)
{
  sub_24F77AF84(a1);
  uint64_t v1 = sub_24F771094();
  v2(v1);
  memcpy(v6, __src, sizeof(v6));
  uint64_t v3 = (void *)sub_24F783040();
  sub_24F7A342C(v3, v4);
  return sub_24F7E9F30((uint64_t)__src);
}

uint64_t sub_24F829F4C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v1 = a1[4];
  sub_24F7811D0(a1, v2);
  (*(void (**)(__n128 *__return_ptr, uint64_t))(*(void *)(v1 + 8) + 8))(__src, v2);
  memcpy(v6, __src, sizeof(v6));
  uint64_t v3 = (void *)sub_24F783040();
  sub_24F814C38(v3, v4);
  return sub_24F76F8A8(__src);
}

uint64_t sub_24F829FEC(void *a1)
{
  sub_24F77AF84(a1);
  uint64_t v1 = sub_24F771094();
  v2(v1);
  memcpy(v5, __src, sizeof(v5));
  sub_24F783040();
  sub_24F880C5C(v3);
  return sub_24F76F8A8(__src);
}

uint64_t sub_24F82A068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v5[0] = a1;
  v5[1] = a2;
  sub_24F7ADE84((uint64_t)v5);
  sub_24F76F710((uint64_t)v5, a3);
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_24F82A0C8@<X0>(uint64_t a1@<X8>)
{
  char v4 = 0;
  sub_24F81C05C((uint64_t)&v3);
  sub_24F76F710((uint64_t)&v3, a1);
  return swift_retain();
}

uint64_t sub_24F82A114()
{
  return sub_24F8CFF40();
}

uint64_t TableAlias.deinit()
{
  sub_24F82A174(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  return v0;
}

uint64_t sub_24F82A174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2)
  {
    return swift_release();
  }
  else
  {
    if (a5 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (a5) {
        return result;
      }
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t TableAlias.__deallocating_deinit()
{
  sub_24F82A174(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  return MEMORY[0x270FA0228](v0, 49, 7);
}

uint64_t sub_24F82A230()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F82A270()
{
  return sub_24F82A230();
}

uint64_t sub_24F82A294()
{
  return sub_24F82A114();
}

uint64_t sub_24F82A2B8()
{
  return sub_24F77A9A0(&qword_26B1F7D48);
}

uint64_t sub_24F82A2EC()
{
  return sub_24F8CFF80();
}

BOOL sub_24F82A32C()
{
  return static TableAlias.== infix(_:_:)();
}

uint64_t method lookup function for TableAlias(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TableAlias);
}

uint64_t dispatch thunk of TableAlias.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of TableAlias.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of TableAlias.exists.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of TableAlias.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of TableAlias.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_24F82A478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2)
  {
    return swift_retain();
  }
  else
  {
    if (a5 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else if (a5)
    {
      return result;
    }
    return swift_bridgeObjectRetain();
  }
}

uint64_t destroy for TableAlias.Impl(uint64_t a1)
{
  return sub_24F82A174(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for TableAlias.Impl(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24F82A478(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for TableAlias.Impl(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24F82A478(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_24F82A174(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for TableAlias.Impl(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_24F82A174(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TableAlias.Impl(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TableAlias.Impl(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24F82A6B4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TableAlias.Impl()
{
  return &type metadata for TableAlias.Impl;
}

uint64_t *initializeBufferWithCopyOfBuffer for SQLGenerationContext.Parent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_24F82A70C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t sub_24F82A70C(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    swift_retain();
    uint64_t v2 = vars8;
  }
  return swift_retain();
}

uint64_t destroy for SQLGenerationContext.Parent(uint64_t *a1)
{
  return sub_24F768C88(*a1, a1[1]);
}

uint64_t *assignWithCopy for SQLGenerationContext.Parent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_24F82A70C(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_24F768C88(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SQLGenerationContext.Parent(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24F768C88(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLGenerationContext.Parent(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 16382;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 50) >> 13) | (2
                                                               * ((*(void *)(a1 + 8) >> 50) & 0x1C00 | ((*(void *)(a1 + 8) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
      if (v2 >= 0x3FFE) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for SQLGenerationContext.Parent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(void *)uint64_t result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_24F82A8B4(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_24F82A8C0(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

void *sub_24F82A8D0(void *result, uint64_t a2)
{
  uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF8uLL;
  result[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for SQLGenerationContext.Parent()
{
  return &type metadata for SQLGenerationContext.Parent;
}

uint64_t sub_24F82A8F8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24F82A910(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11 = sub_24F82AAB8(a1, a2);
  unint64_t v21 = v11;
  if (v11 < 0x4000) {
    goto LABEL_19;
  }
  unint64_t v12 = v11 >> 14;
  while (1)
  {
    swift_bridgeObjectRetain();
    sub_24F8CEE80();
    uint64_t v13 = sub_24F8CEF80();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    BOOL v16 = v13 == a3 && v15 == a4;
    if (!v16 && (sub_24F8CFD00() & 1) != 0) {
      break;
    }
    if (v13 == a5 && v15 == a6)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = sub_24F8CFD00();
      uint64_t result = swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_18;
      }
    }
    unint64_t v11 = sub_24F8CEE80();
    unint64_t v12 = v11 >> 14;
    if (v11 < 0x4000) {
      goto LABEL_19;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_18:
  if (v21 >> 14 < v12)
  {
    __break(1u);
  }
  else
  {
LABEL_19:
    unint64_t v20 = sub_24F8AB4B0(v21, v11, a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

uint64_t sub_24F82AAB8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1;
  }
  uint64_t v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v3 = 11;
  }
  return v3 | (v2 << 16);
}

uint64_t sub_24F82AAE8(__n128 *a1)
{
  __n128 v2 = sub_24F773BC8(a1);
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_u64[0], v2.n128_u64[1], v12, v13, v14);
  return v1;
}

Swift::Int32 __swiftcall Data.bind(to:at:)(Swift::OpaquePointer to, Swift::Int32 at)
{
  unint64_t v4 = v3;
  uint64_t v5 = v2;
  switch(v3 >> 62)
  {
    case 1uLL:
      if (v2 >> 32 < (int)v2)
      {
        __break(1u);
        JUMPOUT(0x24F82ACA0);
      }
      swift_retain();
      Swift::Int32 v8 = sub_24F785C1C((int)v5, v5 >> 32, v4, (sqlite3_stmt *)to._rawValue, at);
      sub_24F783E24(v5, v4);
      break;
    case 2uLL:
      int v9 = v3;
      uint64_t v10 = *(void *)(v2 + 16);
      uint64_t v11 = *(void *)(v2 + 24);
      swift_retain();
      swift_retain();
      Swift::Int32 v8 = sub_24F785C1C(v10, v11, v9, (sqlite3_stmt *)to._rawValue, at);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      Swift::Int32 v8 = sub_24F7859D4(0, 0, 0, (sqlite3_stmt *)to._rawValue, at);
      break;
    default:
      Swift::Int32 v8 = sub_24F7859D4(v2, v3 & 0xFFFFFFFFFFFFLL, BYTE6(v3), (sqlite3_stmt *)to._rawValue, at);
      break;
  }
  return v8;
}

uint64_t static Data.fromDatabaseValue(_:)(uint64_t a1)
{
  uint64_t v2 = sub_24F8CEDD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)a1;
  int v7 = *(unsigned __int8 *)(a1 + 16);
  if (v7 == 3)
  {
    sub_24F78419C(*(void *)a1, *(void *)(a1 + 8));
  }
  else if (v7 == 2)
  {
    sub_24F8CEDC0();
    uint64_t v6 = sub_24F8CED90();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    return 0;
  }
  return v6;
}

uint64_t sub_24F82ADD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static Data.fromDatabaseValue(_:)(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_24F82ADFC(Swift::OpaquePointer to, Swift::Int32 at)
{
  return Data.bind(to:at:)(to, at);
}

id sub_24F82AE04()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087B8]), sel_initWithRoundingMode_scale_raiseOnExactness_raiseOnOverflow_raiseOnUnderflow_raiseOnDivideByZero_, 0, 0, 0, 0, 0, 0);
  qword_269A2B470 = (uint64_t)result;
  return result;
}

void NSNumber.databaseValue.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4) {
    goto LABEL_9;
  }
  uint64_t v5 = (void *)v4;
  sub_24F82B774();
  uint64_t v6 = qword_269A2A340;
  id v7 = v1;
  if (v6 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend(v5, sel_decimalNumberByRoundingAccordingToBehavior_, qword_269A2B470);
  char v9 = sub_24F8CF5C0();

  if ((v9 & 1) == 0
    || (id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087B0]), sel_initWithLongLong_, 0x7FFFFFFFFFFFFFFFLL),
        id v11 = objc_msgSend(v5, sel_compare_, v10),
        v10,
        v11 == (id)1)
    || (id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087B0]), sel_initWithLongLong_, 0x8000000000000000),
        id v13 = objc_msgSend(v5, sel_compare_, v12),
        v12,
        v13 == (id)-1))
  {

LABEL_9:
    id v16 = v2;
    objc_msgSend(v16, sel_objCType);
    uint64_t v17 = sub_24F8CEED0();
    BOOL v19 = v17 == 99 && v18 == 0xE100000000000000;
    if (v19 || (uint64_t v20 = v17, v21 = v18, (sub_24F77F6D8() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      signed int v22 = objc_msgSend(v16, sel_charValue);
LABEL_15:
      char v15 = 0;
      uint64_t v23 = v22;
LABEL_23:
      *(void *)a1 = v23;
      goto LABEL_24;
    }
    BOOL v24 = v20 == 67 && v21 == 0xE100000000000000;
    if (v24 || (sub_24F77F6D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      unsigned int v25 = objc_msgSend(v16, sel_unsignedCharValue);
LABEL_22:
      char v15 = 0;
      uint64_t v23 = v25;
      goto LABEL_23;
    }
    BOOL v26 = v20 == 115 && v21 == 0xE100000000000000;
    if (v26 || (sub_24F77F6D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      signed int v22 = objc_msgSend(v16, sel_shortValue);
      goto LABEL_15;
    }
    BOOL v27 = v20 == 83 && v21 == 0xE100000000000000;
    if (v27 || (sub_24F77F6D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      unsigned int v25 = objc_msgSend(v16, sel_unsignedShortValue);
      goto LABEL_22;
    }
    BOOL v28 = v20 == 105 && v21 == 0xE100000000000000;
    if (v28 || (sub_24F77F6D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      signed int v22 = objc_msgSend(v16, sel_intValue);
      goto LABEL_15;
    }
    BOOL v29 = v20 == 73 && v21 == 0xE100000000000000;
    if (v29 || (sub_24F77F6D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      unsigned int v25 = objc_msgSend(v16, sel_unsignedIntValue);
      goto LABEL_22;
    }
    BOOL v30 = v20 == 108 && v21 == 0xE100000000000000;
    if (v30 || (sub_24F77F6D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      id v31 = objc_msgSend(v16, sel_integerValue);
LABEL_55:
      char v15 = 0;
      *(void *)a1 = v31;
      goto LABEL_24;
    }
    BOOL v32 = v20 == 76 && v21 == 0xE100000000000000;
    if (v32 || (sub_24F77F6D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      unint64_t v33 = (unint64_t)objc_msgSend(v16, sel_unsignedIntegerValue);
      if ((v33 & 0x8000000000000000) == 0) {
        goto LABEL_62;
      }
    }
    else
    {
      BOOL v34 = v20 == 113 && v21 == 0xE100000000000000;
      if (v34 || (sub_24F77F6D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        id v31 = objc_msgSend(v16, sel_longLongValue);
        goto LABEL_55;
      }
      BOOL v35 = v20 == 81 && v21 == 0xE100000000000000;
      if (!v35 && (sub_24F77F6D8() & 1) == 0)
      {
        BOOL v36 = v20 == 102 && v21 == 0xE100000000000000;
        if (v36 || (sub_24F77F6D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          objc_msgSend(v16, sel_floatValue);
          double v38 = v37;
        }
        else
        {
          BOOL v39 = v20 == 100 && v21 == 0xE100000000000000;
          if (!v39 && (sub_24F77F6D8() & 1) == 0)
          {
            BOOL v40 = v20 == 66 && v21 == 0xE100000000000000;
            if (!v40 && (sub_24F77F6D8() & 1) == 0) {
              goto LABEL_97;
            }
            swift_bridgeObjectRelease();
            unsigned int v25 = objc_msgSend(v16, sel_BOOLValue);
            goto LABEL_22;
          }
          swift_bridgeObjectRelease();
          objc_msgSend(v16, sel_doubleValue);
        }
        *(double *)a1 = v38;
        char v15 = 1;
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      unint64_t v33 = (unint64_t)objc_msgSend(v16, sel_unsignedLongLongValue);
      if ((v33 & 0x8000000000000000) == 0)
      {
LABEL_62:
        char v15 = 0;
        *(void *)a1 = v33;
        goto LABEL_24;
      }
    }
    sub_24F77E984();
    sub_24F77FED4();
    sub_24F8CFAE0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F77E1A4();
    while (1)
    {
      sub_24F8CF9D0();
      __break(1u);
LABEL_97:
      sub_24F8CF7D0();
      sub_24F77E1A4();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
    }
  }
  id v14 = objc_msgSend(v7, sel_longLongValue);

  char v15 = 0;
  *(void *)a1 = v14;
LABEL_24:
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = v15;
}

id static NSNumber.fromDatabaseValue(_:)(uint64_t a1)
{
  uint64_t v2 = sub_24F781274(&qword_26B1F5388);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = *(double *)a1;
  int v6 = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16)) {
    return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithLongLong_, *(void *)&v5);
  }
  if (v6 != 2)
  {
    if (v6 == 1) {
      return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithDouble_, v5);
    }
    return 0;
  }
  if (qword_269A2A348 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24F8CE9F0();
  uint64_t v9 = sub_24F79F3A0(v8, (uint64_t)qword_269A2B478);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v4, v9, v8);
  sub_24F7771BC((uint64_t)v4, 0, 1, v8);
  uint64_t v10 = sub_24F8CF5E0();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_24F81D968((uint64_t)v4);
  id result = 0;
  if ((v14 & 0x100000000) == 0)
  {
    id v15 = objc_allocWithZone(MEMORY[0x263F087B0]);
    v18[0] = v10;
    v18[1] = v12;
    int v19 = v14;
    id v16 = objc_msgSend(v15, sel_initWithDecimal_, v18);
    id result = (id)swift_dynamicCastUnknownClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void sub_24F82B6C0(uint64_t a1@<X8>)
{
}

id sub_24F82B6E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = static NSNumber.fromDatabaseValue(_:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_24F82B70C()
{
  uint64_t v0 = sub_24F8CE9F0();
  sub_24F79F440(v0, qword_269A2B478);
  sub_24F79F3A0(v0, (uint64_t)qword_269A2B478);
  return sub_24F8CE9D0();
}

unint64_t sub_24F82B774()
{
  unint64_t result = qword_269A2B490;
  if (!qword_269A2B490)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269A2B490);
  }
  return result;
}

uint64_t FTS3Pattern.rawPattern.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

GRDBInternal::FTS3Pattern __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FTS3Pattern.init(rawPattern:)(Swift::String rawPattern)
{
  object = rawPattern._object;
  uint64_t countAndFlagsBits = rawPattern._countAndFlagsBits;
  double v5 = v1;
  uint64_t v6 = type metadata accessor for Configuration();
  id v7 = (int *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_WORD *)uint64_t v9 = 1;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *(_DWORD *)(v9 + 23) = 0;
  *((void *)v9 + 4) = MEMORY[0x263F8EE78];
  *((_WORD *)v9 + 20) = 0;
  v9[64] = 2;
  *((void *)v9 + 9) = 0;
  *((void *)v9 + 10) = 0;
  v9[88] = -1;
  *((void *)v9 + 12) = 5;
  *((void *)v9 + 6) = 0;
  *((void *)v9 + 7) = 0;
  sub_24F8CEBF0();
  *(void *)&v9[v7[19]] = 0;
  *(void *)&v9[v7[20]] = 0;
  v9[v7[21]] = 1;
  v9[v7[22]] = 0;
  uint64_t v10 = &v9[v7[23]];
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = &v9[v7[24]];
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = &v9[v7[25]];
  type metadata accessor for DatabaseQueue();
  *uint64_t v12 = 0;
  v12[1] = 0;
  swift_initStackObject();
  DatabaseQueue.init(configuration:)((uint64_t)v9);
  uint64_t v25 = countAndFlagsBits;
  BOOL v26 = object;
  sub_24F8565FC((uint64_t)sub_24F82C338, (uint64_t)v24);
  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    id v30 = v2;
    id v13 = v2;
    sub_24F781274(&qword_26B1F7040);
    if (swift_dynamicCast())
    {

      int v14 = v27;
      uint64_t v15 = v28;
      uint64_t v16 = v29;
      sub_24F7DC6DC();
      swift_allocError();
      uint64_t v18 = v17;
      if (!v16)
      {
        uint64_t v19 = (uint64_t)sqlite3_errstr(v14);
        if (!v19)
        {
          __break(1u);
          goto LABEL_10;
        }
        uint64_t v15 = sub_24F8CEED0();
        uint64_t v16 = v21;
      }
      *(_DWORD *)uint64_t v18 = v14;
      *(void *)(v18 + 8) = v15;
      *(void *)(v18 + 16) = v16;
      *(_OWORD *)(v18 + 24) = 0u;
      *(_OWORD *)(v18 + 40) = 0u;
      *(unsigned char *)(v18 + 56) = 0;
      swift_bridgeObjectRelease();
      uint64_t v22 = sub_24F77F5DC();
      sub_24F77835C(v22);
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v19 = swift_release();
    *double v5 = countAndFlagsBits;
    v5[1] = (uint64_t)object;
  }
LABEL_10:
  result.rawPattern._object = v20;
  result.rawPattern._uint64_t countAndFlagsBits = v19;
  return result;
}

uint64_t sub_24F82BA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7662F0();
  uint64_t v6 = v5;
  uint64_t v7 = MEMORY[0x263F8EE80];
  if (((unint64_t)"t can be stored in the database" & 0x2000000000000000) == 0
    || (((unint64_t)"t can be stored in the database" >> 56) & 0xF) != 0)
  {
    unint64_t v8 = *(void *)(v5 + 16);
    if (v8 >= *(void *)(v5 + 24) >> 1)
    {
      sub_24F7662F0();
      uint64_t v6 = v17;
    }
    __dst[0] = 0xD000000000000059;
    __dst[1] = 0x800000024F8D31C0;
    __dst[2] = MEMORY[0x263F8EE78];
    __dst[3] = v7;
    sub_24F7725D4(__dst);
    *(void *)(v6 + 16) = v8 + 1;
    sub_24F76C344((uint64_t)__dst, v6 + 184 * v8 + 32);
  }
  __dst[0] = a2;
  __dst[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_24F8CEF90();
  uint64_t v11 = v10;
  unint64_t v12 = *(void *)(v6 + 16);
  if (v12 >= *(void *)(v6 + 24) >> 1)
  {
    sub_24F7662F0();
    uint64_t v6 = v15;
  }
  v19[0] = v9;
  v19[1] = v11;
  char v20 = 2;
  sub_24F7667B8((uint64_t)v19);
  sub_24F76F710((uint64_t)v19, (uint64_t)__src);
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F766784(__dst);
  *(void *)(v6 + 16) = v12 + 1;
  sub_24F76C344((uint64_t)__dst, v6 + 184 * v12 + 32);
  unint64_t v13 = *(void *)(v6 + 16);
  if (v13 >= *(void *)(v6 + 24) >> 1)
  {
    sub_24F7662F0();
    uint64_t v6 = v16;
  }
  v18[0] = 59;
  v18[1] = 0xE100000000000000;
  void v18[2] = MEMORY[0x263F8EE78];
  v18[3] = v7;
  sub_24F7725D4(v18);
  *(void *)(v6 + 16) = v13 + 1;
  sub_24F76C344((uint64_t)v18, v6 + 184 * v13 + 32);
  v18[0] = v6;
  Database.execute(literal:)((GRDBInternal::SQL)v18);
  return swift_bridgeObjectRelease();
}

GRDBInternal::FTS3Pattern_optional __swiftcall FTS3Pattern.init(matchingAnyTokenIn:)(Swift::String matchingAnyTokenIn)
{
  sub_24F82BCA8(matchingAnyTokenIn._countAndFlagsBits, (uint64_t)matchingAnyTokenIn._object, v1);
  result.value.rawPattern._object = v3;
  result.value.rawPattern._uint64_t countAndFlagsBits = v2;
  return result;
}

GRDBInternal::FTS3Pattern_optional __swiftcall FTS3Pattern.init(matchingAllTokensIn:)(Swift::String matchingAllTokensIn)
{
  sub_24F82BCA8(matchingAllTokensIn._countAndFlagsBits, (uint64_t)matchingAllTokensIn._object, v1);
  result.value.rawPattern._object = v3;
  result.value.rawPattern._uint64_t countAndFlagsBits = v2;
  return result;
}

void sub_24F82BCA8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_269A2A358 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_269A2C260;
  uint64_t v14 = *(void *)algn_269A2C268;
  uint64_t v15 = qword_269A2C270;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = static FTS3.tokenize(_:withTokenizer:)(a1, a2, &v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v6 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  uint64_t v7 = sub_24F8CED30();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = v7;
  v10._object = v9;
  FTS3Pattern.init(rawPattern:)(v10);
  if (v11)
  {

LABEL_7:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  uint64_t v12 = v14;
  *a3 = v13;
  a3[1] = v12;
}

GRDBInternal::FTS3Pattern_optional __swiftcall FTS3Pattern.init(matchingAllPrefixesIn:)(Swift::String matchingAllPrefixesIn)
{
  object = matchingAllPrefixesIn._object;
  uint64_t countAndFlagsBits = matchingAllPrefixesIn._countAndFlagsBits;
  uint64_t v4 = v1;
  if (qword_269A2A358 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_269A2C260;
  uint64_t v24 = *(void *)algn_269A2C268;
  uint64_t v25 = qword_269A2C270;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = static FTS3.tokenize(_:withTokenizer:)(countAndFlagsBits, (uint64_t)object, &v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v7 = (uint64_t *)(v5 + 40);
    do
    {
      uint64_t v20 = *(v7 - 1);
      uint64_t v21 = *v7;
      swift_bridgeObjectRetain_n();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      unint64_t v8 = *(void *)(v22 + 16);
      if (v8 >= *(void *)(v22 + 24) >> 1) {
        sub_24F77C4AC();
      }
      v7 += 2;
      *(void *)(v22 + 16) = v8 + 1;
      uint64_t v9 = v22 + 16 * v8;
      *(void *)(v9 + 32) = v20;
      *(void *)(v9 + 40) = v21;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    uint64_t v10 = sub_24F8CED30();
    uint64_t v12 = v11;
    swift_release();
    v13._uint64_t countAndFlagsBits = v10;
    v13._object = v12;
    GRDBInternal::FTS3Pattern v17 = FTS3Pattern.init(rawPattern:)(v13);
    uint64_t v15 = v17.rawPattern._object;
    uint64_t v14 = v17.rawPattern._countAndFlagsBits;
    if (!v16)
    {
      uint64_t v18 = v24;
      *uint64_t v4 = v23;
      v4[1] = v18;
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v14 = swift_bridgeObjectRelease();
  }
  *uint64_t v4 = 0;
  v4[1] = 0;
LABEL_13:
  result.value.rawPattern._object = v15;
  result.value.rawPattern._uint64_t countAndFlagsBits = v14;
  return result;
}

GRDBInternal::FTS3Pattern_optional __swiftcall FTS3Pattern.init(matchingPhrase:)(Swift::String matchingPhrase)
{
  object = matchingPhrase._object;
  uint64_t countAndFlagsBits = matchingPhrase._countAndFlagsBits;
  uint64_t v4 = v1;
  if (qword_269A2A358 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_269A2C260;
  uint64_t v14 = *(void *)algn_269A2C268;
  uint64_t v15 = qword_269A2C270;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = static FTS3.tokenize(_:withTokenizer:)(countAndFlagsBits, (uint64_t)object, &v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 16))
  {
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    v6._uint64_t countAndFlagsBits = 34;
    v6._object = (void *)0xE100000000000000;
    GRDBInternal::FTS3Pattern v10 = FTS3Pattern.init(rawPattern:)(v6);
    unint64_t v8 = v10.rawPattern._object;
    uint64_t v7 = v10.rawPattern._countAndFlagsBits;
    if (!v9)
    {
      uint64_t v11 = v14;
      *uint64_t v4 = v13;
      v4[1] = v11;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v7 = swift_bridgeObjectRelease();
  }
  *uint64_t v4 = 0;
  v4[1] = 0;
LABEL_9:
  result.value.rawPattern._object = v8;
  result.value.rawPattern._uint64_t countAndFlagsBits = v7;
  return result;
}

uint64_t FTS3Pattern.databaseValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[1];
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = 2;
  return swift_bridgeObjectRetain();
}

uint64_t static FTS3Pattern.fromDatabaseValue(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_24F8CEDD0();
  uint64_t result = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(unsigned __int8 *)(a1 + 16);
  if (v8 == 3)
  {
    uint64_t v9 = sub_24F77F5DC();
    sub_24F78419C(v9, v10);
    sub_24F8CEDC0();
    sub_24F77F5DC();
    uint64_t v11 = sub_24F8CEDA0();
    uint64_t v13 = v12;
    uint64_t v14 = sub_24F77F5DC();
    uint64_t result = sub_24F781F10(v14, v15, 3);
    if (v13)
    {
      uint64_t v7 = v13;
      uint64_t v6 = v11;
      goto LABEL_6;
    }
  }
  else if (v8 == 2)
  {
    swift_bridgeObjectRetain();
LABEL_6:
    v16[0] = v6;
    v16[1] = v7;
    swift_bridgeObjectRetain();
    sub_24F82C2C0(v16, a2);
    return swift_bridgeObjectRelease_n();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

void sub_24F82C2C0(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v3;
  v5._object = v4;
  FTS3Pattern.init(rawPattern:)(v5);
  if (v6)
  {

    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = v9;
    uint64_t v8 = v10;
  }
  *a2 = v7;
  a2[1] = v8;
}

uint64_t sub_24F82C338(uint64_t a1)
{
  return sub_24F82BA48(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *type metadata accessor for FTS3Pattern()
{
  return &type metadata for FTS3Pattern;
}

uint64_t sub_24F82C364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memcpy(v13, v9, 0xA3uLL);
  type metadata accessor for BasePreparation();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  memcpy(v12, v13, 0xA3uLL);
  uint64_t v10 = sub_24F82C4A0((uint64_t)v8, v12);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = v10;
  return sub_24F76F7F0((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
}

uint64_t sub_24F82C4A0(uint64_t a1, const void *a2)
{
  return sub_24F82E9E4(a1, a2);
}

void AssociationToMany.count.getter()
{
  sub_24F76B80C();
  sub_24F83153C();
  v15[0] = v2;
  v15[1] = 0xE500000000000000;
  __int16 v16 = 257;
  GRDBInternal::FTS3Pattern v17 = &unk_270101330;
  sub_24F7A45E4((uint64_t)v15);
  sub_24F76F710((uint64_t)v15, (uint64_t)v18);
  memcpy(__dst, v18, 0xA3uLL);
  sub_24F82C364((uint64_t)__dst, v0, v14);
  __dst[0] = v14[0];
  __dst[1] = v14[1];
  __dst[2] = v14[2];
  uint64_t v3 = sub_24F89D54C();
  unint64_t v5 = v4;
  switch(v6)
  {
    case 1:
    case 3:
      break;
    case 2:
      uint64_t v12 = v1;
      if (qword_26B1F5678 != -1) {
        swift_once();
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F8314C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_24F782BB0();
      goto LABEL_8;
    default:
      uint64_t v12 = v1;
      if (qword_26B1F5678 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v7 = *((void *)&xmmword_26B1F5730 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F858884(v3, v5, v7);
      sub_24F7855B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_24F77B5E8();
LABEL_8:
      sub_24F7AD5DC(v8, v9, v10);
      uint64_t v1 = v12;
      break;
  }
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for AssociationAggregate();
  AssociationAggregate.forKey(_:)(v11, v1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F77344C();
}

uint64_t AssociationAggregate.forKey(_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_24F85E9C4(sub_24F830A80, a1, a2);
}

void AssociationToMany.isEmpty.getter()
{
  sub_24F76B80C();
  sub_24F83153C();
  v21[0] = v3;
  v21[1] = 0xE500000000000000;
  __int16 v22 = 257;
  uint64_t v23 = &unk_2701013F8;
  sub_24F7A45E4((uint64_t)v21);
  sub_24F76F710((uint64_t)v21, (uint64_t)__src);
  uint64_t v4 = swift_allocObject();
  memcpy((void *)(v4 + 16), __src, 0xA3uLL);
  *(unsigned char *)(v4 + 179) = 0;
  v25[0] = v4;
  sub_24F81C11C((uint64_t)v25);
  sub_24F76F710((uint64_t)v25, (uint64_t)v26);
  memcpy(__dst, v26, sizeof(__dst));
  sub_24F82C364((uint64_t)__dst, v1, &v20);
  swift_release();
  uint64_t v5 = sub_24F89D54C();
  unint64_t v7 = v6;
  switch(v8)
  {
    case 1:
    case 3:
      break;
    case 2:
      uint64_t v18 = v2;
      if (qword_26B1F5678 != -1) {
        swift_once();
      }
      swift_beginAccess();
      *(_OWORD *)__dst = xmmword_26B1F5730;
      *(void *)&__dst[16] = qword_26B1F5740;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F8314C4();
      uint64_t v0 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_24F782BB0();
      goto LABEL_8;
    default:
      uint64_t v18 = v2;
      if (qword_26B1F5678 != -1) {
        swift_once();
      }
      sub_24F77E1C0();
      uint64_t v9 = *((void *)&xmmword_26B1F5730 + 1);
      *(_OWORD *)__dst = xmmword_26B1F5730;
      *(void *)&__dst[16] = qword_26B1F5740;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v0 = __dst;
      sub_24F858884(v5, v7, v9);
      sub_24F7855B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_24F77B5E8();
LABEL_8:
      sub_24F7AD5DC(v10, v11, v12);
      uint64_t v2 = v18;
      break;
  }
  swift_bridgeObjectRetain();
  sub_24F774718();
  sub_24F780528();
  if (v0)
  {
    sub_24F77613C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    *(void *)__dst = sub_24F7819B8();
    *(void *)&__dst[8] = v14;
    *(void *)&__dst[16] = v15;
    *(void *)&void __dst[24] = v16;
    sub_24F830AA8();
    swift_bridgeObjectRetain();
    sub_24F8CEEA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24F7776F0();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  uint64_t v17 = type metadata accessor for AssociationAggregate();
  AssociationAggregate.forKey(_:)(v17, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F77344C();
}

void AssociationToMany.average(_:)()
{
  sub_24F76B80C();
  sub_24F77AFB0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v0 = (__n128 *)sub_24F77DF3C();
  uint64_t v1 = sub_24F77E9A4(v0, (__n128)xmmword_24F8DDBF0);
  v2(v1);
  v90[0] = 4675137;
  v90[1] = 0xE300000000000000;
  __int16 v91 = 1;
  size_t v92 = v0;
  uint64_t v3 = sub_24F7A45E4((uint64_t)v90);
  int v11 = sub_24F7722EC(v3, v4, v5, v6, v7, v8, v9, v10, v43, v47, v51, v55, v59, v63, v67, v71, v74, v77, v80,
          *((uint64_t *)&v80 + 1),
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89[0],
          v89[1],
          v89[2],
          v89[3],
          v89[4],
          v89[5],
          v89[6],
          v89[7],
          v89[8],
          v89[9],
          v89[10],
          v89[11],
          v89[12],
          v89[13],
          v89[14],
          v89[15],
          v89[16],
          v89[17],
          v89[18],
          v89[19],
          v89[20],
          v90[0]);
  uint64_t v19 = sub_24F77C0A0(v11, v12, v13, v14, v15, v16, v17, v18, v44, v48, v52, v56, v60, v64, v68, v72, v75, v78, v80,
          *((uint64_t *)&v80 + 1),
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89[0]);
  sub_24F783050((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, v45, v49, v53, v57, v61, v65, v69, v73, v76, v79, v80,
    *((uint64_t *)&v80 + 1),
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89[0]);
  uint64_t v27 = swift_bridgeObjectRelease();
  sub_24F7736F4(v27, v28, v29, v30, v31, v32, v33, v34, v46, v50, v54, v58, v62, v66, v70);
  BOOL v35 = (long long *)sub_24F781274(&qword_269A2A588);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F781DB0(&v80, (uint64_t)v89);
    switch(v36)
    {
      case 1:
      case 3:
        break;
      case 2:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        BOOL v35 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F775CA4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F771E70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_24F782BB0();
        goto LABEL_10;
      default:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        BOOL v35 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F77C7D0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F7855B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_24F77B5E8();
LABEL_10:
        sub_24F780384(v37, v38, v39);
        break;
    }
    sub_24F773524();
    sub_24F774718();
    sub_24F780528();
    if (v35)
    {
      sub_24F77613C();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F7819B8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F7776F0();
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_24F77E1E0(v89);
    v41(v40);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v35)
    {
      sub_24F77CE84();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F76B768();
    uint64_t v42 = type metadata accessor for AssociationAggregate();
    sub_24F77BD5C(v42);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v89);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v80, &qword_269A2B4A8);
    sub_24F780AFC();
  }
  sub_24F77344C();
}

{
  __n128 *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  long long *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  long long v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[21];
  void v90[2];
  __int16 v91;
  __n128 *v92;

  sub_24F76B80C();
  sub_24F77AFB0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v0 = (__n128 *)sub_24F77DF3C();
  uint64_t v1 = sub_24F77FF00(v0, (__n128)xmmword_24F8DDBF0);
  v2(v1);
  v90[0] = 4675137;
  v90[1] = 0xE300000000000000;
  __int16 v91 = 1;
  size_t v92 = v0;
  uint64_t v3 = sub_24F7A45E4((uint64_t)v90);
  int v11 = sub_24F7722EC(v3, v4, v5, v6, v7, v8, v9, v10, v43, v47, v51, v55, v59, v63, v67, v71, v74, v77, v80,
          *((uint64_t *)&v80 + 1),
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89[0],
          v89[1],
          v89[2],
          v89[3],
          v89[4],
          v89[5],
          v89[6],
          v89[7],
          v89[8],
          v89[9],
          v89[10],
          v89[11],
          v89[12],
          v89[13],
          v89[14],
          v89[15],
          v89[16],
          v89[17],
          v89[18],
          v89[19],
          v89[20],
          v90[0]);
  uint64_t v19 = sub_24F77C0A0(v11, v12, v13, v14, v15, v16, v17, v18, v44, v48, v52, v56, v60, v64, v68, v72, v75, v78, v80,
          *((uint64_t *)&v80 + 1),
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89[0]);
  sub_24F783050((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, v45, v49, v53, v57, v61, v65, v69, v73, v76, v79, v80,
    *((uint64_t *)&v80 + 1),
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89[0]);
  uint64_t v27 = swift_bridgeObjectRelease();
  sub_24F7736F4(v27, v28, v29, v30, v31, v32, v33, v34, v46, v50, v54, v58, v62, v66, v70);
  BOOL v35 = (long long *)sub_24F781274(qword_269A2B4B0);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F781DB0(&v80, (uint64_t)v89);
    switch(v36)
    {
      case 1:
      case 3:
        break;
      case 2:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        BOOL v35 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F775CA4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F771E70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_24F782BB0();
        goto LABEL_10;
      default:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        BOOL v35 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F77C7D0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F7855B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = sub_24F77B5E8();
LABEL_10:
        sub_24F780384(v37, v38, v39);
        break;
    }
    sub_24F773524();
    sub_24F774718();
    sub_24F780528();
    if (v35)
    {
      sub_24F77613C();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F7819B8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F7776F0();
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_24F77E1E0(v89);
    v41(v40);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v35)
    {
      sub_24F77CE84();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F76B768();
    uint64_t v42 = type metadata accessor for AssociationAggregate();
    sub_24F77BD5C(v42);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v89);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v80, &qword_269A2B4A8);
    sub_24F780AFC();
  }
  sub_24F77344C();
}

void AssociationToMany.max(_:)()
{
  sub_24F76B80C();
  sub_24F77AFB0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v2 = (__n128 *)sub_24F77DF3C();
  uint64_t v3 = sub_24F77E9A4(v2, (__n128)xmmword_24F8DDBF0);
  v4(v3);
  v92[0] = 5783885;
  v92[1] = 0xE300000000000000;
  __int16 v93 = 1;
  uint64_t v94 = v2;
  uint64_t v5 = sub_24F7A45E4((uint64_t)v92);
  int v13 = sub_24F7722EC(v5, v6, v7, v8, v9, v10, v11, v12, v45, v49, v53, v57, v61, v65, v69, v73, v76, v79, v82,
          *((uint64_t *)&v82 + 1),
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91[0],
          v91[1],
          v91[2],
          v91[3],
          v91[4],
          v91[5],
          v91[6],
          v91[7],
          v91[8],
          v91[9],
          v91[10],
          v91[11],
          v91[12],
          v91[13],
          v91[14],
          v91[15],
          v91[16],
          v91[17],
          v91[18],
          v91[19],
          v91[20],
          v92[0]);
  uint64_t v21 = sub_24F77C0A0(v13, v14, v15, v16, v17, v18, v19, v20, v46, v50, v54, v58, v62, v66, v70, v74, v77, v80, v82,
          *((uint64_t *)&v82 + 1),
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91[0]);
  sub_24F783050((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v47, v51, v55, v59, v63, v67, v71, v75, v78, v81, v82,
    *((uint64_t *)&v82 + 1),
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91[0]);
  uint64_t v29 = swift_bridgeObjectRelease();
  sub_24F7736F4(v29, v30, v31, v32, v33, v34, v35, v36, v48, v52, v56, v60, v64, v68, v72);
  uint64_t v37 = (long long *)sub_24F781274(&qword_269A2A588);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F781DB0(&v82, (uint64_t)v91);
    switch(v38)
    {
      case 1:
      case 3:
        break;
      case 2:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v37 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F775CA4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F771E70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = sub_24F782BB0();
        goto LABEL_10;
      default:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v37 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F77C7D0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F7855B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = sub_24F77B5E8();
LABEL_10:
        sub_24F780384(v39, v40, v41);
        break;
    }
    *(void *)&long long v82 = v2;
    *((void *)&v82 + 1) = v0;
    uint64_t v83 = v1;
    sub_24F78509C();
    sub_24F774718();
    sub_24F780528();
    if (v37)
    {
      sub_24F77613C();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F7819B8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F7776F0();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_24F77E1E0(v91);
    v43(v42);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v37)
    {
      sub_24F77CE84();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F76B768();
    uint64_t v44 = type metadata accessor for AssociationAggregate();
    sub_24F77BD5C(v44);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v91);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v82, &qword_269A2B4A8);
    sub_24F780AFC();
  }
  sub_24F77344C();
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  long long *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  long long v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[21];
  void v92[2];
  __int16 v93;
  __n128 *v94;

  sub_24F76B80C();
  sub_24F77AFB0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v2 = (__n128 *)sub_24F77DF3C();
  uint64_t v3 = sub_24F77FF00(v2, (__n128)xmmword_24F8DDBF0);
  v4(v3);
  v92[0] = 5783885;
  v92[1] = 0xE300000000000000;
  __int16 v93 = 1;
  uint64_t v94 = v2;
  uint64_t v5 = sub_24F7A45E4((uint64_t)v92);
  int v13 = sub_24F7722EC(v5, v6, v7, v8, v9, v10, v11, v12, v45, v49, v53, v57, v61, v65, v69, v73, v76, v79, v82,
          *((uint64_t *)&v82 + 1),
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91[0],
          v91[1],
          v91[2],
          v91[3],
          v91[4],
          v91[5],
          v91[6],
          v91[7],
          v91[8],
          v91[9],
          v91[10],
          v91[11],
          v91[12],
          v91[13],
          v91[14],
          v91[15],
          v91[16],
          v91[17],
          v91[18],
          v91[19],
          v91[20],
          v92[0]);
  uint64_t v21 = sub_24F77C0A0(v13, v14, v15, v16, v17, v18, v19, v20, v46, v50, v54, v58, v62, v66, v70, v74, v77, v80, v82,
          *((uint64_t *)&v82 + 1),
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91[0]);
  sub_24F783050((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v47, v51, v55, v59, v63, v67, v71, v75, v78, v81, v82,
    *((uint64_t *)&v82 + 1),
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91[0]);
  uint64_t v29 = swift_bridgeObjectRelease();
  sub_24F7736F4(v29, v30, v31, v32, v33, v34, v35, v36, v48, v52, v56, v60, v64, v68, v72);
  uint64_t v37 = (long long *)sub_24F781274(qword_269A2B4B0);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F781DB0(&v82, (uint64_t)v91);
    switch(v38)
    {
      case 1:
      case 3:
        break;
      case 2:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v37 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F775CA4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F771E70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = sub_24F782BB0();
        goto LABEL_10;
      default:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v37 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F77C7D0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F7855B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = sub_24F77B5E8();
LABEL_10:
        sub_24F780384(v39, v40, v41);
        break;
    }
    *(void *)&long long v82 = v2;
    *((void *)&v82 + 1) = v0;
    uint64_t v83 = v1;
    sub_24F78509C();
    sub_24F774718();
    sub_24F780528();
    if (v37)
    {
      sub_24F77613C();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F7819B8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F7776F0();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_24F77E1E0(v91);
    v43(v42);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v37)
    {
      sub_24F77CE84();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F76B768();
    uint64_t v44 = type metadata accessor for AssociationAggregate();
    sub_24F77BD5C(v44);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v91);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v82, &qword_269A2B4A8);
    sub_24F780AFC();
  }
  sub_24F77344C();
}

void AssociationToMany.min(_:)()
{
  sub_24F76B80C();
  sub_24F77AFB0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v2 = (__n128 *)sub_24F77DF3C();
  uint64_t v3 = sub_24F77E9A4(v2, (__n128)xmmword_24F8DDBF0);
  v4(v3);
  v92[0] = 5130573;
  v92[1] = 0xE300000000000000;
  __int16 v93 = 1;
  uint64_t v94 = v2;
  uint64_t v5 = sub_24F7A45E4((uint64_t)v92);
  int v13 = sub_24F7722EC(v5, v6, v7, v8, v9, v10, v11, v12, v45, v49, v53, v57, v61, v65, v69, v73, v76, v79, v82,
          *((uint64_t *)&v82 + 1),
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91[0],
          v91[1],
          v91[2],
          v91[3],
          v91[4],
          v91[5],
          v91[6],
          v91[7],
          v91[8],
          v91[9],
          v91[10],
          v91[11],
          v91[12],
          v91[13],
          v91[14],
          v91[15],
          v91[16],
          v91[17],
          v91[18],
          v91[19],
          v91[20],
          v92[0]);
  uint64_t v21 = sub_24F77C0A0(v13, v14, v15, v16, v17, v18, v19, v20, v46, v50, v54, v58, v62, v66, v70, v74, v77, v80, v82,
          *((uint64_t *)&v82 + 1),
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91[0]);
  sub_24F783050((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v47, v51, v55, v59, v63, v67, v71, v75, v78, v81, v82,
    *((uint64_t *)&v82 + 1),
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91[0]);
  uint64_t v29 = swift_bridgeObjectRelease();
  sub_24F7736F4(v29, v30, v31, v32, v33, v34, v35, v36, v48, v52, v56, v60, v64, v68, v72);
  uint64_t v37 = (long long *)sub_24F781274(&qword_269A2A588);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F781DB0(&v82, (uint64_t)v91);
    switch(v38)
    {
      case 1:
      case 3:
        break;
      case 2:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v37 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F775CA4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F771E70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = sub_24F782BB0();
        goto LABEL_10;
      default:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v37 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F77C7D0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F7855B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = sub_24F77B5E8();
LABEL_10:
        sub_24F780384(v39, v40, v41);
        break;
    }
    *(void *)&long long v82 = v2;
    *((void *)&v82 + 1) = v0;
    uint64_t v83 = v1;
    sub_24F78509C();
    sub_24F774718();
    sub_24F780528();
    if (v37)
    {
      sub_24F77613C();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F7819B8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F7776F0();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_24F77E1E0(v91);
    v43(v42);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v37)
    {
      sub_24F77CE84();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F76B768();
    uint64_t v44 = type metadata accessor for AssociationAggregate();
    sub_24F77BD5C(v44);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v91);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v82, &qword_269A2B4A8);
    sub_24F780AFC();
  }
  sub_24F77344C();
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  long long *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  long long v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[21];
  void v92[2];
  __int16 v93;
  __n128 *v94;

  sub_24F76B80C();
  sub_24F77AFB0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v2 = (__n128 *)sub_24F77DF3C();
  uint64_t v3 = sub_24F77FF00(v2, (__n128)xmmword_24F8DDBF0);
  v4(v3);
  v92[0] = 5130573;
  v92[1] = 0xE300000000000000;
  __int16 v93 = 1;
  uint64_t v94 = v2;
  uint64_t v5 = sub_24F7A45E4((uint64_t)v92);
  int v13 = sub_24F7722EC(v5, v6, v7, v8, v9, v10, v11, v12, v45, v49, v53, v57, v61, v65, v69, v73, v76, v79, v82,
          *((uint64_t *)&v82 + 1),
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91[0],
          v91[1],
          v91[2],
          v91[3],
          v91[4],
          v91[5],
          v91[6],
          v91[7],
          v91[8],
          v91[9],
          v91[10],
          v91[11],
          v91[12],
          v91[13],
          v91[14],
          v91[15],
          v91[16],
          v91[17],
          v91[18],
          v91[19],
          v91[20],
          v92[0]);
  uint64_t v21 = sub_24F77C0A0(v13, v14, v15, v16, v17, v18, v19, v20, v46, v50, v54, v58, v62, v66, v70, v74, v77, v80, v82,
          *((uint64_t *)&v82 + 1),
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91[0]);
  sub_24F783050((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v47, v51, v55, v59, v63, v67, v71, v75, v78, v81, v82,
    *((uint64_t *)&v82 + 1),
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91[0]);
  uint64_t v29 = swift_bridgeObjectRelease();
  sub_24F7736F4(v29, v30, v31, v32, v33, v34, v35, v36, v48, v52, v56, v60, v64, v68, v72);
  uint64_t v37 = (long long *)sub_24F781274(qword_269A2B4B0);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F781DB0(&v82, (uint64_t)v91);
    switch(v38)
    {
      case 1:
      case 3:
        break;
      case 2:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v37 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F775CA4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F771E70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = sub_24F782BB0();
        goto LABEL_10;
      default:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v37 = &xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F77C7D0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F773C40();
        sub_24F7855B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = sub_24F77B5E8();
LABEL_10:
        sub_24F780384(v39, v40, v41);
        break;
    }
    *(void *)&long long v82 = v2;
    *((void *)&v82 + 1) = v0;
    uint64_t v83 = v1;
    sub_24F78509C();
    sub_24F774718();
    sub_24F780528();
    if (v37)
    {
      sub_24F77613C();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F7819B8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F7776F0();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_24F77E1E0(v91);
    v43(v42);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v37)
    {
      sub_24F77CE84();
      sub_24F7710A8();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F7808A8();
      sub_24F831488();
      sub_24F781578();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F76B768();
    uint64_t v44 = type metadata accessor for AssociationAggregate();
    sub_24F77BD5C(v44);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v91);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v82, &qword_269A2B4A8);
    sub_24F780AFC();
  }
  sub_24F77344C();
}

void AssociationToMany.sum(_:)()
{
  sub_24F76B80C();
  sub_24F8314E0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v4 = (__n128 *)sub_24F77DF3C();
  uint64_t v5 = sub_24F77E9A4(v4, (__n128)xmmword_24F8DDBF0);
  v6(v5);
  v96[0] = v3;
  v96[1] = 0xE300000000000000;
  __int16 v97 = 1;
  uint64_t v98 = v4;
  uint64_t v7 = sub_24F7A45E4((uint64_t)v96);
  int v15 = sub_24F7722EC(v7, v8, v9, v10, v11, v12, v13, v14, v48, v52, v57, v61, v65, v69, v73, v77, v80, v83, v86,
          *((uint64_t *)&v86 + 1),
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95[0],
          v95[1],
          v95[2],
          v95[3],
          v95[4],
          v95[5],
          v95[6],
          v95[7],
          v95[8],
          v95[9],
          v95[10],
          v95[11],
          v95[12],
          v95[13],
          v95[14],
          v95[15],
          v95[16],
          v95[17],
          v95[18],
          v95[19],
          v95[20],
          v96[0]);
  uint64_t v23 = sub_24F77C0A0(v15, v16, v17, v18, v19, v20, v21, v22, v49, v53, v58, v62, v66, v70, v74, v78, v81, v84, v86,
          *((uint64_t *)&v86 + 1),
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95[0]);
  sub_24F783050((uint64_t)v23, v24, v25, v26, v27, v28, v29, v30, v50, v54, v59, v63, v67, v71, v75, v79, v82, v85, v86,
    *((uint64_t *)&v86 + 1),
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95[0]);
  uint64_t v31 = swift_bridgeObjectRelease();
  sub_24F76BB38(v31, v32, v33, v34, v35, v36, v37, v38, v51, v55, v60, v64, v68, v72, v76);
  sub_24F781274(&qword_269A2A588);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F794DE0(&v86, (uint64_t)v95);
    sub_24F778CF8();
    switch(v40)
    {
      case 1:
      case 3:
        unsigned __int8 v41 = v39;
        break;
      case 2:
        uint64_t v56 = v2;
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        unsigned __int8 v41 = (uint64_t *)&xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F778E0C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F83151C();
        sub_24F831590();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = sub_24F782BB0();
        goto LABEL_11;
      default:
        uint64_t v56 = v2;
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        sub_24F77E1C0();
        sub_24F8314A0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned __int8 v41 = &v90;
        sub_24F8314C4();
        sub_24F831574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = sub_24F77B5E8();
LABEL_11:
        sub_24F7AD5DC(v42, v43, v44);
        uint64_t v2 = v56;
        break;
    }
    *(void *)&long long v86 = v1;
    *((void *)&v86 + 1) = v4;
    uint64_t v87 = v2;
    uint64_t v45 = sub_24F831454(v95);
    v46(v45);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v41)
    {
      sub_24F77CE84();
      sub_24F831558();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F776038();
      swift_bridgeObjectRetain();
      sub_24F8315AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F7744A4();
    uint64_t v47 = type metadata accessor for AssociationAggregate();
    sub_24F780E78(v47);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v95);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v86, &qword_269A2B4A8);
    void *v0 = v1;
    v0[1] = v4;
    v0[2] = v2;
  }
  sub_24F77344C();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  long long v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[21];
  void v96[2];
  __int16 v97;
  __n128 *v98;

  sub_24F76B80C();
  sub_24F8314E0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v4 = (__n128 *)sub_24F77DF3C();
  uint64_t v5 = sub_24F77FF00(v4, (__n128)xmmword_24F8DDBF0);
  v6(v5);
  v96[0] = v3;
  v96[1] = 0xE300000000000000;
  __int16 v97 = 1;
  uint64_t v98 = v4;
  uint64_t v7 = sub_24F7A45E4((uint64_t)v96);
  int v15 = sub_24F7722EC(v7, v8, v9, v10, v11, v12, v13, v14, v48, v52, v57, v61, v65, v69, v73, v77, v80, v83, v86,
          *((uint64_t *)&v86 + 1),
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95[0],
          v95[1],
          v95[2],
          v95[3],
          v95[4],
          v95[5],
          v95[6],
          v95[7],
          v95[8],
          v95[9],
          v95[10],
          v95[11],
          v95[12],
          v95[13],
          v95[14],
          v95[15],
          v95[16],
          v95[17],
          v95[18],
          v95[19],
          v95[20],
          v96[0]);
  uint64_t v23 = sub_24F77C0A0(v15, v16, v17, v18, v19, v20, v21, v22, v49, v53, v58, v62, v66, v70, v74, v78, v81, v84, v86,
          *((uint64_t *)&v86 + 1),
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95[0]);
  sub_24F783050((uint64_t)v23, v24, v25, v26, v27, v28, v29, v30, v50, v54, v59, v63, v67, v71, v75, v79, v82, v85, v86,
    *((uint64_t *)&v86 + 1),
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95[0]);
  uint64_t v31 = swift_bridgeObjectRelease();
  sub_24F76BB38(v31, v32, v33, v34, v35, v36, v37, v38, v51, v55, v60, v64, v68, v72, v76);
  sub_24F781274(qword_269A2B4B0);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F794DE0(&v86, (uint64_t)v95);
    sub_24F778CF8();
    switch(v40)
    {
      case 1:
      case 3:
        unsigned __int8 v41 = v39;
        break;
      case 2:
        uint64_t v56 = v2;
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        unsigned __int8 v41 = (uint64_t *)&xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F778E0C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F83151C();
        sub_24F831590();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = sub_24F782BB0();
        goto LABEL_11;
      default:
        uint64_t v56 = v2;
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        sub_24F77E1C0();
        sub_24F8314A0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned __int8 v41 = &v90;
        sub_24F8314C4();
        sub_24F831574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = sub_24F77B5E8();
LABEL_11:
        sub_24F7AD5DC(v42, v43, v44);
        uint64_t v2 = v56;
        break;
    }
    *(void *)&long long v86 = v1;
    *((void *)&v86 + 1) = v4;
    uint64_t v87 = v2;
    uint64_t v45 = sub_24F831454(v95);
    v46(v45);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v41)
    {
      sub_24F77CE84();
      sub_24F831558();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F776038();
      swift_bridgeObjectRetain();
      sub_24F8315AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F7744A4();
    uint64_t v47 = type metadata accessor for AssociationAggregate();
    sub_24F780E78(v47);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v95);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v86, &qword_269A2B4A8);
    void *v0 = v1;
    v0[1] = v4;
    v0[2] = v2;
  }
  sub_24F77344C();
}

void AssociationToMany.total(_:)()
{
  sub_24F76B80C();
  sub_24F77AFB0();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v2 = (__n128 *)sub_24F77DF3C();
  uint64_t v3 = sub_24F77FF00(v2, (__n128)xmmword_24F8DDBF0);
  v4(v3);
  v82[0] = 0x4C41544F54;
  v82[1] = 0xE500000000000000;
  __int16 v83 = 1;
  uint64_t v84 = v2;
  uint64_t v5 = sub_24F7A45E4((uint64_t)v82);
  int v13 = sub_24F7722EC(v5, v6, v7, v8, v9, v10, v11, v12, v41, v44, v48, v51, v54, v57, v60, v63, v66, v69, v72,
          *((uint64_t *)&v72 + 1),
          v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80,
          v81[0],
          v81[1],
          v81[2],
          v81[3],
          v81[4],
          v81[5],
          v81[6],
          v81[7],
          v81[8],
          v81[9],
          v81[10],
          v81[11],
          v81[12],
          v81[13],
          v81[14],
          v81[15],
          v81[16],
          v81[17],
          v81[18],
          v81[19],
          v81[20],
          v82[0]);
  int v21 = sub_24F77C0A0(v13, v14, v15, v16, v17, v18, v19, v20, v42, v45, v49, v52, v55, v58, v61, v64, v67, v70, v72,
          *((uint64_t *)&v72 + 1),
          v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80,
          v81[0]);
  sub_24F783050((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v43, v46, v50, v53, v56, v59, v62, v65, v68, v71, v72,
    *((uint64_t *)&v72 + 1),
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81[0]);
  swift_bridgeObjectRelease();
  uint64_t v30 = v76;
  uint64_t v29 = v77;
  uint64_t v31 = v78;
  sub_24F775458(v1, (uint64_t)&v76);
  sub_24F781274(qword_269A2B4B0);
  sub_24F781274(&qword_269A2B4A0);
  if (sub_24F77F000())
  {
    sub_24F794DE0(&v72, (uint64_t)v81);
    sub_24F778CF8();
    switch(v33)
    {
      case 1:
      case 3:
        uint64_t v34 = v32;
        break;
      case 2:
        uint64_t v47 = v31;
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        uint64_t v34 = (uint64_t *)&xmmword_26B1F5730;
        sub_24F77E1C0();
        sub_24F778E0C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24F83151C();
        sub_24F831590();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = sub_24F782BB0();
        goto LABEL_11;
      default:
        uint64_t v47 = v31;
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        sub_24F77E1C0();
        sub_24F8314A0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v34 = &v76;
        sub_24F8314C4();
        sub_24F831574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = sub_24F77B5E8();
LABEL_11:
        sub_24F7AD5DC(v35, v36, v37);
        uint64_t v31 = v47;
        break;
    }
    *(void *)&long long v72 = v30;
    *((void *)&v72 + 1) = v29;
    uint64_t v73 = v31;
    uint64_t v38 = sub_24F831454(v81);
    v39(v38);
    sub_24F76B95C();
    sub_24F772E4C();
    sub_24F831438();
    if (v34)
    {
      sub_24F77CE84();
      sub_24F831558();
      swift_bridgeObjectRetain();
      sub_24F780CD8();
      sub_24F776038();
      swift_bridgeObjectRetain();
      sub_24F8315AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24F77D854();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F7744A4();
    uint64_t v40 = type metadata accessor for AssociationAggregate();
    sub_24F780E78(v40);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v81);
  }
  else
  {
    sub_24F7858E0();
    sub_24F7783C0((uint64_t)&v72, &qword_269A2B4A8);
    uint64_t *v0 = v30;
    v0[1] = v29;
    v0[2] = v31;
  }
  sub_24F77344C();
}

uint64_t sub_24F82E85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(**(void **)v4 + 88))(a1, a3, a4);
}

uint64_t sub_24F82E8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a3;
  return result;
}

uint64_t AssociationAggregate.forKey(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F8CFFE0();
  AssociationAggregate.forKey(_:)(a2, a3);
  return swift_bridgeObjectRelease();
}

void sub_24F82E988()
{
}

uint64_t sub_24F82E9E4(uint64_t a1, const void *a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 104) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 120), a1);
  memcpy((void *)(v2 + *(void *)(*(void *)v2 + 128)), a2, 0xA3uLL);
  return v2;
}

uint64_t sub_24F82EA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = a3;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 104);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TableAlias();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(unsigned char *)(v13 + 48) = 0;
  int v14 = *(void (**)(void))(*(void *)(*(void *)(*(void *)(*(void *)(v5 + 112) + 8) + 8) + 48) + 16);
  int v20 = v9;
  v14();
  uint64_t v15 = (uint64_t)v9;
  uint64_t v16 = v21;
  JoinableRequest.joining<A>(optional:)(v15, v21, v6);
  int v17 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v17(a1, v16);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v6);
  TableRequest<>.groupByPrimaryKey()();
  v17((uint64_t)v12, v16);
  int v18 = (char *)v3 + *(void *)(*v3 + 128);
  memcpy(v26, v18, 0xA3uLL);
  memcpy(v25, v18, sizeof(v25));
  sub_24F76F7F0((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  sub_24F814C38((void *)v13, v24);
  swift_release();
  return sub_24F76F7F0((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t sub_24F82ED5C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 104) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 120));
  memcpy(__dst, (const void *)(v0 + *(void *)(*(void *)v0 + 128)), 0xA3uLL);
  return sub_24F76F7F0((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t sub_24F82EE10()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 104) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 120));
  memcpy(__dst, (const void *)(v0 + *(void *)(*(void *)v0 + 128)), 0xA3uLL);
  sub_24F76F7F0((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return v0;
}

uint64_t sub_24F82EEC8()
{
  uint64_t v0 = sub_24F82EE10();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

void *sub_24F82EF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

uint64_t sub_24F82EF64()
{
  uint64_t v1 = *(void (**)(unsigned char *))(v0 + 24);
  (*(void (**)(void *__return_ptr))(**(void **)(v0 + 16) + 88))(__src);
  memcpy(v3, __src, 0xA3uLL);
  v1(v3);
  return sub_24F76F7F0((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t sub_24F82F00C()
{
  swift_release();
  return swift_release();
}

uint64_t sub_24F82F03C()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_24F82F064()
{
  uint64_t v0 = sub_24F82F03C();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t sub_24F82F094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  type metadata accessor for MapPreparation();
  uint64_t v8 = sub_24F82EF1C(v7, a1, a2);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = v8;
  swift_retain();
  return swift_retain();
}

void *sub_24F82F114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t sub_24F82F168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void *__return_ptr))(**(void **)(v3 + 16) + 88))(__src);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(**(void **)(v3 + 24) + 88))(v12, a1, a2, a3);
  uint64_t v7 = *(void (**)(unsigned char *, unsigned char *))(v3 + 32);
  memcpy(__dst, __src, 0xA3uLL);
  memcpy(v9, v12, 0xA3uLL);
  v7(__dst, v9);
  sub_24F76F7F0((uint64_t)v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F76F7F0((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t sub_24F82F280()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24F82F2B8()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_24F82F2E8()
{
  uint64_t v0 = sub_24F82F2B8();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_24F82F318@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *a2;
  type metadata accessor for CombinePreparation();
  uint64_t v10 = sub_24F82F114(v8, v9, a3, a4);
  a5[1] = 0;
  a5[2] = 0;
  *a5 = v10;
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t ! prefix<A>(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24F830A10(a1, (uint64_t)sub_24F82F3C4, a2);
}

uint64_t sub_24F82F3C4(uint64_t a1)
{
  return sub_24F830534(a1, (void (*)(void *))! prefix(_:));
}

uint64_t && infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F3F4, a3);
}

void sub_24F82F3F4()
{
}

void sub_24F82F40C()
{
}

void sub_24F82F424()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  v7[3] = &type metadata for SQLExpression;
  _OWORD v7[4] = &protocol witness table for SQLExpression;
  uint64_t v2 = sub_24F781DE4();
  uint64_t v3 = (void *)(v2 + 16);
  v7[0] = v2;
  sub_24F774F3C(v8);
  sub_24F774F3C(v3);
  v6[3] = &type metadata for SQLExpression;
  _OWORD v6[4] = &protocol witness table for SQLExpression;
  uint64_t v4 = sub_24F781DE4();
  uint64_t v5 = (void *)(v4 + 16);
  v6[0] = v4;
  sub_24F77299C(v9);
  sub_24F77299C(v5);
  sub_24F76F7F0((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  sub_24F76F7F0((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  v1(v7, v6);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
  sub_24F77344C();
}

void sub_24F82F518()
{
}

void sub_24F82F530()
{
}

void sub_24F82F548()
{
}

void sub_24F82F560()
{
}

void sub_24F82F578()
{
}

void sub_24F82F590()
{
}

void sub_24F82F5A8()
{
}

void sub_24F82F5C0()
{
}

void sub_24F82F5D8()
{
}

void sub_24F82F5F0()
{
}

void sub_24F82F608()
{
}

void sub_24F82F620()
{
}

uint64_t && infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t && infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t || infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F40C, a3);
}

uint64_t || infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t sub_24F82F6B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *a1;
  long long v6 = *(_OWORD *)(a1 + 1);
  sub_24F775458(a2, (uint64_t)v4);
  uint64_t v2 = swift_allocObject();
  sub_24F794DE0(v4, v2 + 16);
  type metadata accessor for AssociationAggregate();
  sub_24F831500();
  return swift_release();
}

uint64_t sub_24F82F754(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  sub_24F77299C(v7);
  v6[3] = &type metadata for SQLExpression;
  _OWORD v6[4] = &protocol witness table for SQLExpression;
  v6[0] = sub_24F781DE4();
  sub_24F77299C((void *)(v6[0] + 16));
  sub_24F76F7F0((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  a3(v6, a2);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
}

uint64_t || infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t sub_24F82F828(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  long long v6 = *(_OWORD *)(a2 + 1);
  sub_24F775458(a1, (uint64_t)v4);
  uint64_t v2 = swift_allocObject();
  sub_24F794DE0(v4, v2 + 16);
  type metadata accessor for AssociationAggregate();
  sub_24F831500();
  return swift_release();
}

uint64_t sub_24F82F8C4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void *))
{
  sub_24F77299C(v7);
  v6[3] = &type metadata for SQLExpression;
  _OWORD v6[4] = &protocol witness table for SQLExpression;
  v6[0] = sub_24F781DE4();
  sub_24F77299C((void *)(v6[0] + 16));
  sub_24F76F7F0((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  a3(a2, v6);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
}

uint64_t == infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F518, a3);
}

uint64_t == infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t == infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t == infix<A>(_:_:)(uint64_t a1, char a2)
{
  return sub_24F82FC00(a1, a2);
}

uint64_t sub_24F82F9F0@<X0>(void *__src@<X0>, char a2@<W1>, void *a3@<X8>)
{
  memcpy(__dst, __src, 0xA3uLL);
  v7[3] = &type metadata for SQLExpression;
  _OWORD v7[4] = &protocol witness table for SQLExpression;
  v7[0] = swift_allocObject();
  memcpy((void *)(v7[0] + 16), __src, 0xA3uLL);
  sub_24F76F7F0((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  == infix(_:_:)(v7, a2, a3);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
}

uint64_t == infix<A>(_:_:)(char a1)
{
  return sub_24F82FDAC(a1);
}

uint64_t sub_24F82FACC@<X0>(void *__src@<X0>, char a2@<W1>, void *a3@<X8>)
{
  memcpy(__dst, __src, 0xA3uLL);
  v7[3] = &type metadata for SQLExpression;
  _OWORD v7[4] = &protocol witness table for SQLExpression;
  v7[0] = swift_allocObject();
  memcpy((void *)(v7[0] + 16), __src, 0xA3uLL);
  sub_24F76F7F0((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  == infix(_:_:)(a2, v7, a3);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
}

uint64_t != infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F530, a3);
}

uint64_t != infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t != infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t != infix<A>(_:_:)(uint64_t a1, char a2)
{
  return sub_24F82FC00(a1, a2);
}

uint64_t sub_24F82FC00(uint64_t a1, char a2)
{
  sub_24F8315C8(a1);
  *(unsigned char *)(swift_allocObject() + 16) = a2;
  type metadata accessor for AssociationAggregate();
  sub_24F831500();
  return swift_release();
}

uint64_t sub_24F82FC8C(void *__src, char a2)
{
  memcpy(__dst, __src, 0xA3uLL);
  v8[3] = &type metadata for SQLExpression;
  v8[4] = &protocol witness table for SQLExpression;
  v8[0] = swift_allocObject();
  memcpy((void *)(v8[0] + 16), __src, 0xA3uLL);
  v7[3] = &type metadata for SQLExpression;
  _OWORD v7[4] = &protocol witness table for SQLExpression;
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (void *)(v4 + 16);
  v7[0] = v4;
  sub_24F76F7F0((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  == infix(_:_:)(v8, a2, v5);
  ! prefix(_:)(v7);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v8);
}

uint64_t != infix<A>(_:_:)(char a1)
{
  return sub_24F82FDAC(a1);
}

uint64_t sub_24F82FDAC(char a1)
{
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  type metadata accessor for AssociationAggregate();
  sub_24F831500();
  return swift_release();
}

uint64_t sub_24F82FE44(void *__src, char a2)
{
  memcpy(__dst, __src, 0xA3uLL);
  v8[3] = &type metadata for SQLExpression;
  v8[4] = &protocol witness table for SQLExpression;
  v8[0] = swift_allocObject();
  memcpy((void *)(v8[0] + 16), __src, 0xA3uLL);
  v7[3] = &type metadata for SQLExpression;
  _OWORD v7[4] = &protocol witness table for SQLExpression;
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (void *)(v4 + 16);
  v7[0] = v4;
  sub_24F76F7F0((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  == infix(_:_:)(a2, v8, v5);
  ! prefix(_:)(v7);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v8);
}

uint64_t === infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F548, a3);
}

uint64_t === infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t sub_24F82FF7C(uint64_t a1, uint64_t a2, void (*a3)(void *, unsigned char *))
{
  sub_24F77299C(v8);
  v7[3] = &type metadata for SQLExpression;
  _OWORD v7[4] = &protocol witness table for SQLExpression;
  v7[0] = sub_24F781DE4();
  sub_24F77299C((void *)(v7[0] + 16));
  sub_24F775458(a2, (uint64_t)v6);
  sub_24F76F7F0((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  a3(v7, v6);
  sub_24F7783C0((uint64_t)v6, &qword_26B1F7350);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
}

uint64_t === infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t sub_24F83006C(void *__src, uint64_t a2, void (*a3)(unsigned char *, void *))
{
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F775458(a2, (uint64_t)v7);
  v6[3] = &type metadata for SQLExpression;
  _OWORD v6[4] = &protocol witness table for SQLExpression;
  v6[0] = sub_24F781DE4();
  memcpy((void *)(v6[0] + 16), __dst, 0xA3uLL);
  sub_24F76F7F0((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  a3(v7, v6);
  sub_24F7783C0((uint64_t)v7, &qword_26B1F7350);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
}

uint64_t !== infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F560, a3);
}

uint64_t !== infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t sub_24F830178(uint64_t a1, uint64_t a2, void (*a3)(void *, unsigned char *))
{
  sub_24F774F3C(v9);
  v8[3] = &type metadata for SQLExpression;
  v8[4] = &protocol witness table for SQLExpression;
  v8[0] = sub_24F781DE4();
  sub_24F774F3C((void *)(v8[0] + 16));
  sub_24F775458(a2, (uint64_t)v7);
  v6[3] = &type metadata for SQLExpression;
  _OWORD v6[4] = &protocol witness table for SQLExpression;
  v6[0] = sub_24F781DE4();
  sub_24F76F7F0((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  a3(v8, v7);
  ! prefix(_:)(v6);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
  sub_24F7783C0((uint64_t)v7, &qword_26B1F7350);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v8);
}

uint64_t !== infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t sub_24F83029C(void *__src, uint64_t a2, void (*a3)(unsigned char *, void *))
{
  memcpy(__dst, __src, 0xA3uLL);
  sub_24F775458(a2, (uint64_t)v8);
  v7[3] = &type metadata for SQLExpression;
  _OWORD v7[4] = &protocol witness table for SQLExpression;
  v7[0] = sub_24F781DE4();
  memcpy((void *)(v7[0] + 16), __dst, 0xA3uLL);
  v6[3] = &type metadata for SQLExpression;
  _OWORD v6[4] = &protocol witness table for SQLExpression;
  v6[0] = sub_24F781DE4();
  sub_24F76F7F0((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  a3(v8, v7);
  ! prefix(_:)(v6);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
  sub_24F7783C0((uint64_t)v8, &qword_26B1F7350);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
}

uint64_t <= infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F578, a3);
}

uint64_t <= infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t <= infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t < infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F590, a3);
}

uint64_t < infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t < infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t > infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F5A8, a3);
}

uint64_t > infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t > infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t >= infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F5C0, a3);
}

uint64_t >= infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t >= infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t - prefix<A>(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24F830A10(a1, (uint64_t)sub_24F83051C, a2);
}

uint64_t sub_24F83051C(uint64_t a1)
{
  return sub_24F830534(a1, (void (*)(void *))- prefix(_:));
}

uint64_t sub_24F830534(uint64_t a1, void (*a2)(void *))
{
  sub_24F770944(v5);
  void v4[3] = &type metadata for SQLExpression;
  v4[4] = &protocol witness table for SQLExpression;
  v4[0] = sub_24F781DE4();
  sub_24F770944((void *)(v4[0] + 16));
  sub_24F76F7F0((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  a2(v4);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v4);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F5D8, a3);
}

uint64_t + infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t + infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F5F0, a3);
}

uint64_t - infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t - infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F608, a3);
}

uint64_t * infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t * infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F8306F8(a1, a2, (uint64_t)sub_24F82F620, a3);
}

uint64_t sub_24F8306F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v8 = *(void *)a1;
  long long v9 = *(_OWORD *)(a1 + 8);
  uint64_t v6 = v4;
  long long v7 = *(_OWORD *)(a2 + 8);
  return sub_24F82F318(&v8, &v6, a3, 0, a4);
}

uint64_t / infix<A>(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_24F82F6B0(a1, a2);
}

uint64_t / infix<A>(_:_:)(uint64_t a1, uint64_t *a2)
{
  return sub_24F82F828(a1, a2);
}

uint64_t ?? infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v11 = *a1;
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  sub_24F775458(a2, (uint64_t)&v9);
  uint64_t v6 = swift_allocObject();
  sub_24F794DE0((long long *)&v9, v6 + 16);
  uint64_t v7 = type metadata accessor for AssociationAggregate();
  sub_24F82F094((uint64_t)sub_24F83109C, v6, &v14);
  swift_release();
  uint64_t v9 = v14;
  long long v10 = v15;
  sub_24F85E9C4(sub_24F8310CC, v7, a3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8308B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  return result;
}

uint64_t abs<A>(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24F830A10(a1, (uint64_t)sub_24F83091C, a2);
}

uint64_t sub_24F83091C(uint64_t a1)
{
  return sub_24F83094C(a1, (void (*)(void *))abs(_:));
}

uint64_t sub_24F830934(uint64_t a1)
{
  return sub_24F83094C(a1, (void (*)(void *))length(_:));
}

uint64_t sub_24F83094C(uint64_t a1, void (*a2)(void *))
{
  v6[3] = &type metadata for SQLExpression;
  _OWORD v6[4] = &protocol witness table for SQLExpression;
  uint64_t v3 = sub_24F781DE4();
  uint64_t v4 = (void *)(v3 + 16);
  v6[0] = v3;
  sub_24F770944(v7);
  sub_24F770944(v4);
  sub_24F76F7F0((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
  a2(v6);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
}

uint64_t length<A>(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24F830A10(a1, (uint64_t)sub_24F830934, a2);
}

uint64_t sub_24F830A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  return sub_24F82F094(a2, 0, a3);
}

uint64_t type metadata accessor for AssociationAggregate()
{
  return sub_24F777DE0();
}

uint64_t sub_24F830A80(uint64_t a1)
{
  return sub_24F82E8A8(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24F830AA0()
{
  return sub_24F766A08();
}

unint64_t sub_24F830AA8()
{
  unint64_t result = qword_269A2B498;
  if (!qword_269A2B498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2B498);
  }
  return result;
}

uint64_t sub_24F830AF4(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))&& infix(_:_:));
}

uint64_t sub_24F830B24(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))&& infix(_:_:));
}

uint64_t sub_24F830B54(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))|| infix(_:_:));
}

uint64_t sub_24F830B84()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_24F830BBC(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))|| infix(_:_:));
}

uint64_t sub_24F830BEC(uint64_t a1)
{
  return sub_24F82FF7C(a1, v1 + 16, (void (*)(void *, unsigned char *))== infix(_:_:));
}

uint64_t sub_24F830C1C(void *a1)
{
  return sub_24F83006C(a1, v1 + 16, (void (*)(unsigned char *, void *))== infix(_:_:));
}

uint64_t sub_24F830C50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24F82F9F0(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_24F830C5C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24F82FACC(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_24F830C64(uint64_t a1)
{
  return sub_24F830178(a1, v1 + 16, (void (*)(void *, unsigned char *))== infix(_:_:));
}

uint64_t sub_24F830C94(void *a1)
{
  return sub_24F83029C(a1, v1 + 16, (void (*)(unsigned char *, void *))== infix(_:_:));
}

uint64_t sub_24F830CC8(void *a1)
{
  return sub_24F82FC8C(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_24F830CD4(void *a1)
{
  return sub_24F82FE44(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_24F830CDC(uint64_t a1)
{
  return sub_24F82FF7C(a1, v1 + 16, (void (*)(void *, unsigned char *))=== infix(_:_:));
}

uint64_t sub_24F830D0C(void *a1)
{
  return sub_24F83006C(a1, v1 + 16, (void (*)(unsigned char *, void *))=== infix(_:_:));
}

uint64_t sub_24F830D3C(uint64_t a1)
{
  return sub_24F830178(a1, v1 + 16, (void (*)(void *, unsigned char *))=== infix(_:_:));
}

uint64_t sub_24F830D6C(void *a1)
{
  return sub_24F83029C(a1, v1 + 16, (void (*)(unsigned char *, void *))=== infix(_:_:));
}

uint64_t sub_24F830D9C(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))<= infix(_:_:));
}

uint64_t sub_24F830DCC(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))<= infix(_:_:));
}

uint64_t sub_24F830DFC(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))< infix(_:_:));
}

uint64_t sub_24F830E2C(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))< infix(_:_:));
}

uint64_t sub_24F830E5C(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))> infix(_:_:));
}

uint64_t sub_24F830E8C(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))> infix(_:_:));
}

uint64_t sub_24F830EBC(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))>= infix(_:_:));
}

uint64_t sub_24F830EEC(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))>= infix(_:_:));
}

uint64_t sub_24F830F1C(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))+ infix(_:_:));
}

uint64_t sub_24F830F4C(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))+ infix(_:_:));
}

uint64_t sub_24F830F7C(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))- infix(_:_:));
}

uint64_t sub_24F830FAC(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))- infix(_:_:));
}

uint64_t sub_24F830FDC(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))* infix(_:_:));
}

uint64_t sub_24F83100C(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))* infix(_:_:));
}

uint64_t sub_24F83103C(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))/ infix(_:_:));
}

uint64_t sub_24F83106C(uint64_t a1)
{
  return sub_24F82F8C4(a1, v1 + 16, (void (*)(uint64_t, void *))/ infix(_:_:));
}

uint64_t sub_24F83109C(uint64_t a1)
{
  return sub_24F82F754(a1, v1 + 16, (void (*)(void *, uint64_t))?? infix(_:_:));
}

uint64_t sub_24F8310CC(uint64_t a1)
{
  return sub_24F8308B4(a1, v1[3], v1[4], v1[5]);
}

void *sub_24F8310F0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StatementRowImpl(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_24F831198(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24F8311E0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AssociationAggregatePreparation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F831230()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for BasePreparation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F8312E4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MapPreparation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F831350()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CombinePreparation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F8313C0()
{
  return sub_24F766A08();
}

uint64_t sub_24F831438()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F831454(void *a1)
{
  sub_24F7811D0(a1, v1);
  return v1;
}

uint64_t sub_24F831488()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F8314A0()
{
  return swift_bridgeObjectRetain();
}

void sub_24F8314C4()
{
  sub_24F858884(v0, v1, v2);
}

uint64_t sub_24F831500()
{
  return sub_24F82F094(v0, v2, v1);
}

void sub_24F83151C()
{
  sub_24F858884(v0, v1, v2);
}

uint64_t sub_24F831558()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F831574()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F831590()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8315AC()
{
  return sub_24F8CEEA0();
}

__n128 sub_24F8315C8(uint64_t a1)
{
  return *(__n128 *)(a1 + 8);
}

uint64_t sub_24F8315DC(uint64_t a1)
{
  sub_24F766748();
  sub_24F766690();
  sub_24F77FF48();
  uint64_t result = sub_24F76C344(a1, v4);
  *unint64_t v1 = v2;
  return result;
}

Swift::Void __swiftcall SQLInterpolation.appendInterpolation(sql:arguments:)(Swift::String sql, GRDBInternal::StatementArguments arguments)
{
  uint64_t v3 = *(void *)arguments.values._rawValue;
  uint64_t v4 = *((void *)arguments.values._rawValue + 1);
  Swift::String v6 = sql;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  sub_24F7725D4(&v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F766748();
  sub_24F766690();
  sub_24F7721F4(v5);
  *uint64_t v2 = v3;
}

Swift::Void __swiftcall SQLInterpolation.appendInterpolation(literal:)(GRDBInternal::SQL literal)
{
  swift_bridgeObjectRetain();
  sub_24F7933C8();
}

void sub_24F8316D0(Swift::String *a1)
{
}

uint64_t sub_24F8316DC()
{
  return MEMORY[0x263F8D388];
}

void *sub_24F8316EC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t HasOneThroughAssociation._sqlAssociation.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t HasOneThroughAssociation._sqlAssociation.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = v2;
  return result;
}

uint64_t (*HasOneThroughAssociation._sqlAssociation.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_24F831750(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F83178C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void (*sub_24F8317D0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = HasOneThroughAssociation._sqlAssociation.modify();
  return sub_24F79A608;
}

uint64_t sub_24F831828(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_24F831864(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for HasOneThroughAssociation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F8318B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7, a1, a6);
  uint64_t result = type metadata accessor for ValueReducers.Trace();
  uint64_t v13 = (void *)(a7 + *(int *)(result + 36));
  *uint64_t v13 = a2;
  v13[1] = a3;
  uint64_t v14 = (void *)(a7 + *(int *)(result + 40));
  *uint64_t v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t ValueReducers.Trace._fetch(_:)(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(v2 + *(int *)(a2 + 36)))();
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(a2 + 24) + 8) + 24))(a1, *(void *)(a2 + 16));
}

uint64_t ValueReducers.Trace._value(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(*(void *)(a2 + 24) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_24F8CF610();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, v7, v8);
  if (sub_24F777048((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v14 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, v13, AssociatedTypeWitness);
    (*(void (**)(uint64_t))(v3 + *(int *)(a2 + 40)))(a3);
    uint64_t v14 = 0;
  }
  return sub_24F7771BC(a3, v14, 1, AssociatedTypeWitness);
}

uint64_t sub_24F831B90(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F831BCC(uint64_t a1, uint64_t a2)
{
  return ValueReducers.Trace._fetch(_:)(a1, a2);
}

uint64_t sub_24F831BE8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24F831C88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_24F831DA8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_release();
  return swift_release();
}

uint64_t sub_24F831E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24F831EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24F831F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24F832008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *int v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_24F8320A8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24F8321ECLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return sub_24F777048((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_24F832200(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x24F8323E0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          void *v17 = v18;
        }
        else
        {
          sub_24F7771BC((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ValueReducers.Trace()
{
  return sub_24F777DE0();
}

uint64_t sub_24F832420()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_24F832504()
{
}

void sub_24F83258C()
{
  sub_24F76B80C();
  uint64_t v2 = v1;
  uint64_t v40 = *v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F770DF4();
  uint64_t v37 = v4;
  MEMORY[0x270FA5388](v5);
  uint64_t v39 = (char *)&v36 - v6;
  uint64_t v7 = (void *)sub_24F839750(0, &qword_269A2B8B8);
  sub_24F780CF4();
  type metadata accessor for ValueWriteOnlyObserver.NotificationCallbacks();
  sub_24F8CF610();
  sub_24F780CF4();
  type metadata accessor for ValueWriteOnlyObserver.DatabaseAccess();
  sub_24F8CF610();
  sub_24F77B5F8();
  sub_24F77C0BC((uint64_t)sub_24F8341A0, v8, (void (*)(id))sub_24F8398CC);
  if (v64)
  {
    uint64_t v38 = AssociatedTypeWitness;
    uint64_t v9 = v2;
    uint64_t v51 = v55[1];
    uint64_t v52 = v55[0];
    uint64_t v10 = v58;
    uint64_t v54 = v60;
    uint64_t v11 = v63;
    uint64_t v12 = v66;
    uint64_t v45 = v57;
    if (v66)
    {
      uint64_t v13 = v67;
      uint64_t v14 = v68;
      uint64_t v49 = v65;
      uint64_t v48 = v64;
      uint64_t v44 = v62;
      uint64_t v46 = v56;
      uint64_t v53 = v58;
      uint64_t v47 = v59;
      uint64_t v50 = v61;
      sub_24F8398E8(v52, v51, v56, v57, v58, v59, (uint64_t)v54, v61, v62, v63, (uint64_t)v64);
      uint64_t v43 = v13;
      sub_24F8399B0(v12);
      uint64_t v42 = v14;
      swift_release();
      int v15 = (void *)v0[2];
      uint64_t v16 = v15[5];
      uint64_t v17 = v15[6];
      sub_24F7811D0(v15 + 2, v16);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17))
      {
        uint64_t v18 = v39;
        sub_24F83424C();
        int v19 = v9;
        if (v7)
        {
          if (v54) {
            v54(v7);
          }
          uint64_t v20 = type metadata accessor for AnyDatabaseCancellable();
          swift_allocObject();
          uint64_t v21 = AnyDatabaseCancellable.init(cancel:)((uint64_t)nullsub_1, 0);
          v9[3] = v20;
          v9[4] = (uint64_t)&protocol witness table for AnyDatabaseCancellable;

          goto LABEL_11;
        }
        v48(v18);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v38);
      }
      else
      {
        sub_24F834340();
        int v19 = v9;
      }
      uint64_t v22 = type metadata accessor for AnyDatabaseCancellable();
      v55[0] = v0;
      swift_retain();
      uint64_t v21 = sub_24F83BFA8((uint64_t)v55, v22, v40, (uint64_t)&off_270103348);
      _OWORD v19[3] = v22;
      v19[4] = (uint64_t)&protocol witness table for AnyDatabaseCancellable;
LABEL_11:
      uint64_t v23 = v53;
      uint64_t v41 = v12;
      swift_unknownObjectRelease();
      *int v19 = v21;
      uint64_t v25 = v51;
      uint64_t v24 = v52;
      sub_24F787238(v52);
      uint64_t v26 = v46;
      uint64_t v27 = v45;
      sub_24F787238(v46);
      uint64_t v28 = v47;
      sub_24F787238(v23);
      uint64_t v29 = v54;
      uint64_t v30 = v50;
      sub_24F787238((uint64_t)v54);
      uint64_t v31 = v44;
      sub_24F787238(v44);
      swift_release();
      sub_24F83968C(v41);
      sub_24F8390EC(v24, v25, v26, v27, v53, v28, (uint64_t)v29, v30, v31, v11, (uint64_t)v48);
      sub_24F77344C();
      return;
    }
    uint64_t v32 = v62;
    uint64_t v33 = v52;
    uint64_t v34 = v56;
    sub_24F78C440(v52);
    sub_24F78C440(v34);
    sub_24F78C440(v10);
    uint64_t v35 = v54;
    sub_24F78C440((uint64_t)v54);
    sub_24F78C440(v32);
    swift_retain();
    sub_24F787238(v33);
    sub_24F787238(v34);
    sub_24F787238(v10);
    sub_24F787238((uint64_t)v35);
    sub_24F787238(v32);
    swift_release();
  }
  sub_24F8CF9D0();
  __break(1u);
}

id sub_24F832B4C(uint64_t a1, uint64_t a2, void (*a3)(id))
{
  return sub_24F832B64(a1, a2, a3);
}

id sub_24F832B64(uint64_t a1, uint64_t a2, void (*a3)(id))
{
  a3(objc_msgSend(v3, sel_lock));
  return objc_msgSend(v3, sel_unlock);
}

void sub_24F832BDC()
{
  sub_24F775CC8();
  objc_msgSend(v2, sel_lock);
  sub_24F773714();
  v3();
  sub_24F7855CC();
  if (v0)
  {
    sub_24F839C38(v4);
  }
  else
  {
    id v5 = sub_24F839C38(v4);
    sub_24F781594((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
    *(void *)(v1 + 80) = v18;
  }
}

uint64_t sub_24F832C54()
{
  sub_24F839C50();
  objc_msgSend(v1, sel_lock);
  sub_24F773714();
  v2();
  sub_24F7855CC();
  sub_24F7858F0(v3);
  if (!v0) {
    char v4 = v6;
  }
  return v4 & 1;
}

void sub_24F832CC0()
{
  sub_24F775CC8();
  objc_msgSend(v1, sel_lock);
  sub_24F773714();
  v2();
  sub_24F7855CC();
  if (v0)
  {
    sub_24F839C38(v3);
  }
  else
  {
    id v4 = sub_24F839C38(v3);
    sub_24F781594((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  }
}

id sub_24F832D30()
{
  sub_24F839C50();
  objc_msgSend(v1, sel_lock);
  sub_24F773714();
  v2();
  sub_24F7855CC();
  if (v0) {
    return sub_24F7858F0(v3);
  }
  sub_24F7858F0(v3);
  return (id)v5;
}

void sub_24F832D98()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v110 = v2;
  uint64_t v98 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v108 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  __n128 v16 = *(void **)v1;
  sub_24F8CF520();
  sub_24F770DF4();
  uint64_t v104 = v18;
  uint64_t v105 = v17;
  MEMORY[0x270FA5388](v17);
  sub_24F77BBBC();
  uint64_t v103 = v19;
  uint64_t v101 = sub_24F8CF4D0();
  sub_24F773974();
  MEMORY[0x270FA5388](v20);
  sub_24F77BBBC();
  uint64_t v102 = v21;
  uint64_t v22 = sub_24F781274(&qword_26B1F75E8);
  MEMORY[0x270FA5388](v22 - 8);
  sub_24F77BBBC();
  uint64_t v88 = v23;
  uint64_t v99 = sub_24F8CEC00();
  sub_24F770DF4();
  uint64_t v70 = v24;
  MEMORY[0x270FA5388](v25);
  sub_24F77BBBC();
  uint64_t v100 = v26;
  uint64_t v87 = type metadata accessor for Configuration();
  sub_24F773974();
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v89 = (uint64_t)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  long long v86 = (char *)&v69 - v31;
  MEMORY[0x270FA5388](v30);
  __int16 v83 = (char *)&v69 - v32;
  *(void *)(v1 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(void *)(v1 + 168) = 0;
  uint64_t v82 = v16[10];
  uint64_t v33 = v82;
  uint64_t v109 = v16[11];
  uint64_t v34 = v109;
  uint64_t v85 = v16[12];
  uint64_t v35 = v85;
  uint64_t v36 = v16[13];
  *(void *)(v1 + 176) = 1;
  *(unsigned char *)(v1 + 184) = 0;
  *(void *)(v1 + 16) = v13;
  *(unsigned char *)(v1 + 24) = v11;
  *(void *)(v1 + 32) = v9;
  uint64_t v37 = sub_24F8335BC(v7, v33, v34, v35, v36);
  uint64_t v38 = *(void *)(v1 + 56);
  uint64_t v81 = v15;
  *(void *)(v1 + 56) = v15;
  *(void *)(v1 + 64) = v37;
  *(void *)(v1 + 72) = v39;
  uint64_t v106 = v13;
  swift_retain();
  swift_unknownObjectRetain();
  sub_24F83968C(v38);
  uint64_t v40 = v5;
  uint64_t v41 = *v5;
  uint64_t v42 = v5[1];
  uint64_t v43 = v5[2];
  uint64_t v44 = v5[3];
  uint64_t v46 = v40[4];
  uint64_t v45 = v40[5];
  uint64_t v47 = v40[6];
  uint64_t v48 = v40[7];
  uint64_t v50 = v40[9];
  uint64_t v107 = v40[8];
  uint64_t v49 = v107;
  uint64_t v84 = *(void *)(v1 + 80);
  uint64_t v80 = *(void *)(v1 + 88);
  uint64_t v79 = *(void *)(v1 + 96);
  uint64_t v78 = *(void *)(v1 + 104);
  uint64_t v77 = *(void *)(v1 + 112);
  uint64_t v76 = *(void *)(v1 + 120);
  uint64_t v75 = *(void *)(v1 + 128);
  uint64_t v74 = *(void *)(v1 + 136);
  long long v73 = *(_OWORD *)(v1 + 144);
  uint64_t v72 = *(void *)(v1 + 160);
  uint64_t v71 = *(void *)(v1 + 168);
  *(void *)(v1 + 80) = v41;
  *(void *)(v1 + 88) = v42;
  *(void *)(v1 + 96) = v43;
  *(void *)(v1 + 104) = v44;
  *(void *)(v1 + 112) = v46;
  *(void *)(v1 + 120) = v45;
  *(void *)(v1 + 128) = v47;
  *(void *)(v1 + 136) = v48;
  *(void *)(v1 + 144) = v49;
  *(void *)(v1 + 152) = v50;
  uint64_t v51 = v110;
  *(void *)(v1 + 160) = v98;
  *(void *)(v1 + 168) = v51;
  swift_retain();
  uint64_t v91 = v41;
  uint64_t v90 = v42;
  sub_24F78C440(v41);
  uint64_t v92 = v44;
  uint64_t v93 = v43;
  sub_24F78C440(v43);
  uint64_t v94 = v45;
  uint64_t v95 = v46;
  sub_24F78C440(v46);
  uint64_t v96 = v48;
  uint64_t v97 = v47;
  sub_24F78C440(v47);
  uint64_t v98 = v50;
  sub_24F78C440(v107);
  sub_24F8390EC(v84, v80, v79, v78, v77, v76, v75, v74, v73, *((uint64_t *)&v73 + 1), v72);
  uint64_t v52 = *(void *)(v109 - 8);
  (*(void (**)(uint64_t, uint64_t))(v52 + 16))(v1 + *(void *)(*(void *)v1 + 176), v108);
  uint64_t v53 = *(void (**)(uint64_t))(*(void *)(v85 + 8) + 8);
  uint64_t v54 = (uint64_t)v83;
  uint64_t v55 = sub_24F77770C();
  v53(v55);
  uint64_t v56 = *(void *)(v54 + 8);
  if (*(void *)(v54 + 16))
  {
    unint64_t v57 = *(void *)(v54 + 16);
  }
  else
  {
    uint64_t v56 = 1111773767;
    unint64_t v57 = 0xE400000000000000;
  }
  uint64_t v111 = v56;
  uint64_t v112 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  uint64_t v58 = (uint64_t)v86;
  swift_bridgeObjectRelease();
  uint64_t v85 = v111;
  uint64_t v84 = v112;
  sub_24F7EECCC(v54);
  uint64_t v59 = sub_24F77770C();
  v53(v59);
  uint64_t v60 = v87;
  if (*(void *)(v58 + *(int *)(v87 + 68)))
  {
    uint64_t v61 = v88;
    sub_24F8CF530();
    uint64_t v62 = 0;
    uint64_t v63 = v61;
  }
  else
  {
    uint64_t v63 = v88;
    uint64_t v62 = 1;
  }
  uint64_t v64 = v99;
  sub_24F7771BC(v63, v62, 1, v99);
  uint64_t v65 = v89;
  sub_24F7EEC68(v58, v89);
  int v66 = sub_24F777048(v63, 1, v64);
  uint64_t v67 = v100;
  if (v66 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v100, v65 + *(int *)(v60 + 64), v64);
    sub_24F7EECCC(v65);
    sub_24F7EED28(v63);
  }
  else
  {
    sub_24F7EECCC(v65);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v67, v63, v64);
  }
  sub_24F839750(0, (unint64_t *)&qword_26B1F7EC0);
  sub_24F7EECCC(v58);
  uint64_t v111 = MEMORY[0x263F8EE78];
  sub_24F83978C((unint64_t *)&qword_26B1F7F60, MEMORY[0x263F8F0F8]);
  sub_24F781274(&qword_26B1F7F40);
  sub_24F7D9F58((unint64_t *)&qword_26B1F7EB8, &qword_26B1F7F40);
  sub_24F8CF6D0();
  (*(void (**)(uint64_t, void, uint64_t))(v104 + 104))(v103, *MEMORY[0x263F8F130], v105);
  uint64_t v68 = sub_24F8CF580();
  swift_release();
  sub_24F787238(v91);
  sub_24F787238(v93);
  sub_24F787238(v95);
  sub_24F787238(v97);
  sub_24F787238(v107);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v108, v109);
  *(void *)(v1 + 48) = v68;
  sub_24F77344C();
}

uint64_t (*sub_24F8335BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](a1);
  char v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a2;
  *((void *)v13 + 3) = a3;
  *((void *)v13 + 4) = a4;
  *((void *)v13 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, a3);
  return sub_24F839858;
}

uint64_t sub_24F8336EC()
{
  swift_release();
  sub_24F7DD35C(*(void *)(v0 + 32));

  sub_24F83968C(*(void *)(v0 + 56));
  sub_24F8390EC(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160));
  sub_24F838834(*(void *)(v0 + 176));
  sub_24F773974();
  (*(void (**)(void))(v1 + 8))();
  return v0;
}

uint64_t sub_24F8337C0()
{
  sub_24F8336EC();
  sub_24F773850();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return MEMORY[0x270FA0228](v0, v2, v3);
}

uint64_t type metadata accessor for ValueWriteOnlyObserver()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F833814(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F833828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  if (*(void *)a2 != 1) {
    uint64_t v4 = swift_bridgeObjectRetain();
  }
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_24F83386C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  if (v4 == 1)
  {
    if (v5 != 1)
    {
      *(void *)a1 = v5;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
    uint64_t v6 = 1;
  }
  else
  {
    if (v5 != 1)
    {
      *(void *)a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    sub_24F8338FC(a1);
    uint64_t v6 = *(void *)a2;
  }
  *(void *)a1 = v6;
LABEL_9:
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_24F8338FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F833950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  if (*(void *)a1 != 1)
  {
    if (v4 != 1)
    {
      *(void *)a1 = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24F8338FC(a1);
    uint64_t v4 = 1;
  }
  *(void *)a1 = v4;
LABEL_6:
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_24F8339BC(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *((unsigned char *)a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v4 = v3 - 1;
      if (v4 < 0) {
        int v4 = -1;
      }
      BOOL v5 = __OFSUB__(v4, 1);
      int v2 = v4 - 1;
      if (v2 < 0 != v5) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F833A18(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t type metadata accessor for ValueWriteOnlyObserver.ObservationState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F833A80(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  if (a1[4]) {
    swift_release();
  }
  if (a1[6]) {
    swift_release();
  }
  if (a1[8]) {
    swift_release();
  }
  return swift_release();
}

void *sub_24F833B04(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  uint64_t v9 = a2[6];
  if (v9)
  {
    uint64_t v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  uint64_t v11 = a2[8];
  if (v11)
  {
    uint64_t v12 = a2[9];
    a1[8] = v11;
    a1[9] = v12;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  }
  uint64_t v13 = a2[11];
  a1[10] = a2[10];
  a1[11] = v13;
  swift_retain();
  return a1;
}

void *sub_24F833BF8(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (!a1[8])
  {
    if (v16)
    {
      uint64_t v18 = a2[9];
      a1[8] = v16;
      a1[9] = v18;
      swift_retain();
      goto LABEL_36;
    }
LABEL_35:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    goto LABEL_36;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_35;
  }
  uint64_t v17 = a2[9];
  a1[8] = v16;
  a1[9] = v17;
  swift_retain();
  swift_release();
LABEL_36:
  uint64_t v19 = a2[11];
  a1[10] = a2[10];
  a1[11] = v19;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_24F833DF0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t sub_24F833DF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v15;
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (!*(void *)(a1 + 64))
  {
    if (v16)
    {
      uint64_t v18 = a2[9];
      *(void *)(a1 + 64) = v16;
      *(void *)(a1 + 72) = v18;
      goto LABEL_36;
    }
LABEL_35:
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    goto LABEL_36;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_35;
  }
  uint64_t v17 = a2[9];
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v17;
  swift_release();
LABEL_36:
  *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
  swift_release();
  return a1;
}

uint64_t sub_24F833FAC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 80);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F833FEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ValueWriteOnlyObserver.NotificationCallbacks()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F834060()
{
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_24F83409C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *sub_24F8340E0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24F834140(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ValueWriteOnlyObserver.DatabaseAccess()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F8341A0()
{
  return 0x29287472617473;
}

uint64_t sub_24F8341B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  uint64_t v4 = a1[13];
  uint64_t v5 = a1[14];
  uint64_t v6 = a1[15];
  uint64_t v7 = a1[16];
  uint64_t v8 = a1[17];
  uint64_t v9 = a1[18];
  uint64_t v10 = a1[19];
  uint64_t v11 = a1[20];
  uint64_t v12 = a1[21];
  uint64_t v14 = a1[9];
  uint64_t v13 = a1[10];
  *a2 = v13;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  a2[4] = v5;
  a2[5] = v6;
  a2[6] = v7;
  a2[7] = v8;
  a2[8] = v9;
  a2[9] = v10;
  a2[10] = v11;
  a2[11] = v12;
  uint64_t v15 = a1[7];
  uint64_t v16 = a1[8];
  a2[12] = v15;
  a2[13] = v16;
  a2[14] = v14;
  sub_24F8398E8(v13, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  return sub_24F8399B0(v15);
}

uint64_t sub_24F83424C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v2(sub_24F8399F0, v0, AssociatedTypeWitness, v3, v1);
}

uint64_t sub_24F834340()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  swift_retain();
  v2(sub_24F839A74, v0, v3, v1);
  return swift_release();
}

uint64_t sub_24F8343F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v5 = *(void *)(*(void *)a2 + 88);
  uint64_t v19 = *(void *)(*(void *)(*(void *)a2 + 104) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24F8CF610();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v17 - v9;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t result = sub_24F8346D8(a1, (uint64_t)v10);
  if (!v3)
  {
    v17[0] = v7;
    v17[1] = v5;
    uint64_t v15 = v18;
    if (sub_24F777048((uint64_t)v10, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, void))(v15 + 8))(v10, v17[0]);
      uint64_t result = sub_24F8CF9D0();
      __break(1u);
    }
    else
    {
      uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, AssociatedTypeWitness);
      MEMORY[0x270FA5388](v16);
      swift_getAssociatedTypeWitness();
      sub_24F8CF560();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_24F8346D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v91 = a1;
  uint64_t v89 = a2;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 104);
  uint64_t v7 = *(void *)(*v2 + 88);
  uint64_t AssociatedTypeWitness = (uint64_t (*)(uint64_t))swift_getAssociatedTypeWitness();
  uint64_t v79 = *((void *)AssociatedTypeWitness - 1);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v82 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v81 = (uint64_t *)((char *)&v74 - v11);
  sub_24F839750(0, &qword_269A2B8B8);
  sub_24F7688B8(&qword_269A2B8C0);
  type metadata accessor for Database();
  uint64_t v92 = AssociatedTypeWitness;
  swift_getFunctionTypeMetadata1();
  sub_24F8CF610();
  swift_getTupleTypeMetadata2();
  sub_24F832B64((uint64_t)sub_24F836584, 0, (void (*)(id))sub_24F839A28);
  uint64_t v88 = (void (*)(uint64_t *))v95[2];
  uint64_t v90 = v99;
  uint64_t v12 = v100;
  uint64_t v13 = v102;
  if (!v102)
  {
    if (v95[0] != 1)
    {
      uint64_t v28 = v98;
      uint64_t v29 = v96;
      sub_24F787238(v95[0]);
      sub_24F787238((uint64_t)v88);
      sub_24F787238(v29);
      sub_24F787238(v28);
      uint64_t v27 = v12;
      goto LABEL_10;
    }
    uint64_t v18 = 0;
LABEL_8:
    uint64_t v27 = (uint64_t)v18;
LABEL_10:
    sub_24F787238(v27);
    uint64_t v30 = v92;
    uint64_t v31 = v89;
    uint64_t v32 = 1;
    return sub_24F7771BC(v31, v32, 1, (uint64_t)v30);
  }
  uint64_t v83 = v97;
  uint64_t v77 = v95[1];
  uint64_t v78 = v95[3];
  uint64_t v80 = v96;
  uint64_t v84 = v98;
  uint64_t v86 = v100;
  uint64_t v87 = v101;
  uint64_t v14 = v103;
  uint64_t v85 = v95[0];
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = v15;
  uint64_t v17 = v85;
  void v15[2] = *(void *)(v5 + 80);
  v15[3] = v7;
  long long v15[4] = *(void *)(v5 + 96);
  v15[5] = v6;
  v15[6] = v13;
  void v15[7] = v14;
  uint64_t v18 = sub_24F839C1C;
  if (v17 == 1) {
    goto LABEL_8;
  }
  if ((unint64_t)v4[4] < 2)
  {
    uint64_t v19 = v17;
    uint64_t v20 = v77;
    uint64_t v21 = v88;
    uint64_t v22 = v78;
    uint64_t v23 = v80;
    sub_24F838760(v19, v77, (uint64_t)v88, v78, v80, v83, v84, v90, v86, v87, (void (*)(void))sub_24F839BCC, (void (*)(uint64_t, uint64_t))sub_24F78C440, (void (*)(uint64_t, uint64_t))sub_24F839BCC);
    sub_24F78C440((uint64_t)sub_24F839C1C);
    sub_24F776A80();
    uint64_t v24 = sub_24F8CEC70();
    uint64_t v81 = &v74;
    v95[0] = v24;
    MEMORY[0x270FA5388](v24);
    uint64_t v70 = v91;
    uint64_t v71 = v4;
    uint64_t v72 = sub_24F839C1C;
    long long v73 = v16;
    sub_24F8A2FCC(v95, (void (*)(void))sub_24F83872C);
    if (v3)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v85;
      sub_24F838760(v85, v20, (uint64_t)v21, v22, v23, v83, v84, v90, v86, v87, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
      sub_24F787238((uint64_t)sub_24F839C1C);
      sub_24F787238((uint64_t)sub_24F839C1C);
      sub_24F787238(v25);
      sub_24F787238((uint64_t)v21);
      sub_24F787238(v23);
      sub_24F787238(v84);
      return sub_24F787238(v86);
    }
    uint64_t v38 = v21;
    if (v95[0])
    {
      uint64_t v39 = swift_bridgeObjectRetain();
      uint64_t v40 = sub_24F83889C(v39);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = 0;
    }
    uint64_t v51 = v91;
    uint64_t v94 = v40;
    sub_24F80D5A0(&v104);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v104;
    uint64_t v53 = v78;
    if (v38) {
      v38(&v104);
    }
    uint64_t v104 = v52;
    sub_24F83676C(v51, &v104);
    uint64_t v54 = v85;
    uint64_t v91 = v52;
    uint64_t v55 = v53;
    uint64_t v56 = v80;
    uint64_t v57 = v84;
    sub_24F838760(v85, v77, (uint64_t)v38, v55, v80, v83, v84, v90, v86, v87, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
    sub_24F787238((uint64_t)sub_24F839C1C);
    sub_24F787238((uint64_t)sub_24F839C1C);
    sub_24F787238(v54);
    sub_24F787238((uint64_t)v38);
    sub_24F787238(v56);
    sub_24F787238(v57);
    sub_24F787238(v86);
    swift_bridgeObjectRelease();
    uint64_t v58 = *(void (**)(uint64_t, void, uint64_t (*)(uint64_t)))(v79 + 32);
    uint64_t v59 = v89;
    uint64_t v60 = v89;
    uint64_t v61 = &v106;
    goto LABEL_30;
  }
  unint64_t v75 = v4[4];
  uint64_t v82 = (char *)&v74;
  int v76 = *((unsigned __int8 *)v4 + 24);
  MEMORY[0x270FA5388](v15);
  *(&v74 - 8) = v33;
  *(&v74 - 7) = v7;
  uint64_t v34 = v77;
  uint64_t v35 = v78;
  sub_24F838760(v17, v77, (uint64_t)v88, v78, v80, v83, v84, v90, v86, v87, (void (*)(void))sub_24F839BCC, (void (*)(uint64_t, uint64_t))sub_24F78C440, (void (*)(uint64_t, uint64_t))sub_24F839BCC);
  sub_24F78C440((uint64_t)sub_24F839C1C);
  sub_24F7715C0(v76, (uint64_t)sub_24F8389C0, (uint64_t)(&v74 - 10), (uint64_t)v92, (uint64_t)v81);
  if (!v3)
  {
    sub_24F776A80();
    unint64_t v41 = v75;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_24F8CEC70();
    uint64_t v43 = *(void *)(v41 + 16);
    if (v43)
    {
      uint64_t v44 = (void *)(v41 + 32);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v45 = v44[3];
        uint64_t v46 = v44[4];
        sub_24F7811D0(v44, v45);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v46 + 8))(v95, v91, v45, v46);
        uint64_t v93 = v95[0];
        uint64_t v94 = v42;
        DatabaseRegion.union(_:)(&v93, &v104);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = v104;
        v44 += 5;
        --v43;
      }
      while (v43);
      unint64_t v41 = v75;
      sub_24F7DD35C(v75);
    }
    uint64_t v47 = v87;
    uint64_t v48 = v91;
    sub_24F7DD35C(v41);
    if (v42)
    {
      uint64_t v49 = swift_bridgeObjectRetain();
      uint64_t v50 = sub_24F83889C(v49);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v50 = 0;
    }
    uint64_t v104 = v50;
    sub_24F80D5A0(v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v62 = v95[0];
    uint64_t v63 = v78;
    uint64_t v64 = v88;
    if (v88) {
      v88(v95);
    }
    v95[0] = v62;
    sub_24F83676C(v48, v95);
    uint64_t v69 = v47;
    uint64_t v65 = v63;
    uint64_t v66 = v85;
    uint64_t v91 = v62;
    uint64_t v67 = v80;
    sub_24F838760(v85, v77, (uint64_t)v64, v65, v80, v83, v84, v90, v86, v69, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
    sub_24F787238((uint64_t)sub_24F839C1C);
    sub_24F787238((uint64_t)sub_24F839C1C);
    sub_24F787238(v66);
    sub_24F787238((uint64_t)v64);
    sub_24F787238(v67);
    sub_24F787238(v84);
    sub_24F787238(v86);
    swift_bridgeObjectRelease();
    uint64_t v58 = *(void (**)(uint64_t, void, uint64_t (*)(uint64_t)))(v79 + 32);
    uint64_t v59 = v89;
    uint64_t v60 = v89;
    uint64_t v61 = &v105;
LABEL_30:
    uint64_t v68 = v92;
    v58(v60, *(v61 - 32), v92);
    uint64_t v31 = v59;
    uint64_t v32 = 0;
    uint64_t v30 = v68;
    return sub_24F7771BC(v31, v32, 1, (uint64_t)v30);
  }
  uint64_t v36 = v88;
  uint64_t v37 = v80;
  sub_24F838760(v17, v34, (uint64_t)v88, v35, v80, v83, v84, v90, v86, v87, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
  uint64_t v92 = sub_24F839C1C;
  sub_24F787238((uint64_t)sub_24F839C1C);
  sub_24F787238(v17);
  sub_24F787238((uint64_t)v36);
  sub_24F787238(v37);
  sub_24F787238(v84);
  sub_24F787238(v86);
  return sub_24F787238((uint64_t)v92);
}

uint64_t sub_24F835748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)a1 + 104) + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24F8CF610();
  uint64_t v12 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v12 - v9;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, v6, v5);
  swift_endAccess();
  if (sub_24F777048((uint64_t)v10, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, v10, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v8);
  uint64_t result = sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F835984(uint64_t a1, uint64_t *a2)
{
  uint64_t v42 = *a2;
  uint64_t v4 = v42;
  uint64_t v5 = sub_24F8CEBD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24F8CEC00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  uint64_t v47 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(void *)(v4 + 104);
  uint64_t v11 = *(void *)(v4 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24F8CF610();
  uint64_t v48 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v49 = AssociatedTypeWitness;
  uint64_t v17 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v18 = v17[8];
  uint64_t v19 = MEMORY[0x270FA5388](v14);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v37 - v20;
  sub_24F8346D8(a1, (uint64_t)v16);
  uint64_t v22 = v48;
  uint64_t v39 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_24F777048((uint64_t)v16, 1, v49) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v16, v13);
  }
  uint64_t v24 = v17;
  uint64_t v25 = (void (*)(char *, char *, uint64_t))v17[4];
  uint64_t v38 = v21;
  uint64_t v26 = v49;
  v25(v21, v16, v49);
  uint64_t v48 = a2[6];
  uint64_t v27 = (void (*)(char *, char *, uint64_t))v17[2];
  uint64_t v28 = v39;
  v27(v39, v21, v26);
  unint64_t v29 = (*((unsigned __int8 *)v24 + 80) + 56) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
  uint64_t v30 = (char *)swift_allocObject();
  uint64_t v31 = v42;
  *((void *)v30 + 2) = *(void *)(v42 + 80);
  *((void *)v30 + 3) = v11;
  uint64_t v32 = v41;
  *((void *)v30 + 4) = *(void *)(v31 + 96);
  *((void *)v30 + 5) = v32;
  *((void *)v30 + 6) = a2;
  v25(&v30[v29], v28, v26);
  aBlock[4] = sub_24F839A88;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24F8363BC;
  aBlock[3] = &unk_270108438;
  uint64_t v33 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v34 = v40;
  sub_24F8CEBE0();
  uint64_t v50 = MEMORY[0x263F8EE78];
  sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
  sub_24F781274(&qword_26B1F7960);
  sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
  uint64_t v35 = v43;
  uint64_t v36 = v44;
  sub_24F8CF6D0();
  MEMORY[0x253363DC0](0, v34, v35, v33);
  _Block_release(v33);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v46);
  ((void (*)(char *, uint64_t))v24[1])(v38, v26);
  return swift_release();
}

uint64_t sub_24F835ED8(void *a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v32 = (void *)*a1;
  uint64_t v31 = v32[13];
  uint64_t v3 = *(void *)(v31 + 8);
  uint64_t v33 = v32[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_24F8CF610();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v6);
  uint64_t v12 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t result = sub_24F832C54();
  if (result)
  {
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v30, v33, v3);
    swift_endAccess();
    if (sub_24F777048((uint64_t)v8, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
      uint64_t result = sub_24F8CF9D0();
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      uint64_t v27 = v14;
      v16(v14, v8, AssociatedTypeWitness);
      uint64_t v17 = (void *)a1[2];
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, AssociatedTypeWitness);
      unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v19 = (char *)swift_allocObject();
      uint64_t v20 = v32;
      uint64_t v21 = v33;
      *((void *)v19 + 2) = v32[10];
      *((void *)v19 + 3) = v21;
      uint64_t v22 = v31;
      *((void *)v19 + 4) = v20[12];
      *((void *)v19 + 5) = v22;
      *((void *)v19 + 6) = a1;
      v16(&v19[v18], v12, AssociatedTypeWitness);
      uint64_t v23 = v17[5];
      uint64_t v24 = v17[6];
      sub_24F7811D0(v17 + 2, v23);
      uint64_t v25 = *(void (**)(id (*)(), char *, uint64_t, uint64_t))(v24 + 8);
      swift_retain();
      v25(sub_24F839B20, v19, v23, v24);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v27, AssociatedTypeWitness);
    }
  }
  return result;
}

unint64_t sub_24F8362D8()
{
  return 0xD000000000000011;
}

uint64_t *sub_24F8362F4@<X0>(uint64_t *result@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = result[20];
  if (v3)
  {
    uint64_t v4 = *result;
    uint64_t v5 = result[21];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = *(void *)(v4 + 80);
    *(_OWORD *)(v6 + 24) = *(_OWORD *)(v4 + 88);
    *(void *)(v6 + 40) = *(void *)(v4 + 104);
    *(void *)(v6 + 48) = v3;
    *(void *)(v6 + 56) = v5;
    uint64_t result = (uint64_t *)swift_retain();
    uint64_t v7 = sub_24F839C34;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return result;
}

uint64_t sub_24F8363BC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_24F836400()
{
  sub_24F7A18CC();
  uint64_t v1 = *(void *)(v0 + 176);
  *(void *)(v0 + 176) = 1;
  *(unsigned char *)(v0 + 184) = 0;
  sub_24F838834(v1);
  return sub_24F832B64((uint64_t)sub_24F838694, 0, (void (*)(id))sub_24F839670);
}

uint64_t sub_24F8364BC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = v3 + 2;
  uint64_t v6 = v3[5];
  uint64_t v7 = v3[6];
  sub_24F7811D0(v5, v6);
  uint64_t v8 = *(void (**)(uint64_t *(*)(), uint64_t, uint64_t, uint64_t))(v7 + 8);
  swift_retain();
  id v9 = a1;
  v8(sub_24F838FD8, v4, v6, v7);
  return swift_release();
}

unint64_t sub_24F836584()
{
  return 0xD00000000000001CLL;
}

void *sub_24F8365A0@<X0>(void *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = result;
  uint64_t v28 = *result;
  if (result[20])
  {
    uint64_t v4 = result[10];
    uint64_t v6 = result[12];
    uint64_t v5 = result[13];
    uint64_t v7 = result[14];
    uint64_t v8 = result[15];
    uint64_t v9 = result[16];
    uint64_t v10 = result[18];
    uint64_t v25 = result[17];
    uint64_t v26 = result[19];
    uint64_t v30 = result[11];
    sub_24F78C440(v4);
    sub_24F78C440(v6);
    sub_24F78C440(v7);
    uint64_t v31 = v9;
    uint64_t v11 = v9;
    uint64_t v12 = v25;
    sub_24F78C440(v11);
    uint64_t v29 = v10;
    uint64_t v13 = v10;
    uint64_t v14 = v26;
    uint64_t result = (void *)sub_24F78C440(v13);
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v12 = 0;
    uint64_t v29 = 0;
    uint64_t v14 = 0;
    uint64_t v4 = 1;
  }
  if (v2[7])
  {
    uint64_t v27 = v8;
    uint64_t v15 = v7;
    uint64_t v16 = v4;
    uint64_t v17 = v5;
    uint64_t v18 = v6;
    uint64_t v19 = v14;
    uint64_t v20 = v12;
    uint64_t v22 = v2[8];
    uint64_t v21 = v2[9];
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = *(void *)(v28 + 80);
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v28 + 88);
    *(void *)(v23 + 40) = *(void *)(v28 + 104);
    *(void *)(v23 + 48) = v22;
    uint64_t v12 = v20;
    uint64_t v14 = v19;
    uint64_t v6 = v18;
    uint64_t v5 = v17;
    uint64_t v4 = v16;
    uint64_t v7 = v15;
    uint64_t v8 = v27;
    *(void *)(v23 + 56) = v21;
    uint64_t result = (void *)swift_retain();
    uint64_t v24 = sub_24F839BE8;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v23 = 0;
  }
  *a2 = v4;
  a2[1] = v30;
  a2[2] = v6;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = v8;
  a2[6] = v31;
  a2[7] = v12;
  a2[8] = v29;
  a2[9] = v14;
  a2[10] = (uint64_t)v24;
  a2[11] = v23;
  return result;
}

uint64_t sub_24F83676C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[22];
  v2[22] = *a2;
  uint64_t v6 = v4;
  swift_bridgeObjectRetain();
  sub_24F838834(v5);
  unsigned __int8 v8 = 0;
  return sub_24F7A1D18((uint64_t)v2, &v8, a1, v6, (uint64_t)&off_270103318);
}

BOOL sub_24F8367FC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v5 = *(void *)(v4 + 176);
  if (v5 == 1)
  {
    return 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    BOOL v6 = DatabaseRegion.isModified(byEventsOfKind:)(a1, a2, a3, a4);
    sub_24F838834(v5);
  }
  return v6;
}

void sub_24F836888()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  sub_24F773850();
  uint64_t v3 = *(void *)(v0 + 176);
  if (!v3) {
    goto LABEL_9;
  }
  if (v3 == 1)
  {
LABEL_3:
    sub_24F77344C();
    return;
  }
  uint64_t v4 = v2;
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_24F7811D0(v2, v5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  uint64_t v8 = v7(v5, v6);
  uint64_t v10 = v9;
  uint64_t v11 = sub_24F8CED00();
  uint64_t v13 = sub_24F80BA40(v11, v12, v8, v10, v3);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13 == 1) {
    goto LABEL_9;
  }
  if (!v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    sub_24F838834(v3);
    goto LABEL_10;
  }
  sub_24F80E278(v4[6], v15);
  char v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F838834(v3);
  if ((v17 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_10:
  *(unsigned char *)(v1 + 184) = 1;
  sub_24F77344C();
  TransactionObserver.stopObservingDatabaseChangesUntilNextTransaction()();
}

void sub_24F8369CC()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v121 = v2;
  uint64_t v3 = (void *)*v0;
  uint64_t v4 = sub_24F8CEBD0();
  sub_24F770DF4();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_24F77BBBC();
  uint64_t v120 = v8;
  uint64_t v9 = sub_24F8CEC00();
  sub_24F770DF4();
  uint64_t v119 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v122 = (id)v3[13];
  uint64_t v14 = (void (*)(void, void, void))v3[11];
  swift_getAssociatedTypeWitness();
  sub_24F770DF4();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v97 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v97 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  if (*((unsigned char *)v1 + 184) == 1)
  {
    uint64_t v101 = v26;
    char v116 = v14;
    uint64_t v107 = (char *)&v97 - v24;
    uint64_t v104 = v13;
    uint64_t v109 = v25;
    uint64_t v102 = v9;
    uint64_t v103 = v6;
    *((unsigned char *)v1 + 184) = 0;
    uint64_t v27 = v23;
    uint64_t v28 = (void *)sub_24F839750(0, &qword_269A2B8B8);
    sub_24F7688B8(&qword_269A2B8C0);
    type metadata accessor for Database();
    uint64_t v112 = v27;
    swift_getFunctionTypeMetadata1();
    sub_24F8CF610();
    swift_getTupleTypeMetadata2();
    sub_24F77C0BC((uint64_t)sub_24F837668, v29, (void (*)(id))sub_24F838710);
    uint64_t v114 = v129;
    uint64_t v30 = v131;
    uint64_t v115 = v130;
    uint64_t v31 = v132;
    uint64_t v32 = v135;
    uint64_t v117 = v134;
    uint64_t v118 = v133;
    if (v135)
    {
      uint64_t v111 = v126;
      uint64_t v110 = v127;
      uint64_t v108 = (uint64_t)v128;
      uint64_t v106 = v131;
      uint64_t v100 = v4;
      uint64_t v33 = v136;
      uint64_t v113 = v125;
      uint64_t v34 = (void (*)(uint64_t, uint64_t))swift_allocObject();
      uint64_t v35 = (uint64_t)v113;
      uint64_t v36 = (void (*)(char *, char *, uint64_t))v3[10];
      uint64_t v37 = v116;
      *((void *)v34 + 2) = v36;
      *((void *)v34 + 3) = v37;
      uint64_t v38 = v3[12];
      uint64_t v39 = (uint64_t)v122;
      *((void *)v34 + 4) = v38;
      *((void *)v34 + 5) = v39;
      *((void *)v34 + 6) = v32;
      *((void *)v34 + 7) = v33;
      uint64_t v40 = sub_24F8389D8;
      if (v35 != 1)
      {
        uint64_t v98 = v36;
        uint64_t v105 = v34;
        uint64_t v41 = v114;
        uint64_t v99 = v31;
        if (v114)
        {
          sub_24F77E214();
          sub_24F838760(v42, v43, v44, v45, (uint64_t)v41, v115, v106, v31, v91, v92, (void (*)(void))sub_24F839BCC, (void (*)(uint64_t, uint64_t))sub_24F78C440, (void (*)(uint64_t, uint64_t))sub_24F839BCC);
          uint64_t v46 = sub_24F78C440((uint64_t)sub_24F8389D8);
          ((void (*)(uint64_t))v41)(v46);
        }
        else
        {
          sub_24F77E214();
          sub_24F838760(v49, v50, v51, v52, 0, v115, v106, v31, v91, v92, (void (*)(void))sub_24F839BCC, (void (*)(uint64_t, uint64_t))sub_24F78C440, (void (*)(uint64_t, uint64_t))sub_24F839BCC);
          sub_24F78C440((uint64_t)sub_24F8389D8);
        }
        uint64_t v53 = v112;
        if (v1[4] != 1)
        {
          char v54 = MEMORY[0x270FA5388](*((unsigned __int8 *)v1 + 24));
          uint64_t v55 = (void (*)(char *, char *, uint64_t))v116;
          *(&v97 - 8) = v98;
          *(&v97 - 7) = v55;
          uint64_t v91 = v38;
          uint64_t v92 = v39;
          uint64_t v93 = (void (*)(void))sub_24F8389D8;
          uint64_t v94 = (uint64_t (*)(uint64_t))v105;
          uint64_t v95 = (uint64_t (*)(uint64_t))v121;
          sub_24F7715C0(v54, (uint64_t)sub_24F8389C0, (uint64_t)(&v97 - 10), v53, (uint64_t)v22);
          if (v28) {
            goto LABEL_21;
          }
          uint64_t v56 = v109;
          uint64_t v57 = v107;
          uint64_t v58 = v22;
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
          v59(v107, v58, v53);
LABEL_29:
          uint64_t v121 = (void (*)(uint64_t, uint64_t))v1[6];
          uint64_t v71 = v101;
          (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v101, v57, v53);
          unint64_t v72 = (*(unsigned __int8 *)(v56 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
          long long v73 = (char *)swift_allocObject();
          uint64_t v74 = v116;
          *((void *)v73 + 2) = v98;
          *((void *)v73 + 3) = v74;
          *((void *)v73 + 4) = v38;
          *((void *)v73 + 5) = v39;
          *((void *)v73 + 6) = v1;
          v59(&v73[v72], v71, v53);
          int v129 = sub_24F838850;
          uint64_t v130 = (uint64_t)v73;
          uint64_t v125 = (void (*)(void))MEMORY[0x263EF8330];
          uint64_t v126 = 1107296256;
          int v127 = sub_24F8363BC;
          char v128 = &unk_270108348;
          unint64_t v75 = _Block_copy(&v125);
          swift_retain();
          int v76 = v104;
          sub_24F8CEBE0();
          v124[0] = MEMORY[0x263F8EE78];
          sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
          sub_24F781274(&qword_26B1F7960);
          sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
          uint64_t v77 = v120;
          sub_24F8CF6D0();
          MEMORY[0x253363DC0](0, v76, v77, v75);
          sub_24F787238((uint64_t)sub_24F8389D8);
          _Block_release(v75);
          uint64_t v78 = sub_24F7819D4();
          sub_24F787238(v78);
          uint64_t v79 = (uint64_t)v110;
          uint64_t v80 = v108;
          sub_24F787238((uint64_t)v110);
          uint64_t v81 = (uint64_t)v114;
          uint64_t v82 = v115;
          sub_24F787238((uint64_t)v114);
          uint64_t v83 = v106;
          uint64_t v84 = v99;
          sub_24F787238(v106);
          uint64_t v86 = v117;
          uint64_t v85 = v118;
          sub_24F787238(v118);
          sub_24F787238((uint64_t)sub_24F8389D8);
          uint64_t v95 = (uint64_t (*)(uint64_t))sub_24F839BC8;
          uint64_t v94 = sub_24F787238;
          uint64_t v92 = v86;
          uint64_t v93 = (void (*)(void))sub_24F839BC8;
          uint64_t v91 = v85;
          uint64_t v87 = sub_24F7819D4();
          sub_24F838760(v87, v88, v79, v80, v81, v82, v83, v84, v91, v92, v93, (void (*)(uint64_t, uint64_t))v94, (void (*)(uint64_t, uint64_t))v95);
          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v120, v100);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v104, v102);
          uint64_t v89 = sub_24F77F024();
          v90(v89);
          swift_release();
          goto LABEL_30;
        }
        sub_24F776A80();
        uint64_t v125 = (void (*)(void))sub_24F8CEC70();
        MEMORY[0x270FA5388](v125);
        uint64_t v93 = (void (*)(void))v121;
        uint64_t v94 = (uint64_t (*)(uint64_t))v1;
        uint64_t v95 = sub_24F8389D8;
        uint64_t v96 = v105;
        sub_24F8A2FCC((uint64_t *)&v125, (void (*)(void))sub_24F83872C);
        if (v28)
        {
          swift_bridgeObjectRelease();
LABEL_21:
          id v122 = v28;
          sub_24F836400();
          sub_24F8364BC(v28);
          uint64_t v64 = (uint64_t)v113;
          uint64_t v65 = (uint64_t)v110;
          uint64_t v66 = (uint64_t)v114;
          uint64_t v67 = v106;
          sub_24F838760((uint64_t)v113, v111, (uint64_t)v110, v108, (uint64_t)v114, v115, v106, v99, v118, v117, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
          sub_24F787238((uint64_t)sub_24F8389D8);
          sub_24F787238((uint64_t)sub_24F8389D8);
          sub_24F787238(v64);
          sub_24F787238(v65);
          sub_24F787238(v66);
          sub_24F787238(v67);
          sub_24F787238(v118);

          goto LABEL_30;
        }
        uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
        v60(v107, v19, v53);
        uint64_t v61 = (void (*)(uint64_t *))v125;
        uint64_t v97 = v60;
        if (v125)
        {
          uint64_t v62 = swift_bridgeObjectRetain();
          uint64_t v63 = sub_24F83889C(v62);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v63 = 0;
        }
        uint64_t v53 = (uint64_t)v121;
        uint64_t v123 = v63;
        uint64_t v56 = (uint64_t)&v123;
        sub_24F80D5A0(v124);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v68 = v124[0];
        sub_24F77D870();
        if (!v110)
        {
LABEL_28:
          uint64_t v70 = v1[22];
          v1[22] = v68;
          sub_24F838834(v70);
          uint64_t v57 = v107;
          uint64_t v59 = v97;
          goto LABEL_29;
        }
        uint64_t v69 = v1[22];
        v124[0] = v68;
        if (v69 == 1)
        {
          swift_bridgeObjectRetain_n();
          sub_24F7710C4();
          swift_bridgeObjectRelease();
          sub_24F838834(v68);
          sub_24F838834(1);
        }
        else
        {
          uint64_t v123 = v69;
          swift_bridgeObjectRetain_n();
          sub_24F7710C4();
          uint64_t v56 = static DatabaseRegion.== infix(_:_:)(v124, &v123);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v56)
          {
LABEL_27:
            sub_24F787238((uint64_t)v61);
            sub_24F77D870();
            goto LABEL_28;
          }
        }
        v124[0] = v68;
        uint64_t v56 = v53;
        v61(v124);
        goto LABEL_27;
      }
    }
    else
    {
      if (v125 != (void (*)(void))1)
      {
        uint64_t v48 = (uint64_t)v127;
        sub_24F787238((uint64_t)v125);
        sub_24F787238(v48);
        sub_24F787238((uint64_t)v114);
        sub_24F787238(v30);
        uint64_t v47 = v118;
        goto LABEL_10;
      }
      uint64_t v40 = 0;
    }
    uint64_t v47 = (uint64_t)v40;
LABEL_10:
    sub_24F787238(v47);
  }
LABEL_30:
  sub_24F77344C();
}

unint64_t sub_24F837668()
{
  return 0xD000000000000015;
}

void *sub_24F837684@<X0>(void *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = result;
  uint64_t v28 = *result;
  if (result[20])
  {
    uint64_t v4 = result[10];
    uint64_t v6 = result[12];
    uint64_t v5 = result[13];
    uint64_t v7 = result[14];
    uint64_t v8 = result[15];
    uint64_t v9 = result[16];
    uint64_t v10 = result[18];
    uint64_t v25 = result[17];
    uint64_t v26 = result[19];
    uint64_t v30 = result[11];
    sub_24F78C440(v4);
    sub_24F78C440(v6);
    sub_24F78C440(v7);
    uint64_t v31 = v9;
    uint64_t v11 = v9;
    uint64_t v12 = v25;
    sub_24F78C440(v11);
    uint64_t v29 = v10;
    uint64_t v13 = v10;
    uint64_t v14 = v26;
    uint64_t result = (void *)sub_24F78C440(v13);
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v12 = 0;
    uint64_t v29 = 0;
    uint64_t v14 = 0;
    uint64_t v4 = 1;
  }
  if (v2[7])
  {
    uint64_t v27 = v8;
    uint64_t v15 = v7;
    uint64_t v16 = v4;
    uint64_t v17 = v5;
    uint64_t v18 = v6;
    uint64_t v19 = v14;
    uint64_t v20 = v12;
    uint64_t v22 = v2[8];
    uint64_t v21 = v2[9];
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = *(void *)(v28 + 80);
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v28 + 88);
    *(void *)(v23 + 40) = *(void *)(v28 + 104);
    *(void *)(v23 + 48) = v22;
    uint64_t v12 = v20;
    uint64_t v14 = v19;
    uint64_t v6 = v18;
    uint64_t v5 = v17;
    uint64_t v4 = v16;
    uint64_t v7 = v15;
    uint64_t v8 = v27;
    *(void *)(v23 + 56) = v21;
    uint64_t result = (void *)swift_retain();
    uint64_t v24 = sub_24F839704;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v23 = 0;
  }
  *a2 = v4;
  a2[1] = v30;
  a2[2] = v6;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = v8;
  a2[6] = v31;
  a2[7] = v12;
  a2[8] = v29;
  a2[9] = v14;
  a2[10] = (uint64_t)v24;
  a2[11] = v23;
  return result;
}

uint64_t sub_24F837850@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)a2;
  char v10 = a2[24];
  void v13[2] = *(void *)(*(void *)a2 + 80);
  long long v14 = *(_OWORD *)(v9 + 88);
  uint64_t v15 = *(void *)(v8 + 104);
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return sub_24F7715C0(v10, a5, (uint64_t)v13, AssociatedTypeWitness, a6);
}

uint64_t sub_24F83793C(void *a1, void (*a2)(char *, char *, uint64_t))
{
  uint64_t v29 = (void *)*a1;
  uint64_t v30 = a2;
  uint64_t v28 = v29[13];
  uint64_t v3 = *(void *)(v28 + 8);
  uint64_t v33 = (void (*)(void, void, void, void))v29[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v32 = (char *)&v27 - v8;
  uint64_t v34 = sub_24F8CF610();
  uint64_t v9 = *(void *)(v34 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v34);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v27 - v13;
  uint64_t result = sub_24F832C54();
  if (result)
  {
    swift_beginAccess();
    (*(void (**)(void, void (*)(void, void, void, void), uint64_t))(v3 + 32))(v30, v33, v3);
    swift_endAccess();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v34);
    if (sub_24F777048((uint64_t)v12, 1, AssociatedTypeWitness) == 1)
    {
      uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v17 = v34;
      v16(v14, v34);
      return ((uint64_t (*)(char *, uint64_t))v16)(v12, v17);
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      uint64_t v18 = v32;
      v30(v32, v12, AssociatedTypeWitness);
      uint64_t v19 = (void *)a1[2];
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v31, v18, AssociatedTypeWitness);
      unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v21 = (char *)swift_allocObject();
      uint64_t v22 = v29;
      uint64_t v23 = v33;
      *((void *)v21 + 2) = v29[10];
      *((void *)v21 + 3) = v23;
      uint64_t v24 = v28;
      *((void *)v21 + 4) = v22[12];
      *((void *)v21 + 5) = v24;
      *((void *)v21 + 6) = a1;
      v30(&v21[v20], v31, AssociatedTypeWitness);
      uint64_t v25 = v19[5];
      uint64_t v26 = v19[6];
      sub_24F7811D0(v19 + 2, v25);
      uint64_t v33 = *(void (**)(void, void, void, void))(v26 + 8);
      swift_retain();
      v33(sub_24F838F28, v21, v25, v26);
      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v32, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v34);
    }
  }
  return result;
}

id sub_24F837D70(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  sub_24F839750(0, &qword_269A2B8B8);
  swift_getAssociatedTypeWitness();
  swift_getFunctionTypeMetadata1();
  sub_24F8CF610();
  id result = sub_24F832B64(a3, 0, a4);
  if (v8)
  {
    swift_retain();
    v8(a2);
    sub_24F787238((uint64_t)v8);
    return (id)sub_24F787238((uint64_t)v8);
  }
  return result;
}

uint64_t *sub_24F837EA8@<X0>(uint64_t *result@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = result[20];
  if (v3)
  {
    uint64_t v4 = *result;
    uint64_t v5 = result[21];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = *(void *)(v4 + 80);
    *(_OWORD *)(v6 + 24) = *(_OWORD *)(v4 + 88);
    *(void *)(v6 + 40) = *(void *)(v4 + 104);
    *(void *)(v6 + 48) = v3;
    *(void *)(v6 + 56) = v5;
    id result = (uint64_t *)swift_retain();
    uint64_t v7 = sub_24F838F70;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return result;
}

void sub_24F837F70()
{
  *(unsigned char *)(v0 + 184) = 0;
}

uint64_t sub_24F837F88()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  sub_24F839750(0, &qword_269A2B8B8);
  sub_24F7688B8(&qword_269A2B8C0);
  uint64_t v3 = *(void *)(v1 + 80);
  sub_24F8CF610();
  sub_24F77B5F8();
  sub_24F832B64((uint64_t)sub_24F7C44C8, 0, (void (*)(id))sub_24F839730);
  if (v31 == 1) {
    return swift_unknownObjectRelease();
  }
  sub_24F77BD80(v31, v32, v4, v5, v6, v7, v8, v9, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v2,
    v32,
    v26,
    v33,
    v36,
    v38,
    v37);
  if (v39)
  {
    uint64_t v11 = sub_24F78C440((uint64_t)v39);
    v39(v11);
  }
  else
  {
    sub_24F78C440(0);
  }
  if (v41)
  {
    uint64_t v12 = *(void *)(v24 + 96);
    uint64_t v13 = *(void (**)(id (*)(), uint64_t *, uint64_t, uint64_t))(v12 + 56);
    swift_unknownObjectRetain();
    swift_retain();
    v13(sub_24F83974C, v0, v3, v12);
    swift_unknownObjectRelease();
    swift_release();
    sub_24F838760(v31, v25, v27, v34, v35, v28, v30, v29, (uint64_t)v39, v40, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
    swift_unknownObjectRelease();
    return sub_24F838760(v31, v25, v27, v34, v35, v28, v30, v29, (uint64_t)v39, v40, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
  }
  else
  {
    sub_24F838760(v31, v25, v27, v34, v35, v28, v30, v29, (uint64_t)v39, v40, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
    sub_24F787238(v31);
    sub_24F787238(v27);
    sub_24F787238(v35);
    sub_24F787238(v30);
    return sub_24F787238((uint64_t)v39);
  }
}

uint64_t sub_24F838308@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + 10;
  uint64_t v5 = a1[20];
  if (v5)
  {
    uint64_t v6 = a1[10];
    uint64_t v7 = a1[12];
    uint64_t v34 = a1[13];
    uint64_t v8 = a1[15];
    uint64_t v33 = a1[14];
    uint64_t v9 = a1[16];
    uint64_t v10 = a1[17];
    uint64_t v11 = a1[18];
    uint64_t v30 = a1[19];
    uint64_t v32 = a1[11];
    sub_24F78C440(v6);
    uint64_t v31 = v7;
    sub_24F78C440(v7);
    uint64_t v12 = v8;
    sub_24F78C440(v33);
    uint64_t v13 = v9;
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    sub_24F78C440(v14);
    uint64_t v16 = v11;
    uint64_t v17 = v11;
    uint64_t v18 = v30;
    sub_24F78C440(v17);
    uint64_t v5 = a1[20];
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    uint64_t v33 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v6 = 1;
  }
  uint64_t v19 = a1[10];
  uint64_t v20 = a1[11];
  uint64_t v21 = a1[12];
  uint64_t v22 = a1[13];
  uint64_t v23 = a1[14];
  uint64_t v24 = a1[15];
  uint64_t v25 = a1[16];
  uint64_t v26 = a1[17];
  uint64_t v27 = a1[18];
  uint64_t v28 = a1[19];
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  long long v4[2] = 0u;
  void v4[3] = 0u;
  v4[4] = 0u;
  void v4[5] = 0u;
  sub_24F8390EC(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v5);
  *a2 = v6;
  a2[1] = v32;
  a2[2] = v31;
  a2[3] = v34;
  a2[4] = v33;
  a2[5] = v12;
  a2[6] = v13;
  a2[7] = v15;
  a2[8] = v16;
  a2[9] = v18;
  uint64_t result = a1[7];
  if (result) {
    uint64_t result = swift_unknownObjectRetain();
  }
  a2[10] = result;
  return result;
}

uint64_t *sub_24F838474(uint64_t a1, uint64_t a2)
{
  sub_24F832CC0();
  uint64_t result = (uint64_t *)sub_24F838FFC((uint64_t)v4, (uint64_t)v5);
  if (v5[0] != 1)
  {
    if (v6) {
      v6(a2);
    }
    return sub_24F839064(v4);
  }
  return result;
}

uint64_t sub_24F83851C()
{
  return 0x7245796669746F6ELL;
}

uint64_t sub_24F838540@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + 10;
  uint64_t v5 = a1[20];
  if (v5)
  {
    uint64_t v6 = a1[10];
    uint64_t v7 = a1[12];
    uint64_t v34 = a1[13];
    uint64_t v8 = a1[15];
    uint64_t v33 = a1[14];
    uint64_t v9 = a1[16];
    uint64_t v10 = a1[17];
    uint64_t v11 = a1[18];
    uint64_t v30 = a1[19];
    uint64_t v32 = a1[11];
    sub_24F78C440(v6);
    uint64_t v31 = v7;
    sub_24F78C440(v7);
    uint64_t v12 = v8;
    sub_24F78C440(v33);
    uint64_t v13 = v9;
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    sub_24F78C440(v14);
    uint64_t v16 = v11;
    uint64_t v17 = v11;
    uint64_t v18 = v30;
    sub_24F78C440(v17);
    uint64_t v5 = a1[20];
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    uint64_t v33 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v6 = 1;
  }
  uint64_t v19 = a1[10];
  uint64_t v20 = a1[11];
  uint64_t v21 = a1[12];
  uint64_t v22 = a1[13];
  uint64_t v23 = a1[14];
  uint64_t v24 = a1[15];
  uint64_t v25 = a1[16];
  uint64_t v26 = a1[17];
  uint64_t v27 = a1[18];
  uint64_t v28 = a1[19];
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  long long v4[2] = 0u;
  void v4[3] = 0u;
  v4[4] = 0u;
  void v4[5] = 0u;
  uint64_t result = sub_24F8390EC(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v5);
  *a2 = v6;
  a2[1] = v32;
  a2[2] = v31;
  a2[3] = v34;
  a2[4] = v33;
  a2[5] = v12;
  a2[6] = v13;
  a2[7] = v15;
  a2[8] = v16;
  a2[9] = v18;
  return result;
}

unint64_t sub_24F838694()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_24F8386B0(void *a1)
{
  uint64_t v1 = a1[7];
  a1[8] = 0;
  a1[9] = 0;
  a1[7] = 0;
  return sub_24F83968C(v1);
}

uint64_t sub_24F8386EC()
{
  return sub_24F837F88();
}

void *sub_24F838710@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F837684(v1, a1);
}

uint64_t sub_24F83872C@<X0>(uint64_t a1@<X8>)
{
  return sub_24F837850(*(void *)(v1 + 16), *(unsigned char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_24F8389C0, a1);
}

uint64_t sub_24F838760(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(void), void (*a12)(uint64_t, uint64_t), void (*a13)(uint64_t, uint64_t))
{
  if (result != 1)
  {
    a11();
    a12(a3, a4);
    ((void (*)(uint64_t, uint64_t))a11)(a5, a6);
    a13(a7, a8);
    return ((uint64_t (*)(uint64_t, uint64_t))a11)(a9, a10);
  }
  return result;
}

uint64_t sub_24F838834(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F838844()
{
  return sub_24F766A90();
}

uint64_t sub_24F838850()
{
  return sub_24F839AA0((uint64_t (*)(uint64_t))sub_24F83793C);
}

uint64_t sub_24F838868(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24F838878()
{
  return swift_release();
}

uint64_t sub_24F838880(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_24F83889C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  if ((*(unsigned char *)(isStackAllocationSafe + 32) & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v3 = sub_24F7808C4();
    if (v1) {
      swift_willThrow();
    }
    else {
      return v3;
    }
  }
  else
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v2 = sub_24F7808C4();
    MEMORY[0x2533654D0](v4, -1, -1);
  }
  return v2;
}

uint64_t sub_24F8389C0()
{
  return sub_24F839A44();
}

uint64_t sub_24F8389D8(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 48);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_24F838A08(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = (unint64_t *)result;
  uint64_t v17 = 0;
  int64_t v4 = 0;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 64);
  int64_t v19 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v10 >= v19) {
      return sub_24F838C30(v16, a2, v17, a3);
    }
    unint64_t v11 = *(void *)(v18 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v19) {
        return sub_24F838C30(v16, a2, v17, a3);
      }
      unint64_t v11 = *(void *)(v18 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v19) {
          return sub_24F838C30(v16, a2, v17, a3);
        }
        unint64_t v11 = *(void *)(v18 + 8 * v4);
        if (!v11) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_20:
    type metadata accessor for Database();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v13 = static Database.isSQLiteInternalTable(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      *(unint64_t *)((char *)v16 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      if (__OFADD__(v17++, 1))
      {
        __break(1u);
        return sub_24F838C30(v16, a2, v17, a3);
      }
    }
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v19) {
    return sub_24F838C30(v16, a2, v17, a3);
  }
  unint64_t v11 = *(void *)(v18 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v19) {
      return sub_24F838C30(v16, a2, v17, a3);
    }
    unint64_t v11 = *(void *)(v18 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_24F838C30(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_24F781274(&qword_269A2B8C8);
  uint64_t result = sub_24F8CFA10();
  uint64_t v8 = result;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v39 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v40 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v37) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v37) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v37) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v37) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v37) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v40 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = *(void *)(v4 + 56);
    int64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v13);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[3];
    uint64_t v41 = v19[2];
    uint64_t v23 = (uint64_t *)(v18 + 16 * v13);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24F8CFF80();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0) {
      break;
    }
    unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t v34 = (void *)(*(void *)(v8 + 48) + 32 * v29);
    *uint64_t v34 = v20;
    v34[1] = v21;
    uint64_t v34[2] = v41;
    v34[3] = v22;
    uint64_t v35 = (void *)(*(void *)(v8 + 56) + 16 * v29);
    *uint64_t v35 = v25;
    v35[1] = v24;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_39;
    }
    uint64_t v4 = v39;
    uint64_t v10 = v40;
    if (!v5) {
      return v8;
    }
  }
  char v30 = 0;
  unint64_t v31 = (unint64_t)(63 - v26) >> 6;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    BOOL v32 = v28 == v31;
    if (v28 == v31) {
      unint64_t v28 = 0;
    }
    v30 |= v32;
    uint64_t v33 = *(void *)(v11 + 8 * v28);
    if (v33 != -1)
    {
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24F838F1C()
{
  return sub_24F766A90();
}

id sub_24F838F28()
{
  return sub_24F839B4C((uint64_t)sub_24F837668, (void (*)(id))sub_24F838F54);
}

uint64_t *sub_24F838F54@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_24F837EA8(v1, a1);
}

uint64_t sub_24F838F70()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_24F838F98()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t *sub_24F838FD8()
{
  return sub_24F838474(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24F838FE0@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F838540(v1, a1);
}

uint64_t sub_24F838FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_269A2B8C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_24F839064(uint64_t *a1)
{
  return a1;
}

uint64_t sub_24F8390EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_24F787238(result);
    sub_24F787238(a3);
    sub_24F787238(a5);
    sub_24F787238(a7);
    sub_24F787238(a9);
    return swift_release();
  }
  return result;
}

void sub_24F8391B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  sub_24F7803A4();
  if (v7)
  {
    swift_retain();
    return;
  }
  uint64_t v8 = v6;
  unint64_t v9 = v5;
  sub_24F781274(&qword_269A2B8D0);
  uint64_t v10 = sub_24F8CFA10();
  uint64_t v11 = v10;
  uint64_t v34 = v9;
  uint64_t v35 = v8;
  if (v8 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v9;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v10 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_26;
    }
    uint64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_40;
    }
    if (v17 >= v35) {
      return;
    }
    unint64_t v18 = v34[v17];
    ++v13;
    if (!v18)
    {
      uint64_t v13 = v17 + 1;
      if (v17 + 1 >= v35) {
        return;
      }
      unint64_t v18 = v34[v13];
      if (!v18)
      {
        uint64_t v13 = v17 + 2;
        if (v17 + 2 >= v35) {
          return;
        }
        unint64_t v18 = v34[v13];
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_26:
    uint64_t v20 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24F8CEE50();
    unint64_t v24 = sub_24F8CFF80() & ~(-1 << *(unsigned char *)(v11 + 32));
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) == 0)
    {
      sub_24F77B984();
      while (++v26 != v27 || (v25 & 1) == 0)
      {
        BOOL v28 = v26 == v27;
        if (v26 == v27) {
          uint64_t v26 = 0;
        }
        v25 |= v28;
        if (*(void *)(v14 + 8 * v26) != -1)
        {
          sub_24F774704();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_24F773BF4();
LABEL_35:
    sub_24F77C7BC();
    *(void *)(v14 + v29) |= v30;
    BOOL v32 = (void *)(*(void *)(v11 + 48) + 16 * v31);
    void *v32 = v22;
    v32[1] = v21;
    *(void *)(*(void *)(v11 + 56) + 8 * v31) = v23;
    sub_24F780544();
    if (v33) {
      goto LABEL_39;
    }
    if (!v4) {
      return;
    }
  }
  uint64_t v19 = v17 + 3;
  if (v19 >= v35) {
    return;
  }
  unint64_t v18 = v34[v19];
  if (v18)
  {
    uint64_t v13 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v35) {
      return;
    }
    unint64_t v18 = v34[v13];
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_24F839400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  sub_24F7803A4();
  if (v7)
  {
    swift_retain();
    return;
  }
  uint64_t v8 = v6;
  unint64_t v9 = v5;
  sub_24F781274(&qword_269A2A310);
  uint64_t v10 = sub_24F8CFA10();
  uint64_t v11 = v10;
  uint64_t v33 = v8;
  if (v8 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v9;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v10 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_26;
    }
    uint64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_40;
    }
    if (v17 >= v33) {
      return;
    }
    unint64_t v18 = v9[v17];
    ++v13;
    if (!v18)
    {
      uint64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        return;
      }
      unint64_t v18 = v9[v13];
      if (!v18)
      {
        uint64_t v13 = v17 + 2;
        if (v17 + 2 >= v33) {
          return;
        }
        unint64_t v18 = v9[v13];
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_26:
    uint64_t v20 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    memcpy(__dst, (const void *)(*(void *)(v3 + 56) + 216 * v16), 0xD2uLL);
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F7ADF80((uint64_t)__dst);
    sub_24F8CEE50();
    unint64_t v23 = sub_24F8CFF80() & ~(-1 << *(unsigned char *)(v11 + 32));
    if (((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6))) == 0)
    {
      sub_24F77B984();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        BOOL v27 = v25 == v26;
        if (v25 == v26) {
          uint64_t v25 = 0;
        }
        v24 |= v27;
        if (*(void *)(v14 + 8 * v25) != -1)
        {
          sub_24F774704();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_24F773BF4();
LABEL_35:
    sub_24F77C7BC();
    *(void *)(v14 + v28) |= v29;
    uint64_t v31 = (void *)(*(void *)(v11 + 48) + 16 * v30);
    *uint64_t v31 = v22;
    v31[1] = v21;
    memcpy((void *)(*(void *)(v11 + 56) + 216 * v30), __dst, 0xD2uLL);
    sub_24F780544();
    if (v32) {
      goto LABEL_39;
    }
    if (!v4) {
      return;
    }
  }
  uint64_t v19 = v17 + 3;
  if (v19 >= v33) {
    return;
  }
  unint64_t v18 = v9[v19];
  if (v18)
  {
    uint64_t v13 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v33) {
      return;
    }
    unint64_t v18 = v9[v13];
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_24F839670()
{
  return sub_24F8386B0(v0);
}

uint64_t sub_24F83968C(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_24F8396CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F839704(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 48))(*a1);
}

uint64_t sub_24F839730@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F838308(v1, a1);
}

uint64_t sub_24F839750(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24F83978C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24F8397D4()
{
  sub_24F773974();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  return swift_deallocObject();
}

uint64_t sub_24F839858()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 40) + 8) + 24))();
}

uint64_t sub_24F8398CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F8341B8(v1, a1);
}

uint64_t sub_24F8398E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_24F78C440(result);
    sub_24F78C440(a3);
    sub_24F78C440(a5);
    sub_24F78C440(a7);
    sub_24F78C440(a9);
    return swift_retain();
  }
  return result;
}

uint64_t sub_24F8399B0(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24F8399F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F8343F0(a1, v2, a2);
}

uint64_t sub_24F839A0C@<X0>(uint64_t a1@<X8>)
{
  return sub_24F835748(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void *sub_24F839A28@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F8365A0(v1, a1);
}

uint64_t sub_24F839A44()
{
  return (*(uint64_t (**)(void))(v0 + 48))(*(void *)(v0 + 64));
}

uint64_t sub_24F839A74(uint64_t a1)
{
  return sub_24F835984(a1, v1);
}

uint64_t sub_24F839A7C()
{
  return sub_24F766A90();
}

uint64_t sub_24F839A88()
{
  return sub_24F839AA0((uint64_t (*)(uint64_t))sub_24F835ED8);
}

uint64_t sub_24F839AA0(uint64_t (*a1)(uint64_t))
{
  sub_24F782BC0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77DF00(AssociatedTypeWitness);
  uint64_t v2 = sub_24F76B978();
  return a1(v2);
}

void sub_24F839B00(BOOL *a1@<X8>)
{
  *a1 = *(void *)(v1 + 160) != 0;
}

uint64_t sub_24F839B14()
{
  return sub_24F766A90();
}

id sub_24F839B20()
{
  return sub_24F839B4C((uint64_t)sub_24F8362D8, (void (*)(id))sub_24F839BAC);
}

id sub_24F839B4C(uint64_t a1, void (*a2)(id))
{
  sub_24F782BC0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77DF00(AssociatedTypeWitness);
  uint64_t v5 = sub_24F76B978();
  return sub_24F837D70(v5, v6, a1, a2);
}

uint64_t *sub_24F839BAC@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_24F8362F4(v1, a1);
}

uint64_t sub_24F839BE8(void *a1)
{
  return sub_24F839704(a1);
}

void sub_24F839C00(BOOL *a1@<X8>)
{
}

uint64_t sub_24F839C1C(uint64_t a1)
{
  return sub_24F8389D8(a1);
}

id sub_24F839C38@<X0>(uint64_t a1@<X8>)
{
  return [v1 (SEL)(a1 + 3181)];
}

uint64_t sub_24F839C64@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  sub_24F77AD10();
  MEMORY[0x270FA5388](v4);
  sub_24F76B830();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_24F8CFF90();
  sub_24F77AD10();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v15 - v12;
  a1(v7);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v13, v8);
}

uint64_t DatabaseQueue.__allocating_init(configuration:)(uint64_t a1)
{
  sub_24F773C60();
  uint64_t v2 = swift_allocObject();
  DatabaseQueue.init(configuration:)(a1);
  return v2;
}

void DatabaseQueue.inDatabase<A>(_:)()
{
}

uint64_t DatabaseQueue.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7EEC68(*(void *)(*(void *)(v1 + 16) + 16) + OBJC_IVAR____TtC12GRDBInternal8Database_configuration, a1);
}

uint64_t DatabaseQueue.path.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatabaseQueue.__allocating_init(path:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F773C60();
  uint64_t v6 = swift_allocObject();
  DatabaseQueue.init(path:configuration:)(a1, a2, a3);
  return v6;
}

uint64_t DatabaseQueue.init(path:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Configuration();
  uint64_t v7 = sub_24F77AD34(v6);
  MEMORY[0x270FA5388](v7);
  sub_24F76B830();
  sub_24F7EEC68(a3, v9 - v8);
  type metadata accessor for SerializedDatabase();
  swift_allocObject();
  sub_24F77E9EC();
  sub_24F88ABFC();
  if (v4)
  {
    sub_24F7EECCC(a3);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v3 + 16) = v10;
    sub_24F83A014();
    sub_24F7EECCC(a3);
  }
  return v3;
}

void sub_24F83A014()
{
  uint64_t v1 = type metadata accessor for Configuration();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DatabaseQueue.configuration.getter((uint64_t)v3);
  int v4 = v3[25];
  sub_24F7EECCC((uint64_t)v3);
  if (v4 == 1)
  {
    id v5 = objc_msgSend(self, sel_defaultCenter);
    if (qword_269A2A370 != -1) {
      swift_once();
    }
    objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel_suspend_, qword_269A2C430, 0);
    if (qword_269A2A378 != -1) {
      swift_once();
    }
    objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel_resume_, qword_269A2C438, 0);
  }
}

uint64_t DatabaseQueue.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Configuration();
  uint64_t v5 = sub_24F77AD34(v4);
  MEMORY[0x270FA5388](v5);
  sub_24F76B830();
  sub_24F7EEC68(a1, v7 - v6);
  type metadata accessor for SerializedDatabase();
  swift_allocObject();
  sub_24F77E9EC();
  sub_24F88ABFC();
  uint64_t v9 = v8;
  sub_24F7EECCC(a1);
  *(void *)(v2 + 16) = v9;
  return v2;
}

uint64_t DatabaseQueue.deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  swift_release();
  return v0;
}

uint64_t DatabaseQueue.__deallocating_deinit()
{
  DatabaseQueue.deinit();
  uint64_t v0 = sub_24F773C60();
  return MEMORY[0x270FA0228](v0, v1, v2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseQueue.close()()
{
}

void sub_24F83A33C()
{
}

void sub_24F83A360()
{
}

uint64_t DatabaseQueue.asyncWriteWithoutTransaction(_:)(uint64_t a1, uint64_t a2)
{
  return sub_24F88A410(a1, a2);
}

void sub_24F83A3A0()
{
}

uint64_t DatabaseQueue.concurrentRead<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v7 = sub_24F8CFF90();
  uint64_t v8 = sub_24F77AD34(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v12[-v9];
  type metadata accessor for DatabaseFuture();
  uint64_t v13 = a3;
  uint64_t v14 = v3;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  sub_24F839C64((void (*)(uint64_t))sub_24F83AD58, (uint64_t)v10);
  return sub_24F78B67C((uint64_t)v10);
}

void DatabaseQueue.spawnConcurrentRead(_:)(void (*a1)(void *, uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_24F88B504((uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 209, v3);
  sub_24F83AB68(*(void **)(v3 + 16), a1);
}

void sub_24F83A524()
{
}

Swift::Void __swiftcall DatabaseQueue.interrupt()()
{
}

void sub_24F83A564()
{
}

void DatabaseQueue.read<A>(_:)()
{
}

uint64_t DatabaseQueue.asyncRead(_:)(uint64_t a1, uint64_t a2)
{
  return sub_24F83A610(a1, a2, (uint64_t)&unk_27010A4C8, (uint64_t)sub_24F83ADE8);
}

uint64_t DatabaseQueue.asyncUnsafeRead(_:)(uint64_t a1, uint64_t a2)
{
  return sub_24F83A610(a1, a2, (uint64_t)&unk_27010A4F0, (uint64_t)sub_24F83ADF0);
}

uint64_t sub_24F83A610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  swift_retain();
  sub_24F88A410(a4, v7);
  return swift_release();
}

void DatabaseQueue.unsafeReentrantRead<A>(_:)()
{
}

void DatabaseQueue._add<A>(observation:scheduling:onChange:)()
{
  uint64_t v0 = type metadata accessor for Configuration();
  uint64_t v1 = sub_24F77AD34(v0);
  MEMORY[0x270FA5388](v1);
  sub_24F76B830();
  uint64_t v4 = v3 - v2;
  DatabaseQueue.configuration.getter(v3 - v2);
  int v5 = *(unsigned __int8 *)(v4 + 1);
  sub_24F7EECCC(v4);
  sub_24F77F6F8();
  if (v5 == 1)
  {
    uint64_t v6 = (const void *)sub_24F783074();
    sub_24F887BB0(v6, v7, v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    sub_24F783074();
    sub_24F788E6C();
  }
}

Swift::Void __swiftcall DatabaseQueue.releaseMemory()()
{
}

void sub_24F83A860()
{
}

uint64_t sub_24F83A88C()
{
  return sub_24F8A3EAC();
}

uint64_t sub_24F83A8CC()
{
  return sub_24F8A43DC();
}

uint64_t sub_24F83A910(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_24F8CE680();
  sub_24F77AD10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_24F76B830();
  uint64_t v11 = v10 - v9;
  sub_24F8CE670();
  swift_retain();
  a4(v11);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

void sub_24F83A9DC(void *a1, void (*a2)(void *, uint64_t))
{
  char v6 = 0;
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&v6);
  if (v4)
  {
    id v5 = v4;
    a2(v4, 1);
  }
  else
  {
    sub_24F8A3628();
    a2(a1, 0);
    sub_24F8A36D0();
    Database.commit()();
    if (!v4) {
      return;
    }
  }
}

uint64_t sub_24F83AAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t result = sub_24F88AB8C((uint64_t (*)(void))sub_24F83AD7C);
  if (v5) {
    *a5 = v5;
  }
  return result;
}

uint64_t sub_24F83AB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void v7[5] = a1;
  _OWORD v7[2] = a4;
  v7[3] = a2;
  _OWORD v7[4] = a3;
  return sub_24F7715C0(1, a5, (uint64_t)v7, a4, a6);
}

void sub_24F83AB68(void *a1, void (*a2)(void *, uint64_t))
{
  if (Database.isInsideTransaction.getter())
  {
    sub_24F8CF9D0();
    __break(1u);
    return;
  }
  char v8 = 0;
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&v8);
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = v4;
    a2(v4, 1);

LABEL_5:
    return;
  }
  sub_24F8A3628();
  a2(a1, 0);
  sub_24F8A36D0();
  Database.commit()();
  uint64_t v5 = v7;
  if (v7) {
    goto LABEL_5;
  }
}

uint64_t DatabaseQueue.inTransaction(_:_:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  v4[16] = *a1;
  uint64_t v5 = a2;
  uint64_t v6 = a3;
  return sub_24F8565FC((uint64_t)sub_24F83AE1C, (uint64_t)v4);
}

uint64_t sub_24F83AD08(uint64_t a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  char v11 = a2;
  swift_retain();
  return sub_24F8A1B4C(&v11, a1, a3, a4, a1, v7, v8, v9);
}

uint64_t sub_24F83AD58(void *a1)
{
  return sub_24F83AAC8(v1[3], v1[4], v1[5], v1[2], a1);
}

uint64_t sub_24F83AD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F83AB28(a1, v2[3], v2[4], v2[2], (uint64_t)sub_24F83AEB4, a2);
}

uint64_t sub_24F83ADB0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24F83ADE8(void *a1)
{
  sub_24F83A9DC(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_24F83ADF0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 16))(a1, 0);
}

uint64_t sub_24F83AE1C(uint64_t a1)
{
  return sub_24F83AD08(a1, *(unsigned char *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t type metadata accessor for DatabaseQueue()
{
  return self;
}

uint64_t method lookup function for DatabaseQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DatabaseQueue);
}

uint64_t dispatch thunk of DatabaseQueue.__allocating_init(path:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DatabaseQueue.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_24F83AEB4()
{
  return sub_24F83AECC();
}

uint64_t sub_24F83AECC()
{
  return (*(uint64_t (**)(void))(v0 + 24))(*(void *)(v0 + 40));
}

void DatabaseQueue.writeWithoutTransaction<A>(_:)()
{
}

void DatabaseQueue.barrierWriteWithoutTransaction<A>(_:)()
{
}

void DatabaseQueue.unsafeRead<A>(_:)()
{
}

void DatabaseQueue.unsafeReentrantWrite<A>(_:)()
{
}

uint64_t sub_24F83AF64()
{
  return SQLSubqueryable.sqlExpression.getter();
}

uint64_t SQLSubqueryable.sqlExpression.getter()
{
  sub_24F77E240();
  v1();
  sub_24F81BC0C((uint64_t)v3);
  return sub_24F76F710((uint64_t)v3, v0);
}

uint64_t SQLSubqueryable.exists()()
{
  sub_24F77E240();
  v1();
  v3[162] = 0;
  sub_24F81C1FC((uint64_t)v3);
  return sub_24F76F710((uint64_t)v3, v0);
}

uint64_t sub_24F83AFF4()
{
  return SQLSubqueryable.sqlExpression.getter();
}

uint64_t sub_24F83B000()
{
  return SQLSubqueryable.sqlExpression.getter();
}

uint64_t sub_24F83B00C()
{
  return SQLSubqueryable.sqlExpression.getter();
}

uint64_t sub_24F83B018(uint64_t a1)
{
  sub_24F7AA6E8(v1, (uint64_t)v32);
  sub_24F7AA6E8((uint64_t)v32, (uint64_t)v33);
  if (sub_24F83BB8C((uint64_t)v33) == 1)
  {
    uint64_t v4 = (const void *)sub_24F83BB98((uint64_t)v33);
    sub_24F78308C(v4);
    sub_24F83BBF0((uint64_t)v32);
    sub_24F83BBF0((uint64_t)v32);
    sub_24F8C7698(v31, (uint64_t)v26);
    uint64_t v6 = *(void *)(v1 + 88);
    uint64_t v5 = *(void *)(v1 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F7ABCFC(v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v7 = memcpy(__dst, v26, sizeof(__dst));
    sub_24F77EA04(v7, v8, v9, v10, v11, v12, v13, v14, v26[0], v26[1], v26[2], v26[3], v26[4], v26[5], v26[6], v26[7], v26[8], v26[9], v26[10],
      v26[11],
      v26[12],
      v26[13],
      v26[14],
      v26[15],
      v26[16],
      v26[17],
      v26[18],
      v26[19],
      v26[20],
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      __dst[9],
      __dst[10],
      __dst[11],
      __dst[12],
      __dst[13],
      __dst[14],
      __dst[15],
      __dst[16],
      __dst[17],
      __dst[18],
      __dst[19],
      __dst[20],
      v28,
      v29,
      v30);
    sub_24F8C6B4C(a1, v15, v16, v17, v18, v19, v20, v21, v26[0], v26[1], v26[2], v26[3], v26[4], v26[5], v26[6], v26[7], v26[8], v26[9], v26[10],
      v26[11]);
    uint64_t v23 = v22;
    sub_24F7AC0E8(__dst);
    sub_24F83BBF0((uint64_t)v32);
  }
  else
  {
    uint64_t v23 = *(void *)sub_24F83BB98((uint64_t)v33);
    swift_retain();
    sub_24F83BBF0((uint64_t)v32);
    uint64_t v24 = sub_24F76BCC0(v23, a1);
    if (!v2)
    {
      __dst[0] = v24;
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      sub_24F773C70();
      uint64_t v23 = sub_24F8CED30();
      swift_bridgeObjectRelease();
    }
    sub_24F83BBF0((uint64_t)v32);
  }
  return v23;
}

uint64_t sub_24F83B220(uint64_t a1)
{
  sub_24F7AA6E8(v1, (uint64_t)v39);
  sub_24F7AA6E8((uint64_t)v39, (uint64_t)v40);
  if (sub_24F83BB8C((uint64_t)v40) == 1)
  {
    uint64_t v4 = (const void *)sub_24F83BB98((uint64_t)v40);
    sub_24F78308C(v4);
    sub_24F83BBF0((uint64_t)v39);
    sub_24F83BBF0((uint64_t)v39);
    sub_24F8C7698(v38, (uint64_t)v33);
    uint64_t v6 = *(void *)(v1 + 88);
    uint64_t v5 = *(void *)(v1 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F7ABCFC(v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v7 = memcpy(__dst, v33, sizeof(__dst));
    sub_24F77EA04(v7, v8, v9, v10, v11, v12, v13, v14, v33[0], v33[1], v33[2], v33[3], v33[4], v33[5], v33[6], v33[7], v33[8], v33[9], v33[10],
      v33[11],
      v33[12],
      v33[13],
      v33[14],
      v33[15],
      v33[16],
      v33[17],
      v33[18],
      v33[19],
      v33[20],
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      __dst[9],
      __dst[10],
      __dst[11],
      __dst[12],
      __dst[13],
      __dst[14],
      __dst[15],
      __dst[16],
      __dst[17],
      __dst[18],
      __dst[19],
      __dst[20],
      v35,
      v36,
      v37);
    sub_24F8C6838(a1, v15, v16, v17, v18, v19, v20, v21, v33[0], v33[1], v33[2], v33[3], v33[4], v33[5], v33[6], v33[7], v33[8], v33[9], v33[10],
      v33[11]);
    a1 = v22;
    sub_24F7AC0E8(__dst);
    sub_24F83BBF0((uint64_t)v39);
  }
  else
  {
    uint64_t v23 = *(void *)sub_24F83BB98((uint64_t)v40);
    type metadata accessor for StatementArgumentsSink();
    swift_allocObject();
    sub_24F83BBF0((uint64_t)v39);
    swift_retain();
    uint64_t v24 = sub_24F778A30(0);
    unint64_t v25 = MEMORY[0x263F8EE78];
    sub_24F778B08();
    type metadata accessor for SQLGenerationContext();
    swift_allocObject();
    uint64_t v26 = sub_24F779224(a1, v24, v25);
    sub_24F83BBF0((uint64_t)v39);
    swift_retain();
    uint64_t v27 = sub_24F76BCC0(v23, (uint64_t)v26);
    sub_24F83BBF0((uint64_t)v39);
    if (v2)
    {
      swift_release();
      sub_24F83BBF0((uint64_t)v39);
    }
    else
    {
      __dst[0] = v27;
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      sub_24F773C70();
      uint64_t v28 = sub_24F8CED30();
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      sub_24F83BBF0((uint64_t)v39);
      uint64_t v32 = Database.cachedStatement(sql:)(v28, v30);
      swift_bridgeObjectRelease();
      LODWORD(v28) = sqlite3_column_count(*(sqlite3_stmt **)(v32 + 16));
      swift_release();
      swift_release();
      return (int)v28;
    }
  }
  return a1;
}

uint64_t SQLSubquery.sqlSubquery.getter@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0xA2uLL);
  memcpy(a1, v1, 0xA2uLL);
  return sub_24F83BBF0((uint64_t)__dst);
}

uint64_t sub_24F83B5A4()
{
  memcpy(__dst, v0, sizeof(__dst));
  return sub_24F815A64();
}

uint64_t SQLSubqueryable.contains(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 16))(v10, a2, a3);
  sub_24F83B6E4((uint64_t)v10);
  sub_24F7AD780((uint64_t)v10, (uint64_t)v11);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_24F7811D0(a1, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(__src, v6, v7);
  int v8 = (unsigned char *)swift_allocObject();
  memcpy(v8 + 16, __src, 0xA3uLL);
  memcpy(v8 + 184, v11, 0xA2uLL);
  v8[346] = 0;
  v13[0] = v8;
  sub_24F7AD91C((uint64_t)v13);
  return sub_24F76F710((uint64_t)v13, a4);
}

uint64_t sub_24F83B6E4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 104) & 1;
  __int16 v2 = *(_WORD *)(result + 160) & 0x81FF | 0x2000;
  *(void *)(result + 64) &= 1uLL;
  *(void *)(result + 104) = v1;
  *(_WORD *)(result + 16sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v2;
  return result;
}

uint64_t sub_24F83B710()
{
  unsigned int v42 = *(unsigned __int16 *)(v0 + 176) | (*(unsigned __int8 *)(v0 + 178) << 16);
  uint64_t v38 = *(void *)(v0 + 160);
  uint64_t v40 = *(void *)(v0 + 168);
  sub_24F77294C();
  sub_24F76C98C(v1, v2, v3, v4, v5, v6, v7, v8, v18, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38, v40, v42);
  unsigned __int16 v43 = *(_WORD *)(v0 + 344);
  uint64_t v39 = *(void *)(v0 + 328);
  uint64_t v41 = *(void *)(v0 + 336);
  sub_24F77294C();
  sub_24F7AD880(v9, v10, v11, v12, v13, v14, v15, v16, v19, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43);
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SQLSubquery()
{
  return &type metadata for SQLSubquery;
}

uint64_t dispatch thunk of SQLSubqueryable.sqlSubquery.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t _s12GRDBInternal11SQLSubqueryV4ImplOwxx_0(uint64_t a1)
{
  __int16 v22 = *(_WORD *)(a1 + 160);
  uint64_t v20 = *(void *)(a1 + 144);
  uint64_t v21 = *(void *)(a1 + 152);
  sub_24F77294C();
  return sub_24F79138C(v8, v1, v2, v3, v4, v5, v6, v7, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
}

uint64_t _s12GRDBInternal11SQLSubqueryV4ImplOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  __int16 v24 = *(_WORD *)(a2 + 160);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  sub_24F7958C8(*(void *)a2, v11, v3, v4, v5, v6, v7, v8, v9, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24);
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 4sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 8sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 12sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(_WORD *)(a1 + 16sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v24;
  return a1;
}

uint64_t _s12GRDBInternal11SQLSubqueryV4ImplOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v37 = *(void *)(a2 + 72);
  uint64_t v38 = *(void *)(a2 + 80);
  uint64_t v39 = *(void *)(a2 + 88);
  uint64_t v40 = *(void *)(a2 + 96);
  uint64_t v41 = *(void *)(a2 + 104);
  uint64_t v42 = *(void *)(a2 + 112);
  uint64_t v43 = *(void *)(a2 + 120);
  uint64_t v44 = *(void *)(a2 + 128);
  uint64_t v45 = *(void *)(a2 + 136);
  uint64_t v46 = *(void *)(a2 + 144);
  uint64_t v47 = *(void *)(a2 + 152);
  __int16 v48 = *(_WORD *)(a2 + 160);
  sub_24F7958C8(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46,
    v47,
    v48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v37;
  *(void *)(a1 + 8sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v38;
  *(void *)(a1 + 88) = v39;
  *(void *)(a1 + 96) = v40;
  *(void *)(a1 + 104) = v41;
  *(void *)(a1 + 112) = v42;
  *(void *)(a1 + 12sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v43;
  *(void *)(a1 + 128) = v44;
  *(void *)(a1 + 136) = v45;
  uint64_t v12 = *(void *)(a1 + 144);
  uint64_t v13 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = v46;
  *(void *)(a1 + 152) = v47;
  __int16 v14 = *(_WORD *)(a1 + 160);
  *(_WORD *)(a1 + 16sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v48;
  __int16 v36 = v14;
  uint64_t v34 = v12;
  uint64_t v35 = v13;
  sub_24F77294C();
  sub_24F79138C(v15, v16, v17, v18, v19, v20, v21, v22, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  return a1;
}

uint64_t _s12GRDBInternal11SQLSubqueryV4ImplOwta_0(uint64_t a1)
{
  sub_24F77F400();
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  __int16 v4 = *(_WORD *)(a1 + 160);
  long long v6 = v5[1];
  *(_OWORD *)a1 = *v5;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = v5[5];
  *(_OWORD *)(a1 + 64) = v5[4];
  *(_OWORD *)(a1 + 8sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v8;
  long long v9 = v5[7];
  *(_OWORD *)(a1 + 96) = v5[6];
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = v5[9];
  *(_OWORD *)(a1 + 128) = v5[8];
  *(_OWORD *)(a1 + 144) = v10;
  *(_WORD *)(a1 + 16sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v11;
  __int16 v33 = v4;
  uint64_t v31 = v2;
  uint64_t v32 = v3;
  sub_24F77294C();
  sub_24F79138C(v12, v19, v13, v14, v15, v16, v17, v18, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
  return a1;
}

uint64_t sub_24F83BB8C(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 160) >> 15;
}

uint64_t sub_24F83BB98(uint64_t result)
{
  *(_WORD *)(result + 160) &= ~0x8000u;
  return result;
}

uint64_t sub_24F83BBA8(uint64_t result, __int16 a2)
{
  uint64_t v2 = *(void *)(result + 104) & 1;
  __int16 v3 = *(_WORD *)(result + 160) & 0x1FF | (a2 << 15);
  *(void *)(result + 64) &= 1uLL;
  *(void *)(result + 104) = v2;
  *(_WORD *)(result + 16sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SQLSubquery.Impl()
{
  return &type metadata for SQLSubquery.Impl;
}

uint64_t sub_24F83BBE4()
{
  return SQLSubqueryable.sqlExpression.getter();
}

uint64_t sub_24F83BBF0(uint64_t a1)
{
  sub_24F77F400();
  sub_24F77294C();
  v2();
  return a1;
}

uint64_t AnyDatabaseCancellable.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_24F798FB4(a1, v3);
  MEMORY[0x270FA5388](v5);
  long long v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  uint64_t v9 = sub_24F83BFA8((uint64_t)v7, v1, v3, v4);
  _s12GRDBInternal13DatabaseEventVwxx_0(a1);
  return v9;
}

uint64_t AnyDatabaseCancellable.__allocating_init(cancel:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  AnyDatabaseCancellable.init(cancel:)(a1, a2);
  return v4;
}

uint64_t sub_24F83BD84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_24F839BC8(v3, v4);
}

uint64_t AnyDatabaseCancellable.init(cancel:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  sub_24F839BC8(0, 0);
  return v2;
}

uint64_t sub_24F83BDC0(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  swift_beginAccess();
  if (*(void *)(a1 + 40))
  {
    sub_24F775458(v2, (uint64_t)&v6);
    uint64_t v3 = *((void *)&v7 + 1);
    uint64_t v4 = v8;
    sub_24F7811D0(&v6, *((uint64_t *)&v7 + 1));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v6);
  }
  uint64_t v8 = 0;
  long long v6 = 0u;
  long long v7 = 0u;
  swift_beginAccess();
  return sub_24F7E4F5C((uint64_t)&v6, v2);
}

uint64_t AnyDatabaseCancellable.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v4 = swift_retain();
    v2(v4);
    sub_24F839BC8(v2, v3);
    uint64_t v5 = *(void *)(v1 + 16);
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_24F839BC8(v5, *(void *)(v1 + 24));
  return v1;
}

uint64_t AnyDatabaseCancellable.__deallocating_deinit()
{
  AnyDatabaseCancellable.deinit();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t sub_24F83BF1C()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = swift_retain();
    v1(v3);
    sub_24F839BC8(v1, v2);
  }
  return sub_24F83BD84(0, 0);
}

uint64_t sub_24F83BF84()
{
  return sub_24F83BF1C();
}

uint64_t sub_24F83BFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[3] = a3;
  _OWORD v10[4] = a4;
  long long v6 = sub_24F76ADC4(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v6, a1, a3);
  uint64_t v7 = swift_allocObject();
  sub_24F775458((uint64_t)v10, v7 + 16);
  type metadata accessor for AnyDatabaseCancellable();
  uint64_t v8 = swift_allocObject();
  swift_retain();
  AnyDatabaseCancellable.init(cancel:)((uint64_t)sub_24F83C148, v7);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v10);
  swift_release();
  return v8;
}

uint64_t dispatch thunk of DatabaseCancellable.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for AnyDatabaseCancellable()
{
  return self;
}

uint64_t method lookup function for AnyDatabaseCancellable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AnyDatabaseCancellable);
}

uint64_t dispatch thunk of AnyDatabaseCancellable.__allocating_init(cancel:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of AnyDatabaseCancellable.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_24F83C108()
{
  if (*(void *)(v0 + 40)) {
    _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  }
  return swift_deallocObject();
}

uint64_t sub_24F83C148()
{
  return sub_24F83BDC0(v0);
}

uint64_t NSData.databaseValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24F8CE8D0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 3;
  return result;
}

uint64_t static NSData.fromDatabaseValue(_:)(uint64_t a1)
{
  uint64_t v3 = sub_24F8CEDD0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  int v9 = *(unsigned __int8 *)(a1 + 16);
  if (v9 == 3)
  {
    sub_24F78419C(*(void *)a1, *(void *)(a1 + 8));
  }
  else
  {
    uint64_t result = 0;
    if (v9 != 2) {
      return result;
    }
    sub_24F8CEDC0();
    uint64_t v7 = sub_24F8CED90();
    unint64_t v8 = v11;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v8 >> 60 == 15) {
      return 0;
    }
  }
  v12[1] = v7;
  void v12[2] = v8;
  sub_24F83C41C(v1, (uint64_t)&v13);
  sub_24F783E24(v7, v8);
  return v13;
}

uint64_t sub_24F83C2E0@<X0>(uint64_t a1@<X8>)
{
  return NSData.databaseValue.getter(a1);
}

uint64_t sub_24F83C304@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static NSData.fromDatabaseValue(_:)(a1);
  *a2 = result;
  return result;
}

uint64_t String.quotedDatabaseIdentifier.getter()
{
  return 34;
}

uint64_t GRDBPrecondition(_:_:file:line:)(uint64_t (*a1)(void), uint64_t a2, void (*a3)(void))
{
  uint64_t result = a1();
  if ((result & 1) == 0)
  {
    a3();
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24F83C41C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  sub_24F77AD10();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v7 = swift_dynamicCast();
  return sub_24F7771BC(a2, v7 ^ 1u, 1, a1);
}

uint64_t sub_24F83C4E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    for (uint64_t i = (void *)(v2 + 32); *i != a2; i += 3)
    {
      if (v3 == ++v4) {
        return swift_release();
      }
    }
    sub_24F83C7B4(v4);
    uint64_t v7 = v6;
    swift_release();
    sub_24F77835C(v7);
  }
  return swift_release();
}

uint64_t sub_24F83C56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a4;
  swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v23 = v5;
  uint64_t v24 = v4;
  MEMORY[0x270FA5388](v4);
  v22[0] = (char *)v22 - v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v25 = v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v22 - v11;
  sub_24F77AD10();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v22 - v16;
  uint64_t v18 = v26;
  uint64_t result = sub_24F8CF380();
  if (!v18)
  {
    uint64_t v20 = v25;
    if (sub_24F777048((uint64_t)v12, 1, AssociatedTypeWitness) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, AssociatedTypeWitness);
      uint64_t v21 = v22[0];
      sub_24F8CF480();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, AssociatedTypeWitness);
    }
  }
  return result;
}

void sub_24F83C7B4(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F83CC14();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_24F780F10((char *)(v3 + 24 * a1 + 56), v4 - 1 - a1, (char *)(v3 + 24 * a1 + 32));
    *(void *)(v3 + 16) = v5;
    *uint64_t v1 = v3;
  }
}

void sub_24F83C848(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F83CC28();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_24F8B4E84((char *)(v3 + 16 * a1 + 48), v4 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(void *)(v3 + 16) = v5;
    *uint64_t v1 = v3;
  }
}

void sub_24F83C8D4(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_24F83CC38(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    sub_24F8B4ECC((char *)(v6 + 8 * a1 + 40), v7 - 1 - a1, (char *)(v6 + 8 * a1 + 32));
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x1sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v8;
    sub_24F8CF0B0();
  }
}

void sub_24F83C968(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F83CCB4();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_24F780F10((char *)(v3 + 24 * a1 + 56), v4 - 1 - a1, (char *)(v3 + 24 * a1 + 32));
    *(void *)(v3 + 16) = v5;
    *uint64_t v1 = v3;
  }
}

Swift::String __swiftcall databaseQuestionMarks(count:)(Swift::Int count)
{
  if (count < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24F781274(&qword_26B1F7228);
    sub_24F83CA64();
    count = sub_24F8CED30();
  }
  result._object = v1;
  result._uint64_t countAndFlagsBits = count;
  return result;
}

unint64_t sub_24F83CA64()
{
  unint64_t result = qword_26B1F7268;
  if (!qword_26B1F7268)
  {
    sub_24F7688B8(&qword_26B1F7228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7268);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrintOutputStream()
{
  return &type metadata for PrintOutputStream;
}

uint64_t sub_24F83CAC8(uint64_t a1, uint64_t a2)
{
  sub_24F781274(qword_269A2B8D8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24F8DDBF0;
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 4sub_24F8565FC((uint64_t)sub_24F83A860, 0) = a2;
  swift_bridgeObjectRetain();
  sub_24F8CFF10();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F83CB70(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = a1();
  return a3(v4);
}

uint64_t sub_24F83CBB4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24F83CBDC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

void sub_24F83CC14()
{
}

void sub_24F83CC28()
{
}

void sub_24F83CC38(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x253364070);
}

void sub_24F83CCB4()
{
}

void sub_24F83CCC4()
{
}

void sub_24F83CCD4()
{
}

void sub_24F83CCE4()
{
}

void sub_24F83CCF4()
{
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_24F83CD04()
{
  uint64_t v0 = sub_24F8CF1B0();
  nullsub_1(v0);
}

uint64_t sub_24F83CD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_24F795698();
    uint64_t v10 = v18;
    uint64_t v11 = (void *)(a1 + 32);
    for (uint64_t i = v7 - 1; ; --i)
    {
      v16[1] = *v11;
      swift_bridgeObjectRetain();
      sub_24F84039C(a3, a4, v16, __src);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return v10;
      }
      uint64_t v5 = 0;
      swift_bridgeObjectRelease();
      memcpy(__dst, __src, sizeof(__dst));
      uint64_t v18 = v10;
      unint64_t v13 = *(void *)(v10 + 16);
      if (v13 >= *(void *)(v10 + 24) >> 1)
      {
        sub_24F795698();
        uint64_t v10 = v18;
      }
      *(void *)(v10 + 16) = v13 + 1;
      memcpy((void *)(v10 + 168 * v13 + 32), __dst, 0xA3uLL);
      if (!i) {
        break;
      }
      ++v11;
    }
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24F83CED0(uint64_t a1)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  unsigned char v20[168];
  unsigned char v21[168];
  void v22[21];
  unsigned char v23[168];
  void v24[21];
  unsigned char v25[168];
  uint64_t __src[21];
  uint64_t v27;
  unsigned char v28[168];
  void v29[3];
  uint64_t v30;
  uint64_t v31;
  __n128 __dst[10];
  long long v33;
  long long v34;
  uint64_t v35;
  void v36[21];
  uint64_t v37;
  uint64_t *v38;

  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_24F795698();
    uint64_t v38 = &v27;
    uint64_t v4 = a1 + 48;
    while (1)
    {
      uint64_t v5 = *(void *)(v4 - 16);
      uint64_t v6 = *(void *)(v4 - 8);
      sub_24F781214(v4, (uint64_t)__src, &qword_26B1F7AC0);
      uint64_t v7 = __src[3];
      if (__src[3])
      {
        uint64_t v8 = __src[4];
        uint64_t v9 = sub_24F7811D0(__src, __src[3]);
        *((void *)&v34 + 1) = v7;
        uint64_t v35 = *(void *)(v8 + 8);
        uint64_t v10 = sub_24F76ADC4((uint64_t *)&v33);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v10, v9, v7);
        swift_bridgeObjectRetain();
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)__src);
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_24F774DA0((uint64_t)__src, &qword_26B1F7AC0);
        __int16 v33 = 0u;
        uint64_t v34 = 0u;
        uint64_t v35 = 0;
      }
      sub_24F781214((uint64_t)&v33, (uint64_t)v29, &qword_26B1F7350);
      uint64_t v11 = v30;
      if (v30)
      {
        uint64_t v12 = v31;
        sub_24F7811D0(v29, v30);
        unint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 8);
        swift_bridgeObjectRetain();
        v13(__src, v11, v12);
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v29);
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_24F774DA0((uint64_t)v29, &qword_26B1F7350);
        v36[1] = 0;
        v36[0] = 0;
        LOBYTE(v36[2]) = 4;
        sub_24F7667B8((uint64_t)v36);
        sub_24F76F710((uint64_t)v36, (uint64_t)__src);
      }
      memcpy(__dst, __src, 0xA3uLL);
      v24[0] = v5;
      v24[1] = v6;
      sub_24F7991DC((uint64_t)v24);
      sub_24F76F710((uint64_t)v24, (uint64_t)v25);
      sub_24F76F710((uint64_t)v24, (uint64_t)__src);
      sub_24F76F710((uint64_t)__dst, (uint64_t)v38);
      sub_24F76F710((uint64_t)__dst, (uint64_t)v28);
      if (sub_24F76F978((uint64_t)v28) != 2) {
        break;
      }
      uint64_t v14 = sub_24F76F774((uint64_t)v28);
      uint64_t v15 = *(void *)v14;
      uint64_t v16 = *(void *)(v14 + 8);
      uint64_t v17 = *(unsigned __int8 *)(v14 + 16);
      if (v17 != 4 || v16 | v15)
      {
        sub_24F84192C(__dst);
        swift_bridgeObjectRetain();
        sub_24F84192C(__dst);
        sub_24F781F10(0, 0, 4);
        sub_24F781F10(v15, v16, v17);
        goto LABEL_15;
      }
      sub_24F84192C(__dst);
      swift_bridgeObjectRetain();
      sub_24F84192C(__dst);
      sub_24F781F10(0, 0, 4);
      sub_24F781F10(0, 0, 4);
      swift_bridgeObjectRetain();
      sub_24F7DA038((uint64_t)__src);
      memcpy(v21, v25, 0xA3uLL);
      v22[0] = 0;
      v22[1] = 0;
      LOBYTE(v22[2]) = 4;
      sub_24F7667B8((uint64_t)v22);
      sub_24F76F710((uint64_t)v22, (uint64_t)v23);
      memcpy(v20, v23, 0xA3uLL);
      sub_24F815BAC(2, v21, v20, v36);
      swift_bridgeObjectRelease();
      sub_24F84192C(__dst);
      swift_bridgeObjectRelease();
LABEL_16:
      sub_24F774DA0((uint64_t)&v33, &qword_26B1F7350);
      swift_bridgeObjectRelease();
      memcpy(v23, v36, 0xA3uLL);
      uint64_t v2 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F795698();
        uint64_t v2 = v37;
      }
      uint64_t v18 = *(void *)(v2 + 16);
      if (v18 >= *(void *)(v2 + 24) >> 1)
      {
        sub_24F795698();
        uint64_t v2 = v37;
      }
      v4 += 56;
      *(void *)(v2 + 16) = v18 + 1;
      memcpy((void *)(v2 + 168 * v18 + 32), v23, 0xA3uLL);
      if (!--v1) {
        return v2;
      }
    }
    swift_bridgeObjectRetain();
    sub_24F84192C(__dst);
LABEL_15:
    sub_24F7DA038((uint64_t)__src);
    memcpy(v23, v25, 0xA3uLL);
    memcpy(v22, __dst, 0xA3uLL);
    sub_24F815BAC(0, v23, v22, v36);
    sub_24F84192C(__dst);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return v2;
}

uint64_t sub_24F83D3C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_24F796044();
    uint64_t v2 = v17;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    for (uint64_t i = v1 - 1; ; --i)
    {
      uint64_t v7 = *(v4 - 1);
      uint64_t v6 = *v4;
      unint64_t v13 = &type metadata for SQLExpression;
      uint64_t v14 = &protocol witness table for SQLExpression;
      *(void *)&long long v12 = swift_allocObject();
      uint64_t v8 = (void *)(v12 + 16);
      v15[0] = v7;
      v15[1] = v6;
      sub_24F7991DC((uint64_t)v15);
      sub_24F76F710((uint64_t)v15, (uint64_t)__src);
      memcpy(v8, __src, 0xA3uLL);
      uint64_t v17 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
      {
        sub_24F796044();
        uint64_t v2 = v17;
      }
      *(void *)(v2 + 16) = v10 + 1;
      sub_24F794DE0(&v12, v2 + 40 * v10 + 32);
      if (!i) {
        break;
      }
      v4 += 2;
    }
  }
  return v2;
}

uint64_t sub_24F83D50C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_24F7960CC();
  uint64_t v7 = v29;
  uint64_t v8 = (char *)(a1 + 32);
  uint64_t v9 = v5 - 1;
  while (2)
  {
    memcpy(__dst, v8, sizeof(__dst));
    uint64_t v25 = &type metadata for SQLSelection;
    uint64_t v26 = &protocol witness table for SQLSelection;
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = (void *)(v10 + 16);
    *(void *)&long long v24 = v10;
    sub_24F7997BC((uint64_t)__dst, (uint64_t)v28);
    switch(sub_24F799818((uint64_t)v28))
    {
      case 1u:
        long long v12 = (const void *)sub_24F799910((uint64_t)v28);
        memcpy(v23, v12, 0xA3uLL);
        sub_24F8419D8((__n128 *)__dst);
        sub_24F814C38(a2, __src);
        sub_24F8419D8((__n128 *)__dst);
        memcpy(v22, __src, 0xA3uLL);
        sub_24F799920(v22);
        goto LABEL_8;
      case 2u:
        unint64_t v13 = (__n128 *)sub_24F799910((uint64_t)v28);
        uint64_t v20 = v3;
        unint64_t v15 = v13[10].n128_u64[1];
        unint64_t v14 = v13[11].n128_u64[0];
        memcpy(v23, v13, 0xA3uLL);
        sub_24F8419D8((__n128 *)__dst);
        sub_24F8419D8((__n128 *)__dst);
        sub_24F814C38(a2, __src);
        sub_24F84192C(v13);
        sub_24F8419D8((__n128 *)__dst);
        memcpy(v22, __src, 0xA8uLL);
        v22[21] = v15;
        v22[22] = v14;
        uint64_t v3 = v20;
        sub_24F7998DC(v22);
        goto LABEL_8;
      case 3u:
        sub_24F799910((uint64_t)v28);
        sub_24F8419D8((__n128 *)__dst);
        sub_24F8419D8((__n128 *)__dst);
        swift_retain();
        sub_24F8511E4();
        uint64_t v17 = v16;
        sub_24F8419D8((__n128 *)__dst);
        sub_24F8419D8((__n128 *)__dst);
        v22[0] = v17;
        sub_24F799834(v22);
LABEL_8:
        sub_24F7997BC((uint64_t)v22, (uint64_t)v23);
        memcpy(v11, v23, 0xB8uLL);
        goto LABEL_11;
      case 4u:
        v22[0] = a2;
        sub_24F799954(v22);
        sub_24F7997BC((uint64_t)v22, (uint64_t)v23);
        memcpy(v11, v23, 0xB8uLL);
        swift_retain();
        goto LABEL_10;
      default:
        sub_24F799910((uint64_t)v28);
        memcpy(v11, __dst, 0xB8uLL);
LABEL_10:
        sub_24F8419D8((__n128 *)__dst);
LABEL_11:
        uint64_t v29 = v7;
        unint64_t v18 = *(void *)(v7 + 16);
        if (v18 >= *(void *)(v7 + 24) >> 1)
        {
          sub_24F7960CC();
          uint64_t v7 = v29;
        }
        *(void *)(v7 + 16) = v18 + 1;
        sub_24F794DE0(&v24, v7 + 40 * v18 + 32);
        if (v9)
        {
          v8 += 184;
          --v9;
          continue;
        }
        swift_release();
        return v7;
    }
  }
}

uint64_t FilteredRequest.none()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void (*)(uint64_t@<X8>), void, uint64_t, uint64_t))(a2 + 8))(sub_24F83F798, 0, a1, a2);
}

uint64_t SelectionRequest.select(_:)()
{
  sub_24F777204();
  sub_24F77DB40();
  uint64_t v1 = sub_24F77229C();
  sub_24F785908(v1);
  sub_24F780904();
  v0();
  sub_24F773598();
  return swift_release();
}

uint64_t SelectionRequest.annotated(with:)()
{
  sub_24F777204();
  sub_24F77DB40();
  *(void *)(sub_24F77229C() + 16) = v1;
  uint64_t v2 = *(void (**)(void))(v0 + 16);
  swift_bridgeObjectRetain();
  sub_24F780904();
  v2();
  sub_24F773598();
  return swift_release();
}

uint64_t FilteredRequest.filter(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F83F618(a1, a2, a3, (uint64_t)&unk_27010A5B8, (void (*)(unsigned char *, uint64_t))sub_24F794DE0, (uint64_t)sub_24F83F7EC);
}

{
  return sub_24F83F618(a1, a2, a3, (uint64_t)&unk_27010A720, (void (*)(unsigned char *, uint64_t))sub_24F794DE0, (uint64_t)sub_24F841790);
}

void TableRequest<>.filter<A>(key:)()
{
  sub_24F76B80C();
  v24[2] = v0;
  v24[3] = v1;
  v24[1] = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v25 = v7;
  uint64_t v9 = v8;
  uint64_t v10 = sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v12 = v11;
  sub_24F771D60();
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)v24 - v14;
  sub_24F77AD10();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18);
  sub_24F76B830();
  uint64_t v21 = v20 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v9, v10);
  if (sub_24F777048((uint64_t)v15, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
    (*(void (**)(void (*)(uint64_t@<X8>), void, uint64_t, uint64_t))(v4 + 8))(sub_24F83F798, 0, v25, v4);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v21, v15, v6);
    sub_24F8414D0(v6, v6);
    swift_allocObject();
    uint64_t v22 = sub_24F8CF0C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v23, v21, v6);
    sub_24F83CD04();
    uint64_t v26 = v22;
    sub_24F8CF1B0();
    swift_getWitnessTable();
    TableRequest<>.filter<A>(keys:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v6);
  }
  sub_24F77344C();
}

void TableRequest<>.filter<A>(keys:)()
{
  sub_24F76B80C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v42 = v15;
  uint64_t v43 = v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (sub_24F76AE28(AssociatedTypeWitness))
  {
    uint64_t v41 = v0;
    uint64_t v18 = swift_getAssociatedTypeWitness();
    if (v18 == sub_24F8CE970())
    {
      uint64_t v20 = sub_24F76B784();
      uint64_t v22 = v21(v20);
      uint64_t v40 = v45;
      int v39 = v46;
      MEMORY[0x270FA5388](v22);
      v30[0] = v14;
      v30[1] = v12;
      uint64_t v31 = v10;
      uint64_t v32 = (uint64_t)v8;
      uint64_t v33 = v6;
      uint64_t v34 = v4;
      uint64_t v35 = v2;
      __int16 v36 = v44;
      uint64_t v37 = v23;
      char v38 = v24;
      uint64_t v44 = (void *)sub_24F8CEFD0();
      sub_24F781274(&qword_26B1F7348);
      sub_24F778988((unint64_t *)&qword_26B1F72B0, &qword_26B1F7348);
      sub_24F77BDC0();
      sub_24F83FA54();
      sub_24F7B6734(v36, v45, v46);
    }
    else
    {
      if (v18 != sub_24F8CE9C0()) {
        goto LABEL_4;
      }
      uint64_t v25 = sub_24F76B784();
      uint64_t v27 = v26(v25);
      MEMORY[0x270FA5388](v27);
      uint64_t v31 = v14;
      uint64_t v32 = v12;
      uint64_t v33 = v10;
      uint64_t v34 = v8;
      uint64_t v35 = v6;
      __int16 v36 = v4;
      uint64_t v37 = v2;
      char v38 = v28;
      uint64_t v44 = (void *)sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F841534, (uint64_t)v30, v12, (uint64_t)&type metadata for DatabaseValue, MEMORY[0x263F8E628], (uint64_t)v4, MEMORY[0x263F8E658], v29);
      sub_24F781274(&qword_26B1F7348);
      sub_24F778988((unint64_t *)&qword_26B1F72B0, &qword_26B1F7348);
      sub_24F77BDC0();
      sub_24F83FA54();
    }
    swift_bridgeObjectRelease();
    sub_24F77344C();
    return;
  }
LABEL_4:
  sub_24F77344C();
  sub_24F83FA54();
}

#error "24F83E06C: call analysis failed (funcsize=59)"

uint64_t TableRequest<>.filter(keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_24F777204();
  sub_24F843AF8();
  if (*(void *)(v12 + 16))
  {
    uint64_t v14 = v12;
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v11, v13);
    uint64_t v17 = v16;
    uint64_t v18 = (void *)sub_24F7818CC();
    void v18[2] = v14;
    v18[3] = v15;
    void v18[4] = v17;
    uint64_t v19 = *(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), void *, uint64_t, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    v19(sub_24F8415E4, v18, v11, v10);
    sub_24F773598();
    return swift_release();
  }
  else
  {
    sub_24F773598();
    return v27(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
  }
}

uint64_t OrderedRequest.order(_:)()
{
  return sub_24F83E2E4();
}

{
  return sub_24F83E2E4();
}

uint64_t TableRequest<>.orderByPrimaryKey()()
{
  sub_24F777204();
  sub_24F7710EC();
  v0();
  uint64_t v1 = swift_allocObject();
  sub_24F7824D0(v1);
  sub_24F773720();
  v2();
  sub_24F773598();
  return swift_release();
}

uint64_t sub_24F83E2E4()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_24F77229C();
  *(void *)(v8 + 16) = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8);
  swift_bridgeObjectRetain();
  v9(v1, v8, v5, v3);
  sub_24F77344C();
  return swift_release();
}

void TableRequest<>.filter(id:)()
{
  sub_24F76B80C();
  sub_24F77CE9C();
  uint64_t v2 = v1;
  sub_24F780E9C();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F8CF610();
  sub_24F77AD10();
  sub_24F771D60();
  MEMORY[0x270FA5388](v4);
  sub_24F77BF80();
  sub_24F773974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v2, AssociatedTypeWitness);
  sub_24F7771BC(v0, 0, 1, AssociatedTypeWitness);
  sub_24F771E8C();
  uint64_t v6 = sub_24F76B98C();
  v7(v6);
  sub_24F77344C();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  sub_24F76B80C();
  sub_24F77CE9C();
  uint64_t v2 = v1;
  sub_24F780E9C();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F8CF610();
  sub_24F77AD10();
  sub_24F771D60();
  MEMORY[0x270FA5388](v4);
  sub_24F77BF80();
  sub_24F773974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v2, AssociatedTypeWitness);
  sub_24F7771BC(v0, 0, 1, AssociatedTypeWitness);
  sub_24F771E8C();
  uint64_t v6 = sub_24F76B98C();
  v7(v6);
  sub_24F77344C();
}

uint64_t sub_24F83E5E4(void (*a1)(char *, void (*)(char *, uint64_t, uint64_t)), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v62 = a8;
  uint64_t v63 = a5;
  uint64_t v9 = v8;
  uint64_t v75 = a4;
  int v76 = a1;
  uint64_t v77 = a2;
  sub_24F77AD10();
  uint64_t v61 = v11;
  MEMORY[0x270FA5388](v12);
  sub_24F7829EC();
  uint64_t v74 = v13;
  MEMORY[0x270FA5388](v14);
  unint64_t v72 = (char *)v59 - v15;
  uint64_t v17 = v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v73 = v19;
  sub_24F771D60();
  MEMORY[0x270FA5388](v20);
  uint64_t v60 = (char *)v59 - v21;
  sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v64 = v23;
  uint64_t v65 = v22;
  MEMORY[0x270FA5388](v22);
  sub_24F7829EC();
  uint64_t v70 = v24;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)v59 - v27;
  MEMORY[0x270FA5388](v26);
  sub_24F7829EC();
  v59[1] = v29;
  MEMORY[0x270FA5388](v30);
  sub_24F77AD10();
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v33);
  sub_24F77BBBC();
  uint64_t v69 = v34;
  uint64_t v68 = a6;
  uint64_t v71 = v17;
  uint64_t v78 = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v66 = v35;
  sub_24F771D60();
  MEMORY[0x270FA5388](v36);
  sub_24F77BF80();
  uint64_t v37 = sub_24F8CEFC0();
  uint64_t v79 = sub_24F8CF8E0();
  uint64_t v75 = sub_24F8CF8F0();
  sub_24F8CF890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v69, v67, v71);
  uint64_t result = sub_24F8CEFB0();
  if (v37 < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (v37)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_24F8CF660();
      uint64_t result = sub_24F780558((uint64_t)v28);
      if (v39) {
        goto LABEL_19;
      }
      v76(v28, v74);
      if (v9)
      {
        uint64_t v51 = sub_24F77F048();
        v52(v51);
        swift_release();
        (*(void (**)(uint64_t, void, uint64_t))(v61 + 32))(v62, v74, v63);
        uint64_t v53 = sub_24F781DFC();
        return v54(v53);
      }
      uint64_t v9 = 0;
      uint64_t v40 = sub_24F781DFC();
      v41(v40);
      sub_24F8CF8D0();
      if (!--v37)
      {
        uint64_t v42 = v73;
        uint64_t v43 = v70;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v42 = v73;
  uint64_t v43 = v70;
LABEL_9:
  sub_24F8CF660();
  sub_24F780558(v43);
  if (v39)
  {
    uint64_t v46 = v70;
LABEL_15:
    uint64_t v49 = sub_24F77F048();
    v50(v49);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v46, v65);
    return v79;
  }
  else
  {
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
    uint64_t v73 = v42 + 32;
    uint64_t v74 = v44;
    uint64_t v45 = v60;
    uint64_t v46 = v70;
    while (1)
    {
      v74(v45, v46, AssociatedTypeWitness);
      v76(v45, (void (*)(char *, uint64_t, uint64_t))v72);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      uint64_t v47 = sub_24F7803B8();
      v48(v47);
      sub_24F8CF8D0();
      sub_24F8CF660();
      sub_24F780558(v46);
      if (v39) {
        goto LABEL_15;
      }
    }
    uint64_t v55 = sub_24F7803B8();
    v56(v55);
    uint64_t v57 = sub_24F77F048();
    v58(v57);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v61 + 32))(v62, v72, v63);
  }
}

uint64_t JoinableRequest.including<A>(all:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(*(void *)(a5 + 8) + 16) + 8))(&v17, a3);
  sub_24F7830AC();
  uint64_t v13 = sub_24F77E270(v5, v6, v7, v8, v9, v10, v11, v12, v16);
  v14(v13);
  return swift_bridgeObjectRelease();
}

uint64_t JoinableRequest.including<A>(optional:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_24F77FF64(a1, a2, a3);
  v4(v3);
  sub_24F7830AC();
  uint64_t v13 = sub_24F77E270(v5, v6, v7, v8, v9, v10, v11, v12, v16);
  v14(v13);
  return swift_bridgeObjectRelease();
}

uint64_t JoinableRequest.including<A>(required:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_24F77FF64(a1, a2, a3);
  v4(v3);
  sub_24F7830AC();
  uint64_t v13 = sub_24F77E270(v5, v6, v7, v8, v9, v10, v11, v12, v16);
  v14(v13);
  return swift_bridgeObjectRelease();
}

uint64_t JoinableRequest.joining<A>(optional:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_24F77FF64(a1, a2, a3);
  v4(v3);
  sub_24F7830AC();
  uint64_t v13 = sub_24F77E270(v5, v6, v7, v8, v9, v10, v11, v12, v16);
  v14(v13);
  return swift_bridgeObjectRelease();
}

uint64_t JoinableRequest.joining<A>(required:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_24F77FF64(a1, a2, a3);
  v4(v3);
  sub_24F7830AC();
  uint64_t v13 = sub_24F77E270(v5, v6, v7, v8, v9, v10, v11, v12, v16);
  v14(v13);
  return swift_bridgeObjectRelease();
}

void JoinableRequest<>.annotated<A>(withOptional:)()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_24F77AD10();
  uint64_t v24 = v8;
  MEMORY[0x270FA5388](v9);
  sub_24F76B830();
  uint64_t v12 = v11 - v10;
  sub_24F77AD10();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_24F77BBBC();
  uint64_t v25 = v16;
  type metadata accessor for TableAlias();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(unsigned char *)(v17 + 48) = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v1 + 16) + 8))(&v26, v5);
  uint64_t v18 = *(void *)(v26 + 16);
  if (v18)
  {
    uint64_t v23 = v3;
    memcpy(v27, (const void *)(v26 + 232 * v18 - 200), 0xE3uLL);
    sub_24F79900C((uint64_t)v27);
    swift_bridgeObjectRelease();
    uint64_t v19 = v27[11];
    uint64_t v20 = v27[12];
    sub_24F7D8D44(&v27[8]);
    sub_24F7AD5F4((uint64_t)v27);
    swift_retain();
    sub_24F7920F8(&v27[8]);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v1 + 8) + 48) + 16))(v17, v5);
    JoinableRequest.joining<A>(optional:)(v12, v7, v5);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v12, v5);
    uint64_t v21 = (void *)sub_24F7818CC();
    void v21[2] = v19;
    _OWORD v21[3] = v20;
    uint64_t v21[4] = v17;
    uint64_t v22 = *(void (**)(uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v23 + 16);
    swift_retain();
    swift_retain();
    v22(sub_24F84165C, v21, v7, v23);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v25, v7);
    sub_24F77344C();
  }
  else
  {
    __break(1u);
  }
}

void JoinableRequest<>.annotated<A>(withRequired:)()
{
  sub_24F76B80C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_24F77AD10();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_24F76B830();
  uint64_t v14 = v13 - v12;
  sub_24F77AD10();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_24F773918();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v18 + 16) + 8))(&v28, v19);
  uint64_t v20 = *(void *)(v28 + 16);
  if (v20)
  {
    uint64_t v27 = v4;
    uint64_t v21 = v16;
    memcpy(v29, (const void *)(v28 + 232 * v20 - 200), 0xE3uLL);
    sub_24F79900C((uint64_t)v29);
    swift_bridgeObjectRelease();
    uint64_t v22 = v29[12];
    uint64_t v26 = v29[11];
    sub_24F7D8D44(&v29[8]);
    sub_24F7AD5F4((uint64_t)v29);
    swift_retain();
    sub_24F7920F8(&v29[8]);
    type metadata accessor for TableAlias();
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = 0u;
    *(_OWORD *)(v23 + 32) = 0u;
    *(unsigned char *)(v23 + 48) = 0;
    (*(void (**)(void))(*(void *)(*(void *)(v2 + 8) + 48) + 16))();
    JoinableRequest.joining<A>(required:)(v14, v8, v6);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v6);
    uint64_t v24 = (void *)sub_24F7818CC();
    v24[2] = v26;
    v24[3] = v22;
    void v24[4] = v23;
    uint64_t v25 = *(void (**)(uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v27 + 16);
    swift_retain();
    swift_retain();
    v25(sub_24F843AC8, v24, v8, v27);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v0, v8);
    sub_24F77344C();
  }
  else
  {
    __break(1u);
  }
}

uint64_t DerivableRequest.annotated(with:)()
{
  return sub_24F8CF020();
}

void DerivableRequest.having(_:)()
{
  sub_24F777204();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_24F77AD10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_24F773918();
  long long v12 = *v9;
  uint64_t v10 = *((void *)v9 + 2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, v0, v5);
  v13[1] = *((void *)&v12 + 1);
  void v13[2] = v10;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for AssociationAggregate();
  sub_24F82E85C(v1, v11, v5, v3);
  void v13[3] = &type metadata for SQLExpression;
  v13[4] = &protocol witness table for SQLExpression;
  v13[0] = swift_allocObject();
  memcpy((void *)(v13[0] + 16), v14, 0xA3uLL);
  AggregatingRequest.having(_:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v13);
  sub_24F773598();
}

uint64_t TableRequest<>.groupByPrimaryKey()()
{
  sub_24F777204();
  sub_24F7710EC();
  v0();
  uint64_t v1 = swift_allocObject();
  sub_24F7824D0(v1);
  sub_24F773720();
  v2();
  sub_24F773598();
  return swift_release();
}

uint64_t SelectionRequest.select(sql:arguments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return sub_24F840B0C(a1, a2, a3, a4, a5, &qword_26B1F7600, (uint64_t)&protocol witness table for SQL, (void (*)(uint64_t, uint64_t, uint64_t))SelectionRequest.select(_:));
}

uint64_t SelectionRequest.select(literal:)()
{
  return sub_24F840C48();
}

uint64_t sub_24F83F618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *, uint64_t), uint64_t a6)
{
  sub_24F7E99C8(a1, (uint64_t)v12);
  uint64_t v10 = swift_allocObject();
  a5(v12, v10 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8))(a6, v10, a2, a3);
  return swift_release();
}

uint64_t sub_24F83F6C8@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = sub_24F7811D0(a1, v3);
  a2[3] = v3;
  a2[4] = *(void *)(v4 + 8);
  uint64_t v6 = sub_24F76ADC4(a2);
  return (*(uint64_t (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(v6, v5, v3);
}

uint64_t FilteredRequest.filter(sql:arguments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return sub_24F840DA8(a1, a2, a3, a4, a5, (uint64_t)&protocol witness table for SQL, (void (*)(void *, uint64_t, uint64_t))FilteredRequest.filter(_:));
}

uint64_t FilteredRequest.filter(literal:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_24F840EBC(a1, a2, a3, (uint64_t)&protocol witness table for SQL, (void (*)(void *, uint64_t, uint64_t))FilteredRequest.filter(_:));
}

void sub_24F83F798(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = MEMORY[0x263F8D4F8];
  *(void *)(a1 + 32) = &protocol witness table for Bool;
  *(unsigned char *)a1 = 0;
}

uint64_t sub_24F83F7B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F83F7EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F83F6C8((void *)(v1 + 16), a1);
}

uint64_t sub_24F83F808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v9 = sub_24F8CE970();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  *(void *)&long long v24 = a2;
  *((void *)&v24 + 1) = a3;
  char v25 = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v22 - v14, a1, AssociatedTypeWitness);
  swift_dynamicCast();
  sub_24F7BE118((uint64_t)v12, (uint64_t)v26);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = v27;
  if (v27)
  {
    uint64_t v17 = v28;
    sub_24F7811D0(v26, v27);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v17 + 24))(&v24, v16, v17);
    long long v22 = v24;
    char v18 = v25;
    uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v26);
    long long v20 = v22;
  }
  else
  {
    uint64_t result = sub_24F774DA0((uint64_t)v26, &qword_26B1F7AC0);
    long long v20 = 0uLL;
    char v18 = -1;
  }
  uint64_t v21 = v23;
  *uint64_t v23 = v20;
  *((unsigned char *)v21 + 16) = v18;
  return result;
}

void sub_24F83FA54()
{
  sub_24F76B80C();
  uint64_t v23 = v0;
  uint64_t v24 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  sub_24F77AD10();
  MEMORY[0x270FA5388](v12);
  sub_24F76B830();
  (*(void (**)(uint64_t))(v15 + 16))(v14 - v13);
  swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_24F8CF1D0();
  sub_24F8CF1B0();
  swift_getWitnessTable();
  if (sub_24F8CF410())
  {
    swift_bridgeObjectRelease();
    sub_24F843AE0();
    v17();
  }
  else
  {
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v11, v5);
    uint64_t v20 = v19;
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v11;
    _OWORD v21[3] = v9;
    uint64_t v21[4] = v7;
    void v21[5] = v5;
    v21[6] = v23;
    v21[7] = v3;
    unsigned char v21[8] = v24;
    v21[9] = v18;
    __n128 v21[10] = v20;
    v21[11] = v16;
    sub_24F843AE0();
    v22();
    swift_release();
  }
  sub_24F77344C();
}

uint64_t sub_24F83FC48(uint64_t a1, char a2)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24F8CE9C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - v9, a1, AssociatedTypeWitness);
  swift_dynamicCast();
  if (a2)
  {
    if (a2 == 1)
    {
      uint64_t v11 = sub_24F8CE990();
      uint64_t v40 = (ValueMetadata *)MEMORY[0x263F8D310];
      uint64_t v41 = &protocol witness table for String;
      uint64_t v37 = v11;
      uint64_t v38 = v12;
    }
    else
    {
      sub_24F8CE990();
      uint64_t v22 = sub_24F8CED00();
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v40 = (ValueMetadata *)MEMORY[0x263F8D310];
      uint64_t v41 = &protocol witness table for String;
      uint64_t v37 = v22;
      uint64_t v38 = v24;
    }
  }
  else
  {
    uint64_t v40 = &type metadata for DatabaseValue;
    uint64_t v41 = &protocol witness table for DatabaseValue;
    uint64_t v28 = sub_24F8CE9B0();
    char v29 = v13;
    char v30 = v14;
    char v31 = v15;
    char v32 = v16;
    char v33 = v17;
    char v34 = v18;
    char v35 = v19;
    char v36 = v20;
    uint64_t v37 = MEMORY[0x253363140](&v28, 16);
    uint64_t v38 = v21;
    char v39 = 3;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v25 = v40;
  uint64_t v26 = v41;
  sub_24F7811D0(&v37, (uint64_t)v40);
  ((void (*)(ValueMetadata *, _UNKNOWN **))v26[3])(v25, v26);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v37);
}

uint64_t sub_24F83FF70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = Database.primaryKey(_:)(a1, a2, &v25);
  if (!v7)
  {
    uint64_t v12 = (uint64_t)v25;
    uint64_t v11 = v26;
    int v13 = v27;
    unint64_t v24 = v26;
    if (v27)
    {
      if (v27 == 1) {
        char v14 = v25;
      }
      else {
        char v14 = &unk_2700FEBA0;
      }
    }
    else
    {
      sub_24F781274((uint64_t *)&unk_26B1F7C88);
      uint64_t v15 = swift_allocObject();
      uint64_t v11 = v24;
      char v14 = (void *)v15;
      *(_OWORD *)(v15 + 16) = xmmword_24F8DDBF0;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 4sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v24;
    }
    uint64_t v16 = v14[2];
    sub_24F7903D0(v12, v11, v13);
    swift_bridgeObjectRelease();
    if (v16 == 1)
    {
      uint64_t v30 = a3;
      if (v13)
      {
        if (v13 == 1) {
          char v17 = (_OWORD *)v12;
        }
        else {
          char v17 = &unk_2700FEB70;
        }
      }
      else
      {
        sub_24F781274((uint64_t *)&unk_26B1F7C88);
        char v17 = (_OWORD *)swift_allocObject();
        v17[1] = xmmword_24F8DDBF0;
        *((void *)v17 + 4) = v12;
        *((void *)v17 + 5) = v24;
      }
      if (*((void *)v17 + 2))
      {
        char v19 = (void *)*((void *)v17 + 4);
        unint64_t v18 = *((void *)v17 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v28 = &type metadata for Column;
        char v29 = &protocol witness table for Column;
        char v25 = v19;
        unint64_t v26 = v18;
        a4[3] = (uint64_t)&type metadata for SQLExpression;
        a4[4] = (uint64_t)&protocol witness table for SQLExpression;
        uint64_t v20 = swift_allocObject();
        uint64_t v21 = (void *)(v20 + 16);
        *a4 = v20;
        swift_getAssociatedTypeWitness();
        uint64_t v22 = sub_24F8CF1B0();
        uint64_t WitnessTable = swift_getWitnessTable();
        Sequence<>.contains(_:)(&v25, v22, WitnessTable, *(void *)(a7 + 8), v21);
        return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v25);
      }
      __break(1u);
    }
    char v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_24F8CF7D0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24F840208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_24F83CD40(a2, a1, a3, a4);
  if (!v5)
  {
    a5[3] = (uint64_t)&type metadata for SQLExpression;
    a5[4] = (uint64_t)&protocol witness table for SQLExpression;
    uint64_t v12 = swift_allocObject();
    *a5 = v12;
    int v13 = (void *)(v12 + 16);
    v16[0] = 21071;
    v16[1] = 0xE200000000000000;
    void v16[2] = 0;
    void v16[3] = 0;
    char v17 = 0;
    __int16 v18 = 1;
    MEMORY[0x270FA5388](v12);
    sub_24F781274(&qword_26B1F5970);
    sub_24F778988((unint64_t *)&qword_26B1F5978, &qword_26B1F5970);
    swift_getKeyPath();
    swift_retain();
    sub_24F8C4C14();
    unint64_t v15 = v14;
    swift_release();
    sub_24F816D90((uint64_t)v16, v15, v13);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F84039C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X4>, void *a4@<X8>)
{
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_24F7F4F5C(v9, a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    *a3 = v4;
  }
  else if (v10)
  {
    unint64_t v12 = v10[1].n128_u64[0];
    if (v12)
    {
      v26[0] = MEMORY[0x263F8EE78];
      sub_24F77C4AC();
      int v13 = (void *)v26[0];
      unint64_t v14 = &v10[2].n128_i8[8];
      do
      {
        uint64_t v15 = sub_24F8CED00();
        uint64_t v17 = v16;
        v26[0] = (uint64_t)v13;
        unint64_t v18 = v13[2];
        if (v18 >= v13[3] >> 1)
        {
          sub_24F77C4AC();
          int v13 = (void *)v26[0];
        }
        v14 += 16;
        void v13[2] = v18 + 1;
        char v19 = &v13[2 * v18];
        v19[4] = v15;
        v19[5] = v17;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      int v13 = (void *)MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F795324();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    v26[0] = v21;
    sub_24F841AB4(v26, v13);
    swift_bridgeObjectRelease();
    sub_24F83CED0(v26[0]);
    uint64_t v22 = swift_release();
    v26[0] = 4476481;
    v26[1] = 0xE300000000000000;
    long long v27 = xmmword_24F8DF640;
    __int16 v28 = 256;
    char v29 = 0;
    MEMORY[0x270FA5388](v22);
    sub_24F781274(&qword_26B1F5970);
    sub_24F778988((unint64_t *)&qword_26B1F5978, &qword_26B1F5970);
    swift_getKeyPath();
    swift_retain();
    sub_24F8C4C14();
    unint64_t v24 = v23;
    swift_release();
    sub_24F816D90((uint64_t)v26, v24, a4);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_24F8CF7D0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    swift_bridgeObjectRetain();
    sub_24F7952A4();
    uint64_t v30 = v25;
    sub_24F841A48(&v30);
    swift_bridgeObjectRelease();
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    sub_24F8CED30();
    swift_release();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8407A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Database.primaryKey(_:)(a2, a3, v9);
  if (!v3)
  {
    uint64_t v5 = v9[0];
    if (v10)
    {
      if (v10 == 1) {
        uint64_t v6 = (_OWORD *)v9[0];
      }
      else {
        uint64_t v6 = &unk_2700FEB40;
      }
    }
    else
    {
      uint64_t v7 = v9[1];
      sub_24F781274((uint64_t *)&unk_26B1F7C88);
      uint64_t v6 = (_OWORD *)swift_allocObject();
      v6[1] = xmmword_24F8DDBF0;
      *((void *)v6 + 4) = v5;
      *((void *)v6 + 5) = v7;
    }
    uint64_t v4 = sub_24F83D3C0((uint64_t)v6);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_24F840864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Database.primaryKey(_:)(a2, a3, &v14);
  if (!v3)
  {
    long long v5 = v14;
    if (v15)
    {
      if (v15 != 1 || (BYTE8(v14) & 1) != 0)
      {
        sub_24F790830(v14, *((uint64_t *)&v14 + 1), v15);
        sub_24F781274(&qword_26B1F52B0);
        a1 = swift_allocObject();
        *(_OWORD *)(a1 + 16) = xmmword_24F8DDBF0;
        *(void *)(a1 + 56) = &type metadata for Column;
        *(void *)(a1 + 64) = &protocol witness table for Column;
        *(void *)(a1 + 32) = 0x6469776F72;
        *(void *)(a1 + 4sub_24F8565FC((uint64_t)sub_24F83A860, 0) = 0xE500000000000000;
      }
      else
      {
        uint64_t v6 = *(void *)(v14 + 16);
        if (v6)
        {
          uint64_t v13 = *((void *)&v14 + 1);
          uint64_t v18 = MEMORY[0x263F8EE78];
          sub_24F796088();
          a1 = v18;
          uint64_t v7 = (uint64_t *)(v5 + 40);
          do
          {
            uint64_t v9 = *(v7 - 1);
            uint64_t v8 = *v7;
            uint64_t v18 = a1;
            unint64_t v11 = *(void *)(a1 + 16);
            unint64_t v10 = *(void *)(a1 + 24);
            swift_bridgeObjectRetain();
            if (v11 >= v10 >> 1)
            {
              sub_24F796088();
              a1 = v18;
            }
            v7 += 2;
            uint64_t v16 = &type metadata for Column;
            uint64_t v17 = &protocol witness table for Column;
            *(void *)&long long v14 = v9;
            *((void *)&v14 + 1) = v8;
            *(void *)(a1 + 16) = v11 + 1;
            sub_24F794DE0(&v14, a1 + 40 * v11 + 32);
            --v6;
          }
          while (v6);
          sub_24F790830(v5, v13, 1u);
        }
        else
        {
          sub_24F790830(v14, *((uint64_t *)&v14 + 1), 1u);
          return MEMORY[0x263F8EE78];
        }
      }
    }
    else
    {
      sub_24F781274(&qword_26B1F52B0);
      a1 = swift_allocObject();
      *(_OWORD *)(a1 + 16) = xmmword_24F8DDBF0;
      *(void *)(a1 + 56) = &type metadata for Column;
      *(void *)(a1 + 64) = &protocol witness table for Column;
      *(_OWORD *)(a1 + 32) = v5;
    }
  }
  return a1;
}

uint64_t AggregatingRequest.group(_:)()
{
  sub_24F777204();
  sub_24F77DB40();
  uint64_t v1 = sub_24F77229C();
  sub_24F785908(v1);
  sub_24F780904();
  v0();
  sub_24F773598();
  return swift_release();
}

uint64_t AggregatingRequest.group(sql:arguments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return sub_24F840B0C(a1, a2, a3, a4, a5, &qword_26B1F52B0, (uint64_t)&protocol witness table for SQL, (void (*)(uint64_t, uint64_t, uint64_t))AggregatingRequest.group(_:));
}

uint64_t sub_24F840B0C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = *a3;
  uint64_t v13 = a3[1];
  sub_24F781274(a6);
  uint64_t v15 = sub_24F7805F8();
  *(_OWORD *)(v15 + 16) = xmmword_24F8DDBF0;
  *(void *)(v15 + 56) = &type metadata for SQL;
  *(void *)(v15 + 64) = a7;
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24F8DDBF0;
  v19[0] = a1;
  v19[1] = a2;
  void v19[2] = v14;
  _OWORD v19[3] = v13;
  sub_24F7725D4(v19);
  sub_24F76C344((uint64_t)v19, v16 + 32);
  *(void *)(v15 + 32) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a8(v15, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t AggregatingRequest.group(literal:)()
{
  return sub_24F840C48();
}

uint64_t sub_24F840C48()
{
  sub_24F777204();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = *v8;
  sub_24F781274(v10);
  uint64_t v11 = sub_24F7805F8();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DDBF0;
  *(void *)(v11 + 56) = &type metadata for SQL;
  *(void *)(v11 + 64) = v3;
  *(void *)(v11 + 32) = v9;
  swift_bridgeObjectRetain();
  v1(v11, v7, v5);
  sub_24F773598();
  return swift_bridgeObjectRelease();
}

uint64_t AggregatingRequest.having(_:)()
{
  sub_24F843AF8();
  sub_24F7E99C8(v0, (uint64_t)v4);
  uint64_t v1 = swift_allocObject();
  sub_24F794DE0(v4, v1 + 16);
  sub_24F773720();
  v2();
  return swift_release();
}

uint64_t AggregatingRequest.having(sql:arguments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return sub_24F840DA8(a1, a2, a3, a4, a5, (uint64_t)&protocol witness table for SQL, (void (*)(void *, uint64_t, uint64_t))AggregatingRequest.having(_:));
}

uint64_t sub_24F840DA8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *, uint64_t, uint64_t))
{
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  void v16[3] = &type metadata for SQL;
  void v16[4] = a6;
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24F8DDBF0;
  v17[0] = a1;
  v17[1] = a2;
  void v17[2] = v11;
  v17[3] = v12;
  sub_24F7725D4(v17);
  sub_24F76C344((uint64_t)v17, v13 + 32);
  v16[0] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a7(v16, a4, a5);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v16);
}

uint64_t AggregatingRequest.having(literal:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_24F840EBC(a1, a2, a3, (uint64_t)&protocol witness table for SQL, (void (*)(void *, uint64_t, uint64_t))AggregatingRequest.having(_:));
}

uint64_t sub_24F840EBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t, uint64_t))
{
  uint64_t v8 = *a1;
  v10[3] = &type metadata for SQL;
  _OWORD v10[4] = a4;
  v10[0] = v8;
  swift_bridgeObjectRetain();
  a5(v10, a2, a3);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v10);
}

uint64_t OrderedRequest.order(sql:arguments:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v5 = a3[1];
  sub_24F781274(&qword_269A2A558);
  uint64_t v7 = sub_24F7805F8();
  *(_OWORD *)(v7 + 16) = xmmword_24F8DDBF0;
  *(void *)(v7 + 56) = &type metadata for SQL;
  *(void *)(v7 + 64) = &protocol witness table for SQL;
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24F8DDBF0;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = v6;
  v10[3] = v5;
  sub_24F7725D4(v10);
  sub_24F76C344((uint64_t)v10, v8 + 32);
  *(void *)(v7 + 32) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OrderedRequest.order(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t OrderedRequest.order(literal:)()
{
  sub_24F843AF8();
  uint64_t v1 = *v0;
  sub_24F781274(&qword_269A2A558);
  uint64_t v2 = sub_24F7805F8();
  *(_OWORD *)(v2 + 16) = xmmword_24F8DDBF0;
  *(void *)(v2 + 56) = &type metadata for SQL;
  *(void *)(v2 + 64) = &protocol witness table for SQL;
  *(void *)(v2 + 32) = v1;
  swift_bridgeObjectRetain();
  OrderedRequest.order(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8410EC(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3, void *a4)
{
  a2(&v9);
  if (!v4)
  {
    uint64_t v7 = v9;
    swift_retain();
    a3 = sub_24F83D50C(v7, a4);
    swift_bridgeObjectRelease();
  }
  return a3;
}

uint64_t DerivableRequest.limit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(a3 + 64))(a1, 0, 1, a2, a3);
}

uint64_t sub_24F841194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v7;
  uint64_t v11 = v7[1];
  uint64_t v12 = v7[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, a2);
  v21[0] = v10;
  v21[1] = v11;
  void v21[2] = v12;
  swift_getAssociatedTypeWitness();
  uint64_t v13 = type metadata accessor for AssociationAggregate();
  sub_24F82E85C((uint64_t)v9, v13, a2, a3);
  sub_24F781274(&qword_26B1F7600);
  if (v12)
  {
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_24F8DDBF0;
    *(void *)(v14 + 56) = &type metadata for SQLSelection;
    *(void *)(v14 + 64) = &protocol witness table for SQLSelection;
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = (void *)(v15 + 16);
    *(void *)(v14 + 32) = v15;
    memcpy(v20, __src, 0xA3uLL);
    v20[21] = v11;
    v20[22] = v12;
    sub_24F7998DC(v20);
    sub_24F7997BC((uint64_t)v20, (uint64_t)v21);
    memcpy(v16, v21, 0xB8uLL);
    sub_24F84192C(__src);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_24F8DDBF0;
    *(void *)(v17 + 56) = &type metadata for SQLExpression;
    *(void *)(v17 + 64) = &protocol witness table for SQLExpression;
    uint64_t v18 = swift_allocObject();
    *(void *)(v17 + 32) = v18;
    memcpy((void *)(v18 + 16), __src, 0xA3uLL);
    sub_24F84192C(__src);
  }
  SelectionRequest.annotated(with:)();
  swift_bridgeObjectRelease();
  sub_24F84192C(__src);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, a2);
}

uint64_t sub_24F841480(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a2;
  long long v6 = *(_OWORD *)(a2 + 1);
  return sub_24F841194((uint64_t)&v5, a3, a4);
}

uint64_t sub_24F8414D0(uint64_t a1, uint64_t a2)
{
  if (sub_24F843A64(a2))
  {
    return sub_24F781274(&qword_26B1F7F68);
  }
  else
  {
    return sub_24F8CFAF0();
  }
}

uint64_t sub_24F841534(uint64_t a1)
{
  return sub_24F83FC48(a1, *(unsigned char *)(v1 + 72));
}

uint64_t sub_24F841570()
{
  sub_24F777720();
  return sub_24F83F808(v1, v2, *(void *)(v0 + 80), *(unsigned char *)(v0 + 88), v3);
}

uint64_t sub_24F8415A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F8415E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F840208(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_24F841604()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F84163C(uint64_t a1)
{
  return sub_24F8407A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F84165C(uint64_t a1)
{
  return sub_24F8410EC(a1, *(void (**)(uint64_t *__return_ptr))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_24F841680()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F8416C0(uint64_t a1, uint64_t *a2)
{
  return sub_24F841480(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_24F8416DC()
{
  sub_24F77B9A8();
  unsigned int v22 = *(unsigned __int16 *)(v0 + 176) | (*(unsigned __int8 *)(v0 + 178) << 16);
  uint64_t v20 = *(void *)(v0 + 160);
  uint64_t v21 = *(void *)(v0 + 168);
  sub_24F77294C();
  sub_24F76C98C(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return swift_deallocObject();
}

uint64_t sub_24F84173C(uint64_t a1)
{
  return sub_24F840864(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F841758()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_24F841790@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7E99C8(v1 + 16, a1);
}

uint64_t dispatch thunk of SelectionRequest.select(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of SelectionRequest.annotated(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FilteredRequest.filter(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TableRequest.databaseTableName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TableRequest.aliased(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AggregatingRequest.group(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AggregatingRequest.having(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of OrderedRequest.order(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of OrderedRequest.reversed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of OrderedRequest.unordered()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of _JoinableRequest._including(all:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of _JoinableRequest._including(optional:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of _JoinableRequest._including(required:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of _JoinableRequest._joining(optional:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of _JoinableRequest._joining(required:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DerivableRequest.distinct()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DerivableRequest.limit(_:offset:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 64))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of DerivableRequest.with<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_24F84192C(__n128 *a1)
{
  sub_24F77AD50(a1);
  sub_24F77294C();
  v2();
  return v1;
}

uint64_t sub_24F841980()
{
  sub_24F77B9A8();
  long long v20 = *(_OWORD *)(v0 + 160);
  long long v21 = *(_OWORD *)(v0 + 176);
  sub_24F77294C();
  sub_24F799458(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20,
    *((uint64_t *)&v20 + 1),
    v21);
  return swift_deallocObject();
}

uint64_t sub_24F8419D8(__n128 *a1)
{
  sub_24F77AD50(a1);
  sub_24F77294C();
  v2();
  return v1;
}

uint64_t sub_24F841A28()
{
  return 24;
}

__n128 sub_24F841A34(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_24F841A48(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F8975C8();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_24F841B50(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_24F841AB4(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F8975D8();
    uint64_t v4 = v5;
  }
  uint64_t v6 = *(char **)(v4 + 16);
  v8[0] = (char *)(v4 + 32);
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_24F8421F4(v8, a2);
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_24F841B50(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_147;
    }
    if (v3) {
      return sub_24F842EC8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v99 = result;
  uint64_t v96 = a1;
  if (v3 <= 1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v102 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v36 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v8 = MEMORY[0x263F8EE78];
      goto LABEL_113;
    }
    uint64_t v98 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t result = sub_24F8CF120();
    *(void *)(result + 16) = v3 / 2;
    uint64_t v98 = result;
    uint64_t v102 = (char *)(result + 32);
  }
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v97 = v7 + 8;
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v100 = v3;
  while (1)
  {
    uint64_t v9 = v6++;
    if (v6 >= v3) {
      goto LABEL_39;
    }
    uint64_t v10 = (uint64_t *)(v7 + 16 * v6);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v7 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_38;
      }
      int v14 = 0;
    }
    else
    {
      uint64_t result = sub_24F8CFD00();
      int v14 = result;
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_30;
      }
    }
    uint64_t v16 = (void *)(v97 + 16 * v15);
    do
    {
      uint64_t result = *(v16 - 1);
      uint64_t v17 = (void *)(v7 + 16 * v6);
      if (result == *v17 && *v16 == v17[1])
      {
        if (v14) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t result = sub_24F8CFD00();
        if ((v14 ^ result)) {
          goto LABEL_30;
        }
      }
      v16 += 2;
      uint64_t v19 = v15 + 1;
      uint64_t v6 = v15;
      uint64_t v15 = v19;
    }
    while (v19 < v3);
    uint64_t v15 = v19;
LABEL_30:
    uint64_t v6 = v15;
    if (v14)
    {
LABEL_31:
      if (v15 < v9) {
        goto LABEL_150;
      }
      if (v9 < v15)
      {
        uint64_t v20 = 16 * v15;
        uint64_t v21 = 16 * v9;
        uint64_t v22 = v15;
        uint64_t v23 = v9;
        do
        {
          if (v23 != --v22)
          {
            if (!v7) {
              goto LABEL_153;
            }
            uint64_t v24 = v7 + v20;
            uint64_t v25 = *(void *)(v7 + v21);
            uint64_t v26 = *(void *)(v7 + v21 + 8);
            *(_OWORD *)(v7 + v21) = *(_OWORD *)(v7 + v20 - 16);
            *(void *)(v24 - 16) = v25;
            *(void *)(v24 - 8) = v26;
          }
          ++v23;
          v20 -= 16;
          v21 += 16;
        }
        while (v23 < v22);
      }
LABEL_38:
      uint64_t v6 = v15;
    }
LABEL_39:
    if (v6 < v3)
    {
      if (__OFSUB__(v6, v9)) {
        goto LABEL_145;
      }
      if (v6 - v9 < v99) {
        break;
      }
    }
LABEL_59:
    if (v6 < v9) {
      goto LABEL_140;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    unint64_t v35 = *(void *)(v8 + 16);
    unint64_t v34 = *(void *)(v8 + 24);
    unint64_t v36 = v35 + 1;
    if (v35 >= v34 >> 1)
    {
      uint64_t result = (uint64_t)sub_24F897440((char *)(v34 > 1), v35 + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    *(void *)(v8 + 16) = v36;
    uint64_t v37 = v8 + 32;
    uint64_t v38 = (uint64_t *)(v8 + 32 + 16 * v35);
    *uint64_t v38 = v9;
    v38[1] = v6;
    if (v35)
    {
      uint64_t v101 = v6;
      while (1)
      {
        unint64_t v39 = v36 - 1;
        if (v36 >= 4)
        {
          unint64_t v44 = v37 + 16 * v36;
          uint64_t v45 = *(void *)(v44 - 64);
          uint64_t v46 = *(void *)(v44 - 56);
          BOOL v50 = __OFSUB__(v46, v45);
          uint64_t v47 = v46 - v45;
          if (v50) {
            goto LABEL_129;
          }
          uint64_t v49 = *(void *)(v44 - 48);
          uint64_t v48 = *(void *)(v44 - 40);
          BOOL v50 = __OFSUB__(v48, v49);
          uint64_t v42 = v48 - v49;
          char v43 = v50;
          if (v50) {
            goto LABEL_130;
          }
          unint64_t v51 = v36 - 2;
          uint64_t v52 = (uint64_t *)(v37 + 16 * (v36 - 2));
          uint64_t v54 = *v52;
          uint64_t v53 = v52[1];
          BOOL v50 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v50) {
            goto LABEL_131;
          }
          BOOL v50 = __OFADD__(v42, v55);
          uint64_t v56 = v42 + v55;
          if (v50) {
            goto LABEL_133;
          }
          if (v56 >= v47)
          {
            uint64_t v74 = (uint64_t *)(v37 + 16 * v39);
            uint64_t v76 = *v74;
            uint64_t v75 = v74[1];
            BOOL v50 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            if (v50) {
              goto LABEL_139;
            }
            BOOL v67 = v42 < v77;
            goto LABEL_97;
          }
        }
        else
        {
          if (v36 != 3)
          {
            uint64_t v68 = *(void *)(v8 + 32);
            uint64_t v69 = *(void *)(v8 + 40);
            BOOL v50 = __OFSUB__(v69, v68);
            uint64_t v61 = v69 - v68;
            char v62 = v50;
            goto LABEL_91;
          }
          uint64_t v41 = *(void *)(v8 + 32);
          uint64_t v40 = *(void *)(v8 + 40);
          BOOL v50 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          char v43 = v50;
        }
        if (v43) {
          goto LABEL_132;
        }
        unint64_t v51 = v36 - 2;
        uint64_t v57 = (uint64_t *)(v37 + 16 * (v36 - 2));
        uint64_t v59 = *v57;
        uint64_t v58 = v57[1];
        BOOL v60 = __OFSUB__(v58, v59);
        uint64_t v61 = v58 - v59;
        char v62 = v60;
        if (v60) {
          goto LABEL_134;
        }
        uint64_t v63 = (uint64_t *)(v37 + 16 * v39);
        uint64_t v65 = *v63;
        uint64_t v64 = v63[1];
        BOOL v50 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v50) {
          goto LABEL_136;
        }
        if (__OFADD__(v61, v66)) {
          goto LABEL_138;
        }
        if (v61 + v66 >= v42)
        {
          BOOL v67 = v42 < v66;
LABEL_97:
          if (v67) {
            unint64_t v39 = v51;
          }
          goto LABEL_99;
        }
LABEL_91:
        if (v62) {
          goto LABEL_135;
        }
        uint64_t v70 = (uint64_t *)(v37 + 16 * v39);
        uint64_t v72 = *v70;
        uint64_t v71 = v70[1];
        BOOL v50 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v50) {
          goto LABEL_137;
        }
        if (v73 < v61) {
          goto LABEL_108;
        }
LABEL_99:
        unint64_t v78 = v39 - 1;
        if (v39 - 1 >= v36)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        uint64_t v79 = v7;
        if (!v7) {
          goto LABEL_152;
        }
        uint64_t v80 = v8;
        uint64_t v81 = (uint64_t *)(v37 + 16 * v78);
        uint64_t v82 = *v81;
        uint64_t v83 = v37;
        unint64_t v84 = v39;
        uint64_t v85 = (void *)(v37 + 16 * v39);
        uint64_t v86 = v85[1];
        uint64_t v87 = v79;
        uint64_t result = sub_24F843280((char *)(v79 + 16 * *v81), (char *)(v79 + 16 * *v85), v79 + 16 * v86, v102);
        if (v1)
        {
LABEL_110:
          swift_bridgeObjectRelease();
          *(void *)(v98 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v86 < v82) {
          goto LABEL_126;
        }
        if (v84 > *(void *)(v80 + 16)) {
          goto LABEL_127;
        }
        *uint64_t v81 = v82;
        *(void *)(v83 + 16 * v78 + 8) = v86;
        unint64_t v88 = *(void *)(v80 + 16);
        if (v84 >= v88) {
          goto LABEL_128;
        }
        uint64_t v8 = v80;
        unint64_t v36 = v88 - 1;
        uint64_t result = (uint64_t)memmove(v85, v85 + 2, 16 * (v88 - 1 - v84));
        uint64_t v37 = v83;
        *(void *)(v80 + 16) = v88 - 1;
        uint64_t v7 = v87;
        uint64_t v6 = v101;
        if (v88 <= 2) {
          goto LABEL_108;
        }
      }
    }
    unint64_t v36 = 1;
LABEL_108:
    uint64_t v3 = v100;
    if (v6 >= v100)
    {
      uint64_t v5 = v98;
LABEL_113:
      uint64_t result = v8;
      uint64_t v98 = v5;
      if (v36 >= 2)
      {
        uint64_t v89 = *v96;
        do
        {
          unint64_t v90 = v36 - 2;
          if (v36 < 2) {
            goto LABEL_141;
          }
          if (!v89) {
            goto LABEL_154;
          }
          uint64_t v91 = result;
          uint64_t v92 = *(void *)(result + 32 + 16 * v90);
          uint64_t v93 = *(void *)(result + 32 + 16 * (v36 - 1) + 8);
          uint64_t result = sub_24F843280((char *)(v89 + 16 * v92), (char *)(v89 + 16 * *(void *)(result + 32 + 16 * (v36 - 1))), v89 + 16 * v93, v102);
          if (v1) {
            goto LABEL_110;
          }
          if (v93 < v92) {
            goto LABEL_142;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_24F897538();
            uint64_t v91 = result;
          }
          if (v90 >= *(void *)(v91 + 16)) {
            goto LABEL_143;
          }
          uint64_t v94 = (void *)(v91 + 32 + 16 * v90);
          *uint64_t v94 = v92;
          v94[1] = v93;
          unint64_t v95 = *(void *)(v91 + 16);
          if (v36 > v95) {
            goto LABEL_144;
          }
          memmove((void *)(v91 + 32 + 16 * (v36 - 1)), (const void *)(v91 + 32 + 16 * v36), 16 * (v95 - v36));
          uint64_t result = v91;
          *(void *)(v91 + 16) = v95 - 1;
          unint64_t v36 = v95 - 1;
        }
        while (v95 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v98 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v9, v99)) {
    goto LABEL_148;
  }
  if (v9 + v99 >= v3) {
    uint64_t v27 = v3;
  }
  else {
    uint64_t v27 = v9 + v99;
  }
  if (v27 >= v9)
  {
    if (v6 != v27)
    {
      __int16 v28 = (uint64_t *)(v7 + 16 * v6);
      do
      {
        char v29 = (uint64_t *)(v7 + 16 * v6);
        uint64_t result = *v29;
        uint64_t v30 = v29[1];
        uint64_t v31 = v9;
        char v32 = v28;
        do
        {
          if (result == *(v32 - 2) && v30 == *(v32 - 1)) {
            break;
          }
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            break;
          }
          if (!v7) {
            goto LABEL_151;
          }
          uint64_t result = *v32;
          uint64_t v30 = v32[1];
          *(_OWORD *)char v32 = *((_OWORD *)v32 - 1);
          *(v32 - 1) = v30;
          *(v32 - 2) = result;
          v32 -= 2;
          ++v31;
        }
        while (v6 != v31);
        ++v6;
        v28 += 2;
      }
      while (v6 != v27);
      uint64_t v6 = v27;
    }
    goto LABEL_59;
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
  return result;
}

uint64_t sub_24F8421F4(char **a1, void *a2)
{
  uint64_t v5 = (uint64_t)a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_24F8CFAD0();
  if (v6 >= v5)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      if (v5) {
        sub_24F842F90(0, v5, 1, a1, a2);
      }
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    goto LABEL_242;
  }
  if (v5 < -1)
  {
LABEL_241:
    __break(1u);
LABEL_242:
    __break(1u);
    goto LABEL_243;
  }
  uint64_t v174 = v6;
  uint64_t v188 = a2;
  uint64_t v185 = v2;
  if (v5 <= 1)
  {
    unint64_t v179 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v173 = MEMORY[0x263F8EE78];
    if (v5 != 1)
    {
      uint64_t v10 = a1;
      unint64_t v109 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
LABEL_207:
      if (v109 < 2)
      {
LABEL_218:
        swift_bridgeObjectRelease();
        *(void *)(v173 + 16) = 0;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      char v163 = *v10;
      uint64_t v191 = *v10;
      while (1)
      {
        unint64_t v164 = v109 - 2;
        if (v109 < 2) {
          goto LABEL_236;
        }
        if (!v163) {
          goto LABEL_249;
        }
        int64_t v165 = v9;
        uint64_t v166 = *(void *)&v9[16 * v164 + 32];
        uint64_t v167 = *(void *)&v9[16 * v109 + 24];
        size_t v168 = &v163[56 * v166];
        uint64_t v169 = &v163[56 * *(void *)&v9[16 * v109 + 16]];
        uint64_t v170 = &v163[56 * v167];
        swift_bridgeObjectRetain();
        sub_24F84343C(v168, v169, v170, v179, a2);
        if (v185)
        {
          uint64_t v161 = v173;
          goto LABEL_203;
        }
        if (v167 < v166) {
          goto LABEL_237;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v165 = sub_24F897538();
        }
        if (v164 >= *((void *)v165 + 2)) {
          goto LABEL_238;
        }
        uint64_t v171 = &v165[16 * v164 + 32];
        *(void *)uint64_t v171 = v166;
        *((void *)v171 + 1) = v167;
        unint64_t v172 = *((void *)v165 + 2);
        if (v109 > v172) {
          goto LABEL_239;
        }
        memmove(&v165[16 * v109 + 16], &v165[16 * v109 + 32], 16 * (v172 - v109));
        uint64_t v9 = v165;
        *((void *)v165 + 2) = v172 - 1;
        unint64_t v109 = v172 - 1;
        BOOL v140 = v172 > 2;
        a2 = v188;
        char v163 = v191;
        if (!v140) {
          goto LABEL_218;
        }
      }
    }
  }
  else
  {
    sub_24F781274(&qword_26B1F5598);
    uint64_t v7 = sub_24F8CF120();
    *(void *)(v7 + 16) = v5 / 2;
    uint64_t v173 = v7;
    unint64_t v179 = (char *)(v7 + 32);
  }
  uint64_t v8 = 0;
  uint64_t v184 = a2 + 7;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  uint64_t v10 = a1;
  uint64_t v180 = a1;
  while (2)
  {
    uint64_t v186 = v9;
    uint64_t v11 = (uint64_t)v8;
    uint64_t v12 = (uint64_t)(v8 + 1);
    uint64_t v191 = v8;
    if ((uint64_t)(v8 + 1) >= v5)
    {
      uint64_t v13 = v10;
      goto LABEL_101;
    }
    uint64_t v13 = v10;
    int v14 = *v10;
    uint64_t v181 = v8 + 1;
    sub_24F781214((uint64_t)&(*v10)[56 * v12], (uint64_t)&v190, &qword_26B1F5598);
    sub_24F781214((uint64_t)&v14[56 * v11], (uint64_t)&v189, &qword_26B1F5598);
    uint64_t v15 = sub_24F8CED00();
    uint64_t v17 = v16;
    uint64_t v18 = a2[2];
    uint64_t v175 = v5;
    char v176 = v14;
    if (v18)
    {
      uint64_t v19 = v15;
      BOOL v20 = a2[4] == v15 && a2[5] == v16;
      if (v20 || (sub_24F8CFD00() & 1) != 0)
      {
        uint64_t v21 = 0;
LABEL_18:
        swift_bridgeObjectRelease();
        uint64_t v22 = sub_24F8CED00();
        uint64_t v24 = v23;
        uint64_t v25 = a2[2];
        if (v25)
        {
          uint64_t v26 = v22;
          BOOL v27 = a2[4] == v22 && a2[5] == v23;
          if (v27 || (sub_24F8CFD00() & 1) != 0)
          {
            uint64_t v28 = 0;
LABEL_25:
            swift_bridgeObjectRelease();
            BOOL v29 = v21 < v28;
          }
          else
          {
            unint64_t v34 = v184;
            uint64_t v35 = 1;
            while (v25 != v35)
            {
              uint64_t v28 = v35;
              if (*(v34 - 1) != v26 || *v34 != v24)
              {
                char v37 = sub_24F8CFD00();
                uint64_t v35 = v28 + 1;
                v34 += 2;
                if ((v37 & 1) == 0) {
                  continue;
                }
              }
              goto LABEL_25;
            }
            swift_bridgeObjectRelease();
            BOOL v29 = 1;
          }
          int v177 = v29;
          uint64_t v5 = v175;
        }
        else
        {
          swift_bridgeObjectRelease();
          int v177 = 1;
        }
      }
      else
      {
        uint64_t v30 = v184;
        uint64_t v31 = 1;
        while (v18 != v31)
        {
          uint64_t v21 = v31;
          if (*(v30 - 1) != v19 || *v30 != v17)
          {
            char v33 = sub_24F8CFD00();
            uint64_t v31 = v21 + 1;
            v30 += 2;
            if ((v33 & 1) == 0) {
              continue;
            }
          }
          goto LABEL_18;
        }
        swift_bridgeObjectRelease();
        int v177 = 0;
      }
      int v14 = v176;
    }
    else
    {
      swift_bridgeObjectRelease();
      int v177 = 0;
    }
    sub_24F774DA0((uint64_t)&v189, &qword_26B1F5598);
    sub_24F774DA0((uint64_t)&v190, &qword_26B1F5598);
    uint64_t v11 = (uint64_t)v191;
    uint64_t v38 = (uint64_t)(v191 + 2);
    unint64_t v39 = v181;
    if ((uint64_t)(v191 + 2) >= v5) {
      goto LABEL_92;
    }
    while (1)
    {
      sub_24F781214((uint64_t)&v14[56 * v38], (uint64_t)&v190, &qword_26B1F5598);
      sub_24F781214((uint64_t)&v14[56 * (void)v39], (uint64_t)&v189, &qword_26B1F5598);
      uint64_t v40 = sub_24F8CED00();
      uint64_t v42 = v41;
      uint64_t v43 = a2[2];
      if (!v43)
      {
        swift_bridgeObjectRelease();
        int v54 = 0;
        goto LABEL_86;
      }
      uint64_t v44 = v40;
      BOOL v45 = a2[4] == v40 && a2[5] == v41;
      if (v45 || (sub_24F8CFD00() & 1) != 0)
      {
        uint64_t v46 = 0;
LABEL_56:
        swift_bridgeObjectRelease();
        uint64_t v47 = sub_24F8CED00();
        uint64_t v49 = v48;
        uint64_t v50 = a2[2];
        if (v50)
        {
          uint64_t v51 = v47;
          BOOL v52 = a2[4] == v47 && a2[5] == v48;
          if (v52 || (sub_24F8CFD00() & 1) != 0)
          {
            uint64_t v53 = 0;
LABEL_63:
            swift_bridgeObjectRelease();
            int v54 = v46 < v53;
          }
          else
          {
            uint64_t v59 = v184;
            uint64_t v60 = 1;
            while (v50 != v60)
            {
              uint64_t v53 = v60;
              if (*(v59 - 1) != v51 || *v59 != v49)
              {
                char v62 = sub_24F8CFD00();
                uint64_t v60 = v53 + 1;
                v59 += 2;
                if ((v62 & 1) == 0) {
                  continue;
                }
              }
              goto LABEL_63;
            }
            swift_bridgeObjectRelease();
            int v54 = 1;
          }
          uint64_t v13 = v180;
          uint64_t v5 = v175;
          goto LABEL_85;
        }
        swift_bridgeObjectRelease();
        int v54 = 1;
      }
      else
      {
        uint64_t v55 = v184;
        uint64_t v56 = 1;
        while (v43 != v56)
        {
          uint64_t v46 = v56;
          if (*(v55 - 1) != v44 || *v55 != v42)
          {
            char v58 = sub_24F8CFD00();
            uint64_t v56 = v46 + 1;
            v55 += 2;
            if ((v58 & 1) == 0) {
              continue;
            }
          }
          goto LABEL_56;
        }
        swift_bridgeObjectRelease();
        int v54 = 0;
      }
      uint64_t v13 = v180;
LABEL_85:
      int v14 = v176;
LABEL_86:
      sub_24F774DA0((uint64_t)&v189, &qword_26B1F5598);
      sub_24F774DA0((uint64_t)&v190, &qword_26B1F5598);
      if (v177 != v54) {
        break;
      }
      unint64_t v39 = (char *)v38++;
      a2 = v188;
      if (v38 >= v5)
      {
        uint64_t v38 = v5;
        goto LABEL_91;
      }
    }
    a2 = v188;
LABEL_91:
    uint64_t v11 = (uint64_t)v191;
LABEL_92:
    if (v177)
    {
      if (v38 >= v11)
      {
        if (v11 < v38)
        {
          uint64_t v63 = (uint64_t)&v14[56 * v38 - 56];
          uint64_t v64 = &v14[56 * v11];
          uint64_t v65 = v38;
          uint64_t v66 = v11;
          do
          {
            if (v66 != --v65)
            {
              if (!v14) {
                goto LABEL_248;
              }
              uint64_t v67 = *((void *)v64 + 6);
              long long v69 = *((_OWORD *)v64 + 1);
              long long v68 = *((_OWORD *)v64 + 2);
              long long v70 = *(_OWORD *)v64;
              long long v72 = *(_OWORD *)(v63 + 16);
              long long v71 = *(_OWORD *)(v63 + 32);
              long long v73 = *(_OWORD *)v63;
              *((void *)v64 + 6) = *(void *)(v63 + 48);
              *((_OWORD *)v64 + 1) = v72;
              *((_OWORD *)v64 + 2) = v71;
              *(_OWORD *)uint64_t v64 = v73;
              *(_OWORD *)uint64_t v63 = v70;
              *(_OWORD *)(v63 + 16) = v69;
              *(_OWORD *)(v63 + 32) = v68;
              *(void *)(v63 + 48) = v67;
            }
            ++v66;
            v63 -= 56;
            v64 += 56;
          }
          while (v66 < v65);
        }
        goto LABEL_100;
      }
LABEL_243:
      __break(1u);
LABEL_244:
      __break(1u);
      goto LABEL_245;
    }
LABEL_100:
    uint64_t v12 = v38;
LABEL_101:
    if (v12 >= v5) {
      goto LABEL_149;
    }
    if (__OFSUB__(v12, v11)) {
      goto LABEL_240;
    }
    if (v12 - v11 >= v174) {
      goto LABEL_149;
    }
    uint64_t v74 = (char *)(v11 + v174);
    if (__OFADD__(v11, v174)) {
      goto LABEL_244;
    }
    if ((uint64_t)v74 >= v5) {
      uint64_t v74 = (char *)v5;
    }
    if ((uint64_t)v74 < v11)
    {
LABEL_245:
      __break(1u);
LABEL_246:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_247:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_248:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_249:
      uint64_t result = swift_bridgeObjectRelease_n();
      __break(1u);
      return result;
    }
    uint64_t v178 = (uint64_t)v74;
    if ((char *)v12 == v74) {
      goto LABEL_149;
    }
    while (2)
    {
      uint64_t v182 = v12;
      while (2)
      {
        uint64_t v75 = (uint64_t)&(*v13)[56 * v12];
        sub_24F781214(v75, (uint64_t)&v190, &qword_26B1F5598);
        sub_24F781214(v75 - 56, (uint64_t)&v189, &qword_26B1F5598);
        uint64_t v76 = sub_24F8CED00();
        uint64_t v78 = v77;
        uint64_t v79 = a2[2];
        if (v79)
        {
          uint64_t v80 = v76;
          BOOL v81 = a2[4] == v76 && a2[5] == v77;
          if (!v81 && (sub_24F8CFD00() & 1) == 0)
          {
            unint64_t v90 = v184;
            uint64_t v91 = 1;
            while (v79 != v91)
            {
              uint64_t v82 = v91;
              if (*(v90 - 1) != v80 || *v90 != v78)
              {
                char v93 = sub_24F8CFD00();
                uint64_t v91 = v82 + 1;
                v90 += 2;
                if ((v93 & 1) == 0) {
                  continue;
                }
              }
              goto LABEL_117;
            }
            break;
          }
          uint64_t v82 = 0;
LABEL_117:
          swift_bridgeObjectRelease();
          uint64_t v83 = sub_24F8CED00();
          uint64_t v85 = v84;
          uint64_t v86 = a2[2];
          if (v86)
          {
            uint64_t v87 = v83;
            BOOL v88 = a2[4] == v83 && a2[5] == v84;
            if (v88 || (sub_24F8CFD00() & 1) != 0)
            {
              uint64_t v89 = 0;
LABEL_124:
              swift_bridgeObjectRelease();
              sub_24F774DA0((uint64_t)&v189, &qword_26B1F5598);
              sub_24F774DA0((uint64_t)&v190, &qword_26B1F5598);
              if (v82 >= v89) {
                goto LABEL_147;
              }
LABEL_143:
              uint64_t v98 = *v13;
              if (!*v13) {
                goto LABEL_246;
              }
              uint64_t v99 = &v98[56 * v12];
              uint64_t v100 = *((void *)v99 + 6);
              long long v102 = *((_OWORD *)v99 + 1);
              long long v101 = *((_OWORD *)v99 + 2);
              long long v103 = *(_OWORD *)v99;
              uint64_t v104 = &v98[56 * v12 - 56];
              long long v105 = *((_OWORD *)v104 + 1);
              *(_OWORD *)uint64_t v99 = *(_OWORD *)v104;
              *((_OWORD *)v99 + 1) = v105;
              *((_OWORD *)v99 + 2) = *((_OWORD *)v104 + 2);
              *((void *)v99 + 6) = *((void *)v104 + 6);
              *(_OWORD *)uint64_t v104 = v103;
              *((_OWORD *)v104 + 1) = v102;
              *((_OWORD *)v104 + 2) = v101;
              *((void *)v104 + 6) = v100;
              if ((char *)--v12 == v191) {
                goto LABEL_147;
              }
              continue;
            }
            uint64_t v94 = v184;
            uint64_t v95 = 1;
            while (v86 != v95)
            {
              uint64_t v89 = v95;
              if (*(v94 - 1) != v87 || *v94 != v85)
              {
                char v97 = sub_24F8CFD00();
                uint64_t v95 = v89 + 1;
                v94 += 2;
                if ((v97 & 1) == 0) {
                  continue;
                }
              }
              goto LABEL_124;
            }
          }
          swift_bridgeObjectRelease();
          sub_24F774DA0((uint64_t)&v189, &qword_26B1F5598);
          sub_24F774DA0((uint64_t)&v190, &qword_26B1F5598);
          goto LABEL_143;
        }
        break;
      }
      swift_bridgeObjectRelease();
      sub_24F774DA0((uint64_t)&v189, &qword_26B1F5598);
      sub_24F774DA0((uint64_t)&v190, &qword_26B1F5598);
LABEL_147:
      uint64_t v12 = v182 + 1;
      if (v182 + 1 != v178) {
        continue;
      }
      break;
    }
    uint64_t v12 = v178;
LABEL_149:
    uint64_t v106 = v191;
    if (v12 < (uint64_t)v191)
    {
LABEL_235:
      __break(1u);
LABEL_236:
      __break(1u);
LABEL_237:
      __break(1u);
LABEL_238:
      __break(1u);
LABEL_239:
      __break(1u);
LABEL_240:
      __break(1u);
      goto LABEL_241;
    }
    uint64_t v10 = v13;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v9 = v186;
    }
    else {
      uint64_t v9 = sub_24F897440(0, *((void *)v186 + 2) + 1, 1, v186);
    }
    unint64_t v108 = *((void *)v9 + 2);
    unint64_t v107 = *((void *)v9 + 3);
    unint64_t v109 = v108 + 1;
    if (v108 >= v107 >> 1) {
      uint64_t v9 = sub_24F897440((char *)(v107 > 1), v108 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v109;
    uint64_t v110 = v9 + 32;
    uint64_t v111 = (char **)&v9[16 * v108 + 32];
    *uint64_t v111 = v106;
    v111[1] = (char *)v12;
    uint64_t v183 = (char *)v12;
    if (!v108)
    {
      unint64_t v109 = 1;
      a2 = v188;
LABEL_198:
      uint64_t v5 = (uint64_t)v10[1];
      uint64_t v8 = v183;
      if ((uint64_t)v183 >= v5) {
        goto LABEL_207;
      }
      continue;
    }
    break;
  }
  a2 = v188;
  uint64_t v187 = v9;
  while (2)
  {
    unint64_t v112 = v109 - 1;
    if (v109 >= 4)
    {
      uint64_t v117 = &v110[16 * v109];
      uint64_t v118 = *((void *)v117 - 8);
      uint64_t v119 = *((void *)v117 - 7);
      BOOL v123 = __OFSUB__(v119, v118);
      uint64_t v120 = v119 - v118;
      if (v123) {
        goto LABEL_224;
      }
      uint64_t v122 = *((void *)v117 - 6);
      uint64_t v121 = *((void *)v117 - 5);
      BOOL v123 = __OFSUB__(v121, v122);
      uint64_t v115 = v121 - v122;
      char v116 = v123;
      if (v123) {
        goto LABEL_225;
      }
      unint64_t v124 = v109 - 2;
      uint64_t v125 = &v110[16 * v109 - 32];
      uint64_t v127 = *(void *)v125;
      uint64_t v126 = *((void *)v125 + 1);
      BOOL v123 = __OFSUB__(v126, v127);
      uint64_t v128 = v126 - v127;
      if (v123) {
        goto LABEL_226;
      }
      BOOL v123 = __OFADD__(v115, v128);
      uint64_t v129 = v115 + v128;
      if (v123) {
        goto LABEL_228;
      }
      if (v129 >= v120)
      {
        int v147 = &v110[16 * v112];
        uint64_t v149 = *(void *)v147;
        uint64_t v148 = *((void *)v147 + 1);
        BOOL v123 = __OFSUB__(v148, v149);
        uint64_t v150 = v148 - v149;
        if (v123) {
          goto LABEL_234;
        }
        BOOL v140 = v115 < v150;
      }
      else
      {
LABEL_169:
        if (v116) {
          goto LABEL_227;
        }
        unint64_t v124 = v109 - 2;
        uint64_t v130 = &v110[16 * v109 - 32];
        uint64_t v132 = *(void *)v130;
        uint64_t v131 = *((void *)v130 + 1);
        BOOL v133 = __OFSUB__(v131, v132);
        uint64_t v134 = v131 - v132;
        char v135 = v133;
        if (v133) {
          goto LABEL_229;
        }
        uint64_t v136 = &v110[16 * v112];
        uint64_t v138 = *(void *)v136;
        uint64_t v137 = *((void *)v136 + 1);
        BOOL v123 = __OFSUB__(v137, v138);
        uint64_t v139 = v137 - v138;
        if (v123) {
          goto LABEL_231;
        }
        if (__OFADD__(v134, v139)) {
          goto LABEL_233;
        }
        if (v134 + v139 < v115) {
          goto LABEL_181;
        }
        BOOL v140 = v115 < v139;
      }
      if (v140) {
        unint64_t v112 = v124;
      }
    }
    else
    {
      if (v109 == 3)
      {
        uint64_t v114 = *((void *)v9 + 4);
        uint64_t v113 = *((void *)v9 + 5);
        BOOL v123 = __OFSUB__(v113, v114);
        uint64_t v115 = v113 - v114;
        char v116 = v123;
        goto LABEL_169;
      }
      uint64_t v141 = *((void *)v9 + 4);
      uint64_t v142 = *((void *)v9 + 5);
      BOOL v123 = __OFSUB__(v142, v141);
      uint64_t v134 = v142 - v141;
      char v135 = v123;
LABEL_181:
      if (v135) {
        goto LABEL_230;
      }
      int v143 = &v110[16 * v112];
      uint64_t v145 = *(void *)v143;
      uint64_t v144 = *((void *)v143 + 1);
      BOOL v123 = __OFSUB__(v144, v145);
      uint64_t v146 = v144 - v145;
      if (v123) {
        goto LABEL_232;
      }
      if (v146 < v134)
      {
        uint64_t v9 = v187;
        goto LABEL_198;
      }
    }
    unint64_t v151 = v112 - 1;
    if (v112 - 1 >= v109)
    {
      __break(1u);
LABEL_221:
      __break(1u);
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
LABEL_224:
      __break(1u);
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
LABEL_227:
      __break(1u);
LABEL_228:
      __break(1u);
LABEL_229:
      __break(1u);
LABEL_230:
      __break(1u);
LABEL_231:
      __break(1u);
LABEL_232:
      __break(1u);
LABEL_233:
      __break(1u);
LABEL_234:
      __break(1u);
      goto LABEL_235;
    }
    uint64_t v152 = *v10;
    if (!*v10) {
      goto LABEL_247;
    }
    uint64_t v153 = &v110[16 * v151];
    uint64_t v154 = *(void *)v153;
    unint64_t v155 = v112;
    int64_t v156 = &v110[16 * v112];
    uint64_t v157 = *((void *)v156 + 1);
    uint64_t v158 = &v152[56 * *(void *)v153];
    uint64_t v191 = &v152[56 * *(void *)v156];
    __int16 v159 = &v152[56 * v157];
    swift_bridgeObjectRetain();
    sub_24F84343C(v158, v191, v159, v179, v188);
    if (!v185)
    {
      if (v157 < v154) {
        goto LABEL_221;
      }
      if (v155 > *((void *)v187 + 2)) {
        goto LABEL_222;
      }
      *(void *)uint64_t v153 = v154;
      *(void *)&v110[16 * v151 + 8] = v157;
      unint64_t v160 = *((void *)v187 + 2);
      if (v155 >= v160) {
        goto LABEL_223;
      }
      uint64_t v185 = 0;
      unint64_t v109 = v160 - 1;
      memmove(v156, v156 + 16, 16 * (v160 - 1 - v155));
      uint64_t v9 = v187;
      *((void *)v187 + 2) = v160 - 1;
      BOOL v140 = v160 > 2;
      a2 = v188;
      uint64_t v10 = v180;
      if (!v140) {
        goto LABEL_198;
      }
      continue;
    }
    break;
  }
  uint64_t v161 = v173;
LABEL_203:
  swift_bridgeObjectRelease();
  *(void *)(v161 + 16) = 0;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F842EC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = sub_24F8CFD00();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_24F842F90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v5 = a5;
  uint64_t v48 = a1;
  if (a3 == a2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = a3;
  BOOL v45 = a5 + 7;
  while (2)
  {
    uint64_t v44 = v8;
    while (1)
    {
      uint64_t v9 = *a4 + 56 * v8;
      sub_24F781214(v9, (uint64_t)&v47, &qword_26B1F5598);
      sub_24F781214(v9 - 56, (uint64_t)&v46, &qword_26B1F5598);
      uint64_t v10 = sub_24F8CED00();
      uint64_t v12 = v11;
      uint64_t v13 = v5;
      uint64_t v14 = v5[2];
      if (!v14) {
        break;
      }
      uint64_t v15 = v10;
      BOOL v16 = v5[4] == v10 && v5[5] == v11;
      if (!v16 && (sub_24F8CFD00() & 1) == 0)
      {
        BOOL v27 = v45;
        uint64_t v28 = 1;
        while (v14 != v28)
        {
          uint64_t v17 = v28;
          if (*(v27 - 1) != v15 || *v27 != v12)
          {
            char v30 = sub_24F8CFD00();
            uint64_t v28 = v17 + 1;
            v27 += 2;
            if ((v30 & 1) == 0) {
              continue;
            }
          }
          goto LABEL_12;
        }
        break;
      }
      uint64_t v17 = 0;
LABEL_12:
      uint64_t v18 = a4;
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_24F8CED00();
      uint64_t v21 = v20;
      uint64_t v22 = v13[2];
      if (v22)
      {
        uint64_t v23 = v19;
        BOOL v24 = v13[4] == v19 && v13[5] == v20;
        if (v24 || (sub_24F8CFD00() & 1) != 0)
        {
          uint64_t v25 = 0;
LABEL_19:
          swift_bridgeObjectRelease();
          sub_24F774DA0((uint64_t)&v46, &qword_26B1F5598);
          uint64_t result = sub_24F774DA0((uint64_t)&v47, &qword_26B1F5598);
          BOOL v26 = v17 < v25;
          a4 = v18;
          uint64_t v5 = v13;
          if (!v26) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        uint64_t v31 = v45;
        uint64_t v32 = 1;
        while (v22 != v32)
        {
          uint64_t v25 = v32;
          if (*(v31 - 1) != v23 || *v31 != v21)
          {
            char v34 = sub_24F8CFD00();
            uint64_t v32 = v25 + 1;
            v31 += 2;
            if ((v34 & 1) == 0) {
              continue;
            }
          }
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      sub_24F774DA0((uint64_t)&v46, &qword_26B1F5598);
      uint64_t result = sub_24F774DA0((uint64_t)&v47, &qword_26B1F5598);
      a4 = v18;
      uint64_t v5 = v13;
LABEL_38:
      uint64_t v35 = *a4;
      if (!*a4)
      {
        __break(1u);
        return result;
      }
      unint64_t v36 = (long long *)(v35 + 56 * v8);
      uint64_t v37 = *((void *)v36 + 6);
      long long v39 = v36[1];
      long long v38 = v36[2];
      long long v40 = *v36;
      uint64_t v41 = (long long *)(v35 + 56 * (v8 - 1));
      long long v42 = v41[1];
      *unint64_t v36 = *v41;
      v36[1] = v42;
      uint64_t v36[2] = v41[2];
      *((void *)v36 + 6) = *((void *)v41 + 6);
      long long *v41 = v40;
      v41[1] = v39;
      long long v41[2] = v38;
      *((void *)v41 + 6) = v37;
      if (--v8 == v48) {
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease();
    sub_24F774DA0((uint64_t)&v46, &qword_26B1F5598);
    sub_24F774DA0((uint64_t)&v47, &qword_26B1F5598);
    uint64_t v5 = v13;
LABEL_42:
    uint64_t v8 = v44 + 1;
    if (v44 + 1 != a2) {
      continue;
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24F843280(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_24F8B4E84(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    uint64_t v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 16;
      uint64_t v20 = v12 - 16;
      BOOL v21 = *((void *)v12 - 2) == *((void *)v6 - 2) && *((void *)v12 - 1) == *((void *)v6 - 1);
      if (v21 || (sub_24F8CFD00() & 1) == 0)
      {
        BOOL v23 = v19 != v12 || v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_47;
      }
    }
  }
  sub_24F8B4E84(a1, (a2 - a1) / 16, a4);
  uint64_t v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_24F8CFD00() & 1) != 0) {
        break;
      }
      uint64_t v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    uint64_t v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  uint64_t v25 = (v12 - v4) / 16;
  if (v6 != v4 || v6 >= &v4[16 * v25]) {
    memmove(v6, v4, 16 * v25);
  }
  return 1;
}

uint64_t sub_24F84343C(char *a1, char *a2, char *a3, char *a4, void *a5)
{
  uint64_t v5 = a5;
  uint64_t v7 = a3;
  uint64_t v8 = a2;
  uint64_t v9 = a1;
  uint64_t v10 = a2 - a1;
  uint64_t v11 = (a2 - a1) / 56;
  uint64_t v12 = a3 - a2;
  uint64_t v13 = (a3 - a2) / 56;
  if (v11 >= v13)
  {
    sub_24F8B5048(a2, (a3 - a2) / 56, a4);
    uint64_t v44 = &a4[56 * v13];
    uint64_t v15 = a4;
    if (v9 >= v8 || v12 <= 55)
    {
      BOOL v14 = v44;
    }
    else
    {
      uint64_t v79 = v5 + 7;
      uint64_t v89 = a4;
      BOOL v14 = v44;
      unint64_t v80 = (unint64_t)v9;
      do
      {
        uint64_t v84 = v7;
        sub_24F781214((uint64_t)(v14 - 56), (uint64_t)&v88, &qword_26B1F5598);
        BOOL v45 = v8 - 56;
        sub_24F781214((uint64_t)(v8 - 56), (uint64_t)&v87, &qword_26B1F5598);
        uint64_t v46 = sub_24F8CED00();
        uint64_t v48 = v47;
        uint64_t v49 = v5[2];
        uint64_t v82 = v14 - 56;
        if (v49)
        {
          uint64_t v50 = v46;
          BOOL v51 = v5[4] == v46 && v5[5] == v47;
          uint64_t v86 = v14;
          if (v51 || (sub_24F8CFD00() & 1) != 0)
          {
            uint64_t v52 = 0;
LABEL_65:
            swift_bridgeObjectRelease();
            uint64_t v53 = sub_24F8CED00();
            uint64_t v55 = v54;
            uint64_t v56 = v5[2];
            if (v56)
            {
              uint64_t v57 = v53;
              BOOL v58 = v5[4] == v53 && v5[5] == v54;
              if (v58 || (sub_24F8CFD00() & 1) != 0)
              {
                uint64_t v59 = 0;
LABEL_72:
                uint64_t v60 = v8;
                swift_bridgeObjectRelease();
                BOOL v61 = v52 < v59;
              }
              else
              {
                uint64_t v67 = v79;
                uint64_t v68 = 1;
                while (v56 != v68)
                {
                  uint64_t v59 = v68;
                  if (*(v67 - 1) != v57 || *v67 != v55)
                  {
                    char v70 = sub_24F8CFD00();
                    uint64_t v68 = v59 + 1;
                    v67 += 2;
                    if ((v70 & 1) == 0) {
                      continue;
                    }
                  }
                  goto LABEL_72;
                }
                uint64_t v60 = v8;
                swift_bridgeObjectRelease();
                BOOL v61 = 1;
              }
              char v62 = a5;
            }
            else
            {
              char v62 = v5;
              uint64_t v60 = v8;
              swift_bridgeObjectRelease();
              BOOL v61 = 1;
            }
          }
          else
          {
            uint64_t v63 = v79;
            uint64_t v64 = 1;
            while (v49 != v64)
            {
              uint64_t v52 = v64;
              if (*(v63 - 1) != v50 || *v63 != v48)
              {
                char v66 = sub_24F8CFD00();
                uint64_t v64 = v52 + 1;
                v63 += 2;
                if ((v66 & 1) == 0) {
                  continue;
                }
              }
              goto LABEL_65;
            }
            char v62 = v5;
            uint64_t v60 = v8;
            swift_bridgeObjectRelease();
            BOOL v61 = 0;
          }
          uint64_t v15 = v89;
          BOOL v14 = v86;
        }
        else
        {
          char v62 = v5;
          uint64_t v60 = v8;
          swift_bridgeObjectRelease();
          BOOL v61 = 0;
        }
        uint64_t v7 = v84 - 56;
        sub_24F774DA0((uint64_t)&v87, &qword_26B1F5598);
        sub_24F774DA0((uint64_t)&v88, &qword_26B1F5598);
        if (v61)
        {
          BOOL v71 = v84 != v60 || v7 >= v60;
          v8 -= 56;
        }
        else
        {
          BOOL v71 = v84 != v14 || v7 >= v14;
          BOOL v14 = v82;
          BOOL v45 = v82;
          uint64_t v8 = v60;
        }
        uint64_t v5 = v62;
        if (v71)
        {
          long long v72 = *(_OWORD *)v45;
          long long v73 = *((_OWORD *)v45 + 1);
          long long v74 = *((_OWORD *)v45 + 2);
          *((void *)v84 - 1) = *((void *)v45 + 6);
          *(_OWORD *)(v84 - 4sub_24F8565FC((uint64_t)sub_24F83A860, 0) = v73;
          *(_OWORD *)(v84 - 24) = v74;
          *(_OWORD *)uint64_t v7 = v72;
        }
      }
      while (v14 > v15 && (unint64_t)v8 > v80);
    }
  }
  else
  {
    sub_24F8B5048(a1, (a2 - a1) / 56, a4);
    BOOL v14 = &a4[56 * v11];
    uint64_t v15 = a4;
    if (v8 < v7 && v10 > 55)
    {
      uint64_t v83 = v5 + 7;
      uint64_t v85 = &a4[56 * v11];
      while (1)
      {
        sub_24F781214((uint64_t)v8, (uint64_t)&v88, &qword_26B1F5598);
        uint64_t v89 = v15;
        sub_24F781214((uint64_t)v15, (uint64_t)&v87, &qword_26B1F5598);
        uint64_t v16 = sub_24F8CED00();
        uint64_t v18 = v17;
        uint64_t v19 = v5[2];
        if (!v19) {
          goto LABEL_29;
        }
        uint64_t v20 = v16;
        BOOL v21 = v5[4] == v16 && v5[5] == v17;
        if (!v21 && (sub_24F8CFD00() & 1) == 0) {
          break;
        }
        uint64_t v22 = 0;
LABEL_12:
        swift_bridgeObjectRelease();
        uint64_t v23 = sub_24F8CED00();
        uint64_t v25 = v24;
        uint64_t v26 = v5[2];
        if (!v26) {
          goto LABEL_41;
        }
        uint64_t v27 = v23;
        BOOL v28 = a5[4] == v23 && a5[5] == v24;
        if (!v28 && (sub_24F8CFD00() & 1) == 0)
        {
          unint64_t v36 = v83;
          uint64_t v37 = 1;
          while (v26 != v37)
          {
            uint64_t v29 = v37;
            if (*(v36 - 1) != v27 || *v36 != v25)
            {
              char v39 = sub_24F8CFD00();
              uint64_t v37 = v29 + 1;
              v36 += 2;
              if ((v39 & 1) == 0) {
                continue;
              }
            }
            goto LABEL_19;
          }
LABEL_41:
          swift_bridgeObjectRelease();
          sub_24F774DA0((uint64_t)&v87, &qword_26B1F5598);
          sub_24F774DA0((uint64_t)&v88, &qword_26B1F5598);
          uint64_t v5 = a5;
LABEL_42:
          BOOL v21 = v9 == v8;
          char v34 = v8;
          v8 += 56;
          BOOL v35 = !v21 || v9 >= v8;
          uint64_t v15 = v89;
          goto LABEL_46;
        }
        uint64_t v29 = 0;
LABEL_19:
        swift_bridgeObjectRelease();
        sub_24F774DA0((uint64_t)&v87, &qword_26B1F5598);
        sub_24F774DA0((uint64_t)&v88, &qword_26B1F5598);
        uint64_t v5 = a5;
        if (v22 < v29) {
          goto LABEL_42;
        }
LABEL_30:
        char v34 = v89;
        uint64_t v15 = v89 + 56;
        BOOL v35 = v9 != v89 || v9 >= v15;
LABEL_46:
        BOOL v14 = v85;
        if (v35)
        {
          long long v40 = *(_OWORD *)v34;
          long long v41 = *((_OWORD *)v34 + 1);
          long long v42 = *((_OWORD *)v34 + 2);
          *((void *)v9 + 6) = *((void *)v34 + 6);
          *((_OWORD *)v9 + 1) = v41;
          *((_OWORD *)v9 + 2) = v42;
          *(_OWORD *)uint64_t v9 = v40;
        }
        v9 += 56;
        if (v15 >= v85 || v8 >= v7) {
          goto LABEL_54;
        }
      }
      char v30 = v83;
      uint64_t v31 = 1;
      while (v19 != v31)
      {
        uint64_t v22 = v31;
        if (*(v30 - 1) != v20 || *v30 != v18)
        {
          char v33 = sub_24F8CFD00();
          uint64_t v31 = v22 + 1;
          v30 += 2;
          if ((v33 & 1) == 0) {
            continue;
          }
        }
        goto LABEL_12;
      }
LABEL_29:
      swift_bridgeObjectRelease();
      sub_24F774DA0((uint64_t)&v87, &qword_26B1F5598);
      sub_24F774DA0((uint64_t)&v88, &qword_26B1F5598);
      goto LABEL_30;
    }
LABEL_54:
    uint64_t v8 = v9;
  }
  uint64_t v76 = (v14 - v15) / 56;
  if (v8 != v15 || v8 >= &v15[56 * v76]) {
    memmove(v8, v15, 56 * v76);
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_24F8439F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F843A34()
{
  __n128 v1 = sub_24F777720();
  return sub_24F83FF70(v2, *(void *)(v0 + 80), *(void *)(v0 + 88), v3, v1.n128_i64[0], v1.n128_i64[1], v4);
}

uint64_t sub_24F843A64(uint64_t a1)
{
  if (swift_isClassType()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_24F843A94@<X0>(uint64_t a1@<X8>)
{
  return sub_24F841790(a1);
}

uint64_t sub_24F843AC8(uint64_t a1)
{
  return sub_24F84165C(a1);
}

uint64_t destroy for DatabaseSchemaCache()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DatabaseSchemaCache(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DatabaseSchemaCache(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DatabaseSchemaCache(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DatabaseSchemaCache()
{
  return &type metadata for DatabaseSchemaCache;
}

uint64_t sub_24F843CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

uint64_t sub_24F843CF4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_24F843D70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if (sub_24F777048((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    sub_24F7771BC((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_24F843E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24F777048(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_24F843F08(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = sub_24F777048((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  if (v6)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v8 = *(void *)(v7 + 64);
    }
    else {
      size_t v8 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    sub_24F7771BC((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_24F843FCC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = sub_24F777048((uint64_t)a1, 1, v5);
  int v7 = sub_24F777048((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      sub_24F7771BC((uint64_t)a1, 0, 1, v5);
      return a1;
    }
    int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v10 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

void *sub_24F8440F4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = sub_24F777048((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  if (v6)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v8 = *(void *)(v7 + 64);
    }
    else {
      size_t v8 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    sub_24F7771BC((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_24F8441B8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = sub_24F777048((uint64_t)a1, 1, v5);
  int v7 = sub_24F777048((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      sub_24F7771BC((uint64_t)a1, 0, 1, v5);
      return a1;
    }
    int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v10 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

uint64_t sub_24F8442E0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 > 3) {
            LODWORD(v7) = 4;
          }
          switch((int)v7)
          {
            case 2:
              LODWORD(v7) = *a1;
              break;
            case 3:
              LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v7) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v7) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v6 + (v7 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v14 = sub_24F777048((uint64_t)a1, v5, v4);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_24F844464(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v9) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v10;
  unsigned int v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        int v6 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v15 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v16 = ~v10 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v18 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x24F844684);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (a2)
      {
LABEL_28:
        if (v9 >= 2)
        {
          uint64_t v19 = a2 + 1;
          sub_24F7771BC((uint64_t)a1, v19, v9, v7);
        }
      }
      return;
  }
}

uint64_t sub_24F8446AC(uint64_t a1, uint64_t a2)
{
  return sub_24F777048(a1, 1, *(void *)(a2 + 16));
}

uint64_t sub_24F8446B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F7771BC(a1, a2, 1, *(void *)(a3 + 16));
}

uint64_t type metadata accessor for DatabaseSchemaCache.Presence()
{
  return sub_24F777DE0();
}

uint64_t DatabaseSnapshot.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7EEC68(*(void *)(*(void *)(v1 + 16) + 16) + OBJC_IVAR____TtC12GRDBInternal8Database_configuration, a1);
}

uint64_t sub_24F8446FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v22[2] = a7;
  sub_24F773850();
  v22[0] = v12;
  v22[1] = v11;
  uint64_t v13 = type metadata accessor for Configuration();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  unsigned int v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  int v18 = (char *)v22 - v17;
  type metadata accessor for DatabasePool();
  uint64_t v23 = a3;
  sub_24F88291C(a3, (uint64_t)v18);
  v18[41] = 1;
  sub_24F7EEC68((uint64_t)v18, (uint64_t)v16);
  type metadata accessor for SerializedDatabase();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v19 = v22[3];
  sub_24F88ABFC();
  if (v19)
  {
    swift_bridgeObjectRelease();
    sub_24F7EECCC(v23);
    sub_24F7EECCC((uint64_t)v18);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v7 + 16) = v20;
    MEMORY[0x270FA5388](v20);
    v22[-2] = a1;
    v22[-1] = a2;
    sub_24F8565FC((uint64_t)sub_24F844E2C, (uint64_t)&v22[-4]);
    swift_bridgeObjectRelease();
    sub_24F7EECCC(v23);
    sub_24F7EECCC((uint64_t)v18);
  }
  return v7;
}

void sub_24F8448F4(uint64_t a1)
{
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  uint64_t v2 = sub_24F8827D0(a1, 0xD000000000000013, 0x800000024F8D3720, MEMORY[0x263F8EE78], MEMORY[0x263F8EE80], (uint64_t)v10);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F778734((uint64_t)v10);
  if (!v1)
  {
    if (!v4)
    {
LABEL_8:
      *(void *)&v10[0] = 0;
      *((void *)&v10[0] + 1) = 0xE000000000000000;
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      *(void *)&v10[0] = 0xD000000000000023;
      *((void *)&v10[0] + 1) = 0x800000024F8D3740;
      sub_24F8CEEB0();
      long long v7 = v10[0];
      sub_24F7DC6DC();
      swift_allocError();
      *(_DWORD *)uint64_t v8 = 1;
      *(_OWORD *)(v8 + 8) = v7;
      *(_OWORD *)(v8 + 24) = 0u;
      *(_OWORD *)(v8 + 4sub_24F8565FC((uint64_t)sub_24F83A860, 0) = 0u;
      *(unsigned char *)(v8 + 56) = 0;
      swift_willThrow();
      return;
    }
    if (v2 == 7102839 && v4 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v6 = sub_24F8CFD00();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0) {
        goto LABEL_8;
      }
    }
    LOBYTE(v10[0]) = 0;
    Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)v10);
    if (!v9)
    {
      sub_24F772E94(0xD00000000000002ALL, 0x800000024F8D3770);
      v10[0] = 0uLL;
      sub_24F8987B8((uint64_t *)v10);
      swift_release();
      sub_24F8AAD90();
      swift_release();
    }
  }
}

uint64_t DatabaseSnapshot.deinit()
{
  sub_24F88A7D8(*(void *)(v0 + 16));
  swift_release();
  return v0;
}

void sub_24F844B60(BOOL *a1@<X8>)
{
  Database.commit()();
  if (v2) {

  }
  *a1 = v2 != 0;
}

uint64_t DatabaseSnapshot.__deallocating_deinit()
{
  sub_24F88A7D8(*(void *)(v0 + 16));
  swift_release();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseSnapshot.close()()
{
}

void sub_24F844C48()
{
}

Swift::Void __swiftcall DatabaseSnapshot.interrupt()()
{
}

void sub_24F844C88()
{
}

uint64_t DatabaseSnapshot.asyncRead(_:)(uint64_t a1, uint64_t a2)
{
  return sub_24F83A610(a1, a2, (uint64_t)&unk_27010A7E8, (uint64_t)sub_24F844E64);
}

void DatabaseSnapshot.unsafeRead<A>(_:)()
{
}

uint64_t DatabaseSnapshot.asyncUnsafeRead(_:)(uint64_t a1, uint64_t a2)
{
  return sub_24F83A610(a1, a2, (uint64_t)&unk_27010A810, (uint64_t)sub_24F83ADF0);
}

void sub_24F844D0C()
{
}

void DatabaseSnapshot.unsafeReentrantRead<A>(_:)()
{
}

uint64_t DatabaseSnapshot._add<A>(observation:scheduling:onChange:)()
{
  sub_24F773850();
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  long long v3 = *(_OWORD *)(v0 + 16);
  v13[0] = *(_OWORD *)v0;
  v13[1] = v3;
  long long v4 = *(_OWORD *)(v0 + 48);
  void v13[2] = *(_OWORD *)(v0 + 32);
  void v13[3] = v4;
  v13[4] = *(_OWORD *)(v0 + 64);
  char v14 = v1;
  uint64_t v15 = v2;
  long long v16 = *(_OWORD *)(v0 + 96);
  return sub_24F887BB0(v13, v5, v6, v7, v11, v8, (uint64_t)&protocol witness table for DatabaseSnapshot, v9, v10);
}

uint64_t sub_24F844DB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for DatabaseSnapshot()
{
  return self;
}

uint64_t method lookup function for DatabaseSnapshot(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DatabaseSnapshot);
}

void sub_24F844E2C(uint64_t a1)
{
}

void DatabaseSnapshot.read<A>(_:)()
{
}

uint64_t HasManyThroughAssociation._sqlAssociation.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t HasManyThroughAssociation._sqlAssociation.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *char v1 = v2;
  return result;
}

uint64_t (*HasManyThroughAssociation._sqlAssociation.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_24F844EC0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F844EFC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void (*sub_24F844F40(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = HasManyThroughAssociation._sqlAssociation.modify();
  return sub_24F79A608;
}

uint64_t sub_24F844F98(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_24F844FD4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for HasManyThroughAssociation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F845028()
{
  uint64_t result = type metadata accessor for ReceiveValuesOnSubscription.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24F8450D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v26 = a6;
  uint64_t v27 = a5;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v24 - v13;
  sub_24F77AD10();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_24F77C5E8();
  sub_24F77AD10();
  MEMORY[0x270FA5388](v18);
  sub_24F76B830();
  uint64_t v21 = v20 - v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20 - v19, v6, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v6, v24, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v25, v9);
  return sub_24F845590(v21, v6, (uint64_t)v14, a3, a4, v26);
}

uint64_t sub_24F845294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a1;
  uint64_t v41 = a4;
  sub_24F77AD10();
  uint64_t v39 = v7;
  MEMORY[0x270FA5388](v8);
  sub_24F76B830();
  uint64_t v38 = v10 - v9;
  uint64_t v12 = *(void *)(v11 + 40);
  uint64_t v13 = *(void *)(v11 + 24);
  swift_getAssociatedTypeWitness();
  sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v36 = v15;
  uint64_t v37 = v14;
  MEMORY[0x270FA5388](v14);
  BOOL v35 = (char *)&v34 - v16;
  sub_24F77AD10();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  sub_24F76B830();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = *(void *)(a2 + 16);
  sub_24F77AD10();
  uint64_t v25 = v24;
  MEMORY[0x270FA5388](v26);
  sub_24F77C5E8();
  uint64_t v27 = *(void *)(a2 + 32);
  v42[0] = v23;
  v42[1] = v13;
  v42[2] = a3;
  uint64_t v43 = v27;
  uint64_t WitnessTable = v12;
  uint64_t v45 = v41;
  uint64_t v28 = type metadata accessor for ReceiveValuesOnSubscription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v4, v4, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, v4 + *(int *)(a2 + 52), v13);
  uint64_t v29 = v4 + *(int *)(a2 + 56);
  uint64_t v30 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v29, v37);
  uint64_t v31 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v40, a3);
  uint64_t v32 = sub_24F84552C(v4, v22, v30, v31);
  uint64_t v43 = v28;
  uint64_t WitnessTable = swift_getWitnessTable();
  v42[0] = v32;
  sub_24F8CEAB0();
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v42);
}

uint64_t sub_24F84552C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F845840(a1, a2, a3, a4);
}

uint64_t sub_24F845590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a6, a1, a4);
  uint64_t v10 = type metadata accessor for ReceiveValuesOn();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + *(int *)(v10 + 52), a2, a5);
  uint64_t v11 = a6 + *(int *)(v10 + 56);
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24F8CF610();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a3, v12);
}

uint64_t sub_24F8456D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a6, a1, a4);
  uint64_t v10 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  uint64_t v11 = a6 + *(int *)(v10 + 68);
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24F8CF610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a2, v12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + *(int *)(v10 + 72), a3, a5);
}

uint64_t sub_24F84582C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F845294(a1, a4, a2, a3);
}

uint64_t sub_24F845840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a1;
  uint64_t v6 = *(void **)v4;
  uint64_t v7 = *(void *)(*(void *)v4 + 80);
  uint64_t v8 = *(void *)(*(void *)v4 + 88);
  uint64_t v26 = *(void *)(*(void *)v4 + 96);
  uint64_t v25 = v6[13];
  uint64_t v9 = v6[14];
  uint64_t v10 = v6[15];
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  uint64_t v23 = v8;
  uint64_t v24 = v10;
  uint64_t v32 = v26;
  uint64_t v33 = v25;
  uint64_t v34 = v9;
  uint64_t v35 = v10;
  uint64_t v11 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = v6[17];
  *(void *)(v4 + v15) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AE0]), sel_init);
  uint64_t v16 = a4;
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  sub_24F8456D4(v27, v28, v16, v8, v26, (uint64_t)v14);
  uint64_t v19 = v4 + *(void *)(*(void *)v4 + 128);
  uint64_t v20 = v19 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v19, v29, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  uint64_t v30 = v7;
  uint64_t v31 = v23;
  uint64_t v32 = v18;
  uint64_t v33 = v17;
  uint64_t v34 = v9;
  uint64_t v35 = v24;
  type metadata accessor for ReceiveValuesOnSubscription.State();
  swift_storeEnumTagMultiPayload();
  return v4;
}

id sub_24F845ABC()
{
  return sub_24F8796E0((uint64_t)sub_24F7C3BA8, 0);
}

uint64_t sub_24F845B30(uint64_t (**a1)(), uint64_t *a2, uint64_t a3)
{
  uint64_t v68 = a3;
  long long v69 = a1;
  uint64_t v4 = *a2;
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t v7 = *(void *)(*a2 + 96);
  uint64_t v8 = *(void *)(*a2 + 104);
  uint64_t v9 = *(void *)(*a2 + 112);
  uint64_t v10 = *(void *)(*a2 + 120);
  *(void *)&long long v72 = *(void *)(*a2 + 80);
  uint64_t v5 = v72;
  *((void *)&v72 + 1) = v6;
  uint64_t v73 = v7;
  uint64_t v74 = v8;
  uint64_t v75 = v9;
  uint64_t v76 = v10;
  uint64_t v11 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v71 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v65 = (char *)&v56 - v13;
  uint64_t v67 = *(void *)(v72 - 8);
  uint64_t v14 = *(void *)(v67 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v59 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v66 = (char *)&v56 - v16;
  *(void *)&long long v72 = v5;
  *((void *)&v72 + 1) = v6;
  uint64_t v63 = v7;
  uint64_t v64 = v6;
  uint64_t v73 = v7;
  uint64_t v74 = v8;
  uint64_t v61 = v8;
  uint64_t v62 = v9;
  uint64_t v75 = v9;
  uint64_t v76 = v10;
  uint64_t v60 = v10;
  uint64_t v17 = type metadata accessor for ReceiveValuesOnSubscription.State();
  uint64_t v18 = *(void (***)(void, void, void))(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v56 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v56 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v56 - v28;
  uint64_t v30 = (uint64_t)a2 + *(void *)(v4 + 128);
  swift_beginAccess();
  ((void (**)(char *, uint64_t, uint64_t))v18)[2](v29, v30, v17);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v44 = v71;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      long long v69 = *(uint64_t (***)())&v29[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v46 = v70;
      uint64_t v47 = v65;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v65, v29, v44);
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v21, v47, v44);
      sub_24F8CEB10();
      uint64_t v48 = v68;
      LOBYTE(v46) = sub_24F8CEAF0();
      uint64_t v49 = sub_24F8CEB10();
      if (v46) {
        goto LABEL_11;
      }
      uint64_t v50 = v69;
      if (sub_24F8CEAF0()) {
        goto LABEL_8;
      }
      if ((((unint64_t)v50 | v48) & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_14;
      }
      uint64_t v49 = (uint64_t)v50 + v48;
      if (!__OFADD__(v48, v50))
      {
        if ((v49 & 0x8000000000000000) == 0) {
          goto LABEL_11;
        }
LABEL_14:
        __break(1u);
        JUMPOUT(0x24F846264);
      }
LABEL_8:
      uint64_t v49 = sub_24F8CEB10();
LABEL_11:
      uint64_t v55 = *(int *)(TupleTypeMetadata2 + 48);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v71);
      *(void *)&v21[v55] = v49;
      swift_storeEnumTagMultiPayload();
      ((void (**)(char *, char *, uint64_t))v18)[4](v27, v21, v17);
      swift_beginAccess();
      ((void (**)(uint64_t, char *, uint64_t))v18)[5](v30, v27, v17);
      return swift_endAccess();
    case 2:
      BOOL v51 = v69;
      sub_24F839BC8(*v69, v69[1]);
      sub_24F7688B8(qword_269A2BAE0);
      uint64_t v52 = v71;
      uint64_t v53 = swift_getTupleTypeMetadata2();
      sub_24F794DE0((long long *)&v29[*(int *)(v53 + 48)], (uint64_t)&v72);
      uint64_t v54 = swift_allocObject();
      sub_24F794DE0(&v72, v54 + 16);
      *(void *)(v54 + 56) = v68;
      *BOOL v51 = sub_24F84F890;
      v51[1] = (uint64_t (*)())v54;
      return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v29, v52);
    case 3:
      return result;
    default:
      sub_24F839BC8(*v69, v69[1]);
      uint64_t v32 = v71;
      uint64_t v57 = &v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      BOOL v58 = v18;
      uint64_t v65 = *(char **)(v67 + 32);
      v67 += 32;
      ((void (*)(char *, char *, uint64_t))v65)(v66, v29, v5);
      uint64_t v33 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v27, v57, v32);
      *(void *)&v27[v33] = v68;
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = v58;
      ((void (**)(char *, char *, uint64_t))v58)[4](v24, v27, v17);
      swift_beginAccess();
      ((void (**)(uint64_t, char *, uint64_t))v34)[5](v30, v24, v17);
      swift_endAccess();
      uint64_t v35 = v59;
      uint64_t v36 = v67;
      uint64_t v37 = v65;
      ((void (*)(char *, char *, uint64_t))v65)(v59, v66, v5);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 48) + 64) & ~(unint64_t)*(unsigned __int8 *)(v36 + 48);
      uint64_t v39 = (uint64_t (*)())swift_allocObject();
      uint64_t v40 = v64;
      *((void *)v39 + 2) = v5;
      *((void *)v39 + 3) = v40;
      uint64_t v41 = v61;
      *((void *)v39 + 4) = v63;
      *((void *)v39 + 5) = v41;
      uint64_t v42 = v60;
      *((void *)v39 + 6) = v62;
      *((void *)v39 + 7) = v42;
      ((void (*)(char *, char *, uint64_t))v37)((char *)v39 + v38, v35, v5);
      *(void *)((char *)v39 + ((v14 + v38 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
      uint64_t v43 = v69;
      *long long v69 = sub_24F84F838;
      v43[1] = v39;
      return swift_retain();
  }
}

uint64_t sub_24F846274()
{
  return sub_24F8CEB80();
}

id sub_24F84635C()
{
  return sub_24F8796E0((uint64_t)sub_24F7C44C8, 0);
}

uint64_t sub_24F8463C4(uint64_t (**a1)(), uint64_t *a2)
{
  uint64_t v28 = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a2 + 80);
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v6 = *(void *)(*a2 + 96);
  uint64_t v7 = *(void *)(*a2 + 104);
  uint64_t v8 = *(void *)(*a2 + 112);
  uint64_t v9 = *(void *)(*a2 + 120);
  *(void *)&long long v31 = v4;
  *((void *)&v31 + 1) = v5;
  uint64_t v32 = v6;
  uint64_t v33 = v7;
  uint64_t v34 = v8;
  uint64_t v35 = v9;
  uint64_t v10 = type metadata accessor for ReceiveValuesOnSubscription.State();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = v3;
  uint64_t v17 = v16;
  uint64_t v18 = (uint64_t)a2 + *(void *)(v15 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v14, v18, v10);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      *(void *)&long long v31 = v4;
      *((void *)&v31 + 1) = v5;
      uint64_t v32 = v6;
      uint64_t v33 = v7;
      uint64_t v34 = v8;
      uint64_t v35 = v9;
      uint64_t v4 = type metadata accessor for ReceiveValuesOnSubscription.Target();
      goto LABEL_4;
    case 2:
      sub_24F839BC8(*v28, v28[1]);
      *(void *)&long long v31 = v4;
      *((void *)&v31 + 1) = v5;
      uint64_t v32 = v6;
      uint64_t v33 = v7;
      uint64_t v34 = v8;
      uint64_t v35 = v9;
      uint64_t v23 = type metadata accessor for ReceiveValuesOnSubscription.Target();
      sub_24F7688B8(qword_269A2BAE0);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      sub_24F794DE0((long long *)&v14[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)&v31);
      uint64_t v25 = v29;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 40))(v18, v25, v10);
      swift_endAccess();
      sub_24F794DE0(&v31, (uint64_t)v30);
      uint64_t v26 = swift_allocObject();
      sub_24F794DE0(v30, v26 + 16);
      uint64_t v27 = v28;
      *uint64_t v28 = sub_24F84F780;
      v27[1] = (uint64_t (*)())v26;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v14, v23);
      break;
    case 3:
      return result;
    default:
      *(void *)&long long v31 = v4;
      *((void *)&v31 + 1) = v5;
      uint64_t v32 = v6;
      uint64_t v33 = v7;
      uint64_t v34 = v8;
      uint64_t v35 = v9;
      uint64_t v20 = type metadata accessor for ReceiveValuesOnSubscription.Target();
      uint64_t v21 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(&v14[*(int *)(v21 + 48)], v20);
LABEL_4:
      uint64_t v22 = v29;
      (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v14, v4);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 40))(v18, v22, v10);
      uint64_t result = swift_endAccess();
      break;
  }
  return result;
}

id sub_24F8467F0()
{
  return sub_24F8796E0((uint64_t)sub_24F846864, 0);
}

unint64_t sub_24F846864()
{
  return 0xD000000000000016;
}

uint64_t sub_24F846880(uint64_t (**a1)(), uint64_t *a2, uint64_t a3)
{
  uint64_t v37 = a3;
  unint64_t v38 = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 80);
  uint64_t v6 = *(void *)(*a2 + 88);
  uint64_t v7 = *(void *)(*a2 + 96);
  uint64_t v8 = *(void *)(*a2 + 104);
  uint64_t v9 = *(void *)(*a2 + 112);
  uint64_t v35 = *(void *)(*a2 + 120);
  uint64_t v36 = v5;
  *(void *)&long long v39 = v5;
  *((void *)&v39 + 1) = v6;
  uint64_t v40 = v7;
  uint64_t v41 = v8;
  uint64_t v42 = v9;
  uint64_t v43 = v35;
  uint64_t v10 = type metadata accessor for ReceiveValuesOnSubscription.State();
  uint64_t v11 = *(void (***)(void, void, void))(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v34 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v34 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = (uint64_t)a2 + *(void *)(v4 + 128);
  swift_beginAccess();
  ((void (**)(char *, uint64_t, uint64_t))v11)[2](v18, v19, v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24F839BC8(*v38, v38[1]);
      *(void *)&long long v39 = v36;
      *((void *)&v39 + 1) = v6;
      uint64_t v40 = v7;
      uint64_t v41 = v8;
      uint64_t v42 = v9;
      uint64_t v43 = v35;
      uint64_t v20 = type metadata accessor for ReceiveValuesOnSubscription.Target();
      uint64_t v21 = *(void *)&v18[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      sub_24F7688B8(qword_269A2BAE0);
      uint64_t v22 = (uint64_t)&v16[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v16, v18, v20);
      uint64_t v23 = v37;
      sub_24F775458(v37, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = v34;
      ((void (**)(char *, char *, uint64_t))v11)[4](v34, v16, v10);
      swift_beginAccess();
      ((void (**)(uint64_t, char *, uint64_t))v11)[5](v19, v24, v10);
      swift_endAccess();
      sub_24F775458(v23, (uint64_t)&v39);
      uint64_t v25 = swift_allocObject();
      uint64_t result = sub_24F794DE0(&v39, v25 + 16);
      *(void *)(v25 + 56) = v21;
      uint64_t v27 = v38;
      *unint64_t v38 = sub_24F84F758;
      v27[1] = (uint64_t (*)())v25;
      return result;
    case 2u:
      *(void *)&long long v39 = v36;
      *((void *)&v39 + 1) = v6;
      uint64_t v40 = v7;
      uint64_t v41 = v8;
      uint64_t v42 = v9;
      uint64_t v43 = v35;
      uint64_t v32 = type metadata accessor for ReceiveValuesOnSubscription.Target();
      sub_24F7688B8(qword_269A2BAE0);
      uint64_t v36 = v32;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v18[*(int *)(TupleTypeMetadata2 + 48)]);
      goto LABEL_7;
    case 3u:
      uint64_t v28 = v38;
      sub_24F839BC8(*v38, v38[1]);
      sub_24F775458(v37, (uint64_t)&v39);
      uint64_t v29 = swift_allocObject();
      uint64_t result = sub_24F794DE0(&v39, v29 + 16);
      *uint64_t v28 = sub_24F84F88C;
      v28[1] = (uint64_t (*)())v29;
      return result;
    default:
      *(void *)&long long v39 = v36;
      *((void *)&v39 + 1) = v6;
      uint64_t v40 = v7;
      uint64_t v41 = v8;
      uint64_t v42 = v9;
      uint64_t v43 = v35;
      uint64_t v30 = type metadata accessor for ReceiveValuesOnSubscription.Target();
      uint64_t v31 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(&v18[*(int *)(v31 + 48)], v30);
LABEL_7:
      (*(void (**)(char *))(*(void *)(v36 - 8) + 8))(v18);
      __break(1u);
      JUMPOUT(0x24F846D60);
  }
}

uint64_t sub_24F846D70(void *a1)
{
  return sub_24F8CEB30();
}

uint64_t sub_24F846DB8(void *a1)
{
  return sub_24F8CEAD0();
}

uint64_t sub_24F846DF0()
{
  return sub_24F8CEB10();
}

uint64_t sub_24F846E68(uint64_t (**a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  uint64_t v45 = a1;
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(*(void *)a2 + 104);
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v38 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v43 = (char *)&v32 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = v4[12];
  uint64_t v10 = v4[14];
  uint64_t v11 = v4[15];
  uint64_t v47 = v6;
  uint64_t v48 = v8;
  uint64_t v49 = v9;
  uint64_t v50 = v5;
  uint64_t v51 = v10;
  uint64_t v52 = v11;
  uint64_t v46 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  uint64_t v12 = *(void *)(v46 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v46);
  uint64_t v42 = (char *)&v32 - v14;
  uint64_t v47 = v6;
  uint64_t v48 = v8;
  uint64_t v39 = v8;
  uint64_t v36 = v9;
  uint64_t v37 = v10;
  uint64_t v49 = v9;
  uint64_t v50 = v5;
  uint64_t v51 = v10;
  uint64_t v52 = v11;
  uint64_t v35 = v11;
  uint64_t v15 = type metadata accessor for ReceiveValuesOnSubscription.State();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = a2 + v4[16];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v46);
      break;
    case 2:
      sub_24F839BC8(*v45, v45[1]);
      sub_24F7688B8(qword_269A2BAE0);
      uint64_t v23 = v46;
      uint64_t v34 = &v18[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v33(v42, v18, v23);
      uint64_t v24 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v43, v40, AssociatedTypeWitness);
      unint64_t v25 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      unint64_t v26 = (v13 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v28 = (char *)swift_allocObject();
      uint64_t v29 = v39;
      *((void *)v28 + 2) = v6;
      *((void *)v28 + 3) = v29;
      *((void *)v28 + 4) = v36;
      *((void *)v28 + 5) = v5;
      uint64_t v30 = v35;
      *((void *)v28 + 6) = v37;
      *((void *)v28 + 7) = v30;
      v33(&v28[v25], v42, v23);
      *(void *)&v28[v26] = a2;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v28[v27], v43, AssociatedTypeWitness);
      uint64_t v31 = v45;
      *uint64_t v45 = sub_24F84F4EC;
      v31[1] = (uint64_t (*)())v28;
      swift_retain();
      uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v34);
      break;
    case 3:
      return result;
    default:
      uint64_t v21 = v46;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(v12 + 8))(&v18[*(int *)(TupleTypeMetadata2 + 48)], v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v18, v6);
      break;
  }
  return result;
}

uint64_t sub_24F847334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v5 = *(void **)a2;
  uint64_t v38 = *(void *)(*(void *)a2 + 104);
  uint64_t v6 = v5[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = *(void *)(v34 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v32 = (char *)&v28 - v7;
  uint64_t v8 = v5[14];
  uint64_t v9 = v5[11];
  swift_getAssociatedTypeWitness();
  uint64_t v37 = sub_24F8CF610();
  uint64_t v30 = *(void *)(v37 - 8);
  uint64_t v10 = v30;
  uint64_t v11 = MEMORY[0x270FA5388](v37);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v29 = (char *)&v28 - v12;
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v31 = (char *)&v28 - v14;
  (*(void (**)(void))(v15 + 16))();
  uint64_t v16 = v5[12];
  uint64_t v17 = v5[15];
  uint64_t v40 = v6;
  uint64_t v41 = v9;
  uint64_t v42 = v16;
  uint64_t v43 = v38;
  uint64_t v44 = v8;
  uint64_t v45 = v17;
  uint64_t v18 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1 + *(int *)(v18 + 68), v37);
  uint64_t v19 = v34;
  uint64_t v20 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v32, v36, AssociatedTypeWitness);
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = v6;
  *((void *)v22 + 3) = v9;
  uint64_t v24 = v38;
  uint64_t v23 = AssociatedTypeWitness;
  *((void *)v22 + 4) = v16;
  *((void *)v22 + 5) = v24;
  *((void *)v22 + 6) = v8;
  *((void *)v22 + 7) = v17;
  *((void *)v22 + 8) = a2;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v22[v21], v20, v23);
  swift_retain();
  unint64_t v25 = v29;
  unint64_t v26 = v31;
  sub_24F8CEBA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v26, v9);
}

id sub_24F8476F4(uint64_t a1)
{
  return sub_24F8485E4(a1, (uint64_t)sub_24F847720);
}

unint64_t sub_24F847720()
{
  return 0xD000000000000014;
}

uint64_t sub_24F84773C(uint64_t (**a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  uint64_t v45 = a1;
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(*(void *)a2 + 104);
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v44 = sub_24F8CEAE0();
  uint64_t v41 = *(void *)(v44 - 8);
  uint64_t v38 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v32 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = v4[12];
  uint64_t v10 = v4[14];
  uint64_t v11 = v4[15];
  uint64_t v47 = v6;
  uint64_t v48 = v8;
  uint64_t v49 = v9;
  uint64_t v50 = v5;
  uint64_t v51 = v10;
  uint64_t v52 = v11;
  uint64_t v46 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  uint64_t v12 = *(void *)(v46 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v46);
  uint64_t v42 = (char *)&v32 - v14;
  uint64_t v47 = v6;
  uint64_t v48 = v8;
  uint64_t v39 = v8;
  uint64_t v36 = v9;
  uint64_t v37 = v10;
  uint64_t v49 = v9;
  uint64_t v50 = v5;
  uint64_t v51 = v10;
  uint64_t v52 = v11;
  uint64_t v35 = v11;
  uint64_t v15 = type metadata accessor for ReceiveValuesOnSubscription.State();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = a2 + v4[16];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v46);
      break;
    case 2:
      sub_24F839BC8(*v45, v45[1]);
      sub_24F7688B8(qword_269A2BAE0);
      uint64_t v23 = v46;
      uint64_t v34 = &v18[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v33(v42, v18, v23);
      uint64_t v24 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v43, v40, v44);
      unint64_t v25 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      unint64_t v26 = (v13 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v28 = (char *)swift_allocObject();
      uint64_t v29 = v39;
      *((void *)v28 + 2) = v6;
      *((void *)v28 + 3) = v29;
      *((void *)v28 + 4) = v36;
      *((void *)v28 + 5) = v5;
      uint64_t v30 = v35;
      *((void *)v28 + 6) = v37;
      *((void *)v28 + 7) = v30;
      v33(&v28[v25], v42, v23);
      *(void *)&v28[v26] = a2;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v28[v27], v43, v44);
      uint64_t v31 = v45;
      *uint64_t v45 = sub_24F84F0A8;
      v31[1] = (uint64_t (*)())v28;
      swift_retain();
      uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v34);
      break;
    case 3:
      return result;
    default:
      uint64_t v21 = v46;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(v12 + 8))(&v18[*(int *)(TupleTypeMetadata2 + 48)], v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v18, v6);
      break;
  }
  return result;
}

uint64_t sub_24F847C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v5 = *(void **)a2;
  uint64_t v40 = *(void *)(*(void *)a2 + 104);
  uint64_t v6 = v5[10];
  swift_getAssociatedTypeWitness();
  uint64_t v7 = v6;
  swift_getAssociatedConformanceWitness();
  uint64_t v37 = sub_24F8CEAE0();
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v36 = *(void *)(v35 + 64);
  MEMORY[0x270FA5388](v37);
  uint64_t v33 = (char *)&v29 - v8;
  uint64_t v10 = v5[11];
  uint64_t v29 = v5[14];
  uint64_t v9 = v29;
  swift_getAssociatedTypeWitness();
  uint64_t v39 = sub_24F8CF610();
  uint64_t v31 = *(void *)(v39 - 8);
  uint64_t v11 = v31;
  uint64_t v12 = MEMORY[0x270FA5388](v39);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v30 = (char *)&v29 - v13;
  uint64_t v34 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v32 = (char *)&v29 - v15;
  (*(void (**)(void))(v16 + 16))();
  uint64_t v17 = v5[12];
  uint64_t v18 = v5[15];
  uint64_t v41 = v7;
  uint64_t v42 = v10;
  uint64_t v43 = v17;
  uint64_t v44 = v40;
  uint64_t v45 = v9;
  uint64_t v46 = v18;
  uint64_t v19 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1 + *(int *)(v19 + 68), v39);
  uint64_t v20 = v35;
  uint64_t v21 = v33;
  uint64_t v22 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v33, v38, v37);
  unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = v7;
  *((void *)v24 + 3) = v10;
  uint64_t v25 = v40;
  *((void *)v24 + 4) = v17;
  *((void *)v24 + 5) = v25;
  *((void *)v24 + 6) = v29;
  *((void *)v24 + 7) = v18;
  *((void *)v24 + 8) = a2;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v24[v23], v21, v22);
  swift_retain();
  unint64_t v26 = v30;
  unint64_t v27 = v32;
  sub_24F8CEBA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v27, v10);
}

id sub_24F848048(uint64_t a1)
{
  return sub_24F8485E4(a1, (uint64_t)sub_24F848074);
}

uint64_t sub_24F848074()
{
  return 0x657669656365725FLL;
}

uint64_t sub_24F848094(uint64_t (**a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v41 = a1;
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(*(void *)a2 + 104);
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v37 = *(void *)(v40 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v43 = (char *)&v31 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = v4[12];
  uint64_t v10 = v4[14];
  uint64_t v11 = v4[15];
  uint64_t v46 = v6;
  uint64_t v47 = v8;
  uint64_t v48 = v9;
  uint64_t v49 = v5;
  uint64_t v50 = v10;
  uint64_t v51 = v11;
  uint64_t v45 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  uint64_t v12 = *(void *)(v45 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v45);
  uint64_t v42 = (char *)&v31 - v14;
  uint64_t v46 = v6;
  uint64_t v47 = v8;
  uint64_t v38 = v8;
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  uint64_t v48 = v9;
  uint64_t v49 = v5;
  uint64_t v50 = v10;
  uint64_t v51 = v11;
  uint64_t v34 = v11;
  uint64_t v15 = type metadata accessor for ReceiveValuesOnSubscription.State();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = a2 + v4[16];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v45);
      break;
    case 2:
      unint64_t v23 = v41;
      sub_24F839BC8(*v41, v41[1]);
      sub_24F7688B8(qword_269A2BAE0);
      uint64_t v24 = v45;
      uint64_t v33 = &v18[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v32(v42, v18, v24);
      uint64_t v25 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v43, v39, AssociatedTypeWitness);
      unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      unint64_t v27 = (v13 + v26 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v28 = (char *)swift_allocObject();
      uint64_t v29 = v38;
      *((void *)v28 + 2) = v6;
      *((void *)v28 + 3) = v29;
      *((void *)v28 + 4) = v35;
      *((void *)v28 + 5) = v5;
      uint64_t v30 = v34;
      *((void *)v28 + 6) = v36;
      *((void *)v28 + 7) = v30;
      v32(&v28[v26], v42, v24);
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v28[v27], v43, AssociatedTypeWitness);
      *unint64_t v23 = sub_24F84EDCC;
      v23[1] = (uint64_t (*)())v28;
      uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v33);
      break;
    case 3:
      return result;
    default:
      uint64_t v21 = v45;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(v12 + 8))(&v18[*(int *)(TupleTypeMetadata2 + 48)], v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v18, v6);
      break;
  }
  return result;
}

uint64_t sub_24F848544()
{
  return sub_24F8CEAC0();
}

id sub_24F8485B8(uint64_t a1)
{
  return sub_24F8485E4(a1, (uint64_t)sub_24F848638);
}

id sub_24F8485E4(uint64_t a1, uint64_t a2)
{
  return sub_24F8796E0(a2, 0);
}

unint64_t sub_24F848638()
{
  return 0xD000000000000015;
}

uint64_t sub_24F848654(uint64_t (**a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a3;
  uint64_t v50 = a1;
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(*(void *)a2 + 104);
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v46 = sub_24F8CEAE0();
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v42 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)&v38 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = v4[12];
  uint64_t v10 = v4[14];
  uint64_t v11 = v4[15];
  uint64_t v52 = v6;
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  uint64_t v55 = v5;
  uint64_t v56 = v10;
  uint64_t v57 = v11;
  uint64_t v51 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  uint64_t v12 = *(void *)(v51 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v51);
  uint64_t v48 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v47 = (char *)&v38 - v15;
  uint64_t v52 = v6;
  uint64_t v53 = v8;
  uint64_t v43 = v8;
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  uint64_t v54 = v9;
  uint64_t v55 = v5;
  uint64_t v56 = v10;
  uint64_t v57 = v11;
  uint64_t v39 = v11;
  uint64_t v16 = type metadata accessor for ReceiveValuesOnSubscription.State();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = a2 + v4[16];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, v23, v16);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v22, v51);
      break;
    case 2:
      sub_24F839BC8(*v50, v50[1]);
      sub_24F7688B8(qword_269A2BAE0);
      uint64_t v38 = &v22[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      uint64_t v28 = v22;
      uint64_t v29 = v51;
      v27(v47, v28, v51);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 40))(v23, v20, v16);
      swift_endAccess();
      v27(v48, v47, v29);
      uint64_t v30 = v44;
      uint64_t v31 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v49, v45, v46);
      unint64_t v32 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      unint64_t v33 = (v13 + v32 + *(unsigned __int8 *)(v30 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v34 = (char *)swift_allocObject();
      uint64_t v35 = v43;
      *((void *)v34 + 2) = v6;
      *((void *)v34 + 3) = v35;
      *((void *)v34 + 4) = v40;
      *((void *)v34 + 5) = v5;
      uint64_t v36 = v39;
      *((void *)v34 + 6) = v41;
      *((void *)v34 + 7) = v36;
      v27(&v34[v32], v48, v51);
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v34[v33], v49, v31);
      uint64_t v37 = v50;
      *uint64_t v50 = sub_24F84EAFC;
      v37[1] = (uint64_t (*)())v34;
      uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v38);
      break;
    case 3:
      return result;
    default:
      uint64_t v25 = v51;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(v12 + 8))(&v22[*(int *)(TupleTypeMetadata2 + 48)], v25);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v22, v6);
      break;
  }
  return result;
}

uint64_t sub_24F848BF8()
{
  return sub_24F8CEAA0();
}

uint64_t sub_24F848C6C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  uint64_t v2 = type metadata accessor for ReceiveValuesOnSubscription.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_24F848D40()
{
  uint64_t v0 = sub_24F848C6C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t type metadata accessor for ReceiveValuesOnSubscription()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ReceiveValuesOnSubscription.State()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F848DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_24F848DCC(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v9 = result;
    long long v5 = *(_OWORD *)(a1 + 40);
    long long v10 = *(_OWORD *)(a1 + 24);
    long long v11 = v5;
    uint64_t v12 = v4;
    uint64_t result = type metadata accessor for ReceiveValuesOnSubscription.Target();
    if (v6 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v14 = &v13;
      swift_getTupleTypeLayout2();
      uint64_t v15 = &v8;
      swift_getTupleTypeLayout2();
      uint64_t v16 = &v7;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24F848F08(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[3];
  uint64_t v7 = *(void *)(a3[2] - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v71 = v9;
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = a3[4];
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v12;
  uint64_t v16 = v14;
  int v17 = *(_DWORD *)(v14 + 80);
  uint64_t v18 = v17;
  int v19 = v12 | v10 | v17;
  uint64_t v20 = (v12 | v10 | v17);
  uint64_t v21 = v8 + v20;
  uint64_t v22 = (v8 + v20) & ~v20;
  uint64_t v23 = *(void *)(v9 + 64) + v12;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v24 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v24 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  uint64_t v25 = v24 + v17;
  unint64_t v26 = ((v25 + (v23 & ~(unint64_t)v12)) & ~(unint64_t)v17)
      + *(void *)(v14 + 64);
  unint64_t v27 = v26 + v22;
  unint64_t v28 = (v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v28 + 8 > v26 + v22) {
    unint64_t v27 = v28 + 8;
  }
  unint64_t v29 = v28 + 40;
  if (v29 <= v27) {
    unint64_t v30 = v27;
  }
  else {
    unint64_t v30 = v29;
  }
  size_t v31 = v30 + 1;
  int v32 = *(_DWORD *)(v7 + 80) | v19;
  if ((v32 & 0x1000F8) != 0 || v31 > 0x18)
  {
    uint64_t v34 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v34 + (((v32 & 0xF8 | 7u) + 16) & ~(unint64_t)(v32 & 0xF8 | 7u)));
    swift_retain();
    return a1;
  }
  __dst = a1;
  unsigned int v35 = a2[v30];
  unsigned int v36 = v35 - 3;
  uint64_t v37 = a2;
  if (v35 >= 3)
  {
    if (v30 <= 3) {
      uint64_t v38 = v30;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *a2;
        goto LABEL_24;
      case 2:
        int v39 = *(unsigned __int16 *)a2;
        goto LABEL_24;
      case 3:
        int v39 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_24;
      case 4:
        int v39 = *(_DWORD *)a2;
LABEL_24:
        if (v30 < 4) {
          v39 |= v36 << (8 * v30);
        }
        unsigned int v35 = v39 + 3;
        break;
      default:
        break;
    }
  }
  uint64_t v40 = ~v15;
  if (v35 == 2)
  {
    uint64_t v63 = v16;
    uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
    size_t v48 = v24;
    uint64_t v66 = v13;
    unint64_t v69 = v30;
    (*(void (**)(void *))(v71 + 16))(a1);
    uint64_t v49 = (void *)(((unint64_t)a1 + v23) & v40);
    uint64_t v50 = (const void *)((unint64_t)&a2[v23] & v40);
    if (sub_24F777048((uint64_t)v50, 1, AssociatedTypeWitness))
    {
      memcpy(v49, v50, v48);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v49, v50, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v49, 0, 1, AssociatedTypeWitness);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v63 + 16))(((unint64_t)v49 + v18 + v48) & ~v18, ((unint64_t)v50 + v18 + v48) & ~v18, v66);
    unint64_t v55 = ((unint64_t)a1 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v56 = (unint64_t)&a2[v26 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = *(void *)(v56 + 24);
    *(void *)(v55 + 24) = v57;
    *(void *)(v55 + 32) = *(void *)(v56 + 32);
    (**(void (***)(void))(v57 - 8))();
    char v58 = 2;
    goto LABEL_43;
  }
  if (v35 == 1)
  {
    uint64_t v64 = v16;
    uint64_t v51 = *(void *)(AssociatedTypeWitness - 8);
    size_t v52 = v24;
    uint64_t v67 = v13;
    unint64_t v69 = v30;
    (*(void (**)(void *))(v71 + 16))(a1);
    uint64_t v53 = (void *)(((unint64_t)a1 + v23) & v40);
    uint64_t v54 = (const void *)((unint64_t)&a2[v23] & v40);
    if (sub_24F777048((uint64_t)v54, 1, AssociatedTypeWitness))
    {
      memcpy(v53, v54, v52);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v53, v54, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v53, 0, 1, AssociatedTypeWitness);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v64 + 16))(((unint64_t)v53 + v18 + v52) & ~v18, ((unint64_t)v54 + v18 + v52) & ~v18, v67);
    *(void *)(((unint64_t)a1 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v26 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v58 = 1;
LABEL_43:
    *((unsigned char *)a1 + v69) = v58;
    return a1;
  }
  if (v35)
  {
    memcpy(a1, a2, v31);
  }
  else
  {
    uint64_t v60 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v61 = ~(unint64_t)v17;
    size_t v41 = v24;
    uint64_t v62 = v16;
    uint64_t v65 = v13;
    unint64_t v68 = v30;
    uint64_t v42 = ~v20;
    uint64_t v43 = v37;
    (*(void (**)(void *))(v7 + 16))(a1);
    unint64_t v44 = ((unint64_t)a1 + v21) & v42;
    unint64_t v45 = (unint64_t)&v43[v21] & v42;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16))(v44, v45, v6);
    uint64_t v46 = (void *)((v23 + v44) & v40);
    if (sub_24F777048((v23 + v45) & v40, 1, AssociatedTypeWitness))
    {
      memcpy(v46, (const void *)((v23 + v45) & v40), v41);
    }
    else
    {
      (*(void (**)(void *, unint64_t, uint64_t))(v60 + 16))(v46, (v23 + v45) & v40, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v46, 0, 1, AssociatedTypeWitness);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v62 + 16))(((unint64_t)v46 + v25) & v61, (v25 + ((v23 + v45) & v40)) & v61, v65);
    a1 = __dst;
    *((unsigned char *)__dst + v68) = 0;
  }
  return a1;
}

uint64_t sub_24F84954C(unsigned __int8 *a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v46 = a2[2];
  uint64_t v45 = *(void *)(v46 - 8);
  uint64_t v5 = *(void *)(v45 + 64);
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = a2[4];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13;
  int v15 = *(_DWORD *)(v13 + 80);
  uint64_t v16 = v15;
  uint64_t v17 = (v11 | v8 | v15);
  uint64_t v18 = v5 + v17;
  uint64_t result = (v5 + v17) & ~v17;
  uint64_t v20 = *(void *)(v6 + 64) + v11;
  uint64_t v21 = *(void *)(v9 + 64);
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v22 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  unint64_t v23 = ((v20 & ~(unint64_t)v11) + v15 + v22) & ~(unint64_t)v15;
  uint64_t v24 = *(void *)(v13 + 64);
  unint64_t v25 = v23 + v24 + result;
  unint64_t v26 = (v23 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v26 + 8 > v25) {
    unint64_t v25 = v26 + 8;
  }
  unint64_t v27 = v26 + 40;
  if (v27 <= v25) {
    unint64_t v27 = v25;
  }
  unsigned int v28 = a1[v27];
  unsigned int v29 = v28 - 3;
  if (v28 >= 3)
  {
    if (v27 <= 3) {
      uint64_t v30 = v27;
    }
    else {
      uint64_t v30 = 4;
    }
    switch(v30)
    {
      case 1:
        int v31 = *a1;
        goto LABEL_17;
      case 2:
        int v31 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v31 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v31 = *(_DWORD *)a1;
LABEL_17:
        if (v27 < 4) {
          unsigned int v28 = (v31 | (v29 << (8 * v27))) + 3;
        }
        else {
          unsigned int v28 = v31 + 3;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v32 = ~(unint64_t)v11;
  if (v28 == 2)
  {
    unint64_t v48 = ~(unint64_t)v15;
    uint64_t v51 = v12;
    uint64_t v39 = v22;
    uint64_t v53 = v14;
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v4);
    uint64_t v40 = (unint64_t)&a1[v20] & v32;
    if (!sub_24F777048(v40, 1, AssociatedTypeWitness)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v40, AssociatedTypeWitness);
    }
    (*(void (**)(unint64_t, uint64_t))(v53 + 8))((v39 + v16 + v40) & v48, v51);
    return _s12GRDBInternal13DatabaseEventVwxx_0((unint64_t)&a1[v24 + 7 + v23] & 0xFFFFFFFFFFFFFFF8);
  }
  else
  {
    if (v28 == 1)
    {
      int v41 = *(_DWORD *)(v10 + 84);
      uint64_t v42 = v21;
      unint64_t v49 = ~(unint64_t)v15;
      uint64_t v50 = v12;
      uint64_t v54 = v14;
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v4);
      uint64_t v43 = (unint64_t)&a1[v20] & v32;
      if (!sub_24F777048(v43, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v43, AssociatedTypeWitness);
      }
      uint64_t v38 = *(uint64_t (**)(unint64_t, uint64_t))(v54 + 8);
      if (v41) {
        uint64_t v44 = v42 + v16;
      }
      else {
        uint64_t v44 = v42 + 1 + v16;
      }
      unint64_t v37 = (v44 + v43) & v49;
    }
    else
    {
      if (v28) {
        return result;
      }
      unint64_t v47 = ~(unint64_t)v15;
      uint64_t v50 = v12;
      uint64_t v33 = v22;
      uint64_t v52 = v14;
      uint64_t v34 = ~v17;
      (*(void (**)(unsigned __int8 *, uint64_t))(v45 + 8))(a1, v46);
      unint64_t v35 = (unint64_t)&a1[v18] & v34;
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v35, v4);
      uint64_t v36 = (v20 + v35) & v32;
      if (!sub_24F777048(v36, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v36, AssociatedTypeWitness);
      }
      unint64_t v37 = (v33 + v16 + v36) & v47;
      uint64_t v38 = *(uint64_t (**)(unint64_t, uint64_t))(v52 + 8);
    }
    return v38(v37, v50);
  }
}

unsigned char *sub_24F849A10(unsigned char *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v5 = a3[3];
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v47 + 64);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12;
  uint64_t v14 = a3[4];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15;
  int v17 = *(_DWORD *)(v15 + 80);
  uint64_t v18 = v17;
  uint64_t v19 = (v12 | v10 | v17);
  uint64_t v20 = v7 + v19;
  uint64_t v21 = (v7 + v19) & ~v19;
  uint64_t v22 = *(void *)(v8 + 64) + v12;
  size_t v23 = *(void *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84)) {
    ++v23;
  }
  size_t __n = v23;
  size_t v24 = v23 + v17;
  unint64_t v25 = ((v24 + (v22 & ~(unint64_t)v12)) & ~v18) + *(void *)(v15 + 64);
  unint64_t v26 = v25 + v21;
  unint64_t v27 = (v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v27 + 8 > v25 + v21) {
    unint64_t v26 = v27 + 8;
  }
  unint64_t v28 = v27 + 40;
  if (v28 <= v26) {
    unint64_t v29 = v26;
  }
  else {
    unint64_t v29 = v28;
  }
  unsigned int v30 = a2[v29];
  unsigned int v31 = v30 - 3;
  if (v30 >= 3)
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *a2;
        goto LABEL_17;
      case 2:
        int v33 = *(unsigned __int16 *)a2;
        goto LABEL_17;
      case 3:
        int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_17;
      case 4:
        int v33 = *(_DWORD *)a2;
LABEL_17:
        if (v29 < 4) {
          v33 |= v31 << (8 * v29);
        }
        unsigned int v30 = v33 + 3;
        break;
      default:
        break;
    }
  }
  uint64_t v34 = ~v13;
  if (v30 == 2)
  {
    uint64_t v50 = v16;
    uint64_t v53 = v14;
    unint64_t v56 = v29;
    uint64_t v38 = a1;
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v5);
    if (sub_24F777048((unint64_t)&a2[v22] & v34, 1, AssociatedTypeWitness))
    {
      size_t v39 = __n;
      memcpy((void *)((unint64_t)&a1[v22] & v34), (const void *)((unint64_t)&a2[v22] & v34), __n);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((unint64_t)&a1[v22] & v34, (unint64_t)&a2[v22] & v34, AssociatedTypeWitness);
      sub_24F7771BC((unint64_t)&a1[v22] & v34, 0, 1, AssociatedTypeWitness);
      size_t v39 = __n;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 16))((((unint64_t)&a1[v22] & v34) + v18 + v39) & ~v18, (((unint64_t)&a2[v22] & v34) + v18 + v39) & ~v18, v53);
    unint64_t v41 = (unint64_t)&a1[v25 + 7] & 0xFFFFFFFFFFFFFFF8;
    unint64_t v42 = (unint64_t)&a2[v25 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = *(void *)(v42 + 24);
    *(void *)(v41 + 24) = v43;
    *(void *)(v41 + 32) = *(void *)(v42 + 32);
    (**(void (***)(void))(v43 - 8))();
    char v44 = 2;
    goto LABEL_36;
  }
  if (v30 == 1)
  {
    uint64_t v51 = v16;
    uint64_t v54 = v14;
    unint64_t v56 = v29;
    uint64_t v38 = a1;
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v5);
    if (sub_24F777048((unint64_t)&a2[v22] & v34, 1, AssociatedTypeWitness))
    {
      size_t v40 = __n;
      memcpy((void *)((unint64_t)&a1[v22] & v34), (const void *)((unint64_t)&a2[v22] & v34), __n);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((unint64_t)&a1[v22] & v34, (unint64_t)&a2[v22] & v34, AssociatedTypeWitness);
      sub_24F7771BC((unint64_t)&a1[v22] & v34, 0, 1, AssociatedTypeWitness);
      size_t v40 = __n;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))((((unint64_t)&a1[v22] & v34) + v18 + v40) & ~v18, (((unint64_t)&a2[v22] & v34) + v18 + v40) & ~v18, v54);
    *(void *)((unint64_t)&a1[v25 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v25 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v44 = 1;
LABEL_36:
    v38[v56] = v44;
    return v38;
  }
  if (v30)
  {
    uint64_t v38 = a1;
    memcpy(a1, a2, v29 + 1);
  }
  else
  {
    size_t v46 = v24;
    uint64_t v48 = ~v18;
    uint64_t v49 = v16;
    uint64_t v52 = v14;
    unint64_t v55 = v29;
    uint64_t v35 = ~v19;
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v47 + 16))(a1, a2, v6);
    unint64_t v36 = (unint64_t)&a1[v20] & v35;
    unint64_t v37 = (unint64_t)&a2[v20] & v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v36, v37, v5);
    if (sub_24F777048((v22 + v37) & v34, 1, AssociatedTypeWitness))
    {
      memcpy((void *)((v22 + v36) & v34), (const void *)((v22 + v37) & v34), __n);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v22 + v36) & v34, (v22 + v37) & v34, AssociatedTypeWitness);
      sub_24F7771BC((v22 + v36) & v34, 0, 1, AssociatedTypeWitness);
    }
    (*(void (**)(size_t, size_t, uint64_t))(v49 + 16))((v46 + ((v22 + v36) & v34)) & v48, (v46 + ((v22 + v37) & v34)) & v48, v52);
    uint64_t v38 = a1;
    a1[v55] = 0;
  }
  return v38;
}

unsigned __int8 *sub_24F84A008(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v7 = a3[2];
  uint64_t v6 = a3[3];
  uint64_t v61 = v7;
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v60 + 64);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v69 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v13;
  uint64_t v65 = a3[4];
  uint64_t v71 = *(void *)(v65 - 8);
  int v15 = *(_DWORD *)(v71 + 80);
  uint64_t v16 = (v13 | v11 | v15);
  uint64_t v59 = v8 + v16;
  uint64_t v17 = (v8 + v16) & ~v16;
  uint64_t v18 = *(void *)(v9 + 64) + v13;
  unint64_t v19 = v18 & ~(unint64_t)v13;
  uint64_t v63 = v12;
  int v20 = *(_DWORD *)(v12 + 84);
  uint64_t v21 = *(void *)(v12 + 64);
  if (v20) {
    size_t v22 = *(void *)(v12 + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  size_t v64 = v22 + v15;
  uint64_t v23 = *(void *)(*(void *)(v65 - 8) + 64);
  size_t v24 = ((v64 + v19) & ~(unint64_t)v15) + v23;
  unint64_t v25 = v24 + v17;
  unint64_t v26 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v26 + 8 > v24 + v17) {
    unint64_t v25 = v26 + 8;
  }
  unint64_t v27 = v26 + 40;
  if (v27 <= v25) {
    unint64_t v28 = v25;
  }
  else {
    unint64_t v28 = v27;
  }
  unsigned int v29 = a1[v28];
  unsigned int v30 = v29 - 3;
  size_t v62 = ((v64 + v19) & ~(unint64_t)v15) + v23;
  if (v29 >= 3)
  {
    if (v28 <= 3) {
      uint64_t v31 = v28;
    }
    else {
      uint64_t v31 = 4;
    }
    switch(v31)
    {
      case 1:
        int v32 = *a1;
        goto LABEL_19;
      case 2:
        int v32 = *(unsigned __int16 *)a1;
        goto LABEL_19;
      case 3:
        int v32 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_19;
      case 4:
        int v32 = *(_DWORD *)a1;
LABEL_19:
        if (v28 < 4) {
          v32 |= v30 << (8 * v28);
        }
        unsigned int v29 = v32 + 3;
        break;
      default:
        break;
    }
  }
  uint64_t v58 = ~v16;
  uint64_t v68 = ~v14;
  unint64_t v70 = ~(unint64_t)v15;
  uint64_t v66 = *(_DWORD *)(v71 + 80);
  if (v29 == 2)
  {
    size_t __n = v22;
    (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(a1, v69);
    uint64_t v37 = (unint64_t)&a1[v18] & v68;
    if (!sub_24F777048(v37, 1, AssociatedTypeWitness)) {
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v37, AssociatedTypeWitness);
    }
    uint64_t v33 = v65;
    (*(void (**)(size_t, uint64_t))(v71 + 8))((v64 + v37) & v70, v65);
    size_t v22 = __n;
    _s12GRDBInternal13DatabaseEventVwxx_0((unint64_t)&a1[v23 + 7 + ((v19 + v66 + __n) & v70)] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = AssociatedTypeWitness;
  }
  else
  {
    if (v29 == 1)
    {
      size_t v35 = v22;
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(a1, v69);
      uint64_t v34 = AssociatedTypeWitness;
      uint64_t v38 = (unint64_t)&a1[v18] & v68;
      if (!sub_24F777048(v38, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v38, AssociatedTypeWitness);
      }
      if (v20) {
        uint64_t v39 = v21 + v66;
      }
      else {
        uint64_t v39 = v21 + 1 + v66;
      }
      uint64_t v33 = v65;
      (*(void (**)(unint64_t, uint64_t))(v71 + 8))((v39 + v38) & v70, v65);
    }
    else
    {
      uint64_t v33 = v65;
      uint64_t v34 = AssociatedTypeWitness;
      if (v29) {
        goto LABEL_38;
      }
      size_t v35 = v22;
      (*(void (**)(unsigned __int8 *, uint64_t))(v60 + 8))(a1, v61);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v59] & v58, v69);
      uint64_t v36 = (v18 + ((unint64_t)&a1[v59] & v58)) & v68;
      if (!sub_24F777048(v36, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v36, AssociatedTypeWitness);
      }
      (*(void (**)(size_t, uint64_t))(v71 + 8))((v64 + v36) & v70, v65);
    }
    size_t v22 = v35;
  }
LABEL_38:
  unsigned int v40 = a2[v28];
  unsigned int v41 = v40 - 3;
  if (v40 >= 3)
  {
    if (v28 <= 3) {
      uint64_t v42 = v28;
    }
    else {
      uint64_t v42 = 4;
    }
    switch(v42)
    {
      case 1:
        int v43 = *a2;
        goto LABEL_47;
      case 2:
        int v43 = *(unsigned __int16 *)a2;
        goto LABEL_47;
      case 3:
        int v43 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_47;
      case 4:
        int v43 = *(_DWORD *)a2;
LABEL_47:
        if (v28 < 4) {
          unsigned int v40 = (v43 | (v41 << (8 * v28))) + 3;
        }
        else {
          unsigned int v40 = v43 + 3;
        }
        break;
      default:
        break;
    }
  }
  if (v40 == 2)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(a1, a2, v69);
    uint64_t v47 = (void *)((unint64_t)&a1[v18] & v68);
    uint64_t v48 = (const void *)((unint64_t)&a2[v18] & v68);
    if (sub_24F777048((uint64_t)v48, 1, v34))
    {
      memcpy(v47, v48, v22);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v47, v48, v34);
      sub_24F7771BC((uint64_t)v47, 0, 1, v34);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16))(((unint64_t)v47 + v66 + v22) & v70, ((unint64_t)v48 + v66 + v22) & v70, v33);
    unint64_t v51 = (unint64_t)&a1[v62 + 7] & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = (unint64_t)&a2[v62 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v53 = *(void *)(v52 + 24);
    *(void *)(v51 + 24) = v53;
    *(void *)(v51 + 32) = *(void *)(v52 + 32);
    (**(void (***)(void))(v53 - 8))();
    char v54 = 2;
    goto LABEL_66;
  }
  if (v40 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(a1, a2, v69);
    uint64_t v49 = (void *)((unint64_t)&a1[v18] & v68);
    uint64_t v50 = (const void *)((unint64_t)&a2[v18] & v68);
    if (sub_24F777048((uint64_t)v50, 1, v34))
    {
      memcpy(v49, v50, v22);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v49, v50, v34);
      sub_24F7771BC((uint64_t)v49, 0, 1, v34);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16))(((unint64_t)v49 + v66 + v22) & v70, ((unint64_t)v50 + v66 + v22) & v70, v33);
    *(void *)((unint64_t)&a1[v62 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v62 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v54 = 1;
LABEL_66:
    a1[v28] = v54;
    return a1;
  }
  if (v40)
  {
    memcpy(a1, a2, v28 + 1);
  }
  else
  {
    size_t __na = v22;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v60 + 16))(a1, a2, v61);
    unint64_t v44 = (unint64_t)&a2[v59] & v58;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((unint64_t)&a1[v59] & v58, v44, v69);
    uint64_t v45 = (void *)((v18 + ((unint64_t)&a1[v59] & v58)) & v68);
    size_t v46 = (const void *)((v18 + v44) & v68);
    if (sub_24F777048((uint64_t)v46, 1, v34))
    {
      memcpy(v45, v46, __na);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v45, v46, v34);
      sub_24F7771BC((uint64_t)v45, 0, 1, v34);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16))(((unint64_t)v45 + v64) & v70, ((unint64_t)v46 + v64) & v70, v33);
    a1[v28] = 0;
  }
  return a1;
}

unsigned char *sub_24F84A8A4(unsigned char *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v5 = a3[3];
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v48 + 64);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12;
  uint64_t v14 = a3[4];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15;
  int v17 = *(_DWORD *)(v15 + 80);
  uint64_t v18 = v17;
  uint64_t v19 = (v12 | v10 | v17);
  uint64_t v20 = v7 + v19;
  uint64_t v21 = (v7 + v19) & ~v19;
  uint64_t v22 = *(void *)(v8 + 64) + v12;
  size_t v23 = *(void *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84)) {
    ++v23;
  }
  size_t __n = v23;
  size_t v24 = v23 + v17;
  unint64_t v25 = ((v24 + (v22 & ~(unint64_t)v12)) & ~v18) + *(void *)(v15 + 64);
  unint64_t v26 = v25 + v21;
  unint64_t v27 = (v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v27 + 8 > v25 + v21) {
    unint64_t v26 = v27 + 8;
  }
  unint64_t v28 = v27 + 40;
  if (v28 <= v26) {
    unint64_t v29 = v26;
  }
  else {
    unint64_t v29 = v28;
  }
  unsigned int v30 = a2[v29];
  unsigned int v31 = v30 - 3;
  if (v30 >= 3)
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *a2;
        goto LABEL_17;
      case 2:
        int v33 = *(unsigned __int16 *)a2;
        goto LABEL_17;
      case 3:
        int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_17;
      case 4:
        int v33 = *(_DWORD *)a2;
LABEL_17:
        if (v29 < 4) {
          v33 |= v31 << (8 * v29);
        }
        unsigned int v30 = v33 + 3;
        break;
      default:
        break;
    }
  }
  uint64_t v34 = ~v13;
  if (v30 == 2)
  {
    unint64_t v51 = v29;
    uint64_t v53 = v16;
    uint64_t v56 = v14;
    uint64_t v38 = a1;
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v9 + 32))(a1, a2, v5);
    if (sub_24F777048((unint64_t)&a2[v22] & v34, 1, AssociatedTypeWitness))
    {
      size_t v39 = __n;
      memcpy((void *)((unint64_t)&a1[v22] & v34), (const void *)((unint64_t)&a2[v22] & v34), __n);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))((unint64_t)&a1[v22] & v34, (unint64_t)&a2[v22] & v34, AssociatedTypeWitness);
      sub_24F7771BC((unint64_t)&a1[v22] & v34, 0, 1, AssociatedTypeWitness);
      size_t v39 = __n;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v53 + 32))((((unint64_t)&a1[v22] & v34) + v18 + v39) & ~v18, (((unint64_t)&a2[v22] & v34) + v18 + v39) & ~v18, v56);
    unint64_t v41 = (unint64_t)&a2[v25 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = *(void *)(v41 + 32);
    long long v43 = *(_OWORD *)(v41 + 16);
    unint64_t v44 = (unint64_t)&a1[v25 + 7] & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)unint64_t v44 = *(_OWORD *)v41;
    *(_OWORD *)(v44 + 16) = v43;
    *(void *)(v44 + 32) = v42;
    char v45 = 2;
    goto LABEL_36;
  }
  if (v30 == 1)
  {
    unint64_t v51 = v29;
    uint64_t v54 = v16;
    uint64_t v57 = v14;
    uint64_t v38 = a1;
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v9 + 32))(a1, a2, v5);
    if (sub_24F777048((unint64_t)&a2[v22] & v34, 1, AssociatedTypeWitness))
    {
      size_t v40 = __n;
      memcpy((void *)((unint64_t)&a1[v22] & v34), (const void *)((unint64_t)&a2[v22] & v34), __n);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))((unint64_t)&a1[v22] & v34, (unint64_t)&a2[v22] & v34, AssociatedTypeWitness);
      sub_24F7771BC((unint64_t)&a1[v22] & v34, 0, 1, AssociatedTypeWitness);
      size_t v40 = __n;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v54 + 32))((((unint64_t)&a1[v22] & v34) + v18 + v40) & ~v18, (((unint64_t)&a2[v22] & v34) + v18 + v40) & ~v18, v57);
    *(void *)((unint64_t)&a1[v25 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v25 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v45 = 1;
LABEL_36:
    v38[v51] = v45;
    return v38;
  }
  if (v30)
  {
    uint64_t v38 = a1;
    memcpy(a1, a2, v29 + 1);
  }
  else
  {
    size_t v47 = v24;
    uint64_t v49 = ~v18;
    unint64_t v50 = v29;
    uint64_t v52 = v16;
    uint64_t v55 = v14;
    uint64_t v35 = ~v19;
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v48 + 32))(a1, a2, v6);
    unint64_t v36 = (unint64_t)&a1[v20] & v35;
    unint64_t v37 = (unint64_t)&a2[v20] & v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(v36, v37, v5);
    if (sub_24F777048((v22 + v37) & v34, 1, AssociatedTypeWitness))
    {
      memcpy((void *)((v22 + v36) & v34), (const void *)((v22 + v37) & v34), __n);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))((v22 + v36) & v34, (v22 + v37) & v34, AssociatedTypeWitness);
      sub_24F7771BC((v22 + v36) & v34, 0, 1, AssociatedTypeWitness);
    }
    (*(void (**)(size_t, size_t, uint64_t))(v52 + 32))((v47 + ((v22 + v36) & v34)) & v49, (v47 + ((v22 + v37) & v34)) & v49, v55);
    uint64_t v38 = a1;
    a1[v50] = 0;
  }
  return v38;
}

unsigned __int8 *sub_24F84AE60(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v7 = a3[2];
  uint64_t v6 = a3[3];
  uint64_t v62 = v7;
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v61 + 64);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v70 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v13;
  uint64_t v66 = a3[4];
  uint64_t v72 = *(void *)(v66 - 8);
  int v15 = *(_DWORD *)(v72 + 80);
  uint64_t v16 = (v13 | v11 | v15);
  uint64_t v60 = v8 + v16;
  uint64_t v17 = (v8 + v16) & ~v16;
  uint64_t v18 = *(void *)(v9 + 64) + v13;
  unint64_t v19 = v18 & ~(unint64_t)v13;
  uint64_t v64 = v12;
  int v20 = *(_DWORD *)(v12 + 84);
  uint64_t v21 = *(void *)(v12 + 64);
  if (v20) {
    size_t v22 = *(void *)(v12 + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  size_t v65 = v22 + v15;
  uint64_t v23 = *(void *)(*(void *)(v66 - 8) + 64);
  size_t v24 = ((v65 + v19) & ~(unint64_t)v15) + v23;
  unint64_t v25 = v24 + v17;
  unint64_t v26 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v26 + 8 > v24 + v17) {
    unint64_t v25 = v26 + 8;
  }
  unint64_t v27 = v26 + 40;
  if (v27 <= v25) {
    unint64_t v28 = v25;
  }
  else {
    unint64_t v28 = v27;
  }
  unsigned int v29 = a1[v28];
  unsigned int v30 = v29 - 3;
  size_t v63 = ((v65 + v19) & ~(unint64_t)v15) + v23;
  if (v29 >= 3)
  {
    if (v28 <= 3) {
      uint64_t v31 = v28;
    }
    else {
      uint64_t v31 = 4;
    }
    switch(v31)
    {
      case 1:
        int v32 = *a1;
        goto LABEL_19;
      case 2:
        int v32 = *(unsigned __int16 *)a1;
        goto LABEL_19;
      case 3:
        int v32 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_19;
      case 4:
        int v32 = *(_DWORD *)a1;
LABEL_19:
        if (v28 < 4) {
          v32 |= v30 << (8 * v28);
        }
        unsigned int v29 = v32 + 3;
        break;
      default:
        break;
    }
  }
  uint64_t v59 = ~v16;
  uint64_t v69 = ~v14;
  unint64_t v71 = ~(unint64_t)v15;
  uint64_t v67 = *(_DWORD *)(v72 + 80);
  if (v29 == 2)
  {
    size_t __n = v22;
    (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(a1, v70);
    uint64_t v37 = (unint64_t)&a1[v18] & v69;
    if (!sub_24F777048(v37, 1, AssociatedTypeWitness)) {
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v37, AssociatedTypeWitness);
    }
    uint64_t v33 = v66;
    (*(void (**)(size_t, uint64_t))(v72 + 8))((v65 + v37) & v71, v66);
    size_t v22 = __n;
    _s12GRDBInternal13DatabaseEventVwxx_0((unint64_t)&a1[v23 + 7 + ((v19 + v67 + __n) & v71)] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = AssociatedTypeWitness;
  }
  else
  {
    if (v29 == 1)
    {
      size_t v35 = v22;
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(a1, v70);
      uint64_t v34 = AssociatedTypeWitness;
      uint64_t v38 = (unint64_t)&a1[v18] & v69;
      if (!sub_24F777048(v38, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v38, AssociatedTypeWitness);
      }
      if (v20) {
        uint64_t v39 = v21 + v67;
      }
      else {
        uint64_t v39 = v21 + 1 + v67;
      }
      uint64_t v33 = v66;
      (*(void (**)(unint64_t, uint64_t))(v72 + 8))((v39 + v38) & v71, v66);
    }
    else
    {
      uint64_t v33 = v66;
      uint64_t v34 = AssociatedTypeWitness;
      if (v29) {
        goto LABEL_38;
      }
      size_t v35 = v22;
      (*(void (**)(unsigned __int8 *, uint64_t))(v61 + 8))(a1, v62);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v60] & v59, v70);
      uint64_t v36 = (v18 + ((unint64_t)&a1[v60] & v59)) & v69;
      if (!sub_24F777048(v36, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v36, AssociatedTypeWitness);
      }
      (*(void (**)(size_t, uint64_t))(v72 + 8))((v65 + v36) & v71, v66);
    }
    size_t v22 = v35;
  }
LABEL_38:
  unsigned int v40 = a2[v28];
  unsigned int v41 = v40 - 3;
  if (v40 >= 3)
  {
    if (v28 <= 3) {
      uint64_t v42 = v28;
    }
    else {
      uint64_t v42 = 4;
    }
    switch(v42)
    {
      case 1:
        int v43 = *a2;
        goto LABEL_47;
      case 2:
        int v43 = *(unsigned __int16 *)a2;
        goto LABEL_47;
      case 3:
        int v43 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_47;
      case 4:
        int v43 = *(_DWORD *)a2;
LABEL_47:
        if (v28 < 4) {
          unsigned int v40 = (v43 | (v41 << (8 * v28))) + 3;
        }
        else {
          unsigned int v40 = v43 + 3;
        }
        break;
      default:
        break;
    }
  }
  if (v40 == 2)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(a1, a2, v70);
    size_t v47 = (void *)((unint64_t)&a1[v18] & v69);
    uint64_t v48 = (const void *)((unint64_t)&a2[v18] & v69);
    if (sub_24F777048((uint64_t)v48, 1, v34))
    {
      memcpy(v47, v48, v22);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v47, v48, v34);
      sub_24F7771BC((uint64_t)v47, 0, 1, v34);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v72 + 32))(((unint64_t)v47 + v67 + v22) & v71, ((unint64_t)v48 + v67 + v22) & v71, v33);
    unint64_t v51 = (unint64_t)&a2[v63 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = *(void *)(v51 + 32);
    long long v53 = *(_OWORD *)(v51 + 16);
    unint64_t v54 = (unint64_t)&a1[v63 + 7] & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)unint64_t v54 = *(_OWORD *)v51;
    *(_OWORD *)(v54 + 16) = v53;
    *(void *)(v54 + 32) = v52;
    char v55 = 2;
    goto LABEL_66;
  }
  if (v40 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(a1, a2, v70);
    uint64_t v49 = (void *)((unint64_t)&a1[v18] & v69);
    unint64_t v50 = (const void *)((unint64_t)&a2[v18] & v69);
    if (sub_24F777048((uint64_t)v50, 1, v34))
    {
      memcpy(v49, v50, v22);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v49, v50, v34);
      sub_24F7771BC((uint64_t)v49, 0, 1, v34);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v72 + 32))(((unint64_t)v49 + v67 + v22) & v71, ((unint64_t)v50 + v67 + v22) & v71, v33);
    *(void *)((unint64_t)&a1[v63 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v63 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v55 = 1;
LABEL_66:
    a1[v28] = v55;
    return a1;
  }
  if (v40)
  {
    memcpy(a1, a2, v28 + 1);
  }
  else
  {
    size_t __na = v22;
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v61 + 32))(a1, a2, v62);
    unint64_t v44 = (unint64_t)&a2[v60] & v59;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))((unint64_t)&a1[v60] & v59, v44, v70);
    char v45 = (void *)((v18 + ((unint64_t)&a1[v60] & v59)) & v69);
    size_t v46 = (const void *)((v18 + v44) & v69);
    if (sub_24F777048((uint64_t)v46, 1, v34))
    {
      memcpy(v45, v46, __na);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v45, v46, v34);
      sub_24F7771BC((uint64_t)v45, 0, 1, v34);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v72 + 32))(((unint64_t)v45 + v65) & v71, ((unint64_t)v46 + v65) & v71, v33);
    a1[v28] = 0;
  }
  return a1;
}

uint64_t sub_24F84B6C0(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v7 = *(void *)(a3[3] - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = *(void *)(a3[4] - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  unint64_t v13 = *(void *)(v9 + 64)
      + v12
      + ((*(void *)(v7 + 64) + v10) & ~(unint64_t)v10);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 & ~(unint64_t)v12) + *(void *)(v11 + 64);
  unint64_t v15 = v14 + ((v6 + (v10 | v8 | v12)) & ~(unint64_t)(v10 | v8 | v12));
  unint64_t v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v16 + 8 > v15) {
    unint64_t v15 = v16 + 8;
  }
  unint64_t v17 = v16 + 40;
  if (v17 > v15) {
    unint64_t v15 = v17;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_26;
  }
  unint64_t v18 = v15 + 1;
  char v19 = 8 * (v15 + 1);
  if ((v15 + 1) <= 3)
  {
    unsigned int v22 = ((a2 + ~(-1 << v19) - 252) >> v19) + 1;
    if (HIWORD(v22))
    {
      int v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v22 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(unsigned __int16 *)((char *)a1 + v18)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v22 < 2)
    {
LABEL_26:
      unsigned int v24 = *((unsigned __int8 *)a1 + v15);
      if (v24 >= 4) {
        return (v24 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_26;
  }
LABEL_18:
  int v23 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v23 = 0;
  }
  if (v18)
  {
    if (v18 > 3) {
      LODWORD(v18) = 4;
    }
    switch((int)v18)
    {
      case 2:
        LODWORD(v18) = *a1;
        break;
      case 3:
        LODWORD(v18) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v18) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v18) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v18 | v23) + 253;
}

void sub_24F84B970(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)(a4[2] - 8) + 64);
  uint64_t v9 = *(void *)(a4[3] - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(void *)(a4[4] - 8);
  int v14 = *(_DWORD *)(v13 + 80);
  unint64_t v15 = *(void *)(v11 + 64)
      + v14
      + ((*(void *)(v9 + 64) + v12) & ~(unint64_t)v12);
  if (!*(_DWORD *)(v11 + 84)) {
    ++v15;
  }
  unint64_t v16 = (v15 & ~(unint64_t)v14) + *(void *)(v13 + 64);
  unint64_t v17 = v16 + ((v8 + (v12 | v10 | v14)) & ~(unint64_t)(v12 | v10 | v14));
  unint64_t v18 = (v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v18 + 8 > v17) {
    unint64_t v17 = v18 + 8;
  }
  unint64_t v19 = v18 + 40;
  if (v19 <= v17) {
    unint64_t v19 = v17;
  }
  size_t v20 = v19 + 1;
  char v21 = 8 * (v19 + 1);
  if (a3 < 0xFD)
  {
    int v22 = 0;
  }
  else if (v20 <= 3)
  {
    unsigned int v25 = ((a3 + ~(-1 << v21) - 252) >> v21) + 1;
    if (HIWORD(v25))
    {
      int v22 = 4;
    }
    else if (v25 >= 0x100)
    {
      int v22 = 2;
    }
    else
    {
      int v22 = v25 > 1;
    }
  }
  else
  {
    int v22 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v23 = a2 - 253;
    if (v20 < 4)
    {
      int v24 = (v23 >> v21) + 1;
      if (v19 != -1)
      {
        int v26 = v23 & ~(-1 << v21);
        bzero(a1, v20);
        if (v20 == 3)
        {
          *(_WORD *)a1 = v26;
          a1[2] = BYTE2(v26);
        }
        else if (v20 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *a1 = v26;
        }
      }
    }
    else
    {
      bzero(a1, v19 + 1);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v20] = v24;
        break;
      case 2:
        *(_WORD *)&a1[v20] = v24;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x24F84BC88);
      case 4:
        *(_DWORD *)&a1[v20] = v24;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v22)
    {
      case 1:
        a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v20] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v19] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24F84BCB0(unsigned __int8 *a1, void *a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2[2] - 8) + 64);
  uint64_t v5 = *(void *)(a2[3] - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(a2[4] - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  unint64_t v11 = *(void *)(v7 + 64)
      + v10
      + ((*(void *)(v5 + 64) + v8) & ~(unint64_t)v8);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v11;
  }
  unint64_t v12 = (v11 & ~(unint64_t)v10) + *(void *)(v9 + 64);
  unint64_t v13 = v12 + ((v4 + (v8 | v6 | v10)) & ~(unint64_t)(v8 | v6 | v10));
  unint64_t v14 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v14 + 8 > v13) {
    unint64_t v13 = v14 + 8;
  }
  unint64_t v15 = v14 + 40;
  if (v15 <= v13) {
    unint64_t v15 = v13;
  }
  uint64_t result = a1[v15];
  if (result >= 3)
  {
    if (v15 <= 3) {
      uint64_t v17 = v15;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a1;
        goto LABEL_16;
      case 2:
        int v18 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v18 = *(_DWORD *)a1;
LABEL_16:
        if (v15 < 4) {
          uint64_t result = (v18 | ((result - 3) << (8 * v15))) + 3;
        }
        else {
          uint64_t result = (v18 + 3);
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24F84BED8(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v7 = *(void *)(a3[3] - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = *(void *)(a3[4] - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  unint64_t v13 = *(void *)(v9 + 64)
      + v12
      + ((*(void *)(v7 + 64) + v10) & ~(unint64_t)v10);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 & ~(unint64_t)v12) + *(void *)(v11 + 64);
  unint64_t v15 = v14 + ((v6 + (v10 | v8 | v12)) & ~(unint64_t)(v10 | v8 | v12));
  unint64_t v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v16 + 8 > v15) {
    unint64_t v15 = v16 + 8;
  }
  size_t v17 = v16 + 40;
  if (v17 <= v15) {
    size_t v18 = v15;
  }
  else {
    size_t v18 = v17;
  }
  if (a2 > 2)
  {
    if (v18 <= 3) {
      char v19 = ((a2 - 3) >> (8 * v18)) + 3;
    }
    else {
      char v19 = 3;
    }
    if (v18 <= 3) {
      int v20 = (a2 - 3) & ~(-1 << (8 * v18));
    }
    else {
      int v20 = a2 - 3;
    }
    a1[v18] = v19;
    if (v18 >= 4) {
      int v21 = 4;
    }
    else {
      int v21 = v18;
    }
    bzero(a1, v18);
    switch(v21)
    {
      case 2:
        *(_WORD *)a1 = v20;
        break;
      case 3:
        *(_WORD *)a1 = v20;
        a1[2] = BYTE2(v20);
        break;
      case 4:
        *(_DWORD *)a1 = v20;
        break;
      default:
        *a1 = v20;
        break;
    }
  }
  else
  {
    a1[v18] = a2;
  }
}

uint64_t type metadata accessor for ReceiveValuesOnSubscription.Target()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F84C140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_24F84C148()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v0 = sub_24F8CF610();
    if (v2 <= 0x3F)
    {
      uint64_t v0 = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_24F84C288(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = v7 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v13 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v14 = *(void *)(*(void *)(a3 + 32) - 8);
  int v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = v13 + v15;
  int v17 = v10 | *(_DWORD *)(v6 + 80) | v15;
  uint64_t v18 = v17;
  int v19 = v17 & 0x100000;
  if (v18 <= 7
    && ((v16 + (v12 & ~v11)) & ~(unint64_t)v15) + *(void *)(v14 + 64) <= 0x18
    && v19 == 0)
  {
    uint64_t v30 = *(void *)(a3 + 32);
    uint64_t v24 = ~v11;
    size_t __n = v13;
    unint64_t v29 = ~(unint64_t)v15;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unsigned int v25 = (void *)(((unint64_t)a1 + v12) & v24);
    int v26 = (const void *)(((unint64_t)a2 + v12) & v24);
    if (sub_24F777048((uint64_t)v26, 1, AssociatedTypeWitness))
    {
      memcpy(v25, v26, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v25, v26, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v25, 0, 1, AssociatedTypeWitness);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))(((unint64_t)v25 + v16) & v29, ((unint64_t)v26 + v16) & v29, v30);
    return a1;
  }
  else
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    uint64_t v23 = v22 + ((v18 + 16) & ~v18);
    swift_retain();
  }
  return (uint64_t *)v23;
}

uint64_t sub_24F84C510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(uint64_t, void))v4)(a1, *(void *)(a2 + 24));
  uint64_t v5 = *(void *)(v4 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = (v5 + a1 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!sub_24F777048(v8, 1, AssociatedTypeWitness)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, AssociatedTypeWitness);
  }
  uint64_t v9 = *(void *)(a2 + 32);
  int v10 = *(uint64_t (**)(unint64_t))(*(void *)(v9 - 8) + 8);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  unint64_t v12 = *(void *)(v7 + 64) + v8;
  if (!*(_DWORD *)(v7 + 84)) {
    ++v12;
  }
  return v10((v12 + v11) & ~v11);
}

uint64_t sub_24F84C660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v6)(a1, a2, *(void *)(a3 + 24));
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (void *)((v7 + v10 + a1) & ~v10);
  unint64_t v12 = (const void *)((v7 + v10 + a2) & ~v10);
  if (sub_24F777048((uint64_t)v12, 1, AssociatedTypeWitness))
  {
    int v13 = *(_DWORD *)(v9 + 84);
    size_t v14 = *(void *)(v9 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    int v17 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    v17(v11, v12, AssociatedTypeWitness);
    sub_24F7771BC((uint64_t)v11, 0, 1, AssociatedTypeWitness);
    int v13 = *(_DWORD *)(v16 + 68);
    size_t v14 = *(void *)(v16 + 48);
  }
  if (v13) {
    size_t v18 = v14;
  }
  else {
    size_t v18 = v14 + 1;
  }
  uint64_t v19 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 16))(((unint64_t)v11 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)v12 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

uint64_t sub_24F84C7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v6)(a1, a2, *(void *)(a3 + 24));
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (void *)((v7 + v10 + a1) & ~v10);
  unint64_t v12 = (const void *)((v7 + v10 + a2) & ~v10);
  LODWORD(v7) = sub_24F777048((uint64_t)v11, 1, AssociatedTypeWitness);
  int v13 = sub_24F777048((uint64_t)v12, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v11, v12, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v11, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(v11, v12, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v11, v12, v16);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v17 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v18 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 24))(((unint64_t)v11 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v12 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_24F84C9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v6)(a1, a2, *(void *)(a3 + 24));
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (void *)((v7 + v10 + a1) & ~v10);
  unint64_t v12 = (const void *)((v7 + v10 + a2) & ~v10);
  if (sub_24F777048((uint64_t)v12, 1, AssociatedTypeWitness))
  {
    int v13 = *(_DWORD *)(v9 + 84);
    size_t v14 = *(void *)(v9 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    uint64_t v17 = *(void (**)(void *, const void *, uint64_t))(v9 + 32);
    uint64_t v16 = v9 + 32;
    v17(v11, v12, AssociatedTypeWitness);
    sub_24F7771BC((uint64_t)v11, 0, 1, AssociatedTypeWitness);
    int v13 = *(_DWORD *)(v16 + 52);
    size_t v14 = *(void *)(v16 + 32);
  }
  if (v13) {
    size_t v18 = v14;
  }
  else {
    size_t v18 = v14 + 1;
  }
  uint64_t v19 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 32))(((unint64_t)v11 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), ((unint64_t)v12 + v18 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

uint64_t sub_24F84CB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v6)(a1, a2, *(void *)(a3 + 24));
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (void *)((v7 + v10 + a1) & ~v10);
  unint64_t v12 = (const void *)((v7 + v10 + a2) & ~v10);
  LODWORD(v7) = sub_24F777048((uint64_t)v11, 1, AssociatedTypeWitness);
  int v13 = sub_24F777048((uint64_t)v12, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v11, v12, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v11, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v11, v12, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v11, v12, v16);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v17 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v18 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 40))(((unint64_t)v11 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v12 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_24F84CD98(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= v8) {
    unsigned int v13 = v8;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(void *)(a3 + 32);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  if (v16 > v13) {
    unsigned int v13 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  if (v11) {
    uint64_t v18 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  uint64_t v19 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = *(void *)(v15 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v21 = *(void *)(v7 + 64) + v17;
  if (a2 <= v13) {
    goto LABEL_32;
  }
  uint64_t v22 = ((v18 + v19 + (v21 & ~v17)) & ~v19) + v20;
  char v23 = 8 * v22;
  if (v22 > 3) {
    goto LABEL_15;
  }
  unsigned int v25 = ((a2 - v13 + ~(-1 << v23)) >> v23) + 1;
  if (HIWORD(v25))
  {
    int v24 = *(_DWORD *)((char *)a1 + v22);
    if (!v24) {
      goto LABEL_32;
    }
    goto LABEL_22;
  }
  if (v25 > 0xFF)
  {
    int v24 = *(unsigned __int16 *)((char *)a1 + v22);
    if (!*(unsigned __int16 *)((char *)a1 + v22)) {
      goto LABEL_32;
    }
    goto LABEL_22;
  }
  if (v25 >= 2)
  {
LABEL_15:
    int v24 = *((unsigned __int8 *)a1 + v22);
    if (!*((unsigned char *)a1 + v22)) {
      goto LABEL_32;
    }
LABEL_22:
    int v26 = (v24 - 1) << v23;
    if (v22 > 3) {
      int v26 = 0;
    }
    if (v22)
    {
      if (v22 <= 3) {
        int v27 = v22;
      }
      else {
        int v27 = 4;
      }
      switch(v27)
      {
        case 2:
          int v28 = *a1;
          break;
        case 3:
          int v28 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v28 = *(_DWORD *)a1;
          break;
        default:
          int v28 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v28 = 0;
    }
    return v13 + (v28 | v26) + 1;
  }
LABEL_32:
  if (!v13) {
    return 0;
  }
  if (v8 == v13)
  {
    uint64_t v29 = (uint64_t)a1;
    uint64_t v30 = v8;
    uint64_t v14 = v6;
  }
  else
  {
    uint64_t v32 = ((unint64_t)a1 + v21) & ~v17;
    if (v12 == v13)
    {
      unsigned int v33 = sub_24F777048(v32, v11, AssociatedTypeWitness);
      if (v33 >= 2) {
        return v33 - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v29 = (v32 + v18 + v19) & ~v19;
    uint64_t v30 = v16;
  }
  return sub_24F777048(v29, v30, v14);
}

void sub_24F84D098(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v12 = 0;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  if (v14) {
    unsigned int v15 = v14 - 1;
  }
  else {
    unsigned int v15 = 0;
  }
  if (v15 <= v10) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(void *)(a4 + 32);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int *)(v18 + 84);
  if (v19 > v16) {
    unsigned int v16 = *(_DWORD *)(v18 + 84);
  }
  uint64_t v20 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v21 = *(void *)(v9 + 64) + v20;
  if (v14) {
    uint64_t v22 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v22 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  uint64_t v23 = *(unsigned __int8 *)(v18 + 80);
  size_t v24 = ((v22 + v23 + (v21 & ~v20)) & ~v23) + *(void *)(v18 + 64);
  char v25 = 8 * v24;
  if (a3 > v16)
  {
    if (v24 <= 3)
    {
      unsigned int v26 = ((a3 - v16 + ~(-1 << v25)) >> v25) + 1;
      if (HIWORD(v26))
      {
        int v12 = 4;
      }
      else if (v26 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v26 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  if (v16 < a2)
  {
    unsigned int v27 = ~v16 + a2;
    if (v24 < 4)
    {
      int v28 = (v27 >> v25) + 1;
      if (v24)
      {
        int v29 = v27 & ~(-1 << v25);
        bzero(a1, v24);
        if (v24 == 3)
        {
          *(_WORD *)a1 = v29;
          a1[2] = BYTE2(v29);
        }
        else if (v24 == 2)
        {
          *(_WORD *)a1 = v29;
        }
        else
        {
          *a1 = v29;
        }
      }
    }
    else
    {
      bzero(a1, v24);
      *(_DWORD *)a1 = v27;
      int v28 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v24] = v28;
        return;
      case 2:
        *(_WORD *)&a1[v24] = v28;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)&a1[v24] = v28;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x24F84D400);
    case 4:
      *(_DWORD *)&a1[v24] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v10 == v16)
        {
          uint64_t v30 = (uint64_t)a1;
          uint64_t v31 = a2;
          uint64_t v14 = v10;
          uint64_t v17 = v8;
        }
        else
        {
          uint64_t v30 = (unint64_t)&a1[v21] & ~v20;
          if (v15 == v16)
          {
            uint64_t v31 = (a2 + 1);
            uint64_t v17 = AssociatedTypeWitness;
          }
          else
          {
            uint64_t v30 = (v30 + v22 + v23) & ~v23;
            uint64_t v31 = a2;
            uint64_t v14 = v19;
          }
        }
        sub_24F7771BC(v30, v31, v14, v17);
      }
      return;
  }
}

uint64_t sub_24F84D428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_24F84D430()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      uint64_t v0 = sub_24F8CF610();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_24F84D570(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 24);
  uint64_t v28 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v28 - 8);
  uint64_t v5 = *(void *)(v3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v4 + 64) + v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v12 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v9 + 64) + 1;
  }
  unint64_t v13 = v12
      + ((v8 + v10 + (v7 & ~(unint64_t)v6)) & ~(unint64_t)v10);
  int v14 = v6 | *(_DWORD *)(v4 + 80) | v10;
  uint64_t v15 = (v6 | *(unsigned char *)(v4 + 80) | v10);
  int v16 = v14 & 0x100000;
  if (v15 <= 7 && v13 <= 0x18 && v16 == 0)
  {
    size_t __n = v12;
    unint64_t v21 = ~(unint64_t)v6;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v28);
    unint64_t v22 = ((unint64_t)a1 + v7) & v21;
    unint64_t v23 = ((unint64_t)a2 + v7) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v22, v23, v3);
    size_t v24 = (void *)((v22 + v8 + v11) & ~v11);
    char v25 = (const void *)((v23 + v8 + v11) & ~v11);
    if (sub_24F777048((uint64_t)v25, 1, AssociatedTypeWitness))
    {
      memcpy(v24, v25, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v24, v25, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v24, 0, 1, AssociatedTypeWitness);
    }
    return a1;
  }
  else
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    uint64_t v20 = v19 + ((v15 + 16) & ~v15);
    swift_retain();
  }
  return (uint64_t *)v20;
}

uint64_t sub_24F84D7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, void))(v5 + 8))(v7, *(void *)(a2 + 24));
  uint64_t v8 = *(void *)(v6 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t result = sub_24F777048(v10, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(unint64_t, uint64_t))(v13 + 8);
    return v12(v10, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_24F84D958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, void))(v7 + 16))(v11, v12, *(void *)(a3 + 24));
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v13 + v16 + v11) & ~v16);
  uint64_t v19 = (const void *)((v17 + v12) & ~v16);
  if (sub_24F777048((uint64_t)v19, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v15 + 84)) {
      size_t v20 = *(void *)(v15 + 64);
    }
    else {
      size_t v20 = *(void *)(v15 + 64) + 1;
    }
    memcpy(v18, v19, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v18, v19, AssociatedTypeWitness);
    sub_24F7771BC((uint64_t)v18, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_24F84DAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, void))(v7 + 24))(v11, v12, *(void *)(a3 + 24));
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v13 + v16 + v11) & ~v16);
  uint64_t v19 = (const void *)((v17 + v12) & ~v16);
  LODWORD(v11) = sub_24F777048((uint64_t)v18, 1, AssociatedTypeWitness);
  int v20 = sub_24F777048((uint64_t)v19, 1, AssociatedTypeWitness);
  if (v11)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v18, v19, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v18, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v21 = *(_DWORD *)(v15 + 84);
    size_t v22 = *(void *)(v15 + 64);
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 24))(v18, v19, AssociatedTypeWitness);
      return a1;
    }
    size_t v24 = *(void (**)(void *, uint64_t))(v15 + 8);
    uint64_t v23 = v15 + 8;
    v24(v18, AssociatedTypeWitness);
    int v21 = *(_DWORD *)(v23 + 76);
    size_t v22 = *(void *)(v23 + 56);
  }
  if (v21) {
    size_t v25 = v22;
  }
  else {
    size_t v25 = v22 + 1;
  }
  memcpy(v18, v19, v25);
  return a1;
}

uint64_t sub_24F84DCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, void))(v7 + 32))(v11, v12, *(void *)(a3 + 24));
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v13 + v16 + v11) & ~v16);
  uint64_t v19 = (const void *)((v17 + v12) & ~v16);
  if (sub_24F777048((uint64_t)v19, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v15 + 84)) {
      size_t v20 = *(void *)(v15 + 64);
    }
    else {
      size_t v20 = *(void *)(v15 + 64) + 1;
    }
    memcpy(v18, v19, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, AssociatedTypeWitness);
    sub_24F7771BC((uint64_t)v18, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_24F84DE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, void))(v7 + 40))(v11, v12, *(void *)(a3 + 24));
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v13 + v16 + v11) & ~v16);
  uint64_t v19 = (const void *)((v17 + v12) & ~v16);
  LODWORD(v11) = sub_24F777048((uint64_t)v18, 1, AssociatedTypeWitness);
  int v20 = sub_24F777048((uint64_t)v19, 1, AssociatedTypeWitness);
  if (v11)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, AssociatedTypeWitness);
      sub_24F7771BC((uint64_t)v18, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v21 = *(_DWORD *)(v15 + 84);
    size_t v22 = *(void *)(v15 + 64);
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(v18, v19, AssociatedTypeWitness);
      return a1;
    }
    size_t v24 = *(void (**)(void *, uint64_t))(v15 + 8);
    uint64_t v23 = v15 + 8;
    v24(v18, AssociatedTypeWitness);
    int v21 = *(_DWORD *)(v23 + 76);
    size_t v22 = *(void *)(v23 + 56);
  }
  if (v21) {
    size_t v25 = v22;
  }
  else {
    size_t v25 = v22 + 1;
  }
  memcpy(v18, v19, v25);
  return a1;
}

uint64_t sub_24F84E068(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v32 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v32 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= v6) {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v13 <= v9) {
    unsigned int v13 = v9;
  }
  uint64_t v14 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = *(void *)(v7 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  if (v12) {
    uint64_t v17 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v17 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = AssociatedTypeWitness;
  uint64_t v19 = *(void *)(v5 + 64) + v14;
  uint64_t v20 = (uint64_t)a1;
  if (a2 <= v13) {
    goto LABEL_31;
  }
  uint64_t v21 = v17 + ((v15 + v16 + (v19 & ~v14)) & ~v16);
  char v22 = 8 * v21;
  if (v21 > 3) {
    goto LABEL_14;
  }
  unsigned int v24 = ((a2 - v13 + ~(-1 << v22)) >> v22) + 1;
  if (HIWORD(v24))
  {
    int v23 = *(_DWORD *)((char *)a1 + v21);
    if (!v23) {
      goto LABEL_31;
    }
    goto LABEL_21;
  }
  if (v24 > 0xFF)
  {
    int v23 = *(unsigned __int16 *)((char *)a1 + v21);
    if (!*(unsigned __int16 *)((char *)a1 + v21)) {
      goto LABEL_31;
    }
    goto LABEL_21;
  }
  if (v24 >= 2)
  {
LABEL_14:
    int v23 = *((unsigned __int8 *)a1 + v21);
    if (!*((unsigned char *)a1 + v21)) {
      goto LABEL_31;
    }
LABEL_21:
    int v25 = (v23 - 1) << v22;
    if (v21 > 3) {
      int v25 = 0;
    }
    if (v21)
    {
      if (v21 <= 3) {
        int v26 = v21;
      }
      else {
        int v26 = 4;
      }
      switch(v26)
      {
        case 2:
          int v27 = *a1;
          break;
        case 3:
          int v27 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v27 = *(_DWORD *)a1;
          break;
        default:
          int v27 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v27 = 0;
    }
    return v13 + (v27 | v25) + 1;
  }
LABEL_31:
  if (!v13) {
    return 0;
  }
  if (v6 == v13)
  {
    uint64_t v28 = v6;
    uint64_t v29 = v32;
  }
  else
  {
    uint64_t v20 = ((unint64_t)a1 + v19) & ~v14;
    if (v8 != v13)
    {
      unsigned int v31 = sub_24F777048((v20 + v15 + v16) & ~v16, v12, v18);
      if (v31 >= 2) {
        return v31 - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v28 = v8;
    uint64_t v29 = v4;
  }
  return sub_24F777048(v20, v28, v29);
}

void sub_24F84E374(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + 24);
  uint64_t v39 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(v39 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v12 = 0;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  if (v15 <= v10) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = *(void *)(v6 + 64) + v17;
  uint64_t v19 = *(void *)(v8 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v21 = (v19 + v20 + (v18 & ~v17)) & ~v20;
  if (v14) {
    size_t v22 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    size_t v22 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  size_t v23 = v21 + v22;
  char v24 = 8 * (v21 + v22);
  if (a3 > v16)
  {
    if (v23 <= 3)
    {
      unsigned int v25 = ((a3 - v16 + ~(-1 << v24)) >> v24) + 1;
      if (HIWORD(v25))
      {
        int v12 = 4;
      }
      else if (v25 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v25 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  if (v16 < a2)
  {
    unsigned int v26 = ~v16 + a2;
    if (v23 < 4)
    {
      int v28 = (v26 >> v24) + 1;
      if (v23)
      {
        int v32 = v12;
        int v33 = v26 & ~(-1 << v24);
        bzero(a1, v23);
        if (v23 == 3)
        {
          *(_WORD *)a1 = v33;
          a1[2] = BYTE2(v33);
          int v12 = v32;
        }
        else
        {
          int v12 = v32;
          if (v23 == 2) {
            *(_WORD *)a1 = v33;
          }
          else {
            *a1 = v33;
          }
        }
      }
    }
    else
    {
      int v27 = v12;
      bzero(a1, v23);
      int v12 = v27;
      *(_DWORD *)a1 = v26;
      int v28 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v23] = v28;
        return;
      case 2:
        *(_WORD *)&a1[v23] = v28;
        return;
      case 3:
        goto LABEL_62;
      case 4:
        *(_DWORD *)&a1[v23] = v28;
        return;
      default:
        return;
    }
  }
  uint64_t v29 = ~v17;
  uint64_t v30 = ~v20;
  uint64_t v31 = (uint64_t)a1;
  switch(v12)
  {
    case 1:
      a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_62:
      __break(1u);
      JUMPOUT(0x24F84E78CLL);
    case 4:
      *(_DWORD *)&a1[v23] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (!a2) {
        return;
      }
LABEL_32:
      if (v7 == v16)
      {
        uint64_t v34 = a2;
        uint64_t v14 = v7;
        uint64_t AssociatedTypeWitness = v39;
LABEL_56:
        sub_24F7771BC(v31, v34, v14, AssociatedTypeWitness);
        return;
      }
      uint64_t v31 = (unint64_t)&a1[v18] & v29;
      if (v9 == v16)
      {
        uint64_t v34 = a2;
        uint64_t v14 = v9;
        uint64_t AssociatedTypeWitness = v5;
        goto LABEL_56;
      }
      size_t v35 = (unsigned char *)((v31 + v19 + v20) & v30);
      if (v15 >= a2)
      {
        uint64_t v34 = a2 + 1;
        uint64_t v31 = (v31 + v19 + v20) & v30;
        goto LABEL_56;
      }
      if (v22 <= 3) {
        int v36 = ~(-1 << (8 * v22));
      }
      else {
        int v36 = -1;
      }
      if (v22)
      {
        int v37 = v36 & (~v15 + a2);
        if (v22 <= 3) {
          int v38 = v22;
        }
        else {
          int v38 = 4;
        }
        bzero(v35, v22);
        switch(v38)
        {
          case 2:
            *(_WORD *)size_t v35 = v37;
            break;
          case 3:
            *(_WORD *)size_t v35 = v37;
            v35[2] = BYTE2(v37);
            break;
          case 4:
            *(_DWORD *)size_t v35 = v37;
            break;
          default:
            *size_t v35 = v37;
            break;
        }
      }
      return;
  }
}