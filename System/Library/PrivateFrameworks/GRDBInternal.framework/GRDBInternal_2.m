uint64_t type metadata accessor for ReceiveValuesOn()
{
  return swift_getGenericMetadata();
}

id sub_24F84E7DC()
{
  return sub_24F845ABC();
}

id sub_24F84E800()
{
  return sub_24F8467F0();
}

uint64_t sub_24F84E824()
{
  return sub_24F846DF0();
}

id sub_24F84E848(uint64_t a1)
{
  return sub_24F8476F4(a1);
}

id sub_24F84E86C()
{
  return sub_24F84635C();
}

uint64_t sub_24F84E890()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F84E8AC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24F84E8CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F84E8E8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24F84E908(uint64_t (**a1)())
{
  return sub_24F848654(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F84E910()
{
  uint64_t v1 = *(void *)(v0 + 32);
  long long v20 = *(_OWORD *)(v0 + 48);
  type metadata accessor for ReceiveValuesOnSubscription.Target();
  sub_24F77EA28();
  uint64_t v2 = sub_24F77B9C4();
  sub_24F781E14();
  uint64_t v3 = sub_24F8CEAE0();
  sub_24F77FC94(v3);
  sub_24F773974();
  uint64_t v4 = sub_24F77F064();
  uint64_t v6 = v5(v4);
  sub_24F77DB54(v6, v7, v8, v9, v10, v11, v12, v13, v20);
  uint64_t v14 = sub_24F76B9A4();
  if (!sub_24F7830C0(v14))
  {
    sub_24F773974();
    uint64_t v15 = sub_24F7815B0();
    v16(v15);
  }
  sub_24F773974();
  sub_24F7739F4();
  v17();
  if (!sub_24F77D884())
  {
    sub_24F773974();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v2);
  }
  return swift_deallocObject();
}

uint64_t sub_24F84EAFC()
{
  uint64_t v0 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  sub_24F77FC94(v0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = sub_24F8CEAE0();
  sub_24F77DF00(v1);
  return sub_24F848BF8();
}

uint64_t sub_24F84EC28(uint64_t (**a1)())
{
  return sub_24F848094(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_24F84EC30()
{
  sub_24F778E30();
  sub_24F78091C();
  type metadata accessor for ReceiveValuesOnSubscription.Target();
  sub_24F77EA28();
  swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  sub_24F773974();
  uint64_t v0 = sub_24F77F064();
  v1(v0);
  uint64_t v2 = sub_24F76B9A4();
  if (!sub_24F7830C0(v2))
  {
    sub_24F773974();
    uint64_t v3 = sub_24F7815B0();
    v4(v3);
  }
  sub_24F773974();
  sub_24F7739F4();
  v5();
  uint64_t v6 = sub_24F77BDE0();
  v7(v6);
  swift_deallocObject();
  sub_24F771110();
}

uint64_t sub_24F84EDCC()
{
  uint64_t v0 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  sub_24F77FC94(v0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77DF00(AssociatedTypeWitness);
  return sub_24F848544();
}

uint64_t sub_24F84EEC0(uint64_t (**a1)())
{
  return sub_24F84773C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

#error "24F84EFC8: call analysis failed (funcsize=120)"

uint64_t sub_24F84F0A8()
{
  uint64_t v1 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  sub_24F77FC94(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24F7773E0();
  sub_24F77C0DC();
  uint64_t v6 = sub_24F8CEAE0();
  sub_24F77DF00(v6);
  uint64_t v8 = *(void *)(v0 + v5);
  uint64_t v9 = v0 + ((v5 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_24F847C3C(v0 + v3, v8, v9);
}

uint64_t sub_24F84F1BC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_24F8CEAE0();
  sub_24F77FC94(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  if (!sub_24F777048(v0 + v4, 1, AssociatedTypeWitness))
  {
    sub_24F773974();
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v4, AssociatedTypeWitness);
  }
  return swift_deallocObject();
}

id sub_24F84F2D4()
{
  sub_24F7773E0();
  sub_24F77C0DC();
  uint64_t v0 = sub_24F8CEAE0();
  sub_24F77DF00(v0);
  uint64_t v2 = sub_24F77B61C(*(unsigned __int8 *)(v1 + 80));
  return sub_24F8485B8(v2);
}

uint64_t sub_24F84F34C(uint64_t (**a1)())
{
  return sub_24F846E68(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

#error "24F84F41C: call analysis failed (funcsize=102)"

uint64_t sub_24F84F4EC()
{
  uint64_t v1 = type metadata accessor for ReceiveValuesOnSubscription.Target();
  sub_24F77FC94(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77DF00(AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v0 + v5);
  uint64_t v9 = v0 + ((v5 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_24F847334(v0 + v3, v8, v9);
}

uint64_t sub_24F84F5D4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);
  return swift_deallocObject();
}

id sub_24F84F694()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77DF00(AssociatedTypeWitness);
  uint64_t v2 = sub_24F77B61C(*(unsigned __int8 *)(v1 + 80));
  return sub_24F848048(v2);
}

uint64_t sub_24F84F6E0(uint64_t (**a1)())
{
  return sub_24F846880(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F84F6E8()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_24F84F720()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_24F84F758()
{
  return sub_24F846D70((void *)(v0 + 16));
}

uint64_t sub_24F84F778(uint64_t (**a1)())
{
  return sub_24F8463C4(a1, v1);
}

uint64_t sub_24F84F780()
{
  return sub_24F846DB8((void *)(v0 + 16));
}

uint64_t sub_24F84F79C(uint64_t (**a1)())
{
  return sub_24F845B30(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F84F7A4()
{
  sub_24F773974();
  sub_24F7739F4();
  v0();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F84F838()
{
  return sub_24F846274();
}

void CommonTableExpression<A>.init<A>(recursive:named:columns:request:)()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12;
  uint64_t v15 = v14;
  sub_24F77AD10();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18);
  long long v20 = &v24[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16))(v20, v21, v22);
  type metadata accessor for Row();
  sub_24F84FB30(v13, v11, v9, v7, (uint64_t)v20, v3, (uint64_t)v24, v1);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v3);
  memcpy(v15, v24, 0xBBuLL);
  sub_24F77344C();
}

uint64_t CommonTableExpression.contains(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void (*v9)(void *__return_ptr, uint64_t, uint64_t);
  unsigned char *v10;
  void v12[21];
  unsigned char v13[168];
  void __src[21];
  void v15[21];

  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  v12[0] = v5;
  v12[1] = v6;
  sub_24F7AD754((uint64_t)v12);
  sub_24F7AD780((uint64_t)v12, (uint64_t)v13);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_24F7811D0(a1, v7);
  uint64_t v9 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v9(__src, v7, v8);
  uint64_t v10 = (unsigned char *)swift_allocObject();
  memcpy(v10 + 16, __src, 0xA3uLL);
  memcpy(v10 + 184, v13, 0xA2uLL);
  v10[346] = 0;
  v15[0] = v10;
  sub_24F7AD91C((uint64_t)v15);
  return sub_24F76F710((uint64_t)v15, a2);
}

uint64_t CommonTableExpression.tableName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommonTableExpression.tableName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CommonTableExpression.tableName.modify())(void)
{
  return nullsub_1;
}

void *sub_24F84FB30@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  (*(void (**)(void *__return_ptr, uint64_t))(a8 + 16))(__src, a6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a6 - 8) + 8))(a5, a6);
  *(void *)a7 = a2;
  *(void *)(a7 + 8) = a3;
  *(void *)(a7 + 16) = a4;
  uint64_t result = memcpy((void *)(a7 + 24), __src, 0xA2uLL);
  *(unsigned char *)(a7 + 186) = a1;
  return result;
}

uint64_t sub_24F84FBF4()
{
  sub_24F76C98C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160),
    *(void *)(v0 + 168),
    *(unsigned __int16 *)(v0 + 176) | (*(unsigned __int8 *)(v0 + 178) << 16));
  sub_24F7AD880(*(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 280), *(void *)(v0 + 288), *(void *)(v0 + 296), *(void *)(v0 + 304), *(void *)(v0 + 312), *(void *)(v0 + 320), *(void *)(v0 + 328),
    *(void *)(v0 + 336),
    *(_WORD *)(v0 + 344));
  return swift_deallocObject();
}

void CommonTableExpression.init<A>(recursive:named:columns:request:)()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12;
  uint64_t v22 = v14;
  sub_24F77AD10();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = &v23[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v19, v20, v21);
  sub_24F84FB30(v13, v11, v9, v7, (uint64_t)v19, v3, (uint64_t)v23, v1);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v5, v3);
  memcpy(v22, v23, 0xBBuLL);
  sub_24F77344C();
}

void CommonTableExpression.init(recursive:named:columns:sql:arguments:)()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v16 = v6;
  __dst = v7;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12;
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24F8DDBF0;
  v23[0] = v5;
  v23[1] = v3;
  long long v24 = *v1;
  sub_24F7725D4(v23);
  sub_24F76C344((uint64_t)v23, v14 + 32);
  sub_24F7786CC((uint64_t)v19, (uint64_t)v18);
  memset(__src, 0, 40);
  *((void *)&__src[2] + 1) = v14;
  sub_24F7AC1D0((uint64_t)v18, (uint64_t)__src);
  char v22 = 2;
  v21[0] = __src[0];
  v21[1] = __src[1];
  v21[2] = __src[2];
  sub_24F7783C0((uint64_t)v19, &qword_26B1F7F10);
  uint64_t v15 = sub_24F781274(&qword_26B1F7D38);
  sub_24F84FB30(v13, v11, v9, v16, (uint64_t)v21, v15, (uint64_t)__src, (uint64_t)&protocol witness table for SQLRequest<A>);
  memcpy(__dst, __src, 0xBBuLL);
  sub_24F77344C();
}

void *CommonTableExpression.init(recursive:named:columns:literal:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, void *a6@<X8>)
{
  uint64_t v11 = *a5;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_24F7786CC((uint64_t)v15, (uint64_t)v14);
  memset(__src, 0, 40);
  *((void *)&__src[2] + 1) = v11;
  sub_24F7AC1D0((uint64_t)v14, (uint64_t)__src);
  char v18 = 2;
  v17[0] = __src[0];
  v17[1] = __src[1];
  v17[2] = __src[2];
  sub_24F7783C0((uint64_t)v15, &qword_26B1F7F10);
  uint64_t v12 = sub_24F781274(&qword_26B1F7D38);
  sub_24F84FB30(a1, a2, a3, a4, (uint64_t)v17, v12, (uint64_t)__src, (uint64_t)&protocol witness table for SQLRequest<A>);
  return memcpy(a6, __src, 0xBBuLL);
}

void CommonTableExpression<A>.init(recursive:named:columns:sql:arguments:)()
{
  sub_24F76B80C();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v12 = v10;
  sub_24F77AFC8();
  memset(v19, 0, 40);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DDBF0;
  v17[0] = v9;
  v17[1] = v7;
  long long v18 = *v5;
  sub_24F7725D4(v17);
  sub_24F76C344((uint64_t)v17, v11 + 32);
  sub_24F7786CC((uint64_t)v19, (uint64_t)v13);
  memset(__src, 0, 40);
  *((void *)&__src[2] + 1) = v11;
  sub_24F7AC1D0((uint64_t)v13, (uint64_t)__src);
  char v16 = 2;
  v14[0] = __src[0];
  v14[1] = __src[1];
  long long v15 = __src[2];
  sub_24F7783C0((uint64_t)v19, &qword_26B1F7F10);
  v19[0] = *((void *)&v15 + 1);
  sub_24F850184((uint64_t)v19);
  sub_24F7AA6E8((uint64_t)v19, (uint64_t)__src);
  swift_bridgeObjectRetain();
  sub_24F7783C0((uint64_t)v14, &qword_26B1F7D38);
  memcpy((void *)(v1 + 24), __src, 0xA2uLL);
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v12;
  *(unsigned char *)(v1 + 186) = v0;
  sub_24F77344C();
}

uint64_t sub_24F850184(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 104) & 1;
  __int16 v2 = *(_WORD *)(result + 160) & 0x1FF;
  *(void *)(result + 64) &= 1uLL;
  *(void *)(result + 104) = v1;
  *(_WORD *)(result + 160) = v2;
  return result;
}

void *CommonTableExpression<A>.init(recursive:named:columns:literal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24F77AFC8();
  uint64_t v10 = *v9;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_24F7786CC((uint64_t)v16, (uint64_t)v12);
  memset(__src, 0, 40);
  *((void *)&__src[2] + 1) = v10;
  sub_24F7AC1D0((uint64_t)v12, (uint64_t)__src);
  char v15 = 2;
  v13[0] = __src[0];
  v13[1] = __src[1];
  long long v14 = __src[2];
  sub_24F7783C0((uint64_t)v16, &qword_26B1F7F10);
  *(void *)&v16[0] = *((void *)&v14 + 1);
  sub_24F850184((uint64_t)v16);
  sub_24F7AA6E8((uint64_t)v16, (uint64_t)__src);
  swift_bridgeObjectRetain();
  sub_24F7783C0((uint64_t)v13, &qword_26B1F7D38);
  uint64_t result = memcpy((void *)(v5 + 24), __src, 0xA2uLL);
  *(void *)uint64_t v5 = v7;
  *(void *)(v5 + 8) = v6;
  *(void *)(v5 + 16) = a4;
  *(unsigned char *)(v5 + 186) = v4;
  return result;
}

void *CommonTableExpression.all()@<X0>(void *a1@<X8>)
{
  sub_24F7C813C((uint64_t)__src);
  return sub_24F7A59FC(__src, a1);
}

uint64_t CommonTableExpression.association<A>(to:on:)()
{
  sub_24F773C84();
  sub_24F7C813C((uint64_t)v16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  *(void *)&long long v11 = sub_24F8511E0;
  *((void *)&v11 + 1) = v2;
  sub_24F77FF98(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13, v14, v15, v16[0]);
  return swift_retain();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  long long v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16[21];
  uint64_t vars8;

  sub_24F773C84();
  type metadata accessor for Table();
  sub_24F7C813C((uint64_t)v16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  *(void *)&long long v11 = sub_24F8505E8;
  *((void *)&v11 + 1) = v2;
  sub_24F77FF98(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13, v14, v15, v16[0]);
  return swift_retain();
}

uint64_t type metadata accessor for CommonTableExpression()
{
  return sub_24F777DE0();
}

uint64_t sub_24F850394()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t CommonTableExpression.association<A>(to:)()
{
  sub_24F7C813C((uint64_t)v13);
  return sub_24F77E288(v0, v1, v2, v3, v4, v5, v6, v7, (unint64_t)sub_24F807080, v9, v10, v11, v12, v13[0]);
}

{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v13[21];

  type metadata accessor for Table();
  sub_24F7C813C((uint64_t)v13);
  return sub_24F77E288(v0, v1, v2, v3, v4, v5, v6, v7, (unint64_t)sub_24F807080, v9, v10, v11, v12, v13[0]);
}

uint64_t CommonTableExpression.association<A>(to:on:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  sub_24F790A0C(a3, a4, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_24F77EA40();
  sub_24F827F24(v9, v10, a5);
  return swift_retain();
}

uint64_t CommonTableExpression.association<A>(to:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  sub_24F790A0C(a1, a2, (uint64_t)v7);
  sub_24F77EA40();
  return sub_24F827F24(v4, v5, a3);
}

uint64_t sub_24F8505E8@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7D6ECC(*(void (**)(void *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_24F85067C(uint64_t a1)
{
  return sub_24F79138C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168),
           *(void *)(a1 + 176),
           *(_WORD *)(a1 + 184));
}

uint64_t sub_24F8506F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v21 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 40);
  uint64_t v19 = *(void *)(a2 + 32);
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v17 = *(void *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 64);
  uint64_t v20 = *(void *)(a2 + 80);
  uint64_t v25 = *(void *)(a2 + 96);
  uint64_t v26 = *(void *)(a2 + 88);
  uint64_t v23 = *(void *)(a2 + 112);
  uint64_t v24 = *(void *)(a2 + 104);
  uint64_t v5 = *(void *)(a2 + 128);
  uint64_t v22 = *(void *)(a2 + 120);
  uint64_t v6 = *(void *)(a2 + 136);
  uint64_t v7 = *(void *)(a2 + 144);
  uint64_t v8 = *(void *)(a2 + 152);
  uint64_t v9 = *(void *)(a2 + 160);
  uint64_t v11 = *(void *)(a2 + 168);
  uint64_t v10 = *(void *)(a2 + 176);
  __int16 v12 = *(_WORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7958C8(v21, v19, v18, v17, v16, v15, v14, v20, v26, v25, v24, v23, v22, v5, v6, v7, v8, v9, v11, v10, v12);
  *(void *)(a1 + 24) = v21;
  *(void *)(a1 + 32) = v19;
  *(void *)(a1 + 40) = v18;
  *(void *)(a1 + 48) = v17;
  *(void *)(a1 + 56) = v16;
  *(void *)(a1 + 64) = v15;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v20;
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v25;
  *(void *)(a1 + 104) = v24;
  *(void *)(a1 + 112) = v23;
  *(void *)(a1 + 120) = v22;
  *(void *)(a1 + 128) = v5;
  *(void *)(a1 + 136) = v6;
  *(void *)(a1 + 144) = v7;
  *(void *)(a1 + 152) = v8;
  *(void *)(a1 + 160) = v9;
  *(void *)(a1 + 168) = v11;
  *(void *)(a1 + 176) = v10;
  *(_WORD *)(a1 + 184) = v12;
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  return a1;
}

uint64_t sub_24F8508B4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v29 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  uint64_t v31 = *(void *)(a2 + 104);
  uint64_t v32 = *(void *)(a2 + 112);
  uint64_t v33 = *(void *)(a2 + 120);
  uint64_t v34 = *(void *)(a2 + 128);
  uint64_t v35 = *(void *)(a2 + 136);
  uint64_t v36 = *(void *)(a2 + 144);
  uint64_t v37 = *(void *)(a2 + 152);
  uint64_t v38 = *(void *)(a2 + 160);
  uint64_t v39 = *(void *)(a2 + 168);
  uint64_t v40 = *(void *)(a2 + 176);
  __int16 v41 = *(_WORD *)(a2 + 184);
  sub_24F7958C8(v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  long long v20 = *(_OWORD *)(a1 + 88);
  *(void *)(a1 + 88) = v29;
  *(void *)(a1 + 96) = v30;
  long long v21 = *(_OWORD *)(a1 + 104);
  *(void *)(a1 + 104) = v31;
  *(void *)(a1 + 112) = v32;
  long long v22 = *(_OWORD *)(a1 + 120);
  *(void *)(a1 + 120) = v33;
  *(void *)(a1 + 128) = v34;
  long long v23 = *(_OWORD *)(a1 + 136);
  *(void *)(a1 + 136) = v35;
  *(void *)(a1 + 144) = v36;
  long long v24 = *(_OWORD *)(a1 + 152);
  *(void *)(a1 + 152) = v37;
  *(void *)(a1 + 160) = v38;
  uint64_t v25 = *(void *)(a1 + 168);
  uint64_t v26 = *(void *)(a1 + 176);
  *(void *)(a1 + 168) = v39;
  *(void *)(a1 + 176) = v40;
  __int16 v27 = *(_WORD *)(a1 + 184);
  *(_WORD *)(a1 + 184) = v41;
  sub_24F79138C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    v26,
    v27);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  return a1;
}

void *sub_24F850A84(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xBBuLL);
}

uint64_t sub_24F850A8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  __int16 v4 = *(_WORD *)(a2 + 184);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 88);
  long long v14 = *(_OWORD *)(a1 + 104);
  long long v15 = *(_OWORD *)(a1 + 120);
  long long v16 = *(_OWORD *)(a1 + 136);
  long long v17 = *(_OWORD *)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 168);
  uint64_t v19 = *(void *)(a1 + 176);
  __int16 v20 = *(_WORD *)(a1 + 184);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_WORD *)(a1 + 184) = v4;
  sub_24F79138C(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    v19,
    v20);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  return a1;
}

uint64_t sub_24F850B80(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 187))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F850BC0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 186) = 0;
    *(_WORD *)(result + 184) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 187) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 187) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t destroy for SQLCTE(uint64_t a1)
{
  return sub_24F79138C(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152),
           *(void *)(a1 + 160),
           *(_WORD *)(a1 + 168));
}

uint64_t initializeWithCopy for SQLCTE(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v21 = v4;
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v25 = *(void *)(a2 + 80);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v23 = *(void *)(a2 + 96);
  uint64_t v24 = *(void *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 112);
  uint64_t v22 = *(void *)(a2 + 104);
  uint64_t v6 = *(void *)(a2 + 120);
  uint64_t v7 = *(void *)(a2 + 128);
  uint64_t v9 = *(void *)(a2 + 136);
  uint64_t v8 = *(void *)(a2 + 144);
  uint64_t v10 = *(void *)(a2 + 152);
  uint64_t v11 = *(void *)(a2 + 160);
  __int16 v12 = *(_WORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  sub_24F7958C8(v21, v20, v19, v18, v17, v16, v15, v14, v26, v25, v24, v23, v22, v5, v6, v7, v9, v8, v10, v11, v12);
  *(void *)(a1 + 8) = v21;
  *(void *)(a1 + 16) = v20;
  *(void *)(a1 + 24) = v19;
  *(void *)(a1 + 32) = v18;
  *(void *)(a1 + 40) = v17;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v26;
  *(void *)(a1 + 80) = v25;
  *(void *)(a1 + 88) = v24;
  *(void *)(a1 + 96) = v23;
  *(void *)(a1 + 104) = v22;
  *(void *)(a1 + 112) = v5;
  *(void *)(a1 + 120) = v6;
  *(void *)(a1 + 128) = v7;
  *(void *)(a1 + 136) = v9;
  *(void *)(a1 + 144) = v8;
  *(void *)(a1 + 152) = v10;
  *(void *)(a1 + 160) = v11;
  *(_WORD *)(a1 + 168) = v12;
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  return a1;
}

uint64_t assignWithCopy for SQLCTE(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v29 = *(void *)(a2 + 72);
  uint64_t v30 = *(void *)(a2 + 80);
  uint64_t v31 = *(void *)(a2 + 88);
  uint64_t v32 = *(void *)(a2 + 96);
  uint64_t v33 = *(void *)(a2 + 104);
  uint64_t v34 = *(void *)(a2 + 112);
  uint64_t v35 = *(void *)(a2 + 120);
  uint64_t v36 = *(void *)(a2 + 128);
  uint64_t v37 = *(void *)(a2 + 136);
  uint64_t v38 = *(void *)(a2 + 144);
  uint64_t v39 = *(void *)(a2 + 152);
  uint64_t v40 = *(void *)(a2 + 160);
  __int16 v41 = *(_WORD *)(a2 + 168);
  sub_24F7958C8(v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  long long v20 = *(_OWORD *)(a1 + 72);
  *(void *)(a1 + 72) = v29;
  *(void *)(a1 + 80) = v30;
  long long v21 = *(_OWORD *)(a1 + 88);
  *(void *)(a1 + 88) = v31;
  *(void *)(a1 + 96) = v32;
  long long v22 = *(_OWORD *)(a1 + 104);
  *(void *)(a1 + 104) = v33;
  *(void *)(a1 + 112) = v34;
  long long v23 = *(_OWORD *)(a1 + 120);
  *(void *)(a1 + 120) = v35;
  *(void *)(a1 + 128) = v36;
  long long v24 = *(_OWORD *)(a1 + 136);
  *(void *)(a1 + 136) = v37;
  *(void *)(a1 + 144) = v38;
  uint64_t v25 = *(void *)(a1 + 152);
  uint64_t v26 = *(void *)(a1 + 160);
  *(void *)(a1 + 152) = v39;
  *(void *)(a1 + 160) = v40;
  __int16 v27 = *(_WORD *)(a1 + 168);
  *(_WORD *)(a1 + 168) = v41;
  sub_24F79138C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    v26,
    v27);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  return a1;
}

void *initializeWithTake for SQLCTE(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xABuLL);
}

uint64_t assignWithTake for SQLCTE(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __int16 v4 = *(_WORD *)(a2 + 168);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 72);
  long long v14 = *(_OWORD *)(a1 + 88);
  long long v15 = *(_OWORD *)(a1 + 104);
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v17 = *(_OWORD *)(a1 + 136);
  uint64_t v18 = *(void *)(a1 + 152);
  uint64_t v19 = *(void *)(a1 + 160);
  __int16 v20 = *(_WORD *)(a1 + 168);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_WORD *)(a1 + 168) = v4;
  sub_24F79138C(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    v19,
    v20);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLCTE(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 171))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *(void *)(a1 + 72) >> 1;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for SQLCTE(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 170) = 0;
    *(_WORD *)(a1 + 168) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 171) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 8) = 0u;
      *(void *)(a1 + 72) = 2 * -a2;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 154) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 171) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLCTE()
{
  return &type metadata for SQLCTE;
}

void sub_24F8511E4()
{
  sub_24F76FF94();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    uint64_t v6 = v1;
    uint64_t v70 = MEMORY[0x263F8EE78];
    sub_24F7956DC();
    uint64_t v7 = v6 + 32;
    for (uint64_t i = v5 - 1; ; --i)
    {
      sub_24F76C344(v7, (uint64_t)v68);
      sub_24F76C344((uint64_t)v68, (uint64_t)v69);
      switch(sub_24F76C840((uint64_t)v69))
      {
        case 1u:
          sub_24F76C650((uint64_t)v69);
          sub_24F76C344((uint64_t)v68, (uint64_t)__dst);
          uint64_t v9 = sub_24F76C650((uint64_t)__dst);
          sub_24F795C9C(v9);
          goto LABEL_6;
        case 2u:
          uint64_t v11 = (const void *)sub_24F76C650((uint64_t)v69);
          sub_24F77EA5C(v11);
          sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
          sub_24F814C38(v4);
          sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
          memcpy(__dst, __src, 0xA3uLL);
          sub_24F766784(__dst);
          goto LABEL_26;
        case 3u:
          uint64_t v12 = (void *)sub_24F76C650((uint64_t)v69);
          sub_24F7997BC((uint64_t)v12, (uint64_t)__dst);
          switch(sub_24F799818((uint64_t)__dst))
          {
            case 1u:
              long long v15 = (const void *)sub_24F799910((uint64_t)__dst);
              memcpy(__src, v15, 0xA3uLL);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F814C38(v4);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              memcpy(v63, v62, 0xA3uLL);
              sub_24F799920(v63);
              sub_24F7997BC((uint64_t)v63, (uint64_t)__src);
              break;
            case 2u:
              long long v16 = (void *)sub_24F799910((uint64_t)__dst);
              uint64_t v17 = v2;
              uint64_t v19 = v16[21];
              uint64_t v18 = v16[22];
              memcpy(__src, v16, 0xA3uLL);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F8533B0(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F795A3C);
              sub_24F814C38(v4);
              sub_24F799868((uint64_t)v16);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              memcpy(v62, v60, 0xA8uLL);
              v62[21] = v19;
              v62[22] = v18;
              uint64_t v2 = v17;
              sub_24F7998DC(v62);
              goto LABEL_15;
            case 3u:
              uint64_t v20 = *(void *)sub_24F799910((uint64_t)__dst);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F77B9E4();
              swift_retain();
              sub_24F8511E4(v20, v4, &v61);
              sub_24F76BAC4();
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              sub_24F77B9E4();
              v62[0] = v20;
              sub_24F799834(v62);
LABEL_15:
              sub_24F7997BC((uint64_t)v62, (uint64_t)v63);
              goto LABEL_17;
            case 4u:
              v62[0] = v4;
              sub_24F799954(v62);
              sub_24F7997BC((uint64_t)v62, (uint64_t)v63);
              swift_retain();
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
LABEL_17:
              memcpy(__src, v63, sizeof(__src));
              break;
            default:
              sub_24F799910((uint64_t)__dst);
              sub_24F7997BC((uint64_t)v12, (uint64_t)v63);
              sub_24F799910((uint64_t)v63);
              memcpy(__src, v12, sizeof(__src));
              swift_retain();
              break;
          }
          memcpy(v63, __src, sizeof(v63));
          sub_24F794DAC(v63);
          uint64_t v10 = v63;
          break;
        case 4u:
          uint64_t v13 = sub_24F76C650((uint64_t)v69);
          sub_24F808CB0(v13, (uint64_t)__src);
          switch(sub_24F808D0C((uint64_t)__src))
          {
            case 1u:
              long long v21 = (const void *)sub_24F808DF4((uint64_t)__src);
              sub_24F77EA5C(v21);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F77112C();
              int v22 = sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              sub_24F780934(v22, v23, v24, v25, v26, v27, v28, v29, v59, v60[0], v60[1], v60[2], v60[3], v60[4], v60[5], v60[6], v60[7], v60[8], v60[9],
                v60[10],
                v60[11],
                v60[12],
                v60[13],
                v60[14],
                v60[15],
                v60[16],
                v60[17],
                v60[18],
                v60[19],
                v60[20],
                v61,
                v62[0]);
              sub_24F808DB0((uint64_t)v62);
              goto LABEL_24;
            case 2u:
              uint64_t v30 = (const void *)sub_24F808DF4((uint64_t)__src);
              sub_24F77EA5C(v30);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F77112C();
              int v31 = sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              sub_24F780934(v31, v32, v33, v34, v35, v36, v37, v38, v59, v60[0], v60[1], v60[2], v60[3], v60[4], v60[5], v60[6], v60[7], v60[8], v60[9],
                v60[10],
                v60[11],
                v60[12],
                v60[13],
                v60[14],
                v60[15],
                v60[16],
                v60[17],
                v60[18],
                v60[19],
                v60[20],
                v61,
                v62[0]);
              sub_24F808E20((uint64_t)v62);
              goto LABEL_24;
            case 3u:
              uint64_t v39 = (const void *)sub_24F808DF4((uint64_t)__src);
              sub_24F77EA5C(v39);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F77112C();
              int v40 = sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              sub_24F780934(v40, v41, v42, v43, v44, v45, v46, v47, v59, v60[0], v60[1], v60[2], v60[3], v60[4], v60[5], v60[6], v60[7], v60[8], v60[9],
                v60[10],
                v60[11],
                v60[12],
                v60[13],
                v60[14],
                v60[15],
                v60[16],
                v60[17],
                v60[18],
                v60[19],
                v60[20],
                v61,
                v62[0]);
              sub_24F808D20((uint64_t)v62);
              goto LABEL_24;
            case 4u:
              v48 = (const void *)sub_24F808DF4((uint64_t)__src);
              sub_24F77EA5C(v48);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F77112C();
              int v49 = sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              sub_24F780934(v49, v50, v51, v52, v53, v54, v55, v56, v59, v60[0], v60[1], v60[2], v60[3], v60[4], v60[5], v60[6], v60[7], v60[8], v60[9],
                v60[10],
                v60[11],
                v60[12],
                v60[13],
                v60[14],
                v60[15],
                v60[16],
                v60[17],
                v60[18],
                v60[19],
                v60[20],
                v61,
                v62[0]);
              sub_24F808D6C((uint64_t)v62);
              goto LABEL_24;
            case 5u:
              uint64_t v57 = *(void *)sub_24F808DF4((uint64_t)__src);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F77B9E4();
              swift_retain();
              sub_24F8511E4(v57, v4, v66);
              sub_24F76BAC4();
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              sub_24F77B9E4();
              v62[0] = v57;
              sub_24F8095BC((uint64_t)v62);
LABEL_24:
              sub_24F808CB0((uint64_t)v62, (uint64_t)__dst);
              memcpy(v63, __dst, 0xA3uLL);
              break;
            default:
              long long v14 = (const void *)sub_24F808DF4((uint64_t)__src);
              sub_24F77EA5C(v14);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C660);
              sub_24F814C38(v4);
              sub_24F8533B0(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F76C470);
              memcpy(__dst, v62, 0xA3uLL);
              sub_24F809608((uint64_t)__dst);
              sub_24F808CB0((uint64_t)__dst, (uint64_t)v63);
              break;
          }
          memcpy(__dst, v63, 0xA3uLL);
          sub_24F794DF8(__dst);
LABEL_26:
          uint64_t v10 = __dst;
          break;
        default:
          sub_24F76C650((uint64_t)v69);
          sub_24F76C344((uint64_t)v68, (uint64_t)__dst);
          sub_24F76C650((uint64_t)__dst);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_6:
          uint64_t v10 = v68;
          break;
      }
      sub_24F76C344((uint64_t)v10, (uint64_t)v67);
      unint64_t v58 = *(void *)(v70 + 16);
      if (v58 >= *(void *)(v70 + 24) >> 1) {
        sub_24F7956DC();
      }
      *(void *)(v70 + 16) = v58 + 1;
      sub_24F76C344((uint64_t)v67, v70 + 184 * v58 + 32);
      if (!i) {
        break;
      }
      v7 += 184;
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  sub_24F77BC10();
}

uint64_t sub_24F8519C4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_24F795850();
    uint64_t v7 = v30;
    uint64_t v8 = (void *)(a1 + 32);
    for (uint64_t i = v5 - 1; ; --i)
    {
      uint64_t v10 = v8[3];
      uint64_t v11 = v8[4];
      sub_24F7811D0(v8, v10);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(__src, v10, v11);
      memcpy(__dst, __src, sizeof(__dst));
      sub_24F7997BC((uint64_t)__dst, (uint64_t)v29);
      switch(sub_24F799818((uint64_t)v29))
      {
        case 1u:
          uint64_t v13 = (const void *)sub_24F799910((uint64_t)v29);
          memcpy(v25, v13, 0xA3uLL);
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F795A3C);
          sub_24F814C38(a2, v24);
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
          memcpy(v25, v24, 0xA3uLL);
          sub_24F799920(v25);
          sub_24F7997BC((uint64_t)v25, (uint64_t)v27);
          goto LABEL_12;
        case 2u:
          long long v14 = (void *)sub_24F799910((uint64_t)v29);
          uint64_t v15 = v3;
          uint64_t v17 = v14[21];
          uint64_t v16 = v14[22];
          memcpy(v25, v14, 0xA3uLL);
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F795A3C);
          sub_24F814C38(a2, v23);
          sub_24F799868((uint64_t)v14);
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
          memcpy(v24, v23, 0xA8uLL);
          v24[21] = v17;
          v24[22] = v16;
          uint64_t v3 = v15;
          sub_24F7998DC(v24);
          goto LABEL_8;
        case 3u:
          sub_24F799910((uint64_t)v29);
          swift_retain();
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F795A3C);
          sub_24F8511E4();
          uint64_t v19 = v18;
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
          v24[0] = v19;
          sub_24F799834(v24);
LABEL_8:
          sub_24F7997BC((uint64_t)v24, (uint64_t)v25);
          goto LABEL_10;
        case 4u:
          v24[0] = a2;
          sub_24F799954(v24);
          sub_24F7997BC((uint64_t)v24, (uint64_t)v25);
          swift_retain();
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
LABEL_10:
          uint64_t v12 = v25;
          break;
        default:
          sub_24F799910((uint64_t)v29);
          uint64_t v12 = __dst;
          break;
      }
      memcpy(v27, v12, sizeof(v27));
LABEL_12:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24F795850();
        uint64_t v7 = v30;
      }
      unint64_t v21 = *(void *)(v7 + 16);
      if (v21 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F795850();
        uint64_t v7 = v30;
      }
      *(void *)(v7 + 16) = v21 + 1;
      memcpy((void *)(v7 + 184 * v21 + 32), v27, 0xB8uLL);
      if (!i) {
        break;
      }
      v8 += 5;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

unint64_t static TableRecord.databaseTableName.getter()
{
  return sub_24F851E2C();
}

double sub_24F851DC8()
{
  return static TableRecord.databaseSelection.getter();
}

double static TableRecord.databaseSelection.getter()
{
  sub_24F781274(&qword_26B1F7600);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_24F8DDBF0;
  *(void *)(v0 + 56) = &type metadata for AllColumns;
  *(void *)(v0 + 64) = &protocol witness table for AllColumns;
  return result;
}

unint64_t sub_24F851E2C()
{
  if (qword_269A2A350 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_269A2BB68;
  sub_24F8D0020();
  uint64_t v1 = (void *)sub_24F8CED70();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    uint64_t v3 = sub_24F8CED80();

    return v3;
  }
  sub_24F8D0020();
  strcpy((char *)v29, "(.)\\b.*$");
  BYTE1(v29[1]) = 0;
  WORD1(v29[1]) = 0;
  HIDWORD(v29[1]) = -402653184;
  uint64_t v27 = 12580;
  unint64_t v28 = 0xE200000000000000;
  unint64_t v4 = sub_24F7B0E7C();
  uint64_t v5 = MEMORY[0x263F8D310];
  uint64_t v3 = sub_24F77B634((uint64_t)v29, (uint64_t)&v27);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  unint64_t v25 = v3;
  unint64_t v26 = v7;
  strcpy((char *)v29, "^([A-Z]+).*$");
  BYTE5(v29[1]) = 0;
  HIWORD(v29[1]) = -5120;
  uint64_t v27 = 12580;
  unint64_t v28 = 0xE200000000000000;
  unint64_t v23 = v4;
  unint64_t v24 = v4;
  uint64_t v21 = v5;
  unint64_t v22 = v4;
  sub_24F77B634((uint64_t)v29, (uint64_t)&v27);
  uint64_t v8 = sub_24F8CEE60();
  if (sub_24F8CEE60() == v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_24F8CED00();
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v18 = (void *)qword_269A2BB68;
    uint64_t v19 = (void *)sub_24F8CED70();
    sub_24F8D0020();
    uint64_t v20 = (void *)sub_24F8CED70();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setObject_forKey_, v19, v20, v21, v22, v23, v24, v25, v26);

    return v3;
  }
  if (v8 == 1)
  {
    uint64_t v9 = sub_24F8CED00();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    unint64_t v12 = sub_24F8586C4(1uLL, v3, v7);
    v29[0] = v9;
LABEL_13:
    v29[1] = v11;
    unint64_t v25 = v12;
    unint64_t v26 = v13;
    sub_24F830AA8();
    swift_bridgeObjectRetain();
    sub_24F8CEEA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v29[0];
    goto LABEL_14;
  }
  if (!v8) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  sub_24F8904D4(1);
  uint64_t v14 = sub_24F8CF620();
  uint64_t v11 = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_24F8CEE60();
  swift_bridgeObjectRelease();
  unint64_t result = v16 - 1;
  if (!__OFSUB__(v16, 1))
  {
    unint64_t v12 = sub_24F8586C4(result, v3, v7);
    v29[0] = v14;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t static TableRecord.fetchCount(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F852548(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))QueryInterfaceRequest.fetchCount(_:));
}

void static TableRecord.numberOfSelectedColumns(_:)()
{
  sub_24F76FF94();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v3, v1);
  uint64_t v9 = v8;
  type metadata accessor for TableAlias();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 40) = 0;
  *(unsigned char *)(v10 + 48) = 1;
  type metadata accessor for StatementArgumentsSink();
  swift_allocObject();
  swift_retain();
  uint64_t v11 = sub_24F778A30(0);
  unint64_t v12 = MEMORY[0x263F8EE78];
  sub_24F778B08();
  type metadata accessor for SQLGenerationContext();
  swift_initStackObject();
  sub_24F779224(v6, v11, v12);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v4, v2);
  swift_retain();
  uint64_t v14 = sub_24F8519C4(v13, (void *)v10);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    memcpy(__dst, (const void *)(v14 + 32), sizeof(__dst));
    uint64_t v16 = 0;
    uint64_t v17 = v15 - 1;
    uint64_t v18 = 216;
    while (1)
    {
      sub_24F7997BC((uint64_t)__dst, (uint64_t)v26);
      switch(sub_24F799818((uint64_t)v26))
      {
        case 1u:
        case 2u:
          sub_24F799910((uint64_t)v26);
          uint64_t v19 = 1;
          goto LABEL_7;
        case 3u:
          goto LABEL_16;
        case 4u:
          goto LABEL_17;
        default:
          sub_24F799910((uint64_t)v26);
          sub_24F7997BC((uint64_t)__dst, (uint64_t)v24);
          sub_24F799910((uint64_t)v24);
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F795A3C);
          swift_retain();
          uint64_t v20 = sub_24F829718();
          uint64_t v22 = sub_24F828FAC(v20, v21);
          if (v0)
          {
            swift_bridgeObjectRelease();
            sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
            sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            goto LABEL_13;
          }
          uint64_t v19 = v22;
          swift_bridgeObjectRelease();
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
          sub_24F8533B0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24F799458);
LABEL_7:
          BOOL v23 = __OFADD__(v16, v19);
          v16 += v19;
          if (v23)
          {
            __break(1u);
LABEL_16:
            sub_24F799910((uint64_t)v26);
LABEL_17:
            sub_24F8CF9D0();
            __break(1u);
            JUMPOUT(0x24F852508);
          }
          if (!v17)
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            goto LABEL_12;
          }
          memcpy(__dst, (const void *)(v14 + v18), sizeof(__dst));
          v18 += 184;
          --v17;
          break;
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_12:
  swift_release();
LABEL_13:
  sub_24F77BC10();
}

uint64_t static TableRecord.deleteAll(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F852548(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))QueryInterfaceRequest.deleteAll(_:));
}

uint64_t sub_24F852548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  int v6 = static TableRecord.all()(a2, a3, v38);
  sub_24F773884(v6, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38[0]);
  uint64_t v14 = sub_24F77B464();
  uint64_t v15 = a4(a1, v14);
  sub_24F7920F8(v38);
  return v15;
}

void static TableRecord.exists<A>(_:key:)()
{
  sub_24F76FF94();
  v18[0] = v0;
  v18[1] = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v18 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))((char *)v18 - v16, v11, v7);
  sub_24F7771BC((uint64_t)v17, 0, 1, v7);
  static TableRecord.filter<A>(key:)(v20, v17, v9, v7, v5, v3);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v12);
  sub_24F77729C(v21);
  sub_24F77729C(&v19);
  type metadata accessor for QueryInterfaceRequest();
  QueryInterfaceRequest.isEmpty(_:)();
  sub_24F7920F8(v21);
  sub_24F77BC10();
}

uint64_t static TableRecord<>.exists(_:id:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_24F77F078(a1, a2);
  int v3 = static TableRecord<>.filter(id:)(v2);
  sub_24F773884(v3, v4, v5, v6, v7, v8, v9, v10, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38, v40,
    v42,
    v44,
    v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62);
  sub_24F77ACF8();
  uint64_t v11 = sub_24F7813B0();
  sub_24F775CEC(v11, v12, v13, v14, v15, v16, v17, v18, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39, v41,
    v43,
    v45,
    v47,
    v49,
    v51,
    v53,
    v55,
    v57,
    v59,
    v61,
    v63);
  return sub_24F77ADF0();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  uint64_t v2 = sub_24F77F078(a1, a2);
  int v9 = static TableRecord<>.filter(id:)(v2, v3, v4, v5, v6, v7, v7, v8);
  sub_24F773884(v9, v10, v11, v12, v13, v14, v15, v16, v26, v28, v30, v32, v34, v36, v38, v40, v42, v44, v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62,
    v64,
    v66,
    v68);
  sub_24F77ACF8();
  uint64_t v17 = sub_24F7813B0();
  sub_24F775CEC(v17, v18, v19, v20, v21, v22, v23, v24, v27, v29, v31, v33, v35, v37, v39, v41, v43, v45, v47,
    v49,
    v51,
    v53,
    v55,
    v57,
    v59,
    v61,
    v63,
    v65,
    v67,
    v69);
  return sub_24F77ADF0();
}

uint64_t static TableRecord.exists(_:key:)(uint64_t a1, uint64_t a2)
{
  sub_24F77DB64(a1, a2);
  int v2 = static TableRecord.filter(key:)();
  sub_24F773884(v2, v3, v4, v5, v6, v7, v8, v9, v19, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39,
    v41,
    v43,
    v45,
    v47,
    v49,
    v51,
    v53,
    v55,
    v57,
    v59,
    v61);
  sub_24F77ACF8();
  uint64_t v10 = sub_24F7813B0();
  sub_24F775CEC(v10, v11, v12, v13, v14, v15, v16, v17, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38, v40,
    v42,
    v44,
    v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62);
  return sub_24F77ADF0();
}

void static TableRecord.deleteAll<A>(_:keys:)()
{
  sub_24F76FF94();
  uint64_t v11 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_24F77AD10();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24F8CF1D0();
  v13[0] = v8;
  uint64_t v9 = sub_24F8CF1B0();
  swift_getWitnessTable();
  if (sub_24F8CF410())
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13[0] = v8;
    swift_getWitnessTable();
    static TableRecord.filter<A>(keys:)((uint64_t)v13, v4, v9, v2);
    swift_bridgeObjectRelease();
    sub_24F77729C(v13);
    sub_24F77729C(&v12);
    type metadata accessor for QueryInterfaceRequest();
    QueryInterfaceRequest.deleteAll(_:)();
    sub_24F7920F8(v13);
  }
  sub_24F77BC10();
}

void static TableRecord.deleteOne<A>(_:key:)()
{
  sub_24F76FF94();
  v20[2] = v1;
  uint64_t v21 = v0;
  v20[0] = v2;
  v20[1] = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v20 - v12;
  sub_24F77AD10();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v7, v8);
  if (sub_24F777048((uint64_t)v13, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v5);
    sub_24F8414D0(v5, v5);
    swift_allocObject();
    sub_24F8CF0C0();
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v19, v18, v5);
    sub_24F83CD04();
    sub_24F8CF1B0();
    swift_getWitnessTable();
    static TableRecord.deleteAll<A>(_:keys:)();
    sub_24F76BAC4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v5);
  }
  sub_24F77BC10();
}

uint64_t static TableRecord<>.deleteAll<A>(_:ids:)(uint64_t a1)
{
  if (sub_24F77FFC8(a1)) {
    return 0;
  }
  uint64_t v2 = sub_24F7830E0();
  static TableRecord<>.filter<A>(ids:)(v2, v3, v4, v5);
  memcpy(__dst, __src, sizeof(__dst));
  sub_24F77B464();
  uint64_t v1 = sub_24F77C7F4();
  sub_24F7920F8(__src);
  return v1;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned char __dst[162];
  void __src[22];

  if (sub_24F77FFC8(a1)) {
    return 0;
  }
  uint64_t v2 = sub_24F7830E0();
  static TableRecord<>.filter<A>(ids:)(v2, v3, v4, v5, v6, v7);
  memcpy(__dst, __src, sizeof(__dst));
  sub_24F77B464();
  uint64_t v1 = sub_24F77C7F4();
  sub_24F7920F8(__src);
  return v1;
}

BOOL static TableRecord<>.deleteOne(_:id:)(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F8414D0(AssociatedTypeWitness, AssociatedTypeWitness);
  sub_24F773C9C();
  uint64_t v6 = v5;
  sub_24F77D720();
  sub_24F8CF0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, a2, AssociatedTypeWitness);
  sub_24F83CD04();
  sub_24F8CF1B0();
  swift_getWitnessTable();
  uint64_t v8 = static TableRecord<>.deleteAll<A>(_:ids:)(a1);
  swift_bridgeObjectRelease();
  return v8 > 0;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F8414D0(AssociatedTypeWitness, AssociatedTypeWitness);
  sub_24F773C9C();
  uint64_t v6 = v5;
  sub_24F77D720();
  sub_24F8CF0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, a2, AssociatedTypeWitness);
  sub_24F83CD04();
  sub_24F8CF1B0();
  swift_getWitnessTable();
  uint64_t v8 = static TableRecord<>.deleteAll<A>(_:ids:)(a1);
  swift_bridgeObjectRelease();
  return v8 > 0;
}

uint64_t *static TableRecord.deleteAll(_:keys:)(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_24F77DB64(a1, a2);
  int v2 = static TableRecord.filter(keys:)();
  sub_24F773884(v2, v3, v4, v5, v6, v7, v8, v9, v12[0], v12[1], v12[2], v12[3], v12[4], v12[5], v12[6], v12[7], v12[8], v12[9], v12[10],
    v12[11],
    v12[12],
    v12[13],
    v12[14],
    v12[15],
    v12[16],
    v12[17],
    v12[18],
    v12[19],
    v12[20],
    v13[0]);
  sub_24F77B464();
  uint64_t v10 = v12;
  QueryInterfaceRequest.deleteAll(_:)();
  sub_24F76BAC4();
  sub_24F7920F8(v13);
  return v10;
}

BOOL static TableRecord.deleteOne(_:key:)(uint64_t a1, uint64_t a2)
{
  sub_24F781274(&qword_269A2AE50);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24F8DDBF0;
  *(void *)(v4 + 32) = a2;
  swift_bridgeObjectRetain();
  int v5 = static TableRecord.deleteAll(_:keys:)(a1, v4);
  swift_bridgeObjectRelease();
  return (uint64_t)v5 > 0;
}

uint64_t static TableRecord.updateAll(_:onConflict:_:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v7 = *a2;
  int v8 = static TableRecord.all()(a4, a5, v40);
  sub_24F773884(v8, v9, v10, v11, v12, v13, v14, v15, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40[0]);
  unsigned __int8 v41 = v7;
  uint64_t v16 = sub_24F77ACF8();
  uint64_t v17 = QueryInterfaceRequest.updateAll(_:onConflict:_:)(a1, &v41, a3, v16);
  sub_24F7920F8(v40);
  return v17;
}

uint64_t static TableRecord.updateAll(_:onConflict:_:_:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v13 = *a2;
  sub_24F781274(qword_26B1F51A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
  sub_24F7AC534(a3, inited + 32);
  swift_bridgeObjectRetain();
  sub_24F79318C();
  uint64_t v11 = static TableRecord.updateAll(_:onConflict:_:)(a1, &v13, inited, a5, a6);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_24F853354()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  qword_269A2BB68 = (uint64_t)result;
  return result;
}

uint64_t dispatch thunk of static TableRecord.databaseTableName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static TableRecord.databaseSelection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void *sub_24F8533B0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

GRDBInternal::FTS4 __swiftcall FTS4.init()()
{
  *uint64_t v0 = 879981670;
  v0[1] = 0xE400000000000000;
  return result;
}

uint64_t FTS4.moduleName.getter()
{
  return sub_24F76B8E8();
}

double FTS4.makeTableDefinition(configuration:)(char *a1)
{
  char v1 = *a1;
  type metadata accessor for FTS4TableDefinition();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 24) = v3;
  *(unsigned char *)(v2 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(unsigned char *)(v2 + 16) = v1;
  return result;
}

uint64_t type metadata accessor for FTS4TableDefinition()
{
  return self;
}

uint64_t FTS4.moduleArguments(for:in:)(uint64_t *a1)
{
  sub_24F773614();
  unint64_t v4 = a1[3];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24F8CF9E0();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    if (v5 >= 1)
    {
      uint64_t v7 = 0;
      while (1)
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x253364060](v7, v4);
        }
        else
        {
          uint64_t v8 = *(void *)(v4 + 8 * v7 + 32);
          swift_retain();
        }
        if (*(unsigned char *)(v8 + 33) == 1)
        {
          strcpy((char *)v68, "languageid=\"");
          BYTE5(v68[1]) = 0;
          HIWORD(v68[1]) = -5120;
          swift_bridgeObjectRetain();
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          sub_24F7738B4();
          uint64_t v10 = v68[0];
          uint64_t v9 = v68[1];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24F77F754();
            uint64_t v6 = v11;
          }
        }
        else
        {
          uint64_t v13 = *(void *)(v8 + 16);
          uint64_t v12 = *(void *)(v8 + 24);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24F77F754();
            uint64_t v6 = v19;
          }
          unint64_t v14 = *(void *)(v6 + 16);
          if (v14 >= *(void *)(v6 + 24) >> 1)
          {
            sub_24F780008();
            uint64_t v6 = v20;
          }
          *(void *)(v6 + 16) = v14 + 1;
          uint64_t v15 = v6 + 16 * v14;
          *(void *)(v15 + 32) = v13;
          *(void *)(v15 + 40) = v12;
          if (*(unsigned char *)(v8 + 32)) {
            goto LABEL_21;
          }
          strcpy((char *)v68, "notindexed=");
          HIDWORD(v68[1]) = -352321536;
          swift_bridgeObjectRetain();
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          uint64_t v10 = v68[0];
          uint64_t v9 = v68[1];
        }
        unint64_t v16 = *(void *)(v6 + 16);
        if (v16 >= *(void *)(v6 + 24) >> 1)
        {
          sub_24F780008();
          uint64_t v6 = v18;
        }
        *(void *)(v6 + 16) = v16 + 1;
        uint64_t v17 = v6 + 16 * v16;
        *(void *)(v17 + 32) = v10;
        *(void *)(v17 + 40) = v9;
LABEL_21:
        ++v7;
        swift_release();
        if (v5 == v7) {
          goto LABEL_22;
        }
      }
    }
    __break(1u);
LABEL_78:
    sub_24F77F754();
    uint64_t v6 = v49;
    goto LABEL_34;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v2 = a1;
  sub_24F773614();
  uint64_t v21 = a1[8];
  if (!v21) {
    goto LABEL_37;
  }
  uint64_t v5 = a1[7];
  uint64_t v22 = a1[9];
  if (*(void *)(v22 + 16))
  {
    sub_24F77D8A4();
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    unint64_t v23 = v67;
    uint64_t v61 = v66;
    uint64_t v24 = *(void *)(v22 + 16);
    if (v24)
    {
      unint64_t v59 = v67;
      uint64_t v60 = v21;
      uint64_t v64 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_24F77C4AC();
      uint64_t v25 = v64;
      uint64_t v26 = v22 + 40;
      do
      {
        uint64_t v66 = 34;
        unint64_t v67 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        sub_24F7738B4();
        swift_bridgeObjectRelease();
        uint64_t v64 = v25;
        unint64_t v27 = *(void *)(v25 + 16);
        if (v27 >= *(void *)(v25 + 24) >> 1)
        {
          sub_24F77C4AC();
          uint64_t v25 = v64;
        }
        v26 += 16;
        *(void *)(v25 + 16) = v27 + 1;
        uint64_t v28 = v25 + 16 * v27;
        *(void *)(v28 + 32) = 34;
        *(void *)(v28 + 40) = 0xE100000000000000;
        --v24;
      }
      while (v24);
      sub_24F827D64(v5, v60);
      swift_bridgeObjectRelease();
      uint64_t v2 = a1;
      unint64_t v23 = v59;
    }
    else
    {
      sub_24F827D64(v5, v21);
      uint64_t v25 = MEMORY[0x263F8EE78];
    }
    uint64_t v66 = v25;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    a1 = &v66;
    sub_24F8CED30();
    uint64_t v5 = v29;
    swift_bridgeObjectRelease();
    uint64_t v66 = v61;
    unint64_t v67 = v23;
    swift_bridgeObjectRetain();
    sub_24F77B9FC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24F77D8A4();
    swift_bridgeObjectRetain();
    a1 = &v66;
    sub_24F8CEEB0();
    sub_24F827D64(v5, v21);
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = v66;
  unint64_t v1 = v67;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_78;
  }
LABEL_34:
  sub_24F783108();
  if (v30)
  {
    sub_24F780008();
    uint64_t v6 = v50;
  }
  *(void *)(v6 + 16) = a1;
  uint64_t v31 = v6 + 16 * v5;
  *(void *)(v31 + 32) = v4;
  *(void *)(v31 + 40) = v1;
LABEL_37:
  uint64_t v32 = v2[5];
  if (*((unsigned char *)v2 + 48) == 1 || v32)
  {
    sub_24F782BD0();
    sub_24F855140();
    sub_24F77B9FC();
    sub_24F855148();
    sub_24F7738B4();
    uint64_t v34 = v66;
    unint64_t v33 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F77F754();
      uint64_t v6 = v47;
    }
    sub_24F783108();
    if (v30)
    {
      sub_24F780008();
      uint64_t v6 = v48;
    }
    *(void *)(v6 + 16) = &v66;
    uint64_t v35 = v6 + 16 * v32;
    *(void *)(v35 + 32) = v34;
    *(void *)(v35 + 40) = v33;
  }
  sub_24F773614();
  if (v2[11])
  {
    uint64_t v64 = 0x73736572706D6F63;
    unint64_t v65 = 0xEA0000000000223DLL;
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F7738B4();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F77F754();
      uint64_t v6 = v51;
    }
    sub_24F783108();
    if (v30)
    {
      sub_24F780008();
      uint64_t v6 = v52;
    }
    sub_24F7815C0();
  }
  sub_24F773614();
  if (v2[13])
  {
    strcpy((char *)v63, "uncompress=\"");
    HIBYTE(v63[6]) = 0;
    v63[7] = -5120;
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F7738B4();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F77F754();
      uint64_t v6 = v53;
    }
    sub_24F783108();
    if (v30)
    {
      sub_24F780008();
      uint64_t v6 = v54;
    }
    sub_24F7815C0();
  }
  sub_24F773614();
  if (v2[15])
  {
    v62[3] = 0x666E69686374616DLL;
    v62[4] = 0xEB00000000223D6FLL;
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F7738B4();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F77F754();
      uint64_t v6 = v55;
    }
    sub_24F783108();
    if (v30)
    {
      sub_24F780008();
      uint64_t v6 = v56;
    }
    sub_24F7815C0();
  }
  sub_24F773614();
  if (v2[16])
  {
    v62[1] = 0x223D786966657270;
    v62[2] = 0xE800000000000000;
    swift_bridgeObjectRetain_n();
    sub_24F794C98();
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    v62[0] = v37;
    sub_24F7CFDAC(v62);
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void *)(v62[0] + 16);
    if (v38)
    {
      v62[0] = MEMORY[0x263F8EE78];
      sub_24F77C4AC();
      uint64_t v39 = 0;
      uint64_t v40 = v62[0];
      do
      {
        uint64_t v41 = sub_24F8CFAE0();
        uint64_t v43 = v42;
        v62[0] = v40;
        unint64_t v44 = *(void *)(v40 + 16);
        if (v44 >= *(void *)(v40 + 24) >> 1)
        {
          sub_24F77C4AC();
          uint64_t v40 = v62[0];
        }
        ++v39;
        *(void *)(v40 + 16) = v44 + 1;
        uint64_t v45 = v40 + 16 * v44;
        *(void *)(v45 + 32) = v41;
        *(void *)(v45 + 40) = v43;
      }
      while (v38 != v39);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v40 = MEMORY[0x263F8EE78];
    }
    v62[0] = v40;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F7738B4();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F77F754();
      uint64_t v6 = v57;
    }
    sub_24F783108();
    if (v30)
    {
      sub_24F780008();
      uint64_t v6 = v58;
    }
    sub_24F7815C0();
  }
  return v6;
}

uint64_t FTS4.database(_:didCreate:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a4 + 48) == 1)
  {
    uint64_t v5 = *(void *)(a4 + 32);
    uint64_t v6 = *(void *)(a4 + 40);
    swift_bridgeObjectRetain();
    Database.primaryKey(_:)(v5, v6, &v28);
    if (v4)
    {
      return sub_24F855148();
    }
    else
    {
      if (v30)
      {
        if (v30 == 1) {
          unsigned __int8 v8 = 1;
        }
        else {
          unsigned __int8 v8 = 2;
        }
        sub_24F790830(v28, v29, v8);
        uint64_t v24 = 0x6469776F72;
        unint64_t v25 = 0xE500000000000000;
      }
      else
      {
        uint64_t v24 = v28;
        unint64_t v25 = v29;
      }
      uint64_t v28 = 34;
      uint64_t v29 = 0xE100000000000000;
      sub_24F8CEEB0();
      sub_24F7738B4();
      uint64_t v28 = 34;
      uint64_t v29 = 0xE100000000000000;
      sub_24F8CEEB0();
      sub_24F7738B4();
      sub_24F855148();
      swift_beginAccess();
      unint64_t v9 = swift_bridgeObjectRetain();
      sub_24F7CCAD0(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24F792AE8();
      sub_24F7922AC((uint64_t)&unk_270104AB8);
      swift_bridgeObjectRelease();
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      sub_24F781E34();
      swift_bridgeObjectRelease();
      sub_24F781274((uint64_t *)&unk_26B1F7C88);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
      *(void *)(inited + 32) = v24;
      *(void *)(inited + 40) = v25;
      v26[0] = inited;
      swift_bridgeObjectRetain();
      sub_24F792AE8();
      uint64_t v11 = *(void *)(v26[0] + 16);
      if (v11)
      {
        uint64_t v27 = MEMORY[0x263F8EE78];
        sub_24F77C4AC();
        uint64_t v12 = v27;
        uint64_t v13 = v26[0] + 40;
        do
        {
          v26[0] = 779576686;
          v26[1] = 0xE400000000000000;
          swift_bridgeObjectRetain();
          sub_24F8CEEB0();
          sub_24F7738B4();
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v27 = v12;
          unint64_t v14 = *(void *)(v12 + 16);
          if (v14 >= *(void *)(v12 + 24) >> 1)
          {
            sub_24F77C4AC();
            uint64_t v12 = v27;
          }
          v13 += 16;
          *(void *)(v12 + 16) = v14 + 1;
          uint64_t v15 = v12 + 16 * v14;
          *(void *)(v15 + 32) = 779576686;
          *(void *)(v15 + 40) = 0xE400000000000000;
          --v11;
        }
        while (v11);
      }
      swift_bridgeObjectRelease();
      sub_24F781E34();
      swift_bridgeObjectRelease();
      v26[0] = 778333295;
      v26[1] = 0xE400000000000000;
      sub_24F8CEEB0();
      sub_24F7738B4();
      swift_bridgeObjectRelease();
      sub_24F775D08();
      swift_bridgeObjectRelease();
      sub_24F8CF7D0();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F77DB78();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F7738B4();
      swift_bridgeObjectRelease();
      sub_24F775D08();
      swift_bridgeObjectRelease();
      sub_24F76B9BC();
      sub_24F8CEEB0();
      sub_24F8552F4();
      sub_24F8CEEB0();
      sub_24F77AFDC();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F77DB78();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F7738B4();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F76B9BC();
      sub_24F8CEEB0();
      sub_24F8552F4();
      sub_24F8CEEB0();
      sub_24F77AFDC();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F777400();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F77C814();
      sub_24F7738B4();
      swift_bridgeObjectRelease();
      sub_24F775D08();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F78592C();
      sub_24F8CEEB0();
      sub_24F77C0FC();
      sub_24F8CEEB0();
      sub_24F771148();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F777400();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F77C814();
      sub_24F7738B4();
      swift_bridgeObjectRelease();
      sub_24F775D08();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F78592C();
      sub_24F8CEEB0();
      sub_24F77C0FC();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F771148();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      v16._countAndFlagsBits = 0;
      uint64_t v17 = MEMORY[0x263F8EE80];
      uint64_t v18 = MEMORY[0x263F8EE78];
      v26[0] = MEMORY[0x263F8EE78];
      v26[1] = MEMORY[0x263F8EE80];
      v19.values._rawValue = v26;
      v16._object = (void *)0xE000000000000000;
      Database.execute(sql:arguments:)(v16, v19);
      swift_bridgeObjectRelease();
      if (!v20)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26[0] = 0;
        v26[1] = 0xE000000000000000;
        sub_24F8CF7D0();
        swift_bridgeObjectRelease();
        strcpy((char *)v26, "INSERT INTO ");
        BYTE5(v26[1]) = 0;
        HIWORD(v26[1]) = -5120;
        sub_24F8CEEB0();
        sub_24F77C0FC();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        v21._countAndFlagsBits = v26[0];
        uint64_t v22 = (void *)v26[1];
        v26[0] = v18;
        v26[1] = v17;
        v23.values._rawValue = v26;
        v21._object = v22;
        Database.execute(sql:arguments:)(v21, v23);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_24F854714()
{
}

void sub_24F854724(char *a1@<X0>, void *a2@<X8>)
{
  FTS4.makeTableDefinition(configuration:)(a1);
  *a2 = v3;
}

uint64_t sub_24F85474C(uint64_t **a1)
{
  return FTS4.moduleArguments(for:in:)(*a1);
}

uint64_t sub_24F854778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return FTS4.database(_:didCreate:using:)(a1, a2, a3, *a4);
}

uint64_t FTS4TableDefinition.tokenizer.getter@<X0>(uint64_t *a1@<X8>)
{
  sub_24F773614();
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return sub_24F827D20(v3, v4);
}

uint64_t FTS4TableDefinition.tokenizer.setter(long long *a1)
{
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  swift_beginAccess();
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  *(_OWORD *)(v1 + 7) = v6;
  v1[9] = v2;
  return sub_24F827D64(v3, v4);
}

uint64_t (*FTS4TableDefinition.tokenizer.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FTS4TableDefinition.content.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_24F855140();
  return v1;
}

uint64_t sub_24F8548BC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return FTS4TableDefinition.content.setter(v1, v2);
}

uint64_t FTS4TableDefinition.content.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  *(unsigned char *)(v2 + 48) = 0;
  return sub_24F855148();
}

uint64_t (*FTS4TableDefinition.content.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = FTS4TableDefinition.content.getter();
  a1[1] = v3;
  return sub_24F854960;
}

uint64_t sub_24F854960(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return FTS4TableDefinition.content.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  FTS4TableDefinition.content.setter(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t FTS4TableDefinition.compress.getter()
{
  return sub_24F76B8E8();
}

uint64_t FTS4TableDefinition.compress.setter(uint64_t a1, uint64_t a2)
{
  sub_24F775B58();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FTS4TableDefinition.compress.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FTS4TableDefinition.uncompress.getter()
{
  return sub_24F76B8E8();
}

uint64_t FTS4TableDefinition.uncompress.setter(uint64_t a1, uint64_t a2)
{
  sub_24F775B58();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FTS4TableDefinition.uncompress.modify())()
{
  return j__swift_endAccess;
}

uint64_t FTS4TableDefinition.matchinfo.getter()
{
  return sub_24F76B8E8();
}

uint64_t FTS4TableDefinition.matchinfo.setter(uint64_t a1, uint64_t a2)
{
  sub_24F775B58();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FTS4TableDefinition.matchinfo.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FTS4TableDefinition.prefixes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FTS4TableDefinition.prefixes.setter(uint64_t a1)
{
  sub_24F775B58();
  *(void *)(v1 + 128) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FTS4TableDefinition.prefixes.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FTS4TableDefinition.column(_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FTS4ColumnDefinition();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(_WORD *)(v5 + 32) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_retain();
  MEMORY[0x2533638D0](v6);
  sub_24F766F18(*(void *)((*(void *)(v2 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_24F8CF140();
  sub_24F8CF0B0();
  swift_endAccess();
  return v5;
}

Swift::Void __swiftcall FTS4TableDefinition.synchronize(withTable:)(Swift::String withTable)
{
  *(Swift::String *)(v1 + 32) = withTable;
  *(unsigned char *)(v1 + 48) = 1;
  sub_24F855148();
  swift_bridgeObjectRetain();
}

uint64_t FTS4TableDefinition.deinit()
{
  swift_bridgeObjectRelease();
  sub_24F855148();
  sub_24F827D64(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FTS4TableDefinition.__deallocating_deinit()
{
  FTS4TableDefinition.deinit();
  return MEMORY[0x270FA0228](v0, 136, 7);
}

uint64_t FTS4ColumnDefinition.notIndexed()()
{
  *(unsigned char *)(v0 + 32) = 0;
  return swift_retain();
}

uint64_t FTS4ColumnDefinition.asLanguageId()()
{
  *(unsigned char *)(v0 + 33) = 1;
  return swift_retain();
}

uint64_t FTS4ColumnDefinition.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FTS4ColumnDefinition.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 34, 7);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.dropFTS4SynchronizationTriggers(forTable:)(Swift::String forTable)
{
  sub_24F8CF7D0();
  sub_24F8CEEB0();
  sub_24F77F0A0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F7738B4();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F77BC68();
  sub_24F77F0A0();
  sub_24F8CEEB0();
  sub_24F780D28();
  sub_24F7738B4();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F77BC68();
  sub_24F77F0A0();
  sub_24F8CEEB0();
  sub_24F780D28();
  sub_24F7738B4();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F77BC68();
  sub_24F77F0A0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F7738B4();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  v1._countAndFlagsBits = 0;
  v3[0] = MEMORY[0x263F8EE78];
  v3[1] = MEMORY[0x263F8EE80];
  v2.values._rawValue = v3;
  v1._object = (void *)0xE000000000000000;
  Database.execute(sql:arguments:)(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_24F855140()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F855148()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FTS4ColumnDefinition()
{
  return self;
}

uint64_t sub_24F855174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FTS4TableDefinition.content.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for FTS4()
{
  return &type metadata for FTS4;
}

uint64_t method lookup function for FTS4TableDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FTS4TableDefinition);
}

uint64_t method lookup function for FTS4ColumnDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FTS4ColumnDefinition);
}

uint64_t destroy for FTS4TableDefinition.ContentMode()
{
  return sub_24F855148();
}

uint64_t _s12GRDBInternal19FTS4TableDefinitionC11ContentModeOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24F855140();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FTS4TableDefinition.ContentMode(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24F855140();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24F855148();
  return a1;
}

uint64_t assignWithTake for FTS4TableDefinition.ContentMode(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24F855148();
  return a1;
}

ValueMetadata *type metadata accessor for FTS4TableDefinition.ContentMode()
{
  return &type metadata for FTS4TableDefinition.ContentMode;
}

uint64_t sub_24F8552F4()
{
  return sub_24F8CEEB0();
}

uint64_t sub_24F855314()
{
  Swift::String v1 = *v0;
  v3[0] = 0;
  v3[1] = 0;
  char v4 = 4;
  return v1(v3);
}

uint64_t sub_24F85535C(char a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1 & 1;
  v4[1] = 0;
  char v5 = 0;
  return v2(v4);
}

uint64_t sub_24F8553A4(char a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1;
  v4[1] = 0;
  char v5 = 0;
  return v2(v4);
}

uint64_t sub_24F8553EC(__int16 a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1;
  v4[1] = 0;
  char v5 = 0;
  return v2(v4);
}

uint64_t sub_24F855434(int a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1;
  v4[1] = 0;
  char v5 = 0;
  return v2(v4);
}

uint64_t sub_24F85547C(uint64_t a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1;
  v4[1] = 0;
  char v5 = 0;
  return v2(v4);
}

uint64_t sub_24F8554C0(unsigned __int8 a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1;
  v4[1] = 0;
  char v5 = 0;
  return v2(v4);
}

uint64_t sub_24F855508(unsigned __int16 a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1;
  v4[1] = 0;
  char v5 = 0;
  return v2(v4);
}

uint64_t sub_24F855550(unsigned int a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1;
  v4[1] = 0;
  char v5 = 0;
  return v2(v4);
}

uint64_t sub_24F855598(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    GRDBInternal::StatementArguments v2 = *v1;
    v3[0] = result;
    v3[1] = 0;
    char v4 = 0;
    return v2(v3);
  }
  return result;
}

uint64_t sub_24F8555E8(float a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  v4[0] = a1;
  v4[1] = 0.0;
  char v5 = 1;
  return v2(v4);
}

uint64_t sub_24F855638(double a1)
{
  GRDBInternal::StatementArguments v2 = *v1;
  *(double *)char v4 = a1;
  v4[1] = 0;
  char v5 = 1;
  return v2(v4);
}

uint64_t sub_24F855684(uint64_t a1, uint64_t a2)
{
  char v3 = *v2;
  v5[0] = a1;
  v5[1] = a2;
  char v6 = 2;
  swift_bridgeObjectRetain();
  v3(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8556E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  sub_24F781274(&qword_26B1F7250);
  if (swift_dynamicCast())
  {
    sub_24F794DE0(&v20, (uint64_t)v23);
    unint64_t v9 = (void (*)(long long *))*v3;
    uint64_t v10 = v24;
    uint64_t v11 = v25;
    sub_24F7811D0(v23, v24);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 24))(&v20, v10, v11);
    long long v12 = v20;
    char v13 = v21;
    long long v18 = v20;
    char v19 = v21;
    v9(&v18);
    sub_24F781F10(v12, *((unint64_t *)&v12 + 1), v13);
    return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v23);
  }
  else
  {
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
    sub_24F7817A4((uint64_t)&v20);
    uint64_t v16 = *v3;
    uint64_t v15 = v3[1];
    type metadata accessor for DatabaseValueEncoder();
    swift_allocObject();
    swift_retain();
    sub_24F855A2C(v16, v15);
    sub_24F855BCC(a1, a2, a3);
    return swift_release();
  }
}

uint64_t sub_24F8558D4()
{
  return sub_24F7B33CC();
}

uint64_t sub_24F8558DC()
{
  return sub_24F855314();
}

uint64_t sub_24F8558F4(char a1)
{
  return sub_24F85535C(a1);
}

uint64_t sub_24F85590C(uint64_t a1, uint64_t a2)
{
  return sub_24F855684(a1, a2);
}

uint64_t sub_24F855924(double a1)
{
  return sub_24F855638(a1);
}

uint64_t sub_24F85593C(float a1)
{
  return sub_24F8555E8(a1);
}

uint64_t sub_24F855954(uint64_t a1)
{
  return sub_24F85547C(a1);
}

uint64_t sub_24F85596C(char a1)
{
  return sub_24F8553A4(a1);
}

uint64_t sub_24F855984(__int16 a1)
{
  return sub_24F8553EC(a1);
}

uint64_t sub_24F85599C(int a1)
{
  return sub_24F855434(a1);
}

uint64_t sub_24F8559B4(uint64_t a1)
{
  return sub_24F855598(a1);
}

uint64_t sub_24F8559CC(unsigned __int8 a1)
{
  return sub_24F8554C0(a1);
}

uint64_t sub_24F8559E4(unsigned __int16 a1)
{
  return sub_24F855508(a1);
}

uint64_t sub_24F8559FC(unsigned int a1)
{
  return sub_24F855550(a1);
}

uint64_t sub_24F855A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8556E8(a1, a2, a3);
}

uint64_t sub_24F855A2C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 32) = 0;
  sub_24F8CF970();
  *(void *)(v2 + 40) = sub_24F8CEC70();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_24F855A94()
{
  *(unsigned char *)(v0 + 32) = 1;
  nullsub_1(MEMORY[0x263F8EE78]);
  type metadata accessor for JSONRequiredEncoder.KeyedContainer();
  swift_getWitnessTable();
  return sub_24F8CFAB0();
}

unint64_t sub_24F855B2C@<X0>(void *a1@<X8>)
{
  *(unsigned char *)(v1 + 32) = 1;
  a1[3] = &type metadata for JSONRequiredEncoder;
  unint64_t result = sub_24F7B669C();
  a1[4] = result;
  *a1 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_24F855B74@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  a1[3] = &type metadata for DatabaseValueEncodingContainer;
  a1[4] = sub_24F856384();
  *a1 = v4;
  a1[1] = v3;
  return swift_retain();
}

void sub_24F855BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v32 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24F8CE550();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v38 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24F8CE5B0();
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v35 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24F8CE580();
  uint64_t v33 = *(void *)(v15 - 8);
  uint64_t v34 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24F8CE570();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  long long v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DatabaseValueEncoder();
  uint64_t v43 = v31;
  unint64_t v30 = sub_24F8563D0();
  unint64_t v44 = v30;
  v42[0] = v5;
  swift_retain();
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  sub_24F8CECE0();
  uint64_t v22 = v4;
  if (v4)
  {
    uint64_t v23 = v5;
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v42);
  }
  else
  {
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v42);
    if (*(unsigned char *)(v5 + 32) != 1) {
      return;
    }
    uint64_t v23 = v5;
    sub_24F7B66E8();
    uint64_t v22 = (void *)swift_allocError();
    swift_willThrow();
  }
  id v45 = v22;
  id v24 = v22;
  sub_24F781274(&qword_26B1F7040);
  if (swift_dynamicCast())
  {

    sub_24F8CE600();
    swift_allocObject();
    sub_24F8CE5F0();
    (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F06160], v18);
    sub_24F8CE590();
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v17, *MEMORY[0x263F06180], v34);
    sub_24F8CE5A0();
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F061B0], v37);
    sub_24F8CE5C0();
    sub_24F8CE540();
    sub_24F8CE560();
    uint64_t v25 = sub_24F8CE5D0();
    unint64_t v27 = v26;
    sub_24F8CEDC0();
    sub_24F8CEDA0();
    if (!v28)
    {
      __break(1u);
      return;
    }
    uint64_t v43 = v31;
    unint64_t v44 = v30;
    v42[0] = v23;
    swift_retain();
    sub_24F8CEEC0();
    sub_24F783E24(v25, v27);
    swift_bridgeObjectRelease();
    swift_release();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v42);
  }
}

uint64_t sub_24F856074()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24F85609C()
{
  uint64_t v0 = sub_24F856074();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_24F8560CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F8560D8()
{
  return sub_24F855A94();
}

unint64_t sub_24F8560FC@<X0>(void *a1@<X8>)
{
  return sub_24F855B2C(a1);
}

uint64_t sub_24F856120@<X0>(void *a1@<X8>)
{
  return sub_24F855B74(a1);
}

uint64_t DatabaseValueConvertible<>.databaseValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  *(unsigned char *)(v7 + 32) = -1;
  type metadata accessor for DatabaseValueEncoder();
  swift_allocObject();
  swift_retain();
  sub_24F855A2C((uint64_t)sub_24F856358, v7);
  sub_24F855BCC(v3, a1, a2);
  swift_release();
  swift_beginAccess();
  int v8 = *(unsigned __int8 *)(v7 + 32);
  if (v8 == 255)
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v10 = *(void *)(v7 + 16);
    unint64_t v9 = *(void *)(v7 + 24);
    sub_24F781F34(v10, v9, *(unsigned char *)(v7 + 32));
    uint64_t result = swift_release();
    *(void *)a3 = v10;
    *(void *)(a3 + 8) = v9;
    *(unsigned char *)(a3 + 16) = v8;
  }
  return result;
}

uint64_t sub_24F856284()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255) {
    sub_24F781F10(*(void *)(v0 + 16), *(void *)(v0 + 24), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_24F8562C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  char v8 = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a2 + 32) = v5;
  sub_24F781F34(v3, v4, v5);
  return sub_24F78D310(v6, v7, v8);
}

uint64_t sub_24F856358(uint64_t a1)
{
  return sub_24F8562C8(a1, v1);
}

uint64_t type metadata accessor for DatabaseValueEncoder()
{
  return self;
}

unint64_t sub_24F856384()
{
  unint64_t result = qword_269A2BB70;
  if (!qword_269A2BB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2BB70);
  }
  return result;
}

unint64_t sub_24F8563D0()
{
  unint64_t result = qword_269A2BB78;
  if (!qword_269A2BB78)
  {
    type metadata accessor for DatabaseValueEncoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2BB78);
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseValueEncodingContainer()
{
  return &type metadata for DatabaseValueEncodingContainer;
}

void static FTS5TokenizerDescriptor.ascii(separators:tokenCharacters:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for Configuration();
  sub_24F77DB94();
  MEMORY[0x270FA5388](v7);
  sub_24F773918();
  uint64_t v10 = &unk_270103528;
  if (*(void *)(a1 + 16))
  {
    sub_24F78002C();
    sub_24F77F778();
    *uint64_t v3 = 0;
    v3[1] = 0;
    swift_initStackObject();
    uint64_t v8 = sub_24F77BA18();
    MEMORY[0x270FA5388](v8);
    sub_24F856764();
    swift_release();
    uint64_t v3 = (void **)&v10;
    sub_24F792AE8();
  }
  if (*(void *)(a2 + 16))
  {
    sub_24F78002C();
    sub_24F77F778();
    *uint64_t v3 = 0;
    v3[1] = 0;
    swift_initStackObject();
    uint64_t v9 = sub_24F77BA18();
    MEMORY[0x270FA5388](v9);
    sub_24F7815D0();
    sub_24F856764();
    swift_release();
    sub_24F792AE8();
  }
  if (!v10[2])
  {
    sub_24F783118();
    sub_24F770EAC();
    sub_24F77E2B8();
    sub_24F77B65C();
  }
  *a3 = v10;
}

uint64_t sub_24F8565FC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SchedulingWatchdog();
  if (sub_24F7834B0())
  {
    uint64_t v4 = sub_24F783564(*(void *)(v2 + 16));
    if (v4)
    {
      sub_24F77F0C0();
      sub_24F770EAC();
      sub_24F77EA78();
      sub_24F77B65C();
    }
    MEMORY[0x270FA5388](v4);
    sub_24F8CF560();
    return swift_release();
  }
  else
  {
    MEMORY[0x270FA5388](0);
    sub_24F777418();
    *(void *)(v6 - 16) = a2;
    return sub_24F8CF560();
  }
}

uint64_t sub_24F856764()
{
  sub_24F771174();
  if (!sub_24F7834B0())
  {
    MEMORY[0x270FA5388](0);
    sub_24F781274(&qword_26B1F7F48);
    uint64_t result = sub_24F8CF560();
    if (v0) {
      return result;
    }
    return v4;
  }
  uint64_t v2 = sub_24F783564(*(void *)(v1 + 16));
  if (v2)
  {
    sub_24F77F0C0();
    sub_24F770EAC();
    sub_24F77EA78();
    sub_24F77B65C();
  }
  MEMORY[0x270FA5388](v2);
  sub_24F781274(&qword_26B1F7F48);
  sub_24F8CF560();
  uint64_t result = swift_release();
  if (!v0) {
    return v4;
  }
  return result;
}

uint64_t sub_24F8568E0()
{
  sub_24F771174();
  if (!sub_24F7834B0())
  {
    MEMORY[0x270FA5388](0);
    uint64_t result = sub_24F8CF560();
    if (v0) {
      return result;
    }
    return v7;
  }
  uint64_t v4 = sub_24F783564(*(void *)(v3 + 16));
  if (v4)
  {
    sub_24F77F0C0();
    sub_24F770EAC();
    sub_24F77EA78();
    sub_24F77B65C();
  }
  MEMORY[0x270FA5388](v4);
  sub_24F777418();
  *(void *)(v5 - 16) = v2;
  *(void *)(v5 - 8) = v1;
  sub_24F8CF560();
  uint64_t result = swift_release();
  if (!v0) {
    return v7;
  }
  return result;
}

uint64_t FTS5TokenizerDescriptor.components.getter()
{
  return swift_bridgeObjectRetain();
}

GRDBInternal::FTS5TokenizerDescriptor __swiftcall FTS5TokenizerDescriptor.init(components:)(GRDBInternal::FTS5TokenizerDescriptor components)
{
  if (*((void *)components.components._rawValue + 2))
  {
    v1->components._rawValue = components.components._rawValue;
  }
  else
  {
    sub_24F783118();
    sub_24F770EAC();
    components.components._rawValue = (void *)sub_24F77E2B8();
    __break(1u);
  }
  return components;
}

uint64_t sub_24F856A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  sub_24F781274((uint64_t *)&unk_26B1F7C88);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = (void *)v7;
  *(_OWORD *)(v7 + 16) = xmmword_24F8E0850;
  *(void *)(v7 + 32) = 0x6F74617261706573;
  *(void *)(v7 + 40) = 0xEA00000000007372;
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v34 = v3;
    uint64_t v35 = (void *)a3;
    uint64_t v36 = (void *)v7;
    uint64_t v37 = a2;
    __src[0] = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v10 = a2;
    uint64_t v11 = __src[0];
    uint64_t v4 = sub_24F8265A0(v10);
    uint64_t v13 = v12;
    int v15 = v14 & 1;
    uint64_t v39 = v10 + 56;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v10 + 32))
    {
      if (((*(void *)(v39 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v10 + 36) != v13) {
        goto LABEL_17;
      }
      int v44 = v15;
      uint64_t v16 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v4);
      uint64_t v17 = *v16;
      uint64_t v8 = (void *)v16[1];
      __src[0] = v11;
      a3 = *(void *)(v11 + 16);
      unint64_t v18 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (a3 >= v18 >> 1)
      {
        sub_24F77C4AC();
        uint64_t v10 = v37;
        uint64_t v11 = __src[0];
      }
      *(void *)(v11 + 16) = a3 + 1;
      uint64_t v19 = v11 + 16 * a3;
      *(void *)(v19 + 32) = v17;
      *(void *)(v19 + 40) = v8;
      uint64_t v20 = sub_24F8264B8(v4, v13, v44 & 1, v10);
      uint64_t v4 = v20;
      uint64_t v13 = v21;
      int v15 = v22 & 1;
      if (!--v9)
      {
        sub_24F7705C4(v20, v21, v15);
        a3 = (unint64_t)v35;
        uint64_t v8 = v36;
        uint64_t v4 = v34;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_12:
  __src[0] = v11;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  uint64_t v23 = sub_24F8CED30();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  v41[0] = v23;
  v41[1] = v25;
  char v42 = 2;
  sub_24F7667B8((uint64_t)v41);
  sub_24F76F710((uint64_t)v41, (uint64_t)__src);
  uint64_t v26 = qword_26B1F6F38;
  uint64_t v9 = a1;
  swift_retain();
  if (v26 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v27 = qword_26B1FAB18;
  swift_retain();
  unint64_t v28 = MEMORY[0x263F8EE78];
  sub_24F778B08();
  type metadata accessor for SQLGenerationContext();
  swift_allocObject();
  sub_24F779224(v9, v27, v28);
  memcpy(__dst, __src, sizeof(__dst));
  sub_24F76D734();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v8[2] = 0;
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v31 = v29;
    uint64_t v32 = v30;
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    v8[6] = v31;
    v8[7] = v32;
    *(void *)a3 = v8;
  }
  return result;
}

uint64_t sub_24F856DFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  return sub_24F856A8C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24F856E18()
{
  sub_24F77B010();
  return sub_24F8571C8(v0, v1, v2);
}

void static FTS5TokenizerDescriptor.porter(wrapping:)(void *a1@<X0>, void *a2@<X8>)
{
  if (*a1)
  {
    swift_bridgeObjectRetain();
    sub_24F792AE8();
    uint64_t v3 = &unk_270103588;
  }
  else
  {
    uint64_t v3 = &unk_270103558;
  }
  if (v3[2])
  {
    *a2 = v3;
  }
  else
  {
    sub_24F783118();
    sub_24F770EAC();
    sub_24F77E2B8();
    __break(1u);
  }
}

void static FTS5TokenizerDescriptor.unicode61(diacritics:separators:tokenCharacters:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  type metadata accessor for Configuration();
  sub_24F77DB94();
  MEMORY[0x270FA5388](v9);
  sub_24F773918();
  unint64_t v10 = *a1;
  sub_24F781274((uint64_t *)&unk_26B1F7C88);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DDBF0;
  *(void *)(v11 + 32) = 0x3665646F63696E75;
  *(void *)(v11 + 40) = 0xE900000000000031;
  uint64_t v31 = v11;
  if (v10)
  {
    if (v10 == 1) {
      goto LABEL_14;
    }
    sub_24F787184();
    sub_24F780950();
    if (!(!v17 & v16))
    {
      sub_24F77C840();
      uint64_t v15 = v12;
    }
    sub_24F781E58(v12, v13, v14, v15);
    sub_24F77BDF8();
    if (v19 != v20)
    {
      sub_24F775D24();
      uint64_t v18 = v30;
    }
    *(void *)(v18 + 16) = v4;
    unint64_t v21 = v18 + 16 * v10;
    uint64_t v22 = 50;
  }
  else
  {
    sub_24F787184();
    sub_24F780950();
    if (!(!v17 & v16))
    {
      sub_24F77C840();
      uint64_t v26 = v23;
    }
    sub_24F781E58(v23, v24, v25, v26);
    sub_24F77BDF8();
    if (v19 != v20)
    {
      sub_24F775D24();
      uint64_t v18 = v29;
    }
    *(void *)(v18 + 16) = v4;
    unint64_t v21 = v18 + 16 * v10;
    uint64_t v22 = 48;
  }
  *(void *)(v21 + 32) = v22;
  *(void *)(v21 + 40) = 0xE100000000000000;
  uint64_t v31 = v18;
LABEL_14:
  if (*(void *)(a2 + 16))
  {
    sub_24F78002C();
    sub_24F77F778();
    *(void *)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    swift_initStackObject();
    uint64_t v27 = sub_24F77BA18();
    MEMORY[0x270FA5388](v27);
    sub_24F856764();
    swift_release();
    unint64_t v10 = (unint64_t)&v31;
    sub_24F792AE8();
  }
  if (*(void *)(a3 + 16))
  {
    sub_24F78002C();
    sub_24F77F778();
    *(void *)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    swift_initStackObject();
    uint64_t v28 = sub_24F77BA18();
    MEMORY[0x270FA5388](v28);
    sub_24F7815D0();
    sub_24F856764();
    swift_release();
    sub_24F792AE8();
  }
  if (!*(void *)(v31 + 16))
  {
    sub_24F783118();
    sub_24F770EAC();
    sub_24F8CF9D0();
    sub_24F77B65C();
  }
  *a4 = v31;
}

uint64_t sub_24F8571C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_24F781274((uint64_t *)&unk_26B1F7C88);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24F8E0850;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = 0xEA00000000007372;
  swift_bridgeObjectRetain();
  sub_24F79539C();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  __src[0] = v8;
  sub_24F881E38(__src);
  if (v3)
  {
    swift_release();
    __break(1u);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v6 + 16) = 0;
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v35 = a3;
    uint64_t v9 = __src[0];
    uint64_t v10 = *(void *)(__src[0] + 16);
    if (v10)
    {
      uint64_t v29 = v6;
      __src[0] = MEMORY[0x263F8EE78];
      sub_24F77C4AC();
      uint64_t v11 = __src[0];
      uint64_t v12 = (uint64_t *)(v9 + 40);
      do
      {
        uint64_t v14 = *(v12 - 1);
        uint64_t v13 = *v12;
        __src[0] = v11;
        unint64_t v16 = *(void *)(v11 + 16);
        unint64_t v15 = *(void *)(v11 + 24);
        swift_bridgeObjectRetain();
        if (v16 >= v15 >> 1)
        {
          sub_24F77C4AC();
          uint64_t v11 = __src[0];
        }
        v12 += 2;
        *(void *)(v11 + 16) = v16 + 1;
        uint64_t v17 = v11 + 16 * v16;
        *(void *)(v17 + 32) = v14;
        *(void *)(v17 + 40) = v13;
        --v10;
      }
      while (v10);
      swift_release();
      uint64_t v6 = v29;
    }
    else
    {
      swift_release();
      uint64_t v11 = MEMORY[0x263F8EE78];
    }
    __src[0] = v11;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    uint64_t v18 = sub_24F8CED30();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v32[0] = v18;
    v32[1] = v20;
    char v33 = 2;
    sub_24F7667B8((uint64_t)v32);
    sub_24F76F710((uint64_t)v32, (uint64_t)__src);
    uint64_t v21 = qword_26B1F6F38;
    swift_retain();
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v22 = qword_26B1FAB18;
    swift_retain();
    unint64_t v23 = MEMORY[0x263F8EE78];
    sub_24F778B08();
    type metadata accessor for SQLGenerationContext();
    swift_allocObject();
    sub_24F779224(a1, v22, v23);
    memcpy(__dst, __src, sizeof(__dst));
    sub_24F76D734();
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *(void *)(v6 + 48) = v25;
    *(void *)(v6 + 56) = v27;
    *uint64_t v35 = v6;
  }
  return result;
}

void sub_24F8574E4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  a2(&v4, v3);
  sub_24F88B464(v3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 108, a1);
}

uint64_t sub_24F857564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t result = sub_24F7834B0();
  if (result)
  {
    uint64_t v9 = result;
    swift_retain();
    sub_24F880448(a1, v9, a2, a3, a4);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24F857604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t result = sub_24F7834B0();
  if (result)
  {
    uint64_t v11 = result;
    swift_retain();
    uint64_t v12 = a5(a1, v11, a2, a3, a4);
    swift_release();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8576AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F8571C8(a1, 0x6F74617261706573, a2);
}

uint64_t sub_24F8576DC()
{
  sub_24F77B010();
  return sub_24F8571C8(v0, v1, v2);
}

ValueMetadata *type metadata accessor for FTS5TokenizerDescriptor()
{
  return &type metadata for FTS5TokenizerDescriptor;
}

void sub_24F85770C(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X1>, void *a3@<X8>)
{
  sub_24F8574E4(a1, a2);
  if (!v3) {
    *a3 = v5;
  }
}

uint64_t sub_24F857738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_24F857604(a1, a2, a3, a4, sub_24F880640);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

void sub_24F857778(void *a1@<X8>)
{
  sub_24F85770C(*(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24), a1);
}

uint64_t sub_24F857798@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F857738(v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_24F8577B8()
{
  sub_24F7719F4(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_24F8577D8()
{
  return sub_24F857564(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_24F8577F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_24F8CEF80();
  }
  else {
    return 0;
  }
}

BOOL sub_24F857840(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

GRDBInternal::Inflections __swiftcall Inflections.init()()
{
  uint64_t v1 = v0;
  sub_24F839750(0, (unint64_t *)&qword_26B1F5850);
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v3 = (void *)sub_24F8CEC70();
  *uint64_t v1 = v2;
  v1[1] = v2;
  v1[2] = v3;
  result.uncountablesRegularExpressions._rawValue = v5;
  result.singularizeRules._rawValue = v4;
  result.pluralizeRules._rawValue = v3;
  return result;
}

Swift::Void __swiftcall Inflections.plural(_:options:_:)(Swift::String _, NSRegularExpressionOptions options, Swift::String a3)
{
  sub_24F771198();
  id v5 = objc_allocWithZone(MEMORY[0x263F08AE8]);
  swift_bridgeObjectRetain();
  id v6 = sub_24F77B668();
  if (v4)
  {
    sub_24F77B028();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    id v7 = v6;
    swift_bridgeObjectRetain();
    sub_24F786B6C();
    uint64_t v8 = *(void *)(*v3 + 16);
    sub_24F786EFC();
    uint64_t v9 = *v3;
    sub_24F77742C(v8 + 1);
    *uint64_t v3 = v9;
  }
}

Swift::Void __swiftcall Inflections.singular(_:options:_:)(Swift::String _, NSRegularExpressionOptions options, Swift::String a3)
{
  sub_24F771198();
  id v5 = objc_allocWithZone(MEMORY[0x263F08AE8]);
  swift_bridgeObjectRetain();
  id v6 = sub_24F77B668();
  if (v4)
  {
    sub_24F77B028();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    id v7 = v6;
    swift_bridgeObjectRetain();
    sub_24F786B6C();
    uint64_t v8 = *(void *)(*(void *)(v3 + 8) + 16);
    sub_24F786EFC();
    uint64_t v9 = *(void *)(v3 + 8);
    sub_24F77742C(v8 + 1);
    *(void *)(v3 + 8) = v9;
  }
}

Swift::Void __swiftcall Inflections.uncountableWords(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *((void *)a1._rawValue + 2);
  if (v3)
  {
    id v25 = self;
    swift_bridgeObjectRetain();
    id v5 = (uint64_t *)((char *)a1._rawValue + 40);
    do
    {
      uint64_t v26 = v3;
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)sub_24F8CED70();
      id v9 = objc_msgSend(v25, sel_escapedPatternForString_, v8);

      sub_24F8CED80();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      id v10 = objc_allocWithZone(MEMORY[0x263F08AE8]);
      id v11 = sub_24F859408(25180, 0xE200000000000000, 1);
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = *(void **)(v2 + 16);
      uint64_t v13 = v2;
      *(void *)(v2 + 16) = 0x8000000000000000;
      unint64_t v14 = sub_24F782950();
      if (__OFADD__(v12[2], (v15 & 1) == 0))
      {
        __break(1u);
LABEL_17:
        __break(1u);
        sub_24F77B028();
        swift_unexpectedError();
        __break(1u);
LABEL_18:
        sub_24F8CFEA0();
        __break(1u);
        return;
      }
      unint64_t v16 = v14;
      char v17 = v15;
      sub_24F781274(&qword_26B1F5868);
      if (sub_24F8CF980())
      {
        unint64_t v18 = sub_24F782950();
        if ((v17 & 1) != (v19 & 1)) {
          goto LABEL_18;
        }
        unint64_t v16 = v18;
      }
      if (v17)
      {
        uint64_t v20 = v12[7];

        *(void *)(v20 + 8 * v16) = v11;
      }
      else
      {
        v12[(v16 >> 6) + 8] |= 1 << v16;
        uint64_t v21 = (void *)(v12[6] + 16 * v16);
        *uint64_t v21 = v7;
        v21[1] = v6;
        *(void *)(v12[7] + 8 * v16) = v11;
        uint64_t v22 = v12[2];
        BOOL v23 = __OFADD__(v22, 1);
        uint64_t v24 = v22 + 1;
        if (v23) {
          goto LABEL_17;
        }
        v12[2] = v24;
        swift_bridgeObjectRetain();
      }
      v5 += 2;
      uint64_t v2 = v13;
      *(void *)(v13 + 16) = v12;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v3 = v26 - 1;
    }
    while (v26 != 1);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall Inflections.irregularSuffix(_:_:)(Swift::String a1, Swift::String a2)
{
  object = a2._object;
  uint64_t countAndFlagsBits = a2._countAndFlagsBits;
  uint64_t v4 = a1._object;
  uint64_t v5 = a1._countAndFlagsBits;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24F8577F8(v5, (unint64_t)v4);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_24F8586C4(1uLL, v5, (unint64_t)v4);
    uint64_t v11 = v10;
    uint64_t v273 = v13;
    uint64_t v281 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24F8577F8(countAndFlagsBits, (unint64_t)object);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRetain();
      unint64_t v249 = sub_24F8586C4(1uLL, countAndFlagsBits, (unint64_t)object);
      uint64_t v257 = v17;
      uint64_t v265 = v18;
      uint64_t v20 = v19;
      uint64_t v21 = v6;
      uint64_t v22 = sub_24F8CED10();
      uint64_t v24 = v23;
      BOOL v26 = v22 == sub_24F8CED10() && v24 == v25;
      uint64_t v210 = v11;
      uint64_t v169 = v14;
      if (v26)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v27 = sub_24F8CFD00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
        {
          sub_24F8CED10();
          sub_24F77F7CC();
          uint64_t v28 = v11;
          uint64_t v29 = v281;
          MEMORY[0x253363690](v9, v11, v281, v273);
          sub_24F77EAA0();
          swift_bridgeObjectRelease();
          sub_24F78007C();
          sub_24F8CED10();
          unint64_t v30 = v249;
          unint64_t v31 = sub_24F830AA8();
          sub_24F77F0D4(v31, MEMORY[0x263F8D980], v31, v32, v33, v34, v35, v36, v148, v31, v169, v20, v16, v21, v210, v8, v231, v9, v249,
            v257,
            v265,
            v273,
            v281,
            v249);
          int v37 = sub_24F8CEEA0();
          sub_24F773CB4(v37, v38, v39, v40, v41, v42, v43, v44, v149, v159, v170, v180, v190, v200, v211, v221, v232);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F8CED00();
          sub_24F77F7CC();
          MEMORY[0x253363690](v9, v28, v29, v274);
          sub_24F77EAA0();
          swift_bridgeObjectRelease();
          sub_24F78007C();
          uint64_t v45 = sub_24F8CED00();
          uint64_t v46 = v258;
          uint64_t v47 = v266;
          uint64_t v48 = v181;
          sub_24F77F0D4(v45, v49, v50, v51, v52, v53, v54, v55, v150, v160, v171, v181, v191, v201, v212, v222, v233, v242, v250,
            v258,
            v266,
            v274,
            v282,
            v30);
          int v56 = sub_24F8CEEA0();
          sub_24F773CB4(v56, v57, v58, v59, v60, v61, v62, v63, v151, v161, v172, v182, v192, v202, v213, v223, v234);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F8CED10();
          sub_24F77F7CC();
          MEMORY[0x253363690](v30, v46, v47, v48);
          sub_24F77EAA0();
          swift_bridgeObjectRelease();
          sub_24F78007C();
          uint64_t v64 = sub_24F8CED10();
          sub_24F77F0D4(v64, v65, v66, v67, v68, v69, v70, v71, v152, v162, v173, v183, v193, v203, v214, v224, v235, v243, v251,
            v259,
            v267,
            v275,
            v283,
            v30);
          int v72 = sub_24F8CEEA0();
          sub_24F773CB4(v72, v73, v74, v75, v76, v77, v78, v79, v153, v163, v174, v184, v194, v204, v215, v225, v236);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F8CED00();
          sub_24F77F7CC();
          MEMORY[0x253363690](v252, v46, v47, v185);
          sub_24F77EAA0();
          swift_bridgeObjectRelease();
          sub_24F78007C();
          uint64_t v80 = sub_24F8CED00();
          sub_24F77F0D4(v80, v81, v82, v83, v84, v85, v86, v87, v154, v164, v175, v185, v195, v205, v216, v226, v237, v244, v252,
            v260,
            v268,
            v276,
            v284,
            v252);
          sub_24F8CEEA0();
          v88._uint64_t countAndFlagsBits = sub_24F77C860();
          Inflections.plural(_:options:_:)(v88, v89, v90);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F8CED10();
          sub_24F77F7CC();
          uint64_t v91 = v217;
          uint64_t v92 = v277;
          MEMORY[0x253363690](v245, v217, v285, v277);
          sub_24F77EAA0();
          swift_bridgeObjectRelease();
          sub_24F78007C();
          uint64_t v93 = sub_24F8CED10();
          sub_24F77F0D4(v93, v94, v95, v96, v97, v98, v99, v100, v155, v165, v176, v186, v196, v206, v217, v227, v238, v245, v253,
            v261,
            v269,
            v277,
            v285,
            v245);
          sub_24F8CEEA0();
          sub_24F77BE10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F8CED00();
          sub_24F77F7CC();
          MEMORY[0x253363690](v246, v91, v286, v92);
          sub_24F77EAA0();
          swift_bridgeObjectRelease();
          sub_24F78007C();
          uint64_t v101 = sub_24F8CED00();
          char v102 = v246;
          sub_24F77F0D4(v101, v103, v104, v105, v106, v107, v108, v109, v156, v166, v177, v187, v197, v207, v218, v228, v239, v246, v254,
            v262,
            v270,
            v278,
            v286,
            v246);
          sub_24F8CEEA0();
          sub_24F77BE10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F8CED10();
          sub_24F77F7CC();
          uint64_t v110 = v188;
          MEMORY[0x253363690](v255, v263, v271, v188);
          sub_24F77EAA0();
          swift_bridgeObjectRelease();
          sub_24F78007C();
          uint64_t v111 = sub_24F8CED10();
          sub_24F77F0D4(v111, v112, v113, v114, v115, v116, v117, v118, v157, v167, v178, v188, v198, v208, v219, v229, v240, v247, v255,
            v263,
            v271,
            v279,
            v287,
            v102);
          sub_24F8CEEA0();
          v119._uint64_t countAndFlagsBits = sub_24F77C860();
          Inflections.singular(_:options:_:)(v119, v120, v121);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v122 = sub_24F8CED00();
          unint64_t v124 = v123;
          swift_bridgeObjectRelease();
          sub_24F8CEEB0();
          MEMORY[0x253363690](v256, v264, v272, v110);
          sub_24F77EAA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F78007C();
          uint64_t v126 = v122;
          unint64_t v125 = v124;
          uint64_t v127 = sub_24F8CED00();
          unint64_t v129 = v128;
          uint64_t v130 = swift_bridgeObjectRelease();
          sub_24F77F0D4(v130, v131, v132, v133, v134, v135, v136, v137, v158, v168, v179, v189, v199, v209, v220, v230, v241, v248, v256,
            v264,
            v272,
            v280,
            v288,
            v248);
          sub_24F8CEEA0();
          swift_bridgeObjectRelease();
          uint64_t v138 = v127;
          uint64_t v139 = v126;
          unint64_t v140 = v125;
          NSRegularExpressionOptions v141 = 0;
          unint64_t v142 = v129;
LABEL_11:
          Inflections.singular(_:options:_:)(*(Swift::String *)&v139, v141, *(Swift::String *)&v138);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
      }
      sub_24F77E2E0();
      sub_24F8CED20();
      sub_24F7815E8();
      MEMORY[0x253363690](v9, v11, v281, v273);
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F78007C();
      MEMORY[0x253363690](v249, v257, v265, v20);
      sub_24F77EAA0();
      swift_bridgeObjectRelease();
      v143._uint64_t countAndFlagsBits = 12580;
      v143._object = (void *)0xE200000000000000;
      Inflections.plural(_:options:_:)(v289, 1uLL, v143);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F77E2E0();
      sub_24F8CED20();
      sub_24F7815E8();
      MEMORY[0x253363690](v249, v257, v265, v20);
      sub_24F77EAA0();
      swift_bridgeObjectRelease();
      sub_24F78007C();
      sub_24F780968();
      MEMORY[0x253363690](v249, v257, v265, v20);
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      v144._uint64_t countAndFlagsBits = 12580;
      v145._uint64_t countAndFlagsBits = 12580;
      v145._object = (void *)0xE200000000000000;
      v144._object = (void *)0xE200000000000000;
      Inflections.plural(_:options:_:)(v145, 1uLL, v144);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F77E2E0();
      sub_24F8CED20();
      swift_bridgeObjectRelease();
      sub_24F7815E8();
      MEMORY[0x253363690](v9, v11, v281, v273);
      sub_24F77EAA0();
      swift_bridgeObjectRelease();
      sub_24F78007C();
      sub_24F780968();
      MEMORY[0x253363690](v9, v11, v281, v273);
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      v146._uint64_t countAndFlagsBits = 12580;
      v147._uint64_t countAndFlagsBits = 12580;
      v147._object = (void *)0xE200000000000000;
      v146._object = (void *)0xE200000000000000;
      Inflections.singular(_:options:_:)(v147, 1uLL, v146);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F77E2E0();
      sub_24F8CED20();
      swift_bridgeObjectRelease();
      sub_24F7815E8();
      MEMORY[0x253363690](v249, v257, v265, v20);
      sub_24F77EAA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F78007C();
      sub_24F780968();
      MEMORY[0x253363690](v9, v11, v281, v273);
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v138 = 12580;
      uint64_t v139 = 12580;
      unint64_t v140 = 0xE200000000000000;
      NSRegularExpressionOptions v141 = 1;
      unint64_t v142 = 0xE200000000000000;
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_24F858614(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_24F85861C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t sub_24F858628@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

BOOL sub_24F858634(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

BOOL sub_24F858660(_DWORD *a1, int a2)
{
  int v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

void sub_24F85868C(uint64_t a1)
{
  sub_24F77DBA8(*v1 | a1);
}

uint64_t sub_24F858698(uint64_t result)
{
  *v1 |= result;
  return result;
}

void sub_24F8586A8(uint64_t a1)
{
  sub_24F77DBA8(*v1 & a1);
}

uint64_t sub_24F8586B4(uint64_t result)
{
  *v1 &= result;
  return result;
}

unint64_t sub_24F8586C4(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    GRDBInternal::Inflections result = sub_24F8CEE90();
    if (v6) {
      GRDBInternal::Inflections result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = sub_24F8CEFA0();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24F858798(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  GRDBInternal::Inflections result = sub_24F897608(0, result, *(void *)(a2 + 16), a2);
  if (v4) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result;
  }
  if (v3 < v5) {
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000) == 0) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

Swift::String __swiftcall Inflections.pluralize(_:)(Swift::String a1)
{
  sub_24F858884(a1._countAndFlagsBits, (unint64_t)a1._object, *v1);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Inflections.singularize(_:)(Swift::String a1)
{
  sub_24F858884(a1._countAndFlagsBits, (unint64_t)a1._object, *(void *)(v1 + 8));
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

void sub_24F858884(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  unint64_t v8 = sub_24F858C10();
  if (sub_24F8CFD00()) {
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  sub_24F82A910(a1, a2, 48, 0xE100000000000000, 57, 0xE100000000000000);
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10 >> 14 >= v8 >> 14)
  {
    unint64_t v37 = v10;
    uint64_t v38 = a3;
    uint64_t v39 = a1;
    unint64_t v40 = a2;
    uint64_t v11 = sub_24F8CEFA0();
    uint64_t v12 = MEMORY[0x253363690](v11);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_24F8CEF60();
    swift_bridgeObjectRelease();
    uint64_t v16 = v7 + 64;
    uint64_t v17 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v18 = -1;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    unint64_t v19 = v18 & *(void *)(v7 + 64);
    int64_t v41 = (unint64_t)(v17 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v20 = 0;
    while (1)
    {
      if (v19)
      {
        unint64_t v21 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v22 = v21 | (v20 << 6);
      }
      else
      {
        int64_t v23 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        if (v23 >= v41) {
          goto LABEL_24;
        }
        unint64_t v24 = *(void *)(v16 + 8 * v23);
        ++v20;
        if (!v24)
        {
          int64_t v20 = v23 + 1;
          if (v23 + 1 >= v41) {
            goto LABEL_24;
          }
          unint64_t v24 = *(void *)(v16 + 8 * v20);
          if (!v24)
          {
            int64_t v20 = v23 + 2;
            if (v23 + 2 >= v41) {
              goto LABEL_24;
            }
            unint64_t v24 = *(void *)(v16 + 8 * v20);
            if (!v24)
            {
              int64_t v25 = v23 + 3;
              if (v25 >= v41)
              {
LABEL_24:
                swift_release();
                swift_bridgeObjectRetain();
                uint64_t v29 = sub_24F8CEFA0();
                uint64_t v31 = v30;
                uint64_t v33 = v32;
                uint64_t v35 = v34;
                swift_bridgeObjectRelease();
                MEMORY[0x253363690](v29, v31, v33, v35);
                swift_bridgeObjectRelease();
                sub_24F859074(v12, v14, v38);
                swift_bridgeObjectRelease();
                sub_24F8CEEB0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRetain();
                unint64_t v36 = sub_24F81DD3C(v37, v39, v40);
                MEMORY[0x253363690](v36);
                sub_24F8CEEB0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return;
              }
              unint64_t v24 = *(void *)(v16 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  int64_t v20 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    break;
                  }
                  if (v20 >= v41) {
                    goto LABEL_24;
                  }
                  unint64_t v24 = *(void *)(v16 + 8 * v20);
                  ++v25;
                  if (v24) {
                    goto LABEL_21;
                  }
                }
LABEL_27:
                __break(1u);
LABEL_28:
                __break(1u);
                break;
              }
              int64_t v20 = v25;
            }
          }
        }
LABEL_21:
        unint64_t v19 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
      }
      id v26 = *(id *)(*(void *)(v7 + 56) + 8 * v22);
      char v27 = (void *)sub_24F8CED70();
      id v28 = objc_msgSend(v26, sel_firstMatchInString_options_range_, v27, 0, 0, v15);

      if (v28)
      {
        swift_release();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  __break(1u);
}

uint64_t sub_24F858C10()
{
  swift_bridgeObjectRetain();
  sub_24F781274(&qword_26B1F5848);
  sub_24F8594F4();
  sub_24F7B0E7C();
  uint64_t v0 = sub_24F8CF5D0();
  uint64_t v2 = v1;
  if (qword_26B1F5958 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)sub_24F8CED70();
  id v4 = sub_24F782BF0();

  if (!v4) {
    goto LABEL_6;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v5, sel_range);
  if (v6 == (id)sub_24F8CE490())
  {

LABEL_6:
    uint64_t v44 = 0;
    char v7 = 1;
    goto LABEL_11;
  }
  objc_msgSend(v5, sel_range);
  uint64_t v8 = sub_24F8CF4A0();
  char v10 = v9;

  char v7 = v10 & 1;
  if (v10) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v8;
  }
  uint64_t v44 = v11;
LABEL_11:
  if (qword_26B1F5960 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)sub_24F8CED70();
  id v13 = sub_24F782BF0();

  if (v13)
  {
    id v14 = v13;
    id v15 = objc_msgSend(v14, sel_range);
    if (v15 == (id)sub_24F8CE490() || (objc_msgSend(v14, sel_range), sub_24F8CF4A0(), (v16 & 1) != 0))
    {
      uint64_t v43 = 0;
      char v17 = 1;
    }
    else
    {
      uint64_t v43 = sub_24F8CEE70();
      char v17 = 0;
    }
  }
  else
  {
    uint64_t v43 = 0;
    char v17 = 1;
  }
  if (qword_26B1F5950 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_26B1F5720;
  unint64_t v19 = (void *)sub_24F8CED70();
  id v20 = objc_msgSend(v18, sel_firstMatchInString_options_range_, v19, 0, v0, v2);

  if (v20)
  {
    id v21 = v20;
    id v22 = objc_msgSend(v21, sel_range);
    if (v22 == (id)sub_24F8CE490() || (objc_msgSend(v21, sel_range), sub_24F8CF4A0(), (v23 & 1) != 0))
    {
      uint64_t v24 = 0;
      char v25 = 1;
    }
    else
    {
      uint64_t v24 = sub_24F8CEE70();
      char v25 = 0;
    }

    if (v7)
    {
LABEL_28:
      id v26 = (void *)MEMORY[0x263F8EE78];
      if (v17) {
        goto LABEL_39;
      }
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v24 = 0;
    char v25 = 1;
    if (v7) {
      goto LABEL_28;
    }
  }
  sub_24F787CA4(0, 1, 1, MEMORY[0x263F8EE78]);
  id v26 = v27;
  unint64_t v29 = v27[2];
  unint64_t v28 = v27[3];
  if (v29 >= v28 >> 1)
  {
    sub_24F783128(v28);
    id v26 = v38;
  }
  void v26[2] = v29 + 1;
  v26[v29 + 4] = v44;
  if ((v17 & 1) == 0)
  {
LABEL_34:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F775D44();
      id v26 = v39;
    }
    unint64_t v31 = v26[2];
    unint64_t v30 = v26[3];
    if (v31 >= v30 >> 1)
    {
      sub_24F783128(v30);
      id v26 = v40;
    }
    void v26[2] = v31 + 1;
    v26[v31 + 4] = v43;
  }
LABEL_39:
  if ((v25 & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F775D44();
      id v26 = v41;
    }
    unint64_t v33 = v26[2];
    unint64_t v32 = v26[3];
    if (v33 >= v32 >> 1)
    {
      sub_24F783128(v32);
      id v26 = v42;
    }
    void v26[2] = v33 + 1;
    v26[v33 + 4] = v24;
  }
  unint64_t v34 = sub_24F8592D0(v26);
  char v36 = v35;
  swift_bridgeObjectRelease();
  if (v36) {
    return 15;
  }
  else {
    return v34;
  }
}

uint64_t sub_24F859074(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4
    && (swift_bridgeObjectRetain(),
        sub_24F781274(&qword_26B1F5848),
        sub_24F8594F4(),
        sub_24F7B0E7C(),
        uint64_t v17 = sub_24F8CF5D0(),
        (uint64_t v7 = *(void *)(a3 + 16)) != 0))
  {
    uint64_t v8 = v6;
    sub_24F839750(0, &qword_26B1F5990);
    swift_bridgeObjectRetain();
    uint64_t v9 = a3 + 24 * v7 + 16;
    while (1)
    {
      char v10 = *(void **)(v9 - 8);
      swift_bridgeObjectRetain();
      id v11 = v10;
      swift_bridgeObjectRetain();
      uint64_t v12 = v3;
      id v13 = sub_24F85925C();
      id v14 = (void *)sub_24F8CED70();
      swift_bridgeObjectRelease();
      uint64_t v15 = (uint64_t)objc_msgSend(v11, sel_replaceMatchesInString_options_range_withTemplate_, v13, 0, v17, v8, v14);

      if (v15 >= 1) {
        break;
      }
      --v7;
      v9 -= 24;

      uint64_t v3 = v12;
      if (!v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_24F8CEDE0();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRetain();
  }
  return v3;
}

id sub_24F85925C()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_24F8CED70();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

unint64_t sub_24F8592D0(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 0;
  }
  unint64_t result = a1[4];
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    id v5 = a1 + 5;
    do
    {
      unint64_t v7 = *v5++;
      unint64_t v6 = v7;
      if (result >> 14 < v7 >> 14) {
        unint64_t result = v6;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

id sub_24F859318(uint64_t a1)
{
  return sub_24F859384(a1, 0x242B775C625CLL, 0xE600000000000000, &qword_26B1F5728);
}

id sub_24F859338(uint64_t a1)
{
  return sub_24F859384(a1, 0x242B5D5F5E5B5FLL, 0xE700000000000000, &qword_26B1F5670);
}

id sub_24F85935C(uint64_t a1)
{
  return sub_24F859384(a1, 0xD000000000000016, 0x800000024F8D3C00, &qword_26B1F5720);
}

id sub_24F859384(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = objc_allocWithZone(MEMORY[0x263F08AE8]);
  id result = sub_24F859408(a2, a3, 0);
  *a4 = result;
  return result;
}

id sub_24F859408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  id v5 = (void *)sub_24F8CED70();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_24F8CE7F0();

    swift_willThrow();
  }
  return v6;
}

ValueMetadata *type metadata accessor for Inflections()
{
  return &type metadata for Inflections;
}

unint64_t sub_24F8594F4()
{
  unint64_t result = qword_26B1F5700;
  if (!qword_26B1F5700)
  {
    sub_24F7688B8(&qword_26B1F5848);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F5700);
  }
  return result;
}

uint64_t sub_24F859570(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, void (*a6)(uint64_t *))
{
  unint64_t v9 = a5;
  uint64_t v48 = a4;
  unint64_t v49 = a5;
  LOBYTE(v46) = a3;
  type metadata accessor for FTS5TableDefinition();
  swift_allocObject();
  uint64_t v12 = sub_24F7CF8D4((char *)&v46);
  uint64_t v50 = v12;
  if (a6)
  {
    swift_retain();
    a6(&v50);
    if (v7)
    {
      swift_release();
      return sub_24F787238((uint64_t)a6);
    }
    uint64_t v45 = v6;
    sub_24F787238((uint64_t)a6);
  }
  else
  {
    uint64_t v45 = v6;
  }
  sub_24F787184();
  uint64_t v15 = v14;
  unint64_t v16 = *(void *)(v14 + 16);
  unint64_t v17 = v16 + 1;
  if (v16 >= *(void *)(v14 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v15 = v39;
  }
  *(void *)(v15 + 16) = v17;
  uint64_t v18 = v15 + 16 * v16;
  *(void *)(v18 + 32) = 0xD000000000000014;
  *(void *)(v18 + 40) = 0x800000024F8D1030;
  if (a3)
  {
    if (v17 >= *(void *)(v15 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v15 = v42;
    }
    *(void *)(v15 + 16) = v16 + 2;
    uint64_t v19 = v15 + 16 * v17;
    strcpy((char *)(v19 + 32), "IF NOT EXISTS");
    *(_WORD *)(v19 + 46) = -4864;
  }
  uint64_t v46 = 34;
  unint64_t v47 = 0xE100000000000000;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  uint64_t v20 = v46;
  unint64_t v21 = v47;
  unint64_t v22 = *(void *)(v15 + 16);
  unint64_t v23 = *(void *)(v15 + 24) >> 1;
  unint64_t v24 = v22 + 1;
  if (v23 <= v22)
  {
    sub_24F787184();
    uint64_t v15 = v40;
    unint64_t v23 = *(void *)(v40 + 24) >> 1;
  }
  *(void *)(v15 + 16) = v24;
  uint64_t v25 = v15 + 16 * v22;
  *(void *)(v25 + 32) = v20;
  *(void *)(v25 + 40) = v21;
  if ((uint64_t)v23 < (uint64_t)(v22 + 2))
  {
    sub_24F787184();
    uint64_t v15 = v41;
  }
  *(void *)(v15 + 16) = v22 + 2;
  uint64_t v26 = v15 + 16 * v24;
  *(void *)(v26 + 32) = 0x474E495355;
  *(void *)(v26 + 40) = 0xE500000000000000;
  uint64_t v27 = FTS5.moduleArguments(for:in:)(v12, v45);
  if (v7)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = v27;
    if (*(void *)(v27 + 16))
    {
      uint64_t v46 = a4;
      unint64_t v47 = v9;
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      uint64_t v29 = v46;
      unint64_t v30 = v47;
      uint64_t v46 = v28;
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      sub_24F8CED30();
      swift_bridgeObjectRelease();
      uint64_t v46 = v29;
      unint64_t v47 = v30;
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      uint64_t v31 = v46;
      unint64_t v9 = v47;
      unint64_t v32 = *(void *)(v15 + 16);
      if (v32 >= *(void *)(v15 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v15 = v43;
      }
      *(void *)(v15 + 16) = v32 + 1;
      uint64_t v33 = v15 + 16 * v32;
      *(void *)(v33 + 32) = v31;
      uint64_t v34 = v33 + 32;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v36 = *(void *)(v15 + 16);
      unint64_t v35 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v36 >= v35 >> 1)
      {
        sub_24F787184();
        uint64_t v15 = v44;
      }
      *(void *)(v15 + 16) = v36 + 1;
      uint64_t v37 = v15 + 16 * v36;
      *(void *)(v37 + 32) = a4;
      uint64_t v34 = v37 + 32;
    }
    *(void *)(v34 + 8) = v9;
    uint64_t v46 = v15;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    uint64_t v38 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v38);
    Database.inSavepoint(_:)(sub_24F85A6C8);
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_24F859A28(uint64_t a1, Swift::String sql, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  object = sql._object;
  _OWORD v15[2] = a3;
  v15[3] = a4;
  v15[0] = MEMORY[0x263F8EE78];
  v15[1] = MEMORY[0x263F8EE80];
  sql._object = v15;
  uint64_t countAndFlagsBits = sql._countAndFlagsBits;
  sql._uint64_t countAndFlagsBits = (uint64_t)object;
  Database.execute(sql:arguments:)(*(Swift::String *)((char *)&sql - 8), *(GRDBInternal::StatementArguments *)&sql._object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v13) {
    FTS5.database(_:didCreate:using:)(a1, a5, a6, a7);
  }
  return 0;
}

uint64_t FTS5Pattern.rawPattern.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

GRDBInternal::FTS5Pattern_optional __swiftcall FTS5Pattern.init(matchingAnyTokenIn:)(Swift::String matchingAnyTokenIn)
{
  sub_24F859DAC(matchingAnyTokenIn._countAndFlagsBits, (uint64_t)matchingAnyTokenIn._object);
  result.value.rawPattern._object = v2;
  result.value.rawPattern._uint64_t countAndFlagsBits = v1;
  return result;
}

void sub_24F859B24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for Configuration();
  char v10 = (int *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_WORD *)uint64_t v12 = 1;
  *((void *)v12 + 1) = 0;
  *((void *)v12 + 2) = 0;
  *(_DWORD *)(v12 + 23) = 0;
  *((void *)v12 + 4) = MEMORY[0x263F8EE78];
  *((_WORD *)v12 + 20) = 0;
  v12[64] = 2;
  *((void *)v12 + 9) = 0;
  *((void *)v12 + 10) = 0;
  v12[88] = -1;
  *((void *)v12 + 12) = 5;
  *((void *)v12 + 6) = 0;
  *((void *)v12 + 7) = 0;
  sub_24F8CEBF0();
  *(void *)&v12[v10[19]] = 0;
  *(void *)&v12[v10[20]] = 0;
  v12[v10[21]] = 1;
  v12[v10[22]] = 0;
  uint64_t v13 = &v12[v10[23]];
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v14 = &v12[v10[24]];
  *uint64_t v14 = 0;
  v14[1] = 0;
  uint64_t v15 = &v12[v10[25]];
  type metadata accessor for DatabaseQueue();
  *uint64_t v15 = 0;
  v15[1] = 0;
  swift_initStackObject();
  DatabaseQueue.init(configuration:)((uint64_t)v12);
  uint64_t v25 = a3;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  sub_24F8565FC((uint64_t)sub_24F85A620, (uint64_t)v24);
  if (v4)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v31 = v4;
    id v16 = v4;
    sub_24F781274(&qword_26B1F7040);
    if (!swift_dynamicCast())
    {
LABEL_7:

      return;
    }

    int v17 = v28;
    uint64_t v18 = v29;
    uint64_t v19 = v30;
    sub_24F7DC6DC();
    swift_allocError();
    uint64_t v21 = v20;
    if (v19)
    {
LABEL_6:
      *(_DWORD *)uint64_t v21 = v17;
      *(void *)(v21 + 8) = v18;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = 0u;
      *(_OWORD *)(v21 + 40) = 0u;
      *(unsigned char *)(v21 + 56) = 0;
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_24F77F5DC();
      sub_24F77835C(v23);
      swift_willThrow();
      goto LABEL_7;
    }
    if (sqlite3_errstr(v17))
    {
      uint64_t v18 = sub_24F8CEED0();
      uint64_t v19 = v22;
      goto LABEL_6;
    }
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    *a4 = a1;
    a4[1] = a2;
  }
}

GRDBInternal::FTS5Pattern_optional __swiftcall FTS5Pattern.init(matchingAllTokensIn:)(Swift::String matchingAllTokensIn)
{
  sub_24F859DAC(matchingAllTokensIn._countAndFlagsBits, (uint64_t)matchingAllTokensIn._object);
  result.value.rawPattern._object = v2;
  result.value.rawPattern._uint64_t countAndFlagsBits = v1;
  return result;
}

void sub_24F859DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F77F7F0(a1, a2);
  if (v3)
  {

LABEL_3:
    swift_bridgeObjectRelease();
    *id v2 = 0;
    v2[1] = 0;
    return;
  }
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(v5 + 16)) {
    goto LABEL_3;
  }
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  uint64_t v6 = sub_24F8CED30();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  sub_24F859B24(v6, v8, MEMORY[0x263F8EE78], v10);
  uint64_t v9 = v10[1];
  *id v2 = v10[0];
  v2[1] = v9;
}

GRDBInternal::FTS5Pattern_optional __swiftcall FTS5Pattern.init(matchingAllPrefixesIn:)(Swift::String matchingAllPrefixesIn)
{
  uint64_t v3 = sub_24F77F7F0(matchingAllPrefixesIn._countAndFlagsBits, (uint64_t)matchingAllPrefixesIn._object);
  if (v2)
  {

LABEL_3:
    uint64_t v4 = swift_bridgeObjectRelease();
    *uint64_t v1 = 0;
    v1[1] = 0;
    goto LABEL_11;
  }
  uint64_t v6 = v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    goto LABEL_3;
  }
  id v16 = v1;
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_24F77C4AC();
  uint64_t v8 = (uint64_t *)(v6 + 40);
  do
  {
    uint64_t v17 = *(v8 - 1);
    uint64_t v18 = *v8;
    swift_bridgeObjectRetain_n();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    unint64_t v9 = *(void *)(v19 + 16);
    if (v9 >= *(void *)(v19 + 24) >> 1) {
      sub_24F77C4AC();
    }
    v8 += 2;
    *(void *)(v19 + 16) = v9 + 1;
    uint64_t v10 = v19 + 16 * v9;
    *(void *)(v10 + 32) = v17;
    *(void *)(v10 + 40) = v18;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  uint64_t v11 = sub_24F8CED30();
  uint64_t v13 = v12;
  swift_release();
  sub_24F859B24(v11, v13, MEMORY[0x263F8EE78], v20);
  uint64_t v14 = v20[1];
  *id v16 = v20[0];
  v16[1] = v14;
LABEL_11:
  result.value.rawPattern._object = v5;
  result.value.rawPattern._uint64_t countAndFlagsBits = v4;
  return result;
}

GRDBInternal::FTS5Pattern_optional __swiftcall FTS5Pattern.init(matchingPhrase:)(Swift::String matchingPhrase)
{
  sub_24F85A060(matchingPhrase._countAndFlagsBits, (uint64_t)matchingPhrase._object, 34, 0xE100000000000000);
  result.value.rawPattern._object = v2;
  result.value.rawPattern._uint64_t countAndFlagsBits = v1;
  return result;
}

GRDBInternal::FTS5Pattern_optional __swiftcall FTS5Pattern.init(matchingPrefixPhrase:)(Swift::String matchingPrefixPhrase)
{
  sub_24F85A060(matchingPrefixPhrase._countAndFlagsBits, (uint64_t)matchingPrefixPhrase._object, 8798, 0xE200000000000000);
  result.value.rawPattern._object = v2;
  result.value.rawPattern._uint64_t countAndFlagsBits = v1;
  return result;
}

void sub_24F85A060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24F77F7F0(a1, a2);
  if (v5)
  {

LABEL_3:
    swift_bridgeObjectRelease();
    *uint64_t v4 = 0;
    v4[1] = 0;
    return;
  }
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (!*(void *)(v9 + 16)) {
    goto LABEL_3;
  }
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F859B24(a3, a4, MEMORY[0x263F8EE78], v11);
  uint64_t v10 = v11[1];
  *uint64_t v4 = v11[0];
  v4[1] = v10;
}

uint64_t sub_24F85A190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(swift_allocObject() + 16) = a2;
  swift_bridgeObjectRetain();
  sub_24F859570(0x746E656D75636F64, 0xE800000000000000, 0, 896758886, 0xE400000000000000, (void (*)(uint64_t *))sub_24F85A678);
  uint64_t result = swift_release();
  if (!v4)
  {
    sub_24F87F808(0xD00000000000002DLL, 0x800000024F8D3C20, 0);
    sub_24F781274(&qword_26B1F7AB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = &protocol witness table for String;
    *(void *)(inited + 32) = a3;
    *(void *)(inited + 40) = a4;
    swift_bridgeObjectRetain();
    sub_24F780F38(inited, &v9);
    sub_24F8987B8(&v9);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F8AAD90();
    return swift_release();
  }
  return result;
}

uint64_t sub_24F85A324(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      FTS5TableDefinition.column(_:)(v5, v6);
      swift_bridgeObjectRelease();
      swift_release();
      v4 += 2;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    FTS5TableDefinition.column(_:)(0x5F5F626472675F5FLL, 0xE800000000000000);
    return swift_release();
  }
}

GRDBInternal::FTS5Pattern __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.makeFTS5Pattern(rawPattern:forTable:)(Swift::String rawPattern, Swift::String forTable)
{
  object = rawPattern._object;
  uint64_t countAndFlagsBits = rawPattern._countAndFlagsBits;
  uint64_t v6 = v2;
  uint64_t v7 = Database.columns(in:)(forTable._countAndFlagsBits, (uint64_t)forTable._object);
  if (!v3)
  {
    uint64_t v9 = sub_24F7EEE74(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24F859B24(countAndFlagsBits, (uint64_t)object, v9, v6);
  }
  result.rawPattern._object = v8;
  result.rawPattern._uint64_t countAndFlagsBits = v7;
  return result;
}

uint64_t FTS5Pattern.databaseValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[1];
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = 2;
  return swift_bridgeObjectRetain();
}

uint64_t static FTS5Pattern.fromDatabaseValue(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_24F8CEDD0();
  uint64_t result = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(unsigned __int8 *)(a1 + 16);
  if (v8 == 3)
  {
    uint64_t v9 = sub_24F77F5DC();
    sub_24F78419C(v9, v10);
    sub_24F8CEDC0();
    sub_24F77F5DC();
    uint64_t v11 = sub_24F8CEDA0();
    uint64_t v13 = v12;
    uint64_t v14 = sub_24F77F5DC();
    uint64_t result = sub_24F781F10(v14, v15, 3);
    if (v13)
    {
      uint64_t v7 = v13;
      uint64_t v6 = v11;
      goto LABEL_6;
    }
  }
  else if (v8 == 2)
  {
    swift_bridgeObjectRetain();
LABEL_6:
    v16[0] = v6;
    v16[1] = v7;
    swift_bridgeObjectRetain();
    sub_24F85A590(v16, a2);
    return swift_bridgeObjectRelease_n();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

void sub_24F85A590(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  swift_bridgeObjectRetain();
  sub_24F859B24(v4, v5, MEMORY[0x263F8EE78], v8);
  if (v2)
  {

    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v6 = v8[0];
    uint64_t v7 = v8[1];
  }
  *a2 = v6;
  a2[1] = v7;
}

ValueMetadata *type metadata accessor for FTS5Pattern()
{
  return &type metadata for FTS5Pattern;
}

uint64_t sub_24F85A620(uint64_t a1)
{
  return sub_24F85A190(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24F85A640()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F85A678(uint64_t a1)
{
  return sub_24F85A324(a1, *(void *)(v1 + 16));
}

uint64_t sub_24F85A694(uint64_t a1, Swift::String a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  return sub_24F859A28(a1, a2, *a3, a3[1], a4, a5, *a6) & 1;
}

uint64_t sub_24F85A6C8()
{
  return sub_24F85A694(*(void *)(v0 + 16), *(Swift::String *)(v0 + 24), *(uint64_t **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(uint64_t **)(v0 + 64));
}

ValueMetadata *type metadata accessor for JSONRequiredError()
{
  return &type metadata for JSONRequiredError;
}

uint64_t sub_24F85A700()
{
  return sub_24F77EAB8();
}

uint64_t sub_24F85A778@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 24) = &type metadata for JSONRequiredEncoder;
  uint64_t v2 = a1();
  sub_24F77E304(v2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F85A7C4()
{
  return sub_24F780098();
}

uint64_t sub_24F85A7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24F781274(&qword_26B1F7260);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24F8DDBF0;
  *(void *)(inited + 56) = a4;
  *(void *)(inited + 64) = a6;
  unint64_t v10 = sub_24F76ADC4((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v10, a2, a4);
  swift_bridgeObjectRetain();
  sub_24F76B568();
  type metadata accessor for JSONRequiredEncoder.KeyedContainer();
  swift_getWitnessTable();
  return sub_24F8CFAB0();
}

uint64_t sub_24F85A91C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for JSONRequiredEncoder;
  unint64_t v1 = sub_24F85B340();
  sub_24F77E304(v1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F85A964@<X0>(uint64_t (*a1)(void)@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 24) = &type metadata for JSONRequiredEncoder;
  uint64_t v2 = a1();
  sub_24F77E304(v2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F85A9B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F85A9B8()
{
  return sub_24F85A7C4();
}

uint64_t sub_24F85A9D0()
{
  return sub_24F85A7C4();
}

uint64_t sub_24F85A9EC()
{
  return sub_24F8CFDD0();
}

uint64_t sub_24F85AA04()
{
  return sub_24F8CFDC0();
}

uint64_t sub_24F85AA1C()
{
  return sub_24F8CFDE0();
}

uint64_t sub_24F85AA38(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F85AC10(a1, a2, a3, a4, MEMORY[0x263F8E3C0]);
}

uint64_t sub_24F85AA64()
{
  return sub_24F8CFDF0();
}

uint64_t sub_24F85AA80(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F85AB68(a1, a2, a3, a4, MEMORY[0x263F8E3D8]);
}

uint64_t sub_24F85AAAC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F85ABBC(a1, a2, a3, a4, MEMORY[0x263F8E3E0]);
}

uint64_t sub_24F85AAD8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F85AC10(a1, a2, a3, a4, MEMORY[0x263F8E3E8]);
}

uint64_t sub_24F85AB04()
{
  return sub_24F8CFE20();
}

uint64_t sub_24F85AB20()
{
  return sub_24F8CFE00();
}

uint64_t sub_24F85AB3C(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F85AB68(a1, a2, a3, a4, MEMORY[0x263F8E3F8]);
}

uint64_t sub_24F85AB68(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_24F85AB90(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F85ABBC(a1, a2, a3, a4, MEMORY[0x263F8E408]);
}

uint64_t sub_24F85ABBC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_24F85ABE4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F85AC10(a1, a2, a3, a4, MEMORY[0x263F8E410]);
}

uint64_t sub_24F85AC10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_24F85AC40()
{
  return sub_24F8CFE40();
}

uint64_t sub_24F85AC5C()
{
  return sub_24F8CFE10();
}

uint64_t sub_24F85AC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F85A7FC(a1, a2, *v5, *(void *)(a5 + 16), a3, *(void *)(a5 + 24));
}

uint64_t sub_24F85ACA0@<X0>(uint64_t a1@<X8>)
{
  return sub_24F85A964((uint64_t (*)(void))sub_24F7B669C, a1);
}

uint64_t sub_24F85ACD0@<X0>(uint64_t a1@<X8>)
{
  return sub_24F85A91C(a1);
}

uint64_t sub_24F85ACD8@<X0>(uint64_t a1@<X8>)
{
  return sub_24F85A964((uint64_t (*)(void))sub_24F85B340, a1);
}

uint64_t sub_24F85AD08()
{
  return sub_24F85A700();
}

uint64_t sub_24F85AD18@<X0>(uint64_t a1@<X8>)
{
  return sub_24F85A778((uint64_t (*)(void))sub_24F7B669C, a1);
}

uint64_t sub_24F85AD48@<X0>(uint64_t a1@<X8>)
{
  return sub_24F85A778((uint64_t (*)(void))sub_24F85B3A4, a1);
}

uint64_t sub_24F85AD78()
{
  return sub_24F8CFD70();
}

uint64_t sub_24F85ADD8()
{
  return sub_24F8CFD80();
}

uint64_t sub_24F85AE38()
{
  return sub_24F77EAB8();
}

uint64_t sub_24F85AEA8@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  a2[3] = &type metadata for JSONRequiredEncoder;
  a2[4] = a1();
  *a2 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F85AEFC()
{
  return 0;
}

uint64_t sub_24F85AF04()
{
  return sub_24F8CFD70();
}

uint64_t sub_24F85AF64()
{
  return sub_24F8CFD80();
}

uint64_t sub_24F85AFC4()
{
  return sub_24F8CFBA0();
}

uint64_t sub_24F85AFF0()
{
  return sub_24F8CFBD0();
}

uint64_t sub_24F85B01C()
{
  return sub_24F8CFBC0();
}

uint64_t sub_24F85B048()
{
  return sub_24F8CFBE0();
}

uint64_t sub_24F85B074()
{
  return sub_24F8CFBF0();
}

uint64_t sub_24F85B0A0()
{
  return sub_24F8CFC00();
}

uint64_t sub_24F85B0CC()
{
  return sub_24F8CFC20();
}

uint64_t sub_24F85B0F8()
{
  return sub_24F8CFC30();
}

uint64_t sub_24F85B124()
{
  return sub_24F8CFC40();
}

uint64_t sub_24F85B150()
{
  return sub_24F8CFC50();
}

uint64_t sub_24F85B17C()
{
  return sub_24F8CFC70();
}

uint64_t sub_24F85B1A8()
{
  return sub_24F8CFC10();
}

uint64_t sub_24F85B1D4()
{
  return sub_24F8CFC60();
}

uint64_t sub_24F85B200()
{
  return sub_24F8CFC80();
}

uint64_t sub_24F85B22C()
{
  return sub_24F8CFC90();
}

uint64_t sub_24F85B258()
{
  return sub_24F8CFCA0();
}

uint64_t sub_24F85B284()
{
  return sub_24F8CFCB0();
}

uint64_t sub_24F85B2B0()
{
  return sub_24F8CFBB0();
}

uint64_t sub_24F85B2E8@<X0>(void *a1@<X8>)
{
  return sub_24F85AEA8((uint64_t (*)(void))sub_24F7B669C, a1);
}

uint64_t sub_24F85B314@<X0>(void *a1@<X8>)
{
  return sub_24F85AEA8((uint64_t (*)(void))sub_24F85B340, a1);
}

unint64_t sub_24F85B340()
{
  unint64_t result = qword_269A2BB80;
  if (!qword_269A2BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2BB80);
  }
  return result;
}

uint64_t type metadata accessor for JSONRequiredEncoder.KeyedContainer()
{
  return sub_24F777DE0();
}

unint64_t sub_24F85B3A4()
{
  unint64_t result = qword_269A2BB88;
  if (!qword_269A2BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2BB88);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONRequiredEncoder()
{
  return &type metadata for JSONRequiredEncoder;
}

uint64_t sub_24F85B400(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t NSURL.databaseValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24F85B610(v1);
  if (v4) {
    uint64_t v5 = result;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    char v6 = 2;
  }
  else {
    char v6 = 4;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  return result;
}

uint64_t static NSURL.fromDatabaseValue(_:)(uint64_t a1)
{
  uint64_t v3 = sub_24F781274(&qword_269A2A5E0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v6 - 8);
  int v7 = *(unsigned __int8 *)(a1 + 16);
  if (v7 != 3)
  {
    uint64_t result = 0;
    if (v7 != 2) {
      return result;
    }
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  uint64_t v9 = sub_24F77F80C();
  sub_24F78419C(v9, v10);
  sub_24F8CEDC0();
  sub_24F77F80C();
  sub_24F8CEDA0();
  uint64_t v12 = v11;
  uint64_t v13 = sub_24F77F80C();
  sub_24F781F10(v13, v14, 3);
  if (v12)
  {
LABEL_5:
    sub_24F77F80C();
    sub_24F8CE840();
    swift_bridgeObjectRelease();
    sub_24F83C41C(v1, (uint64_t)&v16);
    sub_24F85B674((uint64_t)v5);
    return v16;
  }
  return 0;
}

uint64_t sub_24F85B5C4@<X0>(uint64_t a1@<X8>)
{
  return NSURL.databaseValue.getter(a1);
}

uint64_t sub_24F85B5E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static NSURL.fromDatabaseValue(_:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_24F85B610(void *a1)
{
  id v1 = objc_msgSend(a1, sel_absoluteString);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_24F8CED80();

  return v3;
}

uint64_t sub_24F85B674(uint64_t a1)
{
  uint64_t v2 = sub_24F781274(&qword_269A2A5E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SQLRequest.init(stringInterpolation:)()
{
  return SQLRequest.init(literal:adapter:cached:)();
}

uint64_t SQLRequest<A>.init(sql:arguments:adapter:cached:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24F8DDBF0;
  v20[0] = a1;
  v20[1] = a2;
  long long v21 = *a3;
  sub_24F7725D4(v20);
  sub_24F76C344((uint64_t)v20, v12 + 32);
  sub_24F7786CC(a4, (uint64_t)v19);
  long long v16 = 0u;
  long long v17 = 0u;
  *(void *)&long long v18 = 0;
  *((void *)&v18 + 1) = v12;
  sub_24F7AC1D0((uint64_t)v19, (uint64_t)&v16);
  if (a5) {
    char v13 = 0;
  }
  else {
    char v13 = 2;
  }
  *(unsigned char *)(a6 + 48) = v13;
  long long v14 = v17;
  *(_OWORD *)a6 = v16;
  *(_OWORD *)(a6 + 16) = v14;
  *(_OWORD *)(a6 + 32) = v18;
  return sub_24F7783C0(a4, &qword_26B1F7F10);
}

uint64_t SQLRequest<A>.init(literal:adapter:cached:)()
{
  sub_24F77EADC();
  sub_24F7786CC(v1, (uint64_t)v10);
  long long v7 = 0u;
  long long v8 = 0u;
  *(void *)&long long v9 = 0;
  *((void *)&v9 + 1) = v3;
  sub_24F7AC1D0((uint64_t)v10, (uint64_t)&v7);
  if (v0) {
    char v4 = 0;
  }
  else {
    char v4 = 2;
  }
  *(unsigned char *)(v2 + 48) = v4;
  long long v5 = v8;
  *(_OWORD *)uint64_t v2 = v7;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v9;
  return sub_24F7783C0(v1, &qword_26B1F7F10);
}

BOOL sub_24F85B8A8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24F85B8B8()
{
  return sub_24F8CFF40();
}

uint64_t sub_24F85B8E0()
{
  return sub_24F8CFF80();
}

BOOL sub_24F85B928(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24F85B8A8(*a1, *a2);
}

uint64_t sub_24F85B934()
{
  return sub_24F85B8E0();
}

uint64_t sub_24F85B93C()
{
  return sub_24F85B8B8();
}

uint64_t sub_24F85B944()
{
  return sub_24F8CFF80();
}

uint64_t SQLRequest.adapter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7786CC(v1, a1);
}

uint64_t SQLRequest.adapter.setter(uint64_t a1)
{
  return sub_24F7AC1D0(a1, v1);
}

uint64_t (*SQLRequest.adapter.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLRequest.init(sql:arguments:adapter:cached:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24F8DDBF0;
  v16[0] = a1;
  v16[1] = a2;
  long long v17 = *a3;
  sub_24F7725D4(v16);
  sub_24F76C344((uint64_t)v16, v12 + 32);
  sub_24F7786CC(a4, (uint64_t)v15);
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  if (a5) {
    char v13 = 0;
  }
  else {
    char v13 = 2;
  }
  *(void *)(a6 + 32) = 0;
  *(void *)(a6 + 40) = v12;
  sub_24F7AC1D0((uint64_t)v15, a6);
  *(unsigned char *)(a6 + 48) = v13;
  return sub_24F7783C0(a4, &qword_26B1F7F10);
}

uint64_t SQLRequest.init(literal:adapter:cached:)()
{
  sub_24F77EADC();
  sub_24F7786CC(v1, (uint64_t)v6);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  if (v0) {
    char v4 = 0;
  }
  else {
    char v4 = 2;
  }
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = v3;
  sub_24F7AC1D0((uint64_t)v6, v2);
  *(unsigned char *)(v2 + 48) = v4;
  return sub_24F7783C0(v1, &qword_26B1F7F10);
}

uint64_t SQLRequest.sqlSubquery.getter@<X0>(uint64_t a1@<X8>)
{
  v4[0] = *(void *)(v1 + 40);
  sub_24F850184((uint64_t)v4);
  sub_24F7AA6E8((uint64_t)v4, a1);
  return swift_bridgeObjectRetain();
}

uint64_t SQLRequest.fetchCount(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = MEMORY[0x263F8EE78];
  sub_24F7662F0();
  uint64_t v8 = v7;
  uint64_t v25 = v7;
  uint64_t v9 = MEMORY[0x263F8EE80];
  if (((unint64_t)"QL with empty selection" & 0x2000000000000000) == 0
    || (((unint64_t)"QL with empty selection" >> 56) & 0xF) != 0)
  {
    unint64_t v10 = *(void *)(v7 + 16);
    if (v10 >= *(void *)(v7 + 24) >> 1)
    {
      sub_24F7662F0();
      uint64_t v8 = v20;
    }
    unint64_t v21 = 0xD000000000000016;
    unint64_t v22 = 0x800000024F8D2A70;
    uint64_t v23 = v6;
    uint64_t v11 = MEMORY[0x263F8EE80];
    uint64_t v24 = MEMORY[0x263F8EE80];
    sub_24F7725D4(&v21);
    *(void *)(v8 + 16) = v10 + 1;
    uint64_t v9 = v11;
    sub_24F76C344((uint64_t)&v21, v8 + 184 * v10 + 32);
    uint64_t v25 = v8;
  }
  SQLInterpolation.appendInterpolation<A>(_:)(v4, a2, (uint64_t)&protocol witness table for SQLRequest<A>);
  uint64_t v12 = v25;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F7662F0();
    uint64_t v12 = v18;
  }
  unint64_t v13 = *(void *)(v12 + 16);
  if (v13 >= *(void *)(v12 + 24) >> 1)
  {
    sub_24F7662F0();
    uint64_t v12 = v19;
  }
  unint64_t v21 = 41;
  unint64_t v22 = 0xE100000000000000;
  uint64_t v23 = v6;
  uint64_t v24 = v9;
  sub_24F7725D4(&v21);
  *(void *)(v12 + 16) = v13 + 1;
  sub_24F76C344((uint64_t)&v21, v12 + 184 * v13 + 32);
  sub_24F7AA964(&v21, v12);
  uint64_t v15 = sub_24F7ABB4C();
  if (v3)
  {
    sub_24F7783C0((uint64_t)&v21, &qword_269A2A1B0);
    return v15;
  }
  char v16 = v14;
  uint64_t result = sub_24F7783C0((uint64_t)&v21, &qword_269A2A1B0);
  if ((v16 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t SQLRequest.makePreparedRequest(_:forSingleResult:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  type metadata accessor for StatementArgumentsSink();
  swift_allocObject();
  swift_retain();
  uint64_t v7 = sub_24F778A30(0);
  unint64_t v8 = MEMORY[0x263F8EE78];
  sub_24F778B08();
  sub_24F773CDC();
  type metadata accessor for SQLGenerationContext();
  swift_allocObject();
  uint64_t v9 = sub_24F779224(a1, v7, v8);
  swift_retain();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_24F76BCC0(v10, (uint64_t)v9);
  if (v3)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v21[0] = v11;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  uint64_t v12 = sub_24F8CED30();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v15 = *(unsigned __int8 *)(v4 + 48);
  if (v15 == 2)
  {
    uint64_t v16 = sub_24F87F808(v12, v14, 0);
  }
  else if (v15)
  {
    uint64_t v16 = sub_24F772E94(v12, v14);
  }
  else
  {
    uint64_t v16 = Database.cachedStatement(sql:)(v12, v14);
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_24F778A9C(v21);
  v22[0] = v21[0];
  v22[1] = v21[1];
  v18.values._rawValue = v22;
  Statement.setArguments(_:)(v18);
  if (v19)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7786CC(v4, (uint64_t)v21);
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(void *)(a2 + 56) = 0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(void *)a2 = v17;
  sub_24F7AC1D0((uint64_t)v21, a2 + 8);
  sub_24F787238(*(void *)(a2 + 48));
  uint64_t result = swift_release();
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_24F85BFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SQLRequest.makePreparedRequest(_:forSingleResult:)(a1, a2);
}

uint64_t sub_24F85BFEC(uint64_t a1, uint64_t a2)
{
  return SQLRequest.fetchCount(_:)(a1, a2);
}

uint64_t _s12GRDBInternal10SQLRequestV20unicodeScalarLiteralACyxGSS_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  long long v4 = MEMORY[0x263F8EE78];
  return SQLRequest.init(sql:arguments:adapter:cached:)(a1, a2, &v4, (uint64_t)v5, 0, a3);
}

uint64_t sub_24F85C060()
{
  return SQLRequest.init(stringInterpolation:)();
}

uint64_t sub_24F85C068(void *a1)
{
  return SQLRequest.init(stringLiteral:)(*a1, a1[1]);
}

uint64_t sub_24F85C074()
{
  return swift_getWitnessTable();
}

unint64_t sub_24F85C094()
{
  unint64_t result = qword_269A2BB90[0];
  if (!qword_269A2BB90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269A2BB90);
  }
  return result;
}

uint64_t sub_24F85C0E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F85C0FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F85C118()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_24F85C124()
{
  return MEMORY[0x263F8D390];
}

uint64_t sub_24F85C130(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    _s12GRDBInternal13DatabaseEventVwxx_0(a1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F85C174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24F85C204(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s12GRDBInternal13DatabaseEventVwxx_0(a1);
    goto LABEL_7;
  }
  sub_24F7A2320((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

__n128 sub_24F85C2CC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_24F85C2E8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    _s12GRDBInternal13DatabaseEventVwxx_0(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t sub_24F85C340(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F85C380(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SQLRequest()
{
  return sub_24F777DE0();
}

uint64_t getEnumTagSinglePayload for SharedValueObservationExtent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_24F85C470(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F85C53CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24F85C564(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

uint64_t type metadata accessor for SQLRequest.Cache()
{
  return sub_24F777DE0();
}

uint64_t sub_24F85C588()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F85C5A4(uint64_t a1)
{
  sub_24F79138C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(_WORD *)(a1 + 160));
  return a1;
}

BOOL static SharedValueObservationExtent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SharedValueObservationExtent.hash(into:)()
{
  return sub_24F8CFF40();
}

uint64_t SharedValueObservationExtent.hashValue.getter()
{
  return sub_24F8CFF80();
}

uint64_t ValueObservation.shared(in:scheduling:extent:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  unsigned int v6 = v5;
  char v11 = *a4;
  memcpy(__dst, v6, sizeof(__dst));
  uint64_t v14 = a5 + 16;
  uint64_t v12 = *(void *)(a5 + 16);
  uint64_t v13 = *(void *)(v14 + 8);
  swift_getAssociatedTypeWitness();
  type metadata accessor for SharedValueObservation();
  char v17 = v11;
  int v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v12;
  v15[3] = v13;
  memcpy(v15 + 4, v6, 0x70uLL);
  v15[18] = a1;
  v15[19] = a2;
  v15[20] = a3;
  swift_retain_n();
  sub_24F7DEC98(__dst);
  swift_unknownObjectRetain();
  return sub_24F85C968(a3, &v17, (uint64_t)sub_24F85C934, (uint64_t)v15);
}

uint64_t type metadata accessor for SharedValueObservation()
{
  return sub_24F777DE0();
}

void sub_24F85C7D8(int a1, int a2, int a3, int a4, void *__src, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  memcpy(v10, __src, sizeof(v10));
  type metadata accessor for ValueObservation();
  ValueObservation.start(in:scheduling:onError:onChange:)();
}

uint64_t sub_24F85C88C()
{
  if (v0[4]) {
    swift_release();
  }
  if (v0[6]) {
    swift_release();
  }
  if (v0[8]) {
    swift_release();
  }
  if (v0[10]) {
    swift_release();
  }
  if (v0[12]) {
    swift_release();
  }
  if (v0[15] >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_24F85C934(int a1, int a2, int a3, int a4)
{
  sub_24F85C7D8(a1, a2, a3, a4, v4 + 4, v4[18], v4[19], v4[20], v4[2], v4[3]);
}

uint64_t sub_24F85C968(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  return sub_24F85CA24(a1, a2, a3, a4);
}

uint64_t sub_24F85C9CC()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_24F85C9F4()
{
  uint64_t v0 = sub_24F85C9CC();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_24F85CA24(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v8 = *a2;
  *(void *)(v4 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AE0]), sel_init);
  *(unsigned char *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = 0;
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 144);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v10 = sub_24F8CFF90();
  sub_24F7771BC(v9, 1, 1, v10);
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = v8;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = a4;
  type metadata accessor for SharedValueObservation.Client();
  *(void *)(v4 + 56) = sub_24F8CF110();
  return v4;
}

id SharedValueObservation.start(onError:onChange:)()
{
  return sub_24F85D56C((void (*)(id))sub_24F85D1F0);
}

uint64_t sub_24F85CB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  void (*v28)(void *__return_ptr, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t result;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t *v70;
  void v71[3];
  uint64_t v72;
  uint64_t v73;
  void *v74;

  uint64_t v70 = a6;
  uint64_t v11 = *(void *)(*(void *)a1 + 80);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v12 = sub_24F8CFF90();
  uint64_t v13 = sub_24F8CF610();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v65 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int v63 = (char *)&v56 - v15;
  uint64_t v67 = v12;
  int v62 = *(void *)(v12 - 8);
  uint64_t v16 = *(void *)(v62 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  int v61 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v56 - v18;
  LODWORD(v68) = *(unsigned __int8 *)(a1 + 64);
  uint64_t v66 = v11;
  type metadata accessor for SharedValueObservation.Client();
  int v59 = a2;
  int v60 = a4;
  uint64_t v20 = sub_24F82F114(a2, a3, a4, a5);
  int v74 = v20;
  swift_beginAccess();
  sub_24F8CF1B0();
  swift_retain();
  swift_retain();
  uint64_t v69 = v20;
  swift_retain();
  sub_24F8CF170();
  swift_endAccess();
  *(unsigned char *)(a1 + 64) = 1;
  if (v68)
  {
    int v57 = v16;
    int v58 = a5;
    unint64_t v21 = v61;
    uint64_t v22 = v62;
    uint64_t v68 = a3;
    uint64_t v23 = a1 + *(void *)(*(void *)a1 + 144);
    swift_beginAccess();
    uint64_t v25 = (uint64_t)v63;
    uint64_t v24 = v64;
    uint64_t v26 = v23;
    uint64_t v27 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v26, v65);
    if (sub_24F777048(v25, 1, v67) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v27);
    }
    else
    {
      uint64_t v64 = *(void *)(v22 + 32);
      int v56 = v19;
      uint64_t v41 = v25;
      uint64_t v42 = v67;
      ((void (*)(char *, uint64_t, uint64_t))v64)(v19, v41, v67);
      uint64_t v65 = *(void *)(a1 + 16);
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v21, v19, v42);
      uint64_t v43 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v44 = (v57 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v66;
      ((void (*)(unint64_t, char *, uint64_t))v64)(v45 + v43, v21, v42);
      uint64_t v46 = (uint64_t *)(v45 + v44);
      unint64_t v47 = v58;
      uint64_t v48 = v68;
      *uint64_t v46 = v59;
      v46[1] = v48;
      unint64_t v49 = (uint64_t *)(v45 + ((v44 + 23) & 0xFFFFFFFFFFFFFFF8));
      *unint64_t v49 = v60;
      v49[1] = v47;
      swift_retain();
      swift_retain();
      sub_24F8C2E68((uint64_t (*)(void))sub_24F85E5AC, v45);
      swift_release();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v56, v42);
    }
  }
  else
  {
    uint64_t v68 = type metadata accessor for AnyDatabaseCancellable();
    int v28 = *(void (**)(void *__return_ptr, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(), uint64_t))(a1 + 32);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = swift_allocObject();
    id v31 = v66;
    *(void *)(v30 + 16) = v66;
    *(void *)(v30 + 24) = v29;
    unint64_t v32 = swift_allocObject();
    swift_weakInit();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    *(void *)(v33 + 24) = v32;
    swift_retain();
    swift_retain();
    v28(v71, sub_24F85E3D8, v30, sub_24F85E3E0, v33);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v34 = v72;
    unint64_t v35 = v73;
    unint64_t v36 = sub_24F798FB4((uint64_t)v71, v72);
    MEMORY[0x270FA5388](v36);
    uint64_t v38 = (char *)&v56 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v39 + 16))(v38);
    uint64_t v40 = sub_24F83BFA8((uint64_t)v38, v68, v34, v35);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v71);
    *(void *)(a1 + 72) = v40;
    swift_release();
  }
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v69;
  *(void *)(v50 + 16) = a1;
  *(void *)(v50 + 24) = v51;
  uint64_t v52 = type metadata accessor for AnyDatabaseCancellable();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v53 = AnyDatabaseCancellable.init(cancel:)((uint64_t)sub_24F85E428, v50);
  uint64_t v54 = v70;
  v70[3] = v52;
  v54[4] = (uint64_t)&protocol witness table for AnyDatabaseCancellable;
  __n128 result = swift_release();
  *uint64_t v54 = v53;
  return result;
}

uint64_t sub_24F85D1F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F85CB90(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_24F85D214(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24F85D524(a1, (void (*)(id))sub_24F85E6C0);
    return swift_release();
  }
  return result;
}

uint64_t sub_24F85D288()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24F85D2E8();
    return swift_release();
  }
  return result;
}

id sub_24F85D2E8()
{
  return sub_24F85D56C((void (*)(id))sub_24F85E6A4);
}

void sub_24F85D33C(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v13 = sub_24F8CFF90();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v18 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = (void *)*v15;
    a2(*v15);
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v10 + 32))(v12, v15, a6);
    a4(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a6);
  }
}

id sub_24F85D524(uint64_t a1, void (*a2)(id))
{
  return sub_24F85D56C(a2);
}

id sub_24F85D56C(void (*a1)(id))
{
  a1(objc_msgSend(*(id *)(v1 + 48), sel_lock));
  return objc_msgSend(*(id *)(v1 + 48), sel_unlock);
}

uint64_t SharedValueObservation.publisher()@<X0>(void *a1@<X8>)
{
  sub_24F7DFD8C((uint64_t)j_j___s12GRDBInternal22SharedValueObservationC5start7onError0F6ChangeAA19DatabaseCancellable_pys0G0_pc_yxctF, v1, a1);
  return swift_retain();
}

uint64_t sub_24F85D63C(uint64_t a1, void *a2)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v4 = sub_24F8CFF90();
  uint64_t v5 = sub_24F8CF610();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (void *)((char *)v18 - v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = type metadata accessor for SharedValueObservation.Client();
  swift_bridgeObjectRetain();
  *(void *)(a1 + 56) = sub_24F8CF110();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 24) == 1)
  {
    *(unsigned char *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    swift_release();
    sub_24F7771BC((uint64_t)v8, 1, 1, v4);
    uint64_t v11 = a1 + *(void *)(*(void *)a1 + 144);
    swift_beginAccess();
  }
  else
  {
    *char v8 = a2;
    swift_storeEnumTagMultiPayload();
    sub_24F7771BC((uint64_t)v8, 0, 1, v4);
    uint64_t v11 = a1 + *(void *)(*(void *)a1 + 144);
    swift_beginAccess();
    id v12 = a2;
  }
  (*(void (**)(uint64_t, void *, uint64_t))(v6 + 40))(v11, v8, v5);
  swift_endAccess();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24F8CF090();
  swift_bridgeObjectRelease();
  for (v18[0] = v13; v13 != MEMORY[0x2533639D0](v9, v10); uint64_t v13 = v18[0])
  {
    char v15 = sub_24F8CF130();
    sub_24F8CF0D0();
    if (v15)
    {
      uint64_t v16 = *(void *)(v9 + 32 + 8 * v13);
      swift_retain();
    }
    else
    {
      uint64_t v16 = sub_24F8CF800();
    }
    swift_bridgeObjectRetain();
    MEMORY[0x2533639F0](v18, v9, v10);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(void *))(v16 + 16);
    swift_retain();
    v17(a2);
    swift_release();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F85D960(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*a1 + 80);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v5 = sub_24F8CFF90();
  uint64_t v6 = sub_24F8CF610();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&i - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))((char *)&i - v8, a2, v4);
  swift_storeEnumTagMultiPayload();
  sub_24F7771BC((uint64_t)v9, 0, 1, v5);
  uint64_t v10 = (char *)a1 + *(void *)(*a1 + 144);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v10, v9, v6);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v11 = a1[7];
  uint64_t v12 = type metadata accessor for SharedValueObservation.Client();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24F8CF090();
  for (i = v13; v13 != MEMORY[0x2533639D0](v11, v12); uint64_t v13 = i)
  {
    char v15 = sub_24F8CF130();
    sub_24F8CF0D0();
    if (v15)
    {
      uint64_t v16 = *(void *)(v11 + 32 + 8 * v13);
      swift_retain();
    }
    else
    {
      uint64_t v16 = sub_24F8CF800();
    }
    swift_bridgeObjectRetain();
    MEMORY[0x2533639F0](&i, v11, v12);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(uint64_t))(v16 + 32);
    swift_retain();
    v17(a2);
    swift_release();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F85DC18(uint64_t a1, uint64_t a2)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v4 = sub_24F8CFF90();
  uint64_t v5 = sub_24F8CF610();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - v7;
  swift_beginAccess();
  uint64_t v9 = sub_24F8CF1B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24F83C56C((uint64_t)sub_24F85E694, a2, v9, WitnessTable);
  swift_endAccess();
  v13[1] = *(void *)(a1 + 56);
  swift_getWitnessTable();
  uint64_t result = sub_24F8CF410();
  if ((result & 1) != 0 && *(unsigned char *)(a1 + 24) == 1)
  {
    *(unsigned char *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    swift_release();
    sub_24F7771BC((uint64_t)v8, 1, 1, v4);
    uint64_t v12 = a1 + *(void *)(*(void *)a1 + 144);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v12, v8, v5);
    return swift_endAccess();
  }
  return result;
}

id *SharedValueObservation.deinit()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 18);
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F8CFF90();
  uint64_t v2 = sub_24F8CF610();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SharedValueObservation.__deallocating_deinit()
{
  SharedValueObservation.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t SharedValueObservation.values(bufferingPolicy:)(uint64_t a1)
{
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v2 = sub_24F8CF240();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - v3, a1);
  sub_24F7DEC08();
  return swift_retain();
}

unint64_t sub_24F85E0E0()
{
  unint64_t result = qword_269A2BC20[0];
  if (!qword_269A2BC20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269A2BC20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharedValueObservationExtent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F85E1F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedValueObservationExtent()
{
  return &type metadata for SharedValueObservationExtent;
}

uint64_t sub_24F85E230()
{
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F8CFF90();
  uint64_t result = sub_24F8CF610();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for SharedValueObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SharedValueObservation);
}

uint64_t type metadata accessor for SharedValueObservation.Client()
{
  return sub_24F777DE0();
}

uint64_t sub_24F85E368()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24F85E3A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F85E3D8(uint64_t a1)
{
  return sub_24F85D214(a1);
}

uint64_t sub_24F85E3E0()
{
  return sub_24F85D288();
}

uint64_t sub_24F85E3E8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_24F85E428()
{
  return sub_24F85D524(*(void *)(v0 + 24), (void (*)(id))sub_24F85E678);
}

uint64_t sub_24F85E464()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v2 = *(void *)(sub_24F8CFF90() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  if (swift_getEnumCaseMultiPayload() == 1) {

  }
  else {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_24F85E5AC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v2 = *(void *)(sub_24F8CFF90() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  unsigned int v6 = *(void (**)(void))(v0 + v4);
  uint64_t v7 = *(void *)(v0 + v4 + 8);
  uint64_t v8 = v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(char *))v8;
  uint64_t v10 = *(void *)(v8 + 8);
  sub_24F85D33C(v5, v6, v7, v9, v10, v1);
}

uint64_t sub_24F85E678()
{
  return sub_24F85DC18(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

BOOL sub_24F85E694(void *a1)
{
  return *a1 == v1;
}

uint64_t sub_24F85E6A4()
{
  return sub_24F85D960(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24F85E6C0()
{
  return sub_24F85D63C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t type metadata accessor for ReadWriteBox()
{
  return sub_24F777DE0();
}

GRDBInternal::Column __swiftcall Column.init(_:)(GRDBInternal::Column result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t ColumnExpression.sqlExpression.getter()
{
  sub_24F77F818();
  v4[0] = v1();
  v4[1] = v2;
  sub_24F7991DC((uint64_t)v4);
  return sub_24F76F710((uint64_t)v4, v0);
}

uint64_t ColumnExpression.detached.getter()
{
  sub_24F77F818();
  v1();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24F8DDBF0;
  v4[0] = 34;
  v4[1] = 0xE100000000000000;
  void v4[2] = MEMORY[0x263F8EE78];
  v4[3] = MEMORY[0x263F8EE80];
  sub_24F7725D4(v4);
  sub_24F76C344((uint64_t)v4, v2 + 32);
  v5[0] = v2;
  sub_24F7A45A0((uint64_t)v5);
  return sub_24F76F710((uint64_t)v5, v0);
}

void static ColumnExpression<>.rowID.getter(void *a1@<X8>)
{
  *a1 = 0x6469776F72;
  a1[1] = 0xE500000000000000;
}

uint64_t Column.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Column.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Column.name.modify())(void)
{
  return nullsub_1;
}

uint64_t Column.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24F7811D0(a1, a1[3]);
  *a2 = sub_24F8CFFE0();
  a2[1] = v4;
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)a1);
}

uint64_t static Column.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24F8CFD00();
  }
}

uint64_t sub_24F85E968@<X0>(uint64_t a1@<X8>)
{
  return sub_24F81BBB0(*v1, v1[1], a1);
}

uint64_t ColumnExpression<>.name.getter()
{
  sub_24F8CF060();
  return v1;
}

uint64_t dispatch thunk of ColumnExpression.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for Column()
{
  return &type metadata for Column;
}

uint64_t sub_24F85E9C4@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(a3, v3);
  uint64_t result = a1(a3);
  if (v4) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a3, a2);
  }
  return result;
}

void static FTS5CustomTokenizer.tokenizerDescriptor(arguments:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_24F781274((uint64_t *)&unk_26B1F7C88);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24F8DDBF0;
  *(void *)(v6 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  *(void *)(v6 + 40) = v7;
  swift_bridgeObjectRetain();
  sub_24F792AE8();
  if (*(void *)(v6 + 16))
  {
    *a3 = v6;
  }
  else
  {
    sub_24F8CF9D0();
    __break(1u);
  }
}

uint64_t Database.add<A>(tokenizer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v23[3] = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_24F7CF11C(v3);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  _s24FTS5TokenizerConstructorCMa();
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v3;
  v8[3] = sub_24F85EEFC;
  v8[4] = v7;
  v23[0] = sub_24F85F180;
  v23[1] = sub_24F85F184;
  void v23[2] = sub_24F85F188;
  swift_retain();
  swift_retain();
  sub_24F85F18C((uint64_t)v23, v6, (uint64_t)v8, a2, a3, &v18);
  int v9 = v18;
  if (!v18) {
    return swift_release();
  }
  uint64_t v11 = (uint64_t)Database.lastErrorMessage.getter();
  if (!v12)
  {
    if (!sqlite3_errstr(v9)) {
      __break(1u);
    }
    uint64_t v11 = sub_24F8CEED0();
  }
  int v18 = v9;
  *(void *)&long long v19 = v11;
  *((void *)&v19 + 1) = v12;
  long long v20 = 0u;
  long long v21 = 0u;
  char v22 = 0;
  swift_bridgeObjectRetain();
  sub_24F777E70(0);
  sub_24F7DC6DC();
  if (sub_24F8CFCC0())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F77835C(0);
  }
  else
  {
    swift_allocError();
    char v13 = v22;
    long long v14 = v19;
    long long v15 = v20;
    long long v16 = v21;
    *(_DWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 8) = v14;
    *(_OWORD *)(v17 + 24) = v15;
    *(_OWORD *)(v17 + 40) = v16;
    *(unsigned char *)(v17 + 56) = v13;
  }
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_24F85EDC8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (!a3) {
    return 1;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v11 = v10(a1, a2, a4, a5);
  uint64_t v12 = 0;
  *a3 = v11;
  return v12;
}

uint64_t sub_24F85EEEC()
{
  return swift_deallocObject();
}

uint64_t sub_24F85EEFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_24F85EDC8(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t _s24FTS5TokenizerConstructorCMa()
{
  return self;
}

uint64_t sub_24F85EF28(uint64_t a1, void *a2, int a3, uint64_t a4)
{
  if (!a1) {
    return 1;
  }
  uint64_t result = swift_retain();
  if (!a2) {
    goto LABEL_14;
  }
  if ((a3 & 0x80000000) == 0)
  {
    if (a3)
    {
      uint64_t v9 = a3;
      uint64_t v10 = MEMORY[0x263F8EE78];
      do
      {
        if (*a2++)
        {
          uint64_t v12 = sub_24F8CEED0();
          uint64_t v14 = v13;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24F787184();
            uint64_t v10 = v17;
          }
          unint64_t v15 = *(void *)(v10 + 16);
          if (v15 >= *(void *)(v10 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v10 = v18;
          }
          *(void *)(v10 + 16) = v15 + 1;
          uint64_t v16 = v10 + 16 * v15;
          *(void *)(v16 + 32) = v12;
          *(void *)(v16 + 40) = v14;
        }
        --v9;
      }
      while (v9);
      goto LABEL_15;
    }
LABEL_14:
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_15:
    long long v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 24);
    swift_retain();
    uint64_t v20 = swift_retain();
    uint64_t v21 = v19(v20, v10, a4);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F85F084(uint64_t result)
{
  if (result) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24F85F090(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a1) {
    return 1;
  }
  swift_unknownObjectRetain_n();
  swift_getObjectType();
  uint64_t result = sub_24F76AE28(a1);
  if (!result)
  {
    swift_unknownObjectRelease_n();
    return 1;
  }
  int v17 = a3;
  if (a6)
  {
    uint64_t v14 = v13;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = (*(uint64_t (**)(uint64_t, int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(a2, &v17, a4, a5, a6, ObjectType, v14);
    swift_unknownObjectRelease_n();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F85F18C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _DWORD *a6@<X8>)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)()))(a2 + 8);
  if (v6)
  {
    uint64_t v9 = result;
    (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
    uint64_t v11 = sub_24F8CEE30();
    swift_bridgeObjectRelease();
    int v12 = v6(a2, v11 + 32, a3, v9, sub_24F85F288);
    uint64_t result = swift_release();
    *a6 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of static FTS5CustomTokenizer.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FTS5CustomTokenizer.init(db:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_24F85F28C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_24F77C4AC();
      }
      v4 += 5;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24F85F364(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v27 = v4;
  uint64_t v28 = result;
  int64_t v26 = v8;
  while (1)
  {
LABEL_4:
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (i << 6);
    }
    else
    {
      int64_t v13 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_41;
      }
      if (v13 >= v8)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        swift_release();
        return 0;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v13);
      ++i;
      if (!v14)
      {
        int64_t i = v13 + 1;
        if (v13 + 1 >= v8) {
          goto LABEL_39;
        }
        unint64_t v14 = *(void *)(v4 + 8 * i);
        if (!v14)
        {
          int64_t i = v13 + 2;
          if (v13 + 2 >= v8) {
            goto LABEL_39;
          }
          unint64_t v14 = *(void *)(v4 + 8 * i);
          if (!v14)
          {
            int64_t i = v13 + 3;
            if (v13 + 3 >= v8) {
              goto LABEL_39;
            }
            unint64_t v14 = *(void *)(v4 + 8 * i);
            if (!v14)
            {
              int64_t v15 = v13 + 4;
              if (v15 >= v8) {
                goto LABEL_39;
              }
              unint64_t v14 = *(void *)(v4 + 8 * v15);
              for (int64_t i = v15; !v14; ++v15)
              {
                int64_t i = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_42;
                }
                if (i >= v8) {
                  goto LABEL_39;
                }
                unint64_t v14 = *(void *)(v4 + 8 * i);
              }
            }
          }
        }
      }
      unint64_t v7 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (i << 6);
    }
    uint64_t v16 = a2[2];
    if (!v16) {
      goto LABEL_38;
    }
    int v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v12);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t result = a2[4];
    if (result != *v17 || a2[5] != v19)
    {
      uint64_t result = sub_24F8CFD00();
      if ((result & 1) == 0) {
        break;
      }
    }
  }
  if (v16 == 1)
  {
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v21 = a2 + 7;
  uint64_t v22 = 1;
  while (1)
  {
    uint64_t v23 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    uint64_t result = *(v21 - 1);
    uint64_t v24 = *v21;
    v21 += 2;
    BOOL v25 = result == v18 && v24 == v19;
    if (v25 || (uint64_t result = sub_24F8CFD00(), (result & 1) != 0))
    {
      uint64_t v4 = v27;
      uint64_t v3 = v28;
      int64_t v8 = v26;
      goto LABEL_4;
    }
    ++v22;
    if (v23 == v16) {
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_24F85F590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = a1 + 40;
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v16 = a1 + 40;
    do
    {
      int64_t v8 = (uint64_t *)(v6 + 16 * v5);
      unint64_t v9 = v5;
      while (1)
      {
        if (v9 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v11 = *(v8 - 1);
        uint64_t v10 = *v8;
        unint64_t v5 = v9 + 1;
        swift_bridgeObjectRetain();
        sub_24F80E164(v11, v10, a2);
        if (v12) {
          break;
        }
        swift_bridgeObjectRelease();
        v8 += 2;
        ++v9;
        if (v4 == v5) {
          goto LABEL_13;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24F77C4AC();
      }
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v14 = v13 + 1;
      if (v13 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F77C4AC();
        unint64_t v14 = v13 + 1;
      }
      *(void *)(v7 + 16) = v14;
      uint64_t v15 = v7 + 16 * v13;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v10;
      uint64_t v6 = v16;
    }
    while (v4 - 1 != v9);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_24F85F6F8(uint64_t result, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = result;
  uint64_t v22 = *(void *)(result + 16);
  if (v22)
  {
    unint64_t v4 = 0;
    uint64_t v21 = result + 32;
    uint64_t v19 = a2 + 7;
    uint64_t v20 = MEMORY[0x263F8EE78];
    while (1)
    {
      while (1)
      {
        if (v4 >= *(void *)(v3 + 16))
        {
LABEL_30:
          __break(1u);
          return result;
        }
        uint64_t v5 = v21 + 40 * v4;
        uint64_t v6 = *(void *)v5;
        uint64_t v7 = *(void *)(v5 + 8);
        char v23 = *(unsigned char *)(v5 + 16);
        long long v24 = *(_OWORD *)(v5 + 24);
        ++v4;
        int64_t v8 = v2;
        uint64_t v9 = v2[2];
        if (v9) {
          break;
        }
LABEL_21:
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v15 = v20;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_24F796110(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v15 = v20;
        }
        unint64_t v17 = *(void *)(v15 + 16);
        unint64_t v16 = *(void *)(v15 + 24);
        uint64_t v2 = v8;
        if (v17 >= v16 >> 1)
        {
          uint64_t result = sub_24F796110(v16 > 1, v17 + 1, 1);
          uint64_t v15 = v20;
        }
        *(void *)(v15 + 16) = v17 + 1;
        uint64_t v20 = v15;
        uint64_t v18 = v15 + 40 * v17;
        *(void *)(v18 + 32) = v6;
        *(void *)(v18 + 40) = v7;
        *(unsigned char *)(v18 + 48) = v23;
        *(_OWORD *)(v18 + 56) = v24;
        if (v4 == v22) {
          goto LABEL_28;
        }
      }
      uint64_t result = v2[4];
      if (result != v6 || v2[5] != v7)
      {
        uint64_t result = sub_24F8CFD00();
        if ((result & 1) == 0)
        {
          if (v9 != 1)
          {
            uint64_t v11 = v19;
            uint64_t v12 = 1;
            while (1)
            {
              uint64_t v13 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                break;
              }
              uint64_t result = *(v11 - 1);
              if (result == v6 && *v11 == v7) {
                goto LABEL_10;
              }
              uint64_t result = sub_24F8CFD00();
              if (result) {
                goto LABEL_10;
              }
              v11 += 2;
              ++v12;
              if (v13 == v9) {
                goto LABEL_21;
              }
            }
            __break(1u);
            goto LABEL_30;
          }
          goto LABEL_21;
        }
      }
LABEL_10:
      uint64_t v2 = v8;
      if (v4 == v22) {
        goto LABEL_28;
      }
    }
  }
  uint64_t v20 = MEMORY[0x263F8EE78];
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_24F85F910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v11 = *v4;
  *((unsigned char *)v4 + 24) = 0;
  void v4[2] = a1;
  uint64_t v12 = v11;
  sub_24F8630FC(a4, (uint64_t)&v19, &qword_26B1F7F10);
  if (!v20)
  {
    swift_retain();
    sub_24F7783C0((uint64_t)&v19, &qword_26B1F7F10);
    *((_DWORD *)v6 + 7) = 0;
    goto LABEL_8;
  }
  uint64_t v25 = v12;
  sub_24F794DE0(&v19, (uint64_t)v22);
  uint64_t v13 = v23;
  uint64_t v14 = v24;
  sub_24F7811D0(v22, v23);
  uint64_t v20 = type metadata accessor for Statement();
  uint64_t v21 = &protocol witness table for Statement;
  *(void *)&long long v19 = a1;
  swift_retain_n();
  uint64_t v15 = sub_24F7E5F3C(0, (uint64_t)&v19, v13, v14);
  if (v5)
  {
    sub_24F77835C(a2);
    swift_release();
    sub_24F7783C0(a4, &qword_26B1F7F10);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v19);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v22);
    swift_release();
    swift_deallocPartialClassInstance();
    return (uint64_t)v6;
  }
  uint64_t v17 = (uint64_t)v15;
  uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v19);
  if (v17 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v17 <= 0x7FFFFFFF)
  {
    *((_DWORD *)v6 + 7) = v17;
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v22);
LABEL_8:
    v22[0] = a2;
    v22[1] = a3;
    sub_24F77C958(v22, v16);
    swift_release();
    sub_24F7783C0(a4, &qword_26B1F7F10);
    sub_24F77835C(a2);
    if (v5) {
      swift_release();
    }
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F85FB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24F8630FC(a6, (uint64_t)v18, &qword_26B1F7F10);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DDBF0;
  v21[0] = a2;
  v21[1] = a3;
  v21[2] = a4;
  _OWORD v21[3] = a5;
  sub_24F7725D4(v21);
  sub_24F76C344((uint64_t)v21, v11 + 32);
  sub_24F8630FC((uint64_t)v18, (uint64_t)v17, &qword_26B1F7F10);
  long long v14 = 0u;
  long long v15 = 0u;
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7AC1D0((uint64_t)v17, (uint64_t)&v14);
  char v20 = 2;
  v19[0] = v14;
  v19[1] = v15;
  _OWORD v19[2] = v16;
  sub_24F7783C0((uint64_t)v18, &qword_26B1F7F10);
  uint64_t v12 = sub_24F85FC70(a1, (uint64_t)v19);
  sub_24F7783C0((uint64_t)v19, &qword_26B1F7D38);
  return v12;
}

uint64_t sub_24F85FC70(uint64_t a1, uint64_t a2)
{
  sub_24F7F9440(a1, (uint64_t)&v8);
  if (!v2)
  {
    sub_24F8630FC((uint64_t)&v9, (uint64_t)v7, &qword_26B1F7F10);
    sub_24F781274(&qword_26B1F7618);
    swift_allocObject();
    uint64_t v4 = swift_retain_n();
    uint64_t v6 = sub_24F85F910(v4, 0, 0, (uint64_t)v7);
    uint64_t v10 = MEMORY[0x263F8EE88];
    swift_beginAccess();
    if (*(unsigned char *)(v6 + 24) == 1)
    {
      swift_release();
      a2 = MEMORY[0x263F8EE88];
    }
    else
    {
      swift_retain();
      swift_retain();
      sub_24F899F34();
      swift_release();
      *(unsigned char *)(v6 + 24) = 1;
      swift_release();
      a2 = v10;
    }
    sub_24F7AD1E4((uint64_t)&v8);
    swift_release();
  }
  return a2;
}

uint64_t sub_24F85FDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)(a1 + 40);
    while (1)
    {
      BOOL v8 = *(v7 - 1) == a2 && *v7 == a3;
      if (v8 || (sub_24F8CFD00() & 1) != 0) {
        break;
      }
      v7 += 5;
      if (v4 == ++v6) {
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24F85FE9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_24F8CFD00();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_24F8CFD00() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24F85FF64(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v33 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v12)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (i << 6);
      int64_t v12 = i;
      goto LABEL_23;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v13 >= v32) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v13);
    int64_t v12 = i + 1;
    if (!v14)
    {
      int64_t v12 = i + 2;
      if (i + 2 >= v32) {
        goto LABEL_40;
      }
      unint64_t v14 = *(void *)(v33 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = i + 3;
        if (i + 3 >= v32) {
          goto LABEL_40;
        }
        unint64_t v14 = *(void *)(v33 + 8 * v12);
        if (!v14) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_23:
    if (!*(void *)(v4 + 16))
    {
      uint64_t v2 = 0;
      goto LABEL_41;
    }
    uint64_t v16 = v3;
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t v20 = sub_24F8CFF80();
    uint64_t v21 = v4;
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v23 = v20 & ~v22;
    sub_24F7800C8();
    if ((v24 & 1) == 0) {
      goto LABEL_38;
    }
    uint64_t v25 = *(void *)(v21 + 48);
    int64_t v26 = (void *)(v25 + 16 * v23);
    BOOL v27 = *v26 == v19 && v26[1] == v18;
    if (!v27 && (sub_24F8CFD00() & 1) == 0)
    {
      uint64_t v28 = ~v22;
      while (1)
      {
        uint64_t v23 = (v23 + 1) & v28;
        sub_24F7800C8();
        if ((v29 & 1) == 0) {
          break;
        }
        uint64_t v30 = (void *)(v25 + 16 * v23);
        BOOL v31 = *v30 == v19 && v30[1] == v18;
        if (v31 || (sub_24F8CFD00() & 1) != 0) {
          goto LABEL_37;
        }
      }
LABEL_38:
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
LABEL_41:
      sub_24F799004();
      return v2;
    }
LABEL_37:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v16;
    uint64_t v4 = v21;
  }
  int64_t v15 = i + 4;
  if (i + 4 >= v32)
  {
LABEL_40:
    uint64_t v2 = 1;
    goto LABEL_41;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14)
  {
    int64_t v12 = i + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

BOOL static DatabaseMigrator.ForeignKeyChecks.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DatabaseMigrator.ForeignKeyChecks.hash(into:)()
{
  return sub_24F8CFF40();
}

uint64_t DatabaseMigrator.ForeignKeyChecks.hashValue.getter()
{
  return sub_24F8CFF80();
}

uint64_t DatabaseMigrator.eraseDatabaseOnSchemaChange.getter()
{
  return *v0;
}

uint64_t DatabaseMigrator.eraseDatabaseOnSchemaChange.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*DatabaseMigrator.eraseDatabaseOnSchemaChange.modify())(void)
{
  return nullsub_1;
}

GRDBInternal::DatabaseMigrator __swiftcall DatabaseMigrator.init()()
{
  *(_WORD *)uint64_t v0 = 256;
  *(void *)(v0 + 8) = MEMORY[0x263F8EE78];
  return result;
}

GRDBInternal::DatabaseMigrator __swiftcall DatabaseMigrator.disablingDeferredForeignKeyChecks()()
{
  uint64_t v2 = *((void *)v1 + 1);
  *(_WORD *)uint64_t v0 = *v1;
  *(void *)(v0 + 8) = v2;
  __int16 v3 = swift_bridgeObjectRetain();
  result._migrations._rawValue = v4;
  result.eraseDatabaseOnSchemaChange = v3;
  result.defersForeignKeyChecks = HIBYTE(v3);
  return result;
}

uint64_t DatabaseMigrator.registerMigration(_:foreignKeyChecks:migrate:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  int v6 = *a3;
  if (*(unsigned char *)(v5 + 1)) {
    char v7 = 0;
  }
  else {
    char v7 = 2;
  }
  v10[0] = a1;
  v10[1] = a2;
  if (v6) {
    char v8 = 1;
  }
  else {
    char v8 = v7;
  }
  char v11 = v8;
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24F8603B4((uint64_t)v10);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_24F8603B4(uint64_t a1)
{
  __int16 v3 = (uint64_t *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v4 + 16);
  int v6 = (void *)MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24F77C4AC();
    int v6 = v18;
    char v7 = (uint64_t *)(v4 + 40);
    do
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      unint64_t v11 = v18[2];
      unint64_t v10 = v18[3];
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1) {
        sub_24F77C4AC();
      }
      v7 += 5;
      void v18[2] = v11 + 1;
      uint64_t v12 = &v18[2 * v11];
      v12[4] = v9;
      v12[5] = v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  char v13 = sub_24F85FE9C(*(void *)a1, *(void *)(a1 + 8), v6);
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_24F8CF7D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24F8CEE10();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CF9D0();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24F786C74();
    uint64_t v14 = *(void *)(*v3 + 16);
    sub_24F787004();
    uint64_t v15 = *v3;
    *(void *)(v15 + 16) = v14 + 1;
    uint64_t v16 = v15 + 40 * v14;
    long long v17 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v16 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v16 + 48) = v17;
    *(void *)(v16 + 64) = *(void *)(a1 + 32);
    *__int16 v3 = v15;
  }
}

uint64_t DatabaseMigrator.migrate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *((void *)v2 + 1);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    char v6 = v2[1];
    char v7 = *v2;
    uint64_t v8 = (uint64_t *)(v3 + 40 * v4);
    uint64_t v10 = *(v8 - 1);
    uint64_t v9 = *v8;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v19 = &v17;
    MEMORY[0x270FA5388](ObjectType);
    v13[16] = v7;
    v13[17] = v6;
    uint64_t v14 = v3;
    uint64_t v15 = v10;
    uint64_t v16 = v9;
    unint64_t v11 = *(void (**)(void (*)(), unsigned char *, uint64_t, uint64_t, uint64_t))(a2 + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    v11(sub_24F860878, v13, MEMORY[0x263F8EE60] + 8, ObjectType, a2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t DatabaseMigrator.migrate(_:upTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8 = *v4;
  char v9 = v4[1];
  uint64_t v10 = *((void *)v4 + 1);
  uint64_t ObjectType = swift_getObjectType();
  v13[16] = v8;
  v13[17] = v9;
  uint64_t v14 = v10;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  return (*(uint64_t (**)(void (*)(), unsigned char *, uint64_t, uint64_t, uint64_t))(a2 + 32))(sub_24F860878, v13, MEMORY[0x263F8EE60] + 8, ObjectType, a2);
}

void sub_24F8607A0(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  char v9 = a2;
  __int16 v11 = a2 & 0x100;
  if ((a2 & 1) == 0) {
    goto LABEL_2;
  }
  v12[0] = 0;
  char v14 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24F8A1CD0(&v14, a1, v11 | 1, a3, a1, (uint64_t)v12);
  if (!v5)
  {
    if (v12[0]) {
      sub_24F8A1F94();
    }
LABEL_2:
    v12[0] = v9 & 1;
    v12[1] = HIBYTE(v11);
    uint64_t v13 = a3;
    sub_24F8616F8(a1, a4, a5, a4);
  }
}

void sub_24F860878()
{
}

void sub_24F860890()
{
  sub_24F77E32C();
  if (v4) {
    __int16 v3 = 0;
  }
  sub_24F8607A0(v1, v3 | v2, *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_24F8608BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  int v9 = *v4;
  int v10 = v4[1];
  uint64_t v11 = *((void *)v4 + 1);
  if (v9 != 1) {
    goto LABEL_8;
  }
  v13[0] = 0;
  char v15 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v10) {
    __int16 v12 = 257;
  }
  else {
    __int16 v12 = 1;
  }
  sub_24F8A1CD0(&v15, a1, v12, v11, a1, (uint64_t)v13);
  if (!v5)
  {
    if (v13[0] == 1) {
      sub_24F8A1F94();
    }
LABEL_8:
    v13[0] = v9;
    v13[1] = v10;
    uint64_t v14 = v11;
    sub_24F8616F8(a1, a2, a3, a4);
  }
}

uint64_t DatabaseMigrator.asyncMigrate(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8 = *v4;
  char v9 = v4[1];
  uint64_t v10 = *((void *)v4 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v8;
  *(unsigned char *)(v12 + 17) = v9;
  *(void *)(v12 + 24) = v10;
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  uint64_t v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  v13(sub_24F860B90, v12, ObjectType, a2);
  return swift_release();
}

uint64_t sub_24F860A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void))
{
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    char v7 = (uint64_t *)(a3 + 40 * v6);
    unint64_t v8 = *(v7 - 1);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24F8608BC(a1, v8, v9, v10);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return a4(a1, 0);
}

uint64_t DatabaseMigrator.migrations.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_24F85F28C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void DatabaseMigrator.appliedMigrations(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = DatabaseMigrator.appliedIdentifiers(_:)(a1);
  if (!v2)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (v6)
    {
      uint64_t v14 = v4;
      uint64_t v15 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_24F77C4AC();
      uint64_t v7 = v15;
      unint64_t v8 = (uint64_t *)(v3 + 40);
      do
      {
        uint64_t v10 = *(v8 - 1);
        uint64_t v9 = *v8;
        unint64_t v12 = *(void *)(v15 + 16);
        unint64_t v11 = *(void *)(v15 + 24);
        swift_bridgeObjectRetain();
        if (v12 >= v11 >> 1) {
          sub_24F77C4AC();
        }
        v8 += 5;
        *(void *)(v15 + 16) = v12 + 1;
        uint64_t v13 = v15 + 16 * v12;
        *(void *)(v13 + 32) = v10;
        *(void *)(v13 + 40) = v9;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      uint64_t v5 = v14;
    }
    sub_24F85F590(v7, v5);
  }
}

uint64_t DatabaseMigrator.appliedIdentifiers(_:)(uint64_t a1)
{
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  uint64_t v3 = sub_24F85FB20(a1, 0xD000000000000026, 0x800000024F8D3DA0, MEMORY[0x263F8EE78], MEMORY[0x263F8EE80], (uint64_t)v9);
  uint64_t v4 = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F7783C0((uint64_t)v9, &qword_26B1F7F10);
    v5._uint64_t countAndFlagsBits = 0x67696D5F62647267;
    v5._object = (void *)0xEF736E6F69746172;
    Swift::Bool v6 = Database.tableExists(_:)(v5);
    if (v7)
    {
    }
    else if (!v6)
    {

      return MEMORY[0x263F8EE88];
    }
    swift_willThrow();
  }
  else
  {
    uint64_t v2 = v3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F7783C0((uint64_t)v9, &qword_26B1F7F10);
  }
  return v2;
}

void *DatabaseMigrator.completedMigrations(_:)(uint64_t a1)
{
  char v3 = v1[1];
  LOBYTE(v19) = *v1;
  BYTE1(v19) = v3;
  uint64_t v4 = &v19;
  DatabaseMigrator.appliedMigrations(_:)(a1);
  if (!v2)
  {
    Swift::Bool v6 = v5;
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_24F85F28C(v7);
    swift_bridgeObjectRelease();
    sub_24F860F8C(v6, v8);
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 + 16);
    if (v11)
    {
      uint64_t v19 = (void *)MEMORY[0x263F8EE78];
      sub_24F77C4AC();
      uint64_t v4 = v19;
      unint64_t v12 = (uint64_t *)(v10 + 40);
      do
      {
        uint64_t v14 = *(v12 - 1);
        uint64_t v13 = *v12;
        uint64_t v19 = v4;
        unint64_t v16 = v4[2];
        unint64_t v15 = v4[3];
        swift_bridgeObjectRetain();
        if (v16 >= v15 >> 1)
        {
          sub_24F77C4AC();
          uint64_t v4 = v19;
        }
        v12 += 4;
        void v4[2] = v16 + 1;
        uint64_t v17 = &v4[2 * v16];
        v17[4] = v14;
        v17[5] = v13;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v4;
}

void sub_24F860F8C(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a1[2];
  if (v4 && (uint64_t v5 = *(void *)(a2 + 16)) != 0)
  {
    uint64_t v7 = a1[4];
    uint64_t v6 = a1[5];
    swift_bridgeObjectRetain();
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v20 = v4 - 1;
    uint64_t v17 = v5 - 1;
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t v18 = v2;
    uint64_t v19 = a1;
    while (1)
    {
      uint64_t v11 = *(void *)(v2 + v9 * 8 + 32);
      uint64_t v12 = *(void *)(v2 + v9 * 8 + 40);
      BOOL v13 = v7 == v11 && v6 == v12;
      if (!v13 && (sub_24F8CFD00() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24F796130();
      }
      unint64_t v14 = *(void *)(v10 + 16);
      if (v14 >= *(void *)(v10 + 24) >> 1) {
        sub_24F796130();
      }
      *(void *)(v10 + 16) = v14 + 1;
      unint64_t v15 = (void *)(v10 + 32 * v14);
      void v15[4] = v7;
      v15[5] = v6;
      v15[6] = v11;
      v15[7] = v12;
      if (v20 == v8)
      {
LABEL_19:
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v2 = v18;
      if (v8 + 1 >= v19[2]) {
        break;
      }
      if (v17 == v8) {
        goto LABEL_19;
      }
      uint64_t v7 = v19[v9 + 6];
      uint64_t v6 = v19[v9 + 7];
      unint64_t v16 = *(void *)(v18 + 16);
      swift_bridgeObjectRetain();
      ++v8;
      v9 += 2;
      if (v8 >= v16) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t DatabaseMigrator.hasCompletedMigrations(_:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = DatabaseMigrator.completedMigrations(_:)(a1);
  if (!v2)
  {
    uint64_t v6 = sub_24F7E5EF4((uint64_t)v5);
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_24F7E5E74(v4, v13);
    sub_24F862CD0((uint64_t)v13, (uint64_t)&v14);
    uint64_t v9 = v15;
    if (v15)
    {
      uint64_t v10 = v14;
      swift_bridgeObjectRetain();
      sub_24F862D38(v13);
      if (v8)
      {
        if (v6 == v10 && v8 == v9)
        {
          swift_bridgeObjectRelease();
          char v3 = 1;
        }
        else
        {
          char v3 = sub_24F8CFD00();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        char v3 = 0;
      }
    }
    else
    {
      if (!v8)
      {
        char v3 = 1;
        return v3 & 1;
      }
      char v3 = 0;
    }
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

uint64_t DatabaseMigrator.hasBeenSuperseded(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = DatabaseMigrator.appliedIdentifiers(_:)(a1);
  if (!v2)
  {
    uint64_t v5 = v4;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_24F85F28C(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    LOBYTE(v3) = sub_24F85F364(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

uint64_t sub_24F861340(unint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v6 = a1;
  uint64_t v7 = *(void *)(v3 + 8);
  if (*(void *)(v7 + 16))
  {
    *(void *)&long long v34 = *(void *)(v7 + 16);
    uint64_t v9 = *(void *)(v7 + 32);
    uint64_t v8 = *(void *)(v7 + 40);
    char v10 = *(unsigned char *)(v7 + 48);
    uint64_t v11 = *(_OWORD **)(v7 + 56);
    uint64_t v12 = *(void *)(v7 + 64);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_24F78818C();
    unint64_t v6 = *(void *)(v13 + 16);
    uint64_t v14 = v13;
    uint64_t v15 = v6 + 1;
    if (v6 >= *(void *)(v13 + 24) >> 1) {
      goto LABEL_35;
    }
    while (1)
    {
      *(void *)(v14 + 16) = v15;
      uint64_t v15 = v14;
      uint64_t v16 = v14 + 40 * v6;
      *(void *)(v16 + 32) = v9;
      *(void *)(v16 + 40) = v8;
      *(unsigned char *)(v16 + 48) = v10;
      *(void *)(v16 + 56) = v11;
      *(void *)(v16 + 64) = v12;
      unint64_t v6 = a1;
      if (v9 == a1 && v8 == a2) {
        break;
      }
      char v10 = sub_24F8CFD00();
      swift_release();
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_11;
      }
      char v29 = a3;
      uint64_t v30 = a2;
      uint64_t v18 = v7;
      uint64_t v7 = 0;
      uint64_t v32 = v18;
      uint64_t v11 = (_OWORD *)(v18 + 96);
      uint64_t v31 = v34 - 1;
      while (1)
      {
        if (v31 == v7) {
          goto LABEL_24;
        }
        if ((unint64_t)++v7 >= *(void *)(v32 + 16)) {
          break;
        }
        uint64_t v9 = *((void *)v11 - 3);
        uint64_t v8 = *((void *)v11 - 2);
        char v19 = *((unsigned char *)v11 - 8);
        long long v34 = *v11;
        unint64_t v20 = *(void *)(v15 + 16);
        unint64_t v21 = *(void *)(v15 + 24);
        a3 = (void *)v15;
        swift_bridgeObjectRetain_n();
        uint64_t v12 = *((void *)&v34 + 1);
        swift_retain_n();
        if (v20 >= v21 >> 1)
        {
          sub_24F78818C();
          a3 = v24;
        }
        a3[2] = v20 + 1;
        uint64_t v15 = (uint64_t)a3;
        uint64_t v22 = &a3[5 * v20];
        v22[4] = v9;
        v22[5] = v8;
        *((unsigned char *)v22 + 48) = v19;
        *(_OWORD *)(v22 + 7) = v34;
        unint64_t v6 = a1;
        a2 = v30;
        if (v9 == a1 && v8 == v30)
        {
          swift_bridgeObjectRelease();
          swift_release();
LABEL_24:
          swift_bridgeObjectRelease();
          a3 = v29;
          goto LABEL_25;
        }
        uint64_t v11 = (_OWORD *)((char *)v11 + 40);
        char v10 = sub_24F8CFD00();
        swift_release();
        swift_bridgeObjectRelease();
        if (v10) {
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_35:
      sub_24F78818C();
      uint64_t v14 = v28;
    }
    swift_bridgeObjectRelease();
    swift_release();
LABEL_11:
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
LABEL_25:
  sub_24F7E5E74(v15, v35);
  sub_24F862CD0((uint64_t)v35, (uint64_t)&v36);
  if (!*((void *)&v36 + 1)) {
    goto LABEL_31;
  }
  v37[0] = v36;
  swift_release();
  if (*(void *)&v37[0] == v6 && *((void *)&v37[0] + 1) == a2) {
    goto LABEL_32;
  }
  char v26 = sub_24F8CFD00();
  sub_24F828E6C((uint64_t)v37);
  if ((v26 & 1) == 0)
  {
LABEL_31:
    sub_24F8CF7D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24F8CEE10();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CF9D0();
    __break(1u);
LABEL_32:
    sub_24F828E6C((uint64_t)v37);
  }
  swift_bridgeObjectRetain();
  return sub_24F85F6F8(v15, a3);
}

void sub_24F8616F8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8 = *v4;
  char v9 = v4[1];
  uint64_t v10 = *((void *)v4 + 1);
  unint64_t v59 = MEMORY[0x263F8EE78];
  unint64_t v60 = MEMORY[0x263F8EE80];
  v11._uint64_t countAndFlagsBits = 0xD000000000000051;
  v11._object = (void *)0x800000024F8D3DF0;
  uint64_t v12 = &v59;
  Database.execute(sql:arguments:)(v11, *(GRDBInternal::StatementArguments *)(&a4 - 1));
  uint64_t v14 = v13;
  if (!v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v59) = v8;
    BYTE1(v59) = v9;
    unint64_t v60 = v10;
    DatabaseMigrator.appliedMigrations(_:)(a1);
    uint64_t v16 = v15;
    uint64_t v67 = a1;
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_24F85FDFC(v17, a2, a3);
    char v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      uint64_t v49 = v18;
      unint64_t v21 = v16;
      uint64_t v22 = sub_24F7E5EF4((uint64_t)v16);
      if (!v23) {
        goto LABEL_10;
      }
      uint64_t v24 = v22;
      uint64_t v25 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_24F85FDFC(v10, v24, v25);
      char v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0 || v49 >= v48) {
        goto LABEL_10;
      }
      unint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      unint64_t v59 = 0xD00000000000002ELL;
      unint64_t v60 = 0x800000024F8D3EA0;
      *(void *)&long long v50 = a2;
      *((void *)&v50 + 1) = a3;
      swift_bridgeObjectRetain();
      sub_24F8CEE10();
      uint64_t v14 = v28;
      uint64_t v16 = &v59;
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CF9D0();
      __break(1u);
    }
    unint64_t v21 = v16;
LABEL_10:
    LOBYTE(v59) = v8;
    BYTE1(v59) = v9;
    unint64_t v60 = v10;
    uint64_t v29 = sub_24F861340(a2, a3, v21);
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)(v29 + 16);
    if (!v30) {
      goto LABEL_3;
    }
    unint64_t v59 = 0xD000000000000013;
    unint64_t v60 = 0x800000024F8D3E50;
    uint64_t v61 = MEMORY[0x263F8EE78];
    uint64_t v62 = MEMORY[0x263F8EE80];
    sub_24F7725D4(&v59);
    uint64_t v31 = (uint64_t *)(v29 + 64);
    while (1)
    {
      uint64_t v47 = v30;
      uint64_t v32 = *(v31 - 3);
      int v33 = *((unsigned __int8 *)v31 - 16);
      uint64_t v34 = *(v31 - 1);
      uint64_t v35 = *v31;
      v63[0] = *(v31 - 4);
      v63[1] = v32;
      char v64 = v33;
      uint64_t v65 = v34;
      uint64_t v66 = v35;
      uint64_t v58 = 0;
      memset(v57, 0, sizeof(v57));
      sub_24F8630FC((uint64_t)v57, (uint64_t)v54, &qword_26B1F7F10);
      sub_24F781274(&qword_26B1F7F50);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_24F8DDBF0;
      sub_24F76C344((uint64_t)&v59, v36 + 32);
      sub_24F8630FC((uint64_t)v54, (uint64_t)v53, &qword_26B1F7F10);
      long long v50 = 0u;
      long long v51 = 0u;
      *(void *)&long long v52 = 0;
      *((void *)&v52 + 1) = v36;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F7AC1D0((uint64_t)v53, (uint64_t)&v50);
      char v56 = 2;
      v55[0] = v50;
      v55[1] = v51;
      v55[2] = v52;
      sub_24F7783C0((uint64_t)v54, &qword_26B1F7F10);
      sub_24F7F9440(v67, (uint64_t)&v50);
      if (v14)
      {
        sub_24F7783C0((uint64_t)v55, &qword_26B1F7D38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F7783C0((uint64_t)v57, &qword_26B1F7F10);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      sub_24F8630FC((uint64_t)&v50 + 8, (uint64_t)v54, &qword_26B1F7F10);
      sub_24F781274(&qword_26B1F5568);
      swift_allocObject();
      uint64_t v37 = swift_retain_n();
      sub_24F7F05C4(v37, 0, 0, v54);
      uint64_t v14 = 0;
      char v38 = sub_24F8AAED4();
      swift_release();
      sub_24F7AD1E4((uint64_t)&v50);
      swift_release();
      sub_24F7783C0((uint64_t)v55, &qword_26B1F7D38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F7783C0((uint64_t)v57, &qword_26B1F7F10);
      if ((v38 & 0xFE) == 2 || (v38 & 1) == 0)
      {
        LOBYTE(v50) = 1;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v42 = v67;
      }
      else
      {
        uint64_t v42 = v67;
        if (!v33)
        {
          sub_24F7D3DC4(v67, v39, v40, v41);
          swift_release();
          goto LABEL_20;
        }
        if (v33 != 1)
        {
          sub_24F7D3E1C(v67, v39, v40, v41);
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        LOBYTE(v50) = 1;
        swift_bridgeObjectRetain();
        swift_retain();
      }
      swift_retain();
      sub_24F8A1B34((char *)&v50, v42, (uint64_t)v63, v42, v43, v44, v45, v46);
      swift_release();
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_21:
      v31 += 5;
      uint64_t v30 = v47 - 1;
      if (v47 == 1) {
        goto LABEL_3;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_3:
  swift_bridgeObjectRelease();
}

#error "24F861F4C: call analysis failed (funcsize=165)"

uint64_t sub_24F861FC4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v39 = a3;
  int v38 = a2;
  uint64_t v6 = sub_24F8CE850();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v37[-v11];
  uint64_t v13 = type metadata accessor for Configuration();
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v37[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  char v19 = &v37[-v18];
  sub_24F7EEC68(a1 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration, (uint64_t)&v37[-v18]);
  uint64_t v20 = *(int *)(v14 + 76);

  *(void *)&v19[v20] = 0;
  uint64_t v21 = *(int *)(v14 + 80);

  *(void *)&v19[v21] = 0;
  swift_bridgeObjectRelease();
  *((void *)v19 + 1) = 0xD00000000000001FLL;
  *((void *)v19 + 2) = 0x800000024F8D3DD0;
  uint64_t v22 = NSTemporaryDirectory();
  sub_24F8CED80();

  sub_24F8CE800();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB0]), sel_init);
  id v24 = objc_msgSend(v23, sel_globallyUniqueString);

  sub_24F8CED80();
  sub_24F8CE820();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v25(v10, v6);
  uint64_t v26 = sub_24F8CE830();
  uint64_t v28 = v27;
  sub_24F7EEC68((uint64_t)v19, (uint64_t)v17);
  type metadata accessor for DatabaseQueue();
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v26;
  uint64_t v31 = v29;
  uint64_t v32 = v42;
  uint64_t v33 = DatabaseQueue.init(path:configuration:)(v30, v28, (uint64_t)v17);
  if (!v32)
  {
    MEMORY[0x270FA5388](v33);
    char v34 = BYTE1(v38);
    v37[-32] = v38 & 1;
    v37[-31] = v34 & 1;
    uint64_t v35 = v40;
    *(void *)&v37[-24] = v39;
    *(void *)&v37[-16] = v35;
    *(void *)&v37[-8] = v41;
    uint64_t v31 = sub_24F8568E0();
    swift_release();
  }
  sub_24F862368();
  v25(v12, v6);
  sub_24F7EECCC((uint64_t)v19);
  return v31;
}

void sub_24F862368()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
  uint64_t v1 = (void *)sub_24F8CE810();
  v7[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v7);

  id v3 = v7[0];
  if (v2)
  {
    id v4 = v3;
  }
  else
  {
    id v5 = v7[0];
    uint64_t v6 = (void *)sub_24F8CE7F0();

    swift_willThrow();
  }
}

#error "24F8624D0: call analysis failed (funcsize=28)"

void DatabaseMigrator.migratePublisher(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __int16 v7 = *v3;
  int v8 = v3[1];
  uint64_t v9 = *((void *)v3 + 1);
  sub_24F783524();
  uint64_t v10 = (void *)sub_24F8CF540();
  id v12 = v10;
  if (v8) {
    __int16 v11 = 256;
  }
  else {
    __int16 v11 = 0;
  }
  sub_24F862594(a1, a2, v10, v11 | v7, v9, a3);
}

uint64_t sub_24F862594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  id v24 = a6;
  uint64_t v11 = sub_24F781274(&qword_269A2BD50);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24F781274(&qword_269A2BD58);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t *)((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = a4 & 1;
  *(unsigned char *)(v17 + 17) = HIBYTE(a4) & 1;
  *(void *)(v17 + 24) = a5;
  *(void *)(v17 + 32) = a1;
  *(void *)(v17 + 40) = a2;
  uint64_t v25 = sub_24F862DB4;
  uint64_t v26 = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_24F781274(&qword_269A2BD38);
  sub_24F778988(&qword_269A2BD40, &qword_269A2BD38);
  uint64_t v18 = sub_24F8CEB90();
  swift_release();
  uint64_t v19 = sub_24F8CF510();
  sub_24F7771BC((uint64_t)v13, 1, 1, v19);
  sub_24F8630FC((uint64_t)v13, (uint64_t)v16 + *(int *)(v14 + 56), &qword_269A2BD50);
  *uint64_t v16 = v18;
  v16[1] = (uint64_t)a3;
  id v20 = a3;
  sub_24F7783C0((uint64_t)v13, &qword_269A2BD50);
  sub_24F778988(&qword_269A2BD60, &qword_269A2BD58);
  uint64_t v21 = sub_24F8CEB90();
  uint64_t result = sub_24F7783C0((uint64_t)v16, &qword_269A2BD58);
  *id v24 = v21;
  return result;
}

uint64_t DatabaseMigrator.migratePublisher<A>(_:receiveOn:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v37 = a3;
  int v38 = a6;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v7 = a5;
  uint64_t v32 = a5;
  uint64_t v33 = a4;
  uint64_t v8 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = sub_24F8CF610();
  sub_24F770DF4();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = sub_24F7688B8(&qword_269A2BD28);
  uint64_t v34 = v14;
  uint64_t v15 = sub_24F778988(&qword_269A2BD30, &qword_269A2BD28);
  uint64_t v39 = (uint64_t (*)())v14;
  uint64_t v40 = v8;
  uint64_t v41 = v15;
  uint64_t v42 = v7;
  uint64_t v16 = type metadata accessor for ReceiveValuesOn();
  sub_24F770DF4();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v29 - v20;
  LOBYTE(v7) = *(unsigned char *)v6;
  LOBYTE(v8) = *(unsigned char *)(v6 + 1);
  uint64_t v22 = *(void *)(v6 + 8);
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = v7;
  *(unsigned char *)(v23 + 17) = v8;
  uint64_t v25 = v30;
  uint64_t v24 = v31;
  *(void *)(v23 + 24) = v22;
  *(void *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = v24;
  uint64_t v39 = sub_24F862DB4;
  uint64_t v40 = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_24F781274(&qword_269A2BD38);
  sub_24F778988(&qword_269A2BD40, &qword_269A2BD38);
  uint64_t v26 = sub_24F8CEB90();
  swift_release();
  uint64_t v39 = (uint64_t (*)())v26;
  sub_24F7771BC((uint64_t)v13, 1, 1, AssociatedTypeWitness);
  sub_24F8450D8(v37, (uint64_t)v13, v34, v33, v15, (uint64_t)v21);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v36);
  swift_release();
  swift_getWitnessTable();
  uint64_t v27 = sub_24F8CEB90();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v16);
  *int v38 = v27;
  return result;
}

uint64_t sub_24F862A90(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24F863024;
  *(void *)(v12 + 24) = v11;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a3 & 1;
  *(unsigned char *)(v14 + 17) = HIBYTE(a3) & 1;
  *(void *)(v14 + 24) = a4;
  *(void *)(v14 + 32) = sub_24F863064;
  *(void *)(v14 + 40) = v12;
  uint64_t v15 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v15(sub_24F860B90, v14, ObjectType, a6);
  swift_release();
  return swift_release();
}

void sub_24F862BE0(int a1, id a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2, 1);
  }
  else
  {
    ((void (*)(void))a3)(0);
  }
}

uint64_t DatabasePublishers.Migrate.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_24F781274(&qword_26B1F7040);
  uint64_t v9 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270EE3B58](a1, v7, v9, v8, a2, a3);
}

uint64_t sub_24F862CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_26B1F7628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_24F862D38(uint64_t *a1)
{
  return a1;
}

uint64_t sub_24F862D6C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_24F862DBC()
{
  unint64_t result = qword_269A2BD48;
  if (!qword_269A2BD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2BD48);
  }
  return result;
}

uint64_t sub_24F862E0C(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DatabaseMigrator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DatabaseMigrator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for DatabaseMigrator()
{
}

unsigned char *storeEnumTagSinglePayload for DatabaseMigrator.ForeignKeyChecks(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F862FACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for DatabaseMigrator.ForeignKeyChecks()
{
}

void type metadata accessor for DatabasePublishers.Migrate()
{
}

uint64_t sub_24F862FEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F863024(uint64_t a1, char a2)
{
  int v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

void sub_24F863064(int a1, void *a2)
{
  sub_24F862BE0(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_24F863070(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 17)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return sub_24F860A74(a1, v2 | *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t, void))(v1 + 32));
}

uint64_t sub_24F863098()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F8630D8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 17)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_24F862A90(a1, a2, v3 | *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_24F8630FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_24F781274(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24F863160(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = v3 - 1;
    uint64_t v5 = (uint64_t *)(a1 + 16 * v3 + 24);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      swift_bridgeObjectRetain();
      sub_24F80E164(v6, v7, a2);
      char v9 = v8;
      swift_bridgeObjectRelease();
      if (v9) {
        break;
      }
      v5 -= 2;
      if (--v4 == -1)
      {
        uint64_t v4 = 0;
        break;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_24F86320C(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    uint64_t v2 = *(void *)(a2 + 16 * result + 32);
    swift_bridgeObjectRetain();
    return v2;
  }
  __break(1u);
  return result;
}

void *sub_24F863258(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  uint64_t v7 = a3;
  unint64_t result = a1(&v6, &v7);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

unint64_t sub_24F8632B8@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_24F86320C(*a1, *a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

unint64_t sub_24F8632F8@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_24F8632B8(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_24F863318()
{
  return sub_24F862480();
}

uint64_t static DatabaseDateComponents.fromDatabaseValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24F8CEDD0();
  uint64_t v5 = sub_24F77AD34(v4);
  MEMORY[0x270FA5388](v5);
  sub_24F770F20();
  int v6 = *(unsigned __int8 *)(a1 + 16);
  if (v6 == 3)
  {
    uint64_t v7 = sub_24F77AD28();
    sub_24F78419C(v7, v8);
    sub_24F8CEDC0();
    sub_24F77AD28();
    sub_24F8CEDA0();
    uint64_t v10 = v9;
    uint64_t v11 = sub_24F77AD28();
    sub_24F781F10(v11, v12, 3);
    if (v10) {
      goto LABEL_5;
    }
  }
  else if (v6 == 2)
  {
    swift_bridgeObjectRetain();
LABEL_5:
    uint64_t v13 = sub_24F77AD28();
    sub_24F79F168(v13, v14, v15);
    return swift_bridgeObjectRelease();
  }
  uint64_t v17 = type metadata accessor for DatabaseDateComponents();
  return sub_24F7771BC(a2, 1, 1, v17);
}

uint64_t DatabaseDateComponents.init(sqliteStatement:index:)@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v7 = sub_24F8CE7E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  sub_24F770F20();
  uint64_t v9 = type metadata accessor for DatabaseDateComponents();
  sub_24F770E70();
  MEMORY[0x270FA5388](v10);
  sub_24F773918();
  uint64_t v11 = sub_24F781274(&qword_26B1F58F0);
  uint64_t v12 = sub_24F77AD34(v11);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v18 = sqlite3_column_text(a1, a2);
  if (v18)
  {
    uint64_t v19 = (uint64_t)v18;
    int v20 = sqlite3_column_bytes(a1, a2);
    SQLiteDateParser.components(cString:length:)(v19, v20, (uint64_t)v17);
    sub_24F79F3D8((uint64_t)v17, (uint64_t)v15);
    if (sub_24F777048((uint64_t)v15, 1, v9) != 1)
    {
      sub_24F79F27C((uint64_t)v15, v4);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v4, v7);
      char v23 = *(unsigned char *)(v4 + *(int *)(v9 + 20));
      sub_24F79F344(v4);
      uint64_t v22 = v26;
      *(unsigned char *)(v26 + *(int *)(v9 + 20)) = v23;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v22, v3, v7);
      uint64_t v21 = 0;
      return sub_24F7771BC(v22, v21, 1, v9);
    }
    sub_24F863974((uint64_t)v15);
  }
  uint64_t v21 = 1;
  uint64_t v22 = v26;
  return sub_24F7771BC(v22, v21, 1, v9);
}

uint64_t type metadata accessor for DatabaseDateComponents()
{
  uint64_t result = qword_26B1F55C8;
  if (!qword_26B1F55C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

GRDBInternal::DatabaseDateComponents::Format_optional __swiftcall DatabaseDateComponents.Format.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24F8CFA50();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t DatabaseDateComponents.Format.rawValue.getter()
{
  unint64_t result = 0x2D4D4D2D79797979;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x6D6D3A4848;
      break;
    case 5:
    case 6:
      unint64_t result = 0x73733A6D6D3A4848;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F863808(unsigned __int8 *a1, char *a2)
{
  return sub_24F7DA68C(*a1, *a2);
}

uint64_t sub_24F863814()
{
  return sub_24F8A233C(*v0);
}

uint64_t sub_24F86381C()
{
  return sub_24F8A26B4();
}

uint64_t sub_24F863824(uint64_t a1)
{
  return sub_24F8A2A58(a1, *v1);
}

GRDBInternal::DatabaseDateComponents::Format_optional sub_24F86382C(Swift::String *a1)
{
  return DatabaseDateComponents.Format.init(rawValue:)(*a1);
}

unint64_t sub_24F863838@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DatabaseDateComponents.Format.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t DatabaseDateComponents.dateComponents.getter@<X0>(uint64_t a1@<X8>)
{
  sub_24F8CE7E0();
  sub_24F770E70();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t DatabaseDateComponents.format.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for DatabaseDateComponents();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t DatabaseDateComponents.init(_:format:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  *(unsigned char *)(a3 + *(int *)(type metadata accessor for DatabaseDateComponents() + 20)) = v5;
  sub_24F8CE7E0();
  sub_24F770E70();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  return v8(a3, a1, v6);
}

uint64_t sub_24F863974(uint64_t a1)
{
  uint64_t v2 = sub_24F781274(&qword_26B1F58F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DatabaseDateComponents.databaseValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for DatabaseDateComponents() + 20));
  unint64_t v6 = MEMORY[0x263F8D6C8];
  unint64_t v7 = MEMORY[0x263F8D750];
  if (v5 <= 3)
  {
    uint64_t v8 = sub_24F8CE740();
    if (v9) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v8;
    }
    uint64_t v11 = sub_24F8CE760();
    if (v12) {
      uint64_t v13 = 1;
    }
    else {
      uint64_t v13 = v11;
    }
    uint64_t v14 = sub_24F8CE700();
    if (v15) {
      uint64_t v16 = 1;
    }
    else {
      uint64_t v16 = v14;
    }
    sub_24F781274(&qword_269A2BD68);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_24F8E3940;
    *(void *)(v17 + 56) = v6;
    *(void *)(v17 + 64) = v7;
    *(void *)(v17 + 32) = v10;
    *(void *)(v17 + 96) = v6;
    *(void *)(v17 + 104) = v7;
    *(void *)(v17 + 72) = v13;
    *(void *)(v17 + 136) = v6;
    *(void *)(v17 + 144) = v7;
    *(void *)(v17 + 112) = v16;
    uint64_t v3 = sub_24F8CEDB0();
    uint64_t v4 = v18;
  }
  uint64_t v19 = v5;
  switch((int)v5)
  {
    case 1:
    case 4:
      uint64_t v20 = sub_24F8CE720();
      if (v21) {
        uint64_t v22 = 0;
      }
      else {
        uint64_t v22 = v20;
      }
      uint64_t v23 = sub_24F8CE780();
      if (v24) {
        uint64_t v25 = 0;
      }
      else {
        uint64_t v25 = v23;
      }
      sub_24F781274(&qword_269A2BD68);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_24F8E0850;
      *(void *)(v26 + 56) = v6;
      *(void *)(v26 + 64) = v7;
      *(void *)(v26 + 32) = v22;
      *(void *)(v26 + 96) = v6;
      *(void *)(v26 + 104) = v7;
      *(void *)(v26 + 72) = v25;
      sub_24F77F0E0();
      goto LABEL_33;
    case 2:
    case 5:
      sub_24F8CE720();
      sub_24F8CE780();
      uint64_t v27 = sub_24F8CE7A0();
      if (v28) {
        unint64_t v29 = 0;
      }
      else {
        unint64_t v29 = v27;
      }
      sub_24F781274(&qword_269A2BD68);
      uint64_t v30 = (__n128 *)swift_allocObject();
      sub_24F7800E0(v30, (__n128)xmmword_24F8E3940)[7].n128_u64[0] = v29;
      sub_24F77F0E0();
      goto LABEL_33;
    case 3:
    case 6:
      sub_24F8CE720();
      sub_24F8CE780();
      uint64_t v31 = sub_24F8CE7A0();
      if (v32) {
        uint64_t v33 = 0;
      }
      else {
        uint64_t v33 = v31;
      }
      uint64_t v34 = sub_24F8CE6E0();
      char v36 = v35;
      double v37 = (double)v34;
      sub_24F781274(&qword_269A2BD68);
      int v38 = (__n128 *)swift_allocObject();
      uint64_t v39 = sub_24F7800E0(v38, (__n128)xmmword_24F8E3950);
      v39[7].n128_u64[0] = v33;
      double v40 = v37 / 1000000.0;
      if (v36) {
        double v40 = 0.0;
      }
      double v41 = round(v40);
      if ((~*(void *)&v41 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_47;
      }
      if (v41 <= -9.22337204e18)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      if (v41 >= 9.22337204e18)
      {
LABEL_48:
        __break(1u);
        JUMPOUT(0x24F863E1CLL);
      }
      v39[11].n128_u64[0] = v6;
      v39[11].n128_u64[1] = v7;
      v39[9].n128_u64[1] = (uint64_t)v41;
LABEL_33:
      uint64_t v19 = sub_24F8CEDB0();
      uint64_t v5 = v42;
LABEL_34:
      sub_24F781274(&qword_26B1F7AB8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24F8E0850;
      *(void *)(inited + 32) = v3;
      *(void *)(inited + 40) = v4;
      *(void *)(inited + 48) = v19;
      *(void *)(inited + 56) = v5;
      if (!v4)
      {
        uint64_t v45 = MEMORY[0x263F8EE78];
        if (!v5) {
          goto LABEL_45;
        }
        goto LABEL_40;
      }
      swift_bridgeObjectRetain();
      sub_24F787184();
      uint64_t v45 = v44;
      unint64_t v46 = *(void *)(v44 + 16);
      if (v46 >= *(void *)(v44 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v45 = v54;
      }
      *(void *)(v45 + 16) = v46 + 1;
      uint64_t v47 = v45 + 16 * v46;
      *(void *)(v47 + 32) = v3;
      *(void *)(v47 + 40) = v4;
      if (v5)
      {
LABEL_40:
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24F787184();
          uint64_t v45 = v55;
        }
        unint64_t v48 = *(void *)(v45 + 16);
        if (v48 >= *(void *)(v45 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v45 = v56;
        }
        *(void *)(v45 + 16) = v48 + 1;
        uint64_t v49 = v45 + 16 * v48;
        *(void *)(v49 + 32) = v19;
        *(void *)(v49 + 40) = v5;
      }
LABEL_45:
      swift_release();
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      uint64_t v50 = sub_24F8CED30();
      uint64_t v52 = v51;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a1 = v50;
      *(void *)(a1 + 8) = v52;
      *(unsigned char *)(a1 + 16) = 2;
      return result;
    default:
      goto LABEL_34;
  }
}

uint64_t DatabaseDateComponents.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24F781274(&qword_26B1F58F0);
  uint64_t v6 = sub_24F77AD34(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F7811D0(a1, a1[3]);
  sub_24F78314C();
  sub_24F8CFFA0();
  if (!v2)
  {
    sub_24F7811D0(v15, v15[3]);
    sub_24F78314C();
    uint64_t v9 = sub_24F8CFD10();
    uint64_t v11 = v10;
    swift_bridgeObjectRetain();
    sub_24F79F168(v9, v11, (uint64_t)v8);
    swift_bridgeObjectRelease_n();
    uint64_t v12 = type metadata accessor for DatabaseDateComponents();
    if (sub_24F777048((uint64_t)v8, 1, v12) == 1)
    {
      sub_24F863974((uint64_t)v8);
      sub_24F8CF850();
      swift_allocError();
      sub_24F8CF830();
      swift_willThrow();
    }
    else
    {
      sub_24F79F27C((uint64_t)v8, a2);
    }
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v15);
  }
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)a1);
}

uint64_t DatabaseDateComponents.encode(to:)(void *a1)
{
  uint64_t v2 = sub_24F8CEDD0();
  uint64_t v3 = sub_24F77AD34(v2);
  MEMORY[0x270FA5388](v3);
  sub_24F773918();
  sub_24F7811D0(a1, a1[3]);
  sub_24F8CFFC0();
  DatabaseDateComponents.databaseValue.getter((uint64_t)v14);
  uint64_t v4 = v14[0];
  unint64_t v5 = v14[1];
  if (v15 == 3)
  {
    uint64_t v10 = sub_24F77F5DC();
    sub_24F78419C(v10, v11);
    sub_24F8CEDC0();
    sub_24F77F5DC();
    sub_24F8CEDA0();
    uint64_t v13 = v12;
    sub_24F781F10(v4, v5, 3);
    uint64_t result = sub_24F781F10(v4, v5, 3);
    if (!v13) {
      goto LABEL_6;
    }
LABEL_5:
    sub_24F798FB4((uint64_t)v16, v17);
    sub_24F77F5DC();
    sub_24F8CFD40();
    swift_bridgeObjectRelease();
    return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v16);
  }
  if (v15 == 2) {
    goto LABEL_5;
  }
  uint64_t v6 = sub_24F77F5DC();
  uint64_t result = sub_24F781F10(v6, v7, v8);
LABEL_6:
  __break(1u);
  return result;
}

uint64_t sub_24F864138@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v7 = sub_24F8CE7E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24F781274(&qword_26B1F58F0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v27 - v18;
  uint64_t v20 = sqlite3_column_text(a1, a2);
  if (v20)
  {
    uint64_t v21 = (uint64_t)v20;
    int v22 = sqlite3_column_bytes(a1, a2);
    SQLiteDateParser.components(cString:length:)(v21, v22, (uint64_t)v19);
    sub_24F79F3D8((uint64_t)v19, (uint64_t)v17);
    if (sub_24F777048((uint64_t)v17, 1, a3) != 1)
    {
      sub_24F79F27C((uint64_t)v17, (uint64_t)v13);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
      char v25 = v13[*(int *)(a3 + 20)];
      sub_24F79F344((uint64_t)v13);
      uint64_t v24 = v28;
      *(unsigned char *)(v28 + *(int *)(a3 + 20)) = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v24, v11, v7);
      uint64_t v23 = 0;
      return sub_24F7771BC(v24, v23, 1, a3);
    }
    sub_24F863974((uint64_t)v17);
  }
  uint64_t v23 = 1;
  uint64_t v24 = v28;
  return sub_24F7771BC(v24, v23, 1, a3);
}

uint64_t sub_24F86438C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DatabaseDateComponents.init(from:)(a1, a2);
}

uint64_t sub_24F8643A4(void *a1)
{
  return DatabaseDateComponents.encode(to:)(a1);
}

unint64_t sub_24F8643C0()
{
  unint64_t result = qword_269A2BD70[0];
  if (!qword_269A2BD70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269A2BD70);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DatabaseDateComponents(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24F8CE7E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for DatabaseDateComponents(uint64_t a1)
{
  uint64_t v2 = sub_24F8CE7E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for DatabaseDateComponents(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F8CE7E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for DatabaseDateComponents(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F8CE7E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for DatabaseDateComponents(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F8CE7E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DatabaseDateComponents(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F8CE7E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseDateComponents(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F864740);
}

uint64_t sub_24F864740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F8CE7E0();
  sub_24F77F4A8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_24F777048(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 7) {
      return v9 - 6;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for DatabaseDateComponents(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F8647DC);
}

void sub_24F8647DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_24F8CE7E0();
  sub_24F77F4A8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_24F7771BC(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 6;
  }
}

uint64_t sub_24F864864()
{
  uint64_t result = sub_24F8CE7E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DatabaseDateComponents.Format(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for DatabaseDateComponents.Format(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F864A4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseDateComponents.Format()
{
  return &type metadata for DatabaseDateComponents.Format;
}

uint64_t SQLiteDateParser.components(cString:length:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24F781274(&qword_26B1F5710);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_24F781274(&qword_26B1F5350);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_24F8CE7E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v33[-v17];
  if (a2 >= 5)
  {
    if (*(unsigned char *)(a1 + 4) == 45)
    {
      uint64_t v21 = sub_24F8CEA50();
      sub_24F7771BC((uint64_t)v11, 1, 1, v21);
      uint64_t v22 = sub_24F8CEA80();
      sub_24F7771BC((uint64_t)v8, 1, 1, v22);
      sub_24F77F830();
      uint64_t v23 = sub_24F7800FC();
      sub_24F864EBC(v23, v24);
      char v25 = v34;
      if (v34 == 7 || v35)
      {
        (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
LABEL_13:
        uint64_t v30 = type metadata accessor for DatabaseDateComponents();
        uint64_t v31 = a3;
        uint64_t v32 = 1;
        return sub_24F7771BC(v31, v32, 1, v30);
      }
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a3, v18, v12);
    }
    else
    {
      if (*(unsigned char *)(a1 + 2) != 58) {
        goto LABEL_2;
      }
      uint64_t v26 = sub_24F8CEA50();
      sub_24F7771BC((uint64_t)v11, 1, 1, v26);
      uint64_t v27 = sub_24F8CEA80();
      sub_24F7771BC((uint64_t)v8, 1, 1, v27);
      sub_24F77F830();
      uint64_t v28 = (char **)sub_24F7800FC();
      sub_24F86500C(v28, v29);
      char v25 = v34;
      if (v34 == 7 || v35)
      {
        (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v16, v12);
        goto LABEL_13;
      }
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a3, v16, v12);
    }
    uint64_t v30 = type metadata accessor for DatabaseDateComponents();
    *(unsigned char *)(a3 + *(int *)(v30 + 20)) = v25;
    uint64_t v31 = a3;
    uint64_t v32 = 0;
    return sub_24F7771BC(v31, v32, 1, v30);
  }
LABEL_2:
  uint64_t v19 = type metadata accessor for DatabaseDateComponents();
  return sub_24F7771BC(a3, 1, 1, v19);
}

uint64_t sub_24F864E74@<X0>(const char *a1@<X0>, uint64_t a2@<X8>)
{
  size_t v4 = strlen(a1);
  return SQLiteDateParser.components(cString:length:)((uint64_t)a1, v4, a2);
}

uint64_t sub_24F864EBC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t result = sub_24F8652F8();
  if (v5) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  BOOL v7 = v6 < 1;
  uint64_t v8 = v6 - 1;
  if (v7) {
    goto LABEL_14;
  }
  if (**(unsigned char **)a1 != 45) {
    goto LABEL_14;
  }
  ++*(void *)a1;
  *(void *)(a1 + 8) = v8;
  uint64_t result = sub_24F865450();
  if (v9) {
    goto LABEL_14;
  }
  uint64_t result = sub_24F865400(45);
  if ((result & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t result = sub_24F865450();
  if (v10) {
    goto LABEL_14;
  }
  sub_24F8CE750();
  sub_24F8CE770();
  uint64_t result = sub_24F8CE710();
  if (!*(void *)(a1 + 8))
  {
    *a2 = 0;
    return result;
  }
  if ((sub_24F865400(32) & 1) == 0)
  {
    uint64_t result = sub_24F865400(84);
    if ((result & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t result = sub_24F86500C((char **)a1, &v12);
  switch(v12)
  {
    case 6:
      char v11 = 3;
      break;
    case 5:
      char v11 = 2;
      break;
    case 4:
      char v11 = 1;
      break;
    default:
LABEL_14:
      char v11 = 7;
      break;
  }
  *a2 = v11;
  return result;
}

uint64_t sub_24F86500C@<X0>(char **a1@<X0>, char *a2@<X8>)
{
  uint64_t result = sub_24F865450();
  if (v5) {
    goto LABEL_17;
  }
  uint64_t v6 = (uint64_t)a1[1];
  BOOL v7 = v6 < 1;
  uint64_t v8 = (char *)(v6 - 1);
  if (v7) {
    goto LABEL_17;
  }
  if (**a1 != 58) {
    goto LABEL_17;
  }
  ++*a1;
  a1[1] = v8;
  uint64_t result = sub_24F865450();
  if (v9) {
    goto LABEL_17;
  }
  sub_24F8CE730();
  uint64_t result = sub_24F8CE790();
  if (!a1[1] || (uint64_t result = sub_24F8654E0(a1), (result & 1) != 0))
  {
    char v10 = 4;
LABEL_18:
    *a2 = v10;
    return result;
  }
  uint64_t result = sub_24F865400(58);
  if ((result & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t result = sub_24F865450();
  if (v11) {
    goto LABEL_17;
  }
  uint64_t result = sub_24F8CE7B0();
  if (!a1[1] || (uint64_t result = sub_24F8654E0(a1), (result & 1) != 0))
  {
    char v10 = 5;
    goto LABEL_18;
  }
  uint64_t result = sub_24F865400(46);
  if ((result & 1) == 0 || (uint64_t v12 = (uint64_t)a1[1], v12 < 1))
  {
LABEL_17:
    char v10 = 7;
    goto LABEL_18;
  }
  if (**a1 - 48 != (char)(**a1 - 48))
  {
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if ((**a1 - 48) > 9u) {
    goto LABEL_17;
  }
  uint64_t v13 = (char *)(v12 - 1);
  ++*a1;
  a1[1] = v13;
  if (!v13) {
    goto LABEL_21;
  }
  uint64_t result = sub_24F8654E0(a1);
  if (result) {
    goto LABEL_21;
  }
  uint64_t v14 = (uint64_t)a1[1];
  if (v14 < 1) {
    goto LABEL_17;
  }
  if (**a1 - 48 != (char)(**a1 - 48)) {
    goto LABEL_43;
  }
  if ((**a1 - 48) > 9u) {
    goto LABEL_17;
  }
  uint64_t v15 = (char *)(v14 - 1);
  ++*a1;
  a1[1] = v15;
  if (!v15 || (uint64_t result = sub_24F8654E0(a1), (result & 1) != 0))
  {
LABEL_21:
    uint64_t result = sub_24F8CE6F0();
LABEL_22:
    char v10 = 6;
    goto LABEL_18;
  }
  uint64_t v16 = (uint64_t)a1[1];
  uint64_t v17 = v16 - 1;
  if (v16 < 1) {
    goto LABEL_17;
  }
  uint64_t v18 = *a1;
  if (**a1 - 48 != (char)(**a1 - 48)) {
    goto LABEL_45;
  }
  if ((**a1 - 48) > 9u) {
    goto LABEL_17;
  }
  uint64_t v19 = v18 + 1;
  *a1 = v18 + 1;
  a1[1] = (char *)v17;
  uint64_t result = sub_24F8CE6F0();
  if (v16 == 1) {
    goto LABEL_41;
  }
  if ((char)(*v19 - 48) == *v19 - 48)
  {
    if ((*v19 - 48) <= 9u)
    {
      while (v17 >= 2)
      {
        int v20 = v19[1] - 48;
        if ((char)(v19[1] - 48) != v20) {
          goto LABEL_44;
        }
        ++v19;
        --v17;
        if (v20 >= 0xAu) {
          goto LABEL_40;
        }
      }
      uint64_t v17 = 0;
      uint64_t v19 = &v18[v16];
LABEL_40:
      *a1 = v19;
      a1[1] = (char *)v17;
    }
LABEL_41:
    uint64_t result = sub_24F8654E0(a1);
    goto LABEL_22;
  }
LABEL_46:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SQLiteDateParser()
{
  return &type metadata for SQLiteDateParser;
}

uint64_t sub_24F8652F8()
{
  uint64_t v1 = (uint64_t)v0[1];
  if (v1 < 1) {
    return 0;
  }
  int v2 = *v0;
  int v3 = **v0 - 48;
  if (v3 != (char)(**v0 - 48))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if ((**v0 - 48) > 9u) {
    return 0;
  }
  *id v0 = v2 + 1;
  v0[1] = (char *)(v1 - 1);
  if (v1 == 1) {
    return 0;
  }
  int v4 = v2[1] - 48;
  if (v4 != (char)v4) {
    goto LABEL_16;
  }
  if ((v2[1] - 48) > 9u) {
    return 0;
  }
  *id v0 = v2 + 2;
  v0[1] = (char *)(v1 - 2);
  if (v1 == 2) {
    return 0;
  }
  int v5 = v2[2] - 48;
  if (v5 != (char)v5) {
    goto LABEL_17;
  }
  if ((v2[2] - 48) > 9u) {
    return 0;
  }
  *id v0 = v2 + 3;
  v0[1] = (char *)(v1 - 3);
  if (v1 == 3) {
    return 0;
  }
  int v6 = v2[3] - 48;
  if (v6 != (char)v6) {
    goto LABEL_18;
  }
  if ((v2[3] - 48) > 9u) {
    return 0;
  }
  *id v0 = v2 + 4;
  v0[1] = (char *)(v1 - 4);
  return 10 * (10 * (10 * v3 + v4) + v5)
       + v6;
}

uint64_t sub_24F865400(uint64_t result)
{
  uint64_t v2 = (uint64_t)v1[1];
  BOOL v3 = v2 < 1;
  int v4 = (char *)(v2 - 1);
  if (v3) {
    return 0;
  }
  char v5 = result;
  if (result > 0x7F)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = 0;
    if ((**v1 & 0x80000000) == 0 && **v1 == v5)
    {
      ++*v1;
      v1[1] = v4;
      return 1;
    }
  }
  return result;
}

uint64_t sub_24F865450()
{
  uint64_t v1 = (uint64_t)v0[1];
  if (v1 < 1) {
    return 0;
  }
  uint64_t v2 = *v0;
  int v3 = **v0 - 48;
  if (v3 != (char)(**v0 - 48))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if ((**v0 - 48) > 9u) {
    return 0;
  }
  *id v0 = v2 + 1;
  v0[1] = (char *)(v1 - 1);
  if (v1 == 1) {
    return 0;
  }
  int v4 = (char)v2[1] - 48;
  if (v4 != (char)v4) {
    goto LABEL_10;
  }
  if ((v2[1] - 48) > 9u) {
    return 0;
  }
  *id v0 = v2 + 2;
  v0[1] = (char *)(v1 - 2);
  return 10 * v3 + v4;
}

uint64_t sub_24F8654E0(char **a1)
{
  uint64_t v2 = sub_24F781274(&qword_26B1F5710);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = (uint64_t)a1[1];
  BOOL v4 = v3 < 1;
  char v5 = (unsigned __int8 *)(v3 - 1);
  if (!v4)
  {
    int v6 = *a1;
    if ((**a1 & 0x80000000) == 0)
    {
      int v7 = **a1;
      if (v7 == 43)
      {
        *a1 = v6 + 1;
        a1[1] = (char *)v5;
        uint64_t v9 = sub_24F865450();
        if ((v10 & 1) == 0)
        {
          uint64_t v11 = v9;
          if (sub_24F865400(58))
          {
            uint64_t result = sub_24F865450();
            if ((v12 & 1) == 0)
            {
              if ((unsigned __int128)(v11 * (__int128)3600) >> 64 != (3600 * v11) >> 63)
              {
LABEL_31:
                __break(1u);
                goto LABEL_32;
              }
              if ((unsigned __int128)(result * (__int128)60) >> 64 != (60 * result) >> 63)
              {
LABEL_32:
                __break(1u);
                return result;
              }
              if (!__OFADD__(3600 * v11, 60 * result)) {
                goto LABEL_6;
              }
              __break(1u);
            }
          }
        }
      }
      else if (v7 == 90)
      {
        *a1 = v6 + 1;
        a1[1] = (char *)v5;
LABEL_6:
        sub_24F8CEA60();
        sub_24F8CE7D0();
        return 1;
      }
    }
    uint64_t v13 = (uint64_t)a1[1];
    BOOL v4 = v13 < 1;
    uint64_t v14 = (unsigned __int8 *)(v13 - 1);
    if (!v4 && **a1 == 45)
    {
      ++*a1;
      a1[1] = (char *)v14;
      uint64_t v15 = sub_24F865450();
      if ((v16 & 1) == 0)
      {
        uint64_t v17 = v15;
        if (sub_24F865400(58))
        {
          uint64_t result = sub_24F865450();
          if ((v18 & 1) == 0)
          {
            uint64_t v19 = 3600 * v17;
            if ((unsigned __int128)(v17 * (__int128)3600) >> 64 == (3600 * v17) >> 63)
            {
              uint64_t v20 = 60 * result;
              if ((unsigned __int128)(result * (__int128)60) >> 64 == (60 * result) >> 63)
              {
                BOOL v21 = __OFADD__(v19, v20);
                uint64_t v22 = v19 + v20;
                if (!v21)
                {
                  if (!__OFSUB__(0, v22)) {
                    goto LABEL_6;
                  }
                  __break(1u);
                  return 0;
                }
                goto LABEL_30;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
        }
      }
    }
  }
  return 0;
}

void *+ infix(_:_:)()
{
  sub_24F78097C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v3 = sub_24F77B038();
  *(_OWORD *)(v3 + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  v4();
  sub_24F7811D0(v2, v2[3]);
  sub_24F77F860();
  v5();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    sub_24F774F3C(v12);
    if (v6 == 1)
    {
      sub_24F7AC4B8((uint64_t)v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
      uint64_t v7 = swift_bridgeObjectRelease();
      return sub_24F77B950(v7, v12);
    }
    v10[0] = 43;
    v10[1] = 0xE100000000000000;
    void v10[2] = 0;
    v11[0] = 0;
    *(_DWORD *)((char *)v11 + 7) = 0;
    v11[2] = v3;
    sub_24F81C810((uint64_t)v10);
    uint64_t v9 = v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    v12[0] = 0;
    v12[1] = 0;
    char v13 = 0;
    sub_24F7667B8((uint64_t)v12);
    uint64_t v9 = v12;
  }
  return (void *)sub_24F76F710((uint64_t)v9, v0);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  void *v9;
  void v10[3];
  void v11[18];
  void v12[2];
  char v13;

  sub_24F78097C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v3 = sub_24F77B038();
  *(_OWORD *)(v3 + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  v4();
  sub_24F7811D0(v2, v2[3]);
  sub_24F77F860();
  v5();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    sub_24F774F3C(v12);
    if (v6 == 1)
    {
      sub_24F7AC4B8((uint64_t)v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
      uint64_t v7 = swift_bridgeObjectRelease();
      return sub_24F77B950(v7, v12);
    }
    v10[0] = 43;
    v10[1] = 0xE100000000000000;
    void v10[2] = 0;
    v11[0] = 0;
    *(_DWORD *)((char *)v11 + 7) = 0;
    v11[2] = v3;
    sub_24F81C810((uint64_t)v10);
    uint64_t v9 = v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    v12[0] = 0;
    v12[1] = 0;
    char v13 = 0;
    sub_24F7667B8((uint64_t)v12);
    uint64_t v9 = v12;
  }
  return (void *)sub_24F76F710((uint64_t)v9, v0);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  void *v9;
  void v10[3];
  void v11[18];
  void v12[2];
  char v13;

  sub_24F78097C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v3 = sub_24F77B038();
  *(_OWORD *)(v3 + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  v4();
  sub_24F7811D0(v2, v2[3]);
  sub_24F77F860();
  v5();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    sub_24F774F3C(v12);
    if (v6 == 1)
    {
      sub_24F7AC4B8((uint64_t)v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
      uint64_t v7 = swift_bridgeObjectRelease();
      return sub_24F77B950(v7, v12);
    }
    v10[0] = 43;
    v10[1] = 0xE100000000000000;
    void v10[2] = 0;
    v11[0] = 0;
    *(_DWORD *)((char *)v11 + 7) = 0;
    v11[2] = v3;
    sub_24F81C810((uint64_t)v10);
    uint64_t v9 = v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    v12[0] = 0;
    v12[1] = 0;
    char v13 = 0;
    sub_24F7667B8((uint64_t)v12);
    uint64_t v9 = v12;
  }
  return (void *)sub_24F76F710((uint64_t)v9, v0);
}

uint64_t - infix(_:_:)(void *a1, void *a2)
{
  return sub_24F77EAF0(a1, a2);
}

{
  return sub_24F77E340(a1, a2);
}

{
  return sub_24F773CE8(a1, a2);
}

void ** infix(_:_:)()
{
  sub_24F78097C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v3 = sub_24F77B038();
  *(_OWORD *)(v3 + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  v4();
  sub_24F7811D0(v2, v2[3]);
  sub_24F77F860();
  v5();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    sub_24F774F3C(&v12);
    if (v6 == 1)
    {
      sub_24F7AC4B8((uint64_t)&v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
      uint64_t v7 = swift_bridgeObjectRelease();
      return sub_24F77B950(v7, &v12);
    }
    v10[0] = 42;
    v10[1] = 0xE100000000000000;
    void v10[2] = 1;
    v11[0] = 0;
    *(_DWORD *)((char *)v11 + 7) = 0;
    v11[2] = v3;
    sub_24F81C810((uint64_t)v10);
    uint64_t v9 = (long long *)v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v12 = xmmword_24F8DF640;
    char v13 = 0;
    sub_24F7667B8((uint64_t)&v12);
    uint64_t v9 = &v12;
  }
  return (void *)sub_24F76F710((uint64_t)v9, v0);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  long long *v9;
  void v10[3];
  void v11[18];
  long long v12;
  char v13;

  sub_24F78097C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v3 = sub_24F77B038();
  *(_OWORD *)(v3 + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  v4();
  sub_24F7811D0(v2, v2[3]);
  sub_24F77F860();
  v5();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    sub_24F774F3C(&v12);
    if (v6 == 1)
    {
      sub_24F7AC4B8((uint64_t)&v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
      uint64_t v7 = swift_bridgeObjectRelease();
      return sub_24F77B950(v7, &v12);
    }
    v10[0] = 42;
    v10[1] = 0xE100000000000000;
    void v10[2] = 1;
    v11[0] = 0;
    *(_DWORD *)((char *)v11 + 7) = 0;
    v11[2] = v3;
    sub_24F81C810((uint64_t)v10);
    uint64_t v9 = (long long *)v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v12 = xmmword_24F8DF640;
    char v13 = 0;
    sub_24F7667B8((uint64_t)&v12);
    uint64_t v9 = &v12;
  }
  return (void *)sub_24F76F710((uint64_t)v9, v0);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  long long *v9;
  void v10[3];
  void v11[18];
  long long v12;
  char v13;

  sub_24F78097C();
  sub_24F781274(&qword_26B1F7358);
  uint64_t v3 = sub_24F77B038();
  *(_OWORD *)(v3 + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  v4();
  sub_24F7811D0(v2, v2[3]);
  sub_24F77F860();
  v5();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    sub_24F774F3C(&v12);
    if (v6 == 1)
    {
      sub_24F7AC4B8((uint64_t)&v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76CB14);
      uint64_t v7 = swift_bridgeObjectRelease();
      return sub_24F77B950(v7, &v12);
    }
    v10[0] = 42;
    v10[1] = 0xE100000000000000;
    void v10[2] = 1;
    v11[0] = 0;
    *(_DWORD *)((char *)v11 + 7) = 0;
    v11[2] = v3;
    sub_24F81C810((uint64_t)v10);
    uint64_t v9 = (long long *)v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v12 = xmmword_24F8DF640;
    char v13 = 0;
    sub_24F7667B8((uint64_t)&v12);
    uint64_t v9 = &v12;
  }
  return (void *)sub_24F76F710((uint64_t)v9, v0);
}

uint64_t / infix(_:_:)(void *a1, void *a2)
{
  return sub_24F77EAF0(a1, a2);
}

{
  return sub_24F77E340(a1, a2);
}

{
  return sub_24F773CE8(a1, a2);
}

uint64_t sub_24F86597C(void *a1, void *a2)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  int v4 = v3();
  sub_24F782C18(v4, v5, v6, v7, v8, v9, v10, v11, v38, v42, v45, v48, v51, v54, v57, v60, v63, v66, v69,
    v72,
    v75,
    v78,
    v81,
    v84,
    v87,
    v90,
    v93,
    v96,
    v99,
    v102,
    v105,
    v107,
    v109,
    v111,
    v113,
    v115,
    v117,
    v119,
    v121,
    v123,
    v125,
    v127,
    v129,
    v131,
    v133,
    v135,
    v137,
    v139,
    v141,
    v143,
    v145);
  sub_24F7811D0(a2, a2[3]);
  sub_24F77F860();
  uint64_t v13 = v12();
  BOOL v21 = sub_24F773730(v13, v14, v15, v16, v17, v18, v19, v20, v39);
  sub_24F77DBB0((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v40, v43, v46, v49, v52, v55, v58, v61, v64, v67, v70,
    v73,
    v76,
    v79,
    v82,
    v85,
    v88,
    v91,
    v94,
    v97,
    v100,
    v103);
  uint64_t v29 = sub_24F7AC4B8((uint64_t)v147, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F867EA0(v29, v30, v31, v32, v33, v34, v35, v36, v41, v44, v47, v50, v53, v56, v59, v62, v65, v68, v71,
           v74,
           v77,
           v80,
           v83,
           v86,
           v89,
           v92,
           v95,
           v98,
           v101,
           v104,
           v106,
           v108,
           v110,
           v112,
           v114,
           v116,
           v118,
           v120,
           v122,
           v124,
           v126,
           v128,
           v130,
           v132,
           v134,
           v136,
           v138,
           v140,
           v142,
           v144,
           v146);
}

uint64_t && infix(_:_:)()
{
  sub_24F775D68();
  sub_24F77F0F4();
  sub_24F77C118();
  sub_24F781274(&qword_26B1F7358);
  *(_OWORD *)(sub_24F77B038() + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v0, v0[3]);
  sub_24F77F860();
  v2();
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  uint64_t v4 = v3();
  sub_24F781604(v4);
  sub_24F77B68C();
  return swift_bridgeObjectRelease();
}

{
  void *v0;
  void *v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  sub_24F775D68();
  sub_24F77F0F4();
  sub_24F77C118();
  sub_24F781274(&qword_26B1F7358);
  *(_OWORD *)(sub_24F77B038() + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v0, v0[3]);
  sub_24F77F860();
  v2();
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  uint64_t v4 = v3();
  sub_24F781604(v4);
  sub_24F77B68C();
  return swift_bridgeObjectRelease();
}

{
  void *v0;
  void *v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  sub_24F775D68();
  sub_24F77F0F4();
  sub_24F77C118();
  sub_24F781274(&qword_26B1F7358);
  *(_OWORD *)(sub_24F77B038() + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v0, v0[3]);
  sub_24F77F860();
  v2();
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  uint64_t v4 = v3();
  sub_24F781604(v4);
  sub_24F77B68C();
  return swift_bridgeObjectRelease();
}

uint64_t Sequence<>.contains(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F81AFD4, (uint64_t)&v11, v12, (uint64_t)&type metadata for SQLExpression, MEMORY[0x263F8E628], v13, MEMORY[0x263F8E658], v7);
  swift_release();
  v21[0] = v8;
  sub_24F7D9FA8((uint64_t)v21);
  sub_24F7AD780((uint64_t)v21, (uint64_t)__src);
  memcpy(__dst, __src, sizeof(__dst));
  sub_24F7811D0(a1, a1[3]);
  sub_24F777734();
  sub_24F77F860();
  v9();
  memcpy(v19, v23, 0xA3uLL);
  sub_24F7D33F4(v19, a5);
  sub_24F7AC4B8((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return swift_bridgeObjectRelease();
}

uint64_t == infix(_:_:)@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  int v6 = v5();
  sub_24F782C18(v6, v7, v8, v9, v10, v11, v12, v13, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66);
  sub_24F7811D0(a2, a2[3]);
  sub_24F77F860();
  v14();
  sub_24F780D48(&v24);
  sub_24F8180C0(&v45, a3);
  uint64_t v15 = sub_24F7AC4B8((uint64_t)v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F867EA0(v15, v16, v17, v18, v19, v20, v21, v22, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34,
           v35,
           v36,
           v37,
           v38,
           v39,
           v40,
           v41,
           v42,
           v43,
           v44,
           v45,
           v46,
           v47,
           v48,
           v49,
           v50,
           v51,
           v52,
           v53,
           v54,
           v55,
           v56,
           v57,
           v58,
           v59,
           v60,
           v61,
           v62,
           v63,
           v64,
           v65,
           v66);
}

uint64_t == infix(_:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  v5();
  sub_24F81C6B8(a2, (uint64_t)v10);
  if (v11)
  {
    sub_24F7811D0(v10, v11);
    sub_24F77F860();
    v6();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v10);
    memcpy(__dst, __src, 0xA3uLL);
  }
  else
  {
    sub_24F867C28((uint64_t)v10);
    __src[0] = 0;
    __src[1] = 0;
    LOBYTE(__src[2]) = 4;
    sub_24F7667B8((uint64_t)__src);
    sub_24F76F710((uint64_t)__src, (uint64_t)__dst);
  }
  sub_24F780D48(v8);
  sub_24F8180C0(v12, a3);
  sub_24F7AC4B8((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  memcpy(__src, v12, 0xA3uLL);
  return sub_24F7AC4B8((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t != infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_24F866B58(a1, a2, (void (*)(uint64_t, uint64_t))== infix(_:_:));
}

{
  return sub_24F866B58(a1, a2, (void (*)(uint64_t, uint64_t))== infix(_:_:));
}

{
  return sub_24F866B58(a1, a2, (void (*)(uint64_t, uint64_t))== infix(_:_:));
}

uint64_t ! prefix(_:)(void *a1)
{
  sub_24F780578(a1);
  sub_24F77F860();
  int v3 = v2();
  sub_24F77C878(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33[0]);
  sub_24F81A714((void *)2, v1);
  return sub_24F7AC4B8((uint64_t)v33, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t || infix(_:_:)()
{
  sub_24F775D68();
  sub_24F780110();
  sub_24F781274(&qword_26B1F7358);
  *(_OWORD *)(sub_24F77B038() + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v0, v0[3]);
  sub_24F77F860();
  v2();
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  uint64_t v4 = v3();
  sub_24F781604(v4);
  sub_24F77B68C();
  return swift_bridgeObjectRelease();
}

{
  void *v0;
  void *v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  sub_24F775D68();
  sub_24F780110();
  sub_24F781274(&qword_26B1F7358);
  *(_OWORD *)(sub_24F77B038() + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v0, v0[3]);
  sub_24F77F860();
  v2();
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  uint64_t v4 = v3();
  sub_24F781604(v4);
  sub_24F77B68C();
  return swift_bridgeObjectRelease();
}

{
  void *v0;
  void *v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  sub_24F775D68();
  sub_24F780110();
  sub_24F781274(&qword_26B1F7358);
  *(_OWORD *)(sub_24F77B038() + 16) = xmmword_24F8E0850;
  sub_24F7811D0(v0, v0[3]);
  sub_24F77F860();
  v2();
  sub_24F7811D0(v1, v1[3]);
  sub_24F77F860();
  uint64_t v4 = v3();
  sub_24F781604(v4);
  sub_24F77B68C();
  return swift_bridgeObjectRelease();
}

uint64_t == infix(_:_:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  sub_24F81C6B8(a1, (uint64_t)v11);
  if (v12)
  {
    sub_24F7811D0(v11, v12);
    sub_24F77F860();
    v5();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v11);
    memcpy(__dst, __src, 0xA3uLL);
  }
  else
  {
    sub_24F867C28((uint64_t)v11);
    __src[0] = 0;
    __src[1] = 0;
    LOBYTE(__src[2]) = 4;
    sub_24F7667B8((uint64_t)__src);
    sub_24F76F710((uint64_t)__src, (uint64_t)__dst);
  }
  sub_24F780D48(v9);
  sub_24F7811D0(a2, a2[3]);
  sub_24F77F860();
  v6();
  memcpy(v8, __src, sizeof(v8));
  sub_24F8180C0(v9, a3);
  sub_24F7AC4B8((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F7AC4B8((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t == infix(_:_:)@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  if (a2)
  {
    sub_24F7811D0(a1, a1[3]);
    sub_24F77F860();
    int v5 = v4();
    sub_24F77C878(v5, v6, v7, v8, v9, v10, v11, v12, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46[0]);
    uint64_t v13 = a3;
    uint64_t v14 = 0;
  }
  else
  {
    sub_24F7811D0(a1, a1[3]);
    sub_24F77F860();
    int v16 = v15();
    sub_24F77C878(v16, v17, v18, v19, v20, v21, v22, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46[0]);
    uint64_t v13 = a3;
    uint64_t v14 = 1;
  }
  sub_24F81A714((void *)v14, v13);
  return sub_24F7AC4B8((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t == infix(_:_:)@<X0>(char a1@<W0>, void *a2@<X1>, void *a3@<X8>)
{
  if (a1)
  {
    sub_24F7811D0(a2, a2[3]);
    sub_24F77F860();
    int v5 = v4();
    sub_24F77C878(v5, v6, v7, v8, v9, v10, v11, v12, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46[0]);
    uint64_t v13 = a3;
    uint64_t v14 = 0;
  }
  else
  {
    sub_24F7811D0(a2, a2[3]);
    sub_24F77F860();
    int v16 = v15();
    sub_24F77C878(v16, v17, v18, v19, v20, v21, v22, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46[0]);
    uint64_t v13 = a3;
    uint64_t v14 = 1;
  }
  sub_24F81A714((void *)v14, v13);
  return sub_24F7AC4B8((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t != infix(_:_:)(void *a1, char a2)
{
  v5[3] = &type metadata for SQLExpression;
  v5[4] = &protocol witness table for SQLExpression;
  v5[0] = sub_24F781DE4();
  == infix(_:_:)(a1, a2, (void *)(v5[0] + 16));
  ! prefix(_:)(v5);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v5);
}

uint64_t != infix(_:_:)(char a1, void *a2)
{
  v5[3] = &type metadata for SQLExpression;
  v5[4] = &protocol witness table for SQLExpression;
  v5[0] = sub_24F781DE4();
  == infix(_:_:)(a1, a2, (void *)(v5[0] + 16));
  ! prefix(_:)(v5);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v5);
}

uint64_t === infix(_:_:)(void *a1)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  int v2 = v1();
  sub_24F782C18(v2, v3, v4, v5, v6, v7, v8, v9, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63);
  sub_24F7819E8();
  sub_24F77F860();
  v10();
  int v11 = sub_24F780D48(&v21);
  sub_24F7803D0((uint64_t)v11, &v42, &v21);
  uint64_t v12 = sub_24F7AC4B8((uint64_t)v64, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F867EA0(v12, v13, v14, v15, v16, v17, v18, v19, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,
           v32,
           v33,
           v34,
           v35,
           v36,
           v37,
           v38,
           v39,
           v40,
           v41,
           v42,
           v43,
           v44,
           v45,
           v46,
           v47,
           v48,
           v49,
           v50,
           v51,
           v52,
           v53,
           v54,
           v55,
           v56,
           v57,
           v58,
           v59,
           v60,
           v61,
           v62,
           v63);
}

uint64_t === infix(_:_:)(void *a1, uint64_t a2)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  v3();
  sub_24F81C6B8(a2, (uint64_t)v9);
  if (v10)
  {
    sub_24F7811D0(v9, v10);
    sub_24F77F860();
    v4();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v9);
    memcpy(__dst, __src, 0xA3uLL);
  }
  else
  {
    sub_24F867C28((uint64_t)v9);
    __src[0] = 0;
    __src[1] = 0;
    LOBYTE(__src[2]) = 4;
    sub_24F7667B8((uint64_t)__src);
    sub_24F76F710((uint64_t)__src, (uint64_t)__dst);
  }
  int v5 = sub_24F780D48(v7);
  sub_24F7803D0((uint64_t)v5, v11, v7);
  sub_24F7AC4B8((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  memcpy(__src, v11, 0xA3uLL);
  return sub_24F7AC4B8((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

uint64_t === infix(_:_:)(uint64_t a1, void *a2)
{
  sub_24F81C6B8(a1, (uint64_t)&v14);
  if (v15)
  {
    sub_24F794DE0(&v14, (uint64_t)v16);
    sub_24F7811D0(v16, v16[3]);
    sub_24F77F860();
    v3();
    memcpy(__dst, __src, 0xA3uLL);
    sub_24F7819E8();
    sub_24F77F860();
    v4();
    int v5 = memcpy(v10, v13, 0xA3uLL);
    sub_24F7803D0((uint64_t)v5, __dst, v10);
    sub_24F7AC4B8((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
    sub_24F7AC4B8((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
    return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v16);
  }
  else
  {
    sub_24F867C28((uint64_t)&v14);
    sub_24F7811D0(a2, a2[3]);
    sub_24F77F860();
    v7();
    memcpy(v10, __dst, 0xA3uLL);
    __src[1] = 0;
    __src[0] = 0;
    LOBYTE(__src[2]) = 4;
    sub_24F7667B8((uint64_t)__src);
    sub_24F76F710((uint64_t)__src, (uint64_t)v13);
    int v8 = memcpy(v9, v13, 0xA3uLL);
    sub_24F7803D0((uint64_t)v8, v10, v9);
    return sub_24F7AC4B8((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  }
}

uint64_t !== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_24F866B58(a1, a2, (void (*)(uint64_t, uint64_t))=== infix(_:_:));
}

{
  return sub_24F866B58(a1, a2, (void (*)(uint64_t, uint64_t))=== infix(_:_:));
}

{
  return sub_24F866B58(a1, a2, (void (*)(uint64_t, uint64_t))=== infix(_:_:));
}

uint64_t sub_24F866B58(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  v7[3] = &type metadata for SQLExpression;
  v7[4] = &protocol witness table for SQLExpression;
  v7[0] = sub_24F781DE4();
  a3(a1, a2);
  ! prefix(_:)(v7);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
}

uint64_t <= infix(_:_:)(void *a1, void *a2)
{
  return sub_24F76B9DC(a1, a2);
}

{
  return sub_24F867E98(a1, a2);
}

{
  return sub_24F78594C(a1, a2);
}

uint64_t < infix(_:_:)(void *a1, void *a2)
{
  return sub_24F77E340(a1, a2);
}

{
  return sub_24F77EAF0(a1, a2);
}

{
  return sub_24F773CE8(a1, a2);
}

uint64_t sub_24F866C00(void *a1, void *a2)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  int v4 = v3();
  sub_24F782C18(v4, v5, v6, v7, v8, v9, v10, v11, v38, v42, v45, v48, v51, v54, v57, v60, v63, v66, v69,
    v72,
    v75,
    v78,
    v81,
    v84,
    v87,
    v90,
    v93,
    v96,
    v99,
    v102,
    v105,
    v107,
    v109,
    v111,
    v113,
    v115,
    v117,
    v119,
    v121,
    v123,
    v125,
    v127,
    v129,
    v131,
    v133,
    v135,
    v137,
    v139,
    v141,
    v143,
    v145);
  sub_24F7811D0(a2, a2[3]);
  sub_24F77F860();
  uint64_t v13 = v12();
  uint64_t v21 = sub_24F773730(v13, v14, v15, v16, v17, v18, v19, v20, v39);
  sub_24F77DBB0((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v40, v43, v46, v49, v52, v55, v58, v61, v64, v67, v70,
    v73,
    v76,
    v79,
    v82,
    v85,
    v88,
    v91,
    v94,
    v97,
    v100,
    v103);
  uint64_t v29 = sub_24F7AC4B8((uint64_t)v147, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F867EA0(v29, v30, v31, v32, v33, v34, v35, v36, v41, v44, v47, v50, v53, v56, v59, v62, v65, v68, v71,
           v74,
           v77,
           v80,
           v83,
           v86,
           v89,
           v92,
           v95,
           v98,
           v101,
           v104,
           v106,
           v108,
           v110,
           v112,
           v114,
           v116,
           v118,
           v120,
           v122,
           v124,
           v126,
           v128,
           v130,
           v132,
           v134,
           v136,
           v138,
           v140,
           v142,
           v144,
           v146);
}

uint64_t sub_24F866CE8(void *a1, void *a2)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  int v4 = v3();
  sub_24F782C18(v4, v5, v6, v7, v8, v9, v10, v11, v38, v42, v45, v48, v51, v54, v57, v60, v63, v66, v69,
    v72,
    v75,
    v78,
    v81,
    v84,
    v87,
    v90,
    v93,
    v96,
    v99,
    v102,
    v105,
    v107,
    v109,
    v111,
    v113,
    v115,
    v117,
    v119,
    v121,
    v123,
    v125,
    v127,
    v129,
    v131,
    v133,
    v135,
    v137,
    v139,
    v141,
    v143,
    v145);
  sub_24F7811D0(a2, a2[3]);
  sub_24F77F860();
  uint64_t v13 = v12();
  uint64_t v21 = sub_24F773730(v13, v14, v15, v16, v17, v18, v19, v20, v39);
  sub_24F77DBB0((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v40, v43, v46, v49, v52, v55, v58, v61, v64, v67, v70,
    v73,
    v76,
    v79,
    v82,
    v85,
    v88,
    v91,
    v94,
    v97,
    v100,
    v103);
  uint64_t v29 = sub_24F7AC4B8((uint64_t)v147, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F867EA0(v29, v30, v31, v32, v33, v34, v35, v36, v41, v44, v47, v50, v53, v56, v59, v62, v65, v68, v71,
           v74,
           v77,
           v80,
           v83,
           v86,
           v89,
           v92,
           v95,
           v98,
           v101,
           v104,
           v106,
           v108,
           v110,
           v112,
           v114,
           v116,
           v118,
           v120,
           v122,
           v124,
           v126,
           v128,
           v130,
           v132,
           v134,
           v136,
           v138,
           v140,
           v142,
           v144,
           v146);
}

uint64_t > infix(_:_:)(void *a1, void *a2)
{
  return sub_24F77E340(a1, a2);
}

{
  return sub_24F77EAF0(a1, a2);
}

{
  return sub_24F773CE8(a1, a2);
}

uint64_t >= infix(_:_:)(void *a1, void *a2)
{
  return sub_24F76B9DC(a1, a2);
}

{
  return sub_24F867E98(a1, a2);
}

{
  return sub_24F78594C(a1, a2);
}

uint64_t - prefix(_:)(void *a1)
{
  sub_24F780578(a1);
  sub_24F77F860();
  v2();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 45;
  *(void *)(v3 + 24) = 0xE100000000000000;
  *(unsigned char *)(v3 + 32) = 0;
  memcpy((void *)(v3 + 40), v5, 0xA3uLL);
  v6[0] = v3;
  sub_24F81C570((uint64_t)v6);
  return sub_24F76F710((uint64_t)v6, v1);
}

uint64_t Range<>.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_24F777450(a1, a2, a3, a4, a5, a6, a7, a8, v20, v22, v23, v24, v25, v26, v27[0], v27[1], v27[2], (uint64_t)v28, (uint64_t)v29);
  int v10 = *(void (**)(void))(*(void *)(v9 - 8) + 16);
  sub_24F7711B4();
  v10();
  v30[3] = &type metadata for SQLExpression;
  v30[4] = &protocol witness table for SQLExpression;
  v30[0] = sub_24F781DE4();
  >= infix(_:_:)(v8, v27);
  uint64_t v11 = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v27);
  sub_24F867EB8(v11, v12, v13, v14, v15, v16, v17, v18, v21, v22, v23, v24, v25, v26);
  sub_24F7711B4();
  v10();
  uint64_t v28 = &type metadata for SQLExpression;
  uint64_t v29 = &protocol witness table for SQLExpression;
  v27[0] = sub_24F781DE4();
  < infix(_:_:)(v8, &v22);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v22);
  && infix(_:_:)();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v27);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v30);
}

{
  void *v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  ValueMetadata *v28;
  _UNKNOWN **v29;
  void v30[5];

  sub_24F777450(a1, a2, a3, a4, a5, a6, a7, a8, v20, v22, v23, v24, v25, v26, v27[0], v27[1], v27[2], (uint64_t)v28, (uint64_t)v29);
  int v10 = *(void (**)(void))(*(void *)(v9 - 8) + 16);
  sub_24F7711B4();
  v10();
  v30[3] = &type metadata for SQLExpression;
  v30[4] = &protocol witness table for SQLExpression;
  v30[0] = sub_24F781DE4();
  >= infix(_:_:)(v8, v27);
  uint64_t v11 = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v27);
  sub_24F867EB8(v11, v12, v13, v14, v15, v16, v17, v18, v21, v22, v23, v24, v25, v26);
  sub_24F7711B4();
  v10();
  uint64_t v28 = &type metadata for SQLExpression;
  uint64_t v29 = &protocol witness table for SQLExpression;
  v27[0] = sub_24F781DE4();
  < infix(_:_:)(v8, &v22);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v22);
  && infix(_:_:)();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v27);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v30);
}

uint64_t ClosedRange<>.contains(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  v4();
  memcpy(__dst, __src, sizeof(__dst));
  int v5 = *(void (**)(uint64_t))(a3 + 8);
  uint64_t v6 = sub_24F77BE38();
  v5(v6);
  memcpy(v18, v21, 0xA3uLL);
  uint64_t v7 = sub_24F77BE38();
  v5(v7);
  int v8 = memcpy(v17, v22, 0xA3uLL);
  sub_24F7855D8((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8], v17[9], v17[10],
    v17[11],
    v17[12],
    v17[13],
    v17[14],
    v17[15],
    v17[16],
    v17[17],
    v17[18],
    v17[19],
    v17[20],
    v18[0],
    v18[1],
    v18[2],
    v18[3],
    v18[4],
    v18[5],
    v18[6],
    v18[7],
    v18[8],
    v18[9],
    v18[10],
    v18[11],
    v18[12],
    v18[13],
    v18[14],
    v18[15],
    v18[16],
    v18[17],
    v18[18],
    v18[19],
    v18[20],
    __dst[0]);
  sub_24F7AC4B8((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  sub_24F7AC4B8((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F7AC4B8((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

{
  void (*v4)(void);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[21];
  uint64_t v18[21];
  char __dst[163];
  unsigned char __src[168];
  unsigned char v21[168];
  unsigned char v22[168];

  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  v4();
  memcpy(__dst, __src, sizeof(__dst));
  int v5 = *(void (**)(uint64_t))(a3 + 8);
  uint64_t v6 = sub_24F77BE38();
  v5(v6);
  memcpy(v18, v21, 0xA3uLL);
  uint64_t v7 = sub_24F77BE38();
  v5(v7);
  int v8 = memcpy(v17, v22, 0xA3uLL);
  sub_24F7855D8((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8], v17[9], v17[10],
    v17[11],
    v17[12],
    v17[13],
    v17[14],
    v17[15],
    v17[16],
    v17[17],
    v17[18],
    v17[19],
    v17[20],
    v18[0],
    v18[1],
    v18[2],
    v18[3],
    v18[4],
    v18[5],
    v18[6],
    v18[7],
    v18[8],
    v18[9],
    v18[10],
    v18[11],
    v18[12],
    v18[13],
    v18[14],
    v18[15],
    v18[16],
    v18[17],
    v18[18],
    v18[19],
    v18[20],
    __dst[0]);
  sub_24F7AC4B8((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  sub_24F7AC4B8((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return sub_24F7AC4B8((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
}

void *sub_24F867864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *(*v4)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  void *v6;
  void v8[21];

  uint64_t v3 = *(void *)(a3 + a2 - 8);
  int v4 = *(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = v4(v8, AssociatedTypeWitness, v3);
  return sub_24F77B950((uint64_t)v6, v8);
}

uint64_t Sequence<>.contains(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X7>, void *a5@<X8>)
{
  v11[0] = sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F8679FC, 0, a2, (uint64_t)&type metadata for SQLExpression, MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], a4);
  sub_24F7D9FA8((uint64_t)v11);
  sub_24F7AD780((uint64_t)v11, (uint64_t)__src);
  memcpy(__dst, __src, sizeof(__dst));
  sub_24F7811D0(a1, a1[3]);
  sub_24F77F860();
  v7();
  sub_24F780D48(v9);
  sub_24F7D33F4(v9, a5);
  sub_24F7AC4B8((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24F76C98C);
  return swift_bridgeObjectRelease();
}

void *sub_24F8679FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_24F7811D0(a1, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(__src, v3, v4);
  return memcpy(a2, __src, 0xA3uLL);
}

uint64_t SQLSpecificExpressible.like(_:escape:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24F77F860();
  v6();
  sub_24F7811D0(a1, a1[3]);
  sub_24F777734();
  sub_24F77F860();
  v7();
  sub_24F81C6B8(a2, (uint64_t)v12);
  if (v13)
  {
    sub_24F7811D0(v12, v13);
    sub_24F77F860();
    v8();
    nullsub_1(v11);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v12);
  }
  else
  {
    sub_24F867C28((uint64_t)v12);
    sub_24F7A46F0((uint64_t)v11);
  }
  sub_24F7D9FD0((uint64_t)v11, (uint64_t)v14);
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = 1162561868;
  void v9[3] = 0xE400000000000000;
  v9[4] = 0x454B494C20544F4ELL;
  v9[5] = 0xE800000000000000;
  memcpy(v9 + 6, __src, 0xA3uLL);
  memcpy(v9 + 27, v16, 0xA3uLL);
  sub_24F7D9FD0((uint64_t)v14, (uint64_t)(v9 + 48));
  v11[0] = v9;
  sub_24F81C370((uint64_t)v11);
  return sub_24F76F710((uint64_t)v11, a3);
}

uint64_t sub_24F867C08()
{
  return 24;
}

__n128 sub_24F867C14(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_24F867C28(uint64_t a1)
{
  uint64_t v2 = sub_24F781274(&qword_26B1F7350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F867C88()
{
  sub_24F77F674(v0[1].n128_i64[0], v0[1].n128_u64[1], v0[2].n128_i64[0], v0[2].n128_u64[1], v0[3].n128_i64[0], v0[3].n128_i64[1], v0[4].n128_i64[0], v0[4].n128_i64[1], v0[11].n128_u16[0] | (v0[11].n128_u8[2] << 16), v0[5], v0[6], v0[7], v0[8], v0[9]);
  return swift_deallocObject();
}

uint64_t sub_24F867CF0()
{
  swift_bridgeObjectRelease();
  sub_24F77F674(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(unsigned __int16 *)(v0 + 200) | (*(unsigned __int8 *)(v0 + 202) << 16), *(__n128 *)(v0 + 104), *(__n128 *)(v0 + 120), *(__n128 *)(v0 + 136), *(__n128 *)(v0 + 152), *(__n128 *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_24F867D68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F77F674(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned __int16 *)(v0 + 208) | (*(unsigned __int8 *)(v0 + 210) << 16), *(__n128 *)(v0 + 112), *(__n128 *)(v0 + 128), *(__n128 *)(v0 + 144), *(__n128 *)(v0 + 160), *(__n128 *)(v0 + 176));
  sub_24F77F674(*(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272), *(unsigned __int16 *)(v0 + 376) | (*(unsigned __int8 *)(v0 + 378) << 16), *(__n128 *)(v0 + 280), *(__n128 *)(v0 + 296), *(__n128 *)(v0 + 312), *(__n128 *)(v0 + 328), *(__n128 *)(v0 + 344));
  unint64_t v1 = *(void *)(v0 + 448);
  unint64_t v2 = *(void *)(v0 + 488);
  unsigned int v3 = *(unsigned __int16 *)(v0 + 544) | (*(unsigned __int8 *)(v0 + 546) << 16);
  BOOL v4 = v1 >> 1 != 0xFFFFFFFF || v2 > 1;
  if (v4 || (v3 & 0xFE7E00) != 0) {
    sub_24F76C98C(*(void *)(v0 + 384), *(void *)(v0 + 392), *(void *)(v0 + 400), *(void *)(v0 + 408), *(void *)(v0 + 416), *(void *)(v0 + 424), *(void *)(v0 + 432), *(void *)(v0 + 440), v1, *(void *)(v0 + 456), *(void *)(v0 + 464), *(void *)(v0 + 472), *(void *)(v0 + 480), v2, *(void *)(v0 + 496), *(void *)(v0 + 504), *(void *)(v0 + 512), *(void *)(v0 + 520), *(void *)(v0 + 528),
  }
      *(void *)(v0 + 536),
      v3);
  return swift_deallocObject();
}

uint64_t sub_24F867E98(void *a1, void *a2)
{
  return sub_24F86597C(a1, a2);
}

uint64_t sub_24F867EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  return sub_24F7AC4B8((uint64_t)&a51, v51);
}

uint64_t *sub_24F867EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  a13 = v14;
  a14 = v15;
  return sub_24F76ADC4(&a10);
}

void sub_24F867EF0()
{
}

void sub_24F867F00()
{
}

void sub_24F867F24(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = a1[1];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
  }
  a6();
  __break(1u);
}

uint64_t sub_24F868024(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F868060(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_24F86809C()
{
}

void sub_24F8680AC()
{
}

void sub_24F8680BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_24F8680F0()
{
}

void sub_24F868100(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t type metadata accessor for AnyValueReducer()
{
  return sub_24F777DE0();
}

uint64_t type metadata accessor for ValueReducers.Unavailable()
{
  return sub_24F777DE0();
}

uint64_t sub_24F868164()
{
  swift_release();
  return swift_deallocObject();
}

void static ValueObservation<>.tracking<A>(_:fetch:)()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Statement.validate(arguments:)(GRDBInternal::StatementArguments arguments)
{
}

void FetchRequest<>.observationForFirst()()
{
}

{
  FetchRequest<>.observationForAll()();
}

{
  FetchRequest<>.observationForAll()();
}

{
  FetchRequest<>.observationForAll()();
}

void FetchRequest<>.observationForAll()()
{
}

void static TableRecord<>.observationForFirst()()
{
}

void Configuration.trace.getter()
{
}

void static ValueObservation.tracking(_:reducer:)()
{
}

void Configuration.trace.setter()
{
}

void DatabaseReader.remove(collation:)()
{
}

void DatabaseReader.add(collation:)()
{
}

void DatabaseReader.remove(function:)()
{
}

void static ValueObservation<>.trackingCount<A>(_:)()
{
}

void static ValueObservation<>.trackingOne<A>(_:)()
{
}

{
  static ValueObservation<>.trackingAll<A>(_:)();
}

{
  static ValueObservation<>.trackingAll<A>(_:)();
}

void FetchRequest.observationForCount()()
{
}

void static ValueObservation<>.trackingAll<A>(_:)()
{
}

void type metadata accessor for _SQLAssociation()
{
}

uint64_t sub_24F8682F0(uint64_t a1)
{
  sub_24F7AD5DC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_24F7AD3A0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 104)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 176)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + 192))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_24F8683B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_24F799128(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  sub_24F799140(v7, v8, v9, v10, v11);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  uint64_t v14 = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v12)
  {
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v12;
    *(void *)(a1 + 112) = v15;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v17 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v17;
  uint64_t v18 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v18;
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    uint64_t v19 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = v16;
    *(void *)(a1 + 184) = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  }
  uint64_t v20 = *(void *)(a2 + 192);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = v20;
    *(void *)(a1 + 200) = v21;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  }
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  *(unsigned char *)(a1 + 226) = *(unsigned char *)(a2 + 226);
  return a1;
}

uint64_t sub_24F868560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_24F799128(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F7AD5DC(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  uint64_t v13 = *(void *)(a2 + 48);
  char v14 = *(unsigned char *)(a2 + 56);
  sub_24F799140(v10, v11, v12, v13, v14);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v13;
  char v19 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v14;
  sub_24F7AD3A0(v15, v16, v17, v18, v19);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  uint64_t v20 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v20;
  swift_retain();
  swift_release();
  uint64_t v21 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104))
  {
    if (v21)
    {
      uint64_t v22 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v21;
      *(void *)(a1 + 112) = v22;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_24F7783C0(a1 + 104, &qword_269A2A6A0);
  }
  else if (v21)
  {
    uint64_t v23 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v21;
    *(void *)(a1 + 112) = v23;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
LABEL_8:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a1 + 176);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v25 = *(void *)(a2 + 176);
  if (v24)
  {
    if (v25)
    {
      uint64_t v26 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = v25;
      *(void *)(a1 + 184) = v26;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_24F7783C0(a1 + 176, qword_269A2A6A8);
  }
  else if (v25)
  {
    uint64_t v27 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = v25;
    *(void *)(a1 + 184) = v27;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_15:
  uint64_t v28 = *(void *)(a2 + 192);
  if (!*(void *)(a1 + 192))
  {
    if (v28)
    {
      uint64_t v30 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = v28;
      *(void *)(a1 + 200) = v30;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_22;
  }
  if (!v28)
  {
    sub_24F7783C0(a1 + 192, &qword_269A2A6A0);
    goto LABEL_21;
  }
  uint64_t v29 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = v28;
  *(void *)(a1 + 200) = v29;
  swift_retain();
  swift_release();
LABEL_22:
  long long v31 = *(_OWORD *)(a2 + 208);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = v31;
  *(unsigned char *)(a1 + 226) = *(unsigned char *)(a2 + 226);
  return a1;
}

void *sub_24F86881C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE3uLL);
}

uint64_t sub_24F868824(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F7AD5DC(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  char v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v8;
  sub_24F7AD3A0(v9, v10, v11, v12, v13);
  uint64_t v14 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  uint64_t v15 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104))
  {
    if (v15)
    {
      uint64_t v16 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v15;
      *(void *)(a1 + 112) = v16;
      swift_release();
      goto LABEL_6;
    }
    sub_24F7783C0(a1 + 104, &qword_269A2A6A0);
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
LABEL_6:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 176);
  uint64_t v18 = *(void *)(a1 + 176);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  if (v18)
  {
    if (v17)
    {
      uint64_t v19 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = v17;
      *(void *)(a1 + 184) = v19;
      swift_release();
      goto LABEL_11;
    }
    sub_24F7783C0(a1 + 176, qword_269A2A6A8);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_11:
  uint64_t v20 = *(void *)(a2 + 192);
  if (!*(void *)(a1 + 192))
  {
LABEL_15:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_16;
  }
  if (!v20)
  {
    sub_24F7783C0(a1 + 192, &qword_269A2A6A0);
    goto LABEL_15;
  }
  uint64_t v21 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = v20;
  *(void *)(a1 + 200) = v21;
  swift_release();
LABEL_16:
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  *(unsigned char *)(a1 + 226) = *(unsigned char *)(a2 + 226);
  return a1;
}

uint64_t sub_24F868A10(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 227))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 72);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F868A50(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 226) = 0;
    *(_WORD *)(result + 224) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 227) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 227) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLAssociationStep()
{
}

void *sub_24F868ADC(void *result)
{
  uint64_t v1 = result[4] >> 1;
  uint64_t v22 = result[3];
  if (__OFSUB__(v1, v22))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v2 = *result;
  uint64_t v20 = result[2];
  unint64_t v3 = *(void *)(*result + 16);
  if (v1 - v22 >= (uint64_t)v3) {
    uint64_t v4 = *(void *)(v2 + 16);
  }
  else {
    uint64_t v4 = v1 - v22;
  }
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t result = (void *)sub_24F795D90(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v1;
    uint64_t v19 = v2;
    uint64_t v5 = v30;
    if (v4)
    {
      uint64_t v21 = (char *)(v2 + 32);
      swift_bridgeObjectRetain();
      uint64_t result = (void *)swift_unknownObjectRetain();
      char v6 = 0;
      unint64_t v7 = 0;
      uint64_t v24 = v22;
      do
      {
        if (v6)
        {
          sub_24F869994(__dst);
          sub_24F8696F8((uint64_t)__dst, (uint64_t)v29);
          char v6 = 1;
        }
        else
        {
          unint64_t v8 = v3;
          if (v7 == v3) {
            goto LABEL_13;
          }
          if (v7 >= v3) {
            goto LABEL_43;
          }
          uint64_t result = memcpy(__dst, &v21[232 * v7], 0xE3uLL);
          unint64_t v8 = v7 + 1;
          if (v24 == v1)
          {
LABEL_13:
            sub_24F869994(__dst);
            sub_24F8696F8((uint64_t)__dst, (uint64_t)v29);
            char v6 = 1;
          }
          else
          {
            if (v24 < v22 || v24 >= v1) {
              goto LABEL_44;
            }
            memcpy(__src, (const void *)(v20 + 232 * v24++), 0xE3uLL);
            memcpy(v29, __dst, 0xE3uLL);
            memcpy(&v29[232], __src, 0xE3uLL);
            nullsub_1(v29);
            sub_24F79900C((uint64_t)__dst);
            sub_24F79900C((uint64_t)__src);
            char v6 = 0;
          }
          unint64_t v7 = v8;
        }
        sub_24F8696F8((uint64_t)v29, (uint64_t)__src);
        sub_24F8696F8((uint64_t)__src, (uint64_t)__dst);
        uint64_t result = (void *)sub_24F869760((uint64_t)__dst);
        if (result == 1) {
          goto LABEL_47;
        }
        sub_24F86942C((uint64_t)v29, (uint64_t)&v29[232], (uint64_t)v26);
        memcpy(v25, v29, 0x1CBuLL);
        sub_24F869778((uint64_t)v25);
        uint64_t v30 = v5;
        unint64_t v11 = *(void *)(v5 + 16);
        unint64_t v10 = *(void *)(v5 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_24F795D90(v10 > 1, v11 + 1, 1);
          uint64_t v5 = v30;
        }
        *(void *)(v5 + 16) = v11 + 1;
        uint64_t result = memcpy((void *)(v5 + 232 * v11 + 32), v26, 0xE3uLL);
        --v4;
      }
      while (v4);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t result = (void *)swift_unknownObjectRetain();
      unint64_t v7 = 0;
      char v6 = 0;
      uint64_t v24 = v22;
    }
    if ((v6 & 1) != 0 || v7 == v3)
    {
LABEL_40:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)v5;
    }
    uint64_t v12 = (char *)(v19 + 232 * v7 + 32);
    uint64_t v13 = v24;
    uint64_t v14 = (char *)(v20 + 232 * v24);
    uint64_t v15 = v24;
    while (v7 < v3)
    {
      uint64_t result = memcpy(__src, v12, 0xE3uLL);
      if (v23 == v15) {
        goto LABEL_40;
      }
      if (v13 < v22 || v15 >= v23) {
        goto LABEL_42;
      }
      memcpy(v26, v14, 0xE3uLL);
      memcpy(__dst, __src, 0xE3uLL);
      memcpy(&__dst[232], v26, 0xE3uLL);
      memcpy(v29, __dst, 0x1CBuLL);
      sub_24F79900C((uint64_t)__src);
      sub_24F79900C((uint64_t)v26);
      sub_24F86942C((uint64_t)v29, (uint64_t)&v29[232], (uint64_t)v25);
      sub_24F869778((uint64_t)__dst);
      uint64_t v30 = v5;
      unint64_t v18 = *(void *)(v5 + 16);
      unint64_t v17 = *(void *)(v5 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_24F795D90(v17 > 1, v18 + 1, 1);
        uint64_t v5 = v30;
      }
      ++v7;
      *(void *)(v5 + 16) = v18 + 1;
      uint64_t result = memcpy((void *)(v5 + 232 * v18 + 32), v25, 0xE3uLL);
      v12 += 232;
      v14 += 232;
      ++v15;
      uint64_t v13 = v24;
      if (v3 == v7) {
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_24F868EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 == 1)
  {
    memcpy(__dst, (const void *)(v3 + 96), 0xA2uLL);
    uint64_t v37 = __dst[19];
    uint64_t v38 = __dst[18];
    char v36 = __dst[20];
    char v33 = BYTE1(__dst[20]);
    uint64_t v5 = __dst[15];
    uint64_t v34 = __dst[17];
    uint64_t v35 = __dst[16];
    uint64_t v32 = __dst[14];
    char v6 = __dst[13];
    long long v30 = *(_OWORD *)&__dst[9];
    long long v31 = *(_OWORD *)&__dst[11];
    char v7 = __dst[8];
    uint64_t v9 = __dst[6];
    uint64_t v8 = __dst[7];
    long long v29 = *(_OWORD *)&__dst[3];
    uint64_t v10 = __dst[0];
    uint64_t v11 = __dst[1];
    uint64_t v12 = __dst[5];
    uint64_t v13 = __dst[2];
    uint64_t result = (uint64_t)sub_24F7D8D44(__dst);
    long long v16 = v29;
    long long v15 = v30;
    long long v17 = v31;
    char v18 = v33;
    uint64_t v19 = v32;
    uint64_t v21 = v34;
    uint64_t v20 = v35;
    char v22 = v36;
    uint64_t v24 = v37;
    uint64_t v23 = v38;
LABEL_6:
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v11;
    *(void *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 24) = v16;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v8;
    *(unsigned char *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 72) = v15;
    *(_OWORD *)(a1 + 88) = v17;
    *(unsigned char *)(a1 + 104) = v6;
    *(void *)(a1 + 112) = v19;
    *(void *)(a1 + 120) = v5;
    *(void *)(a1 + 128) = v20;
    *(void *)(a1 + 136) = v21;
    *(void *)(a1 + 144) = v23;
    *(void *)(a1 + 152) = v24;
    *(unsigned char *)(a1 + 160) = v22;
    *(unsigned char *)(a1 + 161) = v18;
    return result;
  }
  v59[0] = v3;
  v59[1] = sub_24F858798(1, v3);
  v59[2] = v25;
  v59[3] = v26;
  v59[4] = v27;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_24F868ADC(v59);
  swift_unknownObjectRelease();
  sub_24F794F24((uint64_t)v28);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    if (v4 <= *(void *)(v3 + 16))
    {
      memcpy(__dst, (const void *)(v3 + 232 * v4 - 136), 0xA2uLL);
      sub_24F7D8D44(__dst);
      sub_24F802408();
      sub_24F7920F8(__dst);
      uint64_t result = swift_release();
      uint64_t v23 = v54;
      uint64_t v24 = v55;
      char v22 = v56;
      char v18 = v57;
      uint64_t v20 = v52;
      uint64_t v21 = v53;
      uint64_t v19 = v50;
      uint64_t v5 = v51;
      char v6 = v49;
      long long v17 = v48;
      long long v15 = v47;
      uint64_t v9 = v44;
      uint64_t v8 = v45;
      char v7 = v46;
      uint64_t v12 = v43;
      long long v16 = v42;
      uint64_t v10 = v39;
      uint64_t v11 = v40;
      uint64_t v13 = v41;
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8690F8(char a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a1)
  {
    switch(a4)
    {
      case 1:
      case 3:
        goto LABEL_11;
      default:
        if (qword_26B1F5678 != -1) {
          swift_once();
        }
        sub_24F77E1C0();
        sub_24F77F86C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v8 = a2;
        unint64_t v9 = a3;
        uint64_t v10 = v5;
        goto LABEL_10;
    }
  }
  switch(a4)
  {
    case 2:
    case 3:
LABEL_11:
      swift_bridgeObjectRetain();
      break;
    default:
      if (qword_26B1F5678 != -1) {
        swift_once();
      }
      sub_24F77E1C0();
      sub_24F77F86C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v8 = a2;
      unint64_t v9 = a3;
      uint64_t v10 = v4;
LABEL_10:
      sub_24F858884(v8, v9, v10);
      a2 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  return a2;
}

void sub_24F86929C(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  if (v10)
  {
    unsigned __int8 v6 = a4;
    uint64_t v7 = a3;
    uint64_t v8 = a2;
    uint64_t v5 = a1;
    memcpy(__dst, (const void *)(v9 + 232 * v10 - 200), 0xE3uLL);
    uint64_t v18 = __dst[4];
    uint64_t v19 = __dst[3];
    uint64_t v16 = __dst[6];
    uint64_t v17 = __dst[5];
    char v20 = __dst[7];
    char v21 = BYTE2(__dst[28]);
    uint64_t v11 = __dst[0];
    uint64_t v12 = __dst[1];
    unsigned __int8 v13 = __dst[2];
    sub_24F799128(v8, v7, v6);
    sub_24F79900C((uint64_t)__dst);
    sub_24F7AD5DC(v11, v12, v13);
    memcpy(&__src[7], &__dst[8], 0xA2uLL);
    unint64_t v4 = *(void *)(v9 + 16);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if (v4) {
        goto LABEL_4;
      }
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  sub_24F83CCE4();
  uint64_t v9 = v15;
  if (!v4) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 <= *(void *)(v9 + 16))
  {
    uint64_t v14 = v9 + 232 * v4;
    memcpy(v22, (const void *)(v14 - 200), 0xE3uLL);
    *(void *)(v14 - 200) = v8;
    *(void *)(v14 - 192) = v7;
    *(unsigned char *)(v14 - 184) = v6;
    *(void *)(v14 - 176) = v19;
    *(void *)(v14 - 168) = v18;
    *(void *)(v14 - 160) = v17;
    *(void *)(v14 - 152) = v16;
    *(unsigned char *)(v14 - 144) = v20;
    memcpy((void *)(v14 - 143), __src, 0xA9uLL);
    *(unsigned char *)(v14 + 26) = v21;
    sub_24F7AD5F4((uint64_t)v22);
    *uint64_t v5 = v9;
    return;
  }
LABEL_9:
  __break(1u);
}

__n128 sub_24F86942C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  memcpy(__dst, (const void *)(a1 + 64), 0xA2uLL);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v20 = *(void *)(a2 + 24);
  uint64_t v21 = *(void *)(a2 + 40);
  int v10 = *(char *)(a2 + 56);
  sub_24F800F48(MEMORY[0x263F8EE78], (uint64_t)v41);
  uint64_t v11 = v48;
  uint64_t v12 = v49;
  sub_24F7D8D44(v41);
  uint64_t v13 = sub_24F7D4240(v11, v12, (uint64_t (*)(unsigned char *))sub_24F8032E0, 0);
  uint64_t v39 = v14;
  uint64_t v40 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7920F8(v41);
  uint64_t v27 = v41[1];
  uint64_t v28 = v41[0];
  uint64_t v25 = v43;
  uint64_t v26 = v41[2];
  uint64_t v23 = v45;
  uint64_t v24 = v44;
  char v22 = v46;
  long long v29 = v42;
  __n128 v30 = v47;
  uint64_t v37 = v52;
  uint64_t v38 = v51;
  uint64_t v35 = v54;
  uint64_t v36 = v53;
  uint64_t v33 = v56;
  uint64_t v34 = v55;
  char v31 = v50;
  char v32 = v57;
  unsigned __int8 v60 = v58;
  sub_24F799128(v5, v6, v7);
  sub_24F8CEEB0();
  sub_24F7AD5DC(v5, v6, v7);
  if (v10 < 0)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v20;
    *(void *)(v15 + 24) = v8;
    swift_retain();
    uint64_t v18 = 0;
    uint64_t v9 = 0;
    char v17 = 0x80;
    uint64_t v16 = sub_24F8699D4;
  }
  else
  {
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))__dst[0];
    uint64_t v15 = __dst[1];
    char v17 = (v10 & 1) == 0;
    swift_bridgeObjectRetain();
    uint64_t v18 = v21;
    sub_24F799198(v21);
  }
  *(void *)a3 = 0x5F62647267;
  *(void *)(a3 + 8) = 0xE500000000000000;
  *(unsigned char *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v16;
  *(void *)(a3 + 32) = v15;
  *(void *)(a3 + 40) = v18;
  *(void *)(a3 + 48) = v9;
  *(unsigned char *)(a3 + 56) = v17;
  *(void *)(a3 + 64) = v28;
  *(void *)(a3 + 72) = v27;
  *(void *)(a3 + 80) = v26;
  *(_OWORD *)(a3 + 88) = v29;
  *(void *)(a3 + 104) = v25;
  *(void *)(a3 + 112) = v24;
  *(void *)(a3 + 120) = v23;
  *(unsigned char *)(a3 + 128) = v22;
  *(unsigned char *)(a3 + 135) = 0;
  strcpy((char *)(a3 + 129), "grdb_");
  __n128 result = v30;
  *(__n128 *)(a3 + 136) = v30;
  *(void *)(a3 + 152) = v40;
  *(void *)(a3 + 160) = v39;
  *(unsigned char *)(a3 + 168) = v31;
  *(_DWORD *)(a3 + 169) = v61[0];
  *(_DWORD *)(a3 + 172) = *(_DWORD *)((char *)v61 + 3);
  *(void *)(a3 + 176) = v38;
  *(void *)(a3 + 184) = v37;
  *(void *)(a3 + 192) = v36;
  *(void *)(a3 + 200) = v35;
  *(void *)(a3 + 208) = v34;
  *(void *)(a3 + 216) = v33;
  *(unsigned char *)(a3 + 224) = v32;
  *(_WORD *)(a3 + 225) = v60;
  return result;
}

uint64_t sub_24F8696F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_269A2A2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F869760(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_24F869778(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 176);
  uint64_t v12 = *(void *)(a1 + 192);
  uint64_t v13 = *(void *)(a1 + 240);
  uint64_t v14 = *(void *)(a1 + 232);
  uint64_t v17 = *(void *)(a1 + 264);
  uint64_t v18 = *(void *)(a1 + 256);
  uint64_t v15 = *(void *)(a1 + 280);
  uint64_t v16 = *(void *)(a1 + 272);
  uint64_t v19 = *(void *)(a1 + 336);
  uint64_t v20 = *(void *)(a1 + 408);
  uint64_t v21 = *(void *)(a1 + 424);
  char v6 = *(unsigned char *)(a1 + 56);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 248);
  char v10 = *(unsigned char *)(a1 + 288);
  sub_24F7AD5DC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_24F7AD3A0(v2, v3, v4, v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_24F787238(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F787238(v11);
  sub_24F787238(v12);
  sub_24F7AD5DC(v14, v13, v9);
  sub_24F7AD3A0(v18, v17, v16, v15, v10);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_24F787238(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F787238(v20);
  sub_24F787238(v21);
  return a1;
}

void sub_24F869994(void *a1)
{
}

uint64_t sub_24F86999C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F8699D4(uint64_t a1, uint64_t a2)
{
  return sub_24F8070C4(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
}

unsigned char *sub_24F8699DC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F869AA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLAssociationCardinality()
{
}

uint64_t sub_24F869AE0(uint64_t a1)
{
  return sub_24F7AD5DC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24F869AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24F799128(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_24F869B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24F799128(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24F7AD5DC(v6, v7, v8);
  return a1;
}

uint64_t sub_24F869B94(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24F7AD5DC(v4, v5, v6);
  return a1;
}

void type metadata accessor for SQLAssociationKey()
{
}

unint64_t sub_24F869BEC()
{
  unint64_t result = qword_269A2BE78[0];
  if (!qword_269A2BE78[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269A2BE78);
  }
  return result;
}

uint64_t sub_24F869C38()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24F869D14(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_24F869D3C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_24F869D64(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)a3;
  uint64_t v6 = a2;
  char v10 = 1;
  if (a1)
  {
    swift_retain();
    sub_24F8A3628();
    if (v4)
    {
      return swift_release();
    }
    else
    {
      uint64_t v7 = swift_retain();
      sub_24F8A10E0(v7, (uint64_t)&v10, v6, (uint64_t)v5);
      uint64_t v6 = 0;
      uint64_t v5 = 0;
      sub_24F8A36D0();
      while (1)
      {
        if (v5)
        {
          id v9 = v5;
          swift_willThrow();

          swift_release();
          return swift_release();
        }
        uint64_t result = swift_release();
        if (v6) {
          break;
        }
        uint64_t result = swift_release();
LABEL_5:
        if ((v10 & 1) == 0) {
          return result;
        }
        __break(1u);
      }
      __break(1u);
    }
  }
  else
  {
    uint64_t result = sub_24F8A10E0(v3, (uint64_t)&v10, a2, a3);
    if (!v4) {
      goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_24F869E7C()
{
  sub_24F775D80();
  uint64_t v0 = swift_allocObject();
  sub_24F869EF8();
  return v0;
}

void sub_24F869EF8()
{
  sub_24F76B80C();
  unint64_t v1 = v0;
  uint64_t v105 = v2;
  uint64_t v94 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v77 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = *v1;
  sub_24F8CF520();
  sub_24F77AD10();
  uint64_t v100 = v16;
  uint64_t v101 = v15;
  MEMORY[0x270FA5388](v15);
  sub_24F77BBBC();
  uint64_t v99 = v17;
  uint64_t v97 = sub_24F8CF4D0();
  sub_24F773974();
  MEMORY[0x270FA5388](v18);
  sub_24F77BBBC();
  uint64_t v98 = v19;
  uint64_t v20 = sub_24F781274(&qword_26B1F75E8);
  MEMORY[0x270FA5388](v20 - 8);
  sub_24F77BBBC();
  uint64_t v84 = v21;
  uint64_t v95 = sub_24F8CEC00();
  sub_24F77AD10();
  uint64_t v67 = v22;
  MEMORY[0x270FA5388](v23);
  sub_24F77BBBC();
  uint64_t v96 = v24;
  uint64_t v80 = type metadata accessor for Configuration();
  sub_24F773974();
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v85 = (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v79 = (char *)&v66 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v81 = (uint64_t)&v66 - v30;
  v1[4] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  *((_OWORD *)v1 + 3) = 0u;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  v1[20] = 0;
  uint64_t v104 = *(void *)(v14 + 80);
  uint64_t v31 = v104;
  uint64_t v32 = *(void *)(v14 + 88);
  v1[21] = 1;
  *((unsigned char *)v1 + 176) = 0;
  v1[2] = v11;
  v1[3] = v9;
  uint64_t v33 = sub_24F86A6A0(v7, v31, v32);
  uint64_t v34 = v1[6];
  uint64_t v78 = v13;
  v1[6] = v13;
  v1[7] = (uint64_t)v33;
  v1[8] = v35;
  uint64_t v102 = v11;
  swift_retain();
  swift_retain();
  sub_24F86FCCC(v34);
  uint64_t v36 = *v5;
  uint64_t v37 = v5[1];
  uint64_t v38 = v5[2];
  uint64_t v39 = v5[3];
  uint64_t v41 = v5[4];
  uint64_t v40 = v5[5];
  uint64_t v42 = v5[6];
  uint64_t v43 = v5[7];
  uint64_t v44 = v5[8];
  uint64_t v45 = v5[9];
  uint64_t v103 = v44;
  uint64_t v83 = v1[9];
  unint64_t v82 = v1[10];
  uint64_t v76 = v1[11];
  uint64_t v75 = v1[12];
  uint64_t v74 = v1[13];
  uint64_t v73 = v1[14];
  uint64_t v72 = v1[15];
  uint64_t v71 = v1[16];
  long long v70 = *(_OWORD *)(v1 + 17);
  uint64_t v69 = v1[19];
  uint64_t v68 = v1[20];
  v1[9] = v36;
  v1[10] = v37;
  v1[11] = v38;
  v1[12] = v39;
  v1[13] = v41;
  v1[14] = v40;
  v1[15] = v42;
  v1[16] = v43;
  v1[17] = v44;
  v1[18] = v45;
  uint64_t v46 = v105;
  v1[19] = v94;
  v1[20] = v46;
  swift_retain();
  uint64_t v87 = v36;
  uint64_t v86 = v37;
  sub_24F78C440(v36);
  uint64_t v88 = v39;
  uint64_t v89 = v38;
  sub_24F78C440(v38);
  uint64_t v90 = v40;
  uint64_t v91 = v41;
  sub_24F78C440(v41);
  uint64_t v92 = v43;
  uint64_t v93 = v42;
  uint64_t v47 = v80;
  sub_24F78C440(v42);
  uint64_t v48 = (uint64_t)v79;
  uint64_t v94 = v45;
  sub_24F78C440(v103);
  uint64_t v65 = v69;
  long long v64 = v70;
  uint64_t v49 = sub_24F77B6A4();
  uint64_t v50 = v77;
  sub_24F8390EC(v49, v51, v76, v75, v74, v73, v72, v71, v64, *((uint64_t *)&v64 + 1), v65);
  uint64_t v52 = *(void *)(v104 - 8);
  (*(void (**)(uint64_t, uint64_t))(v52 + 16))((uint64_t)v1 + *(void *)(*v1 + 152), v50);
  uint64_t v53 = v81;
  DatabasePool.configuration.getter(v81);
  uint64_t v54 = *(void *)(v53 + 8);
  if (*(void *)(v53 + 16))
  {
    unint64_t v55 = *(void *)(v53 + 16);
  }
  else
  {
    uint64_t v54 = 1111773767;
    unint64_t v55 = 0xE400000000000000;
  }
  uint64_t v106 = v54;
  unint64_t v107 = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  uint64_t v83 = v106;
  unint64_t v82 = v107;
  sub_24F7EECCC(v53);
  DatabasePool.configuration.getter(v48);
  if (*(void *)(v48 + *(int *)(v47 + 68)))
  {
    uint64_t v56 = v84;
    sub_24F8CF530();
    uint64_t v57 = 0;
    uint64_t v58 = v56;
  }
  else
  {
    uint64_t v58 = v84;
    uint64_t v57 = 1;
  }
  uint64_t v59 = v95;
  sub_24F7771BC(v58, v57, 1, v95);
  uint64_t v60 = v85;
  sub_24F7EEC68(v48, v85);
  int v61 = sub_24F777048(v58, 1, v59);
  uint64_t v62 = v96;
  if (v61 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v96, v60 + *(int *)(v47 + 64), v59);
    sub_24F7EECCC(v60);
    sub_24F7EED28(v58);
  }
  else
  {
    sub_24F7EECCC(v60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v62, v58, v59);
  }
  sub_24F839750(0, (unint64_t *)&qword_26B1F7EC0);
  sub_24F7EECCC(v48);
  uint64_t v106 = MEMORY[0x263F8EE78];
  sub_24F83978C((unint64_t *)&qword_26B1F7F60, MEMORY[0x263F8F0F8]);
  sub_24F781274(&qword_26B1F7F40);
  sub_24F7D9F58((unint64_t *)&qword_26B1F7EB8, &qword_26B1F7F40);
  sub_24F8CF6D0();
  (*(void (**)(uint64_t, void, uint64_t))(v100 + 104))(v99, *MEMORY[0x263F8F130], v101);
  sub_24F77B6A4();
  uint64_t v63 = sub_24F8CF580();
  swift_release();
  sub_24F787238(v87);
  sub_24F787238(v89);
  sub_24F787238(v91);
  sub_24F787238(v93);
  sub_24F787238(v103);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v104);
  v1[5] = v63;
  sub_24F77344C();
}

uint64_t (*sub_24F86A6A0(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_24F870080;
}

uint64_t sub_24F86A7C0()
{
  swift_release();
  sub_24F7DD35C(*(void *)(v0 + 24));

  sub_24F86FCCC(*(void *)(v0 + 48));
  sub_24F8390EC(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152));
  sub_24F838834(*(void *)(v0 + 168));
  sub_24F773974();
  (*(void (**)(void))(v1 + 8))();
  return v0;
}

uint64_t sub_24F86A894()
{
  sub_24F86A7C0();
  sub_24F773850();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return MEMORY[0x270FA0228](v0, v2, v3);
}

uint64_t type metadata accessor for ValueConcurrentObserver()
{
  return sub_24F777DE0();
}

uint64_t type metadata accessor for ValueConcurrentObserver.ObservationState()
{
  return sub_24F777DE0();
}

uint64_t type metadata accessor for ValueConcurrentObserver.NotificationCallbacks()
{
  return sub_24F777DE0();
}

uint64_t sub_24F86A918()
{
  swift_release();
  return swift_release();
}

uint64_t sub_24F86A954(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_24F86A998(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24F86A9F8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ValueConcurrentObserver.DatabaseAccess()
{
  return sub_24F777DE0();
}

void sub_24F86AA58()
{
  sub_24F76B80C();
  uint64_t v2 = v1;
  uint64_t v3 = *v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v45 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v48 = (char *)&v44 - v7;
  sub_24F839750(0, &qword_269A2B8B8);
  type metadata accessor for ValueConcurrentObserver.NotificationCallbacks();
  sub_24F8CF610();
  type metadata accessor for ValueConcurrentObserver.DatabaseAccess();
  sub_24F8CF610();
  swift_getTupleTypeMetadata2();
  sub_24F832B64((uint64_t)sub_24F8341A0, 0, (void (*)(id))sub_24F8700F0);
  uint64_t v62 = v66;
  if (v66)
  {
    uint64_t v47 = 0;
    uint64_t v46 = AssociatedTypeWitness;
    uint64_t v49 = v3;
    uint64_t v54 = v2;
    uint64_t v8 = v65[1];
    uint64_t v57 = v65[0];
    uint64_t v60 = v65[2];
    uint64_t v63 = v65[3];
    uint64_t v64 = v65[4];
    uint64_t v51 = v65[5];
    int v61 = (void (*)(void))v65[6];
    uint64_t v56 = v65[7];
    uint64_t v59 = v65[8];
    uint64_t v58 = v65[9];
    uint64_t v9 = v67;
    uint64_t v10 = v68;
    if (v68)
    {
      uint64_t v11 = v69;
      uint64_t v12 = (void *)v0[2];
      uint64_t v14 = v12[5];
      uint64_t v13 = v12[6];
      sub_24F7811D0(v12 + 2, v14);
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
      uint64_t v55 = v9;
      uint64_t v53 = v8;
      uint64_t v15 = v51;
      sub_24F8398E8(v57, v8, v60, v63, v64, v51, (uint64_t)v61, v56, v59, v58, (uint64_t)v62);
      sub_24F86FD0C((uint64_t)v10);
      char v16 = v50(v14, v13);
      uint64_t v52 = v11;
      if (v16)
      {
        uint64_t v17 = v48;
        uint64_t v18 = sub_24F78098C();
        uint64_t v19 = v47;
        sub_24F86B14C(v18, v20, v21, v22);
        uint64_t v23 = v54;
        if (v19)
        {
          uint64_t v24 = v61;
          if (v61) {
            v61(v19);
          }
          uint64_t v25 = type metadata accessor for AnyDatabaseCancellable();
          swift_allocObject();
          uint64_t v26 = AnyDatabaseCancellable.init(cancel:)((uint64_t)nullsub_1, 0);
          void v23[3] = v25;
          void v23[4] = (uint64_t)&protocol witness table for AnyDatabaseCancellable;

          uint64_t v27 = v64;
          uint64_t v28 = v59;
          uint64_t v29 = v60;
          goto LABEL_11;
        }
        v62(v17);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v46);
      }
      else
      {
        uint64_t v30 = sub_24F78098C();
        sub_24F86B484(v30, v31, v32);
        uint64_t v23 = v54;
      }
      uint64_t v24 = v61;
      uint64_t v33 = type metadata accessor for AnyDatabaseCancellable();
      v65[0] = v0;
      swift_retain();
      uint64_t v26 = sub_24F83BFA8((uint64_t)v65, v33, v49, (uint64_t)&off_2701037F0);
      void v23[3] = v33;
      void v23[4] = (uint64_t)&protocol witness table for AnyDatabaseCancellable;
      uint64_t v27 = v64;
      uint64_t v29 = v60;
      uint64_t v28 = v59;
LABEL_11:
      *uint64_t v23 = v26;
      swift_release();
      swift_release();
      uint64_t v34 = v57;
      int v61 = v10;
      uint64_t v35 = v53;
      sub_24F787238(v57);
      sub_24F787238(v29);
      sub_24F787238(v27);
      uint64_t v36 = (uint64_t)v24;
      uint64_t v37 = (uint64_t)v24;
      uint64_t v38 = v56;
      sub_24F787238(v37);
      uint64_t v39 = v58;
      sub_24F787238(v28);
      swift_release();
      sub_24F86FCCC((uint64_t)v61);
      sub_24F8390EC(v34, v35, v29, v63, v64, v15, v36, v38, v28, v39, (uint64_t)v62);
      sub_24F77344C();
      return;
    }
    sub_24F78C440(v57);
    uint64_t v40 = v60;
    sub_24F78C440(v60);
    uint64_t v41 = v64;
    sub_24F78C440(v64);
    uint64_t v42 = v61;
    sub_24F78C440((uint64_t)v61);
    uint64_t v43 = v59;
    sub_24F78C440(v59);
    swift_retain();
    sub_24F787238(v57);
    sub_24F787238(v40);
    sub_24F787238(v41);
    sub_24F787238((uint64_t)v42);
    sub_24F787238(v43);
    swift_release();
  }
  sub_24F8CF9D0();
  __break(1u);
}

uint64_t sub_24F86B0B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = a1[10];
  uint64_t v3 = a1[11];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  uint64_t v6 = a1[14];
  uint64_t v7 = a1[15];
  uint64_t v8 = a1[16];
  uint64_t v9 = a1[17];
  uint64_t v10 = a1[18];
  uint64_t v11 = a1[19];
  uint64_t v12 = a1[20];
  uint64_t v14 = a1[8];
  uint64_t v13 = a1[9];
  *a2 = v13;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  a2[4] = v5;
  a2[5] = v6;
  a2[6] = v7;
  a2[7] = v8;
  a2[8] = v9;
  a2[9] = v10;
  a2[10] = v11;
  a2[11] = v12;
  uint64_t v15 = a1[6];
  uint64_t v16 = a1[7];
  a2[12] = v15;
  a2[13] = v16;
  a2[14] = v14;
  sub_24F8398E8(v13, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  return sub_24F86FD0C(v15);
}

uint64_t sub_24F86B14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v35 = a2;
  uint64_t v32 = a4;
  uint64_t v6 = *(void *)(*(void *)(*(void *)v4 + 88) + 8);
  uint64_t v7 = *(void *)(*(void *)v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F7688B8(&qword_269A2C080);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v12 = (char *)v27 - v11;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v27 - v14;
  uint64_t v34 = a1;
  uint64_t v16 = v37;
  uint64_t result = DatabasePool.makeSnapshot()();
  if (!v16)
  {
    uint64_t v30 = v15;
    uint64_t v31 = v13;
    uint64_t v37 = v7;
    uint64_t v29 = v6;
    MEMORY[0x270FA5388](result);
    uint64_t v19 = v33;
    uint64_t v18 = v34;
    v27[-4] = v33;
    v27[-3] = v18;
    uint64_t v20 = v36;
    v27[-2] = v35;
    v27[-1] = v20;
    uint64_t v22 = v21;
    DatabaseSnapshot.read<A>(_:)();
    uint64_t v28 = *(void *)&v12[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v23 = *(void *)&v12[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v25 = v30;
    uint64_t v24 = v31;
    uint64_t v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v30, v12, AssociatedTypeWitness);
    v27[1] = v27;
    MEMORY[0x270FA5388](v26);
    v27[-2] = v19;
    v27[-1] = v25;
    swift_getAssociatedTypeWitness();
    sub_24F8CF560();
    uint64_t v38 = v28;
    sub_24F86BDEC(v34, v35, v36, v22, v23, &v38);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, AssociatedTypeWitness);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F86B484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = DatabasePool.makeSnapshot()();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v4;
  void v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  DatabaseSnapshot.asyncRead(_:)((uint64_t)sub_24F870370, (uint64_t)v9);
  swift_release();
  return swift_release();
}

uint64_t sub_24F86B590(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[21];
  v2[21] = *a2;
  uint64_t v6 = v4;
  swift_bridgeObjectRetain();
  sub_24F838834(v5);
  unsigned __int8 v8 = 0;
  return sub_24F7A1D18((uint64_t)v2, &v8, a1, v6, (uint64_t)&off_2701037C0);
}

uint64_t sub_24F86B620@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v51 = a6;
  uint64_t v11 = *(void *)(*a2 + 88);
  uint64_t v12 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = a2[3];
  if (v18 >= 2)
  {
    uint64_t v53 = AssociatedTypeWitness;
    uint64_t v20 = (char *)&v49 - v17;
    uint64_t result = a4(a1);
    if (!v6)
    {
      uint64_t v21 = a1;
      uint64_t v50 = v20;
      sub_24F776A80();
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_24F8CEC70();
      uint64_t v23 = *(void *)(v18 + 16);
      if (v23)
      {
        uint64_t v24 = (void *)(v18 + 32);
        swift_bridgeObjectRetain();
        do
        {
          uint64_t v25 = v24[3];
          uint64_t v26 = v24[4];
          sub_24F7811D0(v24, v25);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v26 + 8))(&v57, v21, v25, v26);
          uint64_t v54 = v57;
          uint64_t v55 = v22;
          DatabaseRegion.union(_:)(&v54, &v56);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v22 = v56;
          v24 += 5;
          --v23;
        }
        while (v23);
        sub_24F7DD35C(v18);
      }
      uint64_t v29 = v52;
      uint64_t v30 = v53;
      sub_24F7DD35C(v18);
      if (v22)
      {
        uint64_t v31 = swift_bridgeObjectRetain();
        uint64_t v32 = sub_24F83889C(v31);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v32 = 0;
      }
      uint64_t v56 = v32;
      sub_24F80D5A0(&v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v57;
      sub_24F7688B8(&qword_269A2C080);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v43 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v44 = *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v46 = v50;
      uint64_t v45 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v51, v50, v30);
      *(void *)(v45 + v43) = v41;
      type metadata accessor for WALSnapshot();
      swift_allocObject();
      uint64_t v47 = swift_retain();
      uint64_t v48 = sub_24F826D00(v47);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v46, v30);
      *(void *)(v45 + v44) = v48;
    }
  }
  else
  {
    sub_24F776A80();
    uint64_t v57 = sub_24F8CEC70();
    MEMORY[0x270FA5388](v57);
    *(&v49 - 6) = v12;
    *(&v49 - 5) = v11;
    *(&v49 - 4) = v53;
    *(&v49 - 3) = (uint64_t)a4;
    *(&v49 - 2) = a5;
    *(&v49 - 1) = a1;
    sub_24F8A2FCC(&v57, (void (*)(void))sub_24F86FFCC);
    if (v6)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      if (v57)
      {
        uint64_t v27 = swift_bridgeObjectRetain();
        uint64_t v28 = sub_24F83889C(v27);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = 0;
      }
      uint64_t v33 = v52;
      uint64_t v55 = v28;
      sub_24F80D5A0(&v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v56;
      sub_24F7688B8(&qword_269A2C080);
      uint64_t v35 = swift_getTupleTypeMetadata3();
      uint64_t v36 = *(int *)(v35 + 48);
      uint64_t v37 = *(int *)(v35 + 64);
      uint64_t v38 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v51, v16, AssociatedTypeWitness);
      *(void *)(v38 + v36) = v34;
      type metadata accessor for WALSnapshot();
      swift_allocObject();
      uint64_t v39 = swift_retain();
      uint64_t v40 = sub_24F826D00(v39);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, AssociatedTypeWitness);
      *(void *)(v38 + v37) = v40;
    }
  }
  return result;
}

uint64_t sub_24F86BBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)a1 + 88) + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24F8CF610();
  uint64_t v12 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v12 - v9;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, v6, v5);
  swift_endAccess();
  if (sub_24F777048((uint64_t)v10, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, v10, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v8);
  uint64_t result = sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F86BDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v12 = *a6;
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = v6;
  v13[3] = v12;
  void v13[4] = a4;
  uint64_t v13[5] = a5;
  v13[6] = a1;
  v13[7] = a2;
  unsigned char v13[8] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24F88A410((uint64_t)sub_24F8701A8, (uint64_t)v13);
  return swift_release();
}

void sub_24F86BED0(void *a1, char a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t), unint64_t a6, uint64_t a7)
{
  uint64_t v72 = a5;
  unint64_t v68 = a4;
  uint64_t v12 = *a3;
  uint64_t v13 = sub_24F8CEBD0();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v65 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v62 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_24F8CEC00();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v60 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v66 = *(void *)(v12 + 88);
  unint64_t v67 = *(void *)(v12 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v71 = AssociatedTypeWitness;
  uint64_t v17 = *(void *)(v70 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v59 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v55 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)v55 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v69 = (char *)v55 - v25;
  if (sub_24F832C54())
  {
    if (a2)
    {
      aBlock[0] = (uint64_t)a1;
      id v30 = a1;
      sub_24F781274(&qword_26B1F7040);
      swift_willThrowTypedImpl();
      sub_24F86CCDC(a1);
    }
    else
    {
      unint64_t v26 = a3[3];
      if (v26 >= 2)
      {
        uint64_t v31 = swift_retain();
        v72(v31);
        uint64_t v56 = a7;
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
        uint64_t v36 = v24;
        uint64_t v29 = v71;
        v55[1] = v70 + 32;
        uint64_t v57 = v35;
        v35(v69, v36, v71);
        sub_24F776A80();
        swift_bridgeObjectRetain();
        unint64_t v37 = v26;
        uint64_t v38 = sub_24F8CEC70();
        uint64_t v39 = *(void *)(v37 + 16);
        if (v39)
        {
          unint64_t v58 = a6;
          uint64_t v40 = (void *)(v37 + 32);
          v55[0] = v37;
          swift_bridgeObjectRetain();
          do
          {
            uint64_t v42 = v40[3];
            uint64_t v41 = v40[4];
            sub_24F7811D0(v40, v42);
            (*(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t))(v41 + 8))(aBlock, a1, v42, v41);
            uint64_t v75 = v38;
            uint64_t v73 = aBlock[0];
            DatabaseRegion.union(_:)(&v73, v76);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v38 = v76[0];
            v40 += 5;
            --v39;
          }
          while (v39);
          unint64_t v37 = v55[0];
          sub_24F7DD35C(v55[0]);
          a7 = v56;
          a6 = v58;
          uint64_t v29 = v71;
        }
        else
        {
          a7 = v56;
        }
        sub_24F7DD35C(v37);
        if (v38)
        {
          uint64_t v43 = swift_bridgeObjectRetain();
          uint64_t v44 = sub_24F83889C(v43);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v44 = 0;
        }
        v76[0] = v44;
        sub_24F80D5A0(aBlock);
        unint64_t v58 = a6;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = aBlock[0];
        unint64_t v45 = v66;
      }
      else
      {
        sub_24F776A80();
        swift_retain();
        aBlock[0] = sub_24F8CEC70();
        MEMORY[0x270FA5388](aBlock[0]);
        unint64_t v27 = v66;
        v55[-6] = v67;
        v55[-5] = v27;
        uint64_t v29 = v71;
        uint64_t v28 = v72;
        v55[-4] = v68;
        v55[-3] = (unint64_t)v28;
        v55[-2] = a6;
        v55[-1] = (unint64_t)a1;
        sub_24F8A2FCC(aBlock, (void (*)(void))sub_24F86FFCC);
        unint64_t v58 = a6;
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
        v32(v69, v21, v29);
        uint64_t v57 = v32;
        if (aBlock[0])
        {
          uint64_t v33 = swift_bridgeObjectRetain();
          uint64_t v34 = sub_24F83889C(v33);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v34 = 0;
        }
        uint64_t v75 = v34;
        sub_24F80D5A0(v76);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = v76[0];
        unint64_t v45 = v66;
      }
      unint64_t v66 = a3[5];
      uint64_t v46 = v70;
      uint64_t v47 = v59;
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v59, v69, v29);
      unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v49 = (char *)swift_allocObject();
      *((void *)v49 + 2) = v67;
      *((void *)v49 + 3) = v45;
      *((void *)v49 + 4) = a3;
      v57(&v49[v48], v47, v29);
      aBlock[4] = (uint64_t)sub_24F8703E0;
      aBlock[5] = (uint64_t)v49;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24F8363BC;
      aBlock[3] = (uint64_t)&unk_270108460;
      uint64_t v50 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v51 = v60;
      sub_24F8CEBE0();
      v76[0] = MEMORY[0x263F8EE78];
      sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
      sub_24F781274(&qword_26B1F7960);
      sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
      uint64_t v52 = v62;
      uint64_t v53 = v65;
      sub_24F8CF6D0();
      MEMORY[0x253363DC0](0, v51, v52, v50);
      _Block_release(v50);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v53);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v51, v63);
      swift_release();
      type metadata accessor for WALSnapshot();
      swift_allocObject();
      sub_24F87045C(a1, 0);
      uint64_t v54 = sub_24F826D00((uint64_t)a1);
      aBlock[0] = v56;
      sub_24F86BDEC(v68, (uint64_t)v72, v58, a7, v54, aBlock);
      swift_release();
      sub_24F8703C8(a1, 0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
    }
  }
}

uint64_t sub_24F86C854(void *a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v3 = *(void *)(*a1 + 88);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v30 = *(void *)(*a1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_24F8CF610();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v29 = (char *)&v25 - v14;
  uint64_t result = sub_24F832C54();
  if (result)
  {
    uint64_t v27 = v3;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v28, v30, v4);
    swift_endAccess();
    if (sub_24F777048((uint64_t)v9, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
      uint64_t result = sub_24F8CF9D0();
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      uint64_t v17 = v29;
      v16(v29, v9, AssociatedTypeWitness);
      uint64_t v18 = (void *)a1[2];
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v17, AssociatedTypeWitness);
      unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v20 = (char *)swift_allocObject();
      uint64_t v21 = v27;
      *((void *)v20 + 2) = v30;
      *((void *)v20 + 3) = v21;
      *((void *)v20 + 4) = a1;
      v16(&v20[v19], v13, AssociatedTypeWitness);
      uint64_t v22 = v18[5];
      uint64_t v23 = v18[6];
      sub_24F7811D0(v18 + 2, v22);
      uint64_t v24 = *(void (**)(id (*)(), char *, uint64_t, uint64_t))(v23 + 8);
      swift_retain();
      v24(sub_24F870530, v20, v22, v23);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v29, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t *sub_24F86CC1C@<X0>(uint64_t *result@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = result[19];
  if (v3)
  {
    uint64_t v4 = *result;
    uint64_t v5 = result[20];
    uint64_t v6 = (uint64_t (*)())swift_allocObject();
    *((void *)v6 + 2) = *(void *)(v4 + 80);
    *((void *)v6 + 3) = *(void *)(v4 + 88);
    *((void *)v6 + 4) = v3;
    *((void *)v6 + 5) = v5;
    uint64_t result = (uint64_t *)swift_retain();
    uint64_t v7 = sub_24F870610;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return result;
}

uint64_t sub_24F86CCDC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = v3 + 2;
  uint64_t v6 = v3[5];
  uint64_t v7 = v3[6];
  sub_24F7811D0(v5, v6);
  uint64_t v8 = *(void (**)(uint64_t *(*)(), uint64_t, uint64_t, uint64_t))(v7 + 8);
  swift_retain();
  id v9 = a1;
  v8(sub_24F86FF8C, v4, v6, v7);
  return swift_release();
}

uint64_t sub_24F86CDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v20 = a8;
  sub_24F832CC0();
  uint64_t v21 = v31[0];
  uint64_t v22 = v31[1];
  uint64_t v23 = v31[2];
  uint64_t v24 = v31[3];
  uint64_t v25 = v31[4];
  uint64_t v26 = v31[5];
  uint64_t v27 = v31[6];
  uint64_t v28 = v31[7];
  uint64_t v15 = v31[9];
  uint64_t v29 = v31[8];
  uint64_t result = sub_24F838FFC((uint64_t)v31, (uint64_t)v32);
  if (v32[0] != 1)
  {
    _OWORD v19[2] = v15;
    uint64_t v17 = memcpy(__dst, v32, 0x50uLL);
    v19[1] = v19;
    uint64_t v30 = a3;
    MEMORY[0x270FA5388](v17);
    void v18[2] = a4;
    void v18[3] = a5;
    v18[4] = a1;
    v18[5] = __dst;
    v18[6] = a2;
    v18[7] = a6;
    v18[8] = a7;
    v18[9] = v20;
    v18[10] = a3;
    v18[11] = &v30;
    sub_24F870210(v31, (void (*)(void))sub_24F839BCC, (void (*)(uint64_t, uint64_t))sub_24F78C440, (void (*)(uint64_t, uint64_t))sub_24F839BCC);
    swift_bridgeObjectRetain();
    sub_24F869D64(1, (uint64_t)sub_24F8701D8, (uint64_t)v18);
    sub_24F870210(v31, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
    sub_24F787238(v21);
    sub_24F787238(v23);
    sub_24F787238(v25);
    sub_24F787238(v27);
    sub_24F787238(v29);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24F86D088()
{
  return 0xD00000000000004DLL;
}

void *sub_24F86D0A4@<X0>(void *result@<X0>, uint64_t *a2@<X8>)
{
  if (result[19])
  {
    uint64_t v4 = result[9];
    uint64_t v3 = result[10];
    uint64_t v5 = result[11];
    uint64_t v6 = result[12];
    uint64_t v7 = result[13];
    uint64_t v8 = result[14];
    uint64_t v9 = result[15];
    uint64_t v10 = result[16];
    uint64_t v11 = result[17];
    uint64_t v12 = result[18];
    *a2 = v4;
    a2[1] = v3;
    a2[2] = v5;
    a2[3] = v6;
    a2[4] = v7;
    sub_24F78C440(v4);
    sub_24F78C440(v5);
    sub_24F78C440(v7);
    sub_24F78C440(v9);
    uint64_t result = (void *)sub_24F78C440(v11);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    *a2 = 1;
    *(_OWORD *)(a2 + 1) = 0u;
    *(_OWORD *)(a2 + 3) = 0u;
  }
  a2[5] = v8;
  a2[6] = v9;
  a2[7] = v10;
  a2[8] = v11;
  a2[9] = v12;
  return result;
}

uint64_t sub_24F86D184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t (*a7)(uint64_t), uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v76 = a7;
  uint64_t v75 = a8;
  uint64_t v68 = a6;
  uint64_t v69 = a9;
  uint64_t v14 = *a5;
  uint64_t v15 = sub_24F8CEBD0();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v64 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_24F8CEC00();
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v62 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = *(void *)(v14 + 88);
  uint64_t v72 = *(void *)(v14 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = *(void *)(v71 + 64);
  uint64_t v19 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v61 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v60 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v70 = (char *)&v60 - v27;
  if (a2)
  {
    type metadata accessor for WALSnapshot();
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v28 = sub_24F826D00(a3);
    if (v28)
    {
      int v29 = sqlite3_snapshot_cmp(*(sqlite3_snapshot **)(a2 + 16), *(sqlite3_snapshot **)(v28 + 16));
      swift_release();
      uint64_t v26 = swift_release();
      if ((v29 & 0x80000000) == 0)
      {
        uint64_t v30 = *(void (**)(uint64_t *))(a4 + 16);
        uint64_t v31 = v69;
        if (v30)
        {
          aBlock[0] = v69;
          v30(aBlock);
        }
        aBlock[0] = v31;
        return sub_24F86B590(a3, aBlock);
      }
    }
    else
    {
      uint64_t v26 = swift_release();
    }
  }
  uint64_t v33 = *(void (**)(uint64_t))(a4 + 32);
  if (v33) {
    v33(v26);
  }
  if ((unint64_t)a5[3] >= 2)
  {
    uint64_t v38 = v77;
    uint64_t result = v76(a3);
    if (v38) {
      return result;
    }
    uint64_t v39 = v25;
    uint64_t v40 = AssociatedTypeWitness;
    uint64_t v76 = *(uint64_t (**)(uint64_t))(v71 + 32);
    uint64_t v77 = 0;
    ((void (*)(char *, char *, uint64_t))v76)(v70, v39, AssociatedTypeWitness);
    uint64_t v41 = *(void (**)(uint64_t *))(a4 + 16);
    uint64_t v42 = v69;
    if (v41)
    {
      aBlock[0] = v69;
      v41(aBlock);
    }
    aBlock[0] = v42;
    sub_24F86B590(a3, aBlock);
  }
  else
  {
    sub_24F776A80();
    aBlock[0] = sub_24F8CEC70();
    MEMORY[0x270FA5388](aBlock[0]);
    uint64_t v34 = v73;
    uint64_t v35 = AssociatedTypeWitness;
    *(&v60 - 6) = v72;
    *(&v60 - 5) = v34;
    uint64_t v36 = v76;
    uint64_t v37 = v77;
    *(&v60 - 4) = v68;
    *(&v60 - 3) = (uint64_t)v36;
    *(&v60 - 2) = v75;
    *(&v60 - 1) = a3;
    sub_24F8A2FCC(aBlock, (void (*)(void))sub_24F86FFCC);
    if (v37) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
    uint64_t v44 = v22;
    uint64_t v45 = v71 + 32;
    v43(v70, v44, v35);
    uint64_t v76 = (uint64_t (*)(uint64_t))v43;
    if (aBlock[0])
    {
      uint64_t v46 = swift_bridgeObjectRetain();
      uint64_t v47 = sub_24F83889C(v46);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v47 = 0;
    }
    uint64_t aBlock[6] = v47;
    sub_24F80D5A0(&v79);
    uint64_t v77 = 0;
    uint64_t v75 = v45 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a10 = v79;
    swift_bridgeObjectRelease();
    unint64_t v48 = *(void (**)(uint64_t *))(a4 + 16);
    if (v48)
    {
      uint64_t v79 = *a10;
      swift_bridgeObjectRetain();
      v48(&v79);
      swift_bridgeObjectRelease();
    }
    uint64_t v79 = *a10;
    swift_bridgeObjectRetain();
    sub_24F86B590(a3, &v79);
    swift_bridgeObjectRelease();
    uint64_t v40 = AssociatedTypeWitness;
  }
  uint64_t v75 = a5[5];
  uint64_t v49 = v70;
  uint64_t v50 = v71;
  uint64_t v51 = v61;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v61, v70, v40);
  unint64_t v52 = (*(unsigned __int8 *)(v50 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v53 = (void *)swift_allocObject();
  uint64_t v54 = v73;
  v53[2] = v72;
  v53[3] = v54;
  v53[4] = a5;
  ((void (*)(char *, char *, uint64_t))v76)((char *)v53 + v52, v51, v40);
  aBlock[4] = (uint64_t)sub_24F87027C;
  aBlock[5] = (uint64_t)v53;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24F8363BC;
  aBlock[3] = (uint64_t)&unk_270108410;
  uint64_t v55 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v56 = v62;
  sub_24F8CEBE0();
  uint64_t v79 = MEMORY[0x263F8EE78];
  sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
  sub_24F781274(&qword_26B1F7960);
  uint64_t v57 = v40;
  sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
  unint64_t v58 = v64;
  uint64_t v59 = v67;
  sub_24F8CF6D0();
  MEMORY[0x253363DC0](0, v56, v58, v55);
  _Block_release(v55);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v56, v65);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v57);
  return swift_release();
}

uint64_t sub_24F86D948(void *a1, void (*a2)(char *, char *, uint64_t))
{
  uint64_t v28 = a2;
  uint64_t v3 = *a1;
  uint64_t v27 = *(void *)(*a1 + 88);
  uint64_t v4 = *(void *)(v27 + 8);
  uint64_t v31 = *(void (**)(id (*)(), char *, uint64_t, uint64_t))(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  int v29 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (char *)&v27 - v9;
  uint64_t v32 = sub_24F8CF610();
  uint64_t v10 = *(void *)(v32 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v32);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t result = sub_24F832C54();
  if (result)
  {
    swift_beginAccess();
    (*(void (**)(void, void (*)(id (*)(), char *, uint64_t, uint64_t), uint64_t))(v4 + 32))(v28, v31, v4);
    swift_endAccess();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v32);
    if (sub_24F777048((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
    {
      uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v18 = v32;
      v17(v15, v32);
      return ((uint64_t (*)(char *, uint64_t))v17)(v13, v18);
    }
    else
    {
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      uint64_t v19 = v30;
      v28(v30, v13, AssociatedTypeWitness);
      uint64_t v20 = (void *)a1[2];
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v29, v19, AssociatedTypeWitness);
      unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v22 = (char *)swift_allocObject();
      uint64_t v23 = v27;
      *((void *)v22 + 2) = v31;
      *((void *)v22 + 3) = v23;
      *((void *)v22 + 4) = a1;
      v28(&v22[v21], v29, AssociatedTypeWitness);
      uint64_t v24 = v20 + 2;
      uint64_t v25 = v20[5];
      uint64_t v26 = v20[6];
      sub_24F7811D0(v24, v25);
      uint64_t v31 = *(void (**)(id (*)(), char *, uint64_t, uint64_t))(v26 + 8);
      swift_retain();
      v31(sub_24F8702A0, v22, v25, v26);
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v30, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v32);
    }
  }
  return result;
}

id sub_24F86DD48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  sub_24F839750(0, &qword_269A2B8B8);
  swift_getAssociatedTypeWitness();
  swift_getFunctionTypeMetadata1();
  sub_24F8CF610();
  id result = sub_24F832B64(a3, 0, a4);
  if (v8)
  {
    swift_retain();
    v8(a2);
    sub_24F787238((uint64_t)v8);
    return (id)sub_24F787238((uint64_t)v8);
  }
  return result;
}

uint64_t *sub_24F86DE80@<X0>(uint64_t *result@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = result[19];
  if (v3)
  {
    uint64_t v4 = *result;
    uint64_t v5 = result[20];
    uint64_t v6 = (uint64_t (*)())swift_allocObject();
    *((void *)v6 + 2) = *(void *)(v4 + 80);
    *((void *)v6 + 3) = *(void *)(v4 + 88);
    *((void *)v6 + 4) = v3;
    *((void *)v6 + 5) = v5;
    id result = (uint64_t *)swift_retain();
    uint64_t v7 = sub_24F870610;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return result;
}

BOOL sub_24F86DF40(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v5 = *(void *)(v4 + 168);
  if (v5 == 1)
  {
    return 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    BOOL v6 = DatabaseRegion.isModified(byEventsOfKind:)(a1, a2, a3, a4);
    sub_24F838834(v5);
  }
  return v6;
}

void sub_24F86DFCC()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  sub_24F773850();
  uint64_t v3 = *(void *)(v0 + 168);
  if (!v3) {
    goto LABEL_9;
  }
  if (v3 == 1)
  {
LABEL_3:
    sub_24F77344C();
    return;
  }
  uint64_t v4 = v2;
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_24F7811D0(v2, v5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  uint64_t v8 = v7(v5, v6);
  uint64_t v10 = v9;
  uint64_t v11 = sub_24F8CED00();
  uint64_t v13 = sub_24F80BA40(v11, v12, v8, v10, v3);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13 == 1) {
    goto LABEL_9;
  }
  if (!v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    sub_24F838834(v3);
    goto LABEL_10;
  }
  sub_24F80E278(v4[6], v15);
  char v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F838834(v3);
  if ((v17 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_10:
  *(unsigned char *)(v1 + 176) = 1;
  sub_24F77344C();
  TransactionObserver.stopObservingDatabaseChangesUntilNextTransaction()();
}

void sub_24F86E110()
{
  sub_24F76B80C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_24F8CEBD0();
  sub_24F77AD10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_24F77BBBC();
  id v97 = v9;
  sub_24F8CEC00();
  sub_24F77AD10();
  uint64_t v94 = v11;
  uint64_t v95 = v10;
  MEMORY[0x270FA5388](v10);
  sub_24F77BBBC();
  uint64_t v96 = v12;
  uint64_t v13 = *(void *)(v4 + 88);
  uint64_t v14 = *(void *)(v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v16 = sub_24F8CFF90();
  sub_24F773974();
  MEMORY[0x270FA5388](v17);
  sub_24F77AD10();
  MEMORY[0x270FA5388](v18);
  if (*((unsigned char *)v1 + 176) == 1)
  {
    uint64_t v91 = (char *)&v71 - v19;
    uint64_t v92 = v3;
    uint64_t v89 = v21;
    uint64_t v88 = v20;
    uint64_t v90 = v7;
    uint64_t v93 = v5;
    *((unsigned char *)v1 + 176) = 0;
    sub_24F839750(0, &qword_269A2B8B8);
    sub_24F7688B8(&qword_269A2B8C0);
    type metadata accessor for ValueConcurrentObserver.DatabaseAccess();
    sub_24F8CF610();
    swift_getTupleTypeMetadata2();
    uint64_t v22 = 0;
    sub_24F832B64((uint64_t)sub_24F837668, 0, (void (*)(id))sub_24F86FCB0);
    uint64_t v23 = v110;
    uint64_t v24 = v111;
    uint64_t v25 = v112;
    if (v100 == 1)
    {
      sub_24F86FCCC(v110);
      goto LABEL_18;
    }
    uint64_t v87 = AssociatedTypeWitness;
    uint64_t v74 = v16;
    uint64_t v26 = v106;
    if (!v110)
    {
      uint64_t v34 = v108;
      uint64_t v35 = v104;
      uint64_t v36 = v102;
      sub_24F787238(v100);
      sub_24F787238((uint64_t)v36);
      sub_24F787238((uint64_t)v35);
      sub_24F787238(v26);
      sub_24F787238(v34);
      goto LABEL_18;
    }
    uint64_t v80 = v107;
    uint64_t v79 = v108;
    uint64_t v83 = v109;
    uint64_t v78 = v105;
    uint64_t v77 = v104;
    uint64_t v81 = (uint64_t)v103;
    unint64_t v82 = v102;
    uint64_t v86 = v100;
    uint64_t v85 = v101;
    if (v104)
    {
      uint64_t v73 = 0;
      uint64_t v27 = v111;
      uint64_t v28 = v112;
      uint64_t v29 = v110;
      uint64_t v30 = v104;
      sub_24F86FD70(v100, v101, (uint64_t)v102, (uint64_t)v103, (uint64_t)v104, v105, v106, v107, v108, v109, (void (*)(void))sub_24F839BCC, (void (*)(uint64_t, uint64_t))sub_24F78C440, (void (*)(uint64_t, uint64_t))sub_24F839BCC);
      uint64_t v31 = v29;
      uint64_t v32 = v29;
      uint64_t v25 = v28;
      uint64_t v24 = v27;
      uint64_t v22 = v73;
      uint64_t v33 = sub_24F86FD0C(v32);
      ((void (*)(uint64_t))v30)(v33);
    }
    else
    {
      sub_24F86FD70(v100, v101, (uint64_t)v102, (uint64_t)v103, 0, v105, v106, v107, v108, v109, (void (*)(void))sub_24F839BCC, (void (*)(uint64_t, uint64_t))sub_24F78C440, (void (*)(uint64_t, uint64_t))sub_24F839BCC);
      uint64_t v31 = v23;
      sub_24F86FD0C(v23);
    }
    uint64_t v84 = v26;
    BOOL v37 = v1[3] == 1;
    uint64_t v76 = v25;
    uint64_t v75 = v24;
    if (!v37)
    {
      uint64_t v41 = (void *)swift_allocObject();
      void v41[2] = v14;
      void v41[3] = v13;
      v41[4] = v31;
      v41[5] = v24;
      v41[6] = v25;
      swift_retain();
      swift_retain();
      uint64_t v72 = v31;
      uint64_t v42 = DatabasePool.concurrentRead<A>(_:)((uint64_t)sub_24F86FEB0, (uint64_t)v41, v87);
      swift_release();
LABEL_13:
      uint64_t v92 = v42;
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v42;
      *(void *)(v43 + 24) = v1;
      uint64_t v104 = sub_24F86FE50;
      uint64_t v105 = v43;
      uint64_t v100 = MEMORY[0x263EF8330];
      uint64_t v101 = 1107296256;
      uint64_t v102 = sub_24F8363BC;
      uint64_t v103 = &unk_270108370;
      uint64_t v44 = _Block_copy(&v100);
      swift_retain();
      swift_retain();
      uint64_t v45 = v96;
      sub_24F8CEBE0();
      v99[0] = MEMORY[0x263F8EE78];
      sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
      sub_24F781274(&qword_26B1F7960);
      sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
      id v46 = v97;
      sub_24F8CF6D0();
      MEMORY[0x253363DC0](0, v45, v46, v44);
      _Block_release(v44);
      uint64_t v47 = sub_24F782C34();
      sub_24F787238(v47);
      unint64_t v48 = v82;
      uint64_t v49 = v81;
      sub_24F787238((uint64_t)v82);
      uint64_t v50 = v77;
      uint64_t v51 = v78;
      sub_24F787238((uint64_t)v77);
      uint64_t v52 = v84;
      uint64_t v53 = v80;
      sub_24F787238(v84);
      uint64_t v54 = v79;
      uint64_t v55 = v83;
      sub_24F787238(v79);
      swift_release();
      uint64_t v56 = v72;
      swift_release();
      sub_24F86FCCC(v56);
      uint64_t v57 = sub_24F782C34();
      sub_24F86FD70(v57, v58, (uint64_t)v48, v49, (uint64_t)v50, v51, v52, v53, v54, v55, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
      swift_release();
      sub_24F7739F4();
      v59();
      sub_24F7739F4();
      v60();
      swift_release();
      goto LABEL_18;
    }
    sub_24F776A80();
    uint64_t v100 = sub_24F8CEC70();
    MEMORY[0x270FA5388](v100);
    uint64_t v38 = v31;
    uint64_t v39 = v87;
    sub_24F8A2FCC(&v100, (void (*)(void))sub_24F86FD4C);
    if (v22)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = v84;
      sub_24F86EE54();
      id v97 = v22;
      sub_24F86CCDC(v22);
      uint64_t v63 = v79;
      uint64_t v64 = v86;
      uint64_t v65 = v82;
      uint64_t v66 = v77;
      sub_24F86FD70(v86, v85, (uint64_t)v82, v81, (uint64_t)v77, v78, v40, v80, v79, v83, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
      sub_24F86FCCC(v38);
      swift_release();
      swift_release();
      sub_24F787238(v64);
      sub_24F787238((uint64_t)v65);
      sub_24F787238((uint64_t)v66);
      sub_24F787238(v84);
      sub_24F787238(v63);

      goto LABEL_18;
    }
    if (v100)
    {
      uint64_t v61 = swift_bridgeObjectRetain();
      uint64_t v62 = (void (*)(void))sub_24F83889C(v61);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v62 = 0;
    }
    uint64_t v98 = v62;
    sub_24F80D5A0(v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v67 = v99[0];
    if (!v82)
    {
LABEL_25:
      uint64_t v72 = v31;
      uint64_t v69 = v1[21];
      v1[21] = v67;
      sub_24F838834(v69);
      type metadata accessor for DatabaseFuture();
      uint64_t v70 = v88;
      (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v88, v91, v39);
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = sub_24F78B67C(v70);
      goto LABEL_13;
    }
    if (v1[21] == 1)
    {
      swift_bridgeObjectRetain_n();
      sub_24F77F114();
      swift_bridgeObjectRelease();
      sub_24F838834(v67);
      sub_24F838834(1);
    }
    else
    {
      uint64_t v98 = (void (*)(void))v1[21];
      swift_bridgeObjectRetain_n();
      sub_24F77F114();
      char v68 = static DatabaseRegion.== infix(_:_:)(v99, (uint64_t *)&v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v68)
      {
LABEL_24:
        sub_24F787238((uint64_t)v62);
        goto LABEL_25;
      }
    }
    v99[0] = v67;
    v62(v99);
    goto LABEL_24;
  }
LABEL_18:
  sub_24F77344C();
}

uint64_t sub_24F86ECB8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1[19])
  {
    uint64_t v4 = a1[9];
    uint64_t v5 = a1[10];
    uint64_t v7 = a1[11];
    uint64_t v6 = a1[12];
    uint64_t v8 = a1[13];
    uint64_t v19 = a1[14];
    uint64_t v9 = a1[15];
    uint64_t v10 = a1[16];
    uint64_t v12 = a1[17];
    uint64_t v11 = a1[18];
    *a2 = v4;
    a2[1] = v5;
    a2[2] = v7;
    a2[3] = v6;
    a2[4] = v8;
    sub_24F78C440(v4);
    sub_24F78C440(v7);
    uint64_t v13 = v8;
    uint64_t v14 = v19;
    sub_24F78C440(v13);
    sub_24F78C440(v9);
    sub_24F78C440(v12);
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    *a2 = 1;
    *(_OWORD *)(a2 + 1) = 0u;
    *(_OWORD *)(a2 + 3) = 0u;
  }
  a2[5] = v14;
  a2[6] = v9;
  a2[7] = v10;
  a2[8] = v12;
  uint64_t v15 = a1[6];
  uint64_t v16 = a1[7];
  uint64_t v17 = a1[8];
  a2[9] = v11;
  a2[10] = v15;
  a2[11] = v16;
  a2[12] = v17;
  return sub_24F86FD0C(v15);
}

uint64_t sub_24F86EDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v10[7] = a1;
  void v10[2] = a5;
  void v10[3] = a6;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return sub_24F7715C0(1, (uint64_t)sub_24F86FFCC, (uint64_t)v10, AssociatedTypeWitness, a7);
}

id sub_24F86EE54()
{
  sub_24F7A18CC();
  uint64_t v1 = *(void *)(v0 + 168);
  *(void *)(v0 + 168) = 1;
  *(unsigned char *)(v0 + 176) = 0;
  sub_24F838834(v1);
  return sub_24F832B4C((uint64_t)sub_24F838694, 0, (void (*)(id))sub_24F86FFB0);
}

uint64_t sub_24F86EF10(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v52 = *(void *)(*a2 + 88);
  uint64_t v4 = *(void *)(v52 + 8);
  uint64_t v59 = a2;
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v54 = v4;
  uint64_t v58 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(void *)(v53 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v51 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v56 = (char *)v46 - v9;
  uint64_t v10 = sub_24F8CF610();
  uint64_t v55 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v46 - v15;
  uint64_t v17 = *(void *)(v2 + 80);
  uint64_t v57 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)v46 - v18;
  sub_24F78B8FC();
  v46[1] = v7;
  uint64_t v47 = v13;
  unint64_t v48 = v16;
  uint64_t v49 = v17;
  uint64_t v50 = v19;
  uint64_t v21 = v58;
  uint64_t v20 = v59;
  if ((sub_24F832C54() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v50, v49);
  }
  swift_beginAccess();
  uint64_t v22 = v48;
  uint64_t v23 = v50;
  (*(void (**)(char *, uint64_t))(v54 + 32))(v50, v21);
  swift_endAccess();
  uint64_t v24 = v55;
  uint64_t v25 = v10;
  uint64_t v26 = (uint64_t)v47;
  (*(void (**)(void))(v55 + 16))();
  uint64_t v27 = AssociatedTypeWitness;
  int v28 = sub_24F777048(v26, 1, AssociatedTypeWitness);
  uint64_t v29 = v57;
  if (v28 == 1)
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
    v30(v22, v25);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v49);
    return ((uint64_t (*)(uint64_t, uint64_t))v30)(v26, v25);
  }
  else
  {
    uint64_t v32 = v53;
    uint64_t v54 = v25;
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 32);
    uint64_t v34 = v56;
    v33(v56, v26, v27);
    uint64_t v35 = (void *)v20[2];
    uint64_t v36 = v51;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v51, v34, v27);
    unint64_t v37 = (*(unsigned __int8 *)(v32 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v38 = (void *)swift_allocObject();
    uint64_t v39 = v27;
    v46[0] = v27;
    uint64_t v40 = v24;
    uint64_t v41 = v38;
    uint64_t v42 = v52;
    v38[2] = v58;
    v38[3] = v42;
    v38[4] = v20;
    v33((char *)v38 + v37, (uint64_t)v36, v39);
    uint64_t v43 = v35[5];
    uint64_t v44 = v35[6];
    sub_24F7811D0(v35 + 2, v43);
    uint64_t v45 = *(void (**)(id (*)(), void *, uint64_t, uint64_t))(v44 + 8);
    swift_retain();
    v45(sub_24F86FF04, v41, v43, v44);
    swift_release();
    (*(void (**)(char *, void))(v32 + 8))(v56, v46[0]);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v48, v54);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v50, v49);
  }
}

uint64_t *sub_24F86F4CC@<X0>(uint64_t *result@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = result[19];
  if (v3)
  {
    uint64_t v4 = *result;
    uint64_t v5 = result[20];
    uint64_t v6 = (uint64_t (*)())swift_allocObject();
    *((void *)v6 + 2) = *(void *)(v4 + 80);
    *((void *)v6 + 3) = *(void *)(v4 + 88);
    *((void *)v6 + 4) = v3;
    *((void *)v6 + 5) = v5;
    id result = (uint64_t *)swift_retain();
    uint64_t v7 = sub_24F86FF4C;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return result;
}

uint64_t sub_24F86F58C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    uint64_t result = swift_retain();
  }
  *a2 = result;
  return result;
}

void sub_24F86F5BC()
{
  *(unsigned char *)(v0 + 176) = 0;
}

uint64_t sub_24F86F5D4()
{
  sub_24F832BDC();
  if (v3 == 1)
  {
    return swift_release();
  }
  else
  {
    sub_24F783160(v3);
    if (v11)
    {
      uint64_t v2 = sub_24F78C440((uint64_t)v11);
      v11(v2);
    }
    else
    {
      sub_24F78C440(0);
    }
    if (v13)
    {
      swift_retain();
      swift_retain();
      sub_24F88A410((uint64_t)sub_24F8705DC, v0);
      swift_release();
      swift_release();
      sub_24F787238(v3);
      sub_24F787238(v5);
      sub_24F787238(v7);
      sub_24F787238(v9);
      sub_24F787238((uint64_t)v11);
      swift_release();
    }
    else
    {
      sub_24F787238(v3);
      sub_24F787238(v5);
      sub_24F787238(v7);
      sub_24F787238(v9);
      sub_24F787238((uint64_t)v11);
    }
    return sub_24F86FD70(v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)v11, v12, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
  }
}

uint64_t sub_24F86F8AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + 9;
  uint64_t v5 = a1[19];
  if (v5)
  {
    uint64_t v6 = a1[9];
    uint64_t v7 = a1[11];
    uint64_t v34 = a1[12];
    uint64_t v8 = a1[14];
    uint64_t v33 = a1[13];
    uint64_t v9 = a1[15];
    uint64_t v10 = a1[16];
    uint64_t v11 = a1[17];
    uint64_t v30 = a1[18];
    uint64_t v32 = a1[10];
    sub_24F78C440(v6);
    uint64_t v31 = v7;
    sub_24F78C440(v7);
    uint64_t v12 = v8;
    sub_24F78C440(v33);
    uint64_t v13 = v9;
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    sub_24F78C440(v14);
    uint64_t v16 = v11;
    uint64_t v17 = v11;
    uint64_t v18 = v30;
    sub_24F78C440(v17);
    uint64_t v5 = a1[19];
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    uint64_t v33 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v6 = 1;
  }
  uint64_t v19 = a1[9];
  uint64_t v20 = a1[10];
  uint64_t v21 = a1[11];
  uint64_t v22 = a1[12];
  uint64_t v23 = a1[13];
  uint64_t v24 = a1[14];
  uint64_t v25 = a1[15];
  uint64_t v26 = a1[16];
  uint64_t v27 = a1[17];
  uint64_t v28 = a1[18];
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  void v4[2] = 0u;
  v4[3] = 0u;
  v4[4] = 0u;
  v4[5] = 0u;
  sub_24F8390EC(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v5);
  *a2 = v6;
  a2[1] = v32;
  a2[2] = v31;
  a2[3] = v34;
  a2[4] = v33;
  a2[5] = v12;
  a2[6] = v13;
  a2[7] = v15;
  a2[8] = v16;
  a2[9] = v18;
  uint64_t result = a1[6];
  if (result) {
    uint64_t result = swift_retain();
  }
  a2[10] = result;
  return result;
}

uint64_t *sub_24F86FA18(uint64_t a1, uint64_t a2)
{
  sub_24F832CC0();
  uint64_t result = (uint64_t *)sub_24F838FFC((uint64_t)v4, (uint64_t)v5);
  if (v5[0] != 1)
  {
    if (v6) {
      v6(a2);
    }
    return sub_24F870210(v4, (void (*)(void))sub_24F839BC8, (void (*)(uint64_t, uint64_t))sub_24F787238, (void (*)(uint64_t, uint64_t))sub_24F839BC8);
  }
  return result;
}

uint64_t sub_24F86FAFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + 9;
  uint64_t v5 = a1[19];
  if (v5)
  {
    uint64_t v6 = a1[9];
    uint64_t v7 = a1[11];
    uint64_t v34 = a1[12];
    uint64_t v8 = a1[14];
    uint64_t v33 = a1[13];
    uint64_t v9 = a1[15];
    uint64_t v10 = a1[16];
    uint64_t v11 = a1[17];
    uint64_t v30 = a1[18];
    uint64_t v32 = a1[10];
    sub_24F78C440(v6);
    uint64_t v31 = v7;
    sub_24F78C440(v7);
    uint64_t v12 = v8;
    sub_24F78C440(v33);
    uint64_t v13 = v9;
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    sub_24F78C440(v14);
    uint64_t v16 = v11;
    uint64_t v17 = v11;
    uint64_t v18 = v30;
    sub_24F78C440(v17);
    uint64_t v5 = a1[19];
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    uint64_t v33 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v6 = 1;
  }
  uint64_t v19 = a1[9];
  uint64_t v20 = a1[10];
  uint64_t v21 = a1[11];
  uint64_t v22 = a1[12];
  uint64_t v23 = a1[13];
  uint64_t v24 = a1[14];
  uint64_t v25 = a1[15];
  uint64_t v26 = a1[16];
  uint64_t v27 = a1[17];
  uint64_t v28 = a1[18];
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  void v4[2] = 0u;
  v4[3] = 0u;
  v4[4] = 0u;
  v4[5] = 0u;
  uint64_t result = sub_24F8390EC(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v5);
  *a2 = v6;
  a2[1] = v32;
  a2[2] = v31;
  a2[3] = v34;
  a2[4] = v33;
  a2[5] = v12;
  a2[6] = v13;
  a2[7] = v15;
  a2[8] = v16;
  a2[9] = v18;
  return result;
}

uint64_t sub_24F86FC50(void *a1)
{
  uint64_t v1 = a1[6];
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0;
  return sub_24F86FCCC(v1);
}

uint64_t sub_24F86FC8C()
{
  return sub_24F86F5D4();
}

uint64_t sub_24F86FCB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F86ECB8(v1, a1);
}

uint64_t sub_24F86FCCC(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24F86FD0C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24F86FD4C@<X0>(uint64_t a1@<X8>)
{
  return sub_24F86EDC0(v1[4], v1[5], v1[6], v1[7], v1[2], v1[3], a1);
}

uint64_t sub_24F86FD70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(void), void (*a12)(uint64_t, uint64_t), void (*a13)(uint64_t, uint64_t))
{
  if (result != 1)
  {
    sub_24F775D80();
    a11();
    a12(v16, v15);
    ((void (*)(uint64_t, uint64_t))a11)(v14, v13);
    a13(a7, a8);
    return ((uint64_t (*)(uint64_t, uint64_t))a11)(a9, a10);
  }
  return result;
}

uint64_t sub_24F86FE38()
{
  return sub_24F766B84(MEMORY[0x263F8EED8]);
}

uint64_t sub_24F86FE50()
{
  return sub_24F86EF10(*(uint64_t **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_24F86FE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24F86FE68()
{
  return swift_release();
}

uint64_t sub_24F86FE70()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F86FEB0()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_24F86FED8@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F86F58C(v1, a1);
}

uint64_t sub_24F86FEF8()
{
  return sub_24F870474();
}

id sub_24F86FF04()
{
  return sub_24F87055C((uint64_t)sub_24F837668, (void (*)(id))sub_24F86FF30);
}

uint64_t *sub_24F86FF30@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_24F86F4CC(v1, a1);
}

uint64_t sub_24F86FF4C()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_24F86FF74()
{
  return sub_24F766B84(MEMORY[0x263F8EEB0]);
}

uint64_t *sub_24F86FF8C()
{
  return sub_24F86FA18(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24F86FF94@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F86FAFC(v1, a1);
}

uint64_t sub_24F86FFB0()
{
  return sub_24F86FC50(v0);
}

uint64_t sub_24F86FFCC()
{
  return sub_24F870398();
}

uint64_t sub_24F86FFE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F86F8AC(v1, a1);
}

uint64_t sub_24F870000()
{
  sub_24F773974();
  sub_24F7739F4();
  v0();
  return swift_deallocObject();
}

uint64_t sub_24F870080()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 24) + 8) + 24))();
}

uint64_t sub_24F8700F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F86B0B8(v1, a1);
}

uint64_t sub_24F87010C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F86B620(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(uint64_t))(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_24F87012C@<X0>(uint64_t a1@<X8>)
{
  return sub_24F86BBB0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24F870148()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F8701A8(uint64_t a1)
{
  return sub_24F86CDA4(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

void *sub_24F8701BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F86D0A4(v1, a1);
}

uint64_t sub_24F8701D8()
{
  return sub_24F86D184(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(uint64_t **)(v0 + 48), *(void *)(v0 + 56), *(uint64_t (**)(uint64_t))(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(uint64_t **)(v0 + 88));
}

uint64_t *sub_24F870210(uint64_t *a1, void (*a2)(void), void (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t))
{
  return a1;
}

uint64_t sub_24F870270()
{
  return sub_24F870474();
}

uint64_t sub_24F87027C()
{
  return sub_24F8703F8((uint64_t (*)(uint64_t))sub_24F86D948);
}

uint64_t sub_24F870294()
{
  return sub_24F870474();
}

id sub_24F8702A0()
{
  return sub_24F87055C((uint64_t)sub_24F86D088, (void (*)(id))sub_24F8702CC);
}

uint64_t *sub_24F8702CC@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_24F86DE80(v1, a1);
}

uint64_t sub_24F8702E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F870320()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_24F870370(void *a1, char a2)
{
  sub_24F86BED0(a1, a2 & 1, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

void sub_24F870384(BOOL *a1@<X8>)
{
  *a1 = *(void *)(v1 + 152) != 0;
}

uint64_t sub_24F870398()
{
  return (*(uint64_t (**)(void))(v0 + 40))(*(void *)(v0 + 56));
}

void sub_24F8703C8(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_24F8703D4()
{
  return sub_24F870474();
}

uint64_t sub_24F8703E0()
{
  return sub_24F8703F8((uint64_t (*)(uint64_t))sub_24F86C854);
}

uint64_t sub_24F8703F8(uint64_t (*a1)(uint64_t))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77DF00(AssociatedTypeWitness);
  uint64_t v2 = sub_24F7711C8();
  return a1(v2);
}

id sub_24F87045C(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_24F870468()
{
  return sub_24F870474();
}

uint64_t sub_24F870474()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);
  return swift_deallocObject();
}

id sub_24F870530()
{
  return sub_24F87055C((uint64_t)sub_24F8362D8, (void (*)(id))sub_24F8705C0);
}

id sub_24F87055C(uint64_t a1, void (*a2)(id))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77DF00(AssociatedTypeWitness);
  uint64_t v5 = sub_24F7711C8();
  return sub_24F86DD48(v5, v6, a1, a2);
}

uint64_t *sub_24F8705C0@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_24F86CC1C(v1, a1);
}

void sub_24F8705F0(BOOL *a1@<X8>)
{
}

uint64_t sub_24F870614@<X0>(uint64_t *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5 = a3;
  uint64_t v9 = *a4;
  uint64_t v10 = a4[1];
  uint64_t v12 = *__src;
  uint64_t v11 = __src[1];
  char v13 = 1;
  if (!a3)
  {
    swift_bridgeObjectRetain();
    char v13 = 0;
    a2 = v12;
    uint64_t v5 = v11;
  }
  memcpy(&__srca[7], __src, 0xA2uLL);
  sub_24F781274(&qword_26B1F5658);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24F8DDBF0;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = v5;
  *(unsigned char *)(v14 + 48) = v13;
  *(void *)(v14 + 56) = v12;
  *(void *)(v14 + 64) = v11;
  *(void *)(v14 + 72) = v9;
  *(void *)(v14 + 80) = v10;
  *(unsigned char *)(v14 + 88) = 1;
  memcpy((void *)(v14 + 89), __srca, 0xA9uLL);
  *(unsigned char *)(v14 + 258) = 0;
  *a5 = v14;
  return swift_bridgeObjectRetain();
}

uint64_t BelongsToAssociation._sqlAssociation.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t BelongsToAssociation._sqlAssociation.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  return result;
}

uint64_t (*BelongsToAssociation._sqlAssociation.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_24F870764(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F8707A0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void (*sub_24F8707E4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BelongsToAssociation._sqlAssociation.modify();
  return sub_24F79A608;
}

uint64_t sub_24F87083C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_24F870878(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for BelongsToAssociation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F8708CC@<X0>(uint64_t *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7 = *a4;
  uint64_t v8 = a4[1];
  uint64_t v10 = *__src;
  uint64_t v9 = __src[1];
  if (a3)
  {
    uint64_t v11 = a3;
    char v13 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    char v13 = 0;
    a2 = v10;
    uint64_t v11 = v9;
  }
  memcpy(&v16[7], __src, 0xA2uLL);
  sub_24F781274(&qword_26B1F5658);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24F8DDBF0;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = v11;
  *(unsigned char *)(v14 + 48) = v13;
  *(void *)(v14 + 56) = v10;
  *(void *)(v14 + 64) = v9;
  *(void *)(v14 + 72) = v7;
  *(void *)(v14 + 80) = v8;
  *(unsigned char *)(v14 + 88) = 0;
  memcpy((void *)(v14 + 89), v16, 0xA9uLL);
  *(unsigned char *)(v14 + 258) = 0;
  *a5 = v14;
  return swift_bridgeObjectRetain();
}

uint64_t HasOneAssociation._sqlAssociation.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t HasOneAssociation._sqlAssociation.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  return result;
}

uint64_t (*HasOneAssociation._sqlAssociation.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_24F870A1C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F870A58(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void (*sub_24F870A9C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = HasOneAssociation._sqlAssociation.modify();
  return sub_24F79A608;
}

uint64_t sub_24F870AF4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_24F870B30(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for HasOneAssociation()
{
  return sub_24F777DE0();
}

uint64_t sub_24F870B84(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    swift_release();
    uint64_t v9 = MEMORY[0x263F8EE78];
LABEL_15:
    swift_bridgeObjectRelease();
    swift_release();
    return v9;
  }
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_24F77C4AC();
  uint64_t v9 = v36;
  uint64_t v10 = (char *)(a1 + 40);
  uint64_t v34 = a2;
  while (1)
  {
    uint64_t v11 = *((void *)v10 - 1);
    char v12 = *v10;
    uint64_t v35 = v9;
    if ((*v10 & 1) == 0) {
      break;
    }
    sub_24F87827C(v11, 1);
    uint64_t v13 = qword_26B1F6F38;
    swift_retain();
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_26B1FAB18;
    swift_retain();
    unint64_t v15 = MEMORY[0x263F8EE78];
    sub_24F778B08();
    type metadata accessor for SQLGenerationContext();
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = v14;
    uint64_t v9 = v16;
    uint64_t v18 = sub_24F779224(a2, v17, v15);
    sub_24F87827C(v11, 1);
    swift_retain();
    sub_24F76BCC0(v11, (uint64_t)v18);
    if (v5)
    {
      sub_24F878298(v11, 1);
      swift_release();
      goto LABEL_18;
    }
    sub_24F878298(v11, 1);
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    uint64_t v19 = sub_24F8CED30();
    uint64_t v21 = v20;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v22 = v11;
    char v23 = 1;
LABEL_10:
    sub_24F878298(v22, v23);
    uint64_t v9 = v35;
    unint64_t v29 = *(void *)(v35 + 16);
    if (v29 >= *(void *)(v35 + 24) >> 1)
    {
      sub_24F77C4AC();
      uint64_t v9 = v35;
    }
    *(void *)(v9 + 16) = v29 + 1;
    uint64_t v30 = v9 + 16 * v29;
    *(void *)(v30 + 32) = v19;
    *(void *)(v30 + 40) = v21;
    v10 += 16;
    --v7;
    uint64_t v5 = 0;
    a2 = v34;
    if (!v7)
    {
      swift_release();
      goto LABEL_15;
    }
  }
  uint64_t v25 = *(void *)(a3 + 16);
  uint64_t v24 = *(void *)(a3 + 24);
  sub_24F87827C(v11, 0);
  swift_retain();
  uint64_t v26 = v24;
  uint64_t v9 = v11;
  uint64_t v27 = sub_24F874BA8(a2, v25, v26, a4);
  if (!v5)
  {
    uint64_t v19 = v27;
    uint64_t v21 = v28;
    sub_24F878298(v11, 0);
    uint64_t v22 = v11;
    char v23 = 0;
    goto LABEL_10;
  }
  sub_24F878298(v11, 0);
LABEL_18:
  sub_24F878298(v11, v12);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v9;
}

uint64_t sub_24F870EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v6 = v19;
    uint64_t v7 = (char *)(a1 + 32);
    uint64_t v8 = v4 - 1;
    for (uint64_t i = a2; ; a2 = i)
    {
      memcpy(__dst, v7, 0xD3uLL);
      memcpy(v17, v7, sizeof(v17));
      sub_24F878CA8((uint64_t)__dst);
      uint64_t v9 = sub_24F874314(a2);
      if (v2)
      {
        sub_24F877430((uint64_t)__dst);
        swift_release();
        swift_release();
        return v6;
      }
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      sub_24F877430((uint64_t)__dst);
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      if (v13 >= *(void *)(v6 + 24) >> 1)
      {
        sub_24F77C4AC();
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v12;
      if (!v8) {
        break;
      }
      v7 += 216;
      --v8;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v6;
}

uint64_t Database.create(table:temporary:ifNotExists:withoutRowID:body:)(uint64_t a1, uint64_t a2, char a3, char a4, char a5, void (*a6)(uint64_t))
{
  uint64_t v6 = 2;
  if ((a3 & 1) == 0) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL | a4 & 1;
  if (a5) {
    v7 |= 4uLL;
  }
  unint64_t v9 = v7;
  return Database.create(table:options:body:)(a1, a2, (uint64_t *)&v9, a6);
}

uint64_t Database.create(table:options:body:)(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v9 = *a3;
  type metadata accessor for TableDefinition();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = MEMORY[0x263F8EE78];
  *(void *)(v10 + 40) = MEMORY[0x263F8EE78];
  *(void *)(v10 + 48) = 0;
  *(unsigned char *)(v10 + 56) = 0;
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 72) = v11;
  *(void *)(v10 + 80) = v11;
  *(void *)(v10 + 88) = v11;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = v9;
  swift_bridgeObjectRetain();
  a4(v10);
  if (v5) {
    return swift_release();
  }
  uint64_t v12 = sub_24F871178(v4);
  sub_24F76B9E4(v12, v13, MEMORY[0x263F8EE80], v15, v16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F871178(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v264 = MEMORY[0x263F8EE78];
  sub_24F787184();
  uint64_t v4 = v3;
  unint64_t v5 = *(void *)(v3 + 16);
  unint64_t v6 = v5 + 1;
  if (v5 >= *(void *)(v3 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v4 = v225;
  }
  *(void *)(v4 + 16) = v6;
  uint64_t v7 = v4 + 16 * v5;
  *(void *)(v7 + 32) = 0x455441455243;
  *(void *)(v7 + 40) = 0xE600000000000000;
  uint64_t v8 = v246;
  uint64_t v9 = v246[4];
  if ((v9 & 2) != 0)
  {
    unint64_t v10 = v5 + 2;
    if (v6 >= *(void *)(v4 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v8 = v246;
      uint64_t v4 = v228;
    }
    *(void *)(v4 + 16) = v10;
    uint64_t v11 = v4 + 16 * v6;
    *(void *)(v11 + 32) = 0x5241524F504D4554;
    *(void *)(v11 + 40) = 0xE900000000000059;
    unint64_t v6 = *(void *)(v4 + 16);
  }
  unint64_t v12 = v6 + 1;
  if (v6 >= *(void *)(v4 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v8 = v246;
    uint64_t v4 = v226;
  }
  *(void *)(v4 + 16) = v12;
  uint64_t v13 = v4 + 16 * v6;
  *(void *)(v13 + 32) = 0x454C424154;
  *(void *)(v13 + 40) = 0xE500000000000000;
  char v244 = v9;
  if (v9)
  {
    unint64_t v14 = v6 + 2;
    if (v12 >= *(void *)(v4 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v8 = v246;
      uint64_t v4 = v229;
    }
    *(void *)(v4 + 16) = v14;
    uint64_t v15 = v4 + 16 * v12;
    strcpy((char *)(v15 + 32), "IF NOT EXISTS");
    *(_WORD *)(v15 + 46) = -4864;
  }
  uint64_t v16 = v4;
  uint64_t v17 = v8[2];
  uint64_t v18 = v8[3];
  __dst[0] = 34;
  __dst[1] = 0xE100000000000000;
  uint64_t v247 = v18;
  uint64_t v248 = v17;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  unint64_t v19 = *(void *)(v16 + 16);
  uint64_t v20 = v16;
  if (v19 >= *(void *)(v16 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v20 = v227;
  }
  *(void *)(v20 + 16) = v19 + 1;
  uint64_t v21 = v20 + 16 * v19;
  *(void *)(v21 + 32) = 34;
  *(void *)(v21 + 40) = 0xE100000000000000;
  uint64_t v22 = (uint64_t)v246;
  char v23 = (_OWORD *)v246[6];
  p_MangledTypeName = &stru_24F8DCFD8[3].MangledTypeName;
  uint64_t v245 = v20;
  if (v23)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  uint64_t v28 = v246[5];
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    uint64_t v30 = (unsigned char *)(v28 + 40);
    char v23 = &unk_2701006E8;
    while (1)
    {
      if ((*v30 & 1) == 0)
      {
        uint64_t v31 = *((void *)v30 - 1);
        if (*(unsigned __int8 *)(v31 + 49) << 8 != 512) {
          break;
        }
      }
      v30 += 16;
      if (!--v29) {
        goto LABEL_17;
      }
    }
    sub_24F781274((uint64_t *)&unk_26B1F7C88);
    uint64_t v22 = (uint64_t)v246;
    char v23 = (_OWORD *)swift_allocObject();
    v23[1] = xmmword_24F8DDBF0;
    uint64_t v47 = *(void *)(v31 + 24);
    *((void *)v23 + 4) = *(void *)(v31 + 16);
    *((void *)v23 + 5) = v47;
    goto LABEL_16;
  }
  char v23 = &unk_2701006E8;
LABEL_17:
  __src[0] = MEMORY[0x263F8EE78];
  uint64_t v25 = a1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_bridgeObjectRetain();
  sub_24F870B84(v26, a1, v22, v23);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_bridgeObjectRelease();
  sub_24F792AE8();
  uint64_t v32 = *(void *)(v22 + 48);
  uint64_t v33 = (void *)v22;
  if (v32)
  {
    int v34 = *(unsigned __int8 *)(v22 + 56);
    swift_bridgeObjectRetain();
    sub_24F787184();
    uint64_t v36 = v35;
    unint64_t v37 = *(void *)(v35 + 16);
    if (v37 >= *(void *)(v35 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v36 = v230;
    }
    *(void *)(v36 + 16) = v37 + 1;
    uint64_t v38 = v36 + 16 * v37;
    *(void *)(v38 + 32) = 0x205952414D495250;
    *(void *)(v38 + 40) = 0xEB0000000059454BLL;
    __dst[0] = 40;
    __dst[1] = 0xE100000000000000;
    uint64_t v39 = sub_24F7922AC(v32);
    swift_bridgeObjectRelease();
    v262[0] = v39;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    unint64_t v40 = *(void *)(v36 + 16);
    unint64_t v41 = v40 + 1;
    if (v40 >= *(void *)(v36 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v36 = v231;
    }
    *(void *)(v36 + 16) = v41;
    uint64_t v42 = v36 + 16 * v40;
    *(void *)(v42 + 32) = 40;
    *(void *)(v42 + 40) = 0xE100000000000000;
    unint64_t v43 = v40 + 2;
    if (v41 >= *(void *)(v36 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v36 = v238;
    }
    *(void *)(v36 + 16) = v43;
    uint64_t v44 = v36 + 16 * v41;
    *(void *)(v44 + 32) = 0x4C464E4F43204E4FLL;
    *(void *)(v44 + 40) = 0xEB00000000544349;
    unint64_t v45 = 0xE500000000000000;
    uint64_t v46 = 0x54524F4241;
    switch(v34)
    {
      case 0:
        unint64_t v45 = 0xE800000000000000;
        uint64_t v46 = 0x4B4341424C4C4F52;
        goto LABEL_41;
      case 1:
        goto LABEL_41;
      case 2:
        unint64_t v45 = 0xE400000000000000;
        uint64_t v46 = 1279869254;
        goto LABEL_41;
      case 3:
        unint64_t v45 = 0xE600000000000000;
        uint64_t v46 = 0x45524F4E4749;
        goto LABEL_41;
      case 4:
        unint64_t v45 = 0xE700000000000000;
        uint64_t v46 = 0x4543414C504552;
LABEL_41:
        unint64_t v48 = *(void *)(v36 + 16);
        if (v48 >= *(void *)(v36 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v36 = v239;
        }
        *(void *)(v36 + 16) = v48 + 1;
        uint64_t v49 = v36 + 16 * v48;
        *(void *)(v49 + 32) = v46;
        *(void *)(v49 + 40) = v45;
        break;
      default:
        break;
    }
    __dst[0] = v36;
    uint64_t v50 = sub_24F8CED30();
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    uint64_t v53 = __src[0];
    p_MangledTypeName = (_DWORD *)(stru_24F8DCFD8 + 40);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F787184();
      uint64_t v53 = v232;
    }
    unint64_t v54 = *(void *)(v53 + 16);
    uint64_t v33 = v246;
    if (v54 >= *(void *)(v53 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v33 = v246;
      uint64_t v53 = v233;
    }
    *(void *)(v53 + 16) = v54 + 1;
    uint64_t v55 = v53 + 16 * v54;
    *(void *)(v55 + 32) = v50;
    *(void *)(v55 + 40) = v52;
    __src[0] = v53;
    uint64_t v25 = a1;
  }
  uint64_t v56 = *(void *)(v33[8] + 16);
  if (v56)
  {
    uint64_t v57 = __src[0];
    uint64_t v58 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v59 = *((void *)v58 - 1);
      int v60 = *v58;
      swift_bridgeObjectRetain();
      sub_24F787184();
      uint64_t v62 = v61;
      unint64_t v63 = *(void *)(v61 + 16);
      uint64_t v256 = v57;
      if (v63 >= *(void *)(v61 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v62 = v80;
      }
      *(void *)(v62 + 16) = v63 + 1;
      uint64_t v64 = v62 + 16 * v63;
      *(void *)(v64 + 32) = 0x455551494E55;
      *(void *)(v64 + 40) = 0xE600000000000000;
      __dst[0] = 40;
      __dst[1] = 0xE100000000000000;
      uint64_t v65 = sub_24F7922AC(v59);
      swift_bridgeObjectRelease();
      v262[0] = v65;
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      sub_24F8CED30();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      unint64_t v66 = *(void *)(v62 + 16);
      unint64_t v67 = v66 + 1;
      if (v66 >= *(void *)(v62 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v62 = v81;
      }
      *(void *)(v62 + 16) = v67;
      uint64_t v68 = v62 + 16 * v66;
      *(void *)(v68 + 32) = 40;
      *(void *)(v68 + 40) = 0xE100000000000000;
      unint64_t v69 = v66 + 2;
      if (v67 >= *(void *)(v62 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v62 = v84;
      }
      *(void *)(v62 + 16) = v69;
      uint64_t v70 = v62 + 16 * v67;
      *(void *)(v70 + 32) = 0x4C464E4F43204E4FLL;
      *(void *)(v70 + 40) = 0xEB00000000544349;
      unint64_t v71 = 0xE500000000000000;
      uint64_t v72 = 0x54524F4241;
      switch(v60)
      {
        case 0:
          unint64_t v71 = 0xE800000000000000;
          uint64_t v72 = 0x4B4341424C4C4F52;
          goto LABEL_62;
        case 1:
          goto LABEL_62;
        case 2:
          unint64_t v71 = 0xE400000000000000;
          uint64_t v72 = 1279869254;
          goto LABEL_62;
        case 3:
          unint64_t v71 = 0xE600000000000000;
          uint64_t v72 = 0x45524F4E4749;
          goto LABEL_62;
        case 4:
          unint64_t v71 = 0xE700000000000000;
          uint64_t v72 = 0x4543414C504552;
LABEL_62:
          unint64_t v73 = *(void *)(v62 + 16);
          if (v73 >= *(void *)(v62 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v62 = v85;
          }
          *(void *)(v62 + 16) = v73 + 1;
          uint64_t v74 = v62 + 16 * v73;
          *(void *)(v74 + 32) = v72;
          *(void *)(v74 + 40) = v71;
          break;
        default:
          break;
      }
      uint64_t v57 = v256;
      __dst[0] = v62;
      uint64_t v75 = sub_24F8CED30();
      uint64_t v77 = v76;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F787184();
        uint64_t v57 = v82;
      }
      unint64_t v78 = *(void *)(v57 + 16);
      if (v78 >= *(void *)(v57 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v57 = v83;
      }
      *(void *)(v57 + 16) = v78 + 1;
      uint64_t v79 = v57 + 16 * v78;
      *(void *)(v79 + 32) = v75;
      *(void *)(v79 + 40) = v77;
      v58 += 16;
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease();
    __src[0] = v57;
    uint64_t v25 = a1;
    uint64_t v33 = v246;
    p_MangledTypeName = &stru_24F8DCFD8[3].MangledTypeName;
  }
  uint64_t v86 = v33[9];
  uint64_t v87 = *(void *)(v86 + 16);
  uint64_t v88 = 0;
  if (v87)
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = 0;
    long long v241 = *((_OWORD *)p_MangledTypeName + 191);
    uint64_t v249 = v86;
    while (1)
    {
      uint64_t v252 = v89;
      uint64_t v253 = v87;
      uint64_t v90 = *(void *)(v86 + v89 + 40);
      uint64_t v91 = *(void *)(v86 + v89 + 48);
      uint64_t v92 = *(void *)(v86 + v89 + 56);
      int v254 = *(unsigned __int8 *)(v86 + v89 + 64);
      uint64_t v255 = *(unsigned __int8 *)(v86 + v89 + 65);
      int v251 = *(unsigned __int8 *)(v86 + v89 + 66);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F787184();
      uint64_t v94 = v93;
      unint64_t v95 = *(void *)(v93 + 16);
      if (v95 >= *(void *)(v93 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v94 = v141;
      }
      *(void *)(v94 + 16) = v95 + 1;
      uint64_t v96 = v94 + 16 * v95;
      *(void *)(v96 + 32) = 0x204E474945524F46;
      *(void *)(v96 + 40) = 0xEB0000000059454BLL;
      __dst[0] = 40;
      __dst[1] = 0xE100000000000000;
      uint64_t v97 = swift_bridgeObjectRetain();
      uint64_t v98 = sub_24F7922AC(v97);
      uint64_t v99 = v88;
      swift_bridgeObjectRelease();
      v262[0] = v98;
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      sub_24F8CED30();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v100 = __dst[0];
      uint64_t v101 = __dst[1];
      unint64_t v102 = *(void *)(v94 + 16);
      unint64_t v103 = *(void *)(v94 + 24) >> 1;
      unint64_t v104 = v102 + 1;
      if (v103 <= v102)
      {
        sub_24F787184();
        uint64_t v94 = v142;
        unint64_t v103 = *(void *)(v142 + 24) >> 1;
      }
      *(void *)(v94 + 16) = v104;
      uint64_t v105 = v94 + 16 * v102;
      *(void *)(v105 + 32) = v100;
      *(void *)(v105 + 40) = v101;
      if ((uint64_t)v103 < (uint64_t)(v102 + 2))
      {
        sub_24F787184();
        uint64_t v94 = v143;
      }
      *(void *)(v94 + 16) = v102 + 2;
      uint64_t v106 = v94 + 16 * v104;
      *(void *)(v106 + 32) = 0x434E455245464552;
      *(void *)(v106 + 40) = 0xEA00000000005345;
      if (v92)
      {
        __dst[0] = 34;
        __dst[1] = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        sub_24F8CEEB0();
        sub_24F8CEEB0();
        uint64_t v107 = sub_24F7922AC(v92);
        uint64_t v88 = v99;
      }
      else
      {
        BOOL v108 = v90 == v248 && v91 == v247;
        if (!v108 && (sub_24F8CFD00() & 1) == 0)
        {
          Database.primaryKey(_:)(v90, v91, __dst);
          uint64_t v242 = __dst[1];
          uint64_t v243 = (_OWORD *)__dst[0];
          int v138 = LOBYTE(__dst[2]);
          sub_24F7B0E0C(6);
          __dst[0] = 34;
          __dst[1] = 0xE100000000000000;
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          sub_24F8CEEB0();
          if (v138)
          {
            uint64_t v139 = &unk_2701006B8;
            if (v138 == 1) {
              uint64_t v139 = v243;
            }
          }
          else
          {
            sub_24F781274((uint64_t *)&unk_26B1F7C88);
            uint64_t v139 = (_OWORD *)swift_allocObject();
            v139[1] = v241;
            *((void *)v139 + 4) = v243;
            *((void *)v139 + 5) = v242;
          }
          uint64_t v140 = sub_24F7922AC((uint64_t)v139);
          uint64_t v88 = 0;
          swift_bridgeObjectRelease();
          v262[0] = v140;
          goto LABEL_88;
        }
        __dst[0] = 34;
        __dst[1] = 0xE100000000000000;
        sub_24F8CEEB0();
        sub_24F8CEEB0();
        sub_24F8CEEB0();
        uint64_t v109 = swift_bridgeObjectRetain();
        uint64_t v107 = sub_24F7922AC(v109);
        uint64_t v88 = v99;
      }
      swift_bridgeObjectRelease();
      v262[0] = v107;
LABEL_88:
      sub_24F8CED30();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v110 = __dst[0];
      uint64_t v111 = __dst[1];
      unint64_t v112 = *(void *)(v94 + 16);
      unint64_t v113 = v112 + 1;
      if (v112 >= *(void *)(v94 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v94 = v146;
      }
      *(void *)(v94 + 16) = v113;
      uint64_t v114 = v94 + 16 * v112;
      *(void *)(v114 + 32) = v110;
      *(void *)(v114 + 40) = v111;
      int v116 = v254;
      uint64_t v115 = v255;
      unint64_t v117 = v112 + 2;
      if (v113 >= *(void *)(v94 + 24) >> 1)
      {
        sub_24F787184();
        int v116 = v254;
        uint64_t v115 = v255;
        uint64_t v94 = v147;
      }
      *(void *)(v94 + 16) = v117;
      uint64_t v118 = v94 + 16 * v113;
      *(void *)(v118 + 32) = 0x54454C4544204E4FLL;
      *(void *)(v118 + 40) = 0xE900000000000045;
      unint64_t v119 = 0xE700000000000000;
      uint64_t v120 = 0x45444143534143;
      switch(v116)
      {
        case 0:
          goto LABEL_96;
        case 1:
          unint64_t v119 = 0xE800000000000000;
          uint64_t v120 = 0x5443495254534552;
          goto LABEL_96;
        case 2:
          unint64_t v119 = 0xE800000000000000;
          uint64_t v120 = 0x4C4C554E20544553;
          goto LABEL_96;
        case 3:
          unint64_t v119 = 0xEB00000000544C55;
          uint64_t v120 = 0x4146454420544553;
LABEL_96:
          unint64_t v121 = v113 + 2;
          if (v117 >= *(void *)(v94 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v115 = v255;
            uint64_t v94 = v148;
          }
          *(void *)(v94 + 16) = v121;
          uint64_t v122 = v94 + 16 * v117;
          *(void *)(v122 + 32) = v120;
          *(void *)(v122 + 40) = v119;
          break;
        default:
          break;
      }
      if (v115 == 4)
      {
        int v123 = v251;
      }
      else
      {
        unint64_t v124 = *(void *)(v94 + 16);
        unint64_t v125 = v124 + 1;
        if (v124 >= *(void *)(v94 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v115 = v255;
          uint64_t v94 = v149;
        }
        *(void *)(v94 + 16) = v125;
        uint64_t v126 = v94 + 16 * v124;
        *(void *)(v126 + 32) = 0x5441445055204E4FLL;
        *(void *)(v126 + 40) = 0xE900000000000045;
        unint64_t v127 = 0xE700000000000000;
        uint64_t v128 = 0x45444143534143;
        switch(v115)
        {
          case 1:
            unint64_t v127 = 0xE800000000000000;
            uint64_t v128 = 0x5443495254534552;
            break;
          case 2:
            unint64_t v127 = 0xE800000000000000;
            uint64_t v128 = 0x4C4C554E20544553;
            break;
          case 3:
            unint64_t v127 = 0xEB00000000544C55;
            uint64_t v128 = 0x4146454420544553;
            break;
          default:
            break;
        }
        if (v125 >= *(void *)(v94 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v94 = v150;
        }
        *(void *)(v94 + 16) = v124 + 2;
        uint64_t v129 = v94 + 16 * v125;
        *(void *)(v129 + 32) = v128;
        *(void *)(v129 + 40) = v127;
        int v123 = v251;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v123)
      {
        unint64_t v130 = *(void *)(v94 + 16);
        if (v130 >= *(void *)(v94 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v94 = v151;
        }
        *(void *)(v94 + 16) = v130 + 1;
        uint64_t v131 = v94 + 16 * v130;
        *(void *)(v131 + 32) = 0xD00000000000001DLL;
        *(void *)(v131 + 40) = 0x800000024F8D4280;
      }
      __dst[0] = v94;
      uint64_t v132 = sub_24F8CED30();
      uint64_t v134 = v133;
      swift_bridgeObjectRelease();
      uint64_t v135 = __src[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F787184();
        uint64_t v135 = v144;
      }
      unint64_t v136 = *(void *)(v135 + 16);
      if (v136 >= *(void *)(v135 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v135 = v145;
      }
      *(void *)(v135 + 16) = v136 + 1;
      uint64_t v137 = v135 + 16 * v136;
      *(void *)(v137 + 32) = v132;
      *(void *)(v137 + 40) = v134;
      __src[0] = v135;
      uint64_t v89 = v252 + 40;
      uint64_t v87 = v253 - 1;
      uint64_t v86 = v249;
      if (v253 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = a1;
        goto LABEL_126;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_126:
  uint64_t v152 = v246;
  uint64_t v153 = v246[10];
  uint64_t v154 = *(void *)(v153 + 16);
  if (v154)
  {
    uint64_t v155 = (const void *)(v153 + 32);
    uint64_t v257 = v246[10];
    swift_bridgeObjectRetain();
    memcpy(__dst, v155, 0xA3uLL);
    uint64_t v156 = v154 - 1;
    uint64_t v157 = 200;
    unint64_t v158 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v260 = 0;
      unint64_t v261 = 0xE000000000000000;
      sub_24F76F900((uint64_t)__dst);
      sub_24F8CEEB0();
      uint64_t v159 = qword_26B1F6F38;
      swift_retain();
      if (v159 != -1) {
        swift_once();
      }
      uint64_t v160 = qword_26B1FAB18;
      swift_retain();
      sub_24F778B08();
      type metadata accessor for SQLGenerationContext();
      swift_allocObject();
      sub_24F779224(a1, v160, v158);
      memcpy(v262, __dst, 0xA3uLL);
      sub_24F76D734();
      swift_release();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v161 = v260;
      unint64_t v162 = v261;
      sub_24F787184();
      uint64_t v164 = v163;
      unint64_t v165 = *(void *)(v163 + 16);
      if (v165 >= *(void *)(v163 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v164 = v173;
      }
      *(void *)(v164 + 16) = v165 + 1;
      uint64_t v166 = v164 + 16 * v165;
      *(void *)(v166 + 32) = v161;
      *(void *)(v166 + 40) = v162;
      v262[0] = v164;
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      uint64_t v167 = sub_24F8CED30();
      uint64_t v169 = v168;
      swift_bridgeObjectRelease();
      uint64_t v170 = __src[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F787184();
        uint64_t v170 = v174;
      }
      unint64_t v171 = *(void *)(v170 + 16);
      if (v171 >= *(void *)(v170 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v170 = v175;
      }
      *(void *)(v170 + 16) = v171 + 1;
      uint64_t v172 = v170 + 16 * v171;
      *(void *)(v172 + 32) = v167;
      *(void *)(v172 + 40) = v169;
      sub_24F76F900((uint64_t)__dst);
      __src[0] = v170;
      if (!v156) {
        break;
      }
      memcpy(__dst, (const void *)(v257 + v157), 0xA3uLL);
      v157 += 168;
      --v156;
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = a1;
    uint64_t v152 = v246;
  }
  uint64_t v176 = v152[11];
  uint64_t v258 = *(void *)(v176 + 16);
  if (v258)
  {
    swift_bridgeObjectRetain();
    uint64_t v177 = 0;
    do
    {
      uint64_t v178 = *(void *)(v176 + 8 * v177 + 32);
      uint64_t v179 = qword_26B1F6F38;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v179 != -1) {
        swift_once();
      }
      uint64_t v180 = qword_26B1FAB18;
      swift_retain();
      unint64_t v181 = MEMORY[0x263F8EE78];
      sub_24F778B08();
      type metadata accessor for SQLGenerationContext();
      swift_allocObject();
      uint64_t v182 = sub_24F779224(v25, v180, v181);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v183 = sub_24F76BCC0(v178, (uint64_t)v182);
      swift_bridgeObjectRelease();
      __dst[0] = v183;
      sub_24F781274(&qword_26B1F7F48);
      sub_24F7871AC();
      uint64_t v184 = sub_24F8CED30();
      uint64_t v186 = v185;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v187 = __src[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F787184();
        uint64_t v187 = v190;
      }
      unint64_t v188 = *(void *)(v187 + 16);
      if (v188 >= *(void *)(v187 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v187 = v191;
      }
      ++v177;
      *(void *)(v187 + 16) = v188 + 1;
      uint64_t v189 = v187 + 16 * v188;
      *(void *)(v189 + 32) = v184;
      *(void *)(v189 + 40) = v186;
      swift_release();
      __src[0] = v187;
      uint64_t v25 = a1;
    }
    while (v258 != v177);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v187 = __src[0];
  }
  __dst[0] = 40;
  __dst[1] = 0xE100000000000000;
  v262[0] = v187;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  uint64_t v192 = __dst[0];
  uint64_t v193 = __dst[1];
  uint64_t v194 = v245;
  unint64_t v195 = *(void *)(v245 + 16);
  if (v195 >= *(void *)(v245 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v194 = v234;
  }
  *(void *)(v194 + 16) = v195 + 1;
  uint64_t v196 = v194;
  uint64_t v197 = v194 + 16 * v195;
  *(void *)(v197 + 32) = v192;
  *(void *)(v197 + 40) = v193;
  if ((v244 & 4) != 0)
  {
    sub_24F787184();
    uint64_t v198 = v200;
    unint64_t v201 = *(void *)(v200 + 16);
    if (v201 >= *(void *)(v200 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v198 = v240;
    }
    *(void *)(v198 + 16) = v201 + 1;
    uint64_t v202 = v198 + 16 * v201;
    strcpy((char *)(v202 + 32), "WITHOUT ROWID");
    *(_WORD *)(v202 + 46) = -4864;
    goto LABEL_158;
  }
  uint64_t v198 = MEMORY[0x263F8EE78];
  if (*(void *)(MEMORY[0x263F8EE78] + 16))
  {
LABEL_158:
    __dst[0] = v198;
    uint64_t v203 = sub_24F8CED30();
    uint64_t v205 = v204;
    swift_bridgeObjectRelease();
    uint64_t v199 = v196;
    unint64_t v206 = *(void *)(v196 + 16);
    if (v206 >= *(void *)(v196 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v199 = v237;
    }
    *(void *)(v199 + 16) = v206 + 1;
    uint64_t v207 = v199 + 16 * v206;
    *(void *)(v207 + 32) = v203;
    *(void *)(v207 + 40) = v205;
    goto LABEL_161;
  }
  swift_bridgeObjectRelease();
  uint64_t v199 = v196;
LABEL_161:
  __dst[0] = v199;
  uint64_t v208 = sub_24F8CED30();
  uint64_t v210 = v209;
  swift_bridgeObjectRelease();
  uint64_t v211 = v264;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v212 = v211;
  }
  else
  {
    sub_24F787184();
    uint64_t v212 = v235;
  }
  unint64_t v213 = *(void *)(v212 + 16);
  uint64_t v214 = v246;
  if (v213 >= *(void *)(v212 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v214 = v246;
    uint64_t v212 = v236;
  }
  *(void *)(v212 + 16) = v213 + 1;
  uint64_t v215 = v212 + 16 * v213;
  *(void *)(v215 + 32) = v208;
  *(void *)(v215 + 40) = v210;
  uint64_t v264 = v212;
  uint64_t v216 = v214[5];
  uint64_t v217 = *(void *)(v216 + 16);
  if (v217)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v218 = v217 - 1;
    uint64_t v219 = MEMORY[0x263F8EE78];
    for (uint64_t i = 32; ; i += 16)
    {
      if (*(unsigned char *)(v216 + i + 8))
      {
        sub_24F878B08(v262);
        sub_24F77A91C((uint64_t)v262, (uint64_t)__dst, &qword_26B1F6DC8);
      }
      else
      {
        uint64_t v221 = *(void *)(v216 + i);
        v262[0] = v244 & 1;
        swift_retain();
        sub_24F876750(v248, v247, v262, (uint64_t)__dst);
        sub_24F878298(v221, 0);
      }
      sub_24F77A91C((uint64_t)__dst, (uint64_t)&v260, &qword_26B1F6DC8);
      sub_24F77A91C((uint64_t)&v260, (uint64_t)v262, &qword_26B1F6DC8);
      if (sub_24F77A988((uint64_t)v262) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24F7881B4();
          uint64_t v219 = v223;
        }
        unint64_t v222 = *(void *)(v219 + 16);
        if (v222 >= *(void *)(v219 + 24) >> 1)
        {
          sub_24F7881B4();
          uint64_t v219 = v224;
        }
        sub_24F77A91C((uint64_t)&v260, (uint64_t)__src, &qword_26B1F6DC8);
        *(void *)(v219 + 16) = v222 + 1;
        memcpy((void *)(v219 + 216 * v222 + 32), __src, 0xD3uLL);
      }
      if (!v218) {
        break;
      }
      --v218;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v219 = MEMORY[0x263F8EE78];
  }
  swift_retain();
  sub_24F870EA8(v219, a1);
  swift_bridgeObjectRelease();
  sub_24F792AE8();
  __dst[0] = v264;
  uint64_t v2 = sub_24F8CED30();
  swift_bridgeObjectRelease();
  return v2;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.rename(table:to:)(Swift::String table, Swift::String to)
{
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "ALTER TABLE ");
  BYTE5(v9[1]) = 0;
  HIWORD(v9[1]) = -5120;
  sub_24F8CEEB0();
  sub_24F777480();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F777480();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F775D94(v9[0], v2, v3, v4, v5, v6, v7, v8, 34, 0xE100000000000000, v9[0], v9[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t Database.alter(table:body:)(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  type metadata accessor for TableAlteration();
  int v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8EE78];
  v8[3] = a2;
  v8[4] = v9;
  void v8[2] = a1;
  swift_bridgeObjectRetain();
  a3(v8);
  uint64_t v10 = sub_24F873110(v3);
  if (v4) {
    return swift_release();
  }
  sub_24F76B9E4(v10, v11, MEMORY[0x263F8EE80], v13, v14);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F873110(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(v1 + 32) + 16);
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x263F8EE78];
    int v6 = (unsigned __int8 *)(v4 + 64);
    uint64_t v152 = v1;
    while (1)
    {
      uint64_t v8 = *((void *)v6 - 4);
      uint64_t v7 = *((void *)v6 - 3);
      uint64_t v9 = *((void *)v6 - 2);
      uint64_t v10 = *((void *)v6 - 1);
      int v11 = *v6;
      v6 += 40;
      uint64_t v157 = v9;
      uint64_t v158 = v10;
      uint64_t v159 = v7;
      uint64_t v160 = v8;
      switch(v11)
      {
        case 1:
          sub_24F877CC0(v8, v7, v9, v10, 1);
          swift_bridgeObjectRetain();
          sub_24F787184();
          uint64_t v40 = v39;
          unint64_t v41 = *(void *)(v39 + 16);
          if (v41 >= *(void *)(v39 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v40 = v125;
          }
          *(void *)(v40 + 16) = v41 + 1;
          uint64_t v42 = v40 + 16 * v41;
          *(void *)(v42 + 32) = 0x4154205245544C41;
          *(void *)(v42 + 40) = 0xEB00000000454C42;
          __src[0] = 34;
          __src[1] = 0xE100000000000000;
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          uint64_t v43 = __src[0];
          uint64_t v44 = __src[1];
          unint64_t v45 = *(void *)(v40 + 16);
          unint64_t v46 = *(void *)(v40 + 24) >> 1;
          unint64_t v47 = v45 + 1;
          if (v46 <= v45)
          {
            sub_24F787184();
            uint64_t v40 = v126;
            unint64_t v46 = *(void *)(v126 + 24) >> 1;
          }
          *(void *)(v40 + 16) = v47;
          uint64_t v48 = v40 + 16 * v45;
          *(void *)(v48 + 32) = v43;
          *(void *)(v48 + 40) = v44;
          if ((uint64_t)v46 < (uint64_t)(v45 + 2))
          {
            sub_24F787184();
            uint64_t v40 = v127;
          }
          uint64_t v151 = v5;
          *(void *)(v40 + 16) = v45 + 2;
          uint64_t v49 = v40 + 16 * v47;
          *(void *)(v49 + 32) = 0x554C4F4320444441;
          *(void *)(v49 + 40) = 0xEA00000000004E4DLL;
          uint64_t v50 = qword_26B1F6F38;
          swift_retain();
          if (v50 != -1) {
            swift_once();
          }
          uint64_t v51 = qword_26B1FAB18;
          swift_retain();
          unint64_t v52 = MEMORY[0x263F8EE78];
          sub_24F778B08();
          type metadata accessor for SQLGenerationContext();
          swift_allocObject();
          uint64_t v53 = sub_24F779224(a1, v51, v52);
          uint64_t v13 = v160;
          sub_24F877CC0(v160, v159, v157, v158, 1);
          swift_retain();
          uint64_t v54 = sub_24F76BCC0(v160, (uint64_t)v53);
          if (!v156)
          {
            uint64_t v55 = v54;
            uint64_t v155 = v2;
            uint64_t v156 = 0;
            sub_24F877D88(v160, v159, v157, v158, 1);
            __src[0] = v55;
            sub_24F781274(&qword_26B1F7F48);
            sub_24F7871AC();
            uint64_t v56 = sub_24F8CED30();
            uint64_t v150 = v57;
            swift_bridgeObjectRelease();
            sub_24F877D88(v160, v159, v157, v158, 1);
            unint64_t v58 = *(void *)(v40 + 16);
            if (v58 >= *(void *)(v40 + 24) >> 1)
            {
              sub_24F787184();
              uint64_t v40 = v145;
            }
            *(void *)(v40 + 16) = v58 + 1;
            uint64_t v59 = v40 + 16 * v58;
            *(void *)(v59 + 32) = v56;
            *(void *)(v59 + 40) = v150;
            __src[0] = v40;
            uint64_t v60 = sub_24F8CED30();
            uint64_t v62 = v61;
            swift_bridgeObjectRelease();
            uint64_t v5 = v151;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_24F787184();
              uint64_t v5 = v146;
            }
            uint64_t v3 = v152;
            uint64_t v2 = v155;
            unint64_t v63 = *(void *)(v5 + 16);
            if (v63 >= *(void *)(v5 + 24) >> 1)
            {
              sub_24F787184();
              uint64_t v5 = v147;
            }
            *(void *)(v5 + 16) = v63 + 1;
            uint64_t v64 = v5 + 16 * v63;
            *(void *)(v64 + 32) = v60;
            *(void *)(v64 + 40) = v62;
            swift_release();
            uint64_t v66 = v159;
            uint64_t v65 = v160;
            uint64_t v67 = v157;
            uint64_t v68 = v158;
            char v69 = 1;
            goto LABEL_68;
          }
          sub_24F877D88(v160, v159, v157, v158, 1);
          swift_release();
          sub_24F877D88(v160, v159, v157, v158, 1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F877D88(v160, v159, v157, v158, 1);
          return v13;
        case 2:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24F787184();
          uint64_t v71 = v70;
          unint64_t v72 = *(void *)(v70 + 16);
          if (v72 >= *(void *)(v70 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v71 = v128;
          }
          *(void *)(v71 + 16) = v72 + 1;
          uint64_t v73 = v71 + 16 * v72;
          *(void *)(v73 + 32) = 0x4154205245544C41;
          *(void *)(v73 + 40) = 0xEB00000000454C42;
          __src[0] = 34;
          __src[1] = 0xE100000000000000;
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          uint64_t v74 = __src[0];
          uint64_t v75 = __src[1];
          unint64_t v76 = *(void *)(v71 + 16);
          unint64_t v77 = *(void *)(v71 + 24) >> 1;
          unint64_t v78 = v76 + 1;
          if (v77 <= v76)
          {
            sub_24F787184();
            uint64_t v71 = v129;
            unint64_t v77 = *(void *)(v129 + 24) >> 1;
          }
          *(void *)(v71 + 16) = v78;
          uint64_t v79 = v71 + 16 * v76;
          *(void *)(v79 + 32) = v74;
          *(void *)(v79 + 40) = v75;
          if ((uint64_t)v77 < (uint64_t)(v76 + 2))
          {
            sub_24F787184();
            uint64_t v71 = v130;
          }
          *(void *)(v71 + 16) = v76 + 2;
          uint64_t v80 = v71 + 16 * v78;
          strcpy((char *)(v80 + 32), "RENAME COLUMN");
          *(_WORD *)(v80 + 46) = -4864;
          __src[0] = 34;
          __src[1] = 0xE100000000000000;
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          uint64_t v81 = __src[0];
          uint64_t v82 = __src[1];
          unint64_t v83 = *(void *)(v71 + 16);
          unint64_t v84 = *(void *)(v71 + 24) >> 1;
          unint64_t v85 = v83 + 1;
          if (v84 <= v83)
          {
            sub_24F787184();
            uint64_t v71 = v131;
            unint64_t v84 = *(void *)(v131 + 24) >> 1;
          }
          *(void *)(v71 + 16) = v85;
          uint64_t v86 = v71 + 16 * v83;
          *(void *)(v86 + 32) = v81;
          *(void *)(v86 + 40) = v82;
          if ((uint64_t)v84 < (uint64_t)(v83 + 2))
          {
            sub_24F787184();
            uint64_t v71 = v132;
          }
          *(void *)(v71 + 16) = v83 + 2;
          uint64_t v87 = v71 + 16 * v85;
          *(void *)(v87 + 32) = 20308;
          *(void *)(v87 + 40) = 0xE200000000000000;
          __src[0] = 34;
          __src[1] = 0xE100000000000000;
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          uint64_t v88 = __src[0];
          uint64_t v89 = __src[1];
          unint64_t v90 = *(void *)(v71 + 16);
          if (v90 >= *(void *)(v71 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v71 = v133;
          }
          *(void *)(v71 + 16) = v90 + 1;
          uint64_t v91 = v71 + 16 * v90;
          *(void *)(v91 + 32) = v88;
          *(void *)(v91 + 40) = v89;
          __src[0] = v71;
          sub_24F781274(&qword_26B1F7F48);
          sub_24F7871AC();
          uint64_t v92 = sub_24F8CED30();
          uint64_t v94 = v93;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24F787184();
            uint64_t v5 = v134;
          }
          unint64_t v95 = *(void *)(v5 + 16);
          if (v95 >= *(void *)(v5 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v5 = v135;
          }
          *(void *)(v5 + 16) = v95 + 1;
          uint64_t v96 = v5 + 16 * v95;
          *(void *)(v96 + 32) = v92;
          *(void *)(v96 + 40) = v94;
          uint64_t v65 = v160;
          uint64_t v68 = v10;
          uint64_t v66 = v159;
          uint64_t v67 = v157;
          char v69 = 2;
          goto LABEL_68;
        case 3:
          swift_bridgeObjectRetain();
          sub_24F787184();
          uint64_t v98 = v97;
          unint64_t v99 = *(void *)(v97 + 16);
          if (v99 >= *(void *)(v97 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v98 = v136;
          }
          *(void *)(v98 + 16) = v99 + 1;
          uint64_t v100 = v98 + 16 * v99;
          *(void *)(v100 + 32) = 0x4154205245544C41;
          *(void *)(v100 + 40) = 0xEB00000000454C42;
          __src[0] = 34;
          __src[1] = 0xE100000000000000;
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          uint64_t v101 = __src[0];
          uint64_t v102 = __src[1];
          unint64_t v103 = *(void *)(v98 + 16);
          unint64_t v104 = *(void *)(v98 + 24) >> 1;
          unint64_t v105 = v103 + 1;
          if (v104 <= v103)
          {
            sub_24F787184();
            uint64_t v98 = v137;
            unint64_t v104 = *(void *)(v137 + 24) >> 1;
          }
          *(void *)(v98 + 16) = v105;
          uint64_t v106 = v98 + 16 * v103;
          *(void *)(v106 + 32) = v101;
          *(void *)(v106 + 40) = v102;
          if ((uint64_t)v104 < (uint64_t)(v103 + 2))
          {
            sub_24F787184();
            uint64_t v98 = v138;
          }
          *(void *)(v98 + 16) = v103 + 2;
          uint64_t v107 = v98 + 16 * v105;
          *(void *)(v107 + 32) = 0x4C4F4320504F5244;
          *(void *)(v107 + 40) = 0xEB000000004E4D55;
          __src[0] = 34;
          __src[1] = 0xE100000000000000;
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          uint64_t v108 = __src[0];
          uint64_t v109 = __src[1];
          unint64_t v110 = *(void *)(v98 + 16);
          if (v110 >= *(void *)(v98 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v98 = v139;
          }
          *(void *)(v98 + 16) = v110 + 1;
          uint64_t v111 = v98 + 16 * v110;
          *(void *)(v111 + 32) = v108;
          *(void *)(v111 + 40) = v109;
          __src[0] = v98;
          sub_24F781274(&qword_26B1F7F48);
          sub_24F7871AC();
          uint64_t v112 = sub_24F8CED30();
          uint64_t v114 = v113;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24F787184();
            uint64_t v5 = v140;
          }
          unint64_t v115 = *(void *)(v5 + 16);
          if (v115 >= *(void *)(v5 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v5 = v141;
          }
          *(void *)(v5 + 16) = v115 + 1;
          uint64_t v116 = v5 + 16 * v115;
          *(void *)(v116 + 32) = v112;
          *(void *)(v116 + 40) = v114;
          uint64_t v65 = v160;
          uint64_t v68 = v10;
          uint64_t v66 = v159;
          uint64_t v67 = v157;
          char v69 = 3;
          goto LABEL_68;
        default:
          uint64_t v154 = v2;
          sub_24F877CC0(v8, v7, v9, v10, 0);
          swift_retain();
          sub_24F787184();
          uint64_t v13 = v12;
          unint64_t v14 = *(void *)(v12 + 16);
          uint64_t v15 = v5;
          if (v14 >= *(void *)(v12 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v13 = v122;
          }
          *(void *)(v13 + 16) = v14 + 1;
          uint64_t v16 = v13 + 16 * v14;
          *(void *)(v16 + 32) = 0x4154205245544C41;
          *(void *)(v16 + 40) = 0xEB00000000454C42;
          uint64_t v18 = *(void *)(v3 + 16);
          uint64_t v17 = *(void *)(v3 + 24);
          __src[0] = 34;
          __src[1] = 0xE100000000000000;
          sub_24F8CEEB0();
          sub_24F8CEEB0();
          uint64_t v19 = __src[0];
          uint64_t v20 = __src[1];
          unint64_t v21 = *(void *)(v13 + 16);
          unint64_t v22 = *(void *)(v13 + 24) >> 1;
          unint64_t v23 = v21 + 1;
          if (v22 <= v21)
          {
            sub_24F787184();
            uint64_t v13 = v123;
            unint64_t v22 = *(void *)(v123 + 24) >> 1;
          }
          *(void *)(v13 + 16) = v23;
          uint64_t v24 = v13 + 16 * v21;
          *(void *)(v24 + 32) = v19;
          *(void *)(v24 + 40) = v20;
          unint64_t v25 = v21 + 2;
          if ((uint64_t)v22 < (uint64_t)(v21 + 2))
          {
            sub_24F787184();
            uint64_t v13 = v124;
          }
          uint64_t v26 = v15;
          *(void *)(v13 + 16) = v25;
          uint64_t v27 = v13 + 16 * v23;
          *(void *)(v27 + 32) = 0x554C4F4320444441;
          *(void *)(v27 + 40) = 0xEA00000000004E4DLL;
          uint64_t v28 = sub_24F874BA8(a1, v18, v17, 0);
          if (v156)
          {
            sub_24F877D88(v160, v159, v157, v10, 0);
            sub_24F877D88(v160, v159, v157, v10, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v13;
          }
          uint64_t v30 = v28;
          uint64_t v31 = v29;
          uint64_t v156 = 0;
          unint64_t v32 = *(void *)(v13 + 16);
          if (v32 >= *(void *)(v13 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v13 = v142;
          }
          *(void *)(v13 + 16) = v32 + 1;
          uint64_t v33 = v13 + 16 * v32;
          *(void *)(v33 + 32) = v30;
          *(void *)(v33 + 40) = v31;
          __src[0] = v13;
          sub_24F781274(&qword_26B1F7F48);
          sub_24F7871AC();
          uint64_t v34 = sub_24F8CED30();
          uint64_t v36 = v35;
          swift_bridgeObjectRelease();
          uint64_t v5 = v26;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24F787184();
            uint64_t v5 = v143;
          }
          uint64_t v3 = v152;
          unint64_t v37 = *(void *)(v5 + 16);
          if (v37 >= *(void *)(v5 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v5 = v144;
          }
          *(void *)(v5 + 16) = v37 + 1;
          uint64_t v38 = v5 + 16 * v37;
          *(void *)(v38 + 32) = v34;
          *(void *)(v38 + 40) = v36;
          uint64_t v164 = 0;
          sub_24F876750(v18, v17, &v164, (uint64_t)__dst);
          sub_24F77A91C((uint64_t)__dst, (uint64_t)v162, &qword_26B1F6DC8);
          sub_24F77A91C((uint64_t)v162, (uint64_t)__src, &qword_26B1F6DC8);
          if (sub_24F77A988((uint64_t)__src) == 1)
          {
            sub_24F877D88(v160, v159, v157, v10, 0);
            sub_24F877D88(v160, v159, v157, v10, 0);
            uint64_t v2 = v154;
          }
          else
          {
            memcpy(__dst, __src, 0xD3uLL);
            uint64_t v2 = v154;
            uint64_t v117 = sub_24F874314(a1);
            uint64_t v119 = v118;
            uint64_t v156 = 0;
            unint64_t v120 = *(void *)(v5 + 16);
            if (v120 >= *(void *)(v5 + 24) >> 1)
            {
              sub_24F787184();
              uint64_t v5 = v148;
            }
            *(void *)(v5 + 16) = v120 + 1;
            uint64_t v121 = v5 + 16 * v120;
            *(void *)(v121 + 32) = v117;
            *(void *)(v121 + 40) = v119;
            sub_24F878938((uint64_t)v162);
            sub_24F877D88(v160, v159, v157, v10, 0);
            uint64_t v65 = v160;
            uint64_t v66 = v159;
            uint64_t v67 = v157;
            uint64_t v68 = v10;
            char v69 = 0;
LABEL_68:
            sub_24F877D88(v65, v66, v67, v68, v69);
          }
          if (!--v2)
          {
            swift_bridgeObjectRelease();
            goto LABEL_72;
          }
          break;
      }
    }
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_72:
  __src[0] = v5;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  uint64_t v13 = sub_24F8CED30();
  swift_bridgeObjectRelease();
  return v13;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.drop(table:)(Swift::String table)
{
}

uint64_t Database.create(index:on:columns:unique:ifNotExists:condition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8)
{
  uint64_t v8 = a7 & 1;
  if (a6) {
    uint64_t v8 = a7 & 1 | 2;
  }
  uint64_t v10 = v8;
  return Database.create(index:on:columns:options:condition:)(a1, a2, a3, a4, a5, &v10, a8);
}

uint64_t Database.create(index:on:columns:options:condition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  void (*v17)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void *v23;
  void __dst[27];
  void __src[27];
  void v26[3];
  uint64_t v27;
  uint64_t v28;
  unsigned char v29[176];
  uint64_t v30;

  uint64_t v8 = v7;
  uint64_t v14 = *a6;
  sub_24F81C6B8(a7, (uint64_t)v26);
  uint64_t v15 = v27;
  if (v27)
  {
    uint64_t v16 = v28;
    sub_24F7811D0(v26, v27);
    uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 8);
    uint64_t v18 = v16;
    uint64_t v8 = v7;
    v17(__src, v15, v18);
    nullsub_1(__src);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v26);
  }
  else
  {
    sub_24F867C28((uint64_t)v26);
    sub_24F7A46F0((uint64_t)__src);
  }
  sub_24F77A91C((uint64_t)__src, (uint64_t)v29, qword_26B1F7458);
  __src[0] = a1;
  __src[1] = a2;
  __src[2] = a3;
  __src[3] = a4;
  __src[4] = a5;
  __src[5] = v14;
  sub_24F77A91C((uint64_t)v29, (uint64_t)&__src[6], qword_26B1F7458);
  memcpy(__dst, __src, 0xD3uLL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_24F874314(v30);
  if (v8) {
    return sub_24F877430((uint64_t)__src);
  }
  __dst[0] = MEMORY[0x263F8EE78];
  __dst[1] = MEMORY[0x263F8EE80];
  unint64_t v23 = __dst;
  Database.execute(sql:arguments:)(*(Swift::String *)&v19, *(GRDBInternal::StatementArguments *)(&v21 - 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F877430((uint64_t)__src);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F874314(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  sub_24F77A91C(v1 + 48, (uint64_t)v48, qword_26B1F7458);
  sub_24F787184();
  uint64_t v6 = v5;
  unint64_t v7 = *(void *)(v5 + 16);
  unint64_t v8 = v7 + 1;
  if (v7 >= *(void *)(v5 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v6 = v35;
  }
  *(void *)(v6 + 16) = v8;
  uint64_t v9 = v6 + 16 * v7;
  *(void *)(v9 + 32) = 0x455441455243;
  *(void *)(v9 + 40) = 0xE600000000000000;
  if ((v4 & 2) != 0)
  {
    unint64_t v10 = v7 + 2;
    if (v8 >= *(void *)(v6 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v6 = v40;
    }
    *(void *)(v6 + 16) = v10;
    uint64_t v11 = v6 + 16 * v8;
    *(void *)(v11 + 32) = 0x455551494E55;
    *(void *)(v11 + 40) = 0xE600000000000000;
    unint64_t v8 = *(void *)(v6 + 16);
  }
  unint64_t v12 = v8 + 1;
  if (v8 >= *(void *)(v6 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v6 = v36;
  }
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = v6 + 16 * v8;
  *(void *)(v13 + 32) = 0x5845444E49;
  *(void *)(v13 + 40) = 0xE500000000000000;
  if (v4)
  {
    unint64_t v14 = v8 + 2;
    if (v12 >= *(void *)(v6 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v6 = v41;
    }
    *(void *)(v6 + 16) = v14;
    uint64_t v15 = v6 + 16 * v12;
    strcpy((char *)(v15 + 32), "IF NOT EXISTS");
    *(_WORD *)(v15 + 46) = -4864;
  }
  __src[0] = 34;
  __src[1] = 0xE100000000000000;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  unint64_t v16 = *(void *)(v6 + 16);
  unint64_t v17 = *(void *)(v6 + 24) >> 1;
  unint64_t v18 = v16 + 1;
  if (v17 <= v16)
  {
    sub_24F787184();
    uint64_t v6 = v37;
    unint64_t v17 = *(void *)(v37 + 24) >> 1;
  }
  *(void *)(v6 + 16) = v18;
  uint64_t v19 = v6 + 16 * v16;
  *(void *)(v19 + 32) = 34;
  *(void *)(v19 + 40) = 0xE100000000000000;
  if ((uint64_t)v17 < (uint64_t)(v16 + 2))
  {
    sub_24F787184();
    uint64_t v6 = v38;
  }
  *(void *)(v6 + 16) = v16 + 2;
  uint64_t v20 = v6 + 16 * v18;
  *(void *)(v20 + 32) = 20047;
  *(void *)(v20 + 40) = 0xE200000000000000;
  __src[0] = 34;
  __src[1] = 0xE100000000000000;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_24F7922AC(v21);
  uint64_t v23 = v2;
  swift_bridgeObjectRelease();
  v46[0] = v22;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  unint64_t v24 = *(void *)(v6 + 16);
  if (v24 >= *(void *)(v6 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v6 = v39;
  }
  *(void *)(v6 + 16) = v24 + 1;
  uint64_t v25 = v6 + 16 * v24;
  *(void *)(v25 + 32) = 34;
  *(void *)(v25 + 40) = 0xE100000000000000;
  sub_24F77A91C((uint64_t)v48, (uint64_t)__src, qword_26B1F7458);
  if (sub_24F7996B8((uint64_t)__src) == 1) {
    goto LABEL_27;
  }
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_24F77A91C((uint64_t)v48, (uint64_t)v46, qword_26B1F7458);
  sub_24F76F900((uint64_t)v46);
  sub_24F8CEEB0();
  uint64_t v26 = qword_26B1F6F38;
  swift_retain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_26B1FAB18;
  swift_retain();
  unint64_t v28 = MEMORY[0x263F8EE78];
  sub_24F778B08();
  type metadata accessor for SQLGenerationContext();
  swift_allocObject();
  sub_24F779224(a1, v27, v28);
  memcpy(__dst, __src, sizeof(__dst));
  sub_24F76D734();
  if (!v23)
  {
    swift_release();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    uint64_t v30 = v44;
    unint64_t v31 = v45;
    unint64_t v32 = *(void *)(v6 + 16);
    if (v32 >= *(void *)(v6 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v6 = v42;
    }
    *(void *)(v6 + 16) = v32 + 1;
    uint64_t v33 = v6 + 16 * v32;
    *(void *)(v33 + 32) = v30;
    *(void *)(v33 + 40) = v31;
    sub_24F878BF0((uint64_t)v48);
LABEL_27:
    v46[0] = v6;
    uint64_t v29 = sub_24F8CED30();
    swift_bridgeObjectRelease();
    return v29;
  }
  swift_release();
  uint64_t v29 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F878BF0((uint64_t)v48);
  return v29;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.drop(index:)(Swift::String index)
{
}

uint64_t sub_24F874920(int a1, int a2, uint64_t a3, uint64_t a4)
{
  sub_24F8CEEB0();
  sub_24F777480();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F775D94(a3, v4, v5, v6, v7, v8, v9, v10, 34, 0xE100000000000000, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.reindex(collation:)(GRDBInternal::Database::CollationName collation)
{
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 0x205845444E494552;
  v3[0] = MEMORY[0x263F8EE78];
  v3[1] = MEMORY[0x263F8EE80];
  v2.values._rawValue = v3;
  v1._object = (void *)0xE800000000000000;
  Database.execute(sql:arguments:)(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t Database.reindex(collation:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  v4[0] = *(void *)(a1 + 16);
  v4[1] = v1;
  swift_bridgeObjectRetain();
  v2.rawValue._uint64_t countAndFlagsBits = (uint64_t)v4;
  Database.reindex(collation:)(v2);
  return swift_bridgeObjectRelease();
}

uint64_t TableOptions.rawValue.getter()
{
  return *(void *)v0;
}

void static TableOptions.withoutRowID.getter(void *a1@<X8>)
{
}

uint64_t sub_24F874AEC(void *a1)
{
  return sub_24F8AA268(*a1, *v1);
}

uint64_t sub_24F874AF8(void *a1)
{
  return sub_24F8AA27C(*a1, *v1);
}

uint64_t sub_24F874B04@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F859568(*a1, *v2, a2);
}

uint64_t sub_24F874B10(void *a1)
{
  return sub_24F8AA284(*a1, *v1);
}

BOOL sub_24F874B1C(void *a1, uint64_t *a2)
{
  return sub_24F859548(a1, *a2);
}

uint64_t sub_24F874B24(void *a1)
{
  return sub_24F8A2C7C(*a1);
}

uint64_t sub_24F874B2C(void *a1)
{
  return sub_24F8A2CC4(*a1);
}

uint64_t sub_24F874B34(void *a1)
{
  return sub_24F859558(*a1);
}

uint64_t sub_24F874B3C(void *a1)
{
  return sub_24F859550(*a1);
}

uint64_t sub_24F874B44(void *a1)
{
  return sub_24F8AA25C(*a1);
}

uint64_t sub_24F874B4C(void *a1)
{
  return sub_24F8AA29C(*a1, *v1);
}

uint64_t sub_24F874B58(void *a1)
{
  return sub_24F8AA26C(*a1, *v1);
}

uint64_t sub_24F874B64(void *a1)
{
  return sub_24F8AA274(*a1, *v1);
}

BOOL sub_24F874B70()
{
  return sub_24F8A2D70(*v0);
}

uint64_t sub_24F874B78(void *a1)
{
  return sub_24F8AA234(*a1);
}

uint64_t type metadata accessor for TableDefinition()
{
  return self;
}

uint64_t sub_24F874BA8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v5 = v4;
  *(void *)__dst = 34;
  *(void *)&__dst[8] = 0xE100000000000000;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F787184();
  uint64_t v7 = v6;
  unint64_t v8 = *(void *)(v6 + 16);
  unint64_t v9 = v8 + 1;
  if (v8 >= *(void *)(v6 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v7 = v142;
  }
  *(void *)(v7 + 16) = v9;
  uint64_t v10 = v7 + 16 * v8;
  *(void *)(v10 + 32) = 34;
  *(void *)(v10 + 40) = 0xE100000000000000;
  uint64_t v11 = *(void *)(v5 + 40);
  if (v11)
  {
    uint64_t v12 = *(void *)(v5 + 32);
    unint64_t v13 = *(void *)(v7 + 24);
    unint64_t v14 = v8 + 2;
    swift_bridgeObjectRetain();
    if (v9 >= v13 >> 1)
    {
      sub_24F787184();
      uint64_t v7 = v143;
    }
    *(void *)(v7 + 16) = v14;
    uint64_t v15 = v7 + 16 * v9;
    *(void *)(v15 + 32) = v12;
    *(void *)(v15 + 40) = v11;
  }
  __int16 v16 = *(_WORD *)(v5 + 48);
  if ((v16 & 0xFF00) != 0x200)
  {
    unint64_t v17 = *(void *)(v7 + 16);
    unint64_t v18 = v17 + 1;
    if (v17 >= *(void *)(v7 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v7 = v144;
    }
    *(void *)(v7 + 16) = v18;
    uint64_t v19 = v7 + 16 * v17;
    *(void *)(v19 + 32) = 0x205952414D495250;
    *(void *)(v19 + 40) = 0xEB0000000059454BLL;
    unint64_t v20 = v17 + 2;
    if (v18 >= *(void *)(v7 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v7 = v150;
    }
    *(void *)(v7 + 16) = v20;
    uint64_t v21 = v7 + 16 * v18;
    *(void *)(v21 + 32) = 0x4C464E4F43204E4FLL;
    *(void *)(v21 + 40) = 0xEB00000000544349;
    unint64_t v22 = 0xE800000000000000;
    uint64_t v23 = 0x4B4341424C4C4F52;
    switch((char)v16)
    {
      case 0:
        goto LABEL_17;
      case 1:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v23 = 0x54524F4241;
        goto LABEL_17;
      case 2:
        unint64_t v22 = 0xE400000000000000;
        uint64_t v23 = 1279869254;
        goto LABEL_17;
      case 3:
        unint64_t v22 = 0xE600000000000000;
        uint64_t v23 = 0x45524F4E4749;
        goto LABEL_17;
      case 4:
        unint64_t v22 = 0xE700000000000000;
        uint64_t v23 = 0x4543414C504552;
LABEL_17:
        unint64_t v24 = *(void *)(v7 + 16);
        unint64_t v18 = v24 + 1;
        if (v24 >= *(void *)(v7 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v7 = v151;
        }
        *(void *)(v7 + 16) = v18;
        uint64_t v25 = v7 + 16 * v24;
        *(void *)(v25 + 32) = v23;
        *(void *)(v25 + 40) = v22;
        break;
      default:
        break;
    }
    if ((v16 & 0x100) != 0)
    {
      if (v18 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v7 = v152;
      }
      *(void *)(v7 + 16) = v18 + 1;
      uint64_t v26 = v7 + 16 * v18;
      strcpy((char *)(v26 + 32), "AUTOINCREMENT");
      *(_WORD *)(v26 + 46) = -4864;
    }
  }
  int v27 = *(unsigned __int8 *)(v5 + 51);
  if (v27 != 1)
  {
    unint64_t v32 = *(void *)(v7 + 16);
    unint64_t v33 = v32 + 1;
    if (v32 >= *(void *)(v7 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v7 = v146;
    }
    *(void *)(v7 + 16) = v33;
    uint64_t v34 = v7 + 16 * v32;
    *(void *)(v34 + 32) = 0xD000000000000014;
    *(void *)(v34 + 40) = 0x800000024F8D4240;
    unint64_t v31 = 0xE800000000000000;
    uint64_t v35 = 0x4B4341424C4C4F52;
    switch(v27)
    {
      case 0:
        goto LABEL_34;
      case 1:
LABEL_154:
        __break(1u);
        JUMPOUT(0x24F876140);
      case 2:
        unint64_t v31 = 0xE400000000000000;
        uint64_t v35 = 1279869254;
        goto LABEL_34;
      case 3:
        unint64_t v31 = 0xE600000000000000;
        uint64_t v35 = 0x45524F4E4749;
        goto LABEL_34;
      case 4:
        unint64_t v31 = 0xE700000000000000;
        uint64_t v35 = 0x4543414C504552;
LABEL_34:
        if (v33 >= *(void *)(v7 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v7 = v147;
        }
        *(void *)(v7 + 16) = v32 + 2;
        uint64_t v36 = v7 + 16 * v33;
        *(void *)(v36 + 32) = v35;
        uint64_t v30 = v36 + 32;
        goto LABEL_37;
      default:
        goto LABEL_38;
    }
  }
  unint64_t v28 = *(void *)(v7 + 16);
  if (v28 >= *(void *)(v7 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v7 = v145;
  }
  *(void *)(v7 + 16) = v28 + 1;
  uint64_t v29 = v7 + 16 * v28;
  *(void *)(v29 + 32) = 0x4C4C554E20544F4ELL;
  uint64_t v30 = v29 + 32;
  unint64_t v31 = 0xE800000000000000;
LABEL_37:
  *(void *)(v30 + 8) = v31;
LABEL_38:
  uint64_t v37 = *(unsigned __int8 *)(v5 + 50);
  if ((v37 - 5) >= 2)
  {
    unint64_t v38 = *(void *)(v7 + 16);
    unint64_t v39 = *(void *)(v7 + 24) >> 1;
    unint64_t v40 = v38 + 1;
    if (v37 == 1)
    {
      if (v39 <= v38)
      {
        sub_24F787184();
        uint64_t v7 = v153;
      }
      *(void *)(v7 + 16) = v40;
      uint64_t v41 = v7 + 16 * v38;
      *(void *)(v41 + 32) = 0x455551494E55;
      uint64_t v42 = v41 + 32;
      unint64_t v43 = 0xE600000000000000;
    }
    else
    {
      if (v39 <= v38)
      {
        sub_24F787184();
        uint64_t v7 = v154;
      }
      *(void *)(v7 + 16) = v40;
      uint64_t v44 = v7 + 16 * v38;
      *(void *)(v44 + 32) = 0xD000000000000012;
      *(void *)(v44 + 40) = 0x800000024F8D42A0;
      unint64_t v43 = 0xE800000000000000;
      uint64_t v45 = 0x4B4341424C4C4F52;
      switch(v37)
      {
        case 1:
          goto LABEL_154;
        case 2:
          unint64_t v43 = 0xE400000000000000;
          uint64_t v45 = 1279869254;
          goto LABEL_49;
        case 3:
          unint64_t v43 = 0xE600000000000000;
          uint64_t v45 = 0x45524F4E4749;
          goto LABEL_49;
        case 4:
          unint64_t v43 = 0xE700000000000000;
          uint64_t v45 = 0x4543414C504552;
          goto LABEL_49;
        default:
LABEL_49:
          if (v40 >= *(void *)(v7 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v7 = v155;
          }
          *(void *)(v7 + 16) = v38 + 2;
          uint64_t v46 = v7 + 16 * v40;
          *(void *)(v46 + 32) = v45;
          uint64_t v42 = v46 + 32;
          break;
      }
    }
    *(void *)(v42 + 8) = v43;
  }
  uint64_t v47 = *(void *)(v5 + 56);
  uint64_t v48 = *(void *)(v47 + 16);
  uint64_t v159 = v5;
  if (v48)
  {
    swift_bridgeObjectRetain();
    memcpy(__dst, (const void *)(v47 + 32), sizeof(__dst));
    uint64_t v49 = v48 - 1;
    uint64_t v50 = 200;
    unint64_t v51 = MEMORY[0x263F8EE78];
    while (1)
    {
      __src[0] = 0;
      __src[1] = 0xE000000000000000;
      sub_24F76F900((uint64_t)__dst);
      sub_24F8CEEB0();
      uint64_t v52 = qword_26B1F6F38;
      swift_retain();
      if (v52 != -1) {
        swift_once();
      }
      uint64_t v53 = qword_26B1FAB18;
      swift_retain();
      sub_24F778B08();
      type metadata accessor for SQLGenerationContext();
      swift_allocObject();
      sub_24F779224(a1, v53, v51);
      memcpy(v170, __dst, 0xA3uLL);
      sub_24F76D734();
      if (v166)
      {
        swift_release();
        uint64_t v59 = __src[1];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F76F900((uint64_t)__dst);
        return v59;
      }
      swift_release();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v54 = __src[0];
      uint64_t v55 = __src[1];
      unint64_t v56 = *(void *)(v7 + 16);
      if (v56 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v7 = v58;
      }
      *(void *)(v7 + 16) = v56 + 1;
      uint64_t v57 = v7 + 16 * v56;
      *(void *)(v57 + 32) = v54;
      *(void *)(v57 + 40) = v55;
      sub_24F76F900((uint64_t)__dst);
      if (!v49) {
        break;
      }
      memcpy(__dst, (const void *)(v47 + v50), sizeof(__dst));
      v50 += 168;
      --v49;
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v159;
  }
  sub_24F77A91C(v5 + 72, (uint64_t)v173, qword_26B1F7458);
  sub_24F77A91C((uint64_t)v173, (uint64_t)__src, qword_26B1F7458);
  if (sub_24F7996B8((uint64_t)__src) != 1)
  {
    v170[0] = 0;
    v170[1] = 0xE000000000000000;
    sub_24F878BF0((uint64_t)v173);
    sub_24F8CEEB0();
    uint64_t v60 = qword_26B1F6F38;
    swift_retain();
    if (v60 != -1) {
      swift_once();
    }
    uint64_t v61 = qword_26B1FAB18;
    swift_retain();
    unint64_t v62 = MEMORY[0x263F8EE78];
    sub_24F778B08();
    type metadata accessor for SQLGenerationContext();
    swift_allocObject();
    sub_24F779224(a1, v61, v62);
    memcpy(__dst, __src, sizeof(__dst));
    sub_24F76D734();
    if (v166)
    {
      swift_release();
      uint64_t v59 = v170[1];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F878BF0((uint64_t)v173);
      return v59;
    }
    swift_release();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    uint64_t v63 = v170[0];
    uint64_t v64 = v170[1];
    unint64_t v65 = *(void *)(v7 + 16);
    if (v65 >= *(void *)(v7 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v7 = v156;
    }
    *(void *)(v7 + 16) = v65 + 1;
    uint64_t v66 = v7 + 16 * v65;
    *(void *)(v66 + 32) = v63;
    *(void *)(v66 + 40) = v64;
    sub_24F878BF0((uint64_t)v173);
  }
  uint64_t v67 = *(void *)(v5 + 248);
  if (v67)
  {
    uint64_t v68 = *(void *)(v5 + 240);
    unint64_t v69 = *(void *)(v7 + 16);
    unint64_t v70 = *(void *)(v7 + 24) >> 1;
    unint64_t v71 = v69 + 1;
    swift_bridgeObjectRetain();
    if (v70 <= v69)
    {
      sub_24F787184();
      uint64_t v7 = v148;
      unint64_t v70 = *(void *)(v148 + 24) >> 1;
    }
    *(void *)(v7 + 16) = v71;
    uint64_t v72 = v7 + 16 * v69;
    *(void *)(v72 + 32) = 0x4554414C4C4F43;
    *(void *)(v72 + 40) = 0xE700000000000000;
    uint64_t v73 = v69 + 2;
    if ((uint64_t)v70 < v73)
    {
      sub_24F787184();
      uint64_t v7 = v149;
    }
    *(void *)(v7 + 16) = v73;
    uint64_t v74 = v7 + 16 * v71;
    *(void *)(v74 + 32) = v68;
    *(void *)(v74 + 40) = v67;
  }
  uint64_t v75 = *(void *)(v5 + 64);
  uint64_t v76 = *(void *)(v75 + 16);
  if (v76)
  {
    swift_bridgeObjectRetain();
    uint64_t v77 = 0;
    uint64_t v161 = v75;
    while (1)
    {
      uint64_t v78 = *(void *)(v75 + v77 + 32);
      uint64_t v79 = *(void *)(v75 + v77 + 56);
      int v163 = *(unsigned __int8 *)(v75 + v77 + 64);
      int v164 = *(unsigned __int8 *)(v75 + v77 + 65);
      uint64_t v165 = *(void *)(v75 + v77 + 40);
      int v80 = *(unsigned __int8 *)(v75 + v77 + 66);
      unint64_t v82 = *(void *)(v7 + 16);
      unint64_t v81 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v82 >= v81 >> 1)
      {
        sub_24F787184();
        uint64_t v7 = v122;
      }
      *(void *)(v7 + 16) = v82 + 1;
      uint64_t v83 = v7 + 16 * v82;
      *(void *)(v83 + 32) = 0x434E455245464552;
      *(void *)(v83 + 40) = 0xEA00000000005345;
      if (!v79) {
        break;
      }
      *(void *)__dst = 34;
      *(void *)&__dst[8] = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      v170[0] = 34;
      v170[1] = 0xE100000000000000;
      sub_24F8CEEB0();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v85 = *(void *)__dst;
      uint64_t v84 = *(void *)&__dst[8];
      unint64_t v86 = *(void *)(v7 + 16);
      unint64_t v87 = v86 + 1;
      if (v86 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v7 = v123;
      }
      *(void *)(v7 + 16) = v87;
      uint64_t v88 = v7 + 16 * v86;
      *(void *)(v88 + 32) = v85;
      uint64_t v89 = v88 + 32;
LABEL_109:
      int v106 = v163;
      int v105 = v164;
      *(void *)(v89 + 8) = v84;
      unint64_t v107 = v87 + 1;
      if (v87 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F787184();
        int v106 = v163;
        int v105 = v164;
        uint64_t v7 = v124;
      }
      *(void *)(v7 + 16) = v107;
      uint64_t v108 = v7 + 16 * v87;
      *(void *)(v108 + 32) = 0x54454C4544204E4FLL;
      *(void *)(v108 + 40) = 0xE900000000000045;
      unint64_t v109 = 0xE700000000000000;
      uint64_t v110 = 0x45444143534143;
      switch(v106)
      {
        case 0:
          goto LABEL_115;
        case 1:
          unint64_t v109 = 0xE800000000000000;
          uint64_t v110 = 0x5443495254534552;
          goto LABEL_115;
        case 2:
          unint64_t v109 = 0xE800000000000000;
          uint64_t v110 = 0x4C4C554E20544553;
          goto LABEL_115;
        case 3:
          uint64_t v110 = 0x4146454420544553;
          unint64_t v109 = 0xEB00000000544C55;
LABEL_115:
          unint64_t v111 = v87 + 2;
          if (v107 >= *(void *)(v7 + 24) >> 1)
          {
            sub_24F787184();
            int v105 = v164;
            uint64_t v7 = v125;
          }
          *(void *)(v7 + 16) = v111;
          uint64_t v112 = v7 + 16 * v107;
          *(void *)(v112 + 32) = v110;
          *(void *)(v112 + 40) = v109;
          break;
        default:
          break;
      }
      unint64_t v113 = *(void *)(v7 + 16);
      unint64_t v114 = v113 + 1;
      if (v113 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F787184();
        int v105 = v164;
        uint64_t v7 = v126;
      }
      *(void *)(v7 + 16) = v114;
      uint64_t v115 = v7 + 16 * v113;
      *(void *)(v115 + 32) = 0x5441445055204E4FLL;
      *(void *)(v115 + 40) = 0xE900000000000045;
      unint64_t v116 = 0xE700000000000000;
      uint64_t v117 = 0x45444143534143;
      switch(v105)
      {
        case 0:
          goto LABEL_124;
        case 1:
          unint64_t v116 = 0xE800000000000000;
          uint64_t v117 = 0x5443495254534552;
          goto LABEL_124;
        case 2:
          unint64_t v116 = 0xE800000000000000;
          uint64_t v117 = 0x4C4C554E20544553;
          goto LABEL_124;
        case 3:
          uint64_t v117 = 0x4146454420544553;
          unint64_t v116 = 0xEB00000000544C55;
LABEL_124:
          unint64_t v118 = v113 + 2;
          if (v114 >= *(void *)(v7 + 24) >> 1)
          {
            sub_24F787184();
            uint64_t v7 = v127;
          }
          *(void *)(v7 + 16) = v118;
          uint64_t v119 = v7 + 16 * v114;
          *(void *)(v119 + 32) = v117;
          *(void *)(v119 + 40) = v116;
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v80)
      {
        unint64_t v120 = *(void *)(v7 + 16);
        uint64_t v75 = v161;
        if (v120 >= *(void *)(v7 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v7 = v128;
        }
        *(void *)(v7 + 16) = v120 + 1;
        uint64_t v121 = v7 + 16 * v120;
        *(void *)(v121 + 32) = 0xD00000000000001DLL;
        *(void *)(v121 + 40) = 0x800000024F8D4280;
      }
      else
      {
        uint64_t v75 = v161;
      }
      v77 += 40;
      if (!--v76)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v159;
        goto LABEL_134;
      }
    }
    uint64_t v90 = sub_24F8CED00();
    uint64_t v92 = v91;
    if (v90 == sub_24F8CED00() && v92 == v93)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v95 = sub_24F8CFD00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v95 & 1) == 0)
      {
        uint64_t v59 = a1;
        Database.primaryKey(_:)(v78, v165, __dst);
        if (v166) {
          goto LABEL_151;
        }
        uint64_t v96 = *(void *)__dst;
        if (__dst[16])
        {
          uint64_t v97 = &unk_270100968;
          if (__dst[16] == 1) {
            uint64_t v97 = *(_OWORD **)__dst;
          }
        }
        else
        {
          uint64_t v100 = *(void *)&__dst[8];
          sub_24F781274((uint64_t *)&unk_26B1F7C88);
          uint64_t v97 = (_OWORD *)swift_allocObject();
          v97[1] = xmmword_24F8DDBF0;
          *((void *)v97 + 4) = v96;
          *((void *)v97 + 5) = v100;
        }
        sub_24F7B0E0C(6);
        *(void *)__dst = 34;
        *(void *)&__dst[8] = 0xE100000000000000;
        sub_24F8CEEB0();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
LABEL_106:
        uint64_t v101 = sub_24F7922AC((uint64_t)v97);
        swift_bridgeObjectRelease();
        v170[0] = v101;
        sub_24F781274(&qword_26B1F7F48);
        sub_24F7871AC();
        sub_24F8CED30();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        uint64_t v102 = *(void *)__dst;
        uint64_t v84 = *(void *)&__dst[8];
        unint64_t v103 = *(void *)(v7 + 16);
        unint64_t v87 = v103 + 1;
        if (v103 >= *(void *)(v7 + 24) >> 1)
        {
          sub_24F787184();
          uint64_t v7 = v129;
        }
        *(void *)(v7 + 16) = v87;
        uint64_t v104 = v7 + 16 * v103;
        *(void *)(v104 + 32) = v102;
        uint64_t v89 = v104 + 32;
        goto LABEL_109;
      }
    }
    if (a4)
    {
      uint64_t v97 = a4;
    }
    else
    {
      uint64_t v59 = a1;
      Database.primaryKey(_:)(v78, v165, __dst);
      if (v166)
      {
LABEL_151:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_152:
        swift_bridgeObjectRelease();
        return v59;
      }
      uint64_t v98 = *(void *)__dst;
      if (__dst[16])
      {
        uint64_t v97 = &unk_270100998;
        if (__dst[16] == 1) {
          uint64_t v97 = *(_OWORD **)__dst;
        }
      }
      else
      {
        uint64_t v99 = *(void *)&__dst[8];
        sub_24F781274((uint64_t *)&unk_26B1F7C88);
        uint64_t v97 = (_OWORD *)swift_allocObject();
        v97[1] = xmmword_24F8DDBF0;
        *((void *)v97 + 4) = v98;
        *((void *)v97 + 5) = v99;
      }
    }
    *(void *)__dst = 34;
    *(void *)&__dst[8] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    goto LABEL_106;
  }
LABEL_134:
  sub_24F77A91C(v5 + 256, (uint64_t)v170, &qword_26B1F6DB8);
  sub_24F77A91C((uint64_t)v170, (uint64_t)__dst, &qword_26B1F6DB8);
  if (sub_24F7996B8((uint64_t)__dst) != 1)
  {
    sub_24F878B10((uint64_t)v170, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76CB14);
    sub_24F8CF7D0();
    uint64_t v168 = 0;
    unint64_t v169 = 0xE000000000000000;
    sub_24F8CEEB0();
    swift_retain();
    sub_24F878B10((uint64_t)v170, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76CB14);
    if (qword_26B1F6F38 != -1) {
      swift_once();
    }
    uint64_t v130 = qword_26B1FAB18;
    swift_retain();
    unint64_t v131 = MEMORY[0x263F8EE78];
    sub_24F778B08();
    type metadata accessor for SQLGenerationContext();
    swift_allocObject();
    sub_24F779224(a1, v130, v131);
    memcpy(v167, __dst, 0xA3uLL);
    sub_24F76D734();
    if (v166)
    {
      swift_release();
      sub_24F878B10((uint64_t)v170, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76C98C);
      sub_24F878B10((uint64_t)v170, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76C98C);
      uint64_t v59 = v169;
      swift_bridgeObjectRelease();
      goto LABEL_152;
    }
    swift_release();
    sub_24F878B10((uint64_t)v170, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76C98C);
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    uint64_t v132 = v168;
    unint64_t v133 = v169;
    unint64_t v134 = *(void *)(v7 + 16);
    unint64_t v135 = *(void *)(v7 + 24) >> 1;
    unint64_t v136 = v134 + 1;
    if (v135 <= v134)
    {
      sub_24F787184();
      uint64_t v7 = v157;
      unint64_t v135 = *(void *)(v157 + 24) >> 1;
    }
    *(void *)(v7 + 16) = v136;
    uint64_t v137 = v7 + 16 * v134;
    *(void *)(v137 + 32) = v132;
    *(void *)(v137 + 40) = v133;
    if (v172) {
      uint64_t v138 = 0x4445524F5453;
    }
    else {
      uint64_t v138 = 0x4C415554524956;
    }
    if (v172) {
      unint64_t v139 = 0xE600000000000000;
    }
    else {
      unint64_t v139 = 0xE700000000000000;
    }
    if (v135 <= v136)
    {
      sub_24F787184();
      uint64_t v7 = v158;
    }
    *(void *)(v7 + 16) = v134 + 2;
    uint64_t v140 = v7 + 16 * v136;
    *(void *)(v140 + 32) = v138;
    *(void *)(v140 + 40) = v139;
    sub_24F878B10((uint64_t)v170, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76C98C);
  }
  v167[0] = v7;
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7871AC();
  uint64_t v59 = sub_24F8CED30();
  swift_bridgeObjectRelease();
  return v59;
}

uint64_t TableDefinition.autoIncrementedPrimaryKey(_:onConflict:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  __int16 v3 = *a3;
  uint64_t result = TableDefinition.column(_:_:)();
  *(_WORD *)(result + 48) = v3 | 0x100;
  return result;
}

uint64_t TableDefinition.column(_:_:)()
{
  sub_24F77C894();
  uint64_t v1 = swift_allocObject();
  sub_24F782C48(v1, v2, v3, v4, v5, v6, v7, v8, v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24F786CB0();
  sub_24F787040();
  sub_24F781E6C();
  *(void *)(v9 + 32) = v0;
  *(unsigned char *)(v9 + 40) = 0;
  return v0;
}

uint64_t ColumnDefinition.primaryKey(onConflict:autoincrement:)(unsigned __int8 *a1, char a2)
{
  if (a2) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  *(_WORD *)(v2 + 48) = v3 | *a1;
  return sub_24F768C14();
}

Swift::Void __swiftcall TableDefinition.column(sql:)(Swift::String sql)
{
  sub_24F77EAF8();
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v1 = (__n128 *)sub_24F77D79C();
  sub_24F773CF0(v1, (__n128)xmmword_24F8DDBF0);
  void v4[2] = MEMORY[0x263F8EE78];
  v4[3] = MEMORY[0x263F8EE80];
  uint64_t v2 = sub_24F7725D4(v4);
  sub_24F7711DC((uint64_t)v2);
  swift_bridgeObjectRetain();
  sub_24F786CB0();
  sub_24F787040();
  sub_24F781E6C();
  *(void *)(v3 + 32) = v1;
  *(unsigned char *)(v3 + 40) = 1;
}

Swift::Void __swiftcall TableDefinition.column(literal:)(GRDBInternal::SQL literal)
{
  uint64_t v3 = *(void *)literal.elements._rawValue;
  swift_bridgeObjectRetain();
  sub_24F786CB0();
  sub_24F77D8C8(*(void *)(v1 + 40));
  sub_24F787040();
  uint64_t v4 = *(void *)(v1 + 40);
  *(void *)(v4 + 16) = v2 + 1;
  uint64_t v5 = v4 + 16 * v2;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = 1;
}

Swift::Void __swiftcall TableDefinition.primaryKey(_:onConflict:)(Swift::OpaquePointer _, GRDBInternal::Database::ConflictResolution_optional onConflict)
{
  if (*(void *)(v2 + 48))
  {
    sub_24F8CF9D0();
    __break(1u);
  }
  else
  {
    char v3 = *(unsigned char *)onConflict.value;
    *(Swift::OpaquePointer *)(v2 + 48) = _;
    *(unsigned char *)(v2 + 56) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall TableDefinition.uniqueKey(_:onConflict:)(Swift::OpaquePointer _, GRDBInternal::Database::ConflictResolution_optional onConflict)
{
  char v5 = *(unsigned char *)onConflict.value;
  swift_bridgeObjectRetain();
  sub_24F786CEC();
  sub_24F77D8C8(*(void *)(v2 + 64));
  sub_24F78707C();
  uint64_t v6 = *(void *)(v2 + 64);
  *(void *)(v6 + 16) = v3 + 1;
  uint64_t v7 = v6 + 16 * v3;
  *(Swift::OpaquePointer *)(v7 + 32) = _;
  *(unsigned char *)(v7 + 40) = v5;
}

Swift::Void __swiftcall TableDefinition.foreignKey(_:references:columns:onDelete:onUpdate:deferred:)(Swift::OpaquePointer _, Swift::String references, Swift::OpaquePointer_optional columns, GRDBInternal::Database::ForeignKeyAction_optional onDelete, GRDBInternal::Database::ForeignKeyAction_optional onUpdate, Swift::Bool deferred)
{
  sub_24F7831A4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F786D04();
  uint64_t v7 = *(void *)(*(void *)(v6 + 72) + 16);
  sub_24F787094();
  sub_24F77F13C(v7 + 1);
}

void *TableDefinition.check(_:)(void *a1)
{
  sub_24F7811D0(a1, a1[3]);
  uint64_t v1 = sub_24F77B6B8();
  v2(v1);
  sub_24F786B18();
  sub_24F77C12C();
  uint64_t v3 = (void *)sub_24F781620();
  return memcpy(v3, __src, 0xA3uLL);
}

Swift::Void __swiftcall TableDefinition.check(sql:)(Swift::String sql)
{
  sub_24F77EAF8();
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v1 = (__n128 *)sub_24F77D79C();
  sub_24F773CF0(v1, (__n128)xmmword_24F8DDBF0);
  void v4[2] = MEMORY[0x263F8EE78];
  v4[3] = MEMORY[0x263F8EE80];
  uint64_t v2 = sub_24F7725D4(v4);
  sub_24F7711DC((uint64_t)v2);
  v5[0] = v1;
  sub_24F7A45A0((uint64_t)v5);
  sub_24F76F710((uint64_t)v5, (uint64_t)__src);
  swift_bridgeObjectRetain();
  sub_24F786B18();
  sub_24F77C12C();
  uint64_t v3 = (void *)sub_24F781620();
  memcpy(v3, __src, 0xA3uLL);
}

Swift::Void __swiftcall TableDefinition.constraint(sql:)(Swift::String sql)
{
  sub_24F77EAF8();
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v2 = (__n128 *)sub_24F77D79C();
  sub_24F773CF0(v2, (__n128)xmmword_24F8DDBF0);
  v6[2] = MEMORY[0x263F8EE78];
  v6[3] = MEMORY[0x263F8EE80];
  uint64_t v3 = sub_24F7725D4(v6);
  sub_24F7711DC((uint64_t)v3);
  swift_bridgeObjectRetain();
  sub_24F786D40();
  uint64_t v4 = *(void *)(*(void *)(v1 + 88) + 16);
  sub_24F7870D0();
  uint64_t v5 = *(void *)(v1 + 88);
  *(void *)(v5 + 16) = v4 + 1;
  *(void *)(v5 + 8 * v4 + 32) = v2;
}

Swift::Void __swiftcall TableDefinition.constraint(literal:)(GRDBInternal::SQL literal)
{
  uint64_t v3 = *(void *)literal.elements._rawValue;
  swift_bridgeObjectRetain();
  sub_24F786D40();
  sub_24F77D8C8(*(void *)(v1 + 88));
  sub_24F7870D0();
  uint64_t v4 = *(void *)(v1 + 88);
  *(void *)(v4 + 16) = v2 + 1;
  *(void *)(v4 + 8 * v2 + 32) = v3;
}

uint64_t sub_24F876750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(v4 + 50) == 6)
  {
    uint64_t v9 = *a3;
    __dst[0] = a1;
    __dst[1] = a2;
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    uint64_t v11 = *(void *)(v4 + 16);
    uint64_t v10 = *(void *)(v4 + 24);
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    uint64_t v12 = __dst[0];
    uint64_t v13 = __dst[1];
    sub_24F781274((uint64_t *)&unk_26B1F7C88);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_24F8DDBF0;
    *(void *)(v14 + 32) = v11;
    *(void *)(v14 + 40) = v10;
    sub_24F7A46F0((uint64_t)v15);
    __src[0] = v12;
    __src[1] = v13;
    __src[2] = a1;
    __src[3] = a2;
    __src[4] = v14;
    __src[5] = v9;
    sub_24F77A91C((uint64_t)v15, (uint64_t)&__src[6], qword_26B1F7458);
    memcpy(__dst, __src, 0xD3uLL);
    nullsub_1(__dst);
    sub_24F77A91C((uint64_t)__dst, a4, &qword_26B1F6DC8);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_24F878B08(__dst);
    return sub_24F77A91C((uint64_t)__dst, a4, &qword_26B1F6DC8);
  }
}

uint64_t TableDefinition.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TableDefinition.__deallocating_deinit()
{
  TableDefinition.deinit();
  return MEMORY[0x270FA0228](v0, 96, 7);
}

uint64_t TableAlteration.add(column:_:)()
{
  sub_24F77C894();
  uint64_t v1 = swift_allocObject();
  sub_24F782C48(v1, v2, v3, v4, v5, v6, v7, v8, v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24F786D7C();
  sub_24F78710C();
  sub_24F77BE4C();
  *(void *)(v9 + 32) = v0;
  *(void *)(v9 + 40) = 0;
  *(void *)(v9 + 48) = 0;
  *(void *)(v9 + 56) = 0;
  *(unsigned char *)(v9 + 64) = 0;
  return v0;
}

Swift::Void __swiftcall TableAlteration.addColumn(sql:)(Swift::String sql)
{
  sub_24F77EAF8();
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v1 = (__n128 *)sub_24F77D79C();
  sub_24F773CF0(v1, (__n128)xmmword_24F8DDBF0);
  void v4[2] = MEMORY[0x263F8EE78];
  v4[3] = MEMORY[0x263F8EE80];
  uint64_t v2 = sub_24F7725D4(v4);
  sub_24F7711DC((uint64_t)v2);
  swift_bridgeObjectRetain();
  sub_24F786D7C();
  sub_24F78710C();
  sub_24F77BE4C();
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(unsigned char *)(v3 + 64) = 1;
}

Swift::Void __swiftcall TableAlteration.addColumn(literal:)(GRDBInternal::SQL literal)
{
  uint64_t v3 = *(void *)literal.elements._rawValue;
  swift_bridgeObjectRetain();
  sub_24F786D7C();
  sub_24F77D8C8(*(void *)(v1 + 32));
  sub_24F78710C();
  uint64_t v4 = *(void *)(v1 + 32);
  *(void *)(v4 + 16) = v2 + 1;
  uint64_t v5 = v4 + 40 * v2;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = 0;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = 0;
  *(unsigned char *)(v5 + 64) = 1;
}

void sub_24F876AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F786D7C();
  uint64_t v9 = *(void *)(*(void *)(v4 + 32) + 16);
  sub_24F78710C();
  uint64_t v10 = *(void *)(v4 + 32);
  *(void *)(v10 + 16) = v9 + 1;
  uint64_t v11 = v10 + 40 * v9;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  *(void *)(v11 + 48) = a3;
  *(void *)(v11 + 56) = a4;
  *(unsigned char *)(v11 + 64) = 2;
}

void sub_24F876B80(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_24F786D7C();
  uint64_t v5 = *(void *)(*(void *)(v2 + 32) + 16);
  sub_24F78710C();
  uint64_t v6 = *(void *)(v2 + 32);
  *(void *)(v6 + 16) = v5 + 1;
  uint64_t v7 = v6 + 40 * v5;
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  *(unsigned char *)(v7 + 64) = 3;
}

uint64_t TableAlteration.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TableAlteration.__deallocating_deinit()
{
  TableAlteration.deinit();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

BOOL static ColumnDefinition.GeneratedColumnQualification.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ColumnDefinition.GeneratedColumnQualification.hash(into:)()
{
  return sub_24F8CFF40();
}

uint64_t ColumnDefinition.GeneratedColumnQualification.hashValue.getter()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F876CF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  *(_DWORD *)(v3 + 48) = 84214272;
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(v3 + 56) = MEMORY[0x263F8EE78];
  *(void *)(v3 + 64) = v8;
  sub_24F7A46F0((uint64_t)v10);
  sub_24F77A91C((uint64_t)v10, v3 + 72, qword_26B1F7458);
  *(void *)(v3 + 240) = 0;
  *(void *)(v3 + 248) = 0;
  sub_24F878908((uint64_t)v11);
  sub_24F77A91C((uint64_t)v11, v3 + 256, &qword_26B1F6DB8);
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = v7;
  return v3;
}

uint64_t ColumnDefinition.notNull(onConflict:)(unsigned __int8 *a1)
{
  int v2 = *a1;
  if (v2 == 5) {
    LOBYTE(v2) = 1;
  }
  *(unsigned char *)(v1 + 51) = v2;
  return sub_24F768C14();
}

uint64_t ColumnDefinition.unique(onConflict:)(unsigned __int8 *a1)
{
  int v2 = *a1;
  if (v2 == 5) {
    LOBYTE(v2) = 1;
  }
  *(unsigned char *)(v1 + 50) = v2;
  return sub_24F768C14();
}

uint64_t ColumnDefinition.indexed()()
{
  if (*(unsigned char *)(v0 + 50) == 5) {
    *(unsigned char *)(v0 + 50) = 6;
  }
  return swift_retain();
}

uint64_t ColumnDefinition.check(_:)(void (*a1)(void *__return_ptr, void *))
{
  uint64_t v3 = *(void *)(v1 + 24);
  __src[0] = *(void *)(v1 + 16);
  __src[1] = v3;
  swift_bridgeObjectRetain();
  a1(v8, __src);
  swift_bridgeObjectRelease();
  sub_24F7811D0(v8, v8[3]);
  uint64_t v4 = sub_24F77B6B8();
  v5(v4);
  sub_24F786B18();
  sub_24F77C12C();
  uint64_t v6 = (void *)sub_24F77B050();
  memcpy(v6, __src, 0xA3uLL);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v8);
  return swift_retain();
}

uint64_t ColumnDefinition.check(sql:)()
{
  sub_24F77EAF8();
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v0 = (__n128 *)sub_24F77D79C();
  sub_24F773CF0(v0, (__n128)xmmword_24F8DDBF0);
  void v4[2] = MEMORY[0x263F8EE78];
  v4[3] = MEMORY[0x263F8EE80];
  uint64_t v1 = sub_24F7725D4(v4);
  sub_24F7711DC((uint64_t)v1);
  v5[0] = v0;
  sub_24F7A45A0((uint64_t)v5);
  sub_24F76F710((uint64_t)v5, (uint64_t)__src);
  swift_bridgeObjectRetain();
  sub_24F786B18();
  sub_24F77C12C();
  int v2 = (void *)sub_24F77B050();
  memcpy(v2, __src, 0xA3uLL);
  return swift_retain();
}

uint64_t ColumnDefinition.defaults(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  sub_24F7811D0(a1, v4);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v3 + 8) + 8))(v6, v4);
  nullsub_1(v6);
  sub_24F77A91C(v2 + 72, (uint64_t)v7, qword_26B1F7458);
  sub_24F77A91C((uint64_t)v6, v2 + 72, qword_26B1F7458);
  sub_24F878BF0((uint64_t)v7);
  return swift_retain();
}

uint64_t ColumnDefinition.defaults(sql:)(uint64_t a1, uint64_t a2)
{
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v5 = sub_24F77D79C();
  *(_OWORD *)(v5 + 16) = xmmword_24F8DDBF0;
  v8[0] = a1;
  v8[1] = a2;
  void v8[2] = MEMORY[0x263F8EE78];
  v8[3] = MEMORY[0x263F8EE80];
  uint64_t v6 = sub_24F7725D4(v8);
  sub_24F7711DC((uint64_t)v6);
  v9[0] = v5;
  sub_24F7A45A0((uint64_t)v9);
  sub_24F76F710((uint64_t)v9, (uint64_t)__src);
  memcpy(__dst, __src, 0xA3uLL);
  nullsub_1(__dst);
  sub_24F77A91C(v2 + 72, (uint64_t)v12, qword_26B1F7458);
  sub_24F77A91C((uint64_t)__dst, v2 + 72, qword_26B1F7458);
  swift_bridgeObjectRetain();
  sub_24F878BF0((uint64_t)v12);
  return swift_retain();
}

uint64_t ColumnDefinition.collate(_:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *(void *)(v1 + 240) = v3;
  *(void *)(v1 + 248) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_retain();
}

uint64_t ColumnDefinition.collate(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(v1 + 240) = v3;
  *(void *)(v1 + 248) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_retain();
}

uint64_t ColumnDefinition.references(_:column:onDelete:onUpdate:deferred:)()
{
  sub_24F7831A4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F786DB8();
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 16);
  sub_24F787148();
  sub_24F77F13C(v1 + 1);
  return swift_retain();
}

uint64_t ColumnDefinition.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F77A91C(v0 + 72, (uint64_t)v2, qword_26B1F7458);
  sub_24F878BF0((uint64_t)v2);
  swift_bridgeObjectRelease();
  sub_24F77A91C(v0 + 256, (uint64_t)v3, &qword_26B1F6DB8);
  sub_24F878B10((uint64_t)v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76C98C);
  return v0;
}

uint64_t ColumnDefinition.__deallocating_deinit()
{
  ColumnDefinition.deinit();
  return MEMORY[0x270FA0228](v0, 420, 7);
}

uint64_t IndexOptions.rawValue.getter()
{
  return *(void *)v0;
}

GRDBInternal::IndexOptions __swiftcall IndexOptions.init(rawValue:)(GRDBInternal::IndexOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static IndexOptions.ifNotExists.getter(void *a1@<X8>)
{
}

void static IndexOptions.unique.getter(void *a1@<X8>)
{
}

GRDBInternal::IndexOptions sub_24F877334(Swift::Int *a1)
{
  return IndexOptions.init(rawValue:)(*a1);
}

void sub_24F87733C(void *a1@<X8>)
{
}

uint64_t sub_24F877348@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F85861C(*a1, *v2, a2);
}

void sub_24F877354(void *a1@<X8>)
{
}

BOOL sub_24F877360(void *a1, uint64_t *a2)
{
  return sub_24F858634(a1, *a2);
}

void sub_24F877368(uint64_t *a1)
{
}

void sub_24F877370(uint64_t *a1)
{
}

uint64_t sub_24F877378(uint64_t *a1)
{
  return sub_24F8A2CF8(*a1);
}

void sub_24F877380(void *a1@<X8>)
{
}

BOOL sub_24F87738C(uint64_t *a1)
{
  return sub_24F8A2D34(*a1, *v1);
}

BOOL sub_24F877398(uint64_t *a1)
{
  return sub_24F8A2D40(*a1, *v1);
}

BOOL sub_24F8773A4(uint64_t *a1)
{
  return sub_24F8A2D64(*a1, *v1);
}

uint64_t sub_24F8773B0(uint64_t *a1)
{
  return sub_24F8A2D88(*a1);
}

GRDBInternal::IndexOptions sub_24F8773B8@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  result.rawValue = IndexOptions.init(rawValue:)(*a1).rawValue;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_24F8773E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IndexOptions.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for TableAlteration()
{
  return self;
}

uint64_t sub_24F877430(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 112);
  long long v12 = *(_OWORD *)(a1 + 144);
  long long v13 = *(_OWORD *)(a1 + 128);
  long long v10 = *(_OWORD *)(a1 + 176);
  long long v11 = *(_OWORD *)(a1 + 160);
  int v6 = *(unsigned __int16 *)(a1 + 208) | (*(unsigned __int8 *)(a1 + 210) << 16);
  uint64_t v7 = *(void *)(a1 + 192);
  uint64_t v8 = *(void *)(a1 + 200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F878C38(v18, v17, v16, v2, v3, v4, v5, v15, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((unint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v7,
    v8,
    v6,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76C98C);
  return a1;
}

uint64_t type metadata accessor for ColumnDefinition()
{
  return self;
}

unint64_t sub_24F877564()
{
  unint64_t result = qword_269A2C088;
  if (!qword_269A2C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C088);
  }
  return result;
}

unint64_t sub_24F8775B4()
{
  unint64_t result = qword_269A2C090;
  if (!qword_269A2C090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C090);
  }
  return result;
}

unint64_t sub_24F877604()
{
  unint64_t result = qword_26B1F6DB0;
  if (!qword_26B1F6DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F6DB0);
  }
  return result;
}

unint64_t sub_24F877654()
{
  unint64_t result = qword_26B1F6DD0;
  if (!qword_26B1F6DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F6DD0);
  }
  return result;
}

unint64_t sub_24F8776A4()
{
  unint64_t result = qword_269A2C098;
  if (!qword_269A2C098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C098);
  }
  return result;
}

unint64_t sub_24F8776F4()
{
  unint64_t result = qword_269A2C0A0;
  if (!qword_269A2C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C0A0);
  }
  return result;
}

unint64_t sub_24F877744()
{
  unint64_t result = qword_269A2C0A8[0];
  if (!qword_269A2C0A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269A2C0A8);
  }
  return result;
}

unint64_t sub_24F877794()
{
  unint64_t result = qword_26B1F5908;
  if (!qword_26B1F5908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F5908);
  }
  return result;
}

unint64_t sub_24F8777E4()
{
  unint64_t result = qword_26B1F5910;
  if (!qword_26B1F5910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F5910);
  }
  return result;
}

void type metadata accessor for TableOptions()
{
}

uint64_t method lookup function for TableDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TableDefinition);
}

uint64_t method lookup function for TableAlteration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TableAlteration);
}

uint64_t method lookup function for ColumnDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ColumnDefinition);
}

unsigned char *storeEnumTagSinglePayload for ColumnDefinition.GeneratedColumnQualification(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F877950);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ColumnDefinition.GeneratedColumnQualification()
{
}

void type metadata accessor for IndexOptions()
{
}

uint64_t initializeWithCopy for ColumnDefinition.ForeignKeyConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ColumnDefinition.ForeignKeyConstraint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t assignWithTake for ColumnDefinition.ForeignKeyConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

ValueMetadata *type metadata accessor for ColumnDefinition.ForeignKeyConstraint()
{
  return &type metadata for ColumnDefinition.ForeignKeyConstraint;
}

uint64_t sub_24F877AD0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA)
  {
    unsigned int v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 6;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24F877B80);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 5) {
    unsigned int v8 = v7 - 4;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_24F877B94(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v7 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24F877C68);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_24F877C90(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 5) {
    return v1 - 4;
  }
  else {
    return 0;
  }
}

unsigned char *sub_24F877CA4(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 4;
  }
  return result;
}

void type metadata accessor for ColumnDefinition.Index()
{
}

uint64_t sub_24F877CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      return swift_retain();
    case 1:
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3:
LABEL_7:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for TableAlteration.TableAlterationKind(uint64_t a1)
{
  return sub_24F877D88(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_24F877D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      return swift_release();
    case 1:
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3:
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for TableAlteration.TableAlterationKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24F877CC0(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for TableAlteration.TableAlterationKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24F877CC0(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_24F877D88(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for TableAlteration.TableAlterationKind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_24F877D88(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TableAlteration.TableAlterationKind(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TableAlteration.TableAlterationKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TableAlteration.TableAlterationKind()
{
  return &type metadata for TableAlteration.TableAlterationKind;
}

uint64_t destroy for TableDefinition.ForeignKeyConstraint()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TableDefinition.ForeignKeyConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TableDefinition.ForeignKeyConstraint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t assignWithTake for TableDefinition.ForeignKeyConstraint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for TableDefinition.ForeignKeyConstraint(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 35))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TableDefinition.ForeignKeyConstraint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 35) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TableDefinition.ForeignKeyConstraint()
{
  return &type metadata for TableDefinition.ForeignKeyConstraint;
}

uint64_t initializeBufferWithCopyOfBuffer for TableDefinition.ColumnItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_24F87827C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_24F87827C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t destroy for TableDefinition.ColumnItem(uint64_t a1)
{
  return sub_24F878298(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_24F878298(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t assignWithCopy for TableDefinition.ColumnItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_24F87827C(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_24F878298(v5, v6);
  return a1;
}

uint64_t assignWithTake for TableDefinition.ColumnItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_24F878298(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TableDefinition.ColumnItem(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TableDefinition.ColumnItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24F8783BC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24F8783C4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TableDefinition.ColumnItem()
{
  return &type metadata for TableDefinition.ColumnItem;
}

uint64_t destroy for ColumnDefinition.GeneratedColumnConstraint(uint64_t a1)
{
  return sub_24F76C98C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16));
}

uint64_t initializeWithCopy for ColumnDefinition.GeneratedColumnConstraint(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 96);
  uint64_t v18 = *(void *)(a2 + 104);
  uint64_t v19 = *(void *)(a2 + 112);
  uint64_t v20 = *(void *)(a2 + 120);
  uint64_t v21 = *(void *)(a2 + 128);
  uint64_t v22 = *(void *)(a2 + 136);
  int v25 = *(unsigned __int8 *)(a2 + 162);
  int v26 = *(unsigned __int16 *)(a2 + 160);
  uint64_t v23 = *(void *)(a2 + 144);
  uint64_t v24 = *(void *)(a2 + 152);
  uint64_t v9 = *(void *)a2;
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_24F76CB14(*(void *)a2, v4, v5, v6, v7, v8, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23,
    v24,
    v26 | (v25 << 16));
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v17;
  *(void *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v19;
  *(void *)(a1 + 120) = v20;
  *(void *)(a1 + 128) = v21;
  *(void *)(a1 + 136) = v22;
  *(void *)(a1 + 144) = v23;
  *(void *)(a1 + 152) = v24;
  *(unsigned char *)(a1 + 162) = v25;
  *(_WORD *)(a1 + 160) = v26;
  *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
  return a1;
}

uint64_t assignWithCopy for ColumnDefinition.GeneratedColumnConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v29 = *(void *)(a2 + 64);
  uint64_t v30 = *(void *)(a2 + 72);
  uint64_t v31 = *(void *)(a2 + 80);
  uint64_t v32 = *(void *)(a2 + 88);
  uint64_t v33 = *(void *)(a2 + 96);
  uint64_t v34 = *(void *)(a2 + 104);
  uint64_t v35 = *(void *)(a2 + 112);
  uint64_t v36 = *(void *)(a2 + 120);
  uint64_t v37 = *(void *)(a2 + 128);
  uint64_t v38 = *(void *)(a2 + 136);
  int v41 = *(unsigned __int16 *)(a2 + 160);
  int v42 = *(unsigned __int8 *)(a2 + 162);
  uint64_t v39 = *(void *)(a2 + 144);
  uint64_t v40 = *(void *)(a2 + 152);
  uint64_t v9 = *(void *)a2;
  unint64_t v10 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_24F76CB14(*(void *)a2, v10, v4, v5, v6, v7, v8, v11, *(void *)(a2 + 64), *(void *)(a2 + 72), *(void *)(a2 + 80), *(void *)(a2 + 88), *(void *)(a2 + 96), *(void *)(a2 + 104), *(void *)(a2 + 112), *(void *)(a2 + 120), *(void *)(a2 + 128), *(void *)(a2 + 136), *(void *)(a2 + 144),
    *(void *)(a2 + 152),
    v41 | (v42 << 16));
  unsigned int v12 = *(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16);
  uint64_t v13 = *(void *)a1;
  unint64_t v14 = *(void *)(a1 + 8);
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v11;
  long long v21 = *(_OWORD *)(a1 + 64);
  long long v22 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v29;
  *(void *)(a1 + 72) = v30;
  *(void *)(a1 + 80) = v31;
  *(void *)(a1 + 88) = v32;
  long long v23 = *(_OWORD *)(a1 + 96);
  long long v24 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v33;
  *(void *)(a1 + 104) = v34;
  *(void *)(a1 + 112) = v35;
  *(void *)(a1 + 120) = v36;
  long long v25 = *(_OWORD *)(a1 + 128);
  *(void *)(a1 + 128) = v37;
  *(void *)(a1 + 136) = v38;
  *(_WORD *)(a1 + 160) = v41;
  *(unsigned char *)(a1 + 162) = v42;
  uint64_t v26 = *(void *)(a1 + 144);
  uint64_t v27 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = v39;
  *(void *)(a1 + 152) = v40;
  sub_24F76C98C(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26,
    v27,
    v12);
  *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
  return a1;
}

void *initializeWithTake for ColumnDefinition.GeneratedColumnConstraint(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA4uLL);
}

uint64_t assignWithTake for ColumnDefinition.GeneratedColumnConstraint(uint64_t a1, uint64_t a2)
{
  __int16 v4 = *(_WORD *)(a2 + 160);
  char v5 = *(unsigned char *)(a2 + 162);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 80);
  long long v16 = *(_OWORD *)(a1 + 96);
  long long v17 = *(_OWORD *)(a1 + 112);
  long long v18 = *(_OWORD *)(a1 + 128);
  uint64_t v19 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 152);
  unsigned int v21 = *(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16);
  long long v22 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v22;
  long long v23 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v23;
  long long v24 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v24;
  long long v25 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v25;
  long long v26 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v26;
  *(unsigned char *)(a1 + 162) = v5;
  *(_WORD *)(a1 + 160) = v4;
  sub_24F76C98C(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    v20,
    v21);
  *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColumnDefinition.GeneratedColumnConstraint(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 164))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *(void *)(a1 + 64) >> 1;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for ColumnDefinition.GeneratedColumnConstraint(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 152) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 160) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 164) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 64) = 2 * -a2;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_OWORD *)(a1 + 136) = 0u;
      *(_OWORD *)(a1 + 147) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 164) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColumnDefinition.GeneratedColumnConstraint()
{
  return &type metadata for ColumnDefinition.GeneratedColumnConstraint;
}

double sub_24F878908(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 64) = 0x1FFFFFFFELL;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 148) = 0u;
  return result;
}

uint64_t sub_24F878938(uint64_t a1)
{
  sub_24F8789B4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(unsigned __int16 *)(a1 + 208) | (*(unsigned __int8 *)(a1 + 210) << 16));
  return a1;
}

uint64_t sub_24F8789B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_24F878C38(a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25,
             a26,
             a27,
             (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76C98C);
  }
  return result;
}

void sub_24F878B08(void *a1)
{
}

uint64_t sub_24F878B10(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_24F878B84(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(_DWORD *)(a1 + 160),
    a2);
  return a1;
}

uint64_t sub_24F878B84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  BOOL v22 = a9 >> 1 != 0xFFFFFFFF || a14 > 1;
  if (v22 || (a21 & 0xFE7E00) != 0) {
    return sub_24F77F890(result, a2, a3, a4, a5, a6, a22);
  }
  return result;
}

uint64_t sub_24F878BF0(uint64_t a1)
{
  sub_24F77E030();
  long long v25 = v2;
  sub_24F77C064();
  sub_24F878C38(v3, v10, v4, v5, v6, v7, v8, v9, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t sub_24F878C38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  BOOL v22 = a9 >> 1 != 0xFFFFFFFF || a14 > 1;
  if (v22 || (a21 & 0xFE7E00) != 0) {
    return sub_24F77F890(result, a2, a3, a4, a5, a6, a22);
  }
  return result;
}

uint64_t sub_24F878CA8(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 112);
  long long v12 = *(_OWORD *)(a1 + 144);
  long long v13 = *(_OWORD *)(a1 + 128);
  long long v10 = *(_OWORD *)(a1 + 176);
  long long v11 = *(_OWORD *)(a1 + 160);
  int v6 = *(unsigned __int16 *)(a1 + 208) | (*(unsigned __int8 *)(a1 + 210) << 16);
  uint64_t v7 = *(void *)(a1 + 192);
  uint64_t v8 = *(void *)(a1 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F878C38(v18, v17, v16, v2, v3, v4, v5, v15, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((unint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v7,
    v8,
    v6,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24F76CB14);
  return a1;
}

uint64_t destroy for IndexDefinition(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 112);
  unint64_t v4 = *(void *)(a1 + 152);
  if (v3 >> 1 != 0xFFFFFFFF
    || v4 > 1
    || (*(_WORD *)(a1 + 208) & 0x7E00 | (*(unsigned __int8 *)(a1 + 210) << 16) & 0xFE7FFF) != 0)
  {
    return sub_24F76C98C(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v3, *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), v4, *(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192),
             *(void *)(a1 + 200),
             *(unsigned __int16 *)(a1 + 208) | (*(unsigned __int8 *)(a1 + 210) << 16));
  }
  return result;
}

uint64_t initializeWithCopy for IndexDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  unint64_t v7 = *(void *)(a2 + 112);
  unsigned int v8 = *(unsigned __int16 *)(a2 + 208) | (*(unsigned __int8 *)(a2 + 210) << 16);
  unint64_t v9 = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BOOL v10 = v7 >> 1 != 0xFFFFFFFF || v9 > 1;
  if (v10 || (v8 & 0xFE7E00) != 0)
  {
    uint64_t v11 = *(void *)(a2 + 48);
    unint64_t v12 = *(void *)(a2 + 56);
    unint64_t v13 = *(void *)(a2 + 72);
    uint64_t v14 = *(void *)(a2 + 80);
    uint64_t v15 = *(void *)(a2 + 88);
    uint64_t v16 = *(void *)(a2 + 96);
    uint64_t v17 = *(void *)(a2 + 104);
    uint64_t v26 = *(void *)(a2 + 120);
    uint64_t v27 = *(void *)(a2 + 128);
    uint64_t v28 = *(void *)(a2 + 136);
    uint64_t v29 = *(void *)(a2 + 144);
    uint64_t v30 = *(void *)(a2 + 160);
    uint64_t v31 = *(void *)(a2 + 168);
    uint64_t v32 = *(void *)(a2 + 176);
    uint64_t v33 = *(void *)(a2 + 184);
    uint64_t v34 = *(void *)(a2 + 192);
    uint64_t v35 = *(void *)(a2 + 200);
    uint64_t v23 = v9;
    uint64_t v22 = v7;
    uint64_t v18 = *(void *)(a2 + 64);
    unint64_t v24 = v7;
    unint64_t v25 = v9;
    uint64_t v19 = v16;
    uint64_t v20 = v17;
    sub_24F76CB14(v11, v12, v18, v13, v14, v15, v16, v17, v22, v26, v27, v28, v29, v23, v30, v31, v32, v33, v34,
      v35,
      v8);
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v18;
    *(void *)(a1 + 72) = v13;
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v19;
    *(void *)(a1 + 104) = v20;
    *(void *)(a1 + 112) = v24;
    *(void *)(a1 + 120) = v26;
    *(void *)(a1 + 128) = v27;
    *(void *)(a1 + 136) = v28;
    *(void *)(a1 + 144) = v29;
    *(void *)(a1 + 152) = v25;
    *(void *)(a1 + 160) = v30;
    *(void *)(a1 + 168) = v31;
    *(void *)(a1 + 176) = v32;
    *(void *)(a1 + 184) = v33;
    *(void *)(a1 + 192) = v34;
    *(void *)(a1 + 200) = v35;
    *(unsigned char *)(a1 + 210) = BYTE2(v8);
    *(_WORD *)(a1 + 208) = v8;
  }
  else
  {
    memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0xA3uLL);
  }
  return a1;
}

uint64_t assignWithCopy for IndexDefinition(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  unint64_t v4 = *(void *)(a2 + 112);
  unint64_t v5 = *(void *)(a2 + 152);
  unsigned int v6 = *(unsigned __int16 *)(a2 + 208) | (*(unsigned __int8 *)(a2 + 210) << 16);
  BOOL v8 = v4 >> 1 == 0xFFFFFFFF && v5 < 2;
  if ((v6 & 0xFE7E00) != 0) {
    BOOL v8 = 0;
  }
  BOOL v9 = *(void *)(a1 + 112) >> 1 != 0xFFFFFFFFLL || *(void *)(a1 + 152) > 1uLL;
  if (v9 || *(_WORD *)(a1 + 208) & 0x7E00 | (*(unsigned __int8 *)(a1 + 210) << 16) & 0xFE7FFF)
  {
    if (!v8)
    {
      uint64_t v17 = *(void *)(a2 + 48);
      unint64_t v18 = *(void *)(a2 + 56);
      unint64_t v19 = *(void *)(a2 + 72);
      uint64_t v20 = *(void *)(a2 + 80);
      uint64_t v21 = *(void *)(a2 + 88);
      uint64_t v22 = *(void *)(a2 + 104);
      uint64_t v44 = v22;
      uint64_t v46 = *(void *)(a2 + 96);
      uint64_t v48 = *(void *)(a2 + 120);
      uint64_t v50 = *(void *)(a2 + 128);
      uint64_t v52 = *(void *)(a2 + 136);
      uint64_t v54 = *(void *)(a2 + 144);
      uint64_t v56 = *(void *)(a2 + 160);
      uint64_t v58 = *(void *)(a2 + 168);
      uint64_t v60 = *(void *)(a2 + 176);
      uint64_t v62 = *(void *)(a2 + 184);
      uint64_t v64 = *(void *)(a2 + 192);
      uint64_t v66 = *(void *)(a2 + 200);
      uint64_t v23 = *(void *)(a2 + 64);
      sub_24F76CB14(v17, v18, v23, v19, v20, v21, v46, v22, v4, v48, v50, v52, v54, v5, v56, v58, v60, v62, v64,
        v66,
        v6);
      int v24 = *(unsigned __int16 *)(a1 + 208);
      uint64_t v25 = *(void *)(a1 + 48);
      unint64_t v26 = *(void *)(a1 + 56);
      *(void *)(a1 + 48) = v17;
      *(void *)(a1 + 56) = v18;
      uint64_t v27 = *(void *)(a1 + 64);
      unint64_t v28 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v23;
      *(void *)(a1 + 72) = v19;
      uint64_t v29 = *(void *)(a1 + 80);
      uint64_t v30 = *(void *)(a1 + 88);
      *(void *)(a1 + 80) = v20;
      *(void *)(a1 + 88) = v21;
      uint64_t v31 = *(void *)(a1 + 96);
      uint64_t v32 = *(void *)(a1 + 104);
      *(void *)(a1 + 96) = v46;
      long long v33 = *(_OWORD *)(a1 + 112);
      long long v34 = *(_OWORD *)(a1 + 128);
      long long v35 = *(_OWORD *)(a1 + 144);
      long long v36 = *(_OWORD *)(a1 + 160);
      long long v37 = *(_OWORD *)(a1 + 176);
      *(void *)(a1 + 104) = v44;
      *(void *)(a1 + 112) = v4;
      *(void *)(a1 + 120) = v48;
      *(void *)(a1 + 128) = v50;
      uint64_t v38 = *(void *)(a1 + 192);
      uint64_t v39 = *(void *)(a1 + 200);
      *(void *)(a1 + 136) = v52;
      *(void *)(a1 + 144) = v54;
      *(void *)(a1 + 152) = v5;
      *(void *)(a1 + 160) = v56;
      *(void *)(a1 + 168) = v58;
      *(void *)(a1 + 176) = v60;
      *(void *)(a1 + 184) = v62;
      *(void *)(a1 + 192) = v64;
      *(void *)(a1 + 200) = v66;
      *(_WORD *)(a1 + 208) = v6;
      int v40 = *(unsigned __int8 *)(a1 + 210);
      *(unsigned char *)(a1 + 210) = BYTE2(v6);
      sub_24F76C98C(v25, v26, v27, v28, v29, v30, v31, v32, v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38,
        v39,
        v24 | (v40 << 16));
      return a1;
    }
    sub_24F879380(a1 + 48);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_18:
    memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0xA3uLL);
    return a1;
  }
  uint64_t v10 = *(void *)(a2 + 48);
  unint64_t v11 = *(void *)(a2 + 56);
  unint64_t v12 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v43 = v15;
  uint64_t v45 = *(void *)(a2 + 96);
  uint64_t v47 = *(void *)(a2 + 120);
  uint64_t v49 = *(void *)(a2 + 128);
  uint64_t v51 = *(void *)(a2 + 136);
  uint64_t v53 = *(void *)(a2 + 144);
  uint64_t v55 = *(void *)(a2 + 160);
  uint64_t v57 = *(void *)(a2 + 168);
  uint64_t v59 = *(void *)(a2 + 176);
  uint64_t v61 = *(void *)(a2 + 184);
  uint64_t v63 = *(void *)(a2 + 192);
  uint64_t v65 = *(void *)(a2 + 200);
  long long v42 = *(_OWORD *)(a2 + 128);
  uint64_t v16 = *(void *)(a2 + 64);
  sub_24F76CB14(v10, v11, v16, v12, v13, v14, v45, v15, v4, v47, v42, *((uint64_t *)&v42 + 1), v53, v5, v55, v57, v59, v61, v63,
    v65,
    v6);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v45;
  *(void *)(a1 + 104) = v43;
  *(void *)(a1 + 112) = v4;
  *(void *)(a1 + 120) = v47;
  *(void *)(a1 + 128) = v49;
  *(void *)(a1 + 136) = v51;
  *(void *)(a1 + 144) = v53;
  *(void *)(a1 + 152) = v5;
  *(void *)(a1 + 160) = v55;
  *(void *)(a1 + 168) = v57;
  *(void *)(a1 + 176) = v59;
  *(void *)(a1 + 184) = v61;
  *(void *)(a1 + 192) = v63;
  *(void *)(a1 + 200) = v65;
  *(unsigned char *)(a1 + 210) = BYTE2(v6);
  *(_WORD *)(a1 + 208) = v6;
  return a1;
}

uint64_t sub_24F879380(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for IndexDefinition(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD3uLL);
}

uint64_t assignWithTake for IndexDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  unint64_t v6 = *(void *)(a1 + 112);
  unint64_t v7 = *(void *)(a1 + 152);
  unsigned int v8 = *(unsigned __int16 *)(a1 + 208) | (*(unsigned __int8 *)(a1 + 210) << 16);
  unint64_t v9 = *(void *)(a2 + 112);
  unint64_t v10 = *(void *)(a2 + 152);
  BOOL v11 = v6 >> 1 != 0xFFFFFFFF || v7 > 1;
  if (v11 || (v8 & 0xFE7E00) != 0)
  {
    int v12 = *(unsigned __int16 *)(a2 + 208) | (*(unsigned __int8 *)(a2 + 210) << 16);
    BOOL v13 = v9 >> 1 != 0xFFFFFFFF || v10 > 1;
    if (v13 || (v12 & 0xFE7E00) != 0)
    {
      uint64_t v14 = *(void *)(a1 + 48);
      unint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      unint64_t v17 = *(void *)(a1 + 72);
      uint64_t v18 = *(void *)(a1 + 80);
      uint64_t v19 = *(void *)(a1 + 88);
      uint64_t v20 = *(void *)(a1 + 96);
      uint64_t v21 = *(void *)(a1 + 104);
      long long v22 = *(_OWORD *)(a1 + 120);
      uint64_t v23 = *(void *)(a1 + 136);
      uint64_t v24 = *(void *)(a1 + 144);
      long long v25 = *(_OWORD *)(a1 + 160);
      long long v26 = *(_OWORD *)(a1 + 176);
      uint64_t v27 = *(void *)(a1 + 192);
      uint64_t v28 = *(void *)(a1 + 200);
      long long v29 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v29;
      long long v30 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v30;
      *(void *)(a1 + 112) = v9;
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 152) = v10;
      long long v31 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v31;
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_WORD *)(a1 + 208) = v12;
      *(unsigned char *)(a1 + 210) = BYTE2(v12);
      sub_24F76C98C(v14, v15, v16, v17, v18, v19, v20, v21, v6, v22, *((uint64_t *)&v22 + 1), v23, v24, v7, v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27,
        v28,
        v8);
      return a1;
    }
    sub_24F879380(a1 + 48);
  }
  memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0xA3uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for IndexDefinition(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 211))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IndexDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 210) = 0;
    *(_WORD *)(result + 208) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 211) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 211) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IndexDefinition()
{
  return &type metadata for IndexDefinition;
}

uint64_t sub_24F879640()
{
  uint64_t result = type metadata accessor for OnDemandFutureSubscription.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_24F8796E0(uint64_t a1, uint64_t a2)
{
  unint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v7 = a1;
  uint64_t v8 = a2;
  id result = sub_24F832B4C((uint64_t)sub_24F87C1DC, (uint64_t)v6, (void (*)(id))sub_24F87C1E4);
  unint64_t v3 = v9;
  if (v9)
  {
    uint64_t v4 = v10;
    uint64_t v5 = swift_retain();
    v3(v5);
    sub_24F839BC8(v3, v4);
    return (id)sub_24F839BC8(v3, v4);
  }
  return result;
}

uint64_t sub_24F87978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24F77AD10();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OnDemandFutureSubscription();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, a6);
  swift_retain();
  uint64_t v16 = sub_24F8798B8(a2, a3, (uint64_t)v14);
  void v19[3] = v15;
  v19[4] = swift_getWitnessTable();
  v19[0] = v16;
  sub_24F8CEAB0();
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v19);
}

uint64_t *sub_24F8798B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F87991C(a1, a2, a3);
}

uint64_t sub_24F87990C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F87978C(a1, *v5, v5[1], a4, a5, a2);
}

uint64_t *sub_24F87991C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 104);
  *(uint64_t *)((char *)v3 + v8) = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AE0]), sel_init);
  uint64_t v9 = (uint64_t)v3 + *(void *)(*v3 + 96);
  uint64_t v10 = *(void *)(v7 + 80);
  sub_24F7688B8(qword_26B1F7A20);
  uint64_t v11 = (void *)(v9 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a3, v10);
  *uint64_t v11 = a1;
  v11[1] = a2;
  type metadata accessor for OnDemandFutureSubscription.State();
  swift_storeEnumTagMultiPayload();
  return v3;
}

id sub_24F879A58()
{
  return sub_24F832B4C((uint64_t)sub_24F7C3BA8, 0, (void (*)(id))sub_24F87C648);
}

uint64_t sub_24F879AD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 80);
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = type metadata accessor for OnDemandFutureSubscription.State();
  uint64_t v8 = *(void (***)(void, void, void))(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v26 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = (uint64_t)a1 + *(void *)(v3 + 96);
  swift_beginAccess();
  ((void (**)(char *, uint64_t, uint64_t))v8)[2](v16, v17, v7);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v16, v4);
    }
  }
  else
  {
    sub_24F7688B8(qword_26B1F7A20);
    uint64_t v19 = &v16[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v21 = *(void (**)(uint64_t (*)(uint64_t), uint64_t *))v19;
    uint64_t v20 = *((void *)v19 + 1);
    uint64_t v27 = v21;
    uint64_t v28 = v20;
    long long v22 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    long long v29 = v6;
    v22(v6, v16, v4);
    sub_24F8CEB10();
    uint64_t v23 = v30;
    uint64_t result = sub_24F8CEAF0();
    if ((result & 1) == 0)
    {
      if (v23 < 0)
      {
        __break(1u);
        return result;
      }
      if (!v23)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v4);
        return swift_release();
      }
    }
    uint64_t v24 = v31;
    long long v25 = v29;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v14, v29, v4);
    swift_storeEnumTagMultiPayload();
    ((void (**)(char *, char *, uint64_t))v8)[4](v11, v14, v7);
    swift_beginAccess();
    ((void (**)(uint64_t, char *, uint64_t))v8)[5](v17, v11, v7);
    swift_endAccess();
    swift_retain();
    v27(sub_24F87C664, a1);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v25, v4);
  }
  return result;
}

uint64_t sub_24F879E8C(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_24F8CEAE0();
  uint64_t v19 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = sub_24F8CFF90();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, v21, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v15, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v5, v8, AssociatedTypeWitness);
    sub_24F7771BC((uint64_t)v5, 0, 1, AssociatedTypeWitness);
    sub_24F87A9B4((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_24F87A3F0((uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

id sub_24F87A234()
{
  return sub_24F832B4C((uint64_t)sub_24F7C44C8, 0, (void (*)(id))sub_24F87C62C);
}

uint64_t sub_24F87A2B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OnDemandFutureSubscription.State();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - v4;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = a1 + *(void *)(*(void *)a1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v6, v5, v2);
  return swift_endAccess();
}

id sub_24F87A3F0(uint64_t a1)
{
  return sub_24F87A9E0(a1, (uint64_t)sub_24F7C46CC);
}

uint64_t sub_24F87A41C(uint64_t (**a1)(), uint64_t *a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v43 = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v6 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v37 = *(void *)(v40 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v39 = (char *)&v34 - v9;
  uint64_t v10 = *(void *)(v6 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v8);
  long long v36 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v42 = v5;
  uint64_t v15 = type metadata accessor for OnDemandFutureSubscription.State();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t v22 = (uint64_t)a2 + *(void *)(v4 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v21, v22, v15);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      sub_24F839BC8(*v43, v43[1]);
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v24(v14, v21, v6);
      long long v35 = (void (*)(unint64_t, char *, uint64_t))v24;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 40))(v22, v19, v15);
      swift_endAccess();
      long long v25 = v36;
      v24(v36, v14, v6);
      uint64_t v27 = v39;
      uint64_t v26 = v40;
      uint64_t v28 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v38, v41);
      unint64_t v29 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      unint64_t v30 = (v11 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v31 = swift_allocObject();
      uint64_t v32 = v42;
      *(void *)(v31 + 16) = v6;
      *(void *)(v31 + 24) = v32;
      v35(v31 + v29, v25, v6);
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v26 + 32))(v31 + v30, v27, v28);
      long long v33 = v43;
      *uint64_t v43 = sub_24F87C584;
      v33[1] = (uint64_t (*)())v31;
    }
  }
  else
  {
    sub_24F7688B8(qword_26B1F7A20);
    swift_getTupleTypeMetadata2();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v21, v6);
  }
  return result;
}

uint64_t sub_24F87A864()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = sub_24F8CEAE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v6 - v3;
  sub_24F8CEAC0();
  sub_24F7771BC((uint64_t)v4, 1, 1, AssociatedTypeWitness);
  sub_24F8CEAA0();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id sub_24F87A9B4(uint64_t a1)
{
  return sub_24F87A9E0(a1, (uint64_t)sub_24F847720);
}

id sub_24F87A9E0(uint64_t a1, uint64_t a2)
{
  return sub_24F8796E0(a2, 0);
}

uint64_t sub_24F87AA34(uint64_t (**a1)(), uint64_t *a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v42 = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v6 = *(void *)(*a2 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v40 = sub_24F8CEAE0();
  uint64_t v38 = *(void *)(v40 - 8);
  uint64_t v36 = *(void *)(v38 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v33 - v8;
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v7);
  long long v35 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v41 = v5;
  uint64_t v14 = type metadata accessor for OnDemandFutureSubscription.State();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = (uint64_t)a2 + *(void *)(v4 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, v21, v14);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      sub_24F839BC8(*v42, v42[1]);
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v23(v13, v20, v6);
      uint64_t v34 = (void (*)(unint64_t, char *, uint64_t))v23;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 40))(v21, v18, v14);
      swift_endAccess();
      uint64_t v24 = v35;
      v23(v35, v13, v6);
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      uint64_t v27 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v39, v40);
      unint64_t v28 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      unint64_t v29 = (v10 + *(unsigned __int8 *)(v25 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v30 = swift_allocObject();
      uint64_t v31 = v41;
      *(void *)(v30 + 16) = v6;
      *(void *)(v30 + 24) = v31;
      v34(v30 + v28, v24, v6);
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v25 + 32))(v30 + v29, v26, v27);
      uint64_t v32 = v42;
      *uint64_t v42 = sub_24F87C390;
      v32[1] = (uint64_t (*)())v30;
    }
  }
  else
  {
    sub_24F7688B8(qword_26B1F7A20);
    swift_getTupleTypeMetadata2();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v20, v6);
  }
  return result;
}

uint64_t sub_24F87AEB0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for OnDemandFutureSubscription.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_24F87AF68()
{
  uint64_t v0 = sub_24F87AEB0();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t type metadata accessor for OnDemandFutureSubscription()
{
  return sub_24F777DE0();
}

uint64_t type metadata accessor for OnDemandFutureSubscription.State()
{
  return sub_24F777DE0();
}

uint64_t sub_24F87AFEC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_24F87B09C(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    uint64_t v10 = *(void *)__src;
    *uint64_t v4 = *(void *)__src;
    uint64_t v4 = (void *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v11 = __src[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *__src;
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)__src;
          goto LABEL_19;
        case 3:
          int v14 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)__src;
LABEL_19:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *((unsigned char *)v4 + v7) = 1;
      return v4;
    }
    if (v11)
    {
      memcpy(__dst, __src, v7 + 1);
      return v4;
    }
    (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    uint64_t v16 = (void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = v16[1];
    uint64_t v18 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v18 = *v16;
    v18[1] = v17;
    *((unsigned char *)v4 + v7) = 0;
  }
  swift_retain();
  return v4;
}

unsigned __int8 *sub_24F87B274(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v3 > v4) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = result[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *result;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)result;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(uint64_t (**)(void))(v2 + 8);
    return (unsigned __int8 *)v10();
  }
  else if (!v5)
  {
    (*(void (**)(unsigned __int8 *))(v2 + 8))(result);
    return (unsigned __int8 *)swift_release();
  }
  return result;
}

unsigned char *sub_24F87B3F4(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    uint64_t v13 = (void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = v13[1];
    int v15 = (void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    *int v15 = *v13;
    v15[1] = v14;
    __dst[v7] = 0;
    swift_retain();
  }
  return __dst;
}

unsigned __int8 *sub_24F87B590(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    unsigned int v9 = __dst[v8];
    char v10 = 8 * v8;
    unsigned int v11 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v12 = v8;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *__dst;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)__dst;
LABEL_14:
          int v14 = (v13 | (v11 << v10)) + 2;
          unsigned int v9 = v13 + 2;
          if (v8 < 4) {
            unsigned int v9 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v9)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      swift_release();
    }
    unsigned int v15 = __src[v8];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v17 = v8;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *__src;
          goto LABEL_29;
        case 2:
          int v18 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v18 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v18 = *(_DWORD *)__src;
LABEL_29:
          int v19 = (v18 | (v16 << v10)) + 2;
          unsigned int v15 = v18 + 2;
          if (v8 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v8] = 1;
    }
    else if (v15)
    {
      memcpy(__dst, __src, v8 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      uint64_t v20 = (void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      uint64_t v21 = v20[1];
      uint64_t v22 = (void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v22 = *v20;
      v22[1] = v21;
      __dst[v8] = 0;
      swift_retain();
    }
  }
  return __dst;
}

unsigned char *sub_24F87B830(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_OWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_24F87B9C8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    unsigned int v9 = __dst[v8];
    char v10 = 8 * v8;
    unsigned int v11 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v12 = v8;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *__dst;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)__dst;
LABEL_14:
          int v14 = (v13 | (v11 << v10)) + 2;
          unsigned int v9 = v13 + 2;
          if (v8 < 4) {
            unsigned int v9 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    else if (!v9)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      swift_release();
    }
    unsigned int v15 = __src[v8];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v17 = v8;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *__src;
          goto LABEL_29;
        case 2:
          int v18 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v18 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v18 = *(_DWORD *)__src;
LABEL_29:
          int v19 = (v18 | (v16 << v10)) + 2;
          unsigned int v15 = v18 + 2;
          if (v8 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v8] = 1;
    }
    else if (v15)
    {
      memcpy(__dst, __src, v8 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_OWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

uint64_t sub_24F87BC64(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v4 > v5) {
    unint64_t v5 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  unint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_22:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 3) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 254;
}

void sub_24F87BDA0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x24F87BF6CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24F87BF94(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v3 > v4) {
    unint64_t v4 = *(void *)(v2 + 64);
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 2;
        LODWORD(v5) = v8 + 2;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_24F87C054(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    size_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v6 = a2 - 2;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for OnDemandFuture()
{
  return sub_24F777DE0();
}

id sub_24F87C14C()
{
  return sub_24F879A58();
}

id sub_24F87C170()
{
  return sub_24F87A234();
}

uint64_t sub_24F87C194()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F87C1B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F87C1CC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_24F87C1D4(uint64_t (**a1)())
{
  return sub_24F87AA34(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F87C1DC()
{
  return sub_24F83CBB4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_24F87C1E4()
{
  return sub_24F83CBDC(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24F87C204()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_24F77AD10();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_24F77E348();
  unint64_t v6 = v4 + *(void *)(v5 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = *(void *)(sub_24F8CEAE0() - 8);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  if (!sub_24F777048(v0 + v9, 1, AssociatedTypeWitness)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v9, AssociatedTypeWitness);
  }
  return swift_deallocObject();
}

uint64_t sub_24F87C390()
{
  sub_24F77AD10();
  sub_24F77E348();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v0 = sub_24F8CEAE0();
  sub_24F77DF00(v0);
  return sub_24F8CEAA0();
}

uint64_t sub_24F87C46C(uint64_t (**a1)())
{
  return sub_24F87A41C(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F87C474()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_24F77AD10();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_24F77E348();
  unint64_t v6 = v4 + *(void *)(v5 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v9 = v8;
  unint64_t v10 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_24F87C584()
{
  sub_24F77AD10();
  sub_24F77E348();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77DF00(AssociatedTypeWitness);
  return sub_24F87A864();
}

uint64_t sub_24F87C62C()
{
  return sub_24F87A2B0(v0);
}

uint64_t sub_24F87C648()
{
  return sub_24F879AD8(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24F87C664(uint64_t a1)
{
  return sub_24F879E8C(a1);
}

ValueMetadata *type metadata accessor for CaseInsensitiveIdentifier()
{
  return &type metadata for CaseInsensitiveIdentifier;
}

uint64_t sub_24F87C67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a5 && a2 == a6) {
    return 1;
  }
  else {
    return sub_24F8CFD00();
  }
}

uint64_t sub_24F87C6A0()
{
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F87C6FC()
{
  return sub_24F87C6A0();
}

uint64_t sub_24F87C704(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_24F87C67C(*a1, a1[1], a3, a4, *a2, a2[1]);
}

unint64_t sub_24F87C71C()
{
  unint64_t result = qword_26B1F7DB8;
  if (!qword_26B1F7DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7DB8);
  }
  return result;
}

uint64_t FTS5TokenFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t FTS5TokenFlags.rawValue.getter()
{
  return *v0;
}

void static FTS5TokenFlags.colocated.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24F87C784@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return FTS5TokenFlags.init(rawValue:)(*a1, a2);
}

void sub_24F87C78C(_DWORD *a1@<X8>)
{
}

uint64_t sub_24F87C798@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24F858628(*a1, *v2, a2);
}

void sub_24F87C7A4(_DWORD *a1@<X8>)
{
}

BOOL sub_24F87C7B0(_DWORD *a1, int *a2)
{
  return sub_24F858660(a1, *a2);
}

uint64_t sub_24F87C7B8(unsigned int *a1)
{
  return sub_24F858698(*a1);
}

uint64_t sub_24F87C7C0(unsigned int *a1)
{
  return sub_24F8586B4(*a1);
}

uint64_t sub_24F87C7C8(unsigned int *a1)
{
  return sub_24F8A2D08(*a1);
}

void sub_24F87C7D0(_DWORD *a1@<X8>)
{
}

BOOL sub_24F87C7DC(int *a1)
{
  return sub_24F8A2D28(*a1, *v1);
}

BOOL sub_24F87C7E8(int *a1)
{
  return sub_24F8A2D4C(*a1, *v1);
}

BOOL sub_24F87C7F4(int *a1)
{
  return sub_24F8A2D58(*a1, *v1);
}

uint64_t sub_24F87C800(unsigned int *a1)
{
  return sub_24F8A2D98(*a1);
}

uint64_t sub_24F87C808@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = FTS5TokenFlags.init(rawValue:)(*a1, (_DWORD *)a2);
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_24F87C834@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = FTS5TokenFlags.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t FTS5WrapperTokenizer.tokenize(context:tokenization:pText:nText:tokenCallback:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  int v11 = *a2;
  v15[1] = a7;
  _OWORD v15[2] = a1;
  int v16 = v11;
  uint64_t v17 = a5;
  swift_unknownObjectRetain();
  sub_24F87C920((uint64_t)v15, v11, a3, a4, a6, a7, &v14);
  uint64_t v12 = v14;
  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_24F87C920@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _DWORD *a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
  uint64_t v13 = v12;
  uint64_t ObjectType = swift_getObjectType();
  int v16 = a2;
  LODWORD(a4) = (*(uint64_t (**)(uint64_t, int *, uint64_t, uint64_t, uint64_t (*)(), uint64_t, uint64_t))(v13 + 8))(a1, &v16, a3, a4, sub_24F87CF80, ObjectType, v13);
  uint64_t result = swift_unknownObjectRelease();
  *a7 = a4;
  return result;
}

unint64_t sub_24F87C9F8()
{
  unint64_t result = qword_269A2C230;
  if (!qword_269A2C230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C230);
  }
  return result;
}

unint64_t sub_24F87CA48()
{
  unint64_t result = qword_269A2C238;
  if (!qword_269A2C238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C238);
  }
  return result;
}

unint64_t sub_24F87CA98()
{
  unint64_t result = qword_269A2A0C0;
  if (!qword_269A2A0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2A0C0);
  }
  return result;
}

unint64_t sub_24F87CAE8()
{
  unint64_t result = qword_269A2A190;
  if (!qword_269A2A190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2A190);
  }
  return result;
}

ValueMetadata *type metadata accessor for FTS5TokenFlags()
{
  return &type metadata for FTS5TokenFlags;
}

uint64_t dispatch thunk of FTS5WrapperTokenizer.wrappedTokenizer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FTS5WrapperTokenizer.accept(token:flags:for:tokenCallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t sub_24F87CB80(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6)
{
  uint64_t v12 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = sub_24F8CE860();
  MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3) {
    return 0;
  }
  (*(void (**)(char *, void))(v14 + 104))(v16, *MEMORY[0x263F06F00]);
  uint64_t v17 = MEMORY[0x2533630C0](a3, a4, v16);
  unint64_t v19 = v18;
  sub_24F8CEDC0();
  uint64_t v20 = sub_24F8CEDA0();
  uint64_t v22 = v21;
  uint64_t result = sub_24F783E24(v17, v19);
  if (!v22) {
    return 0;
  }
  uint64_t v32 = v20;
  if (a1)
  {
    int v24 = a6;
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = *(void *)(a1 + 16);
    int v27 = *(_DWORD *)(a1 + 24);
    uint64_t v28 = *(void *)(a1 + 32);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v31 = (uint64_t)&v31;
    v33[0] = a2;
    LODWORD(v34) = v27;
    MEMORY[0x270FA5388](ObjectType);
    *(&v31 - 4) = v28;
    *(&v31 - 3) = v26;
    *((_DWORD *)&v31 - 4) = a5;
    *((_DWORD *)&v31 - 3) = v24;
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, _DWORD *, uint64_t *, uint64_t (*)(uint64_t, unint64_t, unsigned int *), uint64_t *, uint64_t, uint64_t))(v25 + 24);
    swift_unknownObjectRetain_n();
    v30(v32, v22, v33, &v34, sub_24F87CF84, &v31 - 6, ObjectType, v25);
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F87CE78(uint64_t a1, unint64_t a2, unsigned int *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v9 = *a3;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24F87CFA4(a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v10 + 16) >> 31)
  {
    __break(1u);
  }
  else
  {
    int v12 = a4(a5, v9, v10 + 32);
    if (v12)
    {
      int v13 = v12;
      sub_24F7DC6DC();
      swift_allocError();
      *(_DWORD *)uint64_t v14 = v13;
      *(void *)(v14 + 8) = 0xD000000000000015;
      *(void *)(v14 + 16) = 0x800000024F8D42E0;
      *(_OWORD *)(v14 + 24) = 0u;
      *(_OWORD *)(v14 + 40) = 0u;
      *(unsigned char *)(v14 + 56) = 0;
      swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24F87CF84(uint64_t a1, unint64_t a2, unsigned int *a3)
{
  return sub_24F87CE78(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_24F87CFA4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      uint64_t v3 = sub_24F87D040(v2, 0);
      uint64_t result = sub_24F8CF7E0();
      if (v5) {
        break;
      }
      if (result == v2) {
        return (uint64_t)v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = sub_24F8CEF00();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24F87D040(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_24F781274(&qword_26B1F5360);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  void v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24F87D0A8(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v44 = a5;
  uint64_t v45 = a8;
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  sub_24F77AD10();
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v10);
  sub_24F77BBBC();
  uint64_t v53 = v11;
  swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v54 = v12;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v47 = (char *)&v39 - v15;
  MEMORY[0x270FA5388](v14);
  sub_24F77BBBC();
  uint64_t v48 = v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v46 = v18;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v42 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v24 = sub_24F8CF350();
  if (!v24) {
    return sub_24F8CF110();
  }
  uint64_t v25 = v24;
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v57 = sub_24F8CF8E0();
  uint64_t v49 = sub_24F8CF8F0();
  sub_24F8CF890();
  uint64_t v41 = v23;
  uint64_t result = sub_24F8CF340();
  if (v25 < 0)
  {
    __break(1u);
  }
  else
  {
    int v27 = (void (**)(char *))(v54 + 16);
    uint64_t v50 = v54 + 8;
    uint64_t v54 = a6;
    uint64_t v28 = v47;
    unint64_t v29 = v41;
    while (1)
    {
      uint64_t v30 = (void (*)(char *, void))sub_24F8CF450();
      (*v27)(v28);
      v30(v56, 0);
      uint64_t v31 = v55;
      v51(v28, v53);
      if (v31) {
        break;
      }
      uint64_t v55 = 0;
      uint64_t v32 = sub_24F78013C();
      v33(v32);
      sub_24F8CF8D0();
      sub_24F8CF370();
      if (!--v25)
      {
        uint64_t v34 = v46;
        long long v35 = v42;
        uint64_t v36 = v40;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v42, v29, v40);
        sub_24F8CF760();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
        return v57;
      }
    }
    uint64_t v37 = sub_24F78013C();
    v38(v37);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v40);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v45, v53, v44);
  }
  return result;
}

GRDBInternal::SQL __swiftcall SQL.init(sql:arguments:)(Swift::String sql, GRDBInternal::StatementArguments arguments)
{
  rawValue = (long long *)arguments.values._rawValue;
  object = sql._object;
  uint64_t countAndFlagsBits = sql._countAndFlagsBits;
  unint64_t v6 = v2;
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24F8DDBF0;
  v9[0] = countAndFlagsBits;
  v9[1] = object;
  long long v10 = *rawValue;
  sub_24F7725D4(v9);
  result.elements._rawValue = (void *)sub_24F76C344((uint64_t)v9, v7 + 32);
  *unint64_t v6 = v7;
  return result;
}

uint64_t SQL.sqlExpression.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F87D9C8((void (*)(void *))sub_24F7A45A0, (void (*)(void *, uint64_t))sub_24F76F710, a1);
}

uint64_t SQL.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24F8DDBF0;
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  sub_24F7811D0(a1, v6);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v5 + 8) + 8))(v8, v6);
  sub_24F766784(v8);
  sub_24F76C344((uint64_t)v8, v4 + 32);
  *a2 = v4;
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)a1);
}

uint64_t SQL.isEmpty.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (!v2) {
    return 1;
  }
  sub_24F76C344(v1 + 32, (uint64_t)v8);
  sub_24F76C344((uint64_t)v8, (uint64_t)v9);
  if (!sub_24F76C840((uint64_t)v9))
  {
    uint64_t v4 = v1 + 216;
    do
    {
      uint64_t v5 = (void *)sub_24F76C650((uint64_t)v9);
      unint64_t v6 = v5[1];
      uint64_t v7 = *v5 & 0xFFFFFFFFFFFFLL;
      if ((v6 & 0x2000000000000000) != 0) {
        uint64_t v7 = HIBYTE(v6) & 0xF;
      }
      if (v7) {
        break;
      }
      if (!--v2) {
        return 1;
      }
      sub_24F76C344(v4, (uint64_t)v8);
      sub_24F76C344((uint64_t)v8, (uint64_t)v9);
      v4 += 184;
    }
    while (!sub_24F76C840((uint64_t)v9));
  }
  return 0;
}

uint64_t SQL.build(_:)(void *a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  type metadata accessor for StatementArgumentsSink();
  swift_allocObject();
  swift_retain();
  uint64_t v7 = sub_24F778A30(0);
  unint64_t v8 = MEMORY[0x263F8EE78];
  sub_24F778B08();
  type metadata accessor for SQLGenerationContext();
  swift_allocObject();
  uint64_t v9 = sub_24F779224(a2, v7, v8);
  swift_retain();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_24F76BCC0(v10, (uint64_t)v9);
  if (v3)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    uint64_t v6 = sub_24F8CED30();
    swift_bridgeObjectRelease();
    sub_24F778A9C(a1);
    swift_release();
  }
  return v6;
}

void static SQL.+ infix(_:_:)(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7933C8();
}

void static SQL.+= infix(_:_:)()
{
}

Swift::Void __swiftcall SQL.append(literal:)(GRDBInternal::SQL literal)
{
  swift_bridgeObjectRetain();
  sub_24F7933C8();
}

Swift::Void __swiftcall SQL.append(sql:arguments:)(Swift::String sql, GRDBInternal::StatementArguments arguments)
{
  uint64_t v2 = *(void *)arguments.values._rawValue;
  uint64_t v3 = *((void *)arguments.values._rawValue + 1);
  Swift::String v5 = sql;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  sub_24F7725D4(&v5);
  sub_24F76C344((uint64_t)&v5, (uint64_t)v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F8315DC((uint64_t)v4);
}

uint64_t SQL.sqlSelection.getter@<X0>(uint64_t a1@<X8>)
{
  v4[0] = *v1;
  sub_24F799834(v4);
  sub_24F7997BC((uint64_t)v4, a1);
  return swift_bridgeObjectRetain();
}

uint64_t SQL.sqlOrdering.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F87D9C8((void (*)(void *))sub_24F8095BC, (void (*)(void *, uint64_t))sub_24F808CB0, a1);
}

uint64_t sub_24F87D9C8@<X0>(void (*a1)(void *)@<X0>, void (*a2)(void *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  v7[0] = *v3;
  a1(v7);
  a2(v7, a3);
  return swift_bridgeObjectRetain();
}

void Sequence<>.joined(separator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24F77E354();
  if (v9)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v7;
    uint64_t v12 = sub_24F781274(&qword_26B1F51A0);
    uint64_t v14 = sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F87DBA4, 0, a3, v12, MEMORY[0x263F8E628], a4, MEMORY[0x263F8E658], v13);
    v17[0] = v11;
    v17[1] = v10;
    void v17[2] = MEMORY[0x263F8EE78];
    _OWORD v17[3] = MEMORY[0x263F8EE80];
    sub_24F7725D4(v17);
    sub_24F76C344((uint64_t)v17, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v15 = sub_24F794CA4(__dst);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F87DE00(v14, v15);
  }
  else
  {
    sub_24F781274(&qword_26B1F51A0);
    sub_24F778988(&qword_269A2C240, &qword_26B1F51A0);
    uint64_t v16 = sub_24F8CF030();
  }
  *uint64_t v4 = v16;
}

uint64_t sub_24F87DBA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

void Collection<>.joined(separator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24F77E354();
  if (v9)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v7;
    uint64_t v12 = sub_24F781274(&qword_26B1F51A0);
    uint64_t v14 = sub_24F87D0A8((void (*)(char *, uint64_t))sub_24F87EB58, 0, a3, v12, MEMORY[0x263F8E628], a4, MEMORY[0x263F8E658], v13);
    v17[0] = v11;
    v17[1] = v10;
    void v17[2] = MEMORY[0x263F8EE78];
    _OWORD v17[3] = MEMORY[0x263F8EE80];
    sub_24F7725D4(v17);
    sub_24F76C344((uint64_t)v17, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v15 = sub_24F794CA4(__dst);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F87DE00(v14, v15);
  }
  else
  {
    sub_24F781274(&qword_26B1F51A0);
    sub_24F778988(&qword_269A2C240, &qword_26B1F51A0);
    uint64_t v16 = sub_24F8CF030();
  }
  *uint64_t v4 = v16;
}

uint64_t _s12GRDBInternal3SQLV20unicodeScalarLiteralACSS_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_24F780F38(MEMORY[0x263F8EE78], v9);
  long long v8 = v9[0];
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24F8DDBF0;
  *(void *)&v9[0] = a1;
  *((void *)&v9[0] + 1) = a2;
  v9[1] = v8;
  sub_24F7725D4(v9);
  uint64_t result = sub_24F76C344((uint64_t)v9, v6 + 32);
  *a3 = v6;
  return result;
}

GRDBInternal::SQL sub_24F87DDF4(Swift::String *a1)
{
  return SQL.init(stringLiteral:)(*a1);
}

void sub_24F87DE00(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  if (!*(void *)(a2 + 16))
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v3; ++i)
      {
        uint64_t v12 = swift_bridgeObjectRetain();
        sub_24F87E3F8(v12);
      }
      swift_release();
      swift_bridgeObjectRelease_n();
      return;
    }
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  if (!v3) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_24F87E3F8(v4);
  unint64_t v5 = v3 - 1;
  if (v3 == 1)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    swift_release();
    return;
  }
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >= 2 && v3 <= v6)
  {
    long long v8 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v9 = *v8++;
      swift_bridgeObjectRetain();
      uint64_t v10 = swift_retain();
      sub_24F87E74C(v10);
      sub_24F87E3F8(v9);
      --v5;
    }
    while (v5);
    goto LABEL_10;
  }
  __break(1u);
}

unint64_t sub_24F87DF3C()
{
  unint64_t result = qword_269A2C248;
  if (!qword_269A2C248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C248);
  }
  return result;
}

unint64_t sub_24F87DF8C()
{
  unint64_t result = qword_269A2C250;
  if (!qword_269A2C250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C250);
  }
  return result;
}

unint64_t sub_24F87DFDC()
{
  unint64_t result = qword_269A2C258;
  if (!qword_269A2C258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C258);
  }
  return result;
}

uint64_t *initializeWithCopy for SQL.Element(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a2[4];
  uint64_t v4 = a2[5];
  uint64_t v5 = a2[6];
  uint64_t v6 = a2[7];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  uint64_t v20 = a2[16];
  uint64_t v21 = a2[17];
  uint64_t v22 = a2[18];
  uint64_t v23 = a2[19];
  unint64_t v24 = a2[20];
  uint64_t v25 = a2[21];
  uint64_t v26 = a2[22];
  uint64_t v7 = a2[8];
  uint64_t v8 = *a2;
  unint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_24F76C660(*a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  *a1 = v8;
  a1[1] = v9;
  a1[2] = v10;
  a1[3] = v11;
  a1[4] = v3;
  a1[5] = v4;
  a1[6] = v5;
  a1[7] = v6;
  a1[8] = v7;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  return a1;
}

uint64_t assignWithCopy for SQL.Element(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v28 = a2[9];
  uint64_t v29 = a2[10];
  uint64_t v30 = a2[11];
  uint64_t v31 = a2[12];
  uint64_t v32 = a2[13];
  uint64_t v33 = a2[14];
  uint64_t v34 = a2[15];
  uint64_t v35 = a2[16];
  uint64_t v36 = a2[17];
  uint64_t v37 = a2[18];
  uint64_t v38 = a2[19];
  unint64_t v39 = a2[20];
  uint64_t v40 = a2[21];
  uint64_t v41 = a2[22];
  sub_24F76C660(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v12 = *(void *)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v28;
  *(void *)(a1 + 80) = v29;
  *(void *)(a1 + 88) = v30;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v31;
  *(void *)(a1 + 104) = v32;
  *(void *)(a1 + 112) = v33;
  *(void *)(a1 + 120) = v34;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v35;
  *(void *)(a1 + 136) = v36;
  *(void *)(a1 + 144) = v37;
  *(void *)(a1 + 152) = v38;
  long long v26 = *(_OWORD *)(a1 + 160);
  *(void *)(a1 + 160) = v39;
  *(void *)(a1 + 168) = v40;
  *(void *)(a1 + 176) = v41;
  sub_24F76C470(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26);
  return a1;
}

uint64_t assignWithTake for SQL.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 176);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v18 = *(_OWORD *)(a1 + 160);
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  long long v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  long long v21 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v21;
  long long v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
  long long v23 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v23;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = v3;
  sub_24F76C470(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18);
  return a1;
}

void *sub_24F87E3B0(void *result, char a2)
{
  uint64_t v2 = result[13] & 1;
  unint64_t v3 = result[20] & 0xE000000000FFC1FFLL;
  result[8] &= 1uLL;
  result[13] = v2;
  result[20] = v3 | ((unint64_t)(a2 & 7) << 58);
  return result;
}

ValueMetadata *type metadata accessor for SQL.Element()
{
  return &type metadata for SQL.Element;
}

void sub_24F87E3F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v6 = *(void *)(v3 + 24) >> 1, v6 < v4 + v2))
  {
    sub_24F7956DC();
    uint64_t v3 = *v1;
    uint64_t v6 = *(void *)(*v1 + 24) >> 1;
  }
  uint64_t v7 = v6 - *(void *)(v3 + 16);
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    if (v7 < v2)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_arrayInitWithCopy();
    if (v2)
    {
      uint64_t v9 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v9, v2);
      uint64_t v11 = v9 + v2;
      if (v10)
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      *(void *)(v3 + 16) = v11;
    }
  }
  else if (v2)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v2 != v7)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v12 = *(void *)(v3 + 16);
  unint64_t v13 = *(void *)(a1 + 16);
  if (v8 == v13)
  {
    sub_24F7996D0((uint64_t)v28);
    sub_24F87EAF0((uint64_t)v28, (uint64_t)v29);
LABEL_16:
    sub_24F87EAF0((uint64_t)v29, (uint64_t)v27);
    sub_24F87EAF0((uint64_t)v27, (uint64_t)v28);
    if (sub_24F7996B8((uint64_t)v28) == 1) {
      goto LABEL_17;
    }
    while (1)
    {
      if (v12 + 1 > *(void *)(v3 + 24) >> 1) {
        sub_24F7956DC();
      }
      uint64_t v3 = *v1;
      uint64_t v14 = *(void *)(*v1 + 24) >> 1;
      sub_24F87EAF0((uint64_t)v29, (uint64_t)v25);
      sub_24F87EAF0((uint64_t)v25, (uint64_t)v26);
      if (sub_24F7996B8((uint64_t)v26) != 1 && v12 < v14) {
        break;
      }
      unint64_t v16 = v8;
LABEL_39:
      *(void *)(v3 + 16) = v12;
      sub_24F87EAF0((uint64_t)v29, (uint64_t)v27);
      sub_24F87EAF0((uint64_t)v27, (uint64_t)v28);
      unint64_t v8 = v16;
      if (sub_24F7996B8((uint64_t)v28) == 1) {
        goto LABEL_17;
      }
    }
    unint64_t v16 = v8;
    while (1)
    {
      uint64_t v17 = v3 + 32 + 184 * v12;
      uint64_t v18 = v12 + 1;
      while (1)
      {
        uint64_t v12 = v18;
        sub_24F87EAF0((uint64_t)v25, (uint64_t)v24);
        sub_24F76C344((uint64_t)v24, v17);
        if (v16 != v13) {
          break;
        }
        sub_24F7996D0((uint64_t)v23);
        sub_24F87EAF0((uint64_t)v23, (uint64_t)v29);
        sub_24F87EAF0((uint64_t)v29, (uint64_t)v25);
        sub_24F87EAF0((uint64_t)v25, (uint64_t)v26);
        int v19 = sub_24F7996B8((uint64_t)v26);
        v17 += 184;
        uint64_t v18 = v12 + 1;
        if (v19 == 1 || v12 >= v14)
        {
          unint64_t v16 = v13;
          goto LABEL_39;
        }
      }
      if ((v8 & 0x8000000000000000) != 0) {
        break;
      }
      if (v16 >= *(void *)(a1 + 16)) {
        goto LABEL_42;
      }
      sub_24F76C344(a1 + 32 + 184 * v16, (uint64_t)v23);
      sub_24F76C344((uint64_t)v23, (uint64_t)v29);
      ++v16;
      nullsub_1(v29);
      sub_24F87EA84((uint64_t)v23);
      sub_24F87EAF0((uint64_t)v29, (uint64_t)v25);
      sub_24F87EAF0((uint64_t)v25, (uint64_t)v26);
      if (sub_24F7996B8((uint64_t)v26) == 1 || v12 >= v14) {
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v8 < v13)
  {
    sub_24F76C344(a1 + 184 * v8 + 32, (uint64_t)v28);
    sub_24F76C344((uint64_t)v28, (uint64_t)v29);
    ++v8;
    nullsub_1(v29);
    sub_24F87EA84((uint64_t)v28);
    goto LABEL_16;
  }
LABEL_47:
  __break(1u);
}

void sub_24F87E74C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v6 = *(void *)(v3 + 24) >> 1, v6 < (uint64_t)(v4 + v2)))
  {
    sub_24F7956DC();
    uint64_t v3 = *v1;
    uint64_t v6 = *(void *)(*v1 + 24) >> 1;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = v6 - v7;
  if (v2)
  {
    if (v8 < (uint64_t)v2)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    swift_arrayInitWithCopy();
    uint64_t v9 = *(void *)(v3 + 16);
    uint64_t v7 = v9 + v2;
    if (__OFADD__(v9, v2))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    *(void *)(v3 + 16) = v7;
  }
  if (v2 != v8)
  {
LABEL_15:
    swift_release();
    *uint64_t v1 = v3;
    return;
  }
  unint64_t v10 = *(void *)(a1 + 16);
  if (v2 == v10)
  {
    sub_24F7996D0((uint64_t)v25);
    sub_24F87EAF0((uint64_t)v25, (uint64_t)v26);
LABEL_14:
    sub_24F87EAF0((uint64_t)v26, (uint64_t)v24);
    sub_24F87EAF0((uint64_t)v24, (uint64_t)v25);
    if (sub_24F7996B8((uint64_t)v25) == 1) {
      goto LABEL_15;
    }
    while (1)
    {
      if (v7 + 1 > *(void *)(v3 + 24) >> 1) {
        sub_24F7956DC();
      }
      uint64_t v3 = *v1;
      uint64_t v11 = *(void *)(*v1 + 24) >> 1;
      sub_24F87EAF0((uint64_t)v26, (uint64_t)v22);
      sub_24F87EAF0((uint64_t)v22, (uint64_t)v23);
      if (sub_24F7996B8((uint64_t)v23) != 1 && v7 < v11) {
        break;
      }
      unint64_t v13 = v2;
LABEL_37:
      *(void *)(v3 + 16) = v7;
      sub_24F87EAF0((uint64_t)v26, (uint64_t)v24);
      sub_24F87EAF0((uint64_t)v24, (uint64_t)v25);
      unint64_t v2 = v13;
      if (sub_24F7996B8((uint64_t)v25) == 1) {
        goto LABEL_15;
      }
    }
    unint64_t v13 = v2;
    while (1)
    {
      uint64_t v14 = v3 + 32 + 184 * v7;
      uint64_t v15 = v7 + 1;
      while (1)
      {
        uint64_t v7 = v15;
        sub_24F87EAF0((uint64_t)v22, (uint64_t)v21);
        sub_24F76C344((uint64_t)v21, v14);
        if (v13 != v10) {
          break;
        }
        sub_24F7996D0((uint64_t)v20);
        sub_24F87EAF0((uint64_t)v20, (uint64_t)v26);
        sub_24F87EAF0((uint64_t)v26, (uint64_t)v22);
        sub_24F87EAF0((uint64_t)v22, (uint64_t)v23);
        int v16 = sub_24F7996B8((uint64_t)v23);
        v14 += 184;
        uint64_t v15 = v7 + 1;
        if (v16 == 1 || v7 >= v11)
        {
          unint64_t v13 = v10;
          goto LABEL_37;
        }
      }
      if ((v2 & 0x8000000000000000) != 0) {
        break;
      }
      if (v13 >= *(void *)(a1 + 16)) {
        goto LABEL_40;
      }
      sub_24F76C344(a1 + 32 + 184 * v13, (uint64_t)v20);
      sub_24F76C344((uint64_t)v20, (uint64_t)v26);
      ++v13;
      nullsub_1(v26);
      sub_24F87EA84((uint64_t)v20);
      sub_24F87EAF0((uint64_t)v26, (uint64_t)v22);
      sub_24F87EAF0((uint64_t)v22, (uint64_t)v23);
      if (sub_24F7996B8((uint64_t)v23) == 1 || v7 >= v11) {
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v2 < v10)
  {
    sub_24F76C344(a1 + 184 * v2 + 32, (uint64_t)v25);
    sub_24F76C344((uint64_t)v25, (uint64_t)v26);
    ++v2;
    nullsub_1(v26);
    sub_24F87EA84((uint64_t)v25);
    goto LABEL_14;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_24F87EA84(uint64_t a1)
{
  sub_24F76C660(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160));
  return a1;
}

uint64_t sub_24F87EAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(&qword_269A2A0D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F87EB58@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24F87DBA4(a1, a2);
}

uint64_t TableRequest<>.matching(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v6[1];
  if (v12)
  {
    uint64_t v13 = *v6;
    uint64_t v20 = v7;
    uint64_t v21 = v9;
    v19[1] = v8;
    type metadata accessor for TableAlias();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = 0u;
    *(_OWORD *)(v14 + 32) = 0u;
    *(unsigned char *)(v14 + 48) = 0;
    v23[0] = v13;
    v23[1] = v12;
    char v24 = 2;
    sub_24F7667B8((uint64_t)v23);
    sub_24F76F710((uint64_t)v23, (uint64_t)v25);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    memcpy((void *)(v15 + 24), v25, 0xA3uLL);
    v26[0] = v15;
    sub_24F81C4B4((uint64_t)v26);
    sub_24F76F710((uint64_t)v26, (uint64_t)__src);
    int v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_retain();
    v16(v17, a2, a4);
    uint64_t v22[3] = &type metadata for SQLExpression;
    v22[4] = &protocol witness table for SQLExpression;
    v22[0] = swift_allocObject();
    memcpy((void *)(v22[0] + 16), __src, 0xA3uLL);
    swift_retain();
    FilteredRequest.filter(_:)((uint64_t)v22, a2, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, a2);
    return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v22);
  }
  else
  {
    return FilteredRequest.none()(a2, v7);
  }
}

{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void v19[2];
  uint64_t v20;
  uint64_t v21;
  void v22[5];
  void v23[2];
  char v24;
  unsigned char v25[168];
  void v26[21];
  unsigned char __src[176];
  uint64_t vars8;

  uint64_t v6 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v6[1];
  if (v12)
  {
    uint64_t v13 = *v6;
    uint64_t v20 = v7;
    uint64_t v21 = v9;
    v19[1] = v8;
    type metadata accessor for TableAlias();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = 0u;
    *(_OWORD *)(v14 + 32) = 0u;
    *(unsigned char *)(v14 + 48) = 0;
    v23[0] = v13;
    v23[1] = v12;
    char v24 = 2;
    sub_24F7667B8((uint64_t)v23);
    sub_24F76F710((uint64_t)v23, (uint64_t)v25);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    memcpy((void *)(v15 + 24), v25, 0xA3uLL);
    v26[0] = v15;
    sub_24F81C4B4((uint64_t)v26);
    sub_24F76F710((uint64_t)v26, (uint64_t)__src);
    int v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16);
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_retain();
    v16(v17, a2, a4);
    uint64_t v22[3] = &type metadata for SQLExpression;
    v22[4] = &protocol witness table for SQLExpression;
    v22[0] = swift_allocObject();
    memcpy((void *)(v22[0] + 16), __src, 0xA3uLL);
    swift_retain();
    FilteredRequest.filter(_:)((uint64_t)v22, a2, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, a2);
    return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v22);
  }
  else
  {
    return FilteredRequest.none()(a2, v7);
  }
}

uint64_t sub_24F87EDC4()
{
  swift_release();
  sub_24F77F674(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 184) | (*(unsigned __int8 *)(v0 + 186) << 16), *(__n128 *)(v0 + 88), *(__n128 *)(v0 + 104), *(__n128 *)(v0 + 120), *(__n128 *)(v0 + 136), *(__n128 *)(v0 + 152));
  return swift_deallocObject();
}

uint64_t sub_24F87EE3C()
{
  sub_24F77F674(v0[1].n128_i64[0], v0[1].n128_u64[1], v0[2].n128_i64[0], v0[2].n128_u64[1], v0[3].n128_i64[0], v0[3].n128_i64[1], v0[4].n128_i64[0], v0[4].n128_i64[1], v0[11].n128_u16[0] | (v0[11].n128_u8[2] << 16), v0[5], v0[6], v0[7], v0[8], v0[9]);
  return swift_deallocObject();
}

void *static TableRecord.matching(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  static TableRecord.all()(a2, a3, __src);
  memcpy(__dst, __src, sizeof(__dst));
  v7[0] = v3;
  v7[1] = v4;
  uint64_t InterfaceRequest = type metadata accessor for QueryInterfaceRequest();
  TableRequest<>.matching(_:)((uint64_t)v7, InterfaceRequest, (uint64_t)&protocol witness table for QueryInterfaceRequest<A>, (uint64_t)&protocol witness table for QueryInterfaceRequest<A>);
  return sub_24F7920F8(__src);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t InterfaceRequest;
  void v7[2];
  unsigned char __dst[162];
  void __src[21];

  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  static TableRecord.all()(a2, a3, __src);
  memcpy(__dst, __src, sizeof(__dst));
  v7[0] = v3;
  v7[1] = v4;
  uint64_t InterfaceRequest = type metadata accessor for QueryInterfaceRequest();
  TableRequest<>.matching(_:)((uint64_t)v7, InterfaceRequest, (uint64_t)&protocol witness table for QueryInterfaceRequest<A>, (uint64_t)&protocol witness table for QueryInterfaceRequest<A>);
  return sub_24F7920F8(__src);
}

uint64_t ColumnExpression.match(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(a3 + 8) + 8) + 8))(__src, a2);
  memcpy(__dst, __src, 0xA3uLL);
  v11[0] = v6;
  v11[1] = v5;
  char v12 = 2;
  sub_24F7667B8((uint64_t)v11);
  sub_24F76F710((uint64_t)v11, (uint64_t)v13);
  memcpy(v8, v13, sizeof(v8));
  swift_bridgeObjectRetain();
  sub_24F816B28(0x484354414DLL, 0xE500000000000000, __dst, a4);
  swift_bridgeObjectRelease();
  return sub_24F799868((uint64_t)__src);
}

{
  uint64_t v5;
  uint64_t v6;
  char v7;
  void v9[21];
  unsigned char __dst[168];
  unsigned char v11[168];
  void __src[22];

  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(a3 + 8) + 8) + 8))(__src, a2);
  memcpy(__dst, __src, 0xA3uLL);
  if (v5)
  {
    v9[0] = v6;
    v9[1] = v5;
    uint64_t v7 = 2;
  }
  else
  {
    v9[0] = 0;
    v9[1] = 0;
    uint64_t v7 = 4;
  }
  LOBYTE(v9[2]) = v7;
  sub_24F7667B8((uint64_t)v9);
  sub_24F76F710((uint64_t)v9, (uint64_t)v11);
  memcpy(v9, v11, 0xA3uLL);
  swift_bridgeObjectRetain();
  sub_24F816B28(0x484354414DLL, 0xE500000000000000, __dst, a4);
  sub_24F799868((uint64_t)v11);
  return sub_24F799868((uint64_t)__src);
}

uint64_t sub_24F87F264()
{
  swift_release();
  sub_24F77F674(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 184) | (*(unsigned __int8 *)(v0 + 186) << 16), *(__n128 *)(v0 + 88), *(__n128 *)(v0 + 104), *(__n128 *)(v0 + 120), *(__n128 *)(v0 + 136), *(__n128 *)(v0 + 152));
  return swift_deallocObject();
}

uint64_t sub_24F87F2DC()
{
  sub_24F77F674(v0[1].n128_i64[0], v0[1].n128_u64[1], v0[2].n128_i64[0], v0[2].n128_u64[1], v0[3].n128_i64[0], v0[3].n128_i64[1], v0[4].n128_i64[0], v0[4].n128_i64[1], v0[11].n128_u16[0] | (v0[11].n128_u8[2] << 16), v0[5], v0[6], v0[7], v0[8], v0[9]);
  return swift_deallocObject();
}

uint64_t sub_24F87F4C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_24F781818();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (char *)(a1 + 48);
    do
    {
      char v4 = *v3;
      uint64_t v9 = *((void *)v3 - 2);
      unint64_t v10 = *((void *)v3 - 1);
      sub_24F781F34(v9, v10, *v3);
      swift_getAtKeyPath();
      sub_24F781F10(v9, v10, v4);
      long long v5 = v11;
      unint64_t v6 = *(void *)(v13 + 16);
      if (v6 >= *(void *)(v13 + 24) >> 1)
      {
        sub_24F781818();
        long long v5 = v11;
      }
      v3 += 24;
      *(void *)(v13 + 16) = v6 + 1;
      uint64_t v7 = v13 + 24 * v6;
      *(_OWORD *)(v7 + 32) = v5;
      *(unsigned char *)(v7 + 48) = v12;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_24F87F610(uint64_t a1, uint64_t (*a2)(void *, uint64_t *))
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  uint64_t result = sub_24F770668(a1);
  if (v7) {
    goto LABEL_23;
  }
  int v8 = *(_DWORD *)(v4 + 36);
  if (v8 != v6)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v9 = result;
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  if (result != v10)
  {
    uint64_t v11 = v4 + 64;
    uint64_t v18 = v4 + 64;
    while ((v9 & 0x8000000000000000) == 0 && v9 < v10)
    {
      if (v8 != v6 || (*(void *)(v11 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
        goto LABEL_18;
      }
      int v20 = v8;
      uint64_t v12 = v4;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v9);
      uint64_t v14 = v13[1];
      uint64_t v15 = *(void *)(*(void *)(v4 + 56) + 8 * v9);
      v21[0] = *v13;
      v21[1] = v14;
      uint64_t v22 = v15;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v16 = v3;
      char v17 = a2(v21, &v22);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 || (v17 & 1) != 0) {
        return v9;
      }
      if (v9 >= -(-1 << *(unsigned char *)(v12 + 32))) {
        goto LABEL_19;
      }
      uint64_t v4 = v12;
      uint64_t v11 = v18;
      if ((*(void *)(v18 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
        goto LABEL_20;
      }
      if (*(_DWORD *)(v4 + 36) != v20) {
        goto LABEL_21;
      }
      uint64_t v3 = 0;
      uint64_t result = sub_24F8CF6F0();
      uint64_t v9 = result;
      int v6 = *(_DWORD *)(v4 + 36);
      uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
      int v8 = v6;
      if (result == v10) {
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  return 0;
}

uint64_t Database.makeStatement(sql:)(uint64_t a1, uint64_t a2)
{
  return sub_24F87F808(a1, a2, 0);
}

uint64_t sub_24F87F808(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = v4;
  type metadata accessor for SQLStatementCursor();
  v17[0] = 0;
  v17[1] = 0;
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24F77AA04(v3, a1, a2, v17, a3);
  uint64_t v9 = sub_24F7726C0();
  if (!v4)
  {
    uint64_t v5 = v9;
    if (v9)
    {
      uint64_t v11 = sub_24F7726C0();
      swift_release();
      if (v11)
      {
        sub_24F7DC6DC();
        uint64_t v12 = (void *)sub_24F770FA4();
        sub_24F77F8BC((uint64_t)v12, v13);
        swift_willThrow();
        sub_24F7DC6DC();
        uint64_t v14 = sub_24F770FA4();
        sub_24F77F8BC(v14, v15);
        swift_willThrow();

        swift_release();
      }
    }
    else
    {
      sub_24F7DC6DC();
      sub_24F770FA4();
      *(_DWORD *)uint64_t v10 = 1;
      *(_OWORD *)(v10 + 8) = xmmword_24F8E4BC0;
      *(void *)(v10 + 24) = a1;
      *(void *)(v10 + 32) = a2;
      *(void *)(v10 + 40) = 0;
      *(void *)(v10 + 48) = 0;
      *(unsigned char *)(v10 + 56) = 0;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
  }
  swift_release();
  return v5;
}

uint64_t Database.makeStatement(literal:)()
{
  sub_24F7711F4();
  swift_allocObject();
  swift_retain();
  uint64_t v1 = sub_24F778A30(0);
  sub_24F778B08();
  sub_24F77B06C();
  swift_allocObject();
  uint64_t v2 = sub_24F77E36C();
  swift_retain();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_24F76BCC0(v3, (uint64_t)v2);
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    uint64_t v4 = sub_24F7831C8();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    sub_24F778A9C(&v13);
    swift_release();
    uint64_t v7 = v13;
    uint64_t v8 = v14;
    uint64_t v1 = sub_24F87F808(v4, v6, 0);
    swift_bridgeObjectRelease();
    if (*(void *)(v7 + 16) || *(void *)(v8 + 16))
    {
      uint64_t v13 = v7;
      uint64_t v14 = v8;
      uint64_t v11 = &v13;
      Statement.setArguments(_:)(*(GRDBInternal::StatementArguments *)(&v10 - 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v1;
}

uint64_t Database.makeSelectStatement(sql:)(uint64_t a1, uint64_t a2)
{
  return sub_24F87F808(a1, a2, 0);
}

uint64_t Database.makeSelectStatement(literal:)()
{
  return Database.makeStatement(literal:)();
}

uint64_t Database.cachedSelectStatement(sql:)(uint64_t a1, uint64_t a2)
{
  return Database.cachedStatement(sql:)(a1, a2);
}

uint64_t Database.cachedSelectStatement(literal:)()
{
  return Database.cachedStatement(literal:)();
}

uint64_t Database.allStatements(sql:arguments:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v8 = *a3;
  type metadata accessor for SQLStatementCursor();
  uint64_t v6 = swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24F777E70(v8);
  sub_24F77AA04(v3, a1, a2, &v8, 0);
  return v6;
}

uint64_t sub_24F87FCA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F7726C0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_24F87FCD4()
{
  return Statement.sql.getter();
}

double sub_24F87FCF8@<D0>(_OWORD *a1@<X8>)
{
  Statement.arguments.getter(&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t Database.statementDidFail(_:withResultCode:)(uint64_t a1, int a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = sub_24F77318C();
  uint64_t v7 = v6;
  uint64_t v36 = v6;
  swift_bridgeObjectRetain();
  sub_24F87F610(v7, (uint64_t (*)(void *, uint64_t *))sub_24F880074);
  sub_24F77F160();
  int v10 = v9 & ~v8;
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = sub_24F781274(&qword_26B1F5378);
    sub_24F77EB08(v11, v12);
    sub_24F78163C();
    swift_release();
    uint64_t v7 = v36;
  }
  sub_24F773180(v5, v7);
  uint64_t v13 = sub_24F775A78();
  uint64_t v15 = v14;
  uint64_t v36 = v14;
  swift_bridgeObjectRetain();
  sub_24F87F610(v15, (uint64_t (*)(void *, uint64_t *))sub_24F880298);
  sub_24F77F160();
  int v18 = v17 & ~v16;
  swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v19 = sub_24F781274(&qword_26B1F5378);
    sub_24F77EB08(v19, v20);
    sub_24F78163C();
    swift_release();
  }
  sub_24F775A6C(v13, v36);
  sub_24F77CC40();
  sub_24F79FFA4();
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v22 = (uint64_t)Database.lastErrorMessage.getter();
    uint64_t v24 = v23;
    uint64_t v25 = Statement.sql.getter();
    uint64_t v27 = v26;
    Statement.arguments.getter(v35);
    uint64_t v28 = v35[0];
    uint64_t v29 = v35[1];
    char v30 = *(unsigned char *)(v4 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 26);
    sub_24F7DC6DC();
    sub_24F770FA4();
    uint64_t v32 = v31;
    if (!v24)
    {
      uint64_t result = (uint64_t)sqlite3_errstr(a2);
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v22 = sub_24F8CEED0();
      uint64_t v24 = v33;
    }
    *(_DWORD *)uint64_t v32 = a2;
    *(void *)(v32 + 8) = v22;
    *(void *)(v32 + 16) = v24;
    *(void *)(v32 + 24) = v25;
    *(void *)(v32 + 32) = v27;
    *(void *)(v32 + 40) = v28;
    *(void *)(v32 + 48) = v29;
    *(unsigned char *)(v32 + 56) = v30;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24F87FF54()
{
  swift_arrayDestroy();
  uint64_t v0 = sub_24F77FA4C();
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24F87FF90()
{
  swift_arrayDestroy();
  uint64_t v0 = sub_24F77FA4C();
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24F87FFCC()
{
  swift_arrayDestroy();
  uint64_t v0 = sub_24F77FA4C();
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24F880008()
{
  sub_24F781274(&qword_269A2A588);
  swift_arrayDestroy();
  uint64_t v0 = sub_24F77FA4C();
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24F880064()
{
  return sub_24F87FCD4();
}

double sub_24F88006C@<D0>(_OWORD *a1@<X8>)
{
  return sub_24F87FCF8(a1);
}

BOOL sub_24F880074(uint64_t a1, void *a2)
{
  return *a2 == v2;
}

uint64_t sub_24F880084(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_24F7705C4(result, a2, a3 & 1);
  }
  return result;
}

uint64_t method lookup function for SQLStatementCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SQLStatementCursor);
}

uint64_t dispatch thunk of SQLStatementCursor.next()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t destroy for StatementCache()
{
  swift_unownedRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *_s12GRDBInternal14StatementCacheVwCP_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = swift_unownedRetain();
  uint64_t v5 = *(void *)(a2 + 8);
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for StatementCache(uint64_t *a1, uint64_t a2)
{
  *a1 = swift_unownedRetain();
  swift_unownedRelease();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for StatementCache(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StatementCache()
{
  return &type metadata for StatementCache;
}

uint64_t sub_24F880218()
{
  return 24;
}

__n128 sub_24F880224(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t Database.makeUpdateStatement(literal:)()
{
  return Database.makeSelectStatement(literal:)();
}

uint64_t Database.cachedUpdateStatement(literal:)()
{
  return Database.cachedSelectStatement(literal:)();
}

uint64_t Database.cachedUpdateStatement(sql:)(uint64_t a1, uint64_t a2)
{
  return Database.cachedSelectStatement(sql:)(a1, a2);
}

uint64_t Database.makeUpdateStatement(sql:)(uint64_t a1, uint64_t a2)
{
  return Database.makeSelectStatement(sql:)(a1, a2);
}

BOOL sub_24F880298(uint64_t a1, void *a2)
{
  return sub_24F880074(a1, a2);
}

uint64_t sub_24F8802B4()
{
  sub_24F781274(&qword_26B1F7EA8);
  swift_allocObject();
  uint64_t result = sub_24F8CEBB0();
  qword_26B1F7F58 = result;
  return result;
}

uint64_t sub_24F8802F8(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + 24) = 0;
  sub_24F781274(&qword_26B1F7F68);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24F8DE5E0;
  *(void *)(v4 + 32) = a1;
  uint64_t v6 = v4;
  sub_24F8CF0B0();
  *(void *)(v2 + 16) = v6;
  return v2;
}

uint64_t sub_24F880368(uint64_t a1)
{
  if (qword_26B1F7BA0 != -1) {
    swift_once();
  }
  sub_24F8CF4E0();
  uint64_t result = swift_release();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    swift_allocObject();
    sub_24F8802F8(a1);
    swift_retain();
    sub_24F8CF500();
    return swift_release();
  }
  return result;
}

uint64_t sub_24F880448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F8804A0(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_24F880850);
}

uint64_t sub_24F880474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F8804A0(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_24F8809B4);
}

uint64_t sub_24F8804A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  sub_24F780158();
  sub_24F773D00();
  uint64_t v7 = *(void *)(v6 + 16);
  sub_24F77F8F0();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_24F792CDC(v8);
  swift_endAccess();
  uint64_t v9 = sub_24F77EB34();
  a6(v9);
  *(void *)(v6 + 16) = v7;
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F880574(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t))
{
  sub_24F773D00();
  uint64_t v7 = *(void *)(a2 + 16);
  sub_24F77F8F0();
  sub_24F77E398();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_24F792CDC(v8);
  swift_endAccess();
  sub_24F880A50(a3, a4);
  uint64_t v10 = v9 & 1;
  *(void *)(a2 + 16) = v7;
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24F880640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F88066C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t))sub_24F880934);
}

uint64_t sub_24F88066C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  sub_24F780158();
  sub_24F773D00();
  uint64_t v8 = *(void *)(v6 + 16);
  sub_24F77F8F0();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_24F792CDC(v9);
  swift_endAccess();
  uint64_t v10 = sub_24F77EB34();
  uint64_t v11 = a6(v10);
  *(void *)(v6 + 16) = v8;
  swift_release();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_24F88073C(uint64_t a1, void (*a2)(uint64_t))
{
  sub_24F773D00();
  uint64_t v4 = *(void *)(v2 + 16);
  sub_24F77F8F0();
  sub_24F77E398();
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_24F792CDC(v5);
  uint64_t v6 = swift_endAccess();
  a2(v6);
  *(void *)(v2 + 16) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8807F4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_24F88081C()
{
  sub_24F8807F4();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

void sub_24F880850(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  a2(v4);
  if (v2)
  {
    sub_24F88B464(v4, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 119, a1);
  }
  else if ((*(unsigned char *)(v4 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 41) & 1) == 0 {
         && (Database.isInsideTransaction.getter() & 1) != 0)
  }
  {
    sub_24F8CF9D0();
    __break(1u);
  }
}

void sub_24F880934(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  a2(&v4, v3);
  sub_24F88B464(v3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 119, a1);
}

void sub_24F8809B4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned __int8 v5 = Database.isInsideTransaction.getter();
  a2(v4);
  if ((v5 & 1) == 0) {
    sub_24F88B464(v4, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 185, a1);
  }
}

void sub_24F880A50(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned __int8 v5 = Database.isInsideTransaction.getter();
  a2(&v6, v4);
  if ((v5 & 1) == 0) {
    sub_24F88B464(v4, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 185, a1);
  }
}

uint64_t sub_24F880B00@<X0>(uint64_t a1@<X8>)
{
  sub_24F808CB0(v1, (uint64_t)v39);
  sub_24F808CB0((uint64_t)v39, (uint64_t)v40);
  switch(sub_24F808D0C((uint64_t)v40))
  {
    case 2u:
      uint64_t v19 = (void *)sub_24F808DF4((uint64_t)v40);
      sub_24F7831EC(v19, v20, v21, v22, v23, v24, v25, v26, v36, v37, v38[0]);
      sub_24F808DB0((uint64_t)v38);
      break;
    case 3u:
      uint64_t v27 = (void *)sub_24F808DF4((uint64_t)v40);
      sub_24F7831EC(v27, v28, v29, v30, v31, v32, v33, v34, v36, v37, v38[0]);
      sub_24F808D6C((uint64_t)v38);
      break;
    case 4u:
      uint64_t v11 = (void *)sub_24F808DF4((uint64_t)v40);
      sub_24F7831EC(v11, v12, v13, v14, v15, v16, v17, v18, v36, v37, v38[0]);
      sub_24F808D20((uint64_t)v38);
      break;
    case 5u:
      sub_24F808DF4((uint64_t)v40);
      sub_24F8CF9D0();
      __break(1u);
      JUMPOUT(0x24F880C44);
    default:
      uint64_t v3 = (void *)sub_24F808DF4((uint64_t)v40);
      sub_24F7831EC(v3, v4, v5, v6, v7, v8, v9, v10, v36, v37, v38[0]);
      sub_24F808E20((uint64_t)v38);
      break;
  }
  sub_24F808CB0((uint64_t)v38, a1);
  return sub_24F76FA40((uint64_t)v39);
}

uint64_t sub_24F880C5C@<X0>(uint64_t a1@<X8>)
{
  sub_24F808CB0(v1, (uint64_t)v187);
  sub_24F808CB0((uint64_t)v187, (uint64_t)v188);
  switch(sub_24F808D0C((uint64_t)v188))
  {
    case 1u:
      int v28 = (void *)sub_24F808DF4((uint64_t)v188);
      sub_24F77E3BC(v28, v29, v30, v31, v32, v33, v34, v35, v131, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808CB0((uint64_t)v187, (uint64_t)&v142);
      uint64_t v36 = sub_24F808DF4((uint64_t)&v142);
      uint64_t v37 = sub_24F76FA40(v36);
      sub_24F773D18(v37, v38, v39, v40, v41, v42, v43, v44, v134, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163);
      int v45 = sub_24F76FA40((uint64_t)v187);
      sub_24F780174(v45, v46, v47, v48, v49, v50, v51, v52, v135, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808DB0((uint64_t)v186);
      break;
    case 2u:
      uint64_t v53 = (void *)sub_24F808DF4((uint64_t)v188);
      sub_24F77E3BC(v53, v54, v55, v56, v57, v58, v59, v60, v131, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808CB0((uint64_t)v187, (uint64_t)&v142);
      uint64_t v61 = sub_24F808DF4((uint64_t)&v142);
      uint64_t v62 = sub_24F76FA40(v61);
      sub_24F773D18(v62, v63, v64, v65, v66, v67, v68, v69, v136, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163);
      int v70 = sub_24F76FA40((uint64_t)v187);
      sub_24F780174(v70, v71, v72, v73, v74, v75, v76, v77, v137, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808E20((uint64_t)v186);
      break;
    case 3u:
      uint64_t v78 = (void *)sub_24F808DF4((uint64_t)v188);
      sub_24F77E3BC(v78, v79, v80, v81, v82, v83, v84, v85, v131, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808CB0((uint64_t)v187, (uint64_t)&v142);
      uint64_t v86 = sub_24F808DF4((uint64_t)&v142);
      uint64_t v87 = sub_24F76FA40(v86);
      sub_24F773D18(v87, v88, v89, v90, v91, v92, v93, v94, v138, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163);
      int v95 = sub_24F76FA40((uint64_t)v187);
      sub_24F780174(v95, v96, v97, v98, v99, v100, v101, v102, v139, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808D20((uint64_t)v186);
      break;
    case 4u:
      unint64_t v103 = (void *)sub_24F808DF4((uint64_t)v188);
      sub_24F77E3BC(v103, v104, v105, v106, v107, v108, v109, v110, v131, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808CB0((uint64_t)v187, (uint64_t)&v142);
      uint64_t v111 = sub_24F808DF4((uint64_t)&v142);
      uint64_t v112 = sub_24F76FA40(v111);
      sub_24F773D18(v112, v113, v114, v115, v116, v117, v118, v119, v140, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163);
      int v120 = sub_24F76FA40((uint64_t)v187);
      sub_24F780174(v120, v121, v122, v123, v124, v125, v126, v127, v141, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808D6C((uint64_t)v186);
      break;
    case 5u:
      sub_24F808DF4((uint64_t)v188);
      sub_24F76FA40((uint64_t)v187);
      swift_retain();
      sub_24F8511E4();
      uint64_t v129 = v128;
      sub_24F76FA40((uint64_t)v187);
      *(void *)uint64_t v186 = v129;
      sub_24F8095BC((uint64_t)v186);
      break;
    default:
      uint64_t v3 = (void *)sub_24F808DF4((uint64_t)v188);
      sub_24F77E3BC(v3, v4, v5, v6, v7, v8, v9, v10, v131, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F808CB0((uint64_t)v187, (uint64_t)&v142);
      uint64_t v11 = sub_24F808DF4((uint64_t)&v142);
      uint64_t v12 = sub_24F76FA40(v11);
      sub_24F773D18(v12, v13, v14, v15, v16, v17, v18, v19, v132, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163);
      int v20 = sub_24F76FA40((uint64_t)v187);
      sub_24F780174(v20, v21, v22, v23, v24, v25, v26, v27, v133, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151,
        v152,
        v153,
        v154,
        v155,
        v156,
        v157,
        v158,
        v159,
        v160,
        v161,
        v162,
        v163,
        v164,
        v165,
        v166,
        v167,
        v168,
        v169,
        v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186[0]);
      sub_24F809608((uint64_t)v186);
      break;
  }
  return sub_24F808CB0((uint64_t)v186, a1);
}

uint64_t sub_24F880F70(uint64_t a1)
{
  sub_24F808CB0(v1, (uint64_t)v19);
  sub_24F808CB0((uint64_t)v19, (uint64_t)v20);
  switch(sub_24F808D0C((uint64_t)v20))
  {
    case 1u:
      int v7 = (void *)sub_24F808DF4((uint64_t)v20);
      sub_24F77EB48(v7);
      sub_24F808CB0((uint64_t)v19, (uint64_t)v18);
      uint64_t v8 = sub_24F808DF4((uint64_t)v18);
      sub_24F76FA40(v8);
      sub_24F77E640();
      if (v2) {
        goto LABEL_14;
      }
      goto LABEL_11;
    case 2u:
      int v9 = (void *)sub_24F808DF4((uint64_t)v20);
      sub_24F77EB48(v9);
      sub_24F808CB0((uint64_t)v19, (uint64_t)v18);
      uint64_t v10 = sub_24F808DF4((uint64_t)v18);
      sub_24F76FA40(v10);
      sub_24F77E640();
      if (!v2) {
        goto LABEL_11;
      }
      goto LABEL_14;
    case 3u:
      uint64_t v11 = (void *)sub_24F808DF4((uint64_t)v20);
      sub_24F77EB48(v11);
      sub_24F808CB0((uint64_t)v19, (uint64_t)v18);
      uint64_t v12 = sub_24F808DF4((uint64_t)v18);
      sub_24F76FA40(v12);
      sub_24F77E640();
      if (!v2) {
        goto LABEL_11;
      }
      goto LABEL_14;
    case 4u:
      uint64_t v13 = (void *)sub_24F808DF4((uint64_t)v20);
      sub_24F77EB48(v13);
      sub_24F808CB0((uint64_t)v19, (uint64_t)v18);
      uint64_t v14 = sub_24F808DF4((uint64_t)v18);
      sub_24F76FA40(v14);
      sub_24F77E640();
      if (v2) {
        goto LABEL_14;
      }
LABEL_11:
      sub_24F77F178();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F76FA40((uint64_t)v19);
      uint64_t v1 = v17;
      break;
    case 5u:
      uint64_t v1 = *(void *)sub_24F808DF4((uint64_t)v20);
      sub_24F76FA40((uint64_t)v19);
      swift_retain();
      uint64_t v15 = sub_24F76BCC0(v1, a1);
      if (!v2)
      {
        v18[0] = v15;
        sub_24F781274(&qword_26B1F7F48);
        sub_24F7871AC();
        uint64_t v1 = sub_24F8CED30();
        swift_bridgeObjectRelease();
      }
      goto LABEL_14;
    default:
      int v4 = (void *)sub_24F808DF4((uint64_t)v20);
      sub_24F77EB48(v4);
      sub_24F808CB0((uint64_t)v19, (uint64_t)v18);
      uint64_t v5 = sub_24F808DF4((uint64_t)v18);
      sub_24F76FA40(v5);
      uint64_t v6 = sub_24F77E640();
      if (!v2) {
        uint64_t v1 = v6;
      }
LABEL_14:
      sub_24F76FA40((uint64_t)v19);
      break;
  }
  return v1;
}

uint64_t SQLOrdering.sqlOrdering.getter@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0xA3uLL);
  memcpy(a1, v1, 0xA3uLL);
  return sub_24F76FA40((uint64_t)__dst);
}

ValueMetadata *type metadata accessor for SQLOrdering()
{
  return &type metadata for SQLOrdering;
}

uint64_t dispatch thunk of SQLOrderingTerm.sqlOrdering.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t _s12GRDBInternal11SQLOrderingV4ImplOwxx_0(uint64_t a1)
{
  unsigned int v22 = *(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16);
  uint64_t v20 = *(void *)(a1 + 144);
  uint64_t v21 = *(void *)(a1 + 152);
  sub_24F77294C();
  return sub_24F7995B4(v8, v1, v2, v3, v4, v5, v6, v7, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
}

uint64_t _s12GRDBInternal11SQLOrderingV4ImplOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  int v24 = *(unsigned __int8 *)(a2 + 162);
  int v25 = *(unsigned __int16 *)(a2 + 160);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v9 = *(void *)a2;
  unint64_t v10 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_24F795B98(*(void *)a2, v10, v3, v4, v5, v6, v7, v11, v8, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v25 | (v24 << 16));
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(unsigned char *)(a1 + 162) = v24;
  *(_WORD *)(a1 + 160) = v25;
  return a1;
}

uint64_t _s12GRDBInternal11SQLOrderingV4ImplOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v37 = *(void *)(a2 + 64);
  uint64_t v38 = *(void *)(a2 + 72);
  uint64_t v39 = *(void *)(a2 + 80);
  uint64_t v40 = *(void *)(a2 + 88);
  uint64_t v41 = *(void *)(a2 + 96);
  uint64_t v42 = *(void *)(a2 + 104);
  uint64_t v43 = *(void *)(a2 + 112);
  uint64_t v44 = *(void *)(a2 + 120);
  uint64_t v45 = *(void *)(a2 + 128);
  uint64_t v46 = *(void *)(a2 + 136);
  int v49 = *(unsigned __int8 *)(a2 + 162);
  int v11 = *(unsigned __int16 *)(a2 + 160);
  uint64_t v47 = *(void *)(a2 + 144);
  uint64_t v48 = *(void *)(a2 + 152);
  sub_24F795B98(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
    v48,
    v11 | (v49 << 16));
  int v12 = *(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v37;
  *(void *)(a1 + 72) = v38;
  *(void *)(a1 + 80) = v39;
  *(void *)(a1 + 88) = v40;
  *(void *)(a1 + 96) = v41;
  *(void *)(a1 + 104) = v42;
  *(void *)(a1 + 112) = v43;
  *(void *)(a1 + 120) = v44;
  *(void *)(a1 + 128) = v45;
  *(void *)(a1 + 136) = v46;
  *(_WORD *)(a1 + 160) = v11;
  *(unsigned char *)(a1 + 162) = v49;
  uint64_t v13 = *(void *)(a1 + 144);
  uint64_t v14 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = v47;
  *(void *)(a1 + 152) = v48;
  unsigned int v36 = v12;
  uint64_t v34 = v13;
  uint64_t v35 = v14;
  sub_24F77294C();
  sub_24F7995B4(v15, v16, v17, v18, v19, v20, v21, v22, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  return a1;
}

uint64_t _s12GRDBInternal11SQLOrderingV4ImplOwta_0(uint64_t a1)
{
  sub_24F77F400();
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  int v4 = *(unsigned __int16 *)(a1 + 160) | (*(unsigned __int8 *)(a1 + 162) << 16);
  long long v6 = v5[1];
  *(_OWORD *)a1 = *v5;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = v5[5];
  *(_OWORD *)(a1 + 64) = v5[4];
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = v5[7];
  *(_OWORD *)(a1 + 96) = v5[6];
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = v5[9];
  *(_OWORD *)(a1 + 128) = v5[8];
  *(_OWORD *)(a1 + 144) = v10;
  *(unsigned char *)(a1 + 162) = v11;
  *(_WORD *)(a1 + 160) = v12;
  unsigned int v34 = v4;
  uint64_t v32 = v2;
  uint64_t v33 = v3;
  sub_24F77294C();
  sub_24F7995B4(v13, v20, v14, v15, v16, v17, v18, v19, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34);
  return a1;
}

uint64_t sub_24F881754(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  int v3 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF9BFFF;
  *(_WORD *)uint64_t result = v2 & 0xBFFF;
  *(unsigned char *)(result + 2) = BYTE2(v3);
  return result;
}

uint64_t sub_24F88177C(uint64_t a1, int a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 160);
  uint64_t result = a1 + 160;
  uint64_t v4 = *(void *)(result - 56) & 1;
  int v5 = ((a2 << 16) | ((a2 & 1) << 14)) & 0x64000 | (v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF981FF;
  *(void *)(result - 96) &= 1uLL;
  *(void *)(result - 56) = v4;
  *(_WORD *)uint64_t result = v5;
  *(unsigned char *)(result + 2) = BYTE2(v5);
  return result;
}

ValueMetadata *type metadata accessor for SQLOrdering.Impl()
{
  return &type metadata for SQLOrdering.Impl;
}

uint64_t static FTS3TokenizerDescriptor.simple.getter()
{
  if (qword_269A2A358 != -1) {
    swift_once();
  }
  sub_24F77F910(&qword_269A2C260);
  return swift_bridgeObjectRetain();
}

void sub_24F881850()
{
  qword_269A2C260 = 0x656C706D6973;
  *(void *)algn_269A2C268 = 0xE600000000000000;
  qword_269A2C270 = MEMORY[0x263F8EE78];
}

void sub_24F88187C()
{
  qword_269A2C278 = 0x726574726F70;
  unk_269A2C280 = 0xE600000000000000;
  qword_269A2C288 = MEMORY[0x263F8EE78];
}

uint64_t static FTS3TokenizerDescriptor.porter.getter()
{
  if (qword_269A2A360 != -1) {
    swift_once();
  }
  sub_24F77F910(&qword_269A2C278);
  return swift_bridgeObjectRetain();
}

void static FTS3TokenizerDescriptor.unicode61(diacritics:separators:tokenCharacters:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  char v4 = *a1;
  sub_24F881944(&v4, a2, a3, a4);
}

void sub_24F881944(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (*a1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (*a1 == 1) {
      goto LABEL_8;
    }
    sub_24F787184();
    uint64_t v8 = v9;
    unint64_t v11 = *(void *)(v9 + 16);
    unint64_t v10 = *(void *)(v9 + 24);
    unint64_t v12 = v11 + 1;
    uint64_t v13 = "remove_diacritics=2";
  }
  else
  {
    sub_24F787184();
    uint64_t v8 = v14;
    unint64_t v11 = *(void *)(v14 + 16);
    unint64_t v10 = *(void *)(v14 + 24);
    unint64_t v12 = v11 + 1;
    uint64_t v13 = "remove_diacritics=0";
  }
  unint64_t v15 = (unint64_t)(v13 - 32) | 0x8000000000000000;
  if (v11 >= v10 >> 1)
  {
    sub_24F787184();
    uint64_t v8 = v47;
  }
  *(void *)(v8 + 16) = v12;
  uint64_t v16 = v8 + 16 * v11;
  *(void *)(v16 + 32) = 0xD000000000000013;
  *(void *)(v16 + 40) = v15;
LABEL_8:
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    sub_24F79539C();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v55 = v18;
    sub_24F881E38(&v55);
    uint64_t v19 = v55;
    uint64_t v20 = *(void *)(v55 + 16);
    if (v20)
    {
      uint64_t v52 = a3;
      uint64_t v53 = v8;
      uint64_t v55 = v7;
      sub_24F77C4AC();
      uint64_t v21 = v55;
      uint64_t v22 = (uint64_t *)(v19 + 40);
      do
      {
        uint64_t v23 = *(v22 - 1);
        uint64_t v24 = *v22;
        uint64_t v55 = v21;
        unint64_t v26 = *(void *)(v21 + 16);
        unint64_t v25 = *(void *)(v21 + 24);
        swift_bridgeObjectRetain();
        if (v26 >= v25 >> 1)
        {
          sub_24F77C4AC();
          uint64_t v21 = v55;
        }
        v22 += 2;
        *(void *)(v21 + 16) = v26 + 1;
        uint64_t v27 = v21 + 16 * v26;
        *(void *)(v27 + 32) = v23;
        *(void *)(v27 + 40) = v24;
        --v20;
      }
      while (v20);
      swift_release();
      uint64_t v8 = v53;
      a3 = v52;
    }
    else
    {
      swift_release();
      uint64_t v21 = MEMORY[0x263F8EE78];
    }
    uint64_t v55 = v21;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    uint64_t v55 = 0x6F74617261706573;
    unint64_t v56 = 0xEB000000003D7372;
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    uint64_t v28 = v55;
    unint64_t v29 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F787184();
      uint64_t v8 = v48;
    }
    unint64_t v30 = *(void *)(v8 + 16);
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (v30 >= *(void *)(v8 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v8 = v49;
    }
    *(void *)(v8 + 16) = v30 + 1;
    uint64_t v31 = v8 + 16 * v30;
    *(void *)(v31 + 32) = v28;
    *(void *)(v31 + 40) = v29;
  }
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    sub_24F79539C();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v55 = v33;
    sub_24F881E38(&v55);
    uint64_t v34 = v55;
    uint64_t v35 = *(void *)(v55 + 16);
    if (v35)
    {
      uint64_t v54 = v8;
      uint64_t v55 = v7;
      sub_24F77C4AC();
      uint64_t v36 = v55;
      uint64_t v37 = (uint64_t *)(v34 + 40);
      do
      {
        uint64_t v39 = *(v37 - 1);
        uint64_t v38 = *v37;
        uint64_t v55 = v36;
        unint64_t v41 = *(void *)(v36 + 16);
        unint64_t v40 = *(void *)(v36 + 24);
        swift_bridgeObjectRetain();
        if (v41 >= v40 >> 1)
        {
          sub_24F77C4AC();
          uint64_t v36 = v55;
        }
        v37 += 2;
        *(void *)(v36 + 16) = v41 + 1;
        uint64_t v42 = v36 + 16 * v41;
        *(void *)(v42 + 32) = v39;
        *(void *)(v42 + 40) = v38;
        --v35;
      }
      while (v35);
      swift_release();
      uint64_t v8 = v54;
    }
    else
    {
      swift_release();
      uint64_t v36 = MEMORY[0x263F8EE78];
    }
    uint64_t v55 = v36;
    sub_24F781274(&qword_26B1F7F48);
    sub_24F7871AC();
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    uint64_t v55 = 0x6168636E656B6F74;
    unint64_t v56 = 0xEB000000003D7372;
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    uint64_t v43 = v55;
    unint64_t v44 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24F787184();
      uint64_t v8 = v50;
    }
    unint64_t v45 = *(void *)(v8 + 16);
    if (v45 >= *(void *)(v8 + 24) >> 1)
    {
      sub_24F787184();
      uint64_t v8 = v51;
    }
    *(void *)(v8 + 16) = v45 + 1;
    uint64_t v46 = v8 + 16 * v45;
    *(void *)(v46 + 32) = v43;
    *(void *)(v46 + 40) = v44;
  }
  *a4 = 0x3665646F63696E75;
  a4[1] = 0xE900000000000031;
  a4[2] = v8;
}

ValueMetadata *type metadata accessor for FTS3TokenizerDescriptor()
{
  return &type metadata for FTS3TokenizerDescriptor;
}

uint64_t sub_24F881E38(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F8975E8();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_24F881EA4(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_24F881EA4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_147;
    }
    if (v3) {
      return sub_24F842EC8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v99 = result;
  int v96 = a1;
  if (v3 <= 1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    int v102 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v36 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v8 = MEMORY[0x263F8EE78];
      goto LABEL_113;
    }
    uint64_t v98 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t result = sub_24F8CF120();
    *(void *)(result + 16) = v3 / 2;
    uint64_t v98 = result;
    int v102 = (char *)(result + 32);
  }
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v97 = v7 + 8;
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v100 = v3;
  while (1)
  {
    uint64_t v9 = v6++;
    if (v6 >= v3) {
      goto LABEL_39;
    }
    unint64_t v10 = (uint64_t *)(v7 + 16 * v6);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    unint64_t v12 = (void *)(v7 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_38;
      }
      int v14 = 0;
    }
    else
    {
      uint64_t result = sub_24F8CFD00();
      int v14 = result;
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_30;
      }
    }
    uint64_t v16 = (void *)(v97 + 16 * v15);
    do
    {
      uint64_t result = *(v16 - 1);
      uint64_t v17 = (void *)(v7 + 16 * v6);
      if (result == *v17 && *v16 == v17[1])
      {
        if (v14) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t result = sub_24F8CFD00();
        if ((v14 ^ result)) {
          goto LABEL_30;
        }
      }
      v16 += 2;
      uint64_t v19 = v15 + 1;
      uint64_t v6 = v15;
      uint64_t v15 = v19;
    }
    while (v19 < v3);
    uint64_t v15 = v19;
LABEL_30:
    uint64_t v6 = v15;
    if (v14)
    {
LABEL_31:
      if (v15 < v9) {
        goto LABEL_150;
      }
      if (v9 < v15)
      {
        uint64_t v20 = 16 * v15;
        uint64_t v21 = 16 * v9;
        uint64_t v22 = v15;
        uint64_t v23 = v9;
        do
        {
          if (v23 != --v22)
          {
            if (!v7) {
              goto LABEL_153;
            }
            uint64_t v24 = v7 + v20;
            uint64_t v25 = *(void *)(v7 + v21);
            uint64_t v26 = *(void *)(v7 + v21 + 8);
            *(_OWORD *)(v7 + v21) = *(_OWORD *)(v7 + v20 - 16);
            *(void *)(v24 - 16) = v25;
            *(void *)(v24 - 8) = v26;
          }
          ++v23;
          v20 -= 16;
          v21 += 16;
        }
        while (v23 < v22);
      }
LABEL_38:
      uint64_t v6 = v15;
    }
LABEL_39:
    if (v6 < v3)
    {
      if (__OFSUB__(v6, v9)) {
        goto LABEL_145;
      }
      if (v6 - v9 < v99) {
        break;
      }
    }
LABEL_59:
    if (v6 < v9) {
      goto LABEL_140;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    unint64_t v35 = *(void *)(v8 + 16);
    unint64_t v34 = *(void *)(v8 + 24);
    unint64_t v36 = v35 + 1;
    if (v35 >= v34 >> 1)
    {
      uint64_t result = (uint64_t)sub_24F897440((char *)(v34 > 1), v35 + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    *(void *)(v8 + 16) = v36;
    uint64_t v37 = v8 + 32;
    uint64_t v38 = (uint64_t *)(v8 + 32 + 16 * v35);
    *uint64_t v38 = v9;
    v38[1] = v6;
    if (v35)
    {
      uint64_t v101 = v6;
      while (1)
      {
        unint64_t v39 = v36 - 1;
        if (v36 >= 4)
        {
          unint64_t v44 = v37 + 16 * v36;
          uint64_t v45 = *(void *)(v44 - 64);
          uint64_t v46 = *(void *)(v44 - 56);
          BOOL v50 = __OFSUB__(v46, v45);
          uint64_t v47 = v46 - v45;
          if (v50) {
            goto LABEL_129;
          }
          uint64_t v49 = *(void *)(v44 - 48);
          uint64_t v48 = *(void *)(v44 - 40);
          BOOL v50 = __OFSUB__(v48, v49);
          uint64_t v42 = v48 - v49;
          char v43 = v50;
          if (v50) {
            goto LABEL_130;
          }
          unint64_t v51 = v36 - 2;
          uint64_t v52 = (uint64_t *)(v37 + 16 * (v36 - 2));
          uint64_t v54 = *v52;
          uint64_t v53 = v52[1];
          BOOL v50 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v50) {
            goto LABEL_131;
          }
          BOOL v50 = __OFADD__(v42, v55);
          uint64_t v56 = v42 + v55;
          if (v50) {
            goto LABEL_133;
          }
          if (v56 >= v47)
          {
            int v74 = (uint64_t *)(v37 + 16 * v39);
            uint64_t v76 = *v74;
            uint64_t v75 = v74[1];
            BOOL v50 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            if (v50) {
              goto LABEL_139;
            }
            BOOL v67 = v42 < v77;
            goto LABEL_97;
          }
        }
        else
        {
          if (v36 != 3)
          {
            uint64_t v68 = *(void *)(v8 + 32);
            uint64_t v69 = *(void *)(v8 + 40);
            BOOL v50 = __OFSUB__(v69, v68);
            uint64_t v61 = v69 - v68;
            char v62 = v50;
            goto LABEL_91;
          }
          uint64_t v41 = *(void *)(v8 + 32);
          uint64_t v40 = *(void *)(v8 + 40);
          BOOL v50 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          char v43 = v50;
        }
        if (v43) {
          goto LABEL_132;
        }
        unint64_t v51 = v36 - 2;
        int v57 = (uint64_t *)(v37 + 16 * (v36 - 2));
        uint64_t v59 = *v57;
        uint64_t v58 = v57[1];
        BOOL v60 = __OFSUB__(v58, v59);
        uint64_t v61 = v58 - v59;
        char v62 = v60;
        if (v60) {
          goto LABEL_134;
        }
        uint64_t v63 = (uint64_t *)(v37 + 16 * v39);
        uint64_t v65 = *v63;
        uint64_t v64 = v63[1];
        BOOL v50 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v50) {
          goto LABEL_136;
        }
        if (__OFADD__(v61, v66)) {
          goto LABEL_138;
        }
        if (v61 + v66 >= v42)
        {
          BOOL v67 = v42 < v66;
LABEL_97:
          if (v67) {
            unint64_t v39 = v51;
          }
          goto LABEL_99;
        }
LABEL_91:
        if (v62) {
          goto LABEL_135;
        }
        int v70 = (uint64_t *)(v37 + 16 * v39);
        uint64_t v72 = *v70;
        uint64_t v71 = v70[1];
        BOOL v50 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v50) {
          goto LABEL_137;
        }
        if (v73 < v61) {
          goto LABEL_108;
        }
LABEL_99:
        unint64_t v78 = v39 - 1;
        if (v39 - 1 >= v36)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        uint64_t v79 = v7;
        if (!v7) {
          goto LABEL_152;
        }
        uint64_t v80 = v8;
        int v81 = (uint64_t *)(v37 + 16 * v78);
        uint64_t v82 = *v81;
        uint64_t v83 = v37;
        unint64_t v84 = v39;
        int v85 = (void *)(v37 + 16 * v39);
        uint64_t v86 = v85[1];
        uint64_t v87 = v79;
        uint64_t result = sub_24F843280((char *)(v79 + 16 * *v81), (char *)(v79 + 16 * *v85), v79 + 16 * v86, v102);
        if (v1)
        {
LABEL_110:
          swift_bridgeObjectRelease();
          *(void *)(v98 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v86 < v82) {
          goto LABEL_126;
        }
        if (v84 > *(void *)(v80 + 16)) {
          goto LABEL_127;
        }
        *int v81 = v82;
        *(void *)(v83 + 16 * v78 + 8) = v86;
        unint64_t v88 = *(void *)(v80 + 16);
        if (v84 >= v88) {
          goto LABEL_128;
        }
        uint64_t v8 = v80;
        unint64_t v36 = v88 - 1;
        uint64_t result = (uint64_t)memmove(v85, v85 + 2, 16 * (v88 - 1 - v84));
        uint64_t v37 = v83;
        *(void *)(v80 + 16) = v88 - 1;
        uint64_t v7 = v87;
        uint64_t v6 = v101;
        if (v88 <= 2) {
          goto LABEL_108;
        }
      }
    }
    unint64_t v36 = 1;
LABEL_108:
    uint64_t v3 = v100;
    if (v6 >= v100)
    {
      uint64_t v5 = v98;
LABEL_113:
      uint64_t result = v8;
      uint64_t v98 = v5;
      if (v36 >= 2)
      {
        uint64_t v89 = *v96;
        do
        {
          unint64_t v90 = v36 - 2;
          if (v36 < 2) {
            goto LABEL_141;
          }
          if (!v89) {
            goto LABEL_154;
          }
          uint64_t v91 = result;
          uint64_t v92 = *(void *)(result + 32 + 16 * v90);
          uint64_t v93 = *(void *)(result + 32 + 16 * (v36 - 1) + 8);
          uint64_t result = sub_24F843280((char *)(v89 + 16 * v92), (char *)(v89 + 16 * *(void *)(result + 32 + 16 * (v36 - 1))), v89 + 16 * v93, v102);
          if (v1) {
            goto LABEL_110;
          }
          if (v93 < v92) {
            goto LABEL_142;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_24F897538();
            uint64_t v91 = result;
          }
          if (v90 >= *(void *)(v91 + 16)) {
            goto LABEL_143;
          }
          uint64_t v94 = (void *)(v91 + 32 + 16 * v90);
          *uint64_t v94 = v92;
          v94[1] = v93;
          unint64_t v95 = *(void *)(v91 + 16);
          if (v36 > v95) {
            goto LABEL_144;
          }
          memmove((void *)(v91 + 32 + 16 * (v36 - 1)), (const void *)(v91 + 32 + 16 * v36), 16 * (v95 - v36));
          uint64_t result = v91;
          *(void *)(v91 + 16) = v95 - 1;
          unint64_t v36 = v95 - 1;
        }
        while (v95 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v98 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v9, v99)) {
    goto LABEL_148;
  }
  if (v9 + v99 >= v3) {
    uint64_t v27 = v3;
  }
  else {
    uint64_t v27 = v9 + v99;
  }
  if (v27 >= v9)
  {
    if (v6 != v27)
    {
      uint64_t v28 = (uint64_t *)(v7 + 16 * v6);
      do
      {
        unint64_t v29 = (uint64_t *)(v7 + 16 * v6);
        uint64_t result = *v29;
        uint64_t v30 = v29[1];
        uint64_t v31 = v9;
        uint64_t v32 = v28;
        do
        {
          if (result == *(v32 - 2) && v30 == *(v32 - 1)) {
            break;
          }
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            break;
          }
          if (!v7) {
            goto LABEL_151;
          }
          uint64_t result = *v32;
          uint64_t v30 = v32[1];
          *(_OWORD *)uint64_t v32 = *((_OWORD *)v32 - 1);
          *(v32 - 1) = v30;
          *(v32 - 2) = result;
          v32 -= 2;
          ++v31;
        }
        while (v6 != v31);
        ++v6;
        v28 += 2;
      }
      while (v6 != v27);
      uint64_t v6 = v27;
    }
    goto LABEL_59;
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
  return result;
}

uint64_t sub_24F882548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = *(void *)(a1 + 24);
    sub_24F773974();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a2, v3, v7);
    return swift_willThrowTypedImpl();
  }
  else
  {
    sub_24F773974();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(a3, v3);
  }
}

uint64_t sub_24F882610(char a1)
{
  *(void *)(v1 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_24F882654(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v3;
  return v1;
}

uint64_t sub_24F882694(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_24F8CF9E0())
  {
    uint64_t v3 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = MEMORY[0x253364060](v3 - 4, a1);
      }
      else
      {
        uint64_t v4 = *(void *)(a1 + 8 * v3);
        swift_retain();
      }
      uint64_t v5 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      if (v7 == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v4;
      }
      swift_release();
      ++v3;
      if (v5 == v2) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24F8827D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24F7786CC(a6, (uint64_t)v17);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24F8DDBF0;
  v20[0] = a2;
  v20[1] = a3;
  void v20[2] = a4;
  void v20[3] = a5;
  sub_24F7725D4(v20);
  sub_24F76C344((uint64_t)v20, v10 + 32);
  sub_24F7786CC((uint64_t)v17, (uint64_t)v16);
  long long v13 = 0u;
  long long v14 = 0u;
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F7AC1D0((uint64_t)v16, (uint64_t)&v13);
  char v19 = 2;
  v18[0] = v13;
  v18[1] = v14;
  void v18[2] = v15;
  sub_24F774DA0((uint64_t)v17, &qword_26B1F7F10);
  uint64_t v11 = sub_24F7ABAC0();
  sub_24F774DA0((uint64_t)v18, &qword_26B1F7D38);
  return v11;
}

double sub_24F88291C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24F7EEC68(a1, a2);
  *(unsigned char *)(a2 + 1) = 1;
  *(unsigned char *)(a2 + 40) = 0;
  if (*(unsigned __int8 *)(a2 + 88) == 255)
  {
    double result = 10.0;
    *(_OWORD *)(a2 + 72) = xmmword_24F8E4D00;
    *(unsigned char *)(a2 + 88) = 0;
  }
  return result;
}

void sub_24F88296C(uint64_t a1, uint64_t a2)
{
}

void sub_24F8829A0(uint64_t a1, uint64_t a2)
{
}

void sub_24F8829D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  id v5 = *(id *)(v3 + 24);
  sub_24F781274(a3);
  sub_24F8CF560();
}

uint64_t sub_24F882A58()
{
  return sub_24F882AB0();
}

uint64_t sub_24F882A84()
{
  return sub_24F882AB0();
}

uint64_t sub_24F882AB0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F882AFC(void *a1, uint64_t a2)
{
  *a1 = a2;
  return swift_bridgeObjectRetain();
}

void sub_24F882B44(uint64_t a1, uint64_t a2)
{
  v12[0] = a2;
  uint64_t v3 = v2;
  uint64_t v5 = sub_24F8CEBD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)(v2 + 24);
  sub_24F781274(&qword_26B1F78C0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24F8DDBF0;
  id v11 = v9;
  sub_24F8CEBC0();
  v12[7] = v10;
  sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
  sub_24F781274(&qword_26B1F7960);
  sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
  sub_24F8CF6D0();
  v12[4] = a1;
  v12[5] = v12[0];
  v12[6] = v3;
  sub_24F781274(&qword_269A2C298);
  sub_24F8CF550();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_24F882D80()
{
  uint64_t v2 = sub_24F8CEBD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  sub_24F775B24();
  uint64_t v4 = *(void **)(v0 + 24);
  sub_24F781274(&qword_26B1F78C0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24F8DDBF0;
  id v5 = v4;
  sub_24F8CEBC0();
  sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
  sub_24F781274(&qword_26B1F7960);
  sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
  sub_24F8CF6D0();
  sub_24F8CF550();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
}

uint64_t sub_24F882F74(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v13 = sub_24F8CF520();
  sub_24F770DF4();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_24F773918();
  uint64_t v8 = sub_24F8CEC00();
  uint64_t v9 = sub_24F77AD34(v8);
  MEMORY[0x270FA5388](v9);
  sub_24F76B830();
  uint64_t v10 = sub_24F8CF4D0();
  MEMORY[0x270FA5388](v10);
  sub_24F775B24();
  *(void *)(v1 + 16) = a1;
  sub_24F783524();
  sub_24F781274(qword_26B1F78C8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24F8DDBF0;
  swift_bridgeObjectRetain();
  sub_24F8CF4C0();
  sub_24F83978C((unint64_t *)&qword_26B1F7F60, MEMORY[0x263F8F0F8]);
  sub_24F781274(&qword_26B1F7F40);
  sub_24F7D9F58((unint64_t *)&qword_26B1F7EB8, &qword_26B1F7F40);
  sub_24F8CF6D0();
  sub_24F8CEBE0();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v2, *MEMORY[0x263F8F130], v13);
  uint64_t v11 = sub_24F8CF580();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 24) = v11;
  return v3;
}

uint64_t sub_24F8831F8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  a1(&v8, &v7);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    return v8;
  }
  return result;
}

uint64_t sub_24F883294(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  a1(&v7, v5);
  uint64_t result = swift_endAccess();
  if (!v3) {
    return v7;
  }
  return result;
}

uint64_t sub_24F883314(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

uint64_t DatabasePool.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7EEC68(*(void *)(*(void *)(v1 + 16) + 16) + OBJC_IVAR____TtC12GRDBInternal8Database_configuration, a1);
}

uint64_t DatabasePool.makeSnapshot()()
{
  uint64_t v1 = type metadata accessor for Configuration();
  uint64_t v2 = sub_24F77AD34(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 16);
  if (sub_24F7742DC())
  {
    sub_24F88B504((uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 209, (uint64_t)v5);
    if (Database.isInsideTransaction.getter())
    {
      sub_24F775DB8();
      uint64_t v14 = 775;
      sub_24F770EAC();
      sub_24F773D34();
      sub_24F77B65C();
    }
  }
  uint64_t v7 = v5[3];
  uint64_t v6 = v5[4];
  sub_24F7EEC68(v5[2] + OBJC_IVAR____TtC12GRDBInternal8Database_configuration, (uint64_t)v4);
  uint64_t v14 = 0x746F687370616E73;
  unint64_t v15 = 0xE90000000000002ELL;
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_24F799B84(v8);
  swift_release();
  uint64_t v16 = v9;
  sub_24F8CFAE0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  type metadata accessor for DatabaseSnapshot();
  swift_allocObject();
  sub_24F770EAC();
  return sub_24F8446FC(v7, v6, (uint64_t)v4, 0xD000000000000011, v12, v10, v11);
}

uint64_t DatabasePool.asyncWriteWithoutTransaction(_:)(uint64_t a1, uint64_t a2)
{
  return sub_24F88A410(a1, a2);
}

uint64_t DatabasePool.concurrentRead<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v7 = sub_24F8CFF90();
  sub_24F8CF610();
  uint64_t v8 = swift_allocBox();
  sub_24F7771BC(v9, 1, 1, v7);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  void v10[3] = v8;
  v10[4] = a1;
  v10[5] = a2;
  v10[6] = v6;
  swift_retain();
  swift_retain();
  uint64_t v11 = v6;
  DatabasePool.asyncConcurrentRead(_:)((void (*)(void *, uint64_t))sub_24F886734, (uint64_t)v10);
  swift_release();
  type metadata accessor for DatabaseFuture();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a3;
  void v12[3] = v11;
  v12[4] = v8;
  return sub_24F78B638((uint64_t)sub_24F886780, (uint64_t)v12);
}

uint64_t DatabasePool.path.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatabasePool.__allocating_init(path:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F77EE08();
  uint64_t v6 = swift_allocObject();
  DatabasePool.init(path:configuration:)(a1, a2, a3);
  return v6;
}

void *DatabasePool.init(path:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  uint64_t v27 = a1;
  sub_24F773850();
  v26[1] = v9;
  uint64_t v10 = sub_24F8CEC00();
  uint64_t v11 = sub_24F77AD34(v10);
  MEMORY[0x270FA5388](v11);
  sub_24F76B830();
  uint64_t v14 = v13 - v12;
  type metadata accessor for Configuration();
  sub_24F773974();
  MEMORY[0x270FA5388](v15);
  sub_24F775B24();
  v3[3] = 0;
  sub_24F781274(&qword_26B1F7450);
  swift_allocObject();
  v3[4] = sub_24F882654(0);
  intptr_t v16 = *(void *)(a3 + 96);
  if (v16 < 1)
  {
    sub_24F775DB8();
    v26[0] = 39;
    sub_24F770EAC();
    sub_24F773D34();
    sub_24F77B65C();
  }
  sub_24F7EEC68(a3, v5);
  type metadata accessor for SerializedDatabase();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_24F770EAC();
  sub_24F88ABFC();
  if (v4)
  {
    swift_bridgeObjectRelease();
    sub_24F7EECCC(a3);
    swift_release();
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    void v3[2] = v17;
    uint64_t v18 = swift_allocBox();
    uint64_t v20 = v19;
    sub_24F88291C(a3, v19);
    *(unsigned char *)(v20 + 41) = 0;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = 0;
    sub_24F7ED248(v14);
    uint64_t v22 = (void *)swift_allocObject();
    uint64_t v23 = v27;
    void v22[2] = v21;
    uint64_t v22[3] = v23;
    v22[4] = a2;
    void v22[5] = v18;
    sub_24F781274(&qword_26B1F7448);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v6[3] = sub_24F886818(v16, v14, (uint64_t)sub_24F8867F8, (uint64_t)v22);
    uint64_t v24 = swift_release();
    if (*(unsigned char *)(a3 + 1))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      MEMORY[0x270FA5388](v24);
      v26[-2] = v27;
      v26[-1] = a2;
      swift_retain();
      sub_24F8565FC((uint64_t)sub_24F886CD0, (uint64_t)&v26[-4]);
      swift_release();
      swift_bridgeObjectRelease();
    }
    sub_24F883FD8();
    sub_24F7EECCC(a3);
    swift_release();
    swift_release();
  }
  return v6;
}

void sub_24F883B34(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Configuration();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)(a1 + 16);
  uint64_t v9 = swift_projectBox();
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    *uint64_t v8 = v11;
    swift_beginAccess();
    sub_24F7EEC68(v9, (uint64_t)v7);
    _OWORD v13[2] = 0x2E726564616572;
    v13[3] = 0xE700000000000000;
    v13[1] = v11;
    swift_bridgeObjectRetain();
    sub_24F8CFAE0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    type metadata accessor for SerializedDatabase();
    swift_allocObject();
    sub_24F88ABFC();
    if (!v2) {
      *a2 = v12;
    }
  }
}

void sub_24F883CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = MEMORY[0x263F8EE80];
  uint64_t v9 = sub_24F8827D0(a1, 0xD000000000000019, 0x800000024F8D4730, MEMORY[0x263F8EE78], MEMORY[0x263F8EE80], (uint64_t)&v30);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F774DA0((uint64_t)&v30, &qword_26B1F7F10);
  if (!v3)
  {
    if (!v11)
    {
LABEL_8:
      *(void *)&long long v30 = 0;
      *((void *)&v30 + 1) = 0xE000000000000000;
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      *(void *)&long long v30 = 0xD000000000000025;
      *((void *)&v30 + 1) = 0x800000024F8D4750;
      sub_24F8CEEB0();
      long long v15 = v30;
      sub_24F7DC6DC();
      swift_allocError();
      *(_DWORD *)uint64_t v16 = 1;
      *(_OWORD *)(v16 + 8) = v15;
      *(_OWORD *)(v16 + 24) = 0u;
      *(_OWORD *)(v16 + 40) = 0u;
      *(unsigned char *)(v16 + 56) = 0;
      swift_willThrow();
      return;
    }
    if (v9 == 7102839 && v11 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_24F8CFD00();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_8;
      }
    }
    *(void *)&long long v30 = v7;
    *((void *)&v30 + 1) = v8;
    v17._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v17._object = (void *)0x800000024F8D4780;
    uint64_t v18 = &v30;
    Database.execute(sql:arguments:)(v17, *(GRDBInternal::StatementArguments *)(&v14 - 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v19)
    {
      id v20 = objc_msgSend(self, sel_defaultManager);
      *(void *)&long long v30 = a2;
      *((void *)&v30 + 1) = a3;
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      uint64_t v21 = (void *)sub_24F8CED70();
      swift_bridgeObjectRelease();
      unsigned __int8 v22 = objc_msgSend(v20, sel_fileExistsAtPath_, v21);

      if ((v22 & 1) == 0)
      {
        uint64_t v23 = swift_retain();
        sub_24F8A10F8(v23, a1, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, v33, v34, v35, v36, v37, v38,
          v39,
          v40,
          v41);
      }
    }
  }
}

uint64_t sub_24F883F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7[0] = MEMORY[0x263F8EE78];
  v7[1] = MEMORY[0x263F8EE80];
  v4._object = (void *)0x800000024F8D47A0;
  uint64_t v5 = v7;
  v4._uint64_t countAndFlagsBits = 0xD000000000000050;
  Database.execute(sql:arguments:)(v4, *(GRDBInternal::StatementArguments *)(&a4 - 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_24F883FD8()
{
  uint64_t v1 = type metadata accessor for Configuration();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DatabasePool.configuration.getter((uint64_t)v3);
  int v4 = v3[25];
  sub_24F7EECCC((uint64_t)v3);
  if (v4 == 1)
  {
    id v5 = objc_msgSend(self, sel_defaultCenter);
    if (qword_269A2A370 != -1) {
      swift_once();
    }
    objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel_suspend_, qword_269A2C430, 0);
    if (qword_269A2A378 != -1) {
      swift_once();
    }
    objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel_resume_, qword_269A2C438, 0);
  }
}

uint64_t DatabasePool.deinit()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  *(void *)(v0 + 24) = 0;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DatabasePool.__deallocating_deinit()
{
  DatabasePool.deinit();
  uint64_t v0 = sub_24F77EE08();
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24F8841E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return DatabasePool.barrierWriteWithoutTransaction<A>(_:)(a1, a2, a3);
}

uint64_t DatabasePool.barrierWriteWithoutTransaction<A>(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (*(void *)(v3 + 24))
  {
    uint64_t v6 = MEMORY[0x270FA5388](result);
    void v9[2] = v7;
    void v9[3] = v3;
    v9[4] = v6;
    v9[5] = v8;
    swift_retain();
    sub_24F88DC44((uint64_t)sub_24F886CEC, (uint64_t)v9, a2, a3);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t DatabasePool.asyncBarrierWriteWithoutTransaction(_:)(uint64_t result, uint64_t a2)
{
  if (*(void *)(v2 + 24))
  {
    uint64_t v4 = result;
    id v5 = (void *)swift_allocObject();
    _OWORD v5[2] = v2;
    v5[3] = v4;
    v5[4] = a2;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24F885F7C((uint64_t)sub_24F886D1C, (uint64_t)v5);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24F884364()
{
}

void DatabasePool.unsafeReentrantWrite<A>(_:)()
{
}

Swift::Void __swiftcall DatabasePool.releaseMemory()()
{
  sub_24F8565FC((uint64_t)sub_24F83A860, 0);
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_24F88451C((uint64_t)sub_24F886D28, v0);
    swift_release();
  }
}

uint64_t sub_24F884454@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *(void *)(result + 24);
  if (v3)
  {
    swift_retain();
    sub_24F8844AC();
    uint64_t result = swift_release();
  }
  *a2 = v3 == 0;
  return result;
}

uint64_t sub_24F8844AC()
{
  swift_retain();
  sub_24F882AB0();
  return swift_release();
}

uint64_t sub_24F88451C(uint64_t a1, uint64_t a2)
{
  v12[0] = a2;
  uint64_t v3 = v2;
  uint64_t v5 = sub_24F8CEBD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F781274(&qword_26B1F78C0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24F8DDBF0;
  sub_24F8CEBC0();
  v12[7] = v9;
  sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
  sub_24F781274(&qword_26B1F7960);
  sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
  sub_24F8CF6D0();
  v12[4] = v3;
  v12[5] = a1;
  v12[6] = v12[0];
  sub_24F781274(&qword_26B1F5660);
  uint64_t v10 = v12[1];
  sub_24F8CF550();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v13;
}

Swift::Void __swiftcall DatabasePool.releaseMemoryEventually()()
{
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_24F8844AC();
    swift_release();
  }
  sub_24F88A410((uint64_t)sub_24F8847A0, 0);
}

void sub_24F8847A0()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabasePool.close()()
{
  if (*(void *)(v0 + 24))
  {
    ((void (*)())MEMORY[0x270FA5388])();
    v1[2] = sub_24F886D44;
    v1[3] = v0;
    swift_retain();
    sub_24F88451C((uint64_t)sub_24F886D60, (uint64_t)v1);
    swift_release();
  }
}

uint64_t sub_24F884870(uint64_t a1)
{
  uint64_t result = sub_24F8565FC((uint64_t)sub_24F887868, 0);
  if (!v1)
  {
    if (*(void *)(a1 + 24))
    {
      swift_retain();
      sub_24F77427C();
      swift_release();
    }
    *(void *)(a1 + 24) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_24F884914()
{
  return sub_24F8565FC((uint64_t)sub_24F83A33C, 0);
}

Swift::Void __swiftcall DatabasePool.interrupt()()
{
  sub_24F88A3CC();
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_24F77427C();
    swift_release();
  }
}

void sub_24F8849E0()
{
}

uint64_t sub_24F884A0C()
{
  uint64_t v0 = type metadata accessor for Configuration();
  uint64_t v1 = sub_24F77AD34(v0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DatabasePool.configuration.getter((uint64_t)v3);
  char v4 = v3[1];
  uint64_t result = sub_24F7EECCC((uint64_t)v3);
  if ((v4 & 1) == 0) {
    return sub_24F8A3EAC();
  }
  return result;
}

uint64_t sub_24F884A98()
{
  uint64_t v0 = type metadata accessor for Configuration();
  uint64_t v1 = sub_24F77AD34(v0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DatabasePool.configuration.getter((uint64_t)v3);
  char v4 = v3[1];
  uint64_t result = sub_24F7EECCC((uint64_t)v3);
  if ((v4 & 1) == 0) {
    return sub_24F8A43DC();
  }
  return result;
}

uint64_t sub_24F884B60(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = sub_24F8CE680();
  sub_24F770DF4();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_24F773918();
  sub_24F8CE670();
  swift_retain();
  a4(v4);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v6);
}

void DatabasePool.asyncRead(_:)(void (*a1)(void), uint64_t a2)
{
}

void sub_24F884C40(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a1 + 24))
  {
    id v8 = v5;
    sub_24F781274(&qword_26B1F7040);
    swift_willThrowTypedImpl();
    id v9 = v5;
    a2(v5, 1);
    sub_24F887580(v5, v6, v7, 1);
    sub_24F887580(v5, v6, v7, 1);
  }
  else
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v6;
    *(void *)(v10 + 24) = v7;
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = sub_24F887864;
    void v11[3] = v10;
    v11[4] = a2;
    v11[5] = a3;
    sub_24F8875DC(v5, v6, v7, 0);
    swift_retain();
    swift_retain();
    sub_24F88A410((uint64_t)sub_24F8876A4, (uint64_t)v11);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_24F884DD0(void *a1, uint64_t (*a2)(void), uint64_t a3, void (*a4)(void *, uint64_t))
{
  char v11 = 0;
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&v11);
  if (v7)
  {
    id v8 = v7;
    a4(v7, 1);
  }
  else
  {
    sub_24F772C8C();
    a4(a1, 0);
  }
  Database.commit()();
  if (v9) {

  }
  return a2();
}

uint64_t sub_24F884EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24F8CEBD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24F8CEC00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + 64);
  unsigned __int8 v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a1;
  v13[3] = a2;
  void v13[4] = v2;
  aBlock[4] = sub_24F88767C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24F8363BC;
  aBlock[3] = &unk_270108398;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24F8CEBE0();
  v16[1] = MEMORY[0x263F8EE78];
  sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
  sub_24F781274(&qword_26B1F7960);
  sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
  sub_24F8CF6D0();
  MEMORY[0x253363DC0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t DatabasePool.unsafeRead<A>(_:)(uint64_t a1)
{
  uint64_t v2 = sub_24F781674(a1);
  uint64_t v3 = swift_release();
  if (v2)
  {
    sub_24F775DB8();
    sub_24F770EAC();
    sub_24F773D34();
    sub_24F77B65C();
  }
  if (*(void *)(v1 + 24))
  {
    MEMORY[0x270FA5388](v3);
    sub_24F77EB64();
    sub_24F771214((uint64_t (*)(char *))sub_24F886DD4);
    return swift_release();
  }
  else
  {
    sub_24F7DC6DC();
    uint64_t v5 = swift_allocError();
    sub_24F77E3D8(v5, v6);
    return sub_24F780190(v7, v8);
  }
}

void DatabasePool.asyncUnsafeRead(_:)(void (*a1)(void), uint64_t a2)
{
}

void sub_24F88529C(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(v4 + 24))
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    swift_retain();
    swift_retain();
    sub_24F884EB8(a4, v8);
    swift_release();
    swift_release();
  }
  else
  {
    sub_24F7DC6DC();
    uint64_t v9 = (void *)swift_allocError();
    sub_24F77E3D8((uint64_t)v9, v10);
    *(void *)(v11 + 8) = v12;
    *(void *)(v11 + 16) = 0x800000024F8D45F0;
    *(_OWORD *)(v11 + 24) = 0u;
    *(_OWORD *)(v11 + 40) = 0u;
    *(unsigned char *)(v11 + 56) = 0;
    a1();
  }
}

void sub_24F8853B0(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a1 + 24))
  {
    id v8 = v5;
    sub_24F781274(&qword_26B1F7040);
    swift_willThrowTypedImpl();
    id v9 = v5;
    a2(v5, 1);
    sub_24F887580(v5, v6, v7, 1);
    sub_24F887580(v5, v6, v7, 1);
  }
  else
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v6;
    *(void *)(v10 + 24) = v7;
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = sub_24F887864;
    void v11[3] = v10;
    v11[4] = a2;
    v11[5] = a3;
    sub_24F8875DC(v5, v6, v7, 0);
    swift_retain();
    swift_retain();
    sub_24F88A410((uint64_t)sub_24F8875D0, (uint64_t)v11);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_24F885540(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t, void))
{
  sub_24F772C8C();
  uint64_t v7 = a4(a1, 0);
  return a2(v7);
}

uint64_t DatabasePool.unsafeReentrantRead<A>(_:)(uint64_t a1)
{
  if (sub_24F781674(a1))
  {
    sub_24F88A9F4();
    return swift_release();
  }
  else if (*(void *)(v1 + 24))
  {
    MEMORY[0x270FA5388](0);
    sub_24F77EB64();
    sub_24F771214((uint64_t (*)(char *))sub_24F886E0C);
    return swift_release();
  }
  else
  {
    sub_24F7DC6DC();
    uint64_t v3 = swift_allocError();
    sub_24F77E3D8(v3, v4);
    return sub_24F780190(v5, v6);
  }
}

uint64_t sub_24F8856D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v20[1] = a6;
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v12 = sub_24F8CFF90();
  uint64_t v13 = sub_24F8CF610();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v20 - v15;
  uint64_t v17 = swift_projectBox();
  v20[6] = a5;
  v20[7] = a1;
  char v21 = a2 & 1;
  v20[4] = a7;
  v20[5] = a4;
  uint64_t v18 = sub_24F781274(&qword_269A2A530);
  sub_24F887A00((void (*)(uint64_t))sub_24F8877D4, v18, (uint64_t)v16);
  sub_24F7771BC((uint64_t)v16, 0, 1, v12);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(v17, v16, v13);
  return sub_24F8CF5B0();
}

uint64_t sub_24F885878@<X0>(uint64_t a1@<X8>)
{
  return sub_24F839C64((void (*)(uint64_t))sub_24F8877E4, a1);
}

uint64_t DatabasePool.asyncConcurrentRead(_:)(void (*a1)(void *, uint64_t), uint64_t a2)
{
  uint64_t v5 = sub_24F8CEC20();
  sub_24F770DF4();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_24F76B830();
  uint64_t v11 = v10 - v9;
  sub_24F88B504((uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 209, *(void *)(v2 + 16));
  if (Database.isInsideTransaction.getter())
  {
    sub_24F775DB8();
    sub_24F770EAC();
    sub_24F8CF9D0();
    sub_24F77B65C();
  }
  dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
  if (*(void *)(v2 + 24))
  {
    swift_retain();
    sub_24F781274(&qword_269A2C290);
    sub_24F8CF560();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v22;
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = sub_24F7712C0;
    void v19[3] = v18;
    v19[4] = v12;
    void v19[5] = a1;
    v19[6] = a2;
    swift_retain();
    id v20 = v12;
    swift_retain();
    sub_24F88A410((uint64_t)sub_24F8873D0, (uint64_t)v19);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_24F7DC6DC();
    uint64_t v13 = (void *)swift_allocError();
    sub_24F77E3D8((uint64_t)v13, v14);
    *(void *)(v15 + 8) = v16;
    *(void *)(v15 + 16) = 0x800000024F8D45F0;
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(unsigned char *)(v15 + 56) = 0;
    swift_willThrow();
    sub_24F8CF5B0();
    id v17 = v13;
    a1(v13, 1);
  }
  sub_24F8CEC10();
  sub_24F8CF590();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_24F885BC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v13 = a1;
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v1 = sub_24F8CFF90();
  uint64_t v2 = sub_24F8CF610();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v6 = sub_24F8CEC20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_projectBox();
  sub_24F8CEC10();
  sub_24F8CF590();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  uint64_t result = sub_24F777048((uint64_t)v5, 1, v1);
  if (result != 1) {
    return sub_24F882548(v1, (uint64_t)&v14, v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_24F885DCC(void *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t))
{
  char v12 = 0;
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&v12);
  if (v8)
  {
    sub_24F8CF5B0();
    id v9 = v8;
    a5(v8, 1);
  }
  else
  {
    sub_24F772C8C();
    sub_24F8CF5B0();
    a5(a1, 0);
  }
  Database.commit()();
  if (v10) {

  }
  return a2();
}

Swift::Void __swiftcall DatabasePool.invalidateReadOnlyConnections()()
{
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_24F8844AC();
    swift_release();
  }
}

uint64_t sub_24F885F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[2] = a2;
  v4[3] = a3;
  return sub_24F8565FC((uint64_t)sub_24F8877AC, (uint64_t)v4);
}

uint64_t sub_24F885F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = sub_24F8CEC00();
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24F8CEBD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v2 + 56);
  sub_24F781274(&qword_26B1F78C0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DDBF0;
  sub_24F8CEBC0();
  aBlock[0] = v11;
  sub_24F83978C((unint64_t *)&qword_26B1F7958, MEMORY[0x263F8F030]);
  sub_24F781274(&qword_26B1F7960);
  sub_24F7D9F58((unint64_t *)&qword_26B1F78B8, &qword_26B1F7960);
  sub_24F8CF6D0();
  char v12 = (void *)swift_allocObject();
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  void v12[2] = v3;
  void v12[3] = v13;
  v12[4] = v14;
  aBlock[4] = sub_24F8877A0;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24F8363BC;
  aBlock[3] = &unk_270108488;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24F8CEBE0();
  MEMORY[0x253363DC0](0, v6, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t DatabasePool.writeInTransaction(_:_:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  v4[16] = *a1;
  uint64_t v5 = a2;
  uint64_t v6 = a3;
  return sub_24F8565FC((uint64_t)sub_24F83AE1C, (uint64_t)v4);
}

void DatabasePool._add<A>(observation:scheduling:onChange:)(uint64_t *a1@<X0>, void (*a2)(char *)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  sub_24F773850();
  uint64_t v30 = v8;
  long long v31 = v7;
  uint64_t v9 = type metadata accessor for Configuration();
  uint64_t v10 = sub_24F77AD34(v9);
  MEMORY[0x270FA5388](v10);
  sub_24F76B830();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v23 = a1[3];
  uint64_t v16 = a1[4];
  uint64_t v24 = a1[5];
  uint64_t v17 = a1[6];
  uint64_t v25 = a1[7];
  uint64_t v18 = a1[8];
  uint64_t v26 = a1[9];
  int v28 = *((unsigned __int8 *)a1 + 80);
  uint64_t v19 = a1[11];
  uint64_t v27 = a1[12];
  uint64_t v20 = a1[13];
  DatabasePool.configuration.getter(v12 - v11);
  LODWORD(a1) = *(unsigned __int8 *)(v13 + 1);
  sub_24F7EECCC(v13);
  if (a1 == 1)
  {
    uint64_t v36 = v14;
    uint64_t v37 = v22;
    uint64_t v38 = v15;
    uint64_t v39 = v23;
    uint64_t v40 = v16;
    uint64_t v41 = v24;
    uint64_t v42 = v17;
    uint64_t v43 = v25;
    uint64_t v44 = v18;
    uint64_t v45 = v26;
    char v46 = v28;
    uint64_t v47 = v19;
    uint64_t v48 = v27;
    uint64_t v49 = v20;
    sub_24F887BB0(&v36, v31, a2, a3, v30, a4, (uint64_t)&protocol witness table for DatabasePool, a5, a6);
  }
  else
  {
    uint64_t v36 = v14;
    uint64_t v37 = v22;
    sub_24F77BA30();
    if (v28)
    {
      char v46 = 1;
      uint64_t v47 = v19;
      uint64_t v48 = v21;
      uint64_t v49 = v20;
      sub_24F788E6C();
    }
    else
    {
      char v46 = 0;
      uint64_t v47 = v19;
      uint64_t v48 = v21;
      uint64_t v49 = v20;
      sub_24F8864FC(&v36);
    }
  }
}

uint64_t sub_24F8864FC(void *a1)
{
  MEMORY[0x270FA5388](a1);
  memcpy(__dst, a1, sizeof(__dst));
  unint64_t v3 = a1[11];
  uint64_t v2 = (void (*)(unint64_t))a1[12];
  type metadata accessor for ValueConcurrentObserver();
  swift_retain();
  swift_retain();
  unint64_t v4 = sub_24F78C430(v3);
  v2(v4);
  uint64_t v5 = __dst[2];
  uint64_t v6 = __dst[4];
  uint64_t v7 = __dst[6];
  uint64_t v8 = __dst[8];
  sub_24F78C440(__dst[0]);
  sub_24F78C440(v5);
  sub_24F78C440(v6);
  sub_24F78C440(v7);
  sub_24F78C440(v8);
  swift_retain();
  sub_24F869E7C();
  sub_24F86AA58();
  return swift_release();
}

void sub_24F88667C()
{
}

uint64_t sub_24F886698(uint64_t a1)
{
  return DatabasePool.read<A>(_:)(a1);
}

uint64_t sub_24F8866B4(uint64_t a1)
{
  return DatabasePool.unsafeRead<A>(_:)(a1);
}

uint64_t sub_24F8866D0(uint64_t a1)
{
  return DatabasePool.unsafeReentrantRead<A>(_:)(a1);
}

uint64_t sub_24F8866EC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24F886734(uint64_t a1, char a2)
{
  return sub_24F8856D8(a1, a2 & 1, v2[3], v2[4], v2[5], v2[6], v2[2]);
}

uint64_t sub_24F886748()
{
  swift_release();
  sub_24F77EE08();
  return swift_deallocObject();
}

uint64_t sub_24F886780@<X0>(uint64_t a1@<X8>)
{
  return sub_24F885BC4(a1);
}

uint64_t sub_24F8867A0()
{
  return swift_deallocObject();
}

uint64_t sub_24F8867B0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_24F8867F8(void *a1@<X8>)
{
  sub_24F883B34(*(void *)(v1 + 16), a1);
}

uint64_t sub_24F886818(intptr_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v38 = a2;
  uint64_t v9 = sub_24F8CF520();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v39 = sub_24F8CF4D0();
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_24F8CEC00();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24F781274(qword_26B1F73C0);
  swift_allocObject();
  v4[4] = sub_24F882F74(MEMORY[0x263F8EE78]);
  if (a1 < 1)
  {
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
  }
  else
  {
    void v4[2] = a3;
    v4[3] = a4;
    uint64_t v32 = a4;
    swift_retain();
    v4[5] = dispatch_semaphore_create(a1);
    void v4[6] = dispatch_group_create();
    unint64_t v33 = sub_24F783524();
    uint64_t v34 = v13;
    uint64_t v37 = v14;
    uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v35 = v14 + 16;
    uint64_t v36 = v17;
    uint64_t v43 = v16;
    uint64_t v18 = v16;
    uint64_t v19 = v38;
    v17(v18, v38, v13);
    sub_24F781274(qword_26B1F78C8);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_24F8DDBF0;
    sub_24F8CF4C0();
    uint64_t v44 = v20;
    uint64_t v30 = sub_24F83978C((unint64_t *)&qword_26B1F7F60, MEMORY[0x263F8F0F8]);
    uint64_t v29 = sub_24F781274(&qword_26B1F7F40);
    uint64_t v31 = sub_24F7D9F58((unint64_t *)&qword_26B1F7EB8, &qword_26B1F7F40);
    sub_24F8CF6D0();
    unsigned int v28 = *MEMORY[0x263F8F130];
    uint64_t v21 = v42;
    uint64_t v41 = *(void *)(v41 + 104);
    ((void (*)(unsigned char *))v41)(v11);
    uint64_t v22 = v43;
    v5[7] = sub_24F8CF580();
    uint64_t v23 = v22;
    uint64_t v24 = v34;
    v36(v23, v19, v34);
    uint64_t v44 = MEMORY[0x263F8EE78];
    sub_24F8CF6D0();
    ((void (*)(unsigned char *, void, uint64_t))v41)(v11, v28, v21);
    uint64_t v25 = sub_24F8CF580();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v19, v24);
    v5[8] = v25;
    return (uint64_t)v5;
  }
  return result;
}

void sub_24F886CD0(uint64_t a1)
{
  sub_24F883CD0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_24F886CEC()
{
}

uint64_t sub_24F886D1C()
{
  return sub_24F885F28(v0[2], v0[3], v0[4]);
}

uint64_t sub_24F886D28@<X0>(BOOL *a1@<X8>)
{
  return sub_24F884454(v1, a1);
}

uint64_t sub_24F886D44()
{
  return sub_24F884870(v0);
}

uint64_t sub_24F886D60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_24F886D94()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24F886DCC(uint64_t a1)
{
  sub_24F884C40(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

void sub_24F886DD4()
{
}

void sub_24F886E04(uint64_t a1)
{
  sub_24F8853B0(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

void sub_24F886E0C()
{
}

uint64_t sub_24F886E3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  sub_24F8CF5A0();
  unint64_t v4 = *(NSObject **)(a1 + 48);
  dispatch_group_enter(v4);
  swift_retain();
  sub_24F882B44((uint64_t)sub_24F88744C, a1);
  if (v1)
  {
    swift_release();
    uint64_t v6 = v3;
    sub_24F8CF5B0();
    dispatch_group_leave(v4);
    swift_willThrow();
  }
  else
  {
    uint64_t v7 = v5;
    swift_release();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = v7;
    uint64_t v6 = *(void *)(v7 + 16);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_24F8874A8;
    *(void *)(v9 + 24) = v8;
    swift_retain();
    swift_retain();
  }
  return v6;
}

uint64_t sub_24F886F70(void *a1, uint64_t a2)
{
  type metadata accessor for SerializedDatabase();
  swift_getKeyPath();
  swift_retain();
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_24F882694(v5);
  swift_release();
  uint64_t v7 = swift_bridgeObjectRelease();
  if (v6)
  {
    *(unsigned char *)(v6 + 24) = 0;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(a2 + 16))(&v11, v7);
    if (!v2)
    {
      uint64_t v8 = v11;
      sub_24F781274(&qword_269A2C298);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v8;
      *(unsigned char *)(v6 + 24) = 0;
      swift_retain();
      uint64_t v9 = swift_retain();
      MEMORY[0x2533638D0](v9);
      sub_24F766F18(*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
      sub_24F8CF140();
      sub_24F8CF0B0();
      swift_release();
    }
  }
  return v6;
}

unsigned char *sub_24F8870A4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + *(void *)(**(void **)a2 + 96)) = *result;
  return result;
}

void sub_24F8870C8()
{
  swift_retain();
  sub_24F882D80();
  swift_release();
  sub_24F8CF5B0();
  uint64_t v1 = *(NSObject **)(v0 + 48);
  dispatch_group_leave(v1);
}

void sub_24F887164(void (*a1)(void *))
{
  swift_retain();
  uint64_t v2 = (void *)sub_24F887220();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_release();
  v7[0] = v2;
  v7[1] = v4;
  void v7[2] = v6;
  char v8 = 0;
  a1(v7);
  sub_24F887580(v2, v4, v6, 0);
}

uint64_t sub_24F887220()
{
  sub_24F781274(&qword_269A2C290);
  uint64_t result = sub_24F8CF560();
  if (!v0) {
    return v2;
  }
  return result;
}

void *sub_24F88729C(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4 = sub_24F8CF4B0();
  uint64_t result = a2(&v6, v4);
  if (!v2) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_24F8872FC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_24F8CF4B0();
  return a2(v3);
}

uint64_t sub_24F88733C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24F886E3C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_24F88736C@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F88733C(v1, a1);
}

uint64_t sub_24F887388()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F8873D0(void *a1)
{
  return sub_24F885DCC(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void *, uint64_t))(v1 + 40));
}

uint64_t method lookup function for DatabasePool(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DatabasePool);
}

uint64_t dispatch thunk of DatabasePool.__allocating_init(path:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_24F887420@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_24F886F70(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_24F88744C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F887420(a1, v2, a2);
}

uint64_t sub_24F887468()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_24F8874A8()
{
}

void sub_24F8874D0()
{
  *(unsigned char *)(v0 + 24) = 1;
}

uint64_t sub_24F8874DC@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_24F883294(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_24F887508@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F8874DC(*(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_24F887528(unsigned char *a1@<X8>)
{
}

unsigned char *sub_24F887544(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + *(void *)(**(void **)a2 + 96)) = *result;
  return result;
}

uint64_t sub_24F887568()
{
  return 8;
}

void *sub_24F887574(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_24F887580(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
  }
  else
  {
    swift_release();
    swift_release();
  }
}

uint64_t sub_24F8875D0(uint64_t a1)
{
  return sub_24F885540(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t, void))(v1 + 32));
}

id sub_24F8875DC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    return a1;
  }
  else
  {
    swift_retain();
    return (id)swift_retain();
  }
}

void sub_24F887628()
{
  sub_24F773968();
  sub_24F772C3C(v0, v1);
}

uint64_t sub_24F887644()
{
  swift_release();
  swift_release();
  sub_24F77EE08();
  return swift_deallocObject();
}

void sub_24F88767C()
{
  sub_24F887164(*(void (**)(void *))(v0 + 16));
}

uint64_t sub_24F887688(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24F887698()
{
  return swift_release();
}

uint64_t sub_24F8876A4(void *a1)
{
  return sub_24F884DD0(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *, uint64_t))(v1 + 32));
}

void *sub_24F8876B0@<X0>(uint64_t a1@<X0>, void *(*a2)(uint64_t *__return_ptr, uint64_t)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F88729C(a1, a2);
  if (!v3) {
    *a3 = result & 1;
  }
  return result;
}

uint64_t sub_24F8876E0(void *a1, uint64_t *a2)
{
  return sub_24F882AFC(a1, *a2);
}

uint64_t sub_24F8876FC@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_24F8831F8(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_24F887728(void *a1)
{
  return sub_24F8876E0(a1, *(uint64_t **)(v1 + 16));
}

void *sub_24F887744@<X0>(unsigned char *a1@<X8>)
{
  return sub_24F8876B0(*(void *)(v1 + 16), *(void *(**)(uint64_t *__return_ptr, uint64_t))(v1 + 24), a1);
}

uint64_t sub_24F887768()
{
  swift_release();
  swift_release();
  sub_24F77EE08();
  return swift_deallocObject();
}

uint64_t sub_24F8877A0()
{
  return sub_24F8872FC(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_24F8877AC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24F8877D4()
{
  sub_24F773968();
  return sub_24F885878(v0);
}

uint64_t sub_24F8877E4(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 24))(*(void *)(v1 + 40));
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t sub_24F887824()
{
  return sub_24F883314(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24F887844@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F8876FC(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_24F887868()
{
}

void sub_24F88789C()
{
}

uint64_t sub_24F8878B4()
{
  return sub_24F887824();
}

uint64_t sub_24F8878CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F887844(a1);
}

uint64_t sub_24F8878E4(void *a1)
{
  return sub_24F887728(a1);
}

uint64_t sub_24F8878FC(uint64_t a1, uint64_t a2)
{
  sub_24F773974();
  (*(void (**)(void))(v3 + 32))();
  return MEMORY[0x270FA2408](a2);
}

uint64_t sub_24F887970(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_allocError();
  sub_24F773974();
  (*(void (**)(void))(v4 + 32))();
  return MEMORY[0x270FA2410](a2, v3);
}

uint64_t sub_24F887A00@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  sub_24F77AD10();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_24F76B830();
  uint64_t v12 = v11 - v10;
  sub_24F77AD10();
  MEMORY[0x270FA5388](v13);
  sub_24F76B830();
  uint64_t v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v15 - v14, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = *(void *)(a2 + 24);
    sub_24F773974();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(a3, v16, v19);
    sub_24F8CFF90();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v16, v6);
    a1(v12);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  }
}

uint64_t sub_24F887BB0@<X0>(const void *a1@<X0>, void *a2@<X1>, void (*a3)(char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v37 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  uint64_t v33 = v15;
  sub_24F771D60();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v33 - v17;
  memcpy(__dst, a1, 0x70uLL);
  uint64_t v19 = a2[5];
  uint64_t v20 = a2[6];
  sub_24F7811D0(a2 + 2, v19);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  if (v21)
  {
    uint64_t v22 = v37;
    MEMORY[0x270FA5388](v21);
    *(&v33 - 6) = v36;
    *(&v33 - 5) = a6;
    *(&v33 - 4) = a7;
    *(&v33 - 3) = a8;
    *(&v33 - 2) = (uint64_t)__dst;
    (*(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>)))(a7 + 64))(sub_24F88A07C);
    v34(v18);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, AssociatedTypeWitness);
    uint64_t v30 = type metadata accessor for AnyDatabaseCancellable();
    swift_allocObject();
    uint64_t result = AnyDatabaseCancellable.init(cancel:)((uint64_t)nullsub_1, 0);
    uint64_t v32 = result;
    uint64_t v22[3] = v30;
    v22[4] = (uint64_t)&protocol witness table for AnyDatabaseCancellable;
  }
  else
  {
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = 0;
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = v36;
    v24[2] = v36;
    v24[3] = a6;
    v24[4] = a7;
    v24[5] = a8;
    v24[6] = v23;
    memcpy(v24 + 7, a1, 0x70uLL);
    uint64_t v26 = v34;
    uint64_t v27 = v35;
    v24[21] = a2;
    v24[22] = v26;
    void v24[23] = v27;
    unsigned int v28 = *(void (**)(uint64_t (*)(uint64_t, char), void *, uint64_t, uint64_t))(a7 + 40);
    swift_retain();
    sub_24F7DEC98(__dst);
    swift_retain();
    swift_retain();
    v28(sub_24F88A030, v24, v25, a7);
    swift_release();
    uint64_t v29 = type metadata accessor for AnyDatabaseCancellable();
    swift_allocObject();
    swift_retain();
    uint64_t v32 = AnyDatabaseCancellable.init(cancel:)((uint64_t)sub_24F88A074, v23);
    uint64_t v22 = v37;
    v37[3] = v29;
    v22[4] = (uint64_t)&protocol witness table for AnyDatabaseCancellable;
    uint64_t result = swift_release();
  }
  *uint64_t v22 = v32;
  return result;
}

uint64_t DatabaseReader.backup(to:pagesPerStep:progress:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = swift_getObjectType();
  void v16[2] = a6;
  v16[3] = a7;
  uint64_t v17 = v7;
  int v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  return (*(uint64_t (**)(uint64_t (*)(uint64_t), void *, uint64_t, uint64_t, uint64_t))(a2 + 24))(sub_24F887FBC, v16, MEMORY[0x263F8EE60] + 8, ObjectType, a2);
}

uint64_t sub_24F887FBC(uint64_t a1)
{
  return sub_24F887FF8(a1, *(_DWORD *)(v1 + 40), 0, 0, *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F887FF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v9[2] = a1;
  int v10 = a2;
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v14 = a6;
  return (*(uint64_t (**)(void (*)(), void *, uint64_t, uint64_t, uint64_t))(a8 + 32))(sub_24F889F38, v9, MEMORY[0x263F8EE60] + 8, a7, a8);
}

void sub_24F888064(uint64_t a1, uint64_t a2, int a3, void (*a4)(void), uint64_t a5, void (*a6)(char *))
{
}

uint64_t DatabaseReader.read<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  void v7[5] = a4;
  v7[6] = a5;
  void v7[3] = a2;
  v7[4] = a3;
  void v7[2] = a1;
  return sub_24F773820((uint64_t)sub_24F8880C4);
}

uint64_t sub_24F8880C4()
{
  sub_24F77ACEC();
  uint64_t v1 = swift_task_alloc();
  sub_24F782D30(v1);
  uint64_t v2 = (void *)sub_24F77BB70();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F888178;
  sub_24F770E28();
  return v3();
}

uint64_t sub_24F888178()
{
  sub_24F77ACEC();
  sub_24F773808();
  uint64_t v3 = v2;
  sub_24F77ED0C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_24F77ED0C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24F88A3C8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
}

uint64_t sub_24F888284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a5;
  v13[3] = a6;
  void v13[4] = a7;
  uint64_t v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(a7 + 40);
  swift_retain();
  v14(sub_24F889F0C, v13, a5, a7);
  return swift_release();
}

uint64_t sub_24F88834C(uint64_t a1)
{
  return sub_24F888688(a1, sub_24F888284);
}

uint64_t DatabaseReader.unsafeRead<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  void v7[5] = a4;
  v7[6] = a5;
  void v7[3] = a2;
  v7[4] = a3;
  void v7[2] = a1;
  return sub_24F773820((uint64_t)sub_24F888388);
}

uint64_t sub_24F888388()
{
  sub_24F77ACEC();
  uint64_t v1 = swift_task_alloc();
  sub_24F782D30(v1);
  uint64_t v2 = (void *)sub_24F77BB70();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F88843C;
  sub_24F770E28();
  return v3();
}

uint64_t sub_24F88843C()
{
  sub_24F77ACEC();
  sub_24F773808();
  uint64_t v3 = v2;
  sub_24F77ED0C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_24F77ED0C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24F888548, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
}

uint64_t sub_24F888548()
{
  sub_24F77ACEC();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F8885A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a5;
  v13[3] = a6;
  void v13[4] = a7;
  uint64_t v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(a7 + 56);
  swift_retain();
  v14(sub_24F889F0C, v13, a5, a7);
  return swift_release();
}

uint64_t sub_24F888670(uint64_t a1)
{
  return sub_24F888688(a1, sub_24F8885A8);
}

uint64_t sub_24F888688(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4]);
}

uint64_t sub_24F8886A0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_24F773974();
  MEMORY[0x270FA5388](v7);
  sub_24F76B830();
  uint64_t v10 = v9 - v8;
  if (v11)
  {
    id v14 = a1;
    sub_24F781274(&qword_26B1F7040);
    swift_willThrowTypedImpl();
    uint64_t v15 = a1;
    sub_24F781274(&qword_26B1F7040);
    return sub_24F887970((uint64_t)&v15, a3);
  }
  else
  {
    uint64_t v12 = swift_retain();
    a4(v12);
    sub_24F8703C8(a1, 0);
    sub_24F781274(&qword_26B1F7040);
    return sub_24F8878FC(v10, a3);
  }
}

void DatabaseReader.readPublisher<A>(value:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  unint64_t v12 = sub_24F783524();
  uint64_t v13 = (void *)sub_24F8CF540();
  uint64_t v15 = v13;
  unint64_t v14 = sub_24F78A77C();
  DatabaseReader.readPublisher<A, B>(receiveOn:value:)((uint64_t)&v15, a1, a2, a3, v12, a4, a5, v14, a6);
}

uint64_t DatabaseReader.readPublisher<A, B>(receiveOn:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v38 = a3;
  uint64_t v39 = a7;
  uint64_t v37 = a2;
  uint64_t v43 = a1;
  uint64_t v44 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v41 = v13;
  uint64_t v42 = v12;
  sub_24F771D60();
  MEMORY[0x270FA5388](v14);
  uint64_t v32 = (uint64_t)&WitnessTable - v15;
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F8CEB40();
  swift_getWitnessTable();
  uint64_t v16 = sub_24F8CEB70();
  sub_24F77AD10();
  uint64_t v34 = v17;
  sub_24F771D60();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&WitnessTable - v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v45 = v16;
  uint64_t v46 = a5;
  uint64_t v47 = WitnessTable;
  uint64_t v48 = a8;
  uint64_t v21 = type metadata accessor for ReceiveValuesOn();
  sub_24F77AD10();
  uint64_t v33 = v22;
  sub_24F771D60();
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&WitnessTable - v24;
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = v35;
  v26[3] = a5;
  uint64_t v27 = v39;
  v26[4] = a6;
  v26[5] = v27;
  v26[6] = a8;
  uint64_t v28 = v37;
  v26[7] = v36;
  v26[8] = v28;
  v26[9] = v38;
  swift_unknownObjectRetain();
  swift_retain();
  sub_24F8CEB60();
  uint64_t v29 = v32;
  sub_24F7771BC(v32, 1, 1, AssociatedTypeWitness);
  sub_24F8450D8(v43, v29, v16, a5, WitnessTable, (uint64_t)v25);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v29, v42);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v16);
  swift_getWitnessTable();
  *uint64_t v44 = sub_24F8CEB90();
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v25, v21);
}

uint64_t sub_24F888BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  sub_24F7688B8(&qword_26B1F7040);
  sub_24F8CEB40();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v17[2] = a4;
  _OWORD v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v17[7] = a1;
  v17[8] = a2;
  v17[9] = a3;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t result = sub_24F8CEB50();
  *a9 = result;
  return result;
}

uint64_t sub_24F888C94@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F888BA0(v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_24F888CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v17[2] = a6;
  _OWORD v17[3] = a7;
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = a10;
  v17[7] = a1;
  v17[8] = a2;
  v17[9] = a4;
  v17[10] = a5;
  uint64_t v18 = *(void (**)(uint64_t (*)(uint64_t, char), void *, uint64_t, uint64_t))(a9 + 40);
  swift_retain();
  swift_retain();
  v18(sub_24F889E40, v17, a6, a9);
  return swift_release();
}

uint64_t sub_24F888D98(uint64_t a1, char a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v23 = a4;
  uint64_t v24 = a3;
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v15 = sub_24F8CFF90();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v21 - v17;
  uint64_t v32 = a1;
  char v33 = a2 & 1;
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v27 = a9;
  uint64_t v28 = a10;
  uint64_t v29 = a11;
  uint64_t v30 = v21;
  uint64_t v31 = v22;
  uint64_t v19 = sub_24F781274(&qword_269A2A530);
  sub_24F887A00((void (*)(uint64_t))sub_24F889E80, v19, (uint64_t)v18);
  v24(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_24F888F10@<X0>(uint64_t a1@<X8>)
{
  return sub_24F839C64((void (*)(uint64_t))sub_24F889E94, a1);
}

uint64_t DatabasePublishers.Read.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = sub_24F781274(&qword_26B1F7040);
  return MEMORY[0x270EE3B58](a1, v8, v9, v10, a3, a4);
}

uint64_t sub_24F889000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DatabasePublishers.Read.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_24F889014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v10[7] = a1;
  void v10[2] = a3;
  void v10[3] = a4;
  v10[4] = a5;
  v10[5] = a6;
  v10[6] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return sub_24F7715C0(1, (uint64_t)sub_24F88A0A0, (uint64_t)v10, AssociatedTypeWitness, a7);
}

uint64_t sub_24F8890A8@<X0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  memcpy(v7, __src, sizeof(v7));
  uint64_t v5 = type metadata accessor for ValueObservation();
  return sub_24F7DE7BC(a2, v5, a3);
}

uint64_t sub_24F889128(uint64_t a1, char a2, uint64_t a3, uint64_t *a4, void *a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v38 = a8;
  uint64_t v39 = a6;
  uint64_t v40 = a5;
  uint64_t v41 = a7;
  uint64_t v43 = a4;
  swift_getAssociatedTypeWitness();
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v42 = sub_24F8CFF90();
  uint64_t v14 = *(void *)(v42 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v42);
  uint64_t v17 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v34 - v18;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a3 + 16) & 1) == 0)
  {
    v34[1] = v34;
    uint64_t v37 = a10;
    uint64_t v44 = a1;
    char v45 = a2 & 1;
    MEMORY[0x270FA5388](result);
    uint64_t v35 = a9;
    uint64_t v36 = a11;
    uint64_t v21 = v38;
    v34[-6] = v38;
    v34[-5] = a9;
    v34[-4] = v22;
    v34[-3] = a11;
    v34[-2] = v43;
    uint64_t v23 = sub_24F781274(&qword_269A2A530);
    sub_24F887A00((void (*)(uint64_t))sub_24F88A0C4, v23, (uint64_t)v19);
    uint64_t v24 = v42;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v42);
    unint64_t v25 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v26 = (char *)swift_allocObject();
    uint64_t v27 = v35;
    *((void *)v26 + 2) = v21;
    *((void *)v26 + 3) = v27;
    uint64_t v28 = v36;
    *((void *)v26 + 4) = v37;
    *((void *)v26 + 5) = v28;
    uint64_t v29 = v39;
    *((void *)v26 + 6) = a3;
    *((void *)v26 + 7) = v29;
    *((void *)v26 + 8) = v41;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v26[v25], v17, v24);
    uint64_t v39 = v19;
    uint64_t v30 = v43;
    memcpy(&v26[(v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8], v43, 0x70uLL);
    uint64_t v31 = v40[5];
    uint64_t v32 = v40[6];
    sub_24F7811D0(v40 + 2, v31);
    char v33 = *(void (**)(uint64_t (*)(), char *, uint64_t, uint64_t))(v32 + 8);
    swift_retain();
    swift_retain();
    sub_24F7DEC98(v30);
    v33(sub_24F88A29C, v26, v31, v32);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v39, v42);
  }
  return result;
}

uint64_t sub_24F889450@<X0>(uint64_t a1@<X8>)
{
  return sub_24F839C64((void (*)(uint64_t))sub_24F88A39C, a1);
}

uint64_t sub_24F8894EC@<X0>(void *__src@<X0>, uint64_t a2@<X1>, void *a3@<X6>, uint64_t a4@<X8>)
{
  memcpy(v10, __src, sizeof(v10));
  uint64_t v8 = type metadata accessor for ValueObservation();
  uint64_t result = sub_24F7DE7BC(a2, v8, a4);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_24F88957C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[0] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v7 = sub_24F8CFF90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)v16 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v16 - v13;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a4, v7);
    sub_24F882548(v7, (uint64_t)&v17, (uint64_t)v14);
    ((void (*)(char *))v16[0])(v14);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_24F88979C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t AnyDatabaseReader.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t AnyDatabaseReader.init(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t AnyDatabaseReader.configuration.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnyDatabaseReader.close()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

Swift::Void __swiftcall AnyDatabaseReader.interrupt()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t AnyDatabaseReader.read<A>(_:)()
{
  sub_24F77DC8C();
  uint64_t v0 = sub_24F77382C();
  return v1(v0);
}

uint64_t AnyDatabaseReader.asyncRead(_:)()
{
  sub_24F775A98();
  uint64_t v0 = sub_24F77BB58();
  return v1(v0);
}

uint64_t AnyDatabaseReader.unsafeRead<A>(_:)()
{
  sub_24F77DC8C();
  uint64_t v0 = sub_24F77382C();
  return v1(v0);
}

uint64_t AnyDatabaseReader.asyncUnsafeRead(_:)()
{
  sub_24F775A98();
  uint64_t v0 = sub_24F77BB58();
  return v1(v0);
}

uint64_t AnyDatabaseReader.unsafeReentrantRead<A>(_:)()
{
  sub_24F77DC8C();
  uint64_t v0 = sub_24F77382C();
  return v1(v0);
}

uint64_t AnyDatabaseReader._add<A>(observation:scheduling:onChange:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v18 = a1[1];
  long long v19 = *a1;
  long long v16 = a1[3];
  long long v17 = a1[2];
  uint64_t v9 = *((void *)a1 + 8);
  uint64_t v10 = *((void *)a1 + 9);
  char v11 = *((unsigned char *)a1 + 80);
  uint64_t v12 = *((void *)a1 + 11);
  uint64_t v13 = *(void *)(v6 + 24);
  uint64_t ObjectType = swift_getObjectType();
  v24[0] = v19;
  v24[1] = v18;
  v24[2] = v17;
  v24[3] = v16;
  uint64_t v25 = v9;
  uint64_t v26 = v10;
  char v27 = v11;
  uint64_t v28 = v12;
  long long v29 = a1[6];
  return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 72))(v24, a2, a3, a4, a5, a6, ObjectType, v13);
}

uint64_t AnyDatabaseReader.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AnyDatabaseReader.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

void sub_24F889BEC()
{
}

uint64_t sub_24F889C08()
{
  return AnyDatabaseReader.read<A>(_:)();
}

uint64_t sub_24F889C24()
{
  return AnyDatabaseReader.unsafeRead<A>(_:)();
}

uint64_t sub_24F889C40()
{
  return AnyDatabaseReader.unsafeReentrantRead<A>(_:)();
}

uint64_t dispatch thunk of DatabaseReader.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DatabaseReader.close()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DatabaseReader.interrupt()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DatabaseReader.read<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of DatabaseReader.asyncRead(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of DatabaseReader.unsafeRead<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of DatabaseReader.asyncUnsafeRead(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of DatabaseReader.unsafeReentrantRead<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of DatabaseReader._add<A>(observation:scheduling:onChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

uint64_t type metadata accessor for DatabasePublishers.Read()
{
  return sub_24F777DE0();
}

uint64_t type metadata accessor for AnyDatabaseReader()
{
  return self;
}

uint64_t method lookup function for AnyDatabaseReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AnyDatabaseReader);
}

uint64_t dispatch thunk of AnyDatabaseReader.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_24F889DCC(uint64_t a1, uint64_t a2)
{
  return sub_24F888CA8(a1, a2, v2[7], v2[8], v2[9], v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_24F889E00()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F889E40(uint64_t a1, char a2)
{
  return sub_24F888D98(a1, a2 & 1, *(void (**)(char *))(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_24F889E80@<X0>(uint64_t a1@<X8>)
{
  return sub_24F888F10(a1);
}

uint64_t sub_24F889E94(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 56))(*(void *)(v1 + 72));
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t sub_24F889ED4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F889F10(void *a1, char a2)
{
  return sub_24F8886A0(a1, a2 & 1, *(void *)(v2 + 40), *(void (**)(uint64_t))(v2 + 48));
}

void sub_24F889F38()
{
  sub_24F8A3878(*(void *)(v0 + 16), *(_DWORD *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40), *(void (**)(char *))(v0 + 48));
}

uint64_t sub_24F889F70()
{
  return swift_deallocObject();
}

uint64_t sub_24F889F80()
{
  swift_release();
  if (v0[7]) {
    swift_release();
  }
  if (v0[9]) {
    swift_release();
  }
  if (v0[11]) {
    swift_release();
  }
  if (v0[13]) {
    swift_release();
  }
  if (v0[15]) {
    swift_release();
  }
  if (v0[18] >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F88A030(uint64_t a1, char a2)
{
  return sub_24F889128(a1, a2 & 1, *(void *)(v2 + 48), (uint64_t *)(v2 + 56), *(void **)(v2 + 168), *(char **)(v2 + 176), *(void *)(v2 + 184), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_24F88A074()
{
  return sub_24F88979C(v0);
}

uint64_t sub_24F88A07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F889014(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_24F88A0A0@<X0>(uint64_t a1@<X8>)
{
  return sub_24F8890A8(*(void **)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_24F88A0C4@<X0>(uint64_t a1@<X8>)
{
  return sub_24F889450(a1);
}

uint64_t sub_24F88A0D4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v2 = *(void *)(sub_24F8CFF90() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  uint64_t v5 = (id *)(v0 + v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    sub_24F773974();
    (*(void (**)(id *, uint64_t))(v6 + 8))(v5, AssociatedTypeWitness);
  }
  uint64_t v7 = (void *)(v0 + v4);
  if (*(void *)(v0 + v4)) {
    swift_release();
  }
  if (v7[2]) {
    swift_release();
  }
  if (v7[4]) {
    swift_release();
  }
  if (v7[6]) {
    swift_release();
  }
  if (v7[8]) {
    swift_release();
  }
  if (v7[11] >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F88A29C()
{
  swift_getAssociatedTypeWitness();
  sub_24F7688B8(&qword_26B1F7040);
  uint64_t v1 = *(void *)(sub_24F8CFF90() - 8);
  return sub_24F88957C(v0[6], v0[7], v0[8], (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_24F88A39C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F8894EC(*(void **)(v2 + 48), *(void *)(v2 + 56), a1, a2);
}

void sub_24F88A3CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  sqlite3_interrupt(*(sqlite3 **)(v1 + 16));
}

uint64_t sub_24F88A410(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24F8CEBD0();
  sub_24F770DF4();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24F8CEC00();
  sub_24F770DF4();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  long long v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = (void *)swift_allocObject();
  uint64_t v17[2] = a1;
  _OWORD v17[3] = a2;
  v17[4] = v2;
  aBlock[4] = sub_24F88B6E8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24F8363BC;
  aBlock[3] = &unk_2701083C0;
  long long v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24F8CEBE0();
  v20[1] = MEMORY[0x263F8EE78];
  sub_24F768BC4();
  sub_24F781274(&qword_26B1F7960);
  sub_24F768B70();
  sub_24F8CF6D0();
  MEMORY[0x253363DC0](0, v16, v10, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
  return swift_release();
}

uint64_t sub_24F88A638(uint64_t a1)
{
  type metadata accessor for SchedulingWatchdog();
  if (sub_24F7834B0())
  {
    uint64_t v2 = *(void *)(a1 + 16);
    uint64_t v3 = sub_24F783564(v2);
    if (v3)
    {
      unsigned __int8 v4 = Database.isInsideTransaction.getter();
      sub_24F8A3C28();
      if ((v4 & 1) == 0) {
        sub_24F88B464(v2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 172, a1);
      }
      return swift_release();
    }
    else
    {
      MEMORY[0x270FA5388](v3);
      sub_24F8CF560();
      return swift_release();
    }
  }
  else
  {
    MEMORY[0x270FA5388](0);
    return sub_24F8CF560();
  }
}

uint64_t sub_24F88A7D8(uint64_t a1)
{
  type metadata accessor for SchedulingWatchdog();
  if (!sub_24F7834B0())
  {
    MEMORY[0x270FA5388](0);
    sub_24F781274(&qword_26B1F5660);
    uint64_t result = sub_24F8CF560();
    if (v1) {
      return result;
    }
    return v8;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_24F783564(v3);
  if (v4)
  {
    unsigned __int8 v5 = Database.isInsideTransaction.getter();
    Database.commit()();
    if (v5)
    {
      if (v6)
      {

        swift_release();
        return 1;
      }
      else
      {
        swift_release();
        return 0;
      }
    }
    else
    {
      if (v6) {

      }
      BOOL v8 = v6 != 0;
      sub_24F88B464(v3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 172, a1);
      swift_release();
    }
    return v8;
  }
  MEMORY[0x270FA5388](v4);
  sub_24F781274(&qword_26B1F5660);
  sub_24F8CF560();
  uint64_t result = swift_release();
  if (!v1) {
    return v8;
  }
  return result;
}

void sub_24F88A9F4()
{
  sub_24F76FF94();
  uint64_t v2 = v1;
  type metadata accessor for SchedulingWatchdog();
  if (sub_24F7834B0())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = sub_24F783564(v3);
    if (v4)
    {
      unsigned __int8 v5 = Database.isInsideTransaction.getter();
      v2(v3);
      if ((v5 & 1) == 0) {
        sub_24F88B464(v3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 172, v0);
      }
      swift_release();
    }
    else
    {
      MEMORY[0x270FA5388](v4);
      sub_24F8CF560();
      swift_release();
    }
  }
  else
  {
    MEMORY[0x270FA5388](0);
    sub_24F8CF560();
  }
  sub_24F77BC10();
}

uint64_t sub_24F88AB8C(uint64_t (*a1)(void))
{
  sub_24F88B504((uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 209, v1);
  return a1(*(void *)(v1 + 16));
}

void sub_24F88ABFC()
{
  sub_24F76FF94();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v34 = v5;
  uint64_t v35 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = v5;
  uint64_t v32 = *v2;
  uint64_t v33 = v14;
  uint64_t v15 = type metadata accessor for Configuration();
  uint64_t v16 = v15 - 8;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  long long v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v32 - v20;
  sub_24F7EEC68(v10, (uint64_t)&v32 - v20);
  v21[*(int *)(v16 + 88)] = 1;
  v2[3] = v13;
  v2[4] = v12;
  swift_bridgeObjectRetain();
  uint64_t v22 = v35;
  uint64_t v35 = v10;
  uint64_t v23 = sub_24F7ED750(v33, v8, v22, v4);
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7EEC68((uint64_t)v21, (uint64_t)v19);
  type metadata accessor for Database();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_24F8A442C(v34, v12, v23, v25, (uint64_t)v19);
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_24F7EECCC(v35);
    sub_24F7EECCC((uint64_t)v21);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v27 = v35;
    v2[2] = v26;
    if (v21[1] == 1) {
      uint64_t v28 = sub_24F7EDAFC();
    }
    else {
      uint64_t v28 = sub_24F7ED818();
    }
    long long v29 = (void *)v28;
    swift_bridgeObjectRelease();
    v2[5] = (uint64_t)v29;
    type metadata accessor for SchedulingWatchdog();
    uint64_t v30 = v2[2];
    swift_retain();
    id v31 = v29;
    sub_24F880368(v30);
    swift_release();

    sub_24F8CF560();
    sub_24F7EECCC(v27);
    sub_24F7EECCC((uint64_t)v21);
  }
  sub_24F77BC10();
}

uint64_t sub_24F88AE90()
{
  uint64_t result = sub_24F8A3B18();
  if (v0)
  {
    sub_24F8A3C28();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24F88AED0()
{
  sub_24F88A638(v0);
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

void sub_24F88AF1C()
{
}

uint64_t sub_24F88AF48()
{
  sub_24F88AED0();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t type metadata accessor for SerializedDatabase()
{
  return self;
}

void sub_24F88AFA0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned __int8 v5 = Database.isInsideTransaction.getter();
  a2(v4);
  if ((v5 & 1) == 0) {
    sub_24F88B464(v4, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 159, a1);
  }
}

void sub_24F88B03C()
{
  sub_24F88AFA0(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

void sub_24F88B05C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned __int8 v5 = Database.isInsideTransaction.getter();
  a2(&v6, v4);
  if ((v5 & 1) == 0) {
    sub_24F88B464(v4, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, 159, a1);
  }
}

uint64_t sub_24F88B10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t result = sub_24F7834B0();
  if (result)
  {
    uint64_t v9 = result;
    swift_retain();
    sub_24F880474(a1, v9, a2, a3, a4);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24F88B1AC()
{
  return sub_24F88B10C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_24F88B1CC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t result = sub_24F7834B0();
  if (result)
  {
    uint64_t v7 = result;
    swift_retain();
    char v8 = sub_24F880574(a1, v7, a2, a3);
    swift_release();
    return v8 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24F88B264()
{
  sub_24F76FF94();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for SchedulingWatchdog();
  uint64_t v4 = sub_24F7834B0();
  if (v4)
  {
    MEMORY[0x270FA5388](v4);
    sub_24F88073C(v3, v1);
    swift_release();
    sub_24F77BC10();
  }
  else
  {
    __break(1u);
  }
}

void sub_24F88B320()
{
  sub_24F76FF94();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  unsigned __int8 v7 = Database.isInsideTransaction.getter();
  v3(v6);
  if ((v7 & 1) == 0) {
    sub_24F88B464(v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GRDB/GRDB/Core/SerializedDatabase.swift", 77, 2, v1, v5);
  }
  sub_24F77BC10();
}

uint64_t sub_24F88B3B8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t result = a1(v3);
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 41) & 1) == 0)
  {
    uint64_t result = (uint64_t)Database.isInsideTransaction.getter();
    if (result)
    {
      uint64_t result = sub_24F8CF9D0();
      __break(1u);
    }
  }
  return result;
}

void sub_24F88B464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((*(unsigned char *)(*(void *)(a6 + 16) + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 41) & 1) == 0
    && (Database.isInsideTransaction.getter() & 1) != 0)
  {
    sub_24F773D54();
    __break(1u);
  }
}

uint64_t sub_24F88B504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t result = sub_24F78346C(*(void *)(a5 + 16));
  if ((result & 1) == 0)
  {
    uint64_t result = sub_24F773D54();
    __break(1u);
  }
  return result;
}

void sub_24F88B59C(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X1>, unsigned char *a3@<X8>)
{
  sub_24F88B05C(a1, a2);
  if (!v3) {
    *a3 = v5 & 1;
  }
}

void sub_24F88B5CC(unsigned char *a1@<X8>)
{
  sub_24F88B59C(*(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24), a1);
}

uint64_t sub_24F88B5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, uint64_t)@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_24F88B1CC(a1, a2, a3);
  if (!v4) {
    *a4 = result & 1;
  }
  return result;
}

uint64_t sub_24F88B61C@<X0>(unsigned char *a1@<X8>)
{
  return sub_24F88B5EC(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), a1);
}

void sub_24F88B63C()
{
}

void sub_24F88B65C()
{
}

void sub_24F88B688()
{
}

uint64_t sub_24F88B6A8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F88B6E8()
{
  return sub_24F88B3B8(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24F88B6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24F88B704()
{
  return swift_release();
}

uint64_t sub_24F88B70C()
{
  return sub_24F88AE90();
}

void sub_24F88B728()
{
}

void sub_24F88B754()
{
}

void sub_24F88B77C()
{
  uint64_t v0 = sub_24F77EB8C();
  sub_24F880850(v0, v1);
}

uint64_t sub_24F88B798()
{
  return static FetchableRecord.databaseDecodingUserInfo.getter();
}

uint64_t static FetchableRecord.databaseDecodingUserInfo.getter()
{
  sub_24F8CF970();
  return sub_24F8CEC70();
}

uint64_t sub_24F88B800()
{
  uint64_t v1 = sub_24F8CE4E0();
  sub_24F770DF4();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  sub_24F783208();
  uint64_t v5 = sub_24F8CE4B0();
  sub_24F770DF4();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_24F76B830();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_24F8CE4A0();
  sub_24F770DF4();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_24F76B830();
  uint64_t v18 = v17 - v16;
  sub_24F8CE530();
  swift_allocObject();
  uint64_t v19 = sub_24F8CE520();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v18, *MEMORY[0x263F060C0], v12);
  sub_24F8CE4C0();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, *MEMORY[0x263F060D0], v5);
  sub_24F8CE4D0();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, *MEMORY[0x263F060F8], v1);
  sub_24F8CE4F0();
  sub_24F8CF970();
  sub_24F8CEC70();
  sub_24F8CE510();
  return v19;
}

uint64_t static FetchableRecord.databaseJSONDecoder(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = sub_24F8CE4E0();
  sub_24F770DF4();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_24F76B830();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_24F8CE4B0();
  sub_24F770DF4();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  sub_24F76B830();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_24F8CE4A0();
  sub_24F770DF4();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  sub_24F783208();
  sub_24F8CE530();
  swift_allocObject();
  uint64_t v22 = sub_24F8CE520();
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v4, *MEMORY[0x263F060C0], v18);
  sub_24F8CE4C0();
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v17, *MEMORY[0x263F060D0], v11);
  sub_24F8CE4D0();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v10, *MEMORY[0x263F060F8], v24);
  sub_24F8CE4F0();
  (*(void (**)(uint64_t))(a4 + 16))(a3);
  sub_24F8CE510();
  return v22;
}

void sub_24F88BBCC(uint64_t a1@<X8>)
{
}

void sub_24F88BBE4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
}

void static FetchableRecord.databaseDateDecodingStrategy.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
}

void sub_24F88BC04(void *a1@<X8>)
{
}

uint64_t FetchRequest<>.fetchCursor(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F88BC74(a1, a2, a3, a4, (uint64_t (*)(uint64_t))static FetchableRecord.fetchCursor<A>(_:_:));
}

{
  return sub_24F88EA88(a1, a2, a3, a4, (uint64_t (*)(uint64_t))static DatabaseValueConvertible.fetchCursor<A>(_:_:));
}

uint64_t FetchRequest<>.fetchAll(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F88BC74(a1, a2, a3, a4, (uint64_t (*)(uint64_t))static FetchableRecord.fetchAll<A>(_:_:));
}

{
  return sub_24F88EA88(a1, a2, a3, a4, (uint64_t (*)(uint64_t))static DatabaseValueConvertible.fetchAll<A>(_:_:));
}

uint64_t sub_24F88BC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  sub_24F77C8D8();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_24F77B6D0();
  return a5(v6);
}

uint64_t FetchRequest<>.fetchOne(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return static FetchableRecord.fetchOne<A>(_:_:)(a1, AssociatedTypeWitness, a2, a3);
}

uint64_t FetchRequest<>.fetchSet(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24F77C8D8();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24F77B6D0();
  return static FetchableRecord<>.fetchSet<A>(_:_:)(v7, v8, v9, v10, v11, a5, v5);
}

void static FetchableRecord.fetchCursor(_:sql:arguments:adapter:)()
{
}

void static FetchableRecord.fetchAll(_:sql:arguments:adapter:)()
{
}

void sub_24F88BE2C()
{
  sub_24F76FF94();
  uint64_t v55 = (uint64_t (*)(uint64_t))v5;
  sub_24F77E3EC(v6, v7, v8, v9, v10, v11, v12, v5, v32, v0, v37, v38, v39, v40, v41, *((uint64_t *)&v41 + 1), v42, v43, v44,
    v45);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24F8DDBF0;
  uint64_t v14 = v13 + 32;
  uint64_t v51 = v4;
  uint64_t v52 = v3;
  uint64_t v53 = v2;
  uint64_t v54 = v1;
  sub_24F7725D4(&v51);
  sub_24F76C344((uint64_t)&v51, v14);
  sub_24F7786CC((uint64_t)v49, (uint64_t)&v44);
  sub_24F77124C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_24F7AC1D0((uint64_t)&v44, (uint64_t)&v37);
  sub_24F770F88(v15, v16, v17, v18, v19, v20, v21, v22, v33, v35, v37, v38, v39, v40, v41);
  sub_24F7783C0((uint64_t)v49, &qword_26B1F7F10);
  sub_24F781274(&qword_26B1F7D38);
  sub_24F778988((unint64_t *)&qword_26B1F72A8, &qword_26B1F7D38);
  uint64_t v23 = sub_24F771234();
  uint64_t v24 = v55(v23);
  sub_24F77C8B8(v24, v25, v26, v27, v28, v29, v30, v31, v34, v36, v37, v38, v39, v40, v41, *((uint64_t *)&v41 + 1), v42, v43, v44,
    v45,
    v46,
    v47,
    v48,
    v49[0],
    v49[1],
    v49[2],
    v49[3],
    v49[4],
    v50);
  sub_24F77BC10();
}

uint64_t sub_24F88BF50()
{
  return sub_24F88B800();
}

void static FetchableRecord<>.fetchSet(_:sql:arguments:adapter:)()
{
  sub_24F76FF94();
  sub_24F77E3EC(v4, v5, v6, v7, v8, v9, v10, v11, v36, v11, v41, v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, v47, v48,
    v49);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24F8DDBF0;
  uint64_t v13 = v12 + 32;
  uint64_t v55 = v3;
  uint64_t v56 = v2;
  uint64_t v57 = v1;
  uint64_t v58 = v0;
  sub_24F7725D4(&v55);
  sub_24F76C344((uint64_t)&v55, v13);
  sub_24F7786CC((uint64_t)v53, (uint64_t)&v48);
  sub_24F77124C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_24F7AC1D0((uint64_t)&v48, (uint64_t)&v41);
  sub_24F770F88(v14, v15, v16, v17, v18, v19, v20, v21, v37, v39, v41, v42, v43, v44, v45);
  sub_24F7783C0((uint64_t)v53, &qword_26B1F7F10);
  sub_24F781274(&qword_26B1F7D38);
  sub_24F778988((unint64_t *)&qword_26B1F72A8, &qword_26B1F7D38);
  uint64_t v22 = sub_24F771234();
  uint64_t v28 = static FetchableRecord<>.fetchSet<A>(_:_:)(v22, v23, v24, v25, v26, v40, v27);
  sub_24F77C8B8(v28, v29, v30, v31, v32, v33, v34, v35, v38, v40, v41, v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, v47, v48,
    v49,
    v50,
    v51,
    v52,
    v53[0],
    v53[1],
    v53[2],
    v53[3],
    v53[4],
    v54);
  sub_24F77BC10();
}

uint64_t sub_24F88C090()
{
  return static FetchableRecord.databaseDecodingUserInfo.getter();
}

uint64_t static FetchableRecord<>.fetchSet(_:arguments:adapter:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_24F7809B8(a1, a2, a3, a4, a5, a6, a7, a8, v10);
  if (!v8)
  {
    sub_24F77BA44();
    type metadata accessor for RecordCursor();
    swift_getWitnessTable();
    sub_24F77BA44();
    return Set.init<A>(_:)();
  }
  return result;
}

uint64_t static FetchableRecord.fetchCursor<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_24F773D74();
  v4();
  if (v2) {
    return a2;
  }
  a2 = v12;
  if (!v12)
  {
    sub_24F78C440(0);
    sub_24F787238(0);
    v9[0] = 0;
    v9[1] = 0;
    uint64_t v5 = swift_retain();
    static FetchableRecord.fetchCursor(_:arguments:adapter:)(v5, v9, (uint64_t)&v11);
    sub_24F76BAC4();
    sub_24F7AD1E4((uint64_t)&v10);
    swift_release();
    return a2;
  }
  uint64_t v7 = v13;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v7;
  sub_24F78C440(a2);
  uint64_t result = sub_24F787238((uint64_t)sub_24F88CBF8);
  __break(1u);
  return result;
}

void static FetchableRecord.fetchAll<A>(_:_:)()
{
  sub_24F76FF94();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_24F773D74();
  v11();
  if (!v0)
  {
    uint64_t v32 = v30;
    if (v30)
    {
      uint64_t v25 = v8;
      type metadata accessor for Row();
      long long v27 = 0uLL;
      uint64_t v26 = v31;
      sub_24F78C440((uint64_t)v30);
      uint64_t v12 = swift_retain();
      uint64_t v17 = static Row.fetchAll(_:arguments:adapter:)(v12, &v27, (uint64_t)v29);
      swift_release();
      uint64_t v18 = v32(v10, v17);
      v24[1] = v24;
      *(void *)&long long v27 = v17;
      MEMORY[0x270FA5388](v18);
      v24[0] = v17;
      uint64_t v19 = v25;
      void v23[2] = v25;
      void v23[3] = v6;
      void v23[4] = v4;
      v23[5] = v2;
      v23[6] = v25;
      uint64_t v20 = sub_24F781274(&qword_26B1F6F50);
      uint64_t v21 = sub_24F778988(&qword_269A2A5A0, &qword_26B1F6F50);
      sub_24F87D0A8((void (*)(char *, uint64_t))sub_24F88CC28, (uint64_t)v23, v20, v19, MEMORY[0x263F8E628], v21, MEMORY[0x263F8E658], v22);
      sub_24F76BAC4();
      sub_24F787238((uint64_t)v32);
      sub_24F7AD1E4((uint64_t)&v28);
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v27 = 0uLL;
      uint64_t v13 = swift_retain();
      static FetchableRecord.fetchAll(_:arguments:adapter:)(v13, &v27, (uint64_t)v29, v8, v4, v14, v15, v16);
      sub_24F76BAC4();
      sub_24F7AD1E4((uint64_t)&v28);
      swift_release();
    }
  }
  sub_24F77BC10();
}

void static FetchableRecord.fetchOne(_:sql:arguments:adapter:)()
{
  sub_24F76FF94();
  uint64_t v25 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  sub_24F7786CC(v14, (uint64_t)v31);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24F8DDBF0;
  v33[0] = v6;
  v33[1] = v4;
  v33[2] = v13;
  v33[3] = v12;
  sub_24F7725D4(v33);
  sub_24F76C344((uint64_t)v33, v15 + 32);
  sub_24F7786CC((uint64_t)v31, (uint64_t)v30);
  long long v27 = 0u;
  long long v28 = 0u;
  *(void *)&long long v29 = 0;
  *((void *)&v29 + 1) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24F7AC1D0((uint64_t)v30, (uint64_t)&v27);
  sub_24F770F88(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29);
  sub_24F7783C0((uint64_t)v31, &qword_26B1F7F10);
  sub_24F781274(&qword_26B1F7D38);
  sub_24F778988((unint64_t *)&qword_26B1F72A8, &qword_26B1F7D38);
  static FetchableRecord.fetchOne<A>(_:_:)(v8, v2, v26, v10);
  sub_24F7783C0((uint64_t)v32, &qword_26B1F7D38);
  sub_24F77BC10();
}

uint64_t static FetchableRecord.fetchOne<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_24F773D74();
  uint64_t result = v9();
  if (!v4)
  {
    uint64_t v11 = v25;
    if (v25)
    {
      uint64_t v26 = a2;
      type metadata accessor for Row();
      long long v22 = 0uLL;
      sub_24F78C440((uint64_t)v25);
      uint64_t v12 = swift_retain();
      uint64_t v17 = static Row.fetchOne(_:arguments:adapter:)(v12, &v22, (uint64_t)v24);
      swift_release();
      if (v17)
      {
        sub_24F781274(&qword_26B1F7F68);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_24F8DE5E0;
        *(void *)(v18 + 32) = v17;
        *(void *)&long long v22 = v18;
        sub_24F8CF0B0();
        uint64_t v19 = v22;
        swift_retain();
        v11(a1, v19);
        swift_bridgeObjectRelease();
        uint64_t v20 = v26;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(v17, v26, a3);
        sub_24F787238((uint64_t)v11);
        sub_24F7AD1E4((uint64_t)&v23);
        uint64_t v21 = 0;
      }
      else
      {
        sub_24F7AD1E4((uint64_t)&v23);
        sub_24F787238((uint64_t)v11);
        uint64_t v21 = 1;
        uint64_t v20 = v26;
      }
      return sub_24F7771BC(a4, v21, 1, v20);
    }
    else
    {
      long long v22 = 0uLL;
      uint64_t v13 = swift_retain();
      static FetchableRecord.fetchOne(_:arguments:adapter:)(v13, &v22, (uint64_t)v24, a2, a3, v14, v15, v16, a4);
      sub_24F7AD1E4((uint64_t)&v23);
      return swift_release();
    }
  }
  return result;
}

uint64_t static FetchableRecord<>.fetchSet<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, void, uint64_t, uint64_t))(a7 + 32))(&v24, a1, 0, a4, a7);
  if (!v7)
  {
    long long v27 = v26;
    if (v26)
    {
      uint64_t v22 = a6;
      type metadata accessor for Row();
      long long v23 = 0uLL;
      sub_24F78C440((uint64_t)v27);
      uint64_t v15 = swift_retain();
      uint64_t v19 = static Row.fetchAll(_:arguments:adapter:)(v15, &v23, (uint64_t)v25);
      swift_release();
      v27(a1, v19);
      uint64_t v21 = (void *)swift_allocObject();
      void v21[2] = a3;
      _OWORD v21[3] = a4;
      v21[4] = a5;
      void v21[5] = v22;
      v21[6] = a7;
      v21[7] = a3;
      sub_24F781274(&qword_269A2C330);
      sub_24F778988(&qword_269A2C338, &qword_269A2C330);
      sub_24F77BA44();
      sub_24F8CFA30();
      swift_release();
      swift_bridgeObjectRelease();
      sub_24F7688B8(&qword_26B1F6F50);
      sub_24F778988(&qword_269A2C340, &qword_26B1F6F50);
      sub_24F8CF910();
      swift_getWitnessTable();
      a2 = sub_24F8CF330();
      sub_24F787238((uint64_t)v27);
      sub_24F7AD1E4((uint64_t)&v24);
    }
    else
    {
      a2 = a3;
      long long v23 = 0uLL;
      uint64_t v16 = swift_retain();
      static FetchableRecord<>.fetchSet(_:arguments:adapter:)(v16, &v23, (uint64_t)v25, a3, a5, a6, v17, v18);
      sub_24F76BAC4();
      sub_24F7AD1E4((uint64_t)&v24);
      swift_release();
    }
  }
  return a2;
}

uint64_t sub_24F88CB90(void *a1, void *a2, uint64_t (*a3)(void, void))
{
  return a3(*a1, *a2);
}

uint64_t sub_24F88CBC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F88CBF8(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_24F88CC28()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 + 32) + 8);
  swift_retain();
  sub_24F77BA44();
  return v1();
}

uint64_t sub_24F88CC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5 + 8);
  uint64_t v8 = swift_retain();
  return v7(v8, a3, a5);
}

uint64_t sub_24F88CCF4()
{
  return sub_24F77DD34();
}

uint64_t sub_24F88CD00(uint64_t a1)
{
  return sub_24F88CC90(a1, v1[7], v1[2], v1[3], v1[4]);
}

uint64_t (*RecordCursor._isDone.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_24F88CD64(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void (*sub_24F88CDA0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RecordCursor._isDone.modify();
  return sub_24F79A608;
}

uint64_t sub_24F88CDF8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of FetchableRecord.init(row:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of static FetchableRecord.databaseDecodingUserInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static FetchableRecord.databaseJSONDecoder(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static FetchableRecord.databaseDateDecodingStrategy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static FetchableRecord.databaseColumnDecodingStrategy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_24F88CE98()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for RecordCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RecordCursor);
}

ValueMetadata *type metadata accessor for DatabaseDateDecodingStrategy()
{
  return &type metadata for DatabaseDateDecodingStrategy;
}

ValueMetadata *type metadata accessor for DatabaseColumnDecodingStrategy()
{
  return &type metadata for DatabaseColumnDecodingStrategy;
}

uint64_t sub_24F88CF24()
{
  uint64_t v1 = *v0;
  if (!*v0)
  {
    swift_bridgeObjectRetain();
    sub_24F76B950();
    return sub_24F8CFFF0();
  }
  if (v1 == (void (*)(uint64_t))1)
  {
    uint64_t v2 = sub_24F76B950();
    sub_24F88D01C(v2, v3);
    return sub_24F8CFFF0();
  }
  swift_retain();
  uint64_t v5 = sub_24F76B950();
  v1(v5);
  sub_24F7811D0(v6, v6[3]);
  sub_24F76B950();
  sub_24F8CFFE0();
  sub_24F8CFFF0();
  sub_24F7678A4((unint64_t)v1);
  return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v6);
}

void sub_24F88D01C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    return;
  }
  unint64_t v5 = 0;
  unint64_t v6 = 4 * v4;
  unint64_t v7 = 15;
  while (1)
  {
    if (sub_24F8CEF80() == 95 && v8 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    char v10 = sub_24F77BE64();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      break;
    }
LABEL_13:
    unint64_t v7 = sub_24F781E8C();
    unint64_t v5 = v7 >> 14;
    if (v7 >> 14 == v6) {
      goto LABEL_14;
    }
  }
  uint64_t v11 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v11 = 11;
  }
  uint64_t v65 = v11 | (v4 << 16);
  sub_24F8CEE80();
  sub_24F77B088();
  if (!v12)
  {
    if (sub_24F8CEF80() == 95 && v13 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = sub_24F77BE64();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_35;
      }
    }
    sub_24F8CEE80();
    sub_24F77B088();
    while (!v12)
    {
      if (sub_24F8CEF80() == 95 && v16 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = sub_24F77BE64();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0) {
          break;
        }
      }
      sub_24F8CEE80();
      sub_24F77B088();
    }
  }
LABEL_35:
  if (v5 > 0xE100000000000000)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  unint64_t v67 = v6;
  unint64_t v68 = sub_24F781E8C();
  if (v6 < v68 >> 14)
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  swift_bridgeObjectRetain();
  sub_24F781E8C();
  unint64_t v19 = sub_24F775DC4();
  unint64_t v21 = v20;
  uint64_t v22 = swift_bridgeObjectRelease();
  uint64_t v66 = a1;
  *(void *)&long long v70 = 95;
  *((void *)&v70 + 1) = 0xE100000000000000;
  MEMORY[0x270FA5388](v22);
  void v63[2] = &v70;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_24F88D6C8(0x7FFFFFFFFFFFFFFFLL, 1u, sub_24F8090C0, (uint64_t)v63, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24F781E8C();
    sub_24F775DC4();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_24F77C144();
    uint64_t v26 = MEMORY[0x253363690](v25);
    uint64_t v28 = v27;
    goto LABEL_49;
  }
  sub_24F781274((uint64_t *)&unk_26B1F7C88);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_24F8DDBF0;
  if (!v24) {
    goto LABEL_61;
  }
  uint64_t v30 = v29;
  swift_bridgeObjectRetain();
  sub_24F77C144();
  uint64_t v31 = sub_24F8CF620();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v33;
  uint64_t v64 = v30;
  uint64_t v34 = sub_24F88D668(1, v23);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  unint64_t v40 = v39;
  swift_bridgeObjectRelease();
  int64_t v41 = v40 >> 1;
  uint64_t v42 = (v40 >> 1) - v38;
  if (__OFSUB__(v40 >> 1, v38))
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (!v42)
  {
LABEL_48:
    swift_unknownObjectRelease();
    *(void *)&long long v70 = v64;
    sub_24F792AE8();
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    uint64_t v26 = sub_24F8CED30();
    uint64_t v28 = v53;
LABEL_49:
    swift_bridgeObjectRelease();
    unint64_t v54 = v67;
    unint64_t v55 = v68 >> 14;
    if (v7 >> 14)
    {
      uint64_t v56 = sub_24F775DC4();
      uint64_t v57 = MEMORY[0x253363690](v56);
      uint64_t v59 = v58;
      swift_bridgeObjectRelease();
      if (v55 == v54)
      {
        *(void *)&long long v70 = v57;
        *((void *)&v70 + 1) = v59;
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
LABEL_57:
        swift_bridgeObjectRelease();
        return;
      }
      *(void *)&long long v70 = v57;
      *((void *)&v70 + 1) = v59;
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *((void *)&v70 + 1);
      uint64_t v61 = v70;
      uint64_t v62 = sub_24F775DC4();
      MEMORY[0x253363690](v62);
      swift_bridgeObjectRelease();
      *(void *)&long long v70 = v61;
    }
    else
    {
      if (v55 == v67) {
        return;
      }
      uint64_t v60 = sub_24F775DC4();
      MEMORY[0x253363690](v60);
      swift_bridgeObjectRelease();
      *(void *)&long long v70 = v26;
    }
    *((void *)&v70 + 1) = v28;
    swift_bridgeObjectRetain();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  v63[5] = v34;
  uint64_t v73 = MEMORY[0x263F8EE78];
  sub_24F77C4AC();
  if ((v42 & 0x8000000000000000) == 0)
  {
    uint64_t v43 = v73;
    uint64_t v44 = (uint64_t *)(v36 + 32 * v38 + 24);
    unint64_t v69 = a2;
    while (v38 < v41)
    {
      uint64_t v45 = v41;
      uint64_t v46 = *(v44 - 1);
      uint64_t v47 = *v44;
      long long v70 = *(_OWORD *)(v44 - 3);
      uint64_t v71 = v46;
      uint64_t v72 = v47;
      sub_24F88DB4C();
      uint64_t v48 = sub_24F8CF670();
      uint64_t v50 = v49;
      uint64_t v73 = v43;
      unint64_t v51 = *(void *)(v43 + 16);
      if (v51 >= *(void *)(v43 + 24) >> 1)
      {
        sub_24F77C4AC();
        uint64_t v43 = v73;
      }
      *(void *)(v43 + 16) = v51 + 1;
      uint64_t v52 = v43 + 16 * v51;
      *(void *)(v52 + 32) = v48;
      *(void *)(v52 + 40) = v50;
      ++v38;
      v44 += 4;
      int64_t v41 = v45;
      if (v45 == v38) {
        goto LABEL_48;
      }
    }
    __break(1u);
    goto LABEL_59;
  }
LABEL_63:
  __break(1u);
}

uint64_t sub_24F88D668(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

uint64_t sub_24F88D6C8(uint64_t result, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, unint64_t a5, unint64_t a6)
{
  v46[3] = a4;
  if (result < 0)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return result;
  }
  uint64_t v9 = result;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v35 = (unint64_t *)(v10 + 16);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = a5;
  if (!v9 || (unint64_t v44 = a6 >> 14, a6 >> 14 == a5 >> 14))
  {
    sub_24F88DA88(a6, v42, a2 & 1, v10);
    swift_bridgeObjectRelease();
    a6 = *(void *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_5;
  }
  unint64_t v43 = MEMORY[0x263F8EE78];
  unint64_t v11 = a5;
  unint64_t v12 = a5;
  unint64_t v39 = a5;
  while (1)
  {
    v46[0] = sub_24F8CF640();
    v46[1] = v13;
    char v14 = a3(v46);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return a6;
    }
    char v15 = v14;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      unint64_t v11 = sub_24F8CF630();
      goto LABEL_21;
    }
    int v16 = (v12 >> 14 == v11 >> 14) & a2;
    if (v16 != 1)
    {
      if (v11 >> 14 < v12 >> 14)
      {
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v17 = sub_24F8CF650();
      uint64_t v38 = v18;
      uint64_t v40 = v17;
      uint64_t v36 = v20;
      uint64_t v37 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F787E30();
        unint64_t v43 = v24;
      }
      unint64_t v21 = *(void *)(v43 + 16);
      if (v21 >= *(void *)(v43 + 24) >> 1)
      {
        sub_24F787E30();
        unint64_t v43 = v25;
      }
      *(void *)(v43 + 16) = v21 + 1;
      uint64_t v22 = (void *)(v43 + 32 * v21);
      v22[4] = v40;
      void v22[5] = v38;
      v22[6] = v37;
      v22[7] = v36;
      *uint64_t v35 = v43;
    }
    uint64_t v23 = sub_24F8CF630();
    unint64_t v11 = v23;
    *(void *)(v42 + 16) = v23;
    if ((v16 & 1) == 0 && *(void *)(v43 + 16) == v9) {
      break;
    }
    unint64_t v12 = v23;
    unint64_t v39 = v23;
LABEL_21:
    if (v44 == v11 >> 14) {
      goto LABEL_25;
    }
  }
  unint64_t v39 = v23;
  unint64_t v12 = v23;
LABEL_25:
  if (v44 == v12 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    a6 = v43;
  }
  else
  {
    uint64_t result = v39;
    if (v44 < v39 >> 14) {
      goto LABEL_33;
    }
    uint64_t v26 = sub_24F8CF650();
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    sub_24F786BA8();
    uint64_t v33 = *(void *)(*v35 + 16);
    sub_24F786F38();
    a6 = *v35;
    *(void *)(a6 + 16) = v33 + 1;
    uint64_t v34 = (void *)(a6 + 32 * v33);
    v34[4] = v26;
    v34[5] = v28;
    v34[6] = v30;
    v34[7] = v32;
    *uint64_t v35 = a6;
  }
  swift_bridgeObjectRetain();
  swift_release();
LABEL_5:
  swift_release();
  return a6;
}

unint64_t sub_24F88DA88(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t result = *(void *)(a2 + 16);
  int v6 = (result >> 14 == a1 >> 14) & a3;
  if (v6 == 1) {
    return v6 ^ 1u;
  }
  if (a1 >> 14 >= result >> 14)
  {
    uint64_t v8 = sub_24F8CF650();
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    sub_24F786BA8();
    uint64_t v15 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_24F786F38();
    uint64_t v16 = *(void *)(a4 + 16);
    *(void *)(v16 + 16) = v15 + 1;
    uint64_t v17 = (void *)(v16 + 32 * v15);
    v17[4] = v8;
    v17[5] = v10;
    v17[6] = v12;
    v17[7] = v14;
    return v6 ^ 1u;
  }
  __break(1u);
  return result;
}

unint64_t sub_24F88DB4C()
{
  unint64_t result = qword_269A2C348;
  if (!qword_269A2C348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C348);
  }
  return result;
}

uint64_t sub_24F88DB98()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F88DBD0()
{
  return sub_24F77DD34();
}

uint64_t sub_24F88DBDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24F88DC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v16 = a4;
  uint64_t v5 = v4;
  uint64_t v15 = a2;
  uint64_t v8 = sub_24F8CEBD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F781274(&qword_26B1F78C0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24F8DDBF0;
  sub_24F8CEBC0();
  uint64_t v21 = v12;
  sub_24F768BC4();
  sub_24F781274(&qword_26B1F7960);
  sub_24F768B70();
  sub_24F8CF6D0();
  uint64_t v17 = a3;
  uint64_t v18 = v5;
  uint64_t v19 = a1;
  uint64_t v20 = v15;
  sub_24F8CF550();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24F88DE00()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 96));
}

uint64_t sub_24F88DE1C(uint64_t a1, char a2)
{
  return sub_24F88DE68(a1, a2);
}

uint64_t sub_24F88DE68(uint64_t a1, char a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 88), a1);
  *(unsigned char *)(v2 + *(void *)(*(void *)v2 + 96)) = a2;
  return v2;
}

uint64_t sub_24F88DF00()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t sub_24F88DF70()
{
  uint64_t v0 = sub_24F88DF00();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

id *sub_24F88DFC4()
{
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_24F88E00C()
{
  sub_24F88DFC4();
  return MEMORY[0x270FA0228](v0, 72, 7);
}

uint64_t type metadata accessor for Pool()
{
  return sub_24F777DE0();
}

uint64_t sub_24F88E058()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24F88E0F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F88E12C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F88E174()
{
  return 8;
}

void *sub_24F88E180(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24F88E18C()
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t v2 = sub_24F8CF4B0();
  return v1(v2);
}

void sub_24F88E1E8(uint64_t a1@<X8>)
{
  id v2 = (id)sub_24F8CE810();
  NSURL.databaseValue.getter(a1);
}

uint64_t sub_24F88E238@<X0>(uint64_t a1@<X8>)
{
  return DatabaseValueConvertible.sqlExpression.getter((uint64_t)&protocol witness table for NSNull, a1);
}

uint64_t DatabaseValueConvertible.sqlExpression.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(long long *__return_ptr))(a1 + 24))(&v4);
  long long v6 = v4;
  char v7 = v5;
  sub_24F7667B8((uint64_t)&v6);
  return sub_24F76F710((uint64_t)&v6, a2);
}

uint64_t sub_24F88E2A8(Swift::OpaquePointer to, Swift::Int32 at)
{
  return DatabaseValueConvertible.bind(to:at:)(to, at);
}

uint64_t sub_24F88E2B4(Swift::OpaquePointer a1, Swift::Int32 a2)
{
  long long v4 = (void *)sub_24F8CE810();
  NSURL.databaseValue.getter((uint64_t)v10);

  uint64_t v5 = v10[0];
  unint64_t v6 = v10[1];
  char v7 = v11;
  uint64_t v8 = DatabaseValue.bind(to:at:)(a1, a2);
  sub_24F781F10(v5, v6, v7);
  return v8;
}

uint64_t sub_24F88E33C(sqlite3_stmt *a1, int a2)
{
  if (qword_26B1F5A50 != -1) {
    swift_once();
  }
  long long v4 = (void *)qword_26B1F5A48;
  uint64_t v5 = (void *)sub_24F8CE930();
  id v6 = objc_msgSend(v4, sel_stringFromDate_, v5);

  sub_24F8CED80();
  uint64_t v7 = qword_26B1F76D0;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = (void (__cdecl *)(void *))qword_26B1FAB20;
  uint64_t v9 = sub_24F8CEE30();
  uint64_t v10 = sqlite3_bind_text(a1, a2, (const char *)(v9 + 32), -1, v8);
  swift_bridgeObjectRelease_n();
  swift_release();
  return v10;
}

uint64_t sub_24F88E46C(Swift::OpaquePointer a1, Swift::Int32 a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v16 = sub_24F8CE9B0();
  LOWORD(v17) = v4;
  BYTE2(v17) = v5;
  BYTE3(v17) = v6;
  BYTE4(v17) = v7;
  BYTE5(v17) = v8;
  BYTE6(v17) = v9;
  HIBYTE(v17) = v10;
  uint64_t v11 = MEMORY[0x253363140](&v16, 16);
  unint64_t v13 = v12;
  uint64_t v16 = v11;
  unint64_t v17 = v12;
  char v18 = 3;
  uint64_t v14 = DatabaseValue.bind(to:at:)(a1, a2);
  sub_24F783E24(v11, v13);
  return v14;
}

uint64_t sub_24F88E594(sqlite3_stmt *a1, int a2)
{
  uint64_t v4 = qword_26B1F76D0;
  swift_bridgeObjectRetain_n();
  if (v4 != -1) {
    swift_once();
  }
  char v5 = (void (__cdecl *)(void *))qword_26B1FAB20;
  uint64_t v6 = sub_24F8CEE30();
  uint64_t v7 = sqlite3_bind_text(a1, a2, (const char *)(v6 + 32), -1, v5);
  swift_bridgeObjectRelease_n();
  swift_release();
  return v7;
}

uint64_t sub_24F88E658(Swift::OpaquePointer a1, Swift::Int32 a2)
{
  DatabaseDateComponents.databaseValue.getter((uint64_t)v9);
  uint64_t v4 = v9[0];
  unint64_t v5 = v9[1];
  char v6 = v10;
  uint64_t v7 = DatabaseValue.bind(to:at:)(a1, a2);
  sub_24F781F10(v4, v5, v6);
  return v7;
}

uint64_t sub_24F88E6D8(sqlite3_stmt *a1, int a2, unint64_t a3, unint64_t a4, unsigned int a5)
{
  __int16 v5 = a5;
  __int16 v6 = a4;
  int v7 = a3;
  int v28 = a2;
  uint64_t v27 = a1;
  unint64_t v8 = HIDWORD(a3);
  unint64_t v9 = HIWORD(a3);
  unint64_t v10 = a4 >> 16;
  unint64_t v11 = HIDWORD(a4);
  unint64_t v25 = HIWORD(a4);
  unsigned int v26 = HIWORD(a5);
  uint64_t v12 = sub_24F8CE9F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_allocWithZone(MEMORY[0x263F087B0]);
  int v29 = v7;
  __int16 v30 = v8;
  __int16 v31 = v9;
  __int16 v32 = v6;
  __int16 v33 = v10;
  __int16 v34 = v11;
  __int16 v35 = v25;
  __int16 v36 = v5;
  __int16 v37 = v26;
  id v17 = objc_msgSend(v16, sel_initWithDecimal_, &v29);
  sub_24F8CE9D0();
  char v18 = (void *)sub_24F8CE9E0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v19 = objc_msgSend(v17, sel_descriptionWithLocale_, v18);

  sub_24F8CED80();
  uint64_t v20 = qword_26B1F76D0;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = (void (__cdecl *)(void *))qword_26B1FAB20;
  uint64_t v22 = sub_24F8CEE30();
  uint64_t v23 = sqlite3_bind_text(v27, v28, (const char *)(v22 + 32), -1, v21);
  swift_bridgeObjectRelease_n();
  swift_release();
  return v23;
}

Swift::Int32 __swiftcall DatabaseValueConvertible.bind(to:at:)(Swift::OpaquePointer to, Swift::Int32 at)
{
  (*(void (**)(void *__return_ptr))(v2 + 24))(v10);
  uint64_t v5 = v10[0];
  unint64_t v6 = v10[1];
  char v7 = v11;
  Swift::Int32 v8 = DatabaseValue.bind(to:at:)(to, at);
  sub_24F781F10(v5, v6, v7);
  return v8;
}

uint64_t sub_24F88E9B0@<X0>(uint64_t a1@<X8>)
{
  return DatabaseValueConvertible.sqlExpression.getter((uint64_t)&protocol witness table for NSDate, a1);
}

uint64_t sub_24F88E9BC(Swift::OpaquePointer to, Swift::Int32 at)
{
  return DatabaseValueConvertible.bind(to:at:)(to, at);
}

uint64_t sub_24F88E9D0()
{
  return sub_24F7CCF78(*v0);
}

uint64_t sub_24F88E9D8()
{
  return sub_24F7CD044(*v0);
}

uint64_t sub_24F88E9E0()
{
  return sub_24F7CD240(*v0);
}

uint64_t sub_24F88E9E8()
{
  return sub_24F7CD280(*v0);
}

uint64_t sub_24F88E9F0()
{
  return sub_24F7CD2C0(*v0);
}

uint64_t sub_24F88E9F8()
{
  return sub_24F7CD23C(*v0);
}

uint64_t sub_24F88EA00()
{
  return sub_24F7CD33C(*v0);
}

uint64_t sub_24F88EA08()
{
  return sub_24F7CD37C(*v0);
}

uint64_t sub_24F88EA10()
{
  return sub_24F7CD3BC(*v0);
}

uint64_t sub_24F88EA18()
{
  return sub_24F7CCF20(*v0);
}

uint64_t sub_24F88EA20()
{
  return sub_24F7CCFFC(*v0);
}

uint64_t sub_24F88EA28()
{
  return sub_24F7CCE54(*v0, v0[1]);
}

uint64_t sub_24F88EA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  sub_24F77C8D8();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_24F77B6D0();
  return a5(v6);
}

void *FetchRequest<>.fetchOne(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return static DatabaseValueConvertible.fetchOne<A>(_:_:)(a1, v4, AssociatedTypeWitness, a2, a4, a3);
}

uint64_t sub_24F88EC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  sub_24F7804AC();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24F77374C();
  return a6(v7);
}

uint64_t sub_24F88EE10(sqlite3_stmt *a1, int a2)
{
  return j__sqlite3_bind_double(a1, a2, *v2);
}

uint64_t sub_24F88EE18@<X0>(uint64_t a1@<X8>)
{
  return DatabaseValueConvertible.sqlExpression.getter((uint64_t)&protocol witness table for NSUUID, a1);
}

uint64_t sub_24F88EE24(Swift::OpaquePointer to, Swift::Int32 at)
{
  return DatabaseValueConvertible.bind(to:at:)(to, at);
}

uint64_t sub_24F88EE38@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7CD048(*(void *)v1, *(void *)(v1 + 8), *(_DWORD *)(v1 + 16), a1);
}

uint64_t sub_24F88EE44(sqlite3_stmt *a1, int a2)
{
  return sub_24F88E6D8(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(_DWORD *)(v2 + 16));
}

uint64_t sub_24F88EE50@<X0>(void *a1@<X8>)
{
  return sub_24F7CCEAC(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_24F88EE58@<X0>(uint64_t a1@<X8>)
{
  return DatabaseValueConvertible.sqlExpression.getter((uint64_t)&protocol witness table for NSNumber, a1);
}

uint64_t sub_24F88EE64(Swift::OpaquePointer to, Swift::Int32 at)
{
  return DatabaseValueConvertible.bind(to:at:)(to, at);
}

uint64_t sub_24F88EE70(sqlite3_stmt *a1, int a2)
{
  return sub_24F88E594(a1, a2);
}

uint64_t sub_24F88EE8C@<X0>(uint64_t a1@<X8>)
{
  return DatabaseValueConvertible.sqlExpression.getter((uint64_t)&protocol witness table for NSData, a1);
}

uint64_t sub_24F88EE98(Swift::OpaquePointer to, Swift::Int32 at)
{
  return DatabaseValueConvertible.bind(to:at:)(to, at);
}

uint64_t sub_24F88EEA4@<X0>(uint64_t a1@<X8>)
{
  return DatabaseValueConvertible.sqlExpression.getter((uint64_t)&protocol witness table for NSURL, a1);
}

uint64_t sub_24F88EEB0(Swift::OpaquePointer to, Swift::Int32 at)
{
  return DatabaseValueConvertible.bind(to:at:)(to, at);
}

void sub_24F88EECC()
{
  sub_24F76FF94();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  v29[1] = v4;
  void v29[2] = v5;
  uint64_t v30 = v6;
  int v8 = v7;
  unint64_t v10 = v9;
  uint64_t v11 = sub_24F8CF610();
  sub_24F770DF4();
  uint64_t v13 = v12;
  sub_24F771D60();
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)v29 - v15;
  sub_24F76B11C(v10, v8, (uint64_t)v38);
  uint64_t v17 = v38[0];
  unint64_t v18 = v38[1];
  int v19 = v39;
  (*(void (**)(void *, uint64_t, uint64_t))(v1 + 32))(v38, v3, v1);
  if (sub_24F777048((uint64_t)v16, 1, v3) == 1)
  {
    uint64_t v20 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
    if (v19 != 4 || v18 | v17)
    {
      sub_24F8904A0();
      v23();
      sub_24F77EB98();
      uint64_t v31 = v17;
      unint64_t v32 = v18;
      char v33 = v19;
      sub_24F7D29A4();
      uint64_t v40 = swift_allocError();
      sub_24F76B798(v40, v24);
      uint64_t v25 = v34;
      uint64_t v26 = v35;
      uint64_t v27 = v37;
      unsigned __int8 v28 = v36;
      swift_release();
      sub_24F7B0E68(v25, v26, v28);
      swift_bridgeObjectRelease();
      sub_24F77835C(v27);
      swift_willThrow();
      sub_24F781F10(v17, v18, v19);
    }
    else
    {
      sub_24F772304(v20, 1);
      sub_24F781F10(0, 0, 4);
    }
  }
  else
  {
    sub_24F781F10(v17, v18, v19);
    sub_24F773974();
    uint64_t v22 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v30, v16, v3);
    sub_24F772304(v22, 0);
  }
  sub_24F77BC10();
}

void static DatabaseValueConvertible.decodeIfPresent(fromRow:atUncheckedIndex:)()
{
}

uint64_t DatabaseValueCursor.statement.getter()
{
  return swift_retain();
}

uint64_t DatabaseValueCursor._isDone.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t DatabaseValueCursor._isDone.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DatabaseValueCursor._isDone.modify())()
{
  return j__swift_endAccess;
}

uint64_t DatabaseValueCursor.__deallocating_deinit()
{
  DatabaseValueCursor.deinit();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t DatabaseValueCursor._element(sqliteStatement:)(uint64_t a1)
{
  return sub_24F88F384(a1, (uint64_t)sub_24F890264, (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))sub_24F76B060);
}

void (*sub_24F88F294(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DatabaseValueCursor._isDone.modify();
  return sub_24F7D1E94;
}

uint64_t sub_24F88F2EC(uint64_t a1)
{
  return DatabaseValueCursor._element(sqliteStatement:)(a1);
}

uint64_t (*NullableDatabaseValueCursor._isDone.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t NullableDatabaseValueCursor._element(sqliteStatement:)(uint64_t a1)
{
  return sub_24F88F384(a1, (uint64_t)sub_24F890264, (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))sub_24F88EECC);
}

uint64_t sub_24F88F384(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, uint64_t, uint64_t))
{
  return a3(a1, *(unsigned int *)(v3 + 28), a2, v3);
}

uint64_t sub_24F88F424(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 28);
  uint64_t v2 = swift_retain();
  return RowDecodingContext.init(statement:index:)(v2, v1);
}

void (*sub_24F88F474(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = NullableDatabaseValueCursor._isDone.modify();
  return sub_24F7D1E94;
}

uint64_t sub_24F88F4CC(uint64_t a1)
{
  return NullableDatabaseValueCursor._element(sqliteStatement:)(a1);
}

uint64_t static DatabaseValueConvertible.fetchCursor(_:arguments:adapter:)()
{
  sub_24F775DDC();
  uint64_t v1 = type metadata accessor for DatabaseValueCursor();
  sub_24F771DE4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, v13, v14, v15, v16, v17, v18);
  swift_retain();
  uint64_t v9 = sub_24F777E70(v0);
  return sub_24F774660(v9);
}

uint64_t static DatabaseValueConvertible.fetchAll(_:arguments:adapter:)(uint64_t a1, uint64_t a2)
{
  sub_24F76BA04(a1, a2);
  uint64_t result = static DatabaseValueConvertible.fetchCursor(_:arguments:adapter:)();
  if (!v2)
  {
    sub_24F8CF1B0();
    sub_24F7824E4();
    type metadata accessor for DatabaseValueCursor();
    swift_getWitnessTable();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_24F782C6C(WitnessTable, v5, v6);
    return v7;
  }
  return result;
}

void static DatabaseValueConvertible.fetchOne(_:arguments:adapter:)()
{
  sub_24F76FF94();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  v24[0] = v7;
  uint64_t v8 = sub_24F8CF610();
  sub_24F8CF610();
  sub_24F770DF4();
  uint64_t v20 = v10;
  uint64_t v21 = v9;
  sub_24F771D60();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v15 = *v4;
  uint64_t v14 = v4[1];
  uint64_t v16 = type metadata accessor for NullableDatabaseValueCursor();
  v23[0] = v15;
  v23[1] = v14;
  sub_24F7786CC(v2, (uint64_t)v22);
  swift_retain();
  sub_24F777E70(v15);
  sub_24F774B34(v6, v23, (uint64_t)v22);
  if (!v0)
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    DatabaseCursor.next()(v16, WitnessTable, (uint64_t)v13);
    swift_release();
    if (sub_24F777048((uint64_t)v13, 1, v8) == 1)
    {
      sub_24F772304(v24[0], 1);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v21);
    }
    else
    {
      sub_24F773974();
      (*(void (**)(void))(v18 + 32))();
    }
  }
  sub_24F77BC10();
}

void static DatabaseValueConvertible.fetchCursor(_:sql:arguments:adapter:)()
{
}

void static DatabaseValueConvertible.fetchCursor<A>(_:_:)()
{
}

void static DatabaseValueConvertible.fetchAll(_:sql:arguments:adapter:)()
{
}

void sub_24F88F8F0()
{
  sub_24F76FF94();
  sub_24F77E3EC(v5, v6, v7, v8, v9, v10, v11, v12, v49, v0, v58, v62, v66, v70, v74, v78, v81, v84, v87, v90);
  sub_24F781274(&qword_26B1F7F50);
  *(_OWORD *)(sub_24F77D79C() + 16) = xmmword_24F8DDBF0;
  uint64_t v112 = v4;
  uint64_t v113 = v3;
  uint64_t v114 = v2;
  uint64_t v115 = v1;
  uint64_t v13 = sub_24F7725D4(&v112);
  uint64_t v21 = sub_24F77C158((uint64_t)v13, v14, v15, v16, v17, v18, v19, v20, v50, v54, v59, v63, v67, v71, v75, v79, v82, v85, v88,
          v91,
          v93,
          v95,
          v97,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112);
  sub_24F7D2D20(v21, v22, v23, v24, v25, v26, v27, v28, v51, v55);
  sub_24F77124C();
  swift_bridgeObjectRetain();
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_24F777684(v29, v30);
  sub_24F770F88(v31, v32, v33, v34, v35, v36, v37, v38, v52, v56, v60, v64, v68, v72, v76);
  sub_24F774DA0((uint64_t)&v99, &qword_26B1F7F10);
  sub_24F781274(&qword_26B1F7D38);
  sub_24F7D2950();
  uint64_t v39 = sub_24F77BE80();
  uint64_t v41 = v40(v39);
  sub_24F77BFD4(v41, v42, v43, v44, v45, v46, v47, v48, v53, v57, v61, v65, v69, v73, v77, v80, v83, v86, v89,
    v92,
    v94,
    v96,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104);
  sub_24F777308();
  sub_24F77BC10();
}

void static DatabaseValueConvertible.fetchAll<A>(_:_:)()
{
}

void sub_24F88F9EC()
{
  sub_24F7803E8();
  sub_24F77F194();
  v2();
  if (!v0)
  {
    sub_24F781698();
    sub_24F785954();
    uint64_t v3 = v1();
    sub_24F77DA60(v3, v4);
    swift_release();
  }
  sub_24F775FA4();
  sub_24F890488();
}

void static DatabaseValueConvertible.fetchOne(_:sql:arguments:adapter:)()
{
  sub_24F76FF94();
  uint64_t v45 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  sub_24F7786CC(v12, (uint64_t)v63);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v13 = sub_24F77D79C();
  *(_OWORD *)(v13 + 16) = xmmword_24F8DDBF0;
  v65[0] = v6;
  v65[1] = v4;
  v65[2] = v11;
  v65[3] = v10;
  uint64_t v14 = sub_24F7725D4(v65);
  uint64_t v22 = sub_24F77C158((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v42, v45, v49, v50, v51, v52, v53, v55, v56, v57, v58,
          v59,
          v60,
          v61,
          v62,
          v63[0],
          v63[1],
          v63[2],
          v63[3],
          v63[4],
          v64[0],
          v64[1],
          v64[2],
          v64[3],
          v64[4],
          v64[5],
          v64[6],
          v64[7],
          v65[0]);
  sub_24F7D2D20(v22, v23, v24, v25, v26, v27, v28, v29, v43, v46);
  *(void *)&long long v54 = 0;
  *((void *)&v54 + 1) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_24F777684(v30, v31);
  sub_24F770F88(v32, v33, v34, v35, v36, v37, v38, v39, v44, v47, 0, 0, 0, 0, v54);
  sub_24F774DA0((uint64_t)v63, &qword_26B1F7F10);
  uint64_t v40 = sub_24F781274(&qword_26B1F7D38);
  unint64_t v41 = sub_24F7D2950();
  static DatabaseValueConvertible.fetchOne<A>(_:_:)(v8, (uint64_t)v64, v2, v40, v48, v41);
  sub_24F774DA0((uint64_t)v64, &qword_26B1F7D38);
  sub_24F77BC10();
}

void *static DatabaseValueConvertible.fetchOne<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 32))(v8, a1, 1, a4, a6);
  if (!v6)
  {
    swift_retain();
    static DatabaseValueConvertible.fetchOne(_:arguments:adapter:)();
    sub_24F7AD1E4((uint64_t)v8);
    return (void *)swift_release();
  }
  return result;
}

void sub_24F88FFE0()
{
  sub_24F76FF94();
  sub_24F77E3EC(v5, v6, v7, v8, v9, v10, v11, v12, v49, v0, v58, v62, v66, v70, v74, v78, v81, v84, v87, v90);
  sub_24F781274(&qword_26B1F7F50);
  *(_OWORD *)(sub_24F77D79C() + 16) = xmmword_24F8DDBF0;
  uint64_t v112 = v4;
  uint64_t v113 = v3;
  uint64_t v114 = v2;
  uint64_t v115 = v1;
  uint64_t v13 = sub_24F7725D4(&v112);
  uint64_t v21 = sub_24F77C158((uint64_t)v13, v14, v15, v16, v17, v18, v19, v20, v50, v54, v59, v63, v67, v71, v75, v79, v82, v85, v88,
          v91,
          v93,
          v95,
          v97,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112);
  sub_24F7D2D20(v21, v22, v23, v24, v25, v26, v27, v28, v51, v55);
  sub_24F77124C();
  swift_bridgeObjectRetain();
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_24F777684(v29, v30);
  sub_24F770F88(v31, v32, v33, v34, v35, v36, v37, v38, v52, v56, v60, v64, v68, v72, v76);
  sub_24F774DA0((uint64_t)&v99, &qword_26B1F7F10);
  sub_24F781274(&qword_26B1F7D38);
  sub_24F7D2950();
  uint64_t v39 = sub_24F77BE80();
  uint64_t v41 = v40(v39);
  sub_24F77BFD4(v41, v42, v43, v44, v45, v46, v47, v48, v53, v57, v61, v65, v69, v73, v77, v80, v83, v86, v89,
    v92,
    v94,
    v96,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104);
  sub_24F777308();
  sub_24F77BC10();
}

void sub_24F8900DC()
{
  sub_24F7803E8();
  sub_24F77F194();
  v2();
  if (!v0)
  {
    sub_24F781698();
    sub_24F785954();
    uint64_t v3 = v1();
    sub_24F77DA60(v3, v4);
    swift_release();
  }
  sub_24F775FA4();
  sub_24F890488();
}

uint64_t sub_24F890264()
{
  return sub_24F88F424(v0);
}

uint64_t type metadata accessor for DatabaseValueCursor()
{
  return sub_24F777DE0();
}

uint64_t type metadata accessor for NullableDatabaseValueCursor()
{
  return sub_24F777DE0();
}

uint64_t sub_24F8902B0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F8902EC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F890328(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F890364(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of DatabaseValueConvertible.databaseValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static DatabaseValueConvertible.fromDatabaseValue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t method lookup function for DatabaseValueCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DatabaseValueCursor);
}

uint64_t sub_24F8903E4()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for NullableDatabaseValueCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NullableDatabaseValueCursor);
}

uint64_t sub_24F89045C@<X0>(uint64_t a1@<X8>)
{
  return DatabaseValueConvertible.sqlExpression.getter((uint64_t)&protocol witness table for NSString, a1);
}

uint64_t sub_24F890468(Swift::OpaquePointer to, Swift::Int32 at)
{
  return DatabaseValueConvertible.bind(to:at:)(to, at);
}

uint64_t sub_24F8904B8()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_24F8904C4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24F8904D4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = result;
    uint64_t result = sub_24F8CEE60();
    if (!__OFSUB__(result, v1))
    {
      sub_24F8CEE90();
      uint64_t v2 = sub_24F8CEFA0();
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8905C4(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24F89760C(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3);
  if (v4) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_24F890638()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24F890690(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))(*(void *)(a1 + 16));
}

uint64_t sub_24F8906C8()
{
  uint64_t v2 = *(void *)(v0 + 8);
  sub_24F7E5E0C(v2, (uint64_t)&v16);
  if (v17)
  {
    sub_24F794DE0(&v16, (uint64_t)v18);
    swift_beginAccess();
    if (!*(void *)(Row.PrefetchedRowsView.keys.getter() + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24F8CF7D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24F794C78();
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    uint64_t v19 = v4;
    sub_24F841A48(&v19);
    if (!v1)
    {
      swift_bridgeObjectRelease();
      MEMORY[0x2533638F0](v19, MEMORY[0x263F8D310]);
      sub_24F8CEEB0();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v5 = sub_24F8CF850();
      swift_allocError();
      uint64_t v7 = v6;
      sub_24F781274(&qword_269A2C358);
      sub_24F775458((uint64_t)v18, v7);
      uint64_t v8 = sub_24F8905C4(1, v2);
      uint64_t v10 = v9;
      uint64_t v12 = v11;
      unint64_t v14 = v13;
      swift_bridgeObjectRetain();
      sub_24F81D9F8(v8, v10, v12, v14);
      sub_24F8CF840();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, *MEMORY[0x263F8DCA8], v5);
      swift_willThrow();
      return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v18);
    }
  }
  else
  {
    sub_24F7783C0((uint64_t)&v16, qword_26B1F7980);
    sub_24F8CF9D0();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_24F890974@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    sub_24F775458(v4 + 40 * v5 - 8, (uint64_t)v32);
    sub_24F7811D0(v32, v33);
    uint64_t v6 = sub_24F8CFFE0();
    uint64_t v8 = v7;
    uint64_t v9 = v3[5];
    uint64_t v10 = v3[6];
    sub_24F7811D0(v3 + 2, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 88))(v6, v8, v9, v10);
    LOBYTE(v9) = v12;
    swift_bridgeObjectRelease();
    if (v9)
    {
      sub_24F7811D0(v32, v33);
      uint64_t v14 = sub_24F8CFFE0();
      uint64_t v16 = v15;
      uint64_t v22 = 0;
      *(void *)&long long v23 = 0;
      BYTE8(v23) = -1;
      uint64_t v17 = (void *)swift_retain();
      RowDecodingContext.init(row:key:)(v17, (long long *)&v22, (uint64_t)&v27);
      uint64_t v22 = v27;
      long long v23 = v28;
      unsigned __int8 v24 = v29;
      long long v25 = v30;
      long long v26 = v31;
      sub_24F7D29A4();
      swift_allocError();
      static RowDecodingError.columnNotFound(_:context:)(v14, v16, (uint64_t)&v22, v18);
      swift_bridgeObjectRelease();
      long long v19 = v23;
      uint64_t v20 = v26;
      unsigned __int8 v21 = v24;
      swift_release();
      sub_24F7B0E68(v19, *((uint64_t *)&v19 + 1), v21);
      swift_bridgeObjectRelease();
      sub_24F77835C(v20);
      swift_willThrow();
    }
    else
    {
      a1[3] = type metadata accessor for ColumnDecoder();
      a1[4] = swift_getWitnessTable();
      *a1 = v3;
      a1[1] = v11;
      a1[2] = v4;
      swift_bridgeObjectRetain();
      swift_retain();
    }
    return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v32);
  }
  else
  {
    a1[3] = type metadata accessor for ColumnDecoder();
    a1[4] = swift_getWitnessTable();
    *a1 = v3;
    a1[1] = 0;
    a1[2] = v4;
    swift_bridgeObjectRetain();
    return swift_retain();
  }
}

uint64_t sub_24F890BE8()
{
  if (*(void *)(v0 + 96))
  {
    uint64_t v1 = *(void *)(v0 + 96);
  }
  else
  {
    uint64_t v1 = sub_24F890C48(v0);
    *(void *)(v0 + 96) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24F890C48(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24F78E5FC();
  }
  else
  {
    uint64_t v3 = *(void *)(v1 + 72);
    swift_retain();
    uint64_t v4 = sub_24F8CF300();
    uint64_t v17 = (void *)v4;
    long long v14 = v1;
    uint64_t v15 = sub_24F8AF61C;
    uint64_t v16 = 0;
    if (v3)
    {
      uint64_t v5 = 0;
      do
      {
        Row.subscript.getter();
        uint64_t v6 = v12[2];
        unint64_t v7 = v12[3];
        char v8 = v13;
        swift_bridgeObjectRetain();
        sub_24F781F34(v6, v7, v8);
        swift_bridgeObjectRelease();
        sub_24F781F10(v6, v7, v8);
        sub_24F8AF548(v12, v5);
        sub_24F781F10(v6, v7, v8);
        uint64_t v5 = v12[0];
        *((void *)&v14 + 1) = v12[0];
        sub_24F8B6490();
        swift_bridgeObjectRelease();
      }
      while (v5 != *(void *)(v1 + 72));
      uint64_t v2 = v17;
    }
    else
    {
      uint64_t v2 = (void *)v4;
    }
    swift_release();
    swift_release();
  }
  uint64_t v17 = v2;
  Row.scopes.getter();
  Row.ScopesTreeView.names.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_24F8AC790();
  swift_beginAccess();
  long long v14 = *(_OWORD *)(v1 + 80);
  Row.PrefetchedRowsView.keys.getter();
  sub_24F8AC790();
  *(void *)&long long v14 = v17;
  MEMORY[0x270FA5388](v9);
  swift_bridgeObjectRetain();
  sub_24F781274(&qword_269A2C378);
  sub_24F778988(qword_269A2C380, &qword_269A2C378);
  uint64_t v10 = sub_24F8CEFD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24F890F4C()
{
  return sub_24F8CFFF0();
}

uint64_t sub_24F890FB4()
{
  return sub_24F8910BC();
}

uint64_t sub_24F890FE0()
{
  return sub_24F891154();
}

uint64_t sub_24F89100C()
{
  return sub_24F8911EC();
}

uint64_t sub_24F891038()
{
  return sub_24F769CC0();
}

uint64_t sub_24F891064()
{
  return sub_24F769CC0();
}

uint64_t sub_24F891090()
{
  return sub_24F8910BC();
}

uint64_t sub_24F8910BC()
{
  sub_24F77F1CC();
  if (!v1)
  {
    sub_24F77EBC4();
    uint64_t v0 = v2();
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_24F891128()
{
  return sub_24F891154();
}

uint64_t sub_24F891154()
{
  sub_24F77F1CC();
  if (!v1)
  {
    sub_24F77EBC4();
    uint64_t v0 = v2();
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_24F8911C0()
{
  return sub_24F8911EC();
}

uint64_t sub_24F8911EC()
{
  sub_24F77F1CC();
  if (!v1)
  {
    sub_24F77EBC4();
    uint64_t v0 = v2();
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_24F891258()
{
  return sub_24F769CC0();
}

float sub_24F891284()
{
  sub_24F769D2C();
  if (!v0)
  {
    sub_24F7FAC40();
    float v1 = v3;
    swift_bridgeObjectRelease();
  }
  return v1;
}

void sub_24F8912F8(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v27 = a3;
  unint64_t v7 = *(int **)v3;
  uint64_t v8 = *(void *)(v3 + 8);
  char v9 = *(unsigned char *)(v3 + 16);
  uint64_t v10 = *(sqlite3_stmt **)(a1 + 64);
  if (!v10)
  {
    unsigned __int8 v24 = *(int **)v3;
    uint64_t v25 = v8;
    char v26 = v9;
    sub_24F8973A0(a2, (uint64_t)&v21);
    if (!v4)
    {
      uint64_t v14 = v21;
      unint64_t v15 = v22;
      char v16 = v23;
      v19[0] = v21;
      v19[1] = v22;
      char v20 = v23;
      swift_retain();
      sub_24F894BFC(v19, (uint64_t)&v24, a2, (uint64_t)v27);
      sub_24F781F10(v14, v15, v16);
      return;
    }
    goto LABEL_14;
  }
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    return;
  }
  MEMORY[0x270FA5388](a1);
  void v18[2] = a1;
  _OWORD v18[3] = a2;
  if (sqlite3_column_type(v10, a2) == 5)
  {
    uint64_t v11 = sub_24F8CE970();
    char v12 = v27;
    uint64_t v13 = 1;
  }
  else
  {
    unsigned __int8 v24 = v7;
    uint64_t v25 = v8;
    char v26 = v9;
    uint64_t v17 = v27;
    sub_24F894E48(v10, a2, &v24, (void (*)(uint64_t *__return_ptr, uint64_t))sub_24F897748, (uint64_t)v18, v27);
    if (v4) {
      return;
    }
    uint64_t v11 = sub_24F8CE970();
    char v12 = v17;
    uint64_t v13 = 0;
  }
  sub_24F7771BC((uint64_t)v12, v13, 1, v11);
}

uint64_t sub_24F8914C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v8 = v3[1];
  char v9 = *((unsigned char *)v3 + 16);
  uint64_t v10 = *(sqlite3_stmt **)(a1 + 64);
  if (v10)
  {
    uint64_t v20 = *v3;
    uint64_t v21 = v8;
    char v22 = v9;
    if (a2 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (a2 <= 0x7FFFFFFF)
    {
      swift_retain();
      return sub_24F895D20(v10, a2, (uint64_t)&v20, a1, (void *)a2, a3);
    }
    __break(1u);
  }
  else
  {
    uint64_t v20 = *v3;
    uint64_t v21 = v8;
    char v22 = v9;
    sub_24F8973A0(a2, (uint64_t)&v17);
    if (!v4)
    {
      uint64_t v12 = v17;
      unint64_t v13 = v18;
      char v14 = v19;
      v15[0] = v17;
      v15[1] = v18;
      char v16 = v19;
      swift_retain();
      sub_24F896C44(v15, (uint64_t)&v20, a2, (uint64_t)a3);
      return sub_24F781F10(v12, v13, v14);
    }
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_24F8915E8()
{
}

uint64_t sub_24F89164C()
{
  uint64_t v0 = sub_24F8CF850();
  swift_allocError();
  uint64_t v2 = v1;
  sub_24F781274(&qword_269A2C368);
  *uint64_t v2 = sub_24F781274(&qword_269A2C370);
  sub_24F76BC5C();
  sub_24F8CF840();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x263F8DCB0], v0);
  return swift_willThrow();
}

unint64_t sub_24F89172C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  unint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  a1[3] = type metadata accessor for _RowDecoder();
  a1[4] = swift_getWitnessTable();
  unint64_t v7 = (void *)swift_allocObject();
  *a1 = v7;
  void v7[2] = v3;
  void v7[3] = v4;
  v7[4] = v5;
  void v7[5] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_24F767B74(v5);
}

uint64_t sub_24F891800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v15[6] = a5;
  uint64_t v7 = sub_24F76AE28(a4);
  if (v7)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8);
    void v15[3] = v7;
    void v15[4] = v8;
    sub_24F76ADC4(v15);
    uint64_t v12 = swift_retain();
    v11(v12, v9, v10);
    sub_24F781274(&qword_26B1F55B0);
    return swift_dynamicCast();
  }
  else
  {
    type metadata accessor for _RowDecoder();
    swift_getWitnessTable();
    char v14 = (void *)swift_allocObject();
    void v14[2] = a2;
    v14[3] = a3;
    v14[4] = 0;
    v14[5] = 0;
    swift_retain();
    swift_bridgeObjectRetain();
    return sub_24F8CF2F0();
  }
}

uint64_t sub_24F891988(uint64_t a1)
{
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16) >= 2uLL)
  {
    return swift_release();
  }
  return result;
}

void *sub_24F8919E4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = a2 + 2;
  unint64_t v5 = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  if (v5 >= 2)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  return a1;
}

void *sub_24F891A5C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a2[2];
  if (a1[2] >= 2uLL)
  {
    if (v4 >= 2)
    {
      uint64_t v6 = a2[3];
      a1[2] = v4;
      a1[3] = v6;
      swift_retain();
      swift_release();
      return a1;
    }
    swift_release();
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  uint64_t v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return a1;
}

uint64_t sub_24F891B20(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >= 2uLL)
  {
    if (v4 >= 2)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      swift_release();
      return a1;
    }
    swift_release();
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return a1;
}

uint64_t _s12GRDBInternal3RowC10ScopesViewVwet_0(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F891C00(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24F891C40()
{
  return sub_24F76BC5C();
}

uint64_t sub_24F891C64()
{
  return sub_24F890BE8();
}

float sub_24F891C88()
{
  return sub_24F891284();
}

uint64_t sub_24F891CAC()
{
  return sub_24F890FB4();
}

uint64_t sub_24F891CD0()
{
  return sub_24F890FE0();
}

uint64_t sub_24F891CF4()
{
  return sub_24F89100C();
}

uint64_t sub_24F891D18()
{
  return sub_24F891038();
}

uint64_t sub_24F891D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F891E48(a1, a2, a3, MEMORY[0x263F8E3A8]);
}

uint64_t sub_24F891D68()
{
  return sub_24F891064();
}

uint64_t sub_24F891D8C()
{
  return sub_24F891090();
}

uint64_t sub_24F891DB0()
{
  return sub_24F891128();
}

uint64_t sub_24F891DD4()
{
  return sub_24F8911C0();
}

uint64_t sub_24F891DF8()
{
  return sub_24F891258();
}

uint64_t sub_24F891E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F891E48(a1, a2, a3, MEMORY[0x263F8E3B0]);
}

uint64_t sub_24F891E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = sub_24F77F930();
  return a4(v5);
}

uint64_t sub_24F891E9C()
{
  return sub_24F8CFDB0();
}

uint64_t sub_24F891EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F892248(a1, a2, a3, MEMORY[0x263F8E338]);
}

uint64_t sub_24F891F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8921C4(a1, a2, a3, MEMORY[0x263F8E340]);
}

uint64_t sub_24F891F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F892248(a1, a2, a3, MEMORY[0x263F8E348]);
}

uint64_t sub_24F891F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8920B4(a1, a2, a3, MEMORY[0x263F8E358]);
}

uint64_t sub_24F891FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F89213C(a1, a2, a3, MEMORY[0x263F8E360]);
}

uint64_t sub_24F891FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8921C4(a1, a2, a3, MEMORY[0x263F8E368]);
}

uint64_t sub_24F892004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F892248(a1, a2, a3, MEMORY[0x263F8E370]);
}

uint64_t sub_24F892030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8922D4(a1, a2, a3, MEMORY[0x263F8E380]);
}

uint64_t sub_24F89205C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F892248(a1, a2, a3, MEMORY[0x263F8E350]);
}

uint64_t sub_24F892088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8920B4(a1, a2, a3, MEMORY[0x263F8E378]);
}

uint64_t sub_24F8920B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = sub_24F77F930();
  __int16 v6 = a4(v5);
  return sub_24F783224(v6 & 0x1FF);
}

uint64_t sub_24F892110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F89213C(a1, a2, a3, MEMORY[0x263F8E388]);
}

uint64_t sub_24F89213C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = sub_24F77F930();
  uint64_t v6 = a4(v5);
  return sub_24F783224(v6 & 0x1FFFF);
}

uint64_t sub_24F892198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8921C4(a1, a2, a3, MEMORY[0x263F8E390]);
}

uint64_t sub_24F8921C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = sub_24F77F930();
  unint64_t v6 = a4(v5);
  return sub_24F773D88(v6);
}

uint64_t sub_24F89221C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F892248(a1, a2, a3, MEMORY[0x263F8E398]);
}

uint64_t sub_24F892248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = sub_24F77F930();
  uint64_t result = a4(v6);
  if (v4) {
    return v8;
  }
  return result;
}

uint64_t sub_24F8922A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8922D4(a1, a2, a3, MEMORY[0x263F8E3A0]);
}

uint64_t sub_24F8922D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = sub_24F77F930();
  uint64_t result = a4(v6);
  if (v4) {
    return v8;
  }
  return result;
}

void sub_24F892338()
{
}

uint64_t sub_24F89235C()
{
  return sub_24F89164C();
}

unint64_t sub_24F892380@<X0>(void *a1@<X8>)
{
  return sub_24F89172C(a1);
}

uint64_t sub_24F8923A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F8923B0()
{
  return sub_24F8906C8();
}

uint64_t sub_24F8923C8@<X0>(void *a1@<X8>)
{
  return sub_24F890974(a1);
}

void sub_24F8923E0()
{
}

uint64_t sub_24F89243C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  a4[3] = type metadata accessor for PrefetchedRowsDecoder();
  a4[4] = swift_getWitnessTable();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_24F8924CC()
{
}

uint64_t sub_24F892528(uint64_t a1, uint64_t a2)
{
  return sub_24F893188(a1, a2, sub_24F897880);
}

uint64_t sub_24F892540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F894B6C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, void, void, void, void, uint64_t, void, uint64_t))sub_24F8923E0);
}

uint64_t sub_24F89256C(uint64_t a1, uint64_t a2)
{
  return sub_24F7663C0(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_24F89243C);
}

uint64_t sub_24F892598(uint64_t a1, uint64_t a2)
{
  return sub_24F7663C0(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_24F8924CC);
}

uint64_t sub_24F8925C4(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_24F8CF9E0();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL sub_24F892628(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v4 <= a3;
}

uint64_t sub_24F892698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[6] = a4;
  uint64_t v5 = v4;
  if (sub_24F76AE28(a3))
  {
    (*(void (**)(void *__return_ptr))(v6 + 40))(v21);
    uint64_t v8 = v21[0];
    uint64_t v7 = v21[1];
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v9 = v4[2];
  uint64_t v10 = *v5;
  unint64_t v11 = *v5 & 0xC000000000000001;
  sub_24F8A0264(v5[2]);
  if (v11)
  {
    uint64_t v12 = MEMORY[0x253364060](v9, v10);
  }
  else
  {
    uint64_t v12 = *(void *)(v10 + 8 * v9 + 32);
    swift_retain();
  }
  uint64_t v13 = v5[1];
  _OWORD v21[3] = type metadata accessor for _RowDecoder();
  v21[4] = swift_getWitnessTable();
  char v14 = (void *)swift_allocObject();
  v21[0] = v14;
  void v14[2] = v12;
  v14[3] = v13;
  v14[4] = v8;
  v14[5] = v7;
  swift_bridgeObjectRetain();
  uint64_t result = sub_24F8CF2F0();
  uint64_t v16 = v5[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  int v19 = v17;
  if (v20)
  {
    if (!v19)
    {
LABEL_13:
      _OWORD v5[2] = v18;
      return result;
    }
    __break(1u);
  }
  if (!v19) {
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_24F892814()
{
}

void sub_24F892878()
{
}

void sub_24F8928DC()
{
}

uint64_t sub_24F892940()
{
  return sub_24F8925C4(*v0);
}

uint64_t sub_24F89296C(uint64_t a1, uint64_t a2)
{
  return sub_24F894864(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_24F892628);
}

uint64_t sub_24F892984()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_24F89298C()
{
  return sub_24F7A148C() & 1;
}

uint64_t sub_24F8929A8(uint64_t a1)
{
  sub_24F892698(MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], MEMORY[0x263F8D518]);
  if (!v1) {
    char v2 = v4;
  }
  return v2 & 1;
}

uint64_t sub_24F8929F4(uint64_t a1)
{
  uint64_t result = sub_24F892698(MEMORY[0x263F8D310], a1, MEMORY[0x263F8D310], MEMORY[0x263F8D348]);
  if (!v1) {
    return v3;
  }
  return result;
}

double sub_24F892A3C(uint64_t a1)
{
  sub_24F892698(MEMORY[0x263F8D538], a1, MEMORY[0x263F8D538], MEMORY[0x263F8D570]);
  if (!v1) {
    return v3;
  }
  return result;
}

float sub_24F892A84(uint64_t a1)
{
  sub_24F892698(MEMORY[0x263F8D5C8], a1, MEMORY[0x263F8D5C8], MEMORY[0x263F8D600]);
  if (!v1) {
    return v3;
  }
  return result;
}

uint64_t sub_24F892ACC(uint64_t a1, uint64_t a2)
{
  return sub_24F892D1C(a1, a2, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6F8]);
}

uint64_t sub_24F892AF4(uint64_t a1, uint64_t a2)
{
  return sub_24F892BFC(a1, a2, MEMORY[0x263F8E498], MEMORY[0x263F8E4B8]);
}

uint64_t sub_24F892B1C(uint64_t a1, uint64_t a2)
{
  return sub_24F892C5C(a1, a2, MEMORY[0x263F8E4F0], MEMORY[0x263F8E510]);
}

uint64_t sub_24F892B44(uint64_t a1, uint64_t a2)
{
  return sub_24F892CBC(a1, a2, MEMORY[0x263F8E548], MEMORY[0x263F8E578]);
}

uint64_t sub_24F892B6C(uint64_t a1, uint64_t a2)
{
  return sub_24F892D1C(a1, a2, MEMORY[0x263F8E5C0], MEMORY[0x263F8E5F0]);
}

uint64_t sub_24F892B94()
{
  return sub_24F8CFB80();
}

uint64_t sub_24F892BAC(uint64_t a1, uint64_t a2)
{
  return sub_24F892D1C(a1, a2, MEMORY[0x263F8D9D0], MEMORY[0x263F8DA00]);
}

uint64_t sub_24F892BD4(uint64_t a1, uint64_t a2)
{
  return sub_24F892BFC(a1, a2, MEMORY[0x263F8E778], MEMORY[0x263F8E7A0]);
}

uint64_t sub_24F892BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_24F892698(a3, a1, a3, a4);
  if (!v4) {
    return v6;
  }
  return result;
}

uint64_t sub_24F892C34(uint64_t a1, uint64_t a2)
{
  return sub_24F892C5C(a1, a2, MEMORY[0x263F8E888], MEMORY[0x263F8E8B8]);
}

uint64_t sub_24F892C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_24F892698(a3, a1, a3, a4);
  if (!v4) {
    return v6;
  }
  return result;
}

uint64_t sub_24F892C94(uint64_t a1, uint64_t a2)
{
  return sub_24F892CBC(a1, a2, MEMORY[0x263F8E8F8], MEMORY[0x263F8E928]);
}

uint64_t sub_24F892CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_24F892698(a3, a1, a3, a4);
  if (!v4) {
    return v6;
  }
  return result;
}

uint64_t sub_24F892CF4(uint64_t a1, uint64_t a2)
{
  return sub_24F892D1C(a1, a2, MEMORY[0x263F8E970], MEMORY[0x263F8E9A0]);
}

uint64_t sub_24F892D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_24F892698(a3, a1, a3, a4);
  if (!v4) {
    return v6;
  }
  return result;
}

uint64_t sub_24F892D54()
{
  return sub_24F8CFB90();
}

uint64_t sub_24F892D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F892698(a1, a4, a2, a3);
}

uint64_t sub_24F892D94()
{
  return sub_24F8CFB10();
}

uint64_t sub_24F892DAC()
{
  return sub_24F8CFB00();
}

uint64_t sub_24F892DC4()
{
  uint64_t result = sub_24F8CFB20();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24F892DE8(uint64_t a1, uint64_t a2)
{
  return sub_24F89300C(a1, a2, MEMORY[0x263F8E110]);
}

uint64_t sub_24F892E14()
{
  uint64_t result = sub_24F8CFB30();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24F892E38(uint64_t a1, uint64_t a2)
{
  return sub_24F892F5C(a1, a2, MEMORY[0x263F8E118]);
}

uint64_t sub_24F892E64(uint64_t a1, uint64_t a2)
{
  return sub_24F892FB4(a1, a2, MEMORY[0x263F8E120]);
}

uint64_t sub_24F892E90(uint64_t a1, uint64_t a2)
{
  return sub_24F89300C(a1, a2, MEMORY[0x263F8E128]);
}

uint64_t sub_24F892EBC()
{
  uint64_t result = sub_24F8CFB60();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24F892EE0(uint64_t a1, uint64_t a2)
{
  return sub_24F893084(a1, a2, MEMORY[0x263F8E138]);
}

uint64_t sub_24F892F0C()
{
  uint64_t result = sub_24F8CFB40();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24F892F30(uint64_t a1, uint64_t a2)
{
  return sub_24F892F5C(a1, a2, MEMORY[0x263F8E130]);
}

uint64_t sub_24F892F5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  __int16 v3 = a3();
  return sub_24F783224(v3 & 0x1FF);
}

uint64_t sub_24F892F88(uint64_t a1, uint64_t a2)
{
  return sub_24F892FB4(a1, a2, MEMORY[0x263F8E140]);
}

uint64_t sub_24F892FB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  return sub_24F783224(v3 & 0x1FFFF);
}

uint64_t sub_24F892FE0(uint64_t a1, uint64_t a2)
{
  return sub_24F89300C(a1, a2, MEMORY[0x263F8E148]);
}

uint64_t sub_24F89300C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return sub_24F773D88(v3);
}

uint64_t sub_24F893034()
{
  uint64_t result = sub_24F8CFB70();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24F893058(uint64_t a1, uint64_t a2)
{
  return sub_24F893084(a1, a2, MEMORY[0x263F8E150]);
}

uint64_t sub_24F893084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_24F8930B0()
{
  return sub_24F8CFB50();
}

void sub_24F8930DC()
{
}

void sub_24F893104()
{
}

void sub_24F89311C()
{
}

uint64_t sub_24F893134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
}

uint64_t sub_24F893170(uint64_t a1, uint64_t a2)
{
  return sub_24F893188(a1, a2, sub_24F893134);
}

uint64_t sub_24F893188(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*v3, v3[1], v3[2], *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_24F8931A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F894B6C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, void, void, void, void, uint64_t, void, uint64_t))sub_24F812C58);
}

uint64_t sub_24F8931D0(uint64_t a1, uint64_t a2)
{
  return sub_24F7663C0(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_24F812C58);
}

BOOL sub_24F8931FC(int a1, Swift::Int atIndex)
{
  return Row.hasNull(atIndex:)(atIndex);
}

uint64_t sub_24F893228(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    int v2 = a2;
    if (*(void *)(a1 + 72) > (int64_t)a2)
    {
      uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
      if (!v3)
      {
        char v4 = sub_24F7EFF58();
        return v4 & 1;
      }
      if (!(a2 >> 31))
      {
        MEMORY[0x270FA5388](a1);
        if (sqlite3_column_type(v3, v2) == 5) {
          char v4 = sub_24F7D109C(v3);
        }
        else {
          char v4 = sqlite3_column_int64(v3, v2) != 0;
        }
        return v4 & 1;
      }
      __break(1u);
    }
  }
  uint64_t result = sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F893388(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7EFFBC();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D1204(v3);
  }
  uint64_t result = sqlite3_column_int64(v3, v2);
  if (result != (char)result) {
    return sub_24F7D1204(v3);
  }
  return result;
}

uint64_t sub_24F8934E4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7F001C();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D1274(v3);
  }
  uint64_t result = sqlite3_column_int64(v3, v2);
  if (result != (__int16)result) {
    return sub_24F7D1274(v3);
  }
  return result;
}

uint64_t sub_24F893640(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7F007C();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D117C();
  }
  uint64_t result = sqlite3_column_int64(v3, v2);
  if (result != (int)result) {
    return sub_24F7D117C();
  }
  return result;
}

sqlite3_int64 sub_24F89379C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7F00DC();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    sqlite3_int64 result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D110C(v3);
  }
  else {
    return sqlite3_column_int64(v3, v2);
  }
}

uint64_t sub_24F8938E8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7F013C();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D12E4(v3);
  }
  uint64_t result = sqlite3_column_int64(v3, v2);
  if (result < 0) {
    return sub_24F7D12E4(v3);
  }
  return result;
}

unint64_t sub_24F893A40(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7F019C();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    unint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D1354(v3);
  }
  unint64_t result = sqlite3_column_int64(v3, v2);
  if (result >= 0x100) {
    return sub_24F7D1354(v3);
  }
  return result;
}

unint64_t sub_24F893B9C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7F01FC();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    unint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D13C4(v3);
  }
  unint64_t result = sqlite3_column_int64(v3, v2);
  if (result >= 0x10000) {
    return sub_24F7D13C4(v3);
  }
  return result;
}

unint64_t sub_24F893CF8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7F025C();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    unint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D1434(v3);
  }
  unint64_t result = sqlite3_column_int64(v3, v2);
  if (HIDWORD(result)) {
    return sub_24F7D1434(v3);
  }
  return result;
}

uint64_t sub_24F893E54(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7F02BC();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D14A4(v3);
  }
  uint64_t result = sqlite3_column_int64(v3, v2);
  if (result < 0) {
    return sub_24F7D14A4(v3);
  }
  return result;
}

void sub_24F893FAC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_10;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3)
  {
    sub_24F7F031C();
    return;
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_10:
    sub_24F8CF9D0();
    __break(1u);
    return;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    sub_24F7D1514(v3);
  }
  else {
    sqlite3_column_double(v3, v2);
  }
}

void sub_24F894104(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_11;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3)
  {
    sub_24F7F037C();
    return;
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_11:
    sub_24F8CF9D0();
    __break(1u);
    return;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    sub_24F7D1584(v3);
  }
  else {
    sqlite3_column_double(v3, v2);
  }
}

uint64_t sub_24F894250(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_13;
  }
  int v2 = a2;
  if (*(void *)(a1 + 72) <= (int64_t)a2) {
    goto LABEL_13;
  }
  uint64_t v3 = *(sqlite3_stmt **)(a1 + 64);
  if (!v3) {
    return sub_24F7EFE90();
  }
  if (a2 >> 31)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  MEMORY[0x270FA5388](a1);
  if (sqlite3_column_type(v3, v2) == 5) {
    return sub_24F7D0FBC(v3);
  }
  if (!sqlite3_column_text(v3, v2)) {
    goto LABEL_12;
  }
  return sub_24F8CEEE0();
}

#error "24F894630: call analysis failed (funcsize=289)"

uint64_t sub_24F89484C(uint64_t a1, uint64_t a2)
{
  return sub_24F894864(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_24F8931FC);
}

uint64_t sub_24F894864(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*v3, v3[1], v3[2], *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_24F894880()
{
  return sub_24F893228(*(void *)v0, *(void *)(v0 + 8)) & 1;
}

uint64_t sub_24F8948AC()
{
  return sub_24F894250(*(void *)v0, *(void *)(v0 + 8));
}

void sub_24F8948D4()
{
  sub_24F894104(*(void *)v0, *(void *)(v0 + 8));
}

void sub_24F8948FC()
{
  sub_24F893FAC(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_24F894924()
{
  return sub_24F894A44();
}

uint64_t sub_24F894950()
{
  return sub_24F894A90();
}

uint64_t sub_24F89497C()
{
  return sub_24F894ADC();
}

uint64_t sub_24F8949A8()
{
  return sub_24F765DFC();
}

uint64_t sub_24F8949D4()
{
  return sub_24F8CFD20();
}

uint64_t sub_24F8949EC()
{
  return sub_24F765DFC();
}

uint64_t sub_24F894A18()
{
  return sub_24F894A44();
}

uint64_t sub_24F894A44()
{
  uint64_t v0 = sub_24F7801C0();
  return v1(v0);
}

uint64_t sub_24F894A64()
{
  return sub_24F894A90();
}

uint64_t sub_24F894A90()
{
  uint64_t v0 = sub_24F7801C0();
  return v1(v0);
}

uint64_t sub_24F894AB0()
{
  return sub_24F894ADC();
}

uint64_t sub_24F894ADC()
{
  uint64_t v0 = sub_24F7801C0();
  return v1(v0);
}

uint64_t sub_24F894AFC()
{
  return sub_24F765DFC();
}

uint64_t sub_24F894B28()
{
  return sub_24F8CFD30();
}

uint64_t sub_24F894B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F894B6C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, void, void, void, void, uint64_t, void, uint64_t))sub_24F8943A8);
}

uint64_t sub_24F894B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, void, void, void, void, uint64_t, void, uint64_t))
{
  return a6(a1, *v6, v6[1], v6[2], *(void *)(a4 + 16), a2, *(void *)(a4 + 24), a3);
}

uint64_t sub_24F894BA4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

id sub_24F894BAC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  id result = objc_msgSend(v0, sel_setFormatOptions_, 1907);
  qword_269A2C350 = (uint64_t)v0;
  return result;
}

uint64_t sub_24F894BFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24F781274(&qword_26B1F7240);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  int v13 = *((unsigned __int8 *)a1 + 16);
  if (v13 == 4 && (v12 | v11) == 0)
  {
    uint64_t v22 = sub_24F8CE970();
    uint64_t v23 = a4;
    uint64_t v24 = 1;
LABEL_9:
    sub_24F7771BC(v23, v24, 1, v22);
    return swift_release();
  }
  char v15 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)a2;
  v33[16] = v15;
  uint64_t v28 = v11;
  *(void *)&long long v29 = v12;
  BYTE8(v29) = v13;
  sub_24F896E50((uint64_t)&v28, (uint64_t)v10);
  uint64_t v16 = sub_24F8CE970();
  if (sub_24F777048((uint64_t)v10, 1, v16) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a4, v10, v16);
    uint64_t v23 = a4;
    uint64_t v24 = 0;
    uint64_t v22 = v16;
    goto LABEL_9;
  }
  sub_24F7783C0((uint64_t)v10, &qword_26B1F7240);
  uint64_t v28 = a3;
  *(void *)&long long v29 = 0;
  BYTE8(v29) = 1;
  BOOL v17 = (void *)swift_retain();
  RowDecodingContext.init(row:key:)(v17, (long long *)&v28, (uint64_t)v33);
  uint64_t v28 = *(void *)v33;
  long long v29 = *(_OWORD *)&v33[8];
  unsigned __int8 v30 = v34;
  long long v31 = v35;
  long long v32 = v36;
  v26[1] = v11;
  void v26[2] = v12;
  char v27 = v13;
  sub_24F7D29A4();
  swift_allocError();
  sub_24F7B00C4(v16, (uint64_t)&v28, v18);
  long long v19 = v29;
  uint64_t v20 = v32;
  unsigned __int8 v21 = v30;
  swift_release();
  sub_24F7B0E68(v19, *((uint64_t *)&v19 + 1), v21);
  swift_bridgeObjectRelease();
  sub_24F77835C(v20);
  swift_willThrow();
  return swift_release();
}

void sub_24F894E48(sqlite3_stmt *a1@<X0>, int a2@<W1>, int **a3@<X2>, void (*a4)(uint64_t *__return_ptr, uint64_t)@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  void (*v125)(uint64_t *__return_ptr, uint64_t);
  char *v126;
  uint64_t v127;
  sqlite3_stmt *v128;
  int v129;
  long long v130;
  char v131;
  long long v132;
  char v133;
  uint64_t v134;
  long long v135;
  unsigned __int8 v136;
  long long v137;
  long long v138;
  uint64_t v139;
  long long v140;
  unsigned __int8 v141;
  long long v142;
  long long v143;
  uint64_t v144;

  uint64_t v124 = a5;
  int v125 = a4;
  uint64_t v129 = a2;
  uint64_t v128 = a1;
  int v126 = a6;
  uint64_t v119 = sub_24F8CE7E0();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  uint64_t v117 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24F781274(&qword_26B1F58F0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v120 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v114 - v11;
  int v121 = (int *)type metadata accessor for DatabaseDateComponents();
  uint64_t v13 = MEMORY[0x270FA5388](v121);
  uint64_t v115 = (uint64_t)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v114 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v114 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v116 = (uint64_t)&v114 - v21;
  int v127 = sub_24F8CE970();
  uint64_t v123 = *(void *)(v127 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v127);
  uint64_t v24 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v114 = (char *)&v114 - v26;
  MEMORY[0x270FA5388](v25);
  int v122 = (int *)((char *)&v114 - v27);
  uint64_t v28 = sub_24F781274(&qword_26B1F7240);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  long long v31 = (char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  unsigned __int8 v34 = (char *)&v114 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v114 - v36;
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v40 = (char *)&v114 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v42 = *a3;
  if (!*((unsigned char *)a3 + 16))
  {
    int v122 = a3[1];
    uint64_t v59 = v42;
    id v60 = v42;
    uint64_t v61 = v128;
    int v62 = v129;
    if (!sqlite3_column_text(v128, v129))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x24F895D0CLL);
    }
    sub_24F8CEEE0();
    uint64_t v63 = (void *)sub_24F8CED70();
    swift_bridgeObjectRelease();
    id v64 = objc_msgSend(v60, sel_dateFromString_, v63);

    if (v64)
    {
      sub_24F8CE960();

      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
      uint64_t v66 = v127;
      v65(v31, v24, v127);
      sub_24F7771BC((uint64_t)v31, 0, 1, v66);
      if (sub_24F777048((uint64_t)v31, 1, v66) != 1)
      {
        sub_24F7B6734(v59, (uint64_t)v122, 0);
        uint64_t v67 = v126;
        uint64_t v68 = v31;
        uint64_t v69 = v66;
LABEL_9:
        v65(v67, v68, v69);
        return;
      }
    }
    else
    {
      uint64_t v66 = v127;
      sub_24F7771BC((uint64_t)v31, 1, 1, v127);
    }
    uint64_t v79 = sub_24F7783C0((uint64_t)v31, &qword_26B1F7240);
    v125(&v139, v79);
    uint64_t v134 = v139;
    uint64_t v135 = v140;
    uint64_t v136 = v141;
    uint64_t v137 = v142;
    uint64_t v138 = v143;
    sub_24F76B11C(v61, v62, (uint64_t)&v132);
    uint64_t v130 = v132;
    uint64_t v131 = v133;
    sub_24F7D29A4();
    swift_allocError();
    sub_24F7B00C4(v66, (uint64_t)&v134, v80);
    sub_24F781F10(v130, *((unint64_t *)&v130 + 1), v131);
    long long v81 = v135;
    uint64_t v82 = v138;
    unsigned __int8 v83 = v136;
    swift_release();
    sub_24F7B0E68(v81, *((uint64_t *)&v81 + 1), v83);
    swift_bridgeObjectRelease();
    sub_24F77835C(v82);
    swift_willThrow();
    uint64_t v56 = v59;
    uint64_t v57 = (uint64_t)v122;
    char v58 = 0;
LABEL_18:
    sub_24F7B6734(v56, v57, v58);
    return;
  }
  if (*((unsigned char *)a3 + 16) == 1)
  {
    uint64_t v43 = *a3;
    uint64_t v44 = (uint64_t)a3[1];
    swift_retain();
    uint64_t v45 = v128;
    int v46 = v129;
    sub_24F76B11C(v128, v129, (uint64_t)&v139);
    uint64_t v47 = v139;
    unint64_t v48 = v140;
    char v49 = BYTE8(v140);
    int v121 = v43;
    ((void (*)(uint64_t *))v43)(&v139);
    uint64_t v50 = v127;
    if (sub_24F777048((uint64_t)v40, 1, v127) != 1)
    {
      sub_24F7B6734(v121, v44, 1);
      sub_24F781F10(v47, v48, v49);
      (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v126, v40, v50);
      return;
    }
    uint64_t v51 = sub_24F7783C0((uint64_t)v40, &qword_26B1F7240);
    v125(&v139, v51);
    uint64_t v134 = v139;
    uint64_t v135 = v140;
    uint64_t v136 = v141;
    uint64_t v137 = v142;
    uint64_t v138 = v143;
    sub_24F76B11C(v45, v46, (uint64_t)&v132);
    uint64_t v130 = v132;
    uint64_t v131 = v133;
    sub_24F7D29A4();
    uint64_t v144 = swift_allocError();
    sub_24F7B00C4(v50, (uint64_t)&v134, v52);
    sub_24F781F10(v130, *((unint64_t *)&v130 + 1), v131);
    long long v53 = v135;
    uint64_t v54 = v138;
    int v122 = (int *)v44;
    unsigned __int8 v55 = v136;
    swift_release();
    sub_24F7B0E68(v53, *((uint64_t *)&v53 + 1), v55);
    swift_bridgeObjectRelease();
    sub_24F77835C(v54);
    swift_willThrow();
    sub_24F781F10(v47, v48, v49);
    uint64_t v56 = v121;
    uint64_t v57 = (uint64_t)v122;
    char v58 = 1;
    goto LABEL_18;
  }
  switch((unint64_t)v42)
  {
    case 1uLL:
      sqlite3_column_double(v128, v129);
      sub_24F8CE910();
      return;
    case 2uLL:
    case 3uLL:
      sqlite3_column_double(v128, v129);
      sub_24F8CE940();
      return;
    case 4uLL:
      uint64_t v84 = v128;
      int v85 = v129;
      if (!sqlite3_column_text(v128, v129)) {
        goto LABEL_42;
      }
      sub_24F8CEEE0();
      if (qword_269A2A368 != -1) {
        swift_once();
      }
      uint64_t v86 = (void *)qword_269A2C350;
      uint64_t v87 = (void *)sub_24F8CED70();
      swift_bridgeObjectRelease();
      id v88 = objc_msgSend(v86, sel_dateFromString_, v87);

      if (v88)
      {
        sub_24F8CE960();

        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
        uint64_t v89 = v127;
        v65(v34, v24, v127);
        sub_24F7771BC((uint64_t)v34, 0, 1, v89);
        if (sub_24F777048((uint64_t)v34, 1, v89) != 1)
        {
          uint64_t v67 = v126;
          uint64_t v68 = v34;
          uint64_t v69 = v89;
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v89 = v127;
        sub_24F7771BC((uint64_t)v34, 1, 1, v127);
      }
      uint64_t v98 = sub_24F7783C0((uint64_t)v34, &qword_26B1F7240);
      v125(&v139, v98);
      uint64_t v134 = v139;
      uint64_t v135 = v140;
      uint64_t v136 = v141;
      uint64_t v137 = v142;
      uint64_t v138 = v143;
      sub_24F76B11C(v84, v85, (uint64_t)&v132);
      uint64_t v130 = v132;
      uint64_t v131 = v133;
      sub_24F7D29A4();
      swift_allocError();
      uint64_t v100 = v99;
      uint64_t v101 = v89;
      goto LABEL_39;
    default:
      uint64_t v70 = (char *)&v114 - v41;
      uint64_t v71 = v128;
      int v72 = v129;
      int v73 = sqlite3_column_type(v128, v129);
      if ((v73 - 1) >= 2)
      {
        uint64_t v76 = v127;
        if (v73 == 3)
        {
          uint64_t v90 = sqlite3_column_text(v128, v129);
          if (v90)
          {
            uint64_t v91 = (uint64_t)v90;
            int v92 = sqlite3_column_bytes(v128, v129);
            SQLiteDateParser.components(cString:length:)(v91, v92, (uint64_t)v12);
            uint64_t v93 = (uint64_t)v12;
            uint64_t v94 = v120;
            sub_24F77A91C(v93, v120, &qword_26B1F58F0);
            uint64_t v95 = v121;
            if (sub_24F777048(v94, 1, (uint64_t)v121) == 1)
            {
              uint64_t v96 = &qword_26B1F58F0;
              uint64_t v97 = v94;
            }
            else
            {
              sub_24F79F27C(v94, (uint64_t)v17);
              uint64_t v102 = v118;
              uint64_t v103 = v117;
              uint64_t v104 = v119;
              (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v117, v17, v119);
              LODWORD(v120) = v17[v95[5]];
              sub_24F79F344((uint64_t)v17);
              v20[v95[5]] = v120;
              (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v20, v103, v104);
              uint64_t v105 = v116;
              sub_24F79F27C((uint64_t)v20, v116);
              uint64_t v106 = v115;
              sub_24F79F2E0(v105, v115);
              Date.init(databaseDateComponents:)(v106, (uint64_t)v37);
              if (sub_24F777048((uint64_t)v37, 1, v76) != 1)
              {
                uint64_t v112 = v123;
                uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
                uint64_t v113 = v114;
                v75(v114, v37, v76);
                sub_24F8CE920();
                uint64_t v74 = (uint64_t)v122;
                sub_24F8CE910();
                (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v76);
                sub_24F79F344(v105);
                int v72 = v129;
                uint64_t v77 = v128;
                goto LABEL_13;
              }
              sub_24F79F344(v105);
              uint64_t v96 = &qword_26B1F7240;
              uint64_t v97 = (uint64_t)v37;
            }
            sub_24F7783C0(v97, v96);
          }
        }
        uint64_t v78 = (uint64_t)v70;
        sub_24F7771BC((uint64_t)v70, 1, 1, v76);
        int v72 = v129;
        uint64_t v77 = v128;
        goto LABEL_38;
      }
      sqlite3_column_double(v71, v72);
      uint64_t v74 = (uint64_t)v122;
      sub_24F8CE940();
      uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
      uint64_t v76 = v127;
      uint64_t v77 = v71;
LABEL_13:
      uint64_t v78 = (uint64_t)v70;
      v75(v70, (char *)v74, v76);
      sub_24F7771BC((uint64_t)v70, 0, 1, v76);
      if (sub_24F777048((uint64_t)v70, 1, v76) != 1)
      {
        v75(v126, v70, v76);
        return;
      }
LABEL_38:
      uint64_t v107 = sub_24F7783C0(v78, &qword_26B1F7240);
      v125(&v139, v107);
      uint64_t v134 = v139;
      uint64_t v135 = v140;
      uint64_t v136 = v141;
      uint64_t v137 = v142;
      uint64_t v138 = v143;
      sub_24F76B11C(v77, v72, (uint64_t)&v132);
      uint64_t v130 = v132;
      uint64_t v131 = v133;
      sub_24F7D29A4();
      swift_allocError();
      uint64_t v100 = v108;
      uint64_t v101 = v76;
LABEL_39:
      sub_24F7B00C4(v101, (uint64_t)&v134, v100);
      sub_24F781F10(v130, *((unint64_t *)&v130 + 1), v131);
      long long v109 = v135;
      uint64_t v110 = v138;
      unsigned __int8 v111 = v136;
      swift_release();
      sub_24F7B0E68(v109, *((uint64_t *)&v109 + 1), v111);
      swift_bridgeObjectRelease();
      sub_24F77835C(v110);
      swift_willThrow();
      return;
  }
}

uint64_t sub_24F895D20@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char *a6@<X8>)
{
  uint64_t v118 = a5;
  uint64_t v123 = a4;
  int v121 = a2;
  int v122 = a1;
  uint64_t v119 = a6;
  uint64_t v115 = (void *)sub_24F8CE7E0();
  uint64_t v110 = *(v115 - 1);
  MEMORY[0x270FA5388](v115);
  uint64_t v114 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24F781274(&qword_26B1F58F0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v112 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v108 - v11;
  uint64_t v113 = type metadata accessor for DatabaseDateComponents();
  uint64_t v13 = MEMORY[0x270FA5388](v113);
  uint64_t v109 = (uint64_t)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v108 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v108 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v111 = (uint64_t)&v108 - v21;
  uint64_t v120 = sub_24F8CE970();
  uint64_t v117 = *(void *)(v120 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v120);
  uint64_t v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v108 = (char *)&v108 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v116 = (uint64_t)&v108 - v27;
  uint64_t v28 = sub_24F781274(&qword_26B1F7240);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  long long v31 = (char *)&v108 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  unsigned __int8 v34 = (char *)&v108 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v108 - v36;
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v40 = (char *)&v108 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v43 = *(void (**)(void))a3;
  uint64_t v42 = *(void *)(a3 + 8);
  if (*(unsigned char *)(a3 + 16))
  {
    if (*(unsigned char *)(a3 + 16) == 1)
    {
      uint64_t v44 = *(void (**)(void))a3;
      uint64_t v45 = v42;
      swift_retain();
      int v46 = v122;
      int v47 = v121;
      sub_24F76B11C(v122, v121, (uint64_t)&v133);
      unint64_t v48 = v134;
      char v49 = BYTE8(v134);
      uint64_t v115 = v133;
      v44(&v133);
      uint64_t v50 = v120;
      if (sub_24F777048((uint64_t)v40, 1, v120) != 1)
      {
        sub_24F7B6734(v44, v45, 1);
        sub_24F781F10((uint64_t)v115, v48, v49);
        (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v119, v40, v50);
        return swift_release();
      }
      sub_24F7783C0((uint64_t)v40, &qword_26B1F7240);
      uint64_t v128 = v118;
      *(void *)&long long v129 = 0;
      BYTE8(v129) = 1;
      uint64_t v51 = (void *)swift_retain();
      RowDecodingContext.init(row:key:)(v51, (long long *)&v128, (uint64_t)&v133);
      uint64_t v128 = v133;
      long long v129 = v134;
      unsigned __int8 v130 = v135;
      long long v131 = v136;
      long long v132 = v137;
      sub_24F76B11C(v46, v47, (uint64_t)&v126);
      long long v124 = v126;
      char v125 = v127;
      sub_24F7D29A4();
      uint64_t v138 = swift_allocError();
      sub_24F7B00C4(v50, (uint64_t)&v128, v52);
      sub_24F781F10(v124, *((unint64_t *)&v124 + 1), v125);
      long long v53 = v129;
      uint64_t v54 = v132;
      uint64_t v116 = v45;
      unsigned __int8 v55 = v130;
      swift_release();
      sub_24F7B0E68(v53, *((uint64_t *)&v53 + 1), v55);
      swift_bridgeObjectRelease();
      sub_24F77835C(v54);
      swift_willThrow();
      sub_24F781F10((uint64_t)v115, v48, v49);
      uint64_t v56 = v44;
      uint64_t v57 = v116;
      char v58 = 1;
      goto LABEL_17;
    }
    int v66 = v121;
    switch((unint64_t)v43)
    {
      case 1uLL:
        sqlite3_column_double(v122, v121);
        sub_24F8CE910();
        return swift_release();
      case 2uLL:
      case 3uLL:
        sqlite3_column_double(v122, v121);
        sub_24F8CE940();
        return swift_release();
      case 4uLL:
        if (!sqlite3_column_text(v122, v121)) {
          goto LABEL_41;
        }
        sub_24F8CEEE0();
        if (qword_269A2A368 != -1) {
          swift_once();
        }
        uint64_t v79 = (void *)qword_269A2C350;
        uint64_t v80 = (void *)sub_24F8CED70();
        swift_bridgeObjectRelease();
        id v81 = objc_msgSend(v79, sel_dateFromString_, v80);

        if (v81)
        {
          sub_24F8CE960();

          uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v117 + 32);
          uint64_t v83 = v120;
          v82(v34, v24, v120);
          sub_24F7771BC((uint64_t)v34, 0, 1, v83);
          if (sub_24F777048((uint64_t)v34, 1, v83) != 1)
          {
            v82(v119, v34, v83);
            return swift_release();
          }
        }
        else
        {
          uint64_t v83 = v120;
          sub_24F7771BC((uint64_t)v34, 1, 1, v120);
        }
        sub_24F7783C0((uint64_t)v34, &qword_26B1F7240);
        uint64_t v128 = v118;
        *(void *)&long long v129 = 0;
        BYTE8(v129) = 1;
        int v92 = (void *)swift_retain();
        RowDecodingContext.init(row:key:)(v92, (long long *)&v128, (uint64_t)&v133);
        uint64_t v128 = v133;
        long long v129 = v134;
        unsigned __int8 v130 = v135;
        long long v131 = v136;
        long long v132 = v137;
        sub_24F76B11C(v122, v66, (uint64_t)&v126);
        long long v124 = v126;
        char v125 = v127;
        sub_24F7D29A4();
        swift_allocError();
        uint64_t v94 = v93;
        uint64_t v95 = v83;
        goto LABEL_38;
      default:
        uint64_t v67 = (char *)&v108 - v41;
        uint64_t v68 = v122;
        int v69 = sqlite3_column_type(v122, v121);
        if ((v69 - 1) < 2)
        {
          sqlite3_column_double(v68, v66);
          uint64_t v70 = v116;
          sub_24F8CE940();
          uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 32);
          uint64_t v72 = v120;
LABEL_12:
          v71(v67, v70, v72);
          sub_24F7771BC((uint64_t)v67, 0, 1, v72);
          if (sub_24F777048((uint64_t)v67, 1, v72) != 1)
          {
            v71(v119, (uint64_t)v67, v72);
            return swift_release();
          }
LABEL_37:
          sub_24F7783C0((uint64_t)v67, &qword_26B1F7240);
          uint64_t v128 = v118;
          *(void *)&long long v129 = 0;
          BYTE8(v129) = 1;
          uint64_t v101 = (void *)swift_retain();
          RowDecodingContext.init(row:key:)(v101, (long long *)&v128, (uint64_t)&v133);
          uint64_t v128 = v133;
          long long v129 = v134;
          unsigned __int8 v130 = v135;
          long long v131 = v136;
          long long v132 = v137;
          sub_24F76B11C(v122, v66, (uint64_t)&v126);
          long long v124 = v126;
          char v125 = v127;
          sub_24F7D29A4();
          swift_allocError();
          uint64_t v94 = v102;
          uint64_t v95 = v72;
LABEL_38:
          sub_24F7B00C4(v95, (uint64_t)&v128, v94);
          sub_24F781F10(v124, *((unint64_t *)&v124 + 1), v125);
          long long v103 = v129;
          uint64_t v104 = v132;
          unsigned __int8 v105 = v130;
          swift_release();
          sub_24F7B0E68(v103, *((uint64_t *)&v103 + 1), v105);
          swift_bridgeObjectRelease();
          sub_24F77835C(v104);
          swift_willThrow();
          return swift_release();
        }
        uint64_t v72 = v120;
        if (v69 == 3)
        {
          uint64_t v84 = sqlite3_column_text(v122, v66);
          if (v84)
          {
            uint64_t v85 = (uint64_t)v84;
            int v86 = sqlite3_column_bytes(v122, v66);
            SQLiteDateParser.components(cString:length:)(v85, v86, (uint64_t)v12);
            uint64_t v87 = (uint64_t)v12;
            uint64_t v88 = v112;
            sub_24F77A91C(v87, v112, &qword_26B1F58F0);
            uint64_t v89 = v113;
            if (sub_24F777048(v88, 1, v113) == 1)
            {
              uint64_t v90 = &qword_26B1F58F0;
              uint64_t v91 = v88;
            }
            else
            {
              sub_24F79F27C(v88, (uint64_t)v17);
              uint64_t v96 = v89;
              uint64_t v97 = v110;
              (*(void (**)(char *, char *, void *))(v110 + 16))(v114, v17, v115);
              LODWORD(v112) = v17[*(int *)(v96 + 20)];
              sub_24F79F344((uint64_t)v17);
              v20[*(int *)(v96 + 20)] = v112;
              (*(void (**)(char *, char *, void *))(v97 + 32))(v20, v114, v115);
              uint64_t v98 = (uint64_t)v20;
              uint64_t v99 = v111;
              sub_24F79F27C(v98, v111);
              uint64_t v100 = v109;
              sub_24F79F2E0(v99, v109);
              Date.init(databaseDateComponents:)(v100, (uint64_t)v37);
              if (sub_24F777048((uint64_t)v37, 1, v72) != 1)
              {
                uint64_t v106 = v117;
                uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 32);
                uint64_t v107 = v108;
                v71(v108, (uint64_t)v37, v72);
                sub_24F8CE920();
                uint64_t v70 = v116;
                sub_24F8CE910();
                (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v72);
                sub_24F79F344(v111);
                goto LABEL_12;
              }
              sub_24F79F344(v99);
              uint64_t v90 = &qword_26B1F7240;
              uint64_t v91 = (uint64_t)v37;
            }
            sub_24F7783C0(v91, v90);
          }
        }
        sub_24F7771BC((uint64_t)v67, 1, 1, v72);
        goto LABEL_37;
    }
  }
  uint64_t v116 = *(void *)(a3 + 8);
  uint64_t v115 = v43;
  uint64_t v59 = v43;
  id v60 = v122;
  int v61 = v121;
  if (!sqlite3_column_text(v122, v121))
  {
    __break(1u);
LABEL_41:
    __break(1u);
    JUMPOUT(0x24F896C30);
  }
  sub_24F8CEEE0();
  int v62 = (void *)sub_24F8CED70();
  swift_bridgeObjectRelease();
  id v63 = objc_msgSend(v59, sel_dateFromString_, v62);

  if (!v63)
  {
    uint64_t v65 = v120;
    sub_24F7771BC((uint64_t)v31, 1, 1, v120);
    goto LABEL_16;
  }
  sub_24F8CE960();

  id v64 = *(void (**)(char *, char *, uint64_t))(v117 + 32);
  uint64_t v65 = v120;
  v64(v31, v24, v120);
  sub_24F7771BC((uint64_t)v31, 0, 1, v65);
  if (sub_24F777048((uint64_t)v31, 1, v65) == 1)
  {
LABEL_16:
    sub_24F7783C0((uint64_t)v31, &qword_26B1F7240);
    uint64_t v128 = v118;
    *(void *)&long long v129 = 0;
    BYTE8(v129) = 1;
    uint64_t v74 = (void *)swift_retain();
    RowDecodingContext.init(row:key:)(v74, (long long *)&v128, (uint64_t)&v133);
    uint64_t v128 = v133;
    long long v129 = v134;
    unsigned __int8 v130 = v135;
    long long v131 = v136;
    long long v132 = v137;
    sub_24F76B11C(v60, v61, (uint64_t)&v126);
    long long v124 = v126;
    char v125 = v127;
    sub_24F7D29A4();
    swift_allocError();
    sub_24F7B00C4(v65, (uint64_t)&v128, v75);
    sub_24F781F10(v124, *((unint64_t *)&v124 + 1), v125);
    long long v76 = v129;
    uint64_t v77 = v132;
    unsigned __int8 v78 = v130;
    swift_release();
    sub_24F7B0E68(v76, *((uint64_t *)&v76 + 1), v78);
    swift_bridgeObjectRelease();
    sub_24F77835C(v77);
    swift_willThrow();
    uint64_t v56 = v115;
    uint64_t v57 = v116;
    char v58 = 0;
LABEL_17:
    sub_24F7B6734(v56, v57, v58);
    return swift_release();
  }
  sub_24F7B6734(v115, v116, 0);
  v64(v119, v31, v65);
  return swift_release();
}

uint64_t sub_24F896C44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24F781274(&qword_26B1F7240);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  char v13 = *((unsigned char *)a1 + 16);
  LOBYTE(v9) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)a2;
  v28[16] = v9;
  uint64_t v23 = v11;
  *(void *)&long long v24 = v12;
  BYTE8(v24) = v13;
  sub_24F896E50((uint64_t)&v23, (uint64_t)v10);
  uint64_t v14 = sub_24F8CE970();
  if (sub_24F777048((uint64_t)v10, 1, v14) == 1)
  {
    sub_24F7783C0((uint64_t)v10, &qword_26B1F7240);
    uint64_t v23 = a3;
    *(void *)&long long v24 = 0;
    BYTE8(v24) = 1;
    uint64_t v15 = (void *)swift_retain();
    RowDecodingContext.init(row:key:)(v15, (long long *)&v23, (uint64_t)v28);
    uint64_t v23 = *(void *)v28;
    long long v24 = *(_OWORD *)&v28[8];
    unsigned __int8 v25 = v29;
    long long v26 = v30;
    long long v27 = v31;
    v21[1] = v11;
    void v21[2] = v12;
    char v22 = v13;
    sub_24F7D29A4();
    swift_allocError();
    sub_24F7B00C4(v14, (uint64_t)&v23, v16);
    long long v17 = v24;
    uint64_t v18 = v27;
    unsigned __int8 v19 = v25;
    swift_release();
    sub_24F7B0E68(v17, *((uint64_t *)&v17 + 1), v19);
    swift_bridgeObjectRelease();
    sub_24F77835C(v18);
    swift_willThrow();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a4, v10, v14);
  }
  return swift_release();
}

void sub_24F896E50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24F781274(&qword_26B1F7240);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  unsigned int v11 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v12 = *(void **)v2;
  uint64_t v13 = *(void *)(v2 + 8);
  if (!*(unsigned char *)(v2 + 16))
  {
    if (v11 != 2)
    {
      if (v11 == 3)
      {
        sub_24F781F34(v10, v9, 3);
        sub_24F7C2878(v12, v13, 0);
        sub_24F8CEDC0();
        sub_24F8CEDA0();
        uint64_t v18 = v17;
        sub_24F781F10(v10, v9, 3);
        if (v18) {
          goto LABEL_11;
        }
      }
      else
      {
        id v22 = v12;
      }
      uint64_t v23 = sub_24F8CE970();
      sub_24F7771BC(a2, 1, 1, v23);
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v14 = v12;
      uint64_t v15 = v13;
      char v16 = 0;
      goto LABEL_18;
    }
    sub_24F781F34(v10, v9, 2);
    sub_24F7C2878(v12, v13, 0);
LABEL_11:
    swift_bridgeObjectRetain();
    unsigned __int8 v19 = (void *)sub_24F8CED70();
    id v20 = objc_msgSend(v12, sel_dateFromString_, v19);

    if (v20)
    {
      sub_24F8CE960();

      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = 1;
    }
    uint64_t v24 = sub_24F8CE970();
    sub_24F7771BC((uint64_t)v7, v21, 1, v24);
    sub_24F77A91C((uint64_t)v7, a2, &qword_26B1F7240);
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  if (*(unsigned char *)(v2 + 16) != 1)
  {
    switch((unint64_t)v12)
    {
      case 1uLL:
        if (v11 > 1) {
          goto LABEL_29;
        }
        sub_24F8CE910();
        goto LABEL_31;
      case 2uLL:
        if (v11 <= 1) {
          goto LABEL_30;
        }
        goto LABEL_29;
      case 3uLL:
        if (v11 > 1)
        {
LABEL_29:
          uint64_t v25 = sub_24F8CE970();
          uint64_t v26 = a2;
          uint64_t v27 = 1;
        }
        else
        {
LABEL_30:
          sub_24F8CE940();
LABEL_31:
          uint64_t v25 = sub_24F8CE970();
          uint64_t v26 = a2;
          uint64_t v27 = 0;
        }
        sub_24F7771BC(v26, v27, 1, v25);
        return;
      case 4uLL:
        if (v11 == 3)
        {
          sub_24F78419C(v10, v9);
          sub_24F8CEDC0();
          uint64_t v28 = sub_24F8CEDA0();
          unint64_t v30 = v29;
          sub_24F781F10(v10, v9, 3);
          if (v30)
          {
            uint64_t v10 = v28;
            unint64_t v9 = v30;
            goto LABEL_37;
          }
        }
        else if (v11 == 2)
        {
          sub_24F781F34(v10, v9, 2);
LABEL_37:
          uint64_t v33 = v10;
          unint64_t v34 = v9;
          swift_bridgeObjectRetain();
          sub_24F8972BC(a2);
          swift_bridgeObjectRelease_n();
          return;
        }
        uint64_t v31 = sub_24F8CE970();
        sub_24F7771BC(a2, 1, 1, v31);
        swift_bridgeObjectRelease();
        return;
      default:
        uint64_t v33 = v10;
        unint64_t v34 = v9;
        char v35 = v11;
        static Date.fromDatabaseValue(_:)((uint64_t)&v33, a2);
        return;
    }
  }
  uint64_t v33 = v10;
  unint64_t v34 = v9;
  char v35 = v11;
  swift_retain();
  ((void (*)(uint64_t *))v12)(&v33);
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  char v16 = 1;
LABEL_18:
  sub_24F7B6734(v14, v15, v16);
}

uint64_t sub_24F8972BC@<X0>(uint64_t a1@<X8>)
{
  if (qword_269A2A368 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_269A2C350;
  uint64_t v3 = (void *)sub_24F8CED70();
  id v4 = objc_msgSend(v2, sel_dateFromString_, v3);

  if (v4)
  {
    sub_24F8CE960();

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = sub_24F8CE970();
  return sub_24F7771BC(a1, v5, 1, v6);
}

sqlite3_stmt *sub_24F8973A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((a1 & 0x8000000000000000) == 0 && v2[9] > a1) {
    return sub_24F78FE64(v2, a1, a2);
  }
  id result = (sqlite3_stmt *)sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F897428(uint64_t *a1)
{
  return sub_24F841A48(a1);
}

char *sub_24F897440(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_24F781274(&qword_269A2C360);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24F897538()
{
  id v0 = (char *)sub_24F77E25C();
  return sub_24F897440(v0, v1, v2, v3);
}

void sub_24F897548()
{
  char v0 = sub_24F77E25C();
  sub_24F7961E0(v0, v1, v2, v3);
}

void sub_24F897558()
{
}

void sub_24F897568()
{
  char v0 = sub_24F77E25C();
  sub_24F7963F4(v0, v1, v2, v3);
}

void sub_24F897578()
{
  char v0 = sub_24F77E25C();
  sub_24F7964B8(v0, v1, v2, v3);
}

void sub_24F897588()
{
}

void sub_24F897598()
{
}

void sub_24F8975A8()
{
}

void sub_24F8975B8()
{
  char v0 = sub_24F77E25C();
  sub_24F796BCC(v0, v1, v2, v3);
}

void sub_24F8975C8()
{
}

void sub_24F8975D8()
{
  char v0 = sub_24F77E25C();
  sub_24F796CD0(v0, v1, v2, v3);
}

void sub_24F8975E8()
{
}

void sub_24F8975F8()
{
}

uint64_t sub_24F89760C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_24F897660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(qword_26B1F7980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F8976C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F781274(qword_26B1F7980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PrefetchedRowsDecoder()
{
  return sub_24F777DE0();
}

uint64_t sub_24F897748@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7D1DB4(*(void *)(v1 + 24), a1);
}

uint64_t sub_24F897750()
{
  return sub_24F890F4C();
}

void *sub_24F89777C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24F8977BC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_24F897824(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t ValueReducers.Fetch._fetch(_:)()
{
  return (*v0)();
}

uint64_t ValueReducers.Fetch._value(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a3, a1, v4);
  return sub_24F7771BC(a3, 0, 1, v4);
}

uint64_t sub_24F897928(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24F897964()
{
  return ValueReducers.Fetch._fetch(_:)();
}

uint64_t sub_24F89797C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ValueReducers.Fetch._value(_:)(a1, a2, a3);
}

uint64_t type metadata accessor for ValueReducers.Fetch()
{
  return sub_24F777DE0();
}

uint64_t sub_24F8979AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v2 = v19;
    uint64_t v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      unint64_t v5 = *((void *)v4 - 1);
      int v7 = *v4;
      v4 += 24;
      switch(v7)
      {
        case 1:
          uint64_t v8 = sub_24F8CF2D0();
          unint64_t v10 = v14;
          uint64_t v11 = v6;
          unint64_t v12 = v5;
          char v13 = 1;
          goto LABEL_6;
        case 2:
          sub_24F781F34(v6, v5, 2);
          uint64_t v8 = sub_24F8CEE10();
          unint64_t v10 = v15;
          break;
        case 3:
          sub_24F781F34(v6, v5, 3);
          sub_24F78419C(v6, v5);
          sub_24F8CE880();
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          sub_24F8CEEB0();
          sub_24F781F10(v6, v5, 3);
          sub_24F781F10(v6, v5, 3);
          uint64_t v8 = 0x2861746144;
          unint64_t v10 = 0xE500000000000000;
          break;
        case 4:
          sub_24F781F10(v6, v5, 4);
          unint64_t v10 = 0xE400000000000000;
          uint64_t v8 = 1280070990;
          break;
        default:
          uint64_t v8 = sub_24F8CFAE0();
          unint64_t v10 = v9;
          uint64_t v11 = v6;
          unint64_t v12 = v5;
          char v13 = 0;
LABEL_6:
          sub_24F781F10(v11, v12, v13);
          break;
      }
      unint64_t v16 = *(void *)(v19 + 16);
      if (v16 >= *(void *)(v19 + 24) >> 1) {
        sub_24F77C4AC();
      }
      *(void *)(v19 + 16) = v16 + 1;
      uint64_t v17 = v19 + 16 * v16;
      *(void *)(v17 + 32) = v8;
      *(void *)(v17 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24F897BEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v2 = v23;
    uint64_t v4 = sub_24F770668(a1);
    if ((v6 & 1) == 0)
    {
      uint64_t v7 = v4;
      uint64_t v8 = a1 + 64;
      uint64_t v9 = v1 - 1;
      if ((v4 & 0x8000000000000000) == 0)
      {
        while (v7 < 1 << *(unsigned char *)(a1 + 32))
        {
          if ((*(void *)(v8 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
            goto LABEL_23;
          }
          if (v5 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_24;
          }
          int v20 = v5;
          uint64_t v19 = v9;
          uint64_t v10 = *(void *)(a1 + 56) + 24 * v7;
          uint64_t v12 = *(void *)v10;
          unint64_t v11 = *(void *)(v10 + 8);
          uint64_t v13 = *(unsigned __int8 *)(v10 + 16);
          swift_bridgeObjectRetain();
          sub_24F781F34(v12, v11, v13);
          swift_bridgeObjectRetain();
          sub_24F781F34(v12, v11, v13);
          swift_bridgeObjectRelease();
          sub_24F781F10(v12, v11, v13);
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_24F8CEE10();
          uint64_t v22 = v14;
          sub_24F8CEEB0();
          switch(v13)
          {
            case 1:
              sub_24F8CF2D0();
              break;
            case 2:
              swift_bridgeObjectRetain();
              sub_24F8CEE10();
              break;
            case 3:
              sub_24F78419C(v12, v11);
              sub_24F8CE880();
              sub_24F8CEEB0();
              swift_bridgeObjectRelease();
              sub_24F8CEEB0();
              sub_24F781F10(v12, v11, 3);
              break;
            case 4:
              break;
            default:
              sub_24F8CFAE0();
              break;
          }
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24F781F10(v12, v11, v13);
          unint64_t v15 = *(void *)(v23 + 16);
          if (v15 >= *(void *)(v23 + 24) >> 1) {
            sub_24F77C4AC();
          }
          *(void *)(v23 + 16) = v15 + 1;
          uint64_t v16 = v23 + 16 * v15;
          *(void *)(v16 + 32) = v21;
          *(void *)(v16 + 40) = v22;
          if (v7 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_25;
          }
          uint64_t v8 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
            goto LABEL_26;
          }
          if (v20 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_27;
          }
          uint64_t v17 = sub_24F8CF6F0();
          if (!v19) {
            return v2;
          }
          uint64_t v7 = v17;
          int v5 = *(_DWORD *)(a1 + 36);
          uint64_t v9 = v19 - 1;
          if (v17 < 0) {
            break;
          }
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x24F897F44);
  }
  return v2;
}

GRDBInternal::StatementArguments __swiftcall StatementArguments.init()()
{
  uint64_t v1 = MEMORY[0x263F8EE80];
  *char v0 = MEMORY[0x263F8EE78];
  v0[1] = v1;
  return result;
}

uint64_t Statement.sql.getter()
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t v1 = swift_unownedRetainStrong();
  if ((sub_24F78346C(v1) & 1) == 0) {
    goto LABEL_7;
  }
  swift_release();
  if (!sqlite3_sql(*(sqlite3_stmt **)(v0 + 16)))
  {
    __break(1u);
LABEL_7:
    sub_24F770EAC();
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  sub_24F8CEED0();
  if (qword_26B1F5580 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24F8CE660();
  sub_24F79F3A0(v2, (uint64_t)qword_26B1FAB00);
  sub_24F7B0E7C();
  sub_24F8CF690();
  swift_bridgeObjectRelease();
  return sub_24F76B8E8();
}

uint64_t sub_24F8980A0(sqlite3_stmt *a1)
{
  int v3 = *(_DWORD *)(v1 + 28);
  if (sqlite3_column_type(a1, v3) == 5) {
    goto LABEL_7;
  }
  if (!sqlite3_column_text(a1, v3))
  {
    __break(1u);
LABEL_7:
    sub_24F7D0FBC(a1);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  return sub_24F8CEEE0();
}

uint64_t sub_24F898150@<X0>(uint64_t a1@<X8>)
{
  return sub_24F898988(a1);
}

uint64_t sub_24F89817C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8981D4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24F899290);
}

uint64_t sub_24F8981A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8981D4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24F899558);
}

uint64_t sub_24F8981D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = (unsigned char *)(a1 + 24);
  swift_beginAccess();
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    swift_retain_n();
    swift_retain();
    uint64_t v10 = swift_retain();
    a4(v10, a1, a2, a3);
    swift_release();
    if (!v4) {
      *uint64_t v9 = 1;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24F8982BC(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    swift_retain();
    uint64_t v7 = swift_retain();
    sub_24F8997EC(v7, a1, a2, v2);
    uint64_t result = swift_release();
    if (!v3) {
      *(unsigned char *)(v2 + 24) = 1;
    }
  }
  return result;
}

uint64_t sub_24F898360(void (*a1)(void))
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v1 + 24) & 1) == 0)
  {
    swift_retain();
    uint64_t v5 = swift_retain();
    sub_24F89A0B8(v5, a1);
    uint64_t result = swift_release();
    if (!v2) {
      *(unsigned char *)(v1 + 24) = 1;
    }
  }
  return result;
}

const unsigned __int8 *sub_24F898404(sqlite3_stmt *a1)
{
  int v3 = *(_DWORD *)(v1 + 28);
  if (sqlite3_column_type(a1, v3) == 5) {
    return 0;
  }
  uint64_t result = sqlite3_column_text(a1, v3);
  if (result) {
    return (const unsigned __int8 *)sub_24F8CEEE0();
  }
  __break(1u);
  return result;
}

sqlite3_int64 sub_24F89845C(sqlite3_stmt *a1)
{
  int v3 = *(_DWORD *)(v1 + 28);
  if (sqlite3_column_type(a1, v3) == 5) {
    return 0;
  }
  else {
    return sqlite3_column_int64(a1, v3);
  }
}

uint64_t sub_24F8984B8(sqlite3_stmt *a1)
{
  int v3 = *(_DWORD *)(v1 + 28);
  if (sqlite3_column_type(a1, v3) == 5) {
    return 2;
  }
  else {
    return sqlite3_column_int64(a1, v3) != 0;
  }
}

uint64_t sub_24F898508@<X0>(uint64_t a1@<X8>)
{
  return sub_24F898988(a1);
}

uint64_t sub_24F898534(uint64_t a1, uint64_t a2)
{
  return sub_24F770A08(a1, a2);
}

BOOL StatementArguments.isEmpty.getter()
{
  return !*(void *)(*v0 + 16) && *(void *)(v0[1] + 16) == 0;
}

Swift::Int_optional __swiftcall Statement.index(ofColumn:)(Swift::String ofColumn)
{
  uint64_t v1 = sub_24F8CED00();
  uint64_t v3 = v2;
  uint64_t v4 = sub_24F898D74();
  uint64_t v5 = sub_24F77B7A4(v1, v3, v4);
  char v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::Bool v8 = v7 & 1;
  Swift::Int v9 = v5;
  result.value = v9;
  result.is_nil = v8;
  return result;
}

uint64_t StatementArguments.init<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X7>, uint64_t *a4@<X8>)
{
  uint64_t v5 = sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F89AA64, 0, a1, (uint64_t)&type metadata for DatabaseValue, MEMORY[0x263F8E628], a2, MEMORY[0x263F8E658], a3);
  sub_24F773974();
  sub_24F7739F4();
  uint64_t result = v6();
  uint64_t v8 = MEMORY[0x263F8EE80];
  *a4 = v5;
  a4[1] = v8;
  return result;
}

uint64_t StatementArguments.init<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = sub_24F83E5E4((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_24F81AFD4, (uint64_t)&v10, v11, (uint64_t)&type metadata for DatabaseValue, MEMORY[0x263F8E628], v12, MEMORY[0x263F8E658], v5);
  swift_release();
  sub_24F773974();
  sub_24F7739F4();
  uint64_t result = v7();
  uint64_t v9 = MEMORY[0x263F8EE80];
  *a4 = v6;
  a4[1] = v9;
  return result;
}

uint64_t Statement.columnCount.getter()
{
  return sqlite3_column_count(*(sqlite3_stmt **)(v0 + 16));
}

uint64_t sub_24F8987B8(uint64_t *a1)
{
  uint64_t v4 = *a1;
  type metadata accessor for StatementCursor();
  uint64_t v2 = swift_allocObject();
  swift_retain();
  sub_24F777E70(v4);
  sub_24F89A834(v1, &v4);
  return v2;
}

double sub_24F898838@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for RowDecoder();
  swift_initStackObject();
  uint64_t v2 = swift_retain();
  sub_24F7FA288(v2, &v7);
  swift_release();
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  *(_OWORD *)a1 = v7;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  double result = *(double *)&v10;
  long long v6 = v11;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_24F8988D8@<X0>(uint64_t a1@<X8>)
{
  return sub_24F898988(a1);
}

uint64_t sub_24F898904@<X0>(uint64_t a1@<X8>)
{
  return sub_24F898988(a1);
}

uint64_t sub_24F898930(uint64_t a1, uint64_t a2)
{
  return sub_24F770A08(a1, a2);
}

uint64_t sub_24F89895C@<X0>(uint64_t a1@<X8>)
{
  return sub_24F898988(a1);
}

uint64_t sub_24F898988@<X0>(uint64_t a1@<X8>)
{
  sub_24F773850();
  uint64_t v3 = v2;
  uint64_t WitnessTable = swift_getWitnessTable();
  return DatabaseCursor.next()(v3, WitnessTable, a1);
}

uint64_t sub_24F8989DC(uint64_t a1, uint64_t a2)
{
  return sub_24F770A08(a1, a2);
}

uint64_t sub_24F898A08()
{
  uint64_t v0 = sub_24F8CE660();
  sub_24F77AD10();
  uint64_t v2 = v1;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  sub_24F79F440(v7, qword_26B1FAB00);
  sub_24F79F3A0(v0, (uint64_t)qword_26B1FAB00);
  sub_24F8CE610();
  sub_24F8CE640();
  sub_24F8CE650();
  long long v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v6, v0);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v0);
}

uint64_t Statement.sqliteStatement.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_24F898B24()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return Statement.columnNames.setter(v0);
}

uint64_t Statement.columnNames.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

void sub_24F898B60(uint64_t a1)
{
  uint64_t v1 = *(sqlite3_stmt **)(a1 + 16);
  int v2 = sqlite3_column_count(v1);
  if ((v2 & 0x80000000) == 0)
  {
    uint64_t v3 = v2;
    if (!v2) {
      return;
    }
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v4 = 0;
    while (v3 != v4)
    {
      if (!sqlite3_column_name(v1, v4)) {
        goto LABEL_12;
      }
      uint64_t v5 = sub_24F8CEED0();
      uint64_t v7 = v6;
      unint64_t v8 = *(void *)(v10 + 16);
      if (v8 >= *(void *)(v10 + 24) >> 1) {
        sub_24F77C4AC();
      }
      ++v4;
      *(void *)(v10 + 16) = v8 + 1;
      uint64_t v9 = v10 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v7;
      if (v3 == v4) {
        return;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t (*Statement.columnNames.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = Statement.columnNames.getter();
  return sub_24F898CA8;
}

uint64_t sub_24F898CA8(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return Statement.columnNames.setter(*a1);
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  Statement.columnNames.setter(v2);
  return swift_bridgeObjectRelease();
}

uint64_t Statement.databaseRegion.getter@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

BOOL Statement.isReadonly.getter()
{
  return sqlite3_stmt_readonly(*(sqlite3_stmt **)(v0 + 16)) != 0;
}

uint64_t Statement.database.getter()
{
  return swift_unownedRetainStrong();
}

uint64_t sub_24F898D74()
{
  if (*(void *)(v0 + 88))
  {
    uint64_t v1 = *(void *)(v0 + 88);
  }
  else
  {
    uint64_t v1 = sub_24F898DD4();
    *(void *)(v0 + 88) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24F898DD4()
{
  uint64_t v0 = Statement.columnNames.getter();
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_24F77C468();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = v0 + 40;
    do
    {
      uint64_t v4 = sub_24F8CED00();
      uint64_t v6 = v5;
      unint64_t v7 = *(void *)(v10 + 16);
      if (v7 >= *(void *)(v10 + 24) >> 1) {
        sub_24F77C468();
      }
      v3 += 16;
      *(void *)(v10 + 16) = v7 + 1;
      unint64_t v8 = (void *)(v10 + 24 * v7);
      v8[5] = v6;
      v8[6] = v2;
      void v8[4] = v4;
      ++v2;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return sub_24F7836EC(v10);
}

double sub_24F898EEC@<D0>(_OWORD *a1@<X8>)
{
  Statement.arguments.getter(&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_24F898F28(void *a1)
{
  uint64_t v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return Statement.arguments.setter(v4, v2);
}

uint64_t Statement.arguments.setter(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  v6[0] = *a1;
  v6[1] = v2;
  long long v3 = v6;
  Statement.setArguments(_:)(*(GRDBInternal::StatementArguments *)(&a2 - 1));
  if (v4)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*Statement.arguments.modify(void *a1))(uint64_t *a1, uint64_t a2)
{
  a1[2] = v1;
  Statement.arguments.getter(a1);
  return sub_24F899038;
}

uint64_t sub_24F899038(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  if (a2)
  {
    uint64_t v5 = *a1;
    uint64_t v6 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Statement.arguments.setter(&v5, v3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *a1;
    uint64_t v6 = v2;
    return Statement.arguments.setter(&v5, a2);
  }
}

uint64_t sub_24F8990C8(uint64_t a1)
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t v3 = swift_unownedRetainStrong();
  if (sub_24F78346C(v3))
  {
    swift_release();
    uint64_t v4 = *(sqlite3_stmt **)(a1 + 16);
    if (!sqlite3_stmt_busy(v4))
    {
      swift_unownedRetainStrong();
      uint64_t v7 = sub_24F77F1E4();
      Database.statementWillExecute(_:)(v7);
      if (v1)
      {
LABEL_12:
        swift_release();
        return swift_release();
      }
      swift_release();
    }
    if (sqlite3_step(v4) == 101) {
      goto LABEL_9;
    }
    sub_24F78596C();
    if (!v5) {
      goto LABEL_10;
    }
    do
    {
      sub_24F898838((uint64_t)v9);
      v10[0] = v9[0];
      v10[1] = v9[1];
      void v10[2] = v9[2];
      void v10[3] = v9[3];
      sub_24F810894((uint64_t)v10);
      sub_24F8B6950();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F8108EC((uint64_t)v10);
    }
    while (sqlite3_step(v4) == 100);
    sub_24F783230();
    if (v5)
    {
LABEL_9:
      swift_unownedRetainStrong();
      uint64_t v6 = sub_24F77F1E4();
      Database.statementDidExecute(_:)(v6);
    }
    else
    {
LABEL_10:
      swift_unownedRetainStrong();
      Database.statementDidFail(_:withResultCode:)(a1, v1);
    }
    goto LABEL_12;
  }
  swift_release();
  sub_24F7816B8();
  sub_24F770EAC();
  uint64_t result = sub_24F77F958();
  __break(1u);
  return result;
}

uint64_t sub_24F899290(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v14;
  int v15;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  uint64_t v5 = v4;
  type metadata accessor for SchedulingWatchdog();
  uint64_t v9 = *(void *)(a1 + 80);
  swift_unownedRetainStrong();
  swift_retain();
  if ((sub_24F78346C(v9) & 1) == 0)
  {
    swift_release_n();
    swift_release();
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  swift_release();
  uint64_t v10 = *(sqlite3_stmt **)(a1 + 16);
  if (!sqlite3_stmt_busy(v10))
  {
    swift_unownedRetainStrong();
    Database.statementWillExecute(_:)(a1);
    if (v4) {
      goto LABEL_17;
    }
    swift_release();
  }
  int v11 = sqlite3_step(v10);
  if (v11 == 100)
  {
    do
    {
      uint64_t v19 = *(void *)(a2 + 32);
      uint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(a3 + 24);
      swift_retain();
      swift_retain();
      v13(&v18, &v19);
      if (v4)
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_release_n();
      }
      uint64_t v14 = swift_retain();
      MEMORY[0x2533638D0](v14);
      if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24F8CF0F0();
      }
      sub_24F8CF140();
      sub_24F8CF0B0();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v15 = sqlite3_step(v10);
    }
    while (v15 == 100);
    int v12 = v15;
    if (v15 != 101) {
      goto LABEL_16;
    }
LABEL_13:
    swift_unownedRetainStrong();
    Database.statementDidExecute(_:)(a1);
    if (!v5)
    {
      swift_release_n();
      swift_release();
      return swift_release();
    }
    goto LABEL_17;
  }
  int v12 = v11;
  if (v11 == 101) {
    goto LABEL_13;
  }
LABEL_16:
  swift_unownedRetainStrong();
  Database.statementDidFail(_:withResultCode:)(a1, v12);
LABEL_17:
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24F899558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v11)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  uint64_t v4 = v3;
  type metadata accessor for SchedulingWatchdog();
  uint64_t v7 = *(void *)(a1 + 80);
  swift_unownedRetainStrong();
  swift_retain();
  if ((sub_24F78346C(v7) & 1) == 0)
  {
    swift_release_n();
    swift_release();
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  swift_release();
  unint64_t v8 = *(sqlite3_stmt **)(a1 + 16);
  if (!sqlite3_stmt_busy(v8))
  {
    swift_unownedRetainStrong();
    Database.statementWillExecute(_:)(a1);
    if (v3) {
      goto LABEL_18;
    }
    swift_release();
  }
  int v9 = sqlite3_step(v8);
  if (v9 == 100)
  {
    uint64_t v22 = a1;
    do
    {
      uint64_t v26 = *(void *)(a2 + 32);
      int v11 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(a3 + 24);
      swift_retain();
      swift_retain();
      v11(&v25, &v26);
      if (v3)
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_release_n();
      }
      int v12 = v25;
      swift_retain();
      sub_24F8B7840((uint64_t)&v24, v12, v13, v14, v15, v16, v17, v18, v21);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v19 = sqlite3_step(v8);
    }
    while (v19 == 100);
    int v10 = v19;
    if (v19 == 101)
    {
      a1 = v22;
      goto LABEL_13;
    }
    a1 = v22;
  }
  else
  {
    int v10 = v9;
    if (v9 == 101)
    {
LABEL_13:
      swift_unownedRetainStrong();
      Database.statementDidExecute(_:)(a1);
      if (!v4)
      {
        swift_release_n();
        swift_release();
        return swift_release();
      }
      goto LABEL_18;
    }
  }
  swift_unownedRetainStrong();
  Database.statementDidFail(_:withResultCode:)(a1, v10);
LABEL_18:
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24F8997EC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t v9 = swift_unownedRetainStrong();
  if ((sub_24F78346C(v9) & 1) == 0)
  {
    swift_release();
    sub_24F8CF9D0();
    __break(1u);
    goto LABEL_6;
  }
  swift_release();
  uint64_t v5 = *(sqlite3_stmt **)(a1 + 16);
  if (sqlite3_stmt_busy(v5)) {
    goto LABEL_7;
  }
  swift_unownedRetainStrong();
  Database.statementWillExecute(_:)(a1);
  if (!v4)
  {
LABEL_6:
    while (1)
    {
      swift_release();
LABEL_7:
      int v10 = sqlite3_step(v5);
      if (v10 != 100) {
        break;
      }
      uint64_t v13 = *(void *)(a4 + 32);
      swift_retain();
      a2(&v13);
      if (v4) {
        goto LABEL_13;
      }
    }
    int v11 = v10;
    if (v10 == 101)
    {
      swift_unownedRetainStrong();
      Database.statementDidExecute(_:)(a1);
    }
    else
    {
      swift_unownedRetainStrong();
      Database.statementDidFail(_:withResultCode:)(a1, v11);
    }
  }
LABEL_13:
  swift_release();
  return swift_release();
}

uint64_t sub_24F8999A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  type metadata accessor for SchedulingWatchdog();
  uint64_t v6 = swift_unownedRetainStrong();
  if (sub_24F78346C(v6))
  {
    swift_release();
    uint64_t v7 = *(sqlite3_stmt **)(a1 + 16);
    if (!sqlite3_stmt_busy(v7))
    {
      swift_unownedRetainStrong();
      Database.statementWillExecute(_:)(a1);
      if (v3) {
        goto LABEL_20;
      }
      swift_release();
    }
    if (sqlite3_step(v7) == 100)
    {
      uint64_t v31 = a1;
      uint64_t v32 = v7;
      do
      {
        swift_retain();
        LODWORD(v3) = v4;
        sub_24F77B274();
        if (v4)
        {
          swift_unexpectedError();
          __break(1u);
          goto LABEL_22;
        }
        uint64_t v10 = v9;
        sub_24F767950();
        uint64_t v12 = v11;
        sub_24F767950();
        uint64_t v14 = v13;
        uint64_t v36 = v15;
        uint64_t v37 = v10;
        sub_24F77B168();
        char v17 = v16;
        uint64_t v18 = sub_24F7F76FC(0x6C61765F746C6664);
        uint64_t v20 = v19;
        sub_24F77B274();
        uint64_t v22 = v21;
        char v35 = sub_24F7F77D0(0x6E6564646968);
        char v34 = v23;
        swift_release();
        uint64_t v24 = *a3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a3 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24F780BC8();
          sub_24F787A30();
          uint64_t v24 = v28;
          *a3 = v28;
        }
        unint64_t v26 = *(void *)(v24 + 16);
        if (v26 >= *(void *)(v24 + 24) >> 1)
        {
          sub_24F787A30();
          uint64_t v24 = v29;
          *a3 = v29;
        }
        *(void *)(v24 + 16) = v26 + 1;
        uint64_t v27 = v24 + 88 * v26;
        *(void *)(v27 + 32) = v37;
        *(void *)(v27 + 40) = v35;
        *(unsigned char *)(v27 + 48) = v34 & 1;
        *(void *)(v27 + 56) = 0;
        *(void *)(v27 + 64) = v12;
        *(void *)(v27 + 72) = v36;
        *(void *)(v27 + 80) = v14;
        *(unsigned char *)(v27 + 88) = v17 & 1;
        *(void *)(v27 + 96) = v18;
        *(void *)(v27 + 104) = v20;
        *(void *)(v27 + 112) = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = 0;
      }
      while (sqlite3_step(v32) == 100);
      sub_24F783230();
      if (!v8)
      {
        a1 = v31;
        goto LABEL_19;
      }
      a1 = v31;
    }
    else
    {
      sub_24F783230();
      if (!v8)
      {
LABEL_19:
        swift_unownedRetainStrong();
        Database.statementDidFail(_:withResultCode:)(a1, v3);
        goto LABEL_20;
      }
    }
    swift_unownedRetainStrong();
    Database.statementDidExecute(_:)(a1);
LABEL_20:
    swift_release();
    return swift_release();
  }
LABEL_22:
  swift_release();
  sub_24F7816B8();
  sub_24F770EAC();
  uint64_t result = sub_24F77F958();
  __break(1u);
  return result;
}

uint64_t sub_24F899D40()
{
  sub_24F773764();
  uint64_t v3 = swift_unownedRetainStrong();
  if (sub_24F78346C(v3))
  {
    swift_release();
    uint64_t v4 = *(sqlite3_stmt **)(v1 + 16);
    if (!sqlite3_stmt_busy(v4))
    {
      swift_unownedRetainStrong();
      Database.statementWillExecute(_:)(v1);
      if (v0)
      {
LABEL_18:
        swift_release();
        return swift_release();
      }
      swift_release();
    }
    if (sqlite3_step(v4) == 101) {
      goto LABEL_16;
    }
    sub_24F78596C();
    if (!v14) {
      goto LABEL_17;
    }
    do
    {
      uint64_t v5 = sub_24F8980A0(v4);
      uint64_t v7 = v6;
      uint64_t v8 = *v2;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v2 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24F780BC8();
        sub_24F787184();
        uint64_t v8 = v12;
        *uint64_t v2 = v12;
      }
      unint64_t v10 = *(void *)(v8 + 16);
      if (v10 >= *(void *)(v8 + 24) >> 1)
      {
        sub_24F787184();
        uint64_t v8 = v13;
        *uint64_t v2 = v13;
      }
      *(void *)(v8 + 16) = v10 + 1;
      uint64_t v11 = v8 + 16 * v10;
      *(void *)(v11 + 32) = v5;
      *(void *)(v11 + 40) = v7;
      swift_bridgeObjectRelease();
    }
    while (sqlite3_step(v4) == 100);
    sub_24F783230();
    if (v14)
    {
LABEL_16:
      swift_unownedRetainStrong();
      Database.statementDidExecute(_:)(v1);
    }
    else
    {
LABEL_17:
      swift_unownedRetainStrong();
      sub_24F771EAC();
    }
    goto LABEL_18;
  }
  swift_release();
  sub_24F7816B8();
  sub_24F770EAC();
  uint64_t result = sub_24F77F958();
  __break(1u);
  return result;
}

uint64_t sub_24F899F34()
{
  sub_24F773764();
  uint64_t v2 = swift_unownedRetainStrong();
  if (sub_24F78346C(v2))
  {
    swift_release();
    uint64_t v3 = *(sqlite3_stmt **)(v1 + 16);
    if (!sqlite3_stmt_busy(v3))
    {
      swift_unownedRetainStrong();
      Database.statementWillExecute(_:)(v1);
      if (v0)
      {
LABEL_12:
        swift_release();
        return swift_release();
      }
      swift_release();
    }
    if (sqlite3_step(v3) == 101) {
      goto LABEL_9;
    }
    sub_24F78596C();
    if (!v4) {
      goto LABEL_10;
    }
    do
    {
      sub_24F8980A0(v3);
      swift_bridgeObjectRetain();
      sub_24F8B6490();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (sqlite3_step(v3) == 100);
    sub_24F783230();
    if (v4)
    {
LABEL_9:
      swift_unownedRetainStrong();
      Database.statementDidExecute(_:)(v1);
    }
    else
    {
LABEL_10:
      swift_unownedRetainStrong();
      sub_24F771EAC();
    }
    goto LABEL_12;
  }
  swift_release();
  sub_24F7816B8();
  sub_24F770EAC();
  uint64_t result = sub_24F77F958();
  __break(1u);
  return result;
}

uint64_t sub_24F89A0B8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  type metadata accessor for SchedulingWatchdog();
  uint64_t v6 = swift_unownedRetainStrong();
  if (sub_24F78346C(v6))
  {
    swift_release();
    uint64_t v7 = *(sqlite3_stmt **)(a1 + 16);
    if (!sqlite3_stmt_busy(v7))
    {
      swift_unownedRetainStrong();
      Database.statementWillExecute(_:)(a1);
      if (v2) {
        goto LABEL_12;
      }
      swift_release();
    }
    int v8 = sqlite3_step(v7);
    if (v8 == 101)
    {
LABEL_8:
      swift_unownedRetainStrong();
      Database.statementDidExecute(_:)(a1);
    }
    else
    {
      int v9 = v8;
      if (v8 == 100)
      {
        while (1)
        {
          a2();
          if (v3) {
            return swift_release();
          }
          int v10 = sqlite3_step(v7);
          if (v10 != 100)
          {
            int v9 = v10;
            if (v10 != 101) {
              break;
            }
            goto LABEL_8;
          }
        }
      }
      swift_unownedRetainStrong();
      Database.statementDidFail(_:withResultCode:)(a1, v9);
    }
LABEL_12:
    swift_release();
    return swift_release();
  }
  swift_release();
  uint64_t result = sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F89A268(uint64_t a1)
{
  if (!sub_24F77E41C(a1))
  {
    sub_24F77EBD4();
    sub_24F77B70C();
    uint64_t v1 = v2;
    if (v2) {
      goto LABEL_11;
    }
    swift_release();
  }
  if (sqlite3_step(v3) == 100)
  {
    uint64_t v6 = (sqlite3_stmt *)sub_24F77F1E4();
    sub_24F89C22C(v6, v7);
    if (!v2)
    {
      swift_release();
      return v8;
    }
    return swift_release();
  }
  sub_24F783230();
  if (!v4)
  {
    sub_24F77EBD4();
    sub_24F77B0D0();
LABEL_11:
    swift_release();
    return swift_release();
  }
  sub_24F77EBD4();
  sub_24F775DFC();
  sub_24F7809D4();
  uint64_t result = swift_release();
  if (!v1) {
    return 0;
  }
  return result;
}

uint64_t sub_24F89A344(uint64_t a1)
{
  if (!sub_24F77E41C(a1))
  {
    sub_24F77EBD4();
    sub_24F77B70C();
    uint64_t v1 = v2;
    if (v2) {
      goto LABEL_11;
    }
    swift_release();
  }
  if (sqlite3_step(v3) == 100)
  {
    uint64_t v6 = sub_24F77F1E4();
    nullsub_1(v6);
    if (!v2)
    {
      swift_release();
      return 0;
    }
    return swift_release();
  }
  sub_24F783230();
  if (!v4)
  {
    sub_24F77EBD4();
    sub_24F77B0D0();
LABEL_11:
    swift_release();
    return swift_release();
  }
  sub_24F77EBD4();
  sub_24F775DFC();
  sub_24F7809D4();
  uint64_t result = swift_release();
  if (!v1) {
    return 1;
  }
  return result;
}

uint64_t sub_24F89A414(uint64_t a1)
{
  if (!sub_24F77E41C(a1))
  {
    sub_24F77EBD4();
    sub_24F77B70C();
    uint64_t v1 = v2;
    if (v2) {
      goto LABEL_11;
    }
    swift_release();
  }
  if (sqlite3_step(v3) == 100)
  {
    uint64_t v6 = (sqlite3_stmt *)sub_24F77F1E4();
    sub_24F89C264(v6, v7);
    if (!v2)
    {
      swift_release();
      return v8;
    }
    return swift_release();
  }
  sub_24F783230();
  if (!v4)
  {
    sub_24F77EBD4();
    sub_24F77B0D0();
LABEL_11:
    swift_release();
    return swift_release();
  }
  sub_24F77EBD4();
  sub_24F775DFC();
  sub_24F7809D4();
  uint64_t result = swift_release();
  if (!v1) {
    return 0;
  }
  return result;
}

uint64_t sub_24F89A500(uint64_t a1)
{
  if (!sub_24F77E41C(a1))
  {
    sub_24F77EBD4();
    sub_24F77B70C();
    uint64_t v1 = v2;
    if (v2) {
      goto LABEL_11;
    }
    swift_release();
  }
  if (sqlite3_step(v3) == 100)
  {
    uint64_t v6 = (sqlite3_stmt *)sub_24F77F1E4();
    sub_24F89C248(v6, v7);
    if (!v2)
    {
      swift_release();
      return v8;
    }
    return swift_release();
  }
  sub_24F783230();
  if (!v4)
  {
    sub_24F77EBD4();
    sub_24F77B0D0();
LABEL_11:
    swift_release();
    return swift_release();
  }
  sub_24F77EBD4();
  sub_24F775DFC();
  sub_24F7809D4();
  uint64_t result = swift_release();
  if (!v1) {
    return 3;
  }
  return result;
}

uint64_t sub_24F89A5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(sqlite3_stmt **)(a1 + 16);
  if (!sqlite3_stmt_busy(v5))
  {
    sub_24F77749C();
    Database.statementWillExecute(_:)(a1);
    if (v2) {
      goto LABEL_10;
    }
    swift_release();
  }
  if (sqlite3_step(v5) == 100)
  {
    sub_24F89C280(a2);
    return swift_release();
  }
  sub_24F783230();
  if (!v6)
  {
    sub_24F77749C();
    Database.statementDidFail(_:withResultCode:)(a1, v2);
LABEL_10:
    swift_release();
    return swift_release();
  }
  sub_24F77749C();
  Database.statementDidExecute(_:)(a1);
  sub_24F7809D4();
  uint64_t result = swift_release();
  if (!v2)
  {
    *(void *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t Statement.description.getter()
{
  type metadata accessor for SchedulingWatchdog();
  uint64_t v0 = swift_unownedRetainStrong();
  char v1 = sub_24F78346C(v0);
  swift_release();
  if (v1) {
    return Statement.sql.getter();
  }
  else {
    return 0x6E656D6574617453;
  }
}

uint64_t sub_24F89A750()
{
  return Statement.description.getter();
}

const unsigned __int8 *sub_24F89A774(sqlite3_stmt *a1)
{
  return sub_24F898404(a1);
}

sqlite3_int64 sub_24F89A7A0(sqlite3_stmt *a1)
{
  return sub_24F89845C(a1);
}

uint64_t sub_24F89A7D0(sqlite3_stmt *a1)
{
  return sub_24F8984B8(a1);
}

uint64_t sub_24F89A7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = swift_retain();
  return ForeignKeyViolation.init(row:)(v2, a1);
}

uint64_t sub_24F89A834(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = a1;
  uint64_t v7 = v4;
  swift_retain();
  sub_24F77C958(&v7, v5);
  if (v3) {
    swift_release();
  }
  swift_release();
  sub_24F77835C(v4);
  return v2;
}

uint64_t sub_24F89A8B8()
{
  _s12GRDBInternal23FastDatabaseValueCursorCfd_0();
  return MEMORY[0x270FA0228](v0, 25, 7);
}

uint64_t sub_24F89A8EC()
{
  return swift_retain();
}

uint64_t sub_24F89A8F4()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_24F89A928(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_24F89A968())()
{
  return j__swift_endAccess;
}

uint64_t sub_24F89A9BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F8AAD90();
  if (!v1) {
    *a1 = result & 1;
  }
  return result;
}

uint64_t sub_24F89A9EC(void (*a1)(void))
{
  return sub_24F898360(a1);
}

uint64_t sub_24F89AA04()
{
  int v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 == 1 || v1 == 2) {
    return 1;
  }
  if (v1 == 3)
  {
    uint64_t v2 = *(void *)(v0 + 48);
    uint64_t v3 = *(void *)(v0 + 56);
    if (!(v2 ^ 1 | v3) || !(v2 ^ 2 | v3))
    {
      sub_24F776ACC(v2, v3, 3u);
      return 1;
    }
  }
  return 0;
}

uint64_t sub_24F89AA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24F781214(a1, (uint64_t)v11, &qword_26B1F7AC0);
  uint64_t v3 = v12;
  if (v12)
  {
    uint64_t v4 = v13;
    sub_24F7811D0(v11, v12);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 24))(&v9, v3, v4);
    long long v8 = v9;
    char v5 = v10;
    uint64_t result = _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v11);
    long long v7 = v8;
  }
  else
  {
    uint64_t result = sub_24F7817A4((uint64_t)v11);
    long long v7 = 0uLL;
    char v5 = 4;
  }
  *(_OWORD *)a2 = v7;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

double sub_24F89AB24@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void (*v5)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  char v7;
  double result;
  long long v9;
  char v10;

  uint64_t v4 = *(void *)(a2 + a1 - 8);
  char v5 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5(&v9, AssociatedTypeWitness, v4);
  long long v7 = v10;
  uint64_t result = *(double *)&v9;
  *(_OWORD *)a3 = v9;
  *(unsigned char *)(a3 + 16) = v7;
  return result;
}

GRDBInternal::StatementArguments_optional __swiftcall StatementArguments.init(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *((void *)a1._rawValue + 2);
  if (v3)
  {
    char v16 = v1;
    uint64_t v4 = (char *)a1._rawValue + 32;
    uint64_t v5 = MEMORY[0x263F8EE78];
    while (1)
    {
      sub_24F79AA14((uint64_t)v4, (uint64_t)v25);
      sub_24F79AA14((uint64_t)v25, (uint64_t)v20);
      sub_24F781274(&qword_26B1F7250);
      if ((swift_dynamicCast() & 1) == 0) {
        break;
      }
      sub_24F794DE0(&v17, (uint64_t)&v21);
      char v6 = v23;
      long long v7 = v24;
      sub_24F7811D0(&v21, (uint64_t)v23);
      ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v7[3])(&v17, v6, v7);
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v25);
      long long v8 = v17;
      char v9 = v18;
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v21);
      char v23 = &type metadata for DatabaseValue;
      uint64_t v24 = &protocol witness table for DatabaseValue;
      long long v21 = v8;
      char v22 = v9;
      sub_24F781F34(v8, *((unint64_t *)&v8 + 1), v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F780BC8();
        sub_24F788690();
        uint64_t v5 = v11;
      }
      unint64_t v10 = *(void *)(v5 + 16);
      if (v10 >= *(void *)(v5 + 24) >> 1)
      {
        sub_24F788690();
        uint64_t v5 = v12;
      }
      *(void *)(v5 + 16) = v10 + 1;
      sub_24F89BF64((uint64_t)&v21, v5 + 40 * v10 + 32, &qword_26B1F7AC0);
      sub_24F781F10(v8, *((unint64_t *)&v8 + 1), v9);
      v4 += 32;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v16;
        goto LABEL_12;
      }
    }
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v25);
    sub_24F7817A4((uint64_t)&v17);
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)swift_bridgeObjectRelease();
    *(void *)char v16 = 0;
    *((void *)v16 + 1) = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_12:
    sub_24F780F38(v5, &v21);
    *uint64_t v2 = v21;
  }
  result.value.namedValues._rawValue = v14;
  result.value.values._rawValue = v13;
  return result;
}

{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  uint64_t v17;
  long long v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  GRDBInternal::StatementArguments_optional result;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  int64_t v56;
  char *v57;
  void *rawValue;
  uint64_t v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  long long v64;
  long long v65;
  uint64_t v66;
  char v67[32];
  void v68[4];
  _OWORD v69[2];
  long long v70;
  long long v71;
  _OWORD v72[2];
  uint64_t v73;
  long long v74;
  long long v75;
  uint64_t v76;

  uint64_t v54 = v1;
  rawValue = a1._rawValue;
  sub_24F77DB00();
  uint64_t v4 = v3 & v2;
  uint64_t v57 = (char *)v72 + 8;
  id v60 = (_OWORD *)(v6 + 40);
  int v61 = 0;
  unsigned __int8 v55 = v7;
  uint64_t v56 = (unint64_t)(v5 + 63) >> 6;
  long long v53 = v56 - 1;
  long long v8 = MEMORY[0x263F8EE80];
  uint64_t v59 = MEMORY[0x263F8EE58] + 8;
  if ((v3 & v2) == 0) {
    goto LABEL_4;
  }
LABEL_2:
  char v9 = __clz(__rbit64(v4));
  unint64_t v10 = (v4 - 1) & v4;
  uint64_t v11 = v9 | (v61 << 6);
LABEL_3:
  sub_24F89BF08(rawValue[6] + 40 * v11, (uint64_t)&v70);
  sub_24F79AA14(rawValue[7] + 32 * v11, (uint64_t)v57);
  while (1)
  {
    sub_24F89BF64((uint64_t)&v70, (uint64_t)&v74, &qword_269A2C418);
    if (!*((void *)&v75 + 1))
    {
      swift_release();
      char v49 = sub_24F89BC4C(v8);
      uint64_t v50 = (void *)swift_bridgeObjectRelease();
      *uint64_t v54 = MEMORY[0x263F8EE78];
      v54[1] = v49;
      goto LABEL_43;
    }
    sub_24F7DCBA0(v60, v69);
    uint64_t v70 = v74;
    uint64_t v71 = v75;
    *(void *)&v72[0] = v76;
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_37;
    }
    uint64_t v15 = v64;
    sub_24F79AA14((uint64_t)v69, (uint64_t)v68);
    sub_24F79AA14((uint64_t)v68, (uint64_t)v67);
    sub_24F781274(&qword_26B1F7250);
    if ((swift_dynamicCast() & 1) == 0)
    {
      int v66 = 0;
      id v64 = 0u;
      uint64_t v65 = 0u;
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v68);
      sub_24F7817A4((uint64_t)&v64);
      swift_bridgeObjectRelease();
LABEL_37:
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v69);
      swift_bridgeObjectRelease();
      uint64_t v50 = (void *)swift_release();
      *uint64_t v54 = 0;
      v54[1] = 0;
      goto LABEL_43;
    }
    int v62 = v10;
    sub_24F794DE0(&v64, (uint64_t)&v70);
    char v16 = *((void *)&v71 + 1);
    long long v17 = *(void *)&v72[0];
    sub_24F7811D0(&v70, *((uint64_t *)&v71 + 1));
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v17 + 24))(&v64, v16, v17);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v68);
    long long v18 = v64;
    uint64_t v19 = v65;
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v70);
    *((void *)&v71 + 1) = &type metadata for DatabaseValue;
    *(void *)&v72[0] = &protocol witness table for DatabaseValue;
    uint64_t v70 = v18;
    LOBYTE(v71) = v19;
    sub_24F89BF64((uint64_t)&v70, (uint64_t)&v64, &qword_26B1F7AC0);
    sub_24F781F34(v18, *((unint64_t *)&v18 + 1), v19);
    swift_isUniquelyReferenced_nonNull_native();
    v68[0] = v8;
    sub_24F782950();
    sub_24F7824F8();
    if (__OFADD__(v22, v23)) {
      break;
    }
    uint64_t v24 = v20;
    uint64_t v25 = v21;
    sub_24F781274(&qword_26B1F7278);
    unint64_t v26 = sub_24F8CF980();
    if (v26)
    {
      unint64_t v26 = sub_24F782950();
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_42;
      }
      uint64_t v24 = v26;
    }
    long long v8 = v68[0];
    if (v25)
    {
      char v34 = sub_24F89C2D4(v26, v27, v28, v29, v30, v31, v32, v33, v53, (uint64_t)v54, v55, v56, (uint64_t)v57, (uint64_t)rawValue, v59, (uint64_t)v60, v61, v62, v64);
      sub_24F7DCB38((uint64_t)v34, v35);
    }
    else
    {
      sub_24F77BA6C(v68[0] + 8 * (v24 >> 6));
      *(_OWORD *)(*(void *)(v8 + 48) + 16 * v24) = v15;
      uint64_t v44 = sub_24F89C2D4(v36, v37, v38, v39, v40, v41, v42, v43, v53, (uint64_t)v54, v55, v56, (uint64_t)v57, (uint64_t)rawValue, v59, (uint64_t)v60, v61, v62, v64);
      sub_24F89BF64((uint64_t)v44, v45, &qword_26B1F7AC0);
      int v46 = *(void *)(v8 + 16);
      int v47 = __OFADD__(v46, 1);
      unint64_t v48 = v46 + 1;
      if (v47) {
        goto LABEL_39;
      }
      *(void *)(v8 + 16) = v48;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F781F10(v18, *((unint64_t *)&v18 + 1), v19);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v69);
    uint64_t v4 = v63;
    if (v63) {
      goto LABEL_2;
    }
LABEL_4:
    uint64_t v12 = v61 + 1;
    if (__OFADD__(v61, 1)) {
      goto LABEL_40;
    }
    if (v12 < v56)
    {
      uint64_t v13 = *(void *)(v55 + 8 * v12);
      if (v13) {
        goto LABEL_7;
      }
      char v14 = v61 + 2;
      ++v61;
      if (v12 + 1 < v56)
      {
        uint64_t v13 = *(void *)(v55 + 8 * v14);
        if (v13) {
          goto LABEL_10;
        }
        int v61 = v12 + 1;
        if (v12 + 2 < v56)
        {
          uint64_t v13 = *(void *)(v55 + 8 * (v12 + 2));
          if (v13)
          {
            v12 += 2;
            goto LABEL_7;
          }
          char v14 = v12 + 3;
          int v61 = v12 + 2;
          if (v12 + 3 < v56)
          {
            uint64_t v13 = *(void *)(v55 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                uint64_t v12 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_41;
                }
                if (v12 >= v56)
                {
                  int v61 = v53;
                  goto LABEL_21;
                }
                uint64_t v13 = *(void *)(v55 + 8 * v12);
                ++v14;
                if (v13) {
                  goto LABEL_7;
                }
              }
            }
LABEL_10:
            uint64_t v12 = v14;
LABEL_7:
            unint64_t v10 = (v13 - 1) & v13;
            uint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
            int v61 = v12;
            goto LABEL_3;
          }
        }
      }
    }
LABEL_21:
    unint64_t v10 = 0;
    int v73 = 0;
    memset(v72, 0, sizeof(v72));
    uint64_t v70 = 0u;
    uint64_t v71 = 0u;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t v50 = (void *)sub_24F8CFEA0();
  __break(1u);
LABEL_43:
  result.value.namedValues._rawValue = v51;
  result.value.values._rawValue = v50;
  return result;
}

GRDBInternal::StatementArguments __swiftcall StatementArguments.init(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24F89BC4C((uint64_t)a1._rawValue);
  uint64_t v4 = (void *)swift_bridgeObjectRelease();
  *uint64_t v2 = MEMORY[0x263F8EE78];
  v2[1] = v3;
  result.namedValues._rawValue = v5;
  result.values._rawValue = v4;
  return result;
}

uint64_t sub_24F89AE38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)sub_24F8CEC60();
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v25 = a2;
    uint64_t v6 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24F781214(v6, (uint64_t)v33, &qword_26B1F5A58);
      uint64_t v7 = v33[0];
      uint64_t v8 = v33[1];
      sub_24F89BF64((uint64_t)&v34, (uint64_t)v30, &qword_26B1F7AC0);
      uint64_t v9 = v31;
      if (v31)
      {
        uint64_t v10 = v32;
        sub_24F7811D0(v30, v31);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 24))(v28, v9, v10);
        uint64_t v26 = v28[1];
        uint64_t v27 = v28[0];
        char v11 = v29;
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v30);
      }
      else
      {
        sub_24F7817A4((uint64_t)v30);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        char v11 = 4;
      }
      swift_isUniquelyReferenced_nonNull_native();
      v30[0] = v4;
      unint64_t v12 = sub_24F782950();
      if (__OFADD__(v4[2], (v13 & 1) == 0)) {
        break;
      }
      unint64_t v14 = v12;
      char v15 = v13;
      sub_24F781274(&qword_26B1F58F8);
      if (sub_24F8CF980())
      {
        unint64_t v16 = sub_24F782950();
        if ((v15 & 1) != (v17 & 1)) {
          goto LABEL_19;
        }
        unint64_t v14 = v16;
      }
      uint64_t v4 = (void *)v30[0];
      if (v15)
      {
        uint64_t v18 = *(void *)(v30[0] + 56) + 24 * v14;
        sub_24F781F10(*(void *)v18, *(void *)(v18 + 8), *(unsigned char *)(v18 + 16));
        *(void *)uint64_t v18 = v27;
        *(void *)(v18 + 8) = v26;
        *(unsigned char *)(v18 + 16) = v11;
      }
      else
      {
        *(void *)(v30[0] + 8 * (v14 >> 6) + 64) |= 1 << v14;
        uint64_t v19 = (void *)(v4[6] + 16 * v14);
        *uint64_t v19 = v7;
        v19[1] = v8;
        uint64_t v20 = v4[7] + 24 * v14;
        *(void *)uint64_t v20 = v27;
        *(void *)(v20 + 8) = v26;
        *(unsigned char *)(v20 + 16) = v11;
        uint64_t v21 = v4[2];
        BOOL v22 = __OFADD__(v21, 1);
        uint64_t v23 = v21 + 1;
        if (v22) {
          goto LABEL_18;
        }
        void v4[2] = v23;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 56;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        a2 = v25;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_24F8CFEA0();
    __break(1u);
  }
  else
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = MEMORY[0x263F8EE78];
    a2[1] = v4;
  }
  return result;
}

uint64_t StatementArguments.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v44 = a3;
  sub_24F77AD10();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24F77AD10();
  v43[1] = v11;
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)v43 - v13;
  sub_24F8CEFC0();
  char v15 = (void *)sub_24F8CEC60();
  v43[2] = v6;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v43[3] = a1;
  v16(v9, a1, a2);
  sub_24F8CEFB0();
  v43[4] = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  int v47 = v14;
  uint64_t v48 = AssociatedTypeWitness;
  uint64_t v46 = AssociatedConformanceWitness;
  sub_24F8CF660();
  uint64_t v18 = v55;
  if (v55)
  {
    uint64_t v45 = &v56;
    while (1)
    {
      uint64_t v19 = v54;
      sub_24F89BF64((uint64_t)v45, (uint64_t)v51, &qword_26B1F7AC0);
      uint64_t v20 = v52;
      if (v52)
      {
        uint64_t v21 = v53;
        sub_24F7811D0(v51, v52);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v21 + 24))(v49, v20, v21);
        uint64_t v22 = v49[0];
        uint64_t v23 = v49[1];
        char v24 = v50;
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v51);
      }
      else
      {
        sub_24F7817A4((uint64_t)v51);
        uint64_t v22 = 0;
        uint64_t v23 = 0;
        char v24 = 4;
      }
      swift_isUniquelyReferenced_nonNull_native();
      v51[0] = v15;
      sub_24F782950();
      sub_24F7824F8();
      if (__OFADD__(v27, v28)) {
        break;
      }
      unint64_t v29 = v25;
      char v30 = v26;
      sub_24F781274(&qword_26B1F58F8);
      if (sub_24F8CF980())
      {
        unint64_t v31 = sub_24F782950();
        if ((v30 & 1) != (v32 & 1)) {
          goto LABEL_18;
        }
        unint64_t v29 = v31;
      }
      char v15 = (void *)v51[0];
      if (v30)
      {
        uint64_t v33 = *(void *)(v51[0] + 56) + 24 * v29;
        sub_24F781F10(*(void *)v33, *(void *)(v33 + 8), *(unsigned char *)(v33 + 16));
        *(void *)uint64_t v33 = v22;
        *(void *)(v33 + 8) = v23;
        *(unsigned char *)(v33 + 16) = v24;
      }
      else
      {
        sub_24F77BA6C(v51[0] + 8 * (v29 >> 6));
        uint64_t v34 = (void *)(v15[6] + 16 * v29);
        *uint64_t v34 = v19;
        v34[1] = v18;
        uint64_t v35 = v15[7] + 24 * v29;
        *(void *)uint64_t v35 = v22;
        *(void *)(v35 + 8) = v23;
        *(unsigned char *)(v35 + 16) = v24;
        uint64_t v36 = v15[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37) {
          goto LABEL_17;
        }
        uint64_t v15[2] = v38;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F8CF660();
      uint64_t v18 = v55;
      if (!v55) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    uint64_t result = sub_24F8CFEA0();
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_24F7739F4();
    v39();
    sub_24F7739F4();
    uint64_t result = v40();
    uint64_t v42 = v44;
    *uint64_t v44 = MEMORY[0x263F8EE78];
    v42[1] = v15;
  }
  return result;
}

uint64_t static StatementArguments.+ infix(_:_:)@<X0>(void *a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a1[1];
  *a3 = *a1;
  a3[1] = v4;
  long long v6 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return static StatementArguments.+= infix(_:_:)((uint64_t)a3, &v6);
}

uint64_t static StatementArguments.&+ infix(_:_:)@<X0>(void *a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a1[1];
  *a3 = *a1;
  a3[1] = v3;
  long long v5 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  StatementArguments.append(contentsOf:)((uint64_t)&v5);
  return swift_bridgeObjectRelease();
}

uint64_t static StatementArguments.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((sub_24F7EC184(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = sub_24F76B8E8();
  return sub_24F820C08(v2, v3);
}

uint64_t StatementArguments.description.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_24F8979AC(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_24F897BEC(v1);
  swift_bridgeObjectRelease();
  sub_24F792AE8();
  sub_24F781274(&qword_26B1F7F48);
  sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  return 91;
}

double StatementArguments.init(dictionaryLiteral:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_24F89AE38(a1, &v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_24F89BBE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F774EA8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_24F89BC10(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_24F8982BC(a1, a2);
}

uint64_t sub_24F89BC2C()
{
  return 24;
}

__n128 sub_24F89BC38(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_24F89BC4C(uint64_t a1)
{
  void (*v24)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  void v36[2];
  char v37;
  void v38[3];
  uint64_t v39;
  uint64_t v40;
  unsigned char v41[40];
  unint64_t v42;

  sub_24F781274(qword_26B1F5A70);
  uint64_t result = sub_24F8CF9F0();
  int64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v35 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  char v32 = v6;
  uint64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v34 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    unint64_t v16 = (uint64_t *)(*(void *)(v35 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_24F781214(*(void *)(v35 + 56) + 40 * i, (uint64_t)v41, &qword_26B1F7AC0);
    sub_24F781214((uint64_t)v41, (uint64_t)v38, &qword_26B1F7AC0);
    uint64_t v19 = v39;
    if (v39)
    {
      uint64_t v20 = v40;
      sub_24F7811D0(v38, v39);
      uint64_t v42 = v10;
      uint64_t v21 = v17;
      uint64_t v22 = v3;
      int64_t v23 = v4;
      char v24 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 24);
      swift_bridgeObjectRetain();
      v24(v36, v19, v20);
      int64_t v4 = v23;
      int64_t v3 = v22;
      uint64_t v17 = v21;
      unint64_t v10 = v42;
      unint64_t v25 = v36[0];
      uint64_t v19 = v36[1];
      char v26 = v37;
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v38);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_24F7817A4((uint64_t)v38);
      unint64_t v25 = 0;
      char v26 = 4;
    }
    uint64_t result = sub_24F7817A4((uint64_t)v41);
    *(void *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v27 = (void *)(v3[6] + 16 * i);
    *uint64_t v27 = v17;
    v27[1] = v18;
    uint64_t v28 = v3[7] + 24 * i;
    *(void *)uint64_t v28 = v25;
    *(void *)(v28 + 8) = v19;
    *(unsigned char *)(v28 + 16) = v26;
    unint64_t v29 = v3[2];
    char v30 = __OFADD__(v29, 1);
    unint64_t v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    void v3[2] = v31;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_27;
    }
    if (v13 >= v33) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v33) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v32 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v33) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v32 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v33) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v33) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24F89BF08(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24F89BF64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_24F781274(a3);
  sub_24F773974();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_24F89BFC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Statement.columnNames.getter();
  *a1 = result;
  return result;
}

uint64_t method lookup function for Statement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Statement);
}

uint64_t dispatch thunk of _DatabaseCursor._isDone.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t type metadata accessor for StatementCursor()
{
  return self;
}

uint64_t dispatch thunk of StatementBinding.bind(to:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t destroy for Statement.TransactionEffect(uint64_t a1)
{
  return sub_24F7766C0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12GRDBInternal9StatementC17TransactionEffectOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24F776ACC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Statement.TransactionEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24F776ACC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24F7766C0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Statement.TransactionEffect(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24F7766C0(v4, v5, v6);
  return a1;
}

uint64_t sub_24F89C160(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_24F89C178(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Statement.TransactionEffect()
{
  return &type metadata for Statement.TransactionEffect;
}

const unsigned __int8 *sub_24F89C1A0@<X0>(sqlite3_stmt *a1@<X0>, const unsigned __int8 **a2@<X8>)
{
  uint64_t result = sub_24F89A774(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

sqlite3_int64 sub_24F89C1CC@<X0>(sqlite3_stmt *a1@<X0>, uint64_t a2@<X8>)
{
  sqlite3_int64 result = sub_24F89A7A0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_24F89C200@<X0>(sqlite3_stmt *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24F89A7D0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

const unsigned __int8 *sub_24F89C22C@<X0>(sqlite3_stmt *a1@<X0>, const unsigned __int8 **a2@<X8>)
{
  return sub_24F89C1A0(a1, a2);
}

uint64_t sub_24F89C248@<X0>(sqlite3_stmt *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_24F89C200(a1, a2);
}

sqlite3_int64 sub_24F89C264@<X0>(sqlite3_stmt *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F89C1CC(a1, a2);
}

uint64_t sub_24F89C280@<X0>(uint64_t a1@<X8>)
{
  return sub_24F89A7FC(a1);
}

uint64_t sub_24F89C29C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

char *sub_24F89C2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  return &a19;
}

uint64_t sub_24F89C2E8()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_24F89C308()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  return AssociationToMany.forKey(_:)(v0, v1);
}

uint64_t AssociationToMany.forKey(_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_24F85E9C4(sub_24F8A016C, a1, a2);
}

void sub_24F89C3BC()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.distinct()(v0, v1, v2);
}

void Association.distinct()(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X8>)
{
}

void sub_24F89C460()
{
  sub_24F77B0EC();
  swift_getWitnessTable();
  sub_24F78323C();
  Association.limit(_:offset:)(v0, v1, v2);
}

void Association.limit(_:offset:)(uint64_t a1@<X3>, uint64_t a2@<X4>, unint64_t a3@<X8>)
{
}

void sub_24F89C518()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  uint64_t v0 = (void *)sub_24F77F1F4();
  Association.with<A>(_:)(v0, v1, v2, v3);
}

void Association.with<A>(_:)(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unint64_t a4@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  sub_24F89F0A4((unint64_t)sub_24F8A019C, a2, a3, a4);
}

void sub_24F89C604()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.group(_:)(v0, v1, v2);
}

void Association.group(_:)(uint64_t a1@<X2>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
}

void sub_24F89C67C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.having(_:)(v0, v1, v2);
}

void Association.having(_:)(uint64_t a1@<X2>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
}

void sub_24F89C6F4()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.filter(_:)(v0, v1, v2);
}

void Association.filter(_:)(uint64_t a1@<X2>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
}

void sub_24F89C76C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.order(_:)(v0, v1, v2);
}

void Association.order(_:)(uint64_t a1@<X2>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
}

void sub_24F89C7E4()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.reversed()(v0, v1, v2);
}

void Association.reversed()(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X8>)
{
}

void sub_24F89C888()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.unordered()(v0, v1, v2);
}

void Association.unordered()(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X8>)
{
}

void sub_24F89C92C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.select(_:)(v0, v1, v2);
}

void Association.select(_:)(uint64_t a1@<X2>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
}

void sub_24F89C9A4()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.annotated(with:)(v0, v1, v2);
}

void Association.annotated(with:)(uint64_t a1@<X2>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
}

void sub_24F89CA1C(uint64_t a1@<X2>, uint64_t a2@<X3>, unint64_t a3@<X4>, unint64_t a4@<X8>)
{
}

uint64_t sub_24F89CA54()
{
  swift_getWitnessTable();
  sub_24F77126C();
  return Association.databaseTableName.getter();
}

uint64_t Association.databaseTableName.getter()
{
  sub_24F7809EC();
  uint64_t result = v0();
  uint64_t v2 = *(void *)(v4 + 16);
  if (v2)
  {
    memcpy(__dst, (const void *)(v4 + 232 * v2 - 200), 0xE3uLL);
    sub_24F79900C((uint64_t)__dst);
    swift_bridgeObjectRelease();
    uint64_t v3 = __dst[8];
    sub_24F7D8D44(&__dst[8]);
    sub_24F7AD5F4((uint64_t)__dst);
    swift_bridgeObjectRetain();
    sub_24F7920F8(&__dst[8]);
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24F89CB44()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association.aliased(_:)(v0, v1, v2);
}

void Association.aliased(_:)(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X8>)
{
}

void sub_24F89CBE4()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(all:)(v0, v1, v2);
}

void Association._including(all:)(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X8>)
{
}

void sub_24F89CC50()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(optional:)(v0, v1, v2);
}

void Association._including(optional:)(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X8>)
{
}

void sub_24F89CCBC()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(required:)(v0, v1, v2);
}

void Association._including(required:)(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X8>)
{
}

void sub_24F89CD28()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(optional:)(v0, v1, v2);
}

void Association._joining(optional:)(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X8>)
{
}

void sub_24F89CD94()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(required:)(v0, v1, v2);
}

void Association._joining(required:)(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X8>)
{
}

void sub_24F89CE00(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, unint64_t a4@<X8>)
{
}

uint64_t AssociationToOne.forKey(_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_24F85E9C4(sub_24F8A016C, a1, a2);
}

uint64_t sub_24F89CE9C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  return AssociationToOne.forKey(_:)(v0, v1);
}

void sub_24F89CEFC()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.distinct()(v0, v1, v2);
}

void sub_24F89CF54()
{
  sub_24F77B0EC();
  swift_getWitnessTable();
  sub_24F78323C();
  Association.limit(_:offset:)(v0, v1, v2);
}

void sub_24F89CFB4()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  uint64_t v0 = (void *)sub_24F77F1F4();
  Association.with<A>(_:)(v0, v1, v2, v3);
}

void sub_24F89D014()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.group(_:)(v0, v1, v2);
}

void sub_24F89D074()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.having(_:)(v0, v1, v2);
}

void sub_24F89D0D4()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.filter(_:)(v0, v1, v2);
}

void sub_24F89D134()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.order(_:)(v0, v1, v2);
}

void sub_24F89D194()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.reversed()(v0, v1, v2);
}

void sub_24F89D1EC()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.unordered()(v0, v1, v2);
}

void sub_24F89D244()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.select(_:)(v0, v1, v2);
}

void sub_24F89D2A4()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.annotated(with:)(v0, v1, v2);
}

uint64_t sub_24F89D304()
{
  swift_getWitnessTable();
  sub_24F77126C();
  return Association.databaseTableName.getter();
}

void sub_24F89D354()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association.aliased(_:)(v0, v1, v2);
}

void sub_24F89D3A8()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(all:)(v0, v1, v2);
}

void sub_24F89D3FC()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(optional:)(v0, v1, v2);
}

void sub_24F89D450()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(required:)(v0, v1, v2);
}

void sub_24F89D4A4()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(optional:)(v0, v1, v2);
}

void sub_24F89D4F8()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(required:)(v0, v1, v2);
}

uint64_t sub_24F89D54C()
{
  sub_24F7809EC();
  uint64_t result = v0();
  uint64_t v2 = *(void *)(v4 + 16);
  if (v2)
  {
    memcpy(__dst, (const void *)(v4 + 232 * v2 - 200), 0xE3uLL);
    sub_24F79900C((uint64_t)__dst);
    swift_bridgeObjectRelease();
    uint64_t v3 = __dst[0];
    sub_24F799128(__dst[0], __dst[1], __dst[2]);
    sub_24F7AD5F4((uint64_t)__dst);
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24F89D5E4()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  return AssociationToOne.forKey(_:)(v0, v1);
}

void sub_24F89D644()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.distinct()(v0, v1, v2);
}

void sub_24F89D69C()
{
  sub_24F77B0EC();
  swift_getWitnessTable();
  sub_24F78323C();
  Association.limit(_:offset:)(v0, v1, v2);
}

void sub_24F89D6FC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  uint64_t v0 = (void *)sub_24F77F1F4();
  Association.with<A>(_:)(v0, v1, v2, v3);
}

void sub_24F89D75C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.group(_:)(v0, v1, v2);
}

void sub_24F89D7BC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.having(_:)(v0, v1, v2);
}

void sub_24F89D81C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.filter(_:)(v0, v1, v2);
}

void sub_24F89D87C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.order(_:)(v0, v1, v2);
}

void sub_24F89D8DC()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.reversed()(v0, v1, v2);
}

void sub_24F89D934()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.unordered()(v0, v1, v2);
}

void sub_24F89D98C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.select(_:)(v0, v1, v2);
}

void sub_24F89D9EC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.annotated(with:)(v0, v1, v2);
}

uint64_t sub_24F89DA4C()
{
  swift_getWitnessTable();
  sub_24F77126C();
  return Association.databaseTableName.getter();
}

void sub_24F89DA9C()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association.aliased(_:)(v0, v1, v2);
}

void sub_24F89DAF0()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(all:)(v0, v1, v2);
}

void sub_24F89DB44()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(optional:)(v0, v1, v2);
}

void sub_24F89DB98()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(required:)(v0, v1, v2);
}

void sub_24F89DBEC()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(optional:)(v0, v1, v2);
}

void sub_24F89DC40()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(required:)(v0, v1, v2);
}

uint64_t sub_24F89DC94()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  return AssociationToMany.forKey(_:)(v0, v1);
}

void sub_24F89DCF4()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.distinct()(v0, v1, v2);
}

void sub_24F89DD4C()
{
  sub_24F77B0EC();
  swift_getWitnessTable();
  sub_24F78323C();
  Association.limit(_:offset:)(v0, v1, v2);
}

void sub_24F89DDAC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  uint64_t v0 = (void *)sub_24F77F1F4();
  Association.with<A>(_:)(v0, v1, v2, v3);
}

void sub_24F89DE0C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.group(_:)(v0, v1, v2);
}

void sub_24F89DE6C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.having(_:)(v0, v1, v2);
}

void sub_24F89DECC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.filter(_:)(v0, v1, v2);
}

void sub_24F89DF2C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.order(_:)(v0, v1, v2);
}

void sub_24F89DF8C()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.reversed()(v0, v1, v2);
}

void sub_24F89DFE4()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.unordered()(v0, v1, v2);
}

void sub_24F89E03C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.select(_:)(v0, v1, v2);
}

void sub_24F89E09C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.annotated(with:)(v0, v1, v2);
}

uint64_t sub_24F89E0FC()
{
  swift_getWitnessTable();
  sub_24F77126C();
  return Association.databaseTableName.getter();
}

void sub_24F89E14C()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association.aliased(_:)(v0, v1, v2);
}

void sub_24F89E1A0()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(all:)(v0, v1, v2);
}

void sub_24F89E1F4()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(optional:)(v0, v1, v2);
}

void sub_24F89E248()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(required:)(v0, v1, v2);
}

void sub_24F89E29C()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(optional:)(v0, v1, v2);
}

void sub_24F89E2F0()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(required:)(v0, v1, v2);
}

uint64_t sub_24F89E344()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  return AssociationToOne.forKey(_:)(v0, v1);
}

void sub_24F89E3A4()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.distinct()(v0, v1, v2);
}

void sub_24F89E3FC()
{
  sub_24F77B0EC();
  swift_getWitnessTable();
  sub_24F78323C();
  Association.limit(_:offset:)(v0, v1, v2);
}

void sub_24F89E45C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  uint64_t v0 = (void *)sub_24F77F1F4();
  Association.with<A>(_:)(v0, v1, v2, v3);
}

void sub_24F89E4BC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.group(_:)(v0, v1, v2);
}

void sub_24F89E51C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.having(_:)(v0, v1, v2);
}

void sub_24F89E57C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.filter(_:)(v0, v1, v2);
}

void sub_24F89E5DC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.order(_:)(v0, v1, v2);
}

void sub_24F89E63C()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.reversed()(v0, v1, v2);
}

void sub_24F89E694()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.unordered()(v0, v1, v2);
}

void sub_24F89E6EC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.select(_:)(v0, v1, v2);
}

void sub_24F89E74C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.annotated(with:)(v0, v1, v2);
}

uint64_t sub_24F89E7AC()
{
  swift_getWitnessTable();
  sub_24F77126C();
  return Association.databaseTableName.getter();
}

void sub_24F89E7FC()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association.aliased(_:)(v0, v1, v2);
}

void sub_24F89E850()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(all:)(v0, v1, v2);
}

void sub_24F89E8A4()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(optional:)(v0, v1, v2);
}

void sub_24F89E8F8()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(required:)(v0, v1, v2);
}

void sub_24F89E94C()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(optional:)(v0, v1, v2);
}

void sub_24F89E9A0()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(required:)(v0, v1, v2);
}

uint64_t sub_24F89E9F4()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  return AssociationToOne.forKey(_:)(v0, v1);
}

void sub_24F89EA54()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.distinct()(v0, v1, v2);
}

void sub_24F89EAAC()
{
  sub_24F77B0EC();
  swift_getWitnessTable();
  sub_24F78323C();
  Association.limit(_:offset:)(v0, v1, v2);
}

void sub_24F89EB0C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  uint64_t v0 = (void *)sub_24F77F1F4();
  Association.with<A>(_:)(v0, v1, v2, v3);
}

void sub_24F89EB6C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.group(_:)(v0, v1, v2);
}

void sub_24F89EBCC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.having(_:)(v0, v1, v2);
}

void sub_24F89EC2C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.filter(_:)(v0, v1, v2);
}

void sub_24F89EC8C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.order(_:)(v0, v1, v2);
}

void sub_24F89ECEC()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.reversed()(v0, v1, v2);
}

void sub_24F89ED44()
{
  sub_24F78146C();
  swift_getWitnessTable();
  uint64_t v0 = sub_24F773DA0();
  Association.unordered()(v0, v1, v2);
}

void sub_24F89ED9C()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.select(_:)(v0, v1, v2);
}

void sub_24F89EDFC()
{
  sub_24F77DB40();
  swift_getWitnessTable();
  sub_24F77F980();
  Association.annotated(with:)(v0, v1, v2);
}

uint64_t sub_24F89EE5C()
{
  swift_getWitnessTable();
  sub_24F77126C();
  return Association.databaseTableName.getter();
}

void sub_24F89EEAC()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association.aliased(_:)(v0, v1, v2);
}

void sub_24F89EF00()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(all:)(v0, v1, v2);
}

void sub_24F89EF54()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(optional:)(v0, v1, v2);
}

void sub_24F89EFA8()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._including(required:)(v0, v1, v2);
}

void sub_24F89EFFC()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(optional:)(v0, v1, v2);
}

void sub_24F89F050()
{
  sub_24F77EBEC();
  swift_getWitnessTable();
  sub_24F77E440();
  Association._joining(required:)(v0, v1, v2);
}

void sub_24F89F0A4(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X8>)
{
  unint64_t v10 = a4;
  uint64_t v11 = *(void *)(a2 - 8);
  (*(void (**)(unint64_t, uint64_t))(v11 + 16))(a4, v4);
  uint64_t v12 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(a3 + 16) + 24))(v27, a2);
  uint64_t v14 = *v13;
  uint64_t v15 = *(void *)(*v13 + 16);
  if (!v15)
  {
    __break(1u);
    goto LABEL_12;
  }
  unsigned __int8 v6 = v13;
  unint64_t v29 = (void (*)(unsigned char *, uint64_t))v12;
  unint64_t v16 = (const void *)(v14 + 232 * v15 - 200);
  memcpy(__dst, v16, 0xE3uLL);
  memcpy(__src, v16, 0xE3uLL);
  sub_24F79900C((uint64_t)__dst);
  ((void (*)(unsigned char *))a1)(&__src[64]);
  if (v5)
  {
    memcpy(v25, __src, sizeof(v25));
    uint64_t v17 = *v6;
    a1 = *(void *)(*v6 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unsigned __int8 v6 = v17;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (a1) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
LABEL_12:
    sub_24F83CCE4();
    uint64_t v17 = v22;
    *unsigned __int8 v6 = v22;
    if (a1)
    {
LABEL_5:
      if (a1 <= *(void *)(v17 + 16))
      {
        memcpy(v24, (const void *)(v17 + 232 * a1 - 200), 0xE3uLL);
        memcpy((void *)(v17 + 232 * a1 - 200), v25, 0xE3uLL);
        sub_24F7AD5F4((uint64_t)v24);
        v29(v27, 1);
        (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v10, a2);
        return;
      }
      goto LABEL_14;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    sub_24F83CCE4();
    uint64_t v19 = v23;
    *unsigned __int8 v6 = v23;
    if (!v10) {
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  memcpy(v25, __src, sizeof(v25));
  uint64_t v19 = *v6;
  unint64_t v10 = *(void *)(*v6 + 16);
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  *unsigned __int8 v6 = v19;
  if ((v20 & 1) == 0) {
    goto LABEL_15;
  }
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_9:
  if (v10 <= *(void *)(v19 + 16))
  {
    uint64_t v21 = (void *)(v19 + 232 * v10 - 200);
    memcpy(v24, v21, 0xE3uLL);
    memcpy(v21, v25, 0xE3uLL);
    sub_24F7AD5F4((uint64_t)v24);
    v29(v27, 0);
    return;
  }
LABEL_17:
  __break(1u);
}

void *sub_24F89F34C(void *__src, uint64_t a2)
{
  memcpy(__dst, __src, 0xA2uLL);
  __dst[22] = a2;
  sub_24F802408();
  sub_24F7920F8(__dst);
  return memcpy(__src, v5, 0xA2uLL);
}

void *sub_24F89F3D4(void *__src, uint64_t a2, void (*a3)(void *))
{
  memcpy(__dst, __src, 0xA2uLL);
  __srca[0] = a2;
  swift_bridgeObjectRetain();
  a3(__srca);
  if (v3)
  {
    uint64_t result = (void *)swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    sub_24F802408();
    swift_bridgeObjectRelease();
    sub_24F7920F8(__dst);
    return memcpy(__src, __srca, 0xA2uLL);
  }
  return result;
}

uint64_t Association.forKey(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_24F7811D0(a1, a1[3]);
  uint64_t v4 = sub_24F8CFFE0();
  (*(void (**)(uint64_t))(a3 + 32))(v4);
  return swift_bridgeObjectRelease();
}

double sub_24F89F538(char *__src, uint64_t a2)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v4 = *(void *)__dst;
  uint64_t v5 = *(void *)&__dst[8];
  uint64_t v6 = *(void *)&__dst[16];
  if (*(void *)&__dst[16])
  {
    sub_24F7D8D44(__dst);
    uint64_t v7 = swift_retain();
    sub_24F8298B0(v7);
    swift_release();
  }
  else
  {
    sub_24F7D8D44(__dst);
    sub_24F829D14(v4, v5);
    swift_retain();
    uint64_t v6 = a2;
  }
  sub_24F7920F8(__dst);
  *(_OWORD *)(__src + 24) = *(_OWORD *)&__dst[24];
  *(_OWORD *)(__src + 40) = *(_OWORD *)&__dst[40];
  *(_OWORD *)(__src + 72) = *(_OWORD *)&__dst[72];
  *(_OWORD *)(__src + 88) = *(_OWORD *)&__dst[88];
  double result = *(double *)&__dst[112];
  long long v9 = *(_OWORD *)&__dst[128];
  long long v10 = *(_OWORD *)&__dst[144];
  *((_OWORD *)__src + 7) = *(_OWORD *)&__dst[112];
  *((_OWORD *)__src + 8) = v9;
  char v11 = __dst[160];
  char v12 = __dst[161];
  char v13 = __dst[104];
  uint64_t v14 = *(void *)&__dst[56];
  char v15 = __dst[64];
  *(void *)__src = v4;
  *((void *)__src + 1) = v5;
  *((void *)__src + 2) = v6;
  *((void *)__src + 7) = v14;
  __src[64] = v15;
  __src[104] = v13;
  *((_OWORD *)__src + 9) = v10;
  __src[160] = v11;
  __src[161] = v12;
  return result;
}

__n128 sub_24F89F654(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a1 + 2);
  long long v15 = *a1;
  long long v16 = *(long long *)((char *)a1 + 40);
  uint64_t v7 = *((void *)a1 + 7);
  char v8 = *((unsigned char *)a1 + 64);
  char v22 = *((unsigned char *)a1 + 104);
  __n128 v20 = (__n128)a1[8];
  long long v21 = a1[7];
  uint64_t v18 = *((void *)a1 + 19);
  uint64_t v19 = *((void *)a1 + 18);
  char v17 = *((unsigned char *)a1 + 160);
  char v9 = *((unsigned char *)a1 + 161);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24F8A0444;
  *(void *)(v11 + 24) = v10;
  swift_retain();
  long long v13 = *(long long *)((char *)a1 + 88);
  long long v14 = *(long long *)((char *)a1 + 72);
  swift_release();
  *a1 = v15;
  *((void *)a1 + 2) = v6;
  *((void *)a1 + 3) = sub_24F792290;
  *((void *)a1 + 4) = v11;
  *(long long *)((char *)a1 + 40) = v16;
  *((void *)a1 + 7) = v7;
  *((unsigned char *)a1 + 64) = v8;
  *(long long *)((char *)a1 + 72) = v14;
  *(long long *)((char *)a1 + 88) = v13;
  *((unsigned char *)a1 + 104) = v22;
  __n128 result = v20;
  a1[7] = v21;
  a1[8] = (__int128)v20;
  *((void *)a1 + 18) = v19;
  *((void *)a1 + 19) = v18;
  *((unsigned char *)a1 + 160) = v17;
  *((unsigned char *)a1 + 161) = v9;
  return result;
}

uint64_t sub_24F89F7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  long long v19 = *(_OWORD *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 56);
  char v9 = *(unsigned char *)(a1 + 64);
  char v20 = *(unsigned char *)(a1 + 104);
  long long v17 = *(_OWORD *)(a1 + 128);
  long long v18 = *(_OWORD *)(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 144);
  char v14 = *(unsigned char *)(a1 + 160);
  char v10 = *(unsigned char *)(a1 + 161);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = *(_OWORD *)(a1 + 24);
  *(void *)(v12 + 32) = sub_24F8A0504;
  *(void *)(v12 + 40) = v11;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = sub_24F7AD364;
  *(void *)(a1 + 32) = v12;
  *(_OWORD *)(a1 + 40) = v19;
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 104) = v20;
  *(_OWORD *)(a1 + 112) = v18;
  *(_OWORD *)(a1 + 128) = v17;
  *(void *)(a1 + 144) = v16;
  *(void *)(a1 + 152) = v15;
  *(unsigned char *)(a1 + 160) = v14;
  *(unsigned char *)(a1 + 161) = v10;
  return swift_retain();
}

uint64_t sub_24F89F904(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = a2();
  if (!v2)
  {
    uint64_t v3 = sub_24F790BC4(v4);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_24F89F968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 64);
  char v9 = *(unsigned char *)(a1 + 104);
  char v10 = *(unsigned char *)(a1 + 161);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = sub_24F7AD340;
  if (v7)
  {
    long long v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v7;
    v13[3] = v6;
    void v13[4] = sub_24F7AD340;
    uint64_t v13[5] = v11;
    uint64_t v12 = sub_24F7AD274;
    uint64_t v11 = (uint64_t)v13;
  }
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 104) = v9;
  *(unsigned char *)(a1 + 161) = v10;
  return swift_retain();
}

__n128 sub_24F89FA54(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v17 = *a1;
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  char v23 = *((unsigned char *)a1 + 104);
  __n128 v21 = (__n128)a1[8];
  long long v22 = a1[7];
  uint64_t v19 = *((void *)a1 + 19);
  uint64_t v20 = *((void *)a1 + 18);
  char v18 = *((unsigned char *)a1 + 160);
  char v9 = *((unsigned char *)a1 + 161);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  sub_24F781274(&qword_26B1F6F58);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DDBF0;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24F8A0460;
  *(void *)(v12 + 24) = v10;
  *(void *)(v11 + 32) = sub_24F792290;
  *(void *)(v11 + 40) = v12;
  *(unsigned char *)(v11 + 48) = 0;
  swift_retain();
  long long v16 = *(long long *)((char *)a1 + 72);
  long long v14 = *(long long *)((char *)a1 + 24);
  long long v15 = *(long long *)((char *)a1 + 88);
  swift_bridgeObjectRelease();
  *a1 = v17;
  *((void *)a1 + 2) = v6;
  *(long long *)((char *)a1 + 24) = v14;
  *((void *)a1 + 5) = v7;
  *((void *)a1 + 6) = v8;
  *((void *)a1 + 7) = v11;
  *((unsigned char *)a1 + 64) = 0;
  *(long long *)((char *)a1 + 72) = v16;
  *(long long *)((char *)a1 + 88) = v15;
  *((unsigned char *)a1 + 104) = v23;
  __n128 result = v21;
  a1[7] = v22;
  a1[8] = (__int128)v21;
  *((void *)a1 + 18) = v20;
  *((void *)a1 + 19) = v19;
  *((unsigned char *)a1 + 160) = v18;
  *((unsigned char *)a1 + 161) = v9;
  return result;
}

uint64_t (*sub_24F89FBF4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(void)))(void)
{
  a2();
  if (!v4)
  {
    a4 = (uint64_t (*)(void))a4();
    swift_bridgeObjectRelease();
  }
  return a4;
}

__n128 sub_24F89FC60(char *__src)
{
  memcpy(__dst, __src, 0xA2uLL);
  uint64_t v24 = *((void *)&__dst[9] + 1);
  uint64_t v25 = *(void *)&__dst[9];
  int v27 = LOBYTE(__dst[10]);
  char v2 = BYTE1(__dst[10]);
  long long v22 = __dst[7];
  __n128 v23 = (__n128)__dst[8];
  char v21 = BYTE8(__dst[6]);
  uint64_t v19 = *(void *)&__dst[3];
  uint64_t v20 = *((void *)&__dst[2] + 1);
  uint64_t v3 = *(void *)&__dst[1];
  uint64_t v4 = *((void *)&__dst[5] + 1);
  uint64_t v5 = *(void *)&__dst[6];
  long long v15 = *(_OWORD *)((char *)&__dst[1] + 8);
  long long v17 = __dst[0];
  long long v18 = *(_OWORD *)((char *)&__dst[4] + 8);
  sub_24F7D8D44(__dst);
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v7 = sub_24F8CEC70();
  sub_24F8011A8(v6, v7, v4, v5, (uint64_t)sub_24F801AF8, 0, v8, v9, v15, *((uint64_t *)&v15 + 1));
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F7920F8(__dst);
  char v28 = v2;
  *(_OWORD *)__src = v17;
  *((void *)__src + 2) = v3;
  *(_OWORD *)(__src + 24) = v16;
  *((void *)__src + 5) = v20;
  *((void *)__src + 6) = v19;
  *((void *)__src + 7) = v6;
  __src[64] = 0;
  *(_OWORD *)(__src + 72) = v18;
  *((void *)__src + 11) = v11;
  *((void *)__src + 12) = v13;
  __src[104] = v21;
  __n128 result = v23;
  *((_OWORD *)__src + 7) = v22;
  *((__n128 *)__src + 8) = v23;
  *((void *)__src + 18) = v25;
  *((void *)__src + 19) = v24;
  __src[160] = v27;
  __src[161] = v28;
  return result;
}

__n128 sub_24F89FE08(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v16 = *a1;
  uint64_t v6 = *((void *)a1 + 2);
  long long v18 = *(long long *)((char *)a1 + 40);
  uint64_t v7 = *((void *)a1 + 7);
  char v17 = *((unsigned char *)a1 + 64);
  char v19 = *((unsigned char *)a1 + 104);
  uint64_t v8 = *((void *)a1 + 14);
  __n128 v22 = (__n128)a1[8];
  uint64_t v20 = *((void *)a1 + 19);
  uint64_t v21 = *((void *)a1 + 18);
  char v23 = *((unsigned char *)a1 + 160);
  char v9 = *((unsigned char *)a1 + 161);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24F8A0498;
  *(void *)(v11 + 24) = v10;
  swift_retain();
  long long v15 = *(long long *)((char *)a1 + 72);
  long long v13 = *(long long *)((char *)a1 + 24);
  long long v14 = *(long long *)((char *)a1 + 88);
  sub_24F787238(v8);
  *a1 = v16;
  *((void *)a1 + 2) = v6;
  *(long long *)((char *)a1 + 24) = v13;
  *(long long *)((char *)a1 + 40) = v18;
  *((void *)a1 + 7) = v7;
  *((unsigned char *)a1 + 64) = v17;
  *(long long *)((char *)a1 + 72) = v15;
  *(long long *)((char *)a1 + 88) = v14;
  *((unsigned char *)a1 + 104) = v19;
  *((void *)a1 + 14) = sub_24F8A04C8;
  *((void *)a1 + 15) = v11;
  __n128 result = v22;
  a1[8] = (__int128)v22;
  *((void *)a1 + 18) = v21;
  *((void *)a1 + 19) = v20;
  *((unsigned char *)a1 + 160) = v23;
  *((unsigned char *)a1 + 161) = v9;
  return result;
}

uint64_t sub_24F89FF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a1 + 64);
  char v7 = *(unsigned char *)(a1 + 104);
  uint64_t v9 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  char v10 = *(unsigned char *)(a1 + 161);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = sub_24F7AE2F0;
  if (v9)
  {
    long long v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v9;
    v13[3] = v8;
    void v13[4] = sub_24F7AE2F0;
    uint64_t v13[5] = v11;
    uint64_t v12 = sub_24F7AD274;
    uint64_t v11 = (uint64_t)v13;
  }
  *(unsigned char *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 104) = v7;
  *(void *)(a1 + 128) = v12;
  *(void *)(a1 + 136) = v11;
  *(unsigned char *)(a1 + 161) = v10;
  return swift_retain();
}

uint64_t sub_24F8A0080(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(*(void *)(a6 + 8) + 16);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 8))(&v14, a5, v11);
  uint64_t v13 = v14;
  swift_bridgeObjectRetain();
  sub_24F86929C(&v13, a2, a3, a4);
  if (v6)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v13;
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(&v14, a5, v11);
  }
  return result;
}

uint64_t sub_24F8A016C(uint64_t a1)
{
  return sub_24F8A0394(a1);
}

__n128 sub_24F8A0184(__n128 *a1)
{
  unsigned __int8 v2 = v1[2].n128_u8[0];
  __n128 result = v1[1];
  a1[9] = result;
  a1[10].n128_u16[0] = v2;
  return result;
}

uint64_t sub_24F8A019C(uint64_t a1)
{
  return sub_24F7AA400(a1, *(uint64_t **)(v1 + 40));
}

double sub_24F8A01BC(long long *a1)
{
  *(void *)&double result = sub_24F89FE08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_24F8A01D8(uint64_t a1)
{
  return sub_24F89FF94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F8A01F4(uint64_t a1)
{
  return sub_24F89F968(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

double sub_24F8A0210(long long *a1)
{
  *(void *)&double result = sub_24F89FA54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)).n128_u64[0];
  return result;
}

double sub_24F8A022C(long long *a1)
{
  *(void *)&double result = sub_24F89F654(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_24F8A0248(uint64_t a1)
{
  return sub_24F89F7C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_24F8A0268(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_24F8A0290(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

double sub_24F8A02B0(char *a1)
{
  return sub_24F89F538(a1, v1);
}

void *sub_24F8A02CC(void *a1)
{
  return sub_24F89F34C(a1, *(void *)(v1 + 16));
}

void *sub_24F8A02EC(void *a1)
{
  return sub_24F89F34C(a1, *(void *)(v1 + 16));
}

void *sub_24F8A030C(void *a1)
{
  return sub_24F89F34C(a1, *(void *)(v1 + 16));
}

void *sub_24F8A032C(void *a1)
{
  return sub_24F89F3D4(a1, *(void *)(v1 + 16), (void (*)(void *))sub_24F8032F4);
}

void *sub_24F8A0360(void *a1)
{
  return sub_24F89F3D4(a1, *(void *)(v1 + 16), (void (*)(void *))sub_24F8033FC);
}

uint64_t sub_24F8A0394(uint64_t a1)
{
  return sub_24F8A0080(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t dispatch thunk of _Association._sqlAssociation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _Association._sqlAssociation.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of _Association._sqlAssociation.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Association.forKey(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_24F8A0408()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F8A0444(uint64_t a1)
{
  return sub_24F89F904(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t (*sub_24F8A0460(uint64_t a1))(void)
{
  return sub_24F89FBF4(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))sub_24F7A5618);
}

uint64_t (*sub_24F8A0498(uint64_t a1))(void)
{
  return sub_24F89FBF4(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))sub_24F7A5754);
}

uint64_t sub_24F8A04C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F7AE320(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_24F8A0504(uint64_t a1)
{
  return sub_24F8A0444(a1);
}

uint64_t NSString.databaseValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24F8CED80();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 2;
  return result;
}

id static NSString.fromDatabaseValue(_:)(uint64_t a1)
{
  uint64_t v2 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v2 - 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 != 3)
  {
    id result = 0;
    if (v3 != 2) {
      return result;
    }
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  uint64_t v5 = sub_24F77F998();
  sub_24F78419C(v5, v6);
  sub_24F8CEDC0();
  sub_24F77F998();
  sub_24F8CEDA0();
  uint64_t v8 = v7;
  uint64_t v9 = sub_24F77F998();
  sub_24F781F10(v9, v10, 3);
  if (v8)
  {
LABEL_5:
    sub_24F77F998();
    return sub_24F85925C();
  }
  return 0;
}

uint64_t sub_24F8A063C@<X0>(uint64_t a1@<X8>)
{
  return NSString.databaseValue.getter(a1);
}

id sub_24F8A0660@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = static NSString.fromDatabaseValue(_:)(a1);
  *a2 = result;
  return result;
}

void *DatabaseCollation.__allocating_init(_:function:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = a1;
  v8[3] = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  void v8[4] = sub_24F8A0B90;
  v8[5] = v9;
  return v8;
}

uint64_t DatabaseCollation.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *DatabaseCollation.init(_:function:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a1;
  v4[3] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  v4[4] = sub_24F8A0E0C;
  v4[5] = v7;
  return v4;
}

uint64_t sub_24F8A079C()
{
  uint64_t v0 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v0 - 8);
  sub_24F8CEDC0();
  uint64_t result = sub_24F8CED60();
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = v2;
    sub_24F8CEDC0();
    uint64_t result = sub_24F8CED60();
    if (v5)
    {
      uint64_t v6 = sub_24F7B3164(v3, v4, result, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8A08A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8A0908(a1, a2, a3, a4, MEMORY[0x263F07DB8]);
}

uint64_t sub_24F8A08C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8A0908(a1, a2, a3, a4, MEMORY[0x263F07DD0]);
}

uint64_t sub_24F8A08D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8A0908(a1, a2, a3, a4, MEMORY[0x263F07D90]);
}

uint64_t sub_24F8A08F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8A0908(a1, a2, a3, a4, MEMORY[0x263F07DC8]);
}

uint64_t sub_24F8A0908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *, void, void, unint64_t, unint64_t))
{
  uint64_t v6 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v6 - 8);
  sub_24F8CEDC0();
  uint64_t result = sub_24F8CED60();
  if (v8)
  {
    uint64_t v9 = result;
    uint64_t v10 = v8;
    sub_24F8CEDC0();
    uint64_t result = sub_24F8CED60();
    if (v11)
    {
      void v14[2] = v9;
      v14[3] = v10;
      v14[0] = result;
      v14[1] = v11;
      unint64_t v12 = sub_24F7B0E7C();
      uint64_t v13 = a5(v14, MEMORY[0x263F8D310], MEMORY[0x263F8D310], v12, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8A0A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = sub_24F8CEDD0();
  MEMORY[0x270FA5388](v6 - 8);
  sub_24F8CEDC0();
  uint64_t result = sub_24F8CED60();
  if (v8)
  {
    uint64_t v9 = result;
    uint64_t v10 = v8;
    sub_24F8CEDC0();
    uint64_t result = sub_24F8CED60();
    if (v11)
    {
      uint64_t v12 = a5(v9, v10, result, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8A0B58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F8A0B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8A0A38(a1, a2, a3, a4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16));
}

uint64_t DatabaseCollation.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DatabaseCollation.__deallocating_deinit()
{
  DatabaseCollation.deinit();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t DatabaseCollation.hash(into:)()
{
  return sub_24F8CFF40();
}

BOOL static DatabaseCollation.== infix(_:_:)()
{
  uint64_t v0 = (const char *)(sub_24F8CEE30() + 32);
  uint64_t v1 = sub_24F8CEE30();
  int v2 = sqlite3_stricmp(v0, (const char *)(v1 + 32));
  swift_release();
  swift_release();
  return v2 == 0;
}

uint64_t DatabaseCollation.hashValue.getter()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A0CD8()
{
  return DatabaseCollation.hashValue.getter();
}

uint64_t sub_24F8A0CF0()
{
  return DatabaseCollation.hash(into:)();
}

uint64_t sub_24F8A0D08()
{
  return sub_24F8CFF80();
}

unint64_t sub_24F8A0D4C()
{
  unint64_t result = qword_26B1F7DA8;
  if (!qword_26B1F7DA8)
  {
    type metadata accessor for DatabaseCollation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7DA8);
  }
  return result;
}

uint64_t type metadata accessor for DatabaseCollation()
{
  return self;
}

BOOL sub_24F8A0DBC()
{
  return static DatabaseCollation.== infix(_:_:)();
}

uint64_t method lookup function for DatabaseCollation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DatabaseCollation);
}

uint64_t dispatch thunk of DatabaseCollation.__allocating_init(_:function:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_24F8A0E14(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  swift_retain_n();
  if (Database.isInsideTransaction.getter())
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t v12 = MEMORY[0x263F8EE80];
    uint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v36 = MEMORY[0x263F8EE80];
    uint64_t v13 = &v35;
    v14._uint64_t countAndFlagsBits = 0x4E494F5045564153;
    v14._object = (void *)0xEE00626472672054;
    Database.execute(sql:arguments:)(v14, *(GRDBInternal::StatementArguments *)(&v10 - 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v15)
    {
      int v37 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock);
      uint64_t v16 = OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock;
      *(unsigned char *)(a1 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 1;
      swift_retain();
      char v17 = sub_24F8A5EE8(a2, a3, a4, a5);
      if (v17)
      {
        unint64_t v31 = 0;
        char v27 = v37;
      }
      else
      {
        sub_24F77CC78();
        char v27 = v37;
        *(unsigned char *)(a1 + v16) = v37;
        uint64_t v35 = v11;
        uint64_t v36 = v12;
        v28._object = (void *)0x800000024F8D4E70;
        v29.values._rawValue = &v35;
        v28._uint64_t countAndFlagsBits = 0xD000000000000016;
        Database.execute(sql:arguments:)(v28, v29);
        if (!v30)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v31 = v30;
      }
      uint64_t v35 = v11;
      uint64_t v36 = v12;
      v19._uint64_t countAndFlagsBits = 0xD000000000000026;
      v19._object = (void *)0x800000024F8D4E40;
      uint64_t v20 = &v35;
      Database.execute(sql:arguments:)(v19, *(GRDBInternal::StatementArguments *)(&v18 - 1));
      __n128 v22 = v21;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_6;
      }
      uint64_t v35 = v11;
      uint64_t v36 = v12;
      v24._object = (void *)0x800000024F8D4E70;
      uint64_t v25 = &v35;
      v24._uint64_t countAndFlagsBits = 0xD000000000000016;
      Database.execute(sql:arguments:)(v24, *(GRDBInternal::StatementArguments *)(&v23 - 1));
      __n128 v22 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_6:
        if (!v31)
        {
          id v32 = v22;
          goto LABEL_14;
        }
      }
      else if (!v31)
      {
        goto LABEL_15;
      }
      __n128 v22 = v31;
LABEL_14:
      id v33 = v31;
      swift_willThrow();

LABEL_15:
      *(unsigned char *)(a1 + v16) = v27;
    }
  }
  else
  {
    LOBYTE(v35) = 3;
    swift_retain();
    sub_24F8A157C((char *)&v35, a1, a2, a3, a4, a5);
  }
  return swift_release_n();
}

uint64_t sub_24F8A10E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8A1398(a1, a2, a3, a4);
}

void sub_24F8A10F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_24F778E4C();
  a21 = v22;
  a22 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  swift_retain();
  if ((Database.isInsideTransaction.getter() & 1) == 0)
  {
    LOBYTE(a9) = 3;
    swift_retain();
    sub_24F8A16F0((char *)&a9, v27);
LABEL_16:
    swift_release_n();
    goto LABEL_17;
  }
  a9 = MEMORY[0x263F8EE78];
  a10 = MEMORY[0x263F8EE80];
  GRDBInternal::StatementArguments v29 = &a9;
  v30._uint64_t countAndFlagsBits = 0x4E494F5045564153;
  v30._object = (void *)0xEE00626472672054;
  Database.execute(sql:arguments:)(v30, *(GRDBInternal::StatementArguments *)(&v28 - 1));
  if (!v31)
  {
    uint64_t v32 = MEMORY[0x263F8EE80];
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    uint64_t v34 = OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock;
    char v35 = *(unsigned char *)(v27 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock);
    *(unsigned char *)(v27 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 1;
    char v39 = sub_24F883F58(v25, v36, v37, v38);
    if (v39)
    {
      char v49 = 0;
    }
    else
    {
      sub_24F77CC78();
      *(unsigned char *)(v27 + v34) = v35;
      a9 = v33;
      a10 = v32;
      v50._uint64_t countAndFlagsBits = sub_24F8AA360();
      Database.execute(sql:arguments:)(v50, v51);
      if (!v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v49 = v52;
    }
    a9 = v33;
    a10 = v32;
    sub_24F77231C();
    Database.execute(sql:arguments:)(v40, v41);
    uint64_t v43 = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v42
      || (a9 = v33,
          a10 = v32,
          v44._uint64_t countAndFlagsBits = sub_24F8AA360(),
          Database.execute(sql:arguments:)(v44, v45),
          uint64_t v43 = v46,
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          v46))
    {
      if (!v49)
      {
        id v47 = v43;
        goto LABEL_14;
      }
    }
    else if (!v49)
    {
      goto LABEL_15;
    }
    uint64_t v43 = v49;
LABEL_14:
    id v48 = v49;
    swift_willThrow();

LABEL_15:
    *(unsigned char *)(v27 + v34) = v35;
    goto LABEL_16;
  }
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  sub_24F771ECC();
}

#error "24F8A14A0: call analysis failed (funcsize=116)"

uint64_t sub_24F8A157C(char *a1, uint64_t a2, unsigned char *a3, void (*a4)(uint64_t *__return_ptr, uint64_t), uint64_t a5, uint64_t a6)
{
  char v21 = *a1;
  swift_retain();
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&v21);
  if (!v11)
  {
    uint64_t v12 = OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock;
    char v13 = *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 1;
    swift_retain();
    if (sub_24F8A5F44(a3, a4, a5, a6))
    {
      uint64_t v15 = 0;
    }
    else
    {
      sub_24F77CC78();
      *(unsigned char *)(a2 + v12) = v13;
      Database.commit()();
      if (!v14) {
        goto LABEL_13;
      }
      uint64_t v15 = v14;
    }
    Database.rollback()();
    char v17 = v16;
    if (v16)
    {
      if (!v15)
      {
        id v18 = v16;
        goto LABEL_12;
      }

LABEL_10:
      char v17 = v15;
LABEL_12:
      id v19 = v15;
      swift_willThrow();

      goto LABEL_13;
    }
    if (v15) {
      goto LABEL_10;
    }
LABEL_13:
    *(unsigned char *)(a2 + v12) = v13;
  }
  return swift_release_n();
}

uint64_t sub_24F8A16F0(char *a1, uint64_t a2)
{
  char v18 = *a1;
  swift_retain();
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&v18);
  if (!v3)
  {
    uint64_t v4 = OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock;
    char v5 = *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 1;
    uint64_t v6 = swift_retain();
    uint64_t v10 = sub_24F883F58(v6, v7, v8, v9);
    swift_release();
    if (v10)
    {
      uint64_t v12 = 0;
    }
    else
    {
      sub_24F77CC78();
      *(unsigned char *)(a2 + v4) = v5;
      Database.commit()();
      if (!v11) {
        goto LABEL_13;
      }
      uint64_t v12 = v11;
    }
    Database.rollback()();
    Swift::String v14 = v13;
    if (v13)
    {
      if (!v12)
      {
        id v15 = v13;
        goto LABEL_12;
      }

LABEL_10:
      Swift::String v14 = v12;
LABEL_12:
      id v16 = v12;
      swift_willThrow();

      goto LABEL_13;
    }
    if (v12) {
      goto LABEL_10;
    }
LABEL_13:
    *(unsigned char *)(a2 + v4) = v5;
  }
  return swift_release_n();
}

void sub_24F8A1860(char *a1, uint64_t a2, unsigned char *a3, void (*a4)(uint64_t *__return_ptr))
{
  char v14 = *a1;
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&v14);
  if (!v7)
  {
    uint64_t v8 = OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock;
    char v9 = *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 1;
    a4(&v15);
    *a3 = 0;
    sub_24F780B08();
    *(unsigned char *)(a2 + v8) = v9;
    Database.commit()();
    uint64_t v11 = v10;
    if (v10)
    {
      Database.rollback()();
      if (v12) {

      }
      id v13 = v11;
      swift_willThrow();
    }
    *(unsigned char *)(a2 + v8) = v9;
  }
}

#error "24F8A1A38: call analysis failed (funcsize=107)"

uint64_t sub_24F8A1B34(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_24F8A1B64(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_24F8A1B4C(char *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_24F8A1E3C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_24F8A1B64(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_24F8AA320(a1, a2, a3, a4, a5, a6, a7, a8, v17, v18, SWORD2(v18), SBYTE6(v18), SHIBYTE(v18));
  if (!v8)
  {
    uint64_t v12 = OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock;
    char v13 = *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 1;
    (*(void (**)(uint64_t))(a3 + 24))(a4);
    sub_24F7D3F84();
    sub_24F77CC78();
    *(unsigned char *)(a2 + v12) = v13;
    Database.commit()();
    if (!v14)
    {
      *(unsigned char *)(a2 + v12) = v13;
      long long v19 = *(_OWORD *)a3;
      sub_24F828E6C((uint64_t)&v19);
      swift_release();
      return swift_release();
    }
    Database.rollback()();
    if (v15) {

    }
    swift_willThrow();
    *(unsigned char *)(a2 + v12) = v13;
  }
  long long v20 = *(_OWORD *)a3;
  sub_24F828E6C((uint64_t)&v20);
  swift_release();
  return swift_release();
}

uint64_t sub_24F8A1CD0(char *a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v21 = *a1;
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&v21);
  if (!v11)
  {
    uint64_t v12 = OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock;
    char v13 = *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 1;
    if (sub_24F861D2C(a3 & 0x101, a4, a5, a6))
    {
      uint64_t v15 = 0;
    }
    else
    {
      sub_24F77CC78();
      *(unsigned char *)(a2 + v12) = v13;
      Database.commit()();
      if (!v14) {
        goto LABEL_13;
      }
      uint64_t v15 = v14;
    }
    Database.rollback()();
    uint64_t v17 = v16;
    if (v16)
    {
      if (!v15)
      {
        id v18 = v16;
        goto LABEL_12;
      }

LABEL_10:
      uint64_t v17 = v15;
LABEL_12:
      id v19 = v15;
      swift_willThrow();

      goto LABEL_13;
    }
    if (v15) {
      goto LABEL_10;
    }
LABEL_13:
    *(unsigned char *)(a2 + v12) = v13;
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8A1E3C(char *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_24F8AA320(a1, a2, (uint64_t)a3, a4, a5, a6, a7, a8, v21, v22, SWORD2(v22), SBYTE6(v22), SHIBYTE(v22));
  if (!v8)
  {
    uint64_t v12 = OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock;
    char v13 = *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 1;
    if (a3(a5))
    {
      uint64_t v15 = 0;
    }
    else
    {
      sub_24F77CC78();
      *(unsigned char *)(a2 + v12) = v13;
      Database.commit()();
      if (!v14) {
        goto LABEL_13;
      }
      uint64_t v15 = v14;
    }
    Database.rollback()();
    uint64_t v17 = v16;
    if (v16)
    {
      if (!v15)
      {
        id v18 = v16;
        goto LABEL_12;
      }

LABEL_10:
      uint64_t v17 = v15;
LABEL_12:
      id v19 = v15;
      swift_willThrow();

      goto LABEL_13;
    }
    if (v15) {
      goto LABEL_10;
    }
LABEL_13:
    *(unsigned char *)(a2 + v12) = v13;
  }
  return swift_release();
}

uint64_t sub_24F8A1F94()
{
  sub_24F77CEB0();
  uint64_t v1 = type metadata accessor for Configuration();
  int v2 = (int *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)uint64_t v4 = 1;
  *((void *)v4 + 1) = 0;
  *((void *)v4 + 2) = 0;
  *(_DWORD *)(v4 + 23) = 0;
  *((void *)v4 + 4) = MEMORY[0x263F8EE78];
  *((_WORD *)v4 + 20) = 0;
  v4[64] = 2;
  *((void *)v4 + 9) = 0;
  *((void *)v4 + 10) = 0;
  v4[88] = -1;
  *((void *)v4 + 12) = 5;
  *((void *)v4 + 6) = 0;
  *((void *)v4 + 7) = 0;
  sub_24F8CEBF0();
  *(void *)&v4[v2[19]] = 0;
  *(void *)&v4[v2[20]] = 0;
  v4[v2[21]] = 1;
  v4[v2[22]] = 0;
  char v5 = &v4[v2[23]];
  *(void *)char v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = &v4[v2[24]];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = &v4[v2[25]];
  type metadata accessor for DatabaseQueue();
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  swift_initStackObject();
  DatabaseQueue.init(configuration:)((uint64_t)v4);
  sub_24F8A3830(v0, -1, 0, 0, 0, 0);
  return swift_release();
}

sqlite3_int64 Database.lastInsertedRowID.getter()
{
  sub_24F782504();
  if (sub_24F780400())
  {
    sub_24F773614();
    return sqlite3_last_insert_rowid(*(sqlite3 **)(v0 + 16));
  }
  else
  {
    sub_24F770EAC();
    sqlite3_int64 result = sub_24F77E454();
    __break(1u);
  }
  return result;
}

uint64_t Database.changesCount.getter()
{
  sub_24F782504();
  if (sub_24F780400())
  {
    sub_24F773614();
    return sqlite3_changes(*(sqlite3 **)(v0 + 16));
  }
  else
  {
    sub_24F770EAC();
    uint64_t result = sub_24F77E454();
    __break(1u);
  }
  return result;
}

id sub_24F8A21E4()
{
  return sub_24F8A2234((void (*)(uint64_t))sub_24F8AA040);
}

id sub_24F8A2234(void (*a1)(uint64_t))
{
  objc_msgSend(*(id *)(v1 + 24), sel_lock);
  swift_beginAccess();
  a1(v1 + 16);
  swift_endAccess();
  return objc_msgSend(*(id *)(v1 + 24), sel_unlock);
}

uint64_t sub_24F8A22D8()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A2324(uint64_t a1)
{
  return sub_24F8A23F4(a1, (void (*)(unsigned char *, uint64_t))sub_24F8A283C);
}

uint64_t sub_24F8A233C(uint64_t a1)
{
  return sub_24F8A23F4(a1, (void (*)(unsigned char *, uint64_t))sub_24F8A26B4);
}

uint64_t sub_24F8A2354()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A239C()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A23F4(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_24F7805A4();
  a2(v5, a1);
  return sub_24F8CFF80();
}

uint64_t sub_24F8A243C()
{
  return sub_24F8A2910();
}

uint64_t sub_24F8A2448()
{
  return sub_24F8A2A70();
}

uint64_t sub_24F8A2454()
{
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8A2528()
{
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8A25F8()
{
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8A268C()
{
  return sub_24F8CFF60();
}

uint64_t sub_24F8A26B4()
{
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8A27D4()
{
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8A283C()
{
  sub_24F8CEE50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8A28DC()
{
  return sub_24F8CFF60();
}

uint64_t sub_24F8A2910()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A29B8()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A29FC()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A2A58(uint64_t a1, uint64_t a2)
{
  return sub_24F8A2B04(a1, a2, (void (*)(unsigned char *, uint64_t))sub_24F8A26B4);
}

uint64_t sub_24F8A2A70()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A2AEC(uint64_t a1, uint64_t a2)
{
  return sub_24F8A2B04(a1, a2, (void (*)(unsigned char *, uint64_t))sub_24F8A283C);
}

uint64_t sub_24F8A2B04(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_24F8CFF30();
  a3(v6, a2);
  return sub_24F8CFF80();
}

uint64_t sub_24F8A2B50()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A2BA8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    char v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_24F8A2C00@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    char v5 = (int *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    int v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_24F8A2C58(void *a1@<X8>)
{
}

void sub_24F8A2C60(_DWORD *a1@<X8>)
{
}

void sub_24F8A2C68(void *a1@<X8>)
{
}

void sub_24F8A2C70(_DWORD *a1@<X8>)
{
}

void sub_24F8A2C80(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  if ((*v2 & a2) != 0) {
    *v2 &= ~a2;
  }
  sub_24F8AA444(a1);
}

void sub_24F8A2CA0(uint64_t a1@<X8>, int a2@<W0>)
{
  if ((*v2 & a2) != 0) {
    *v2 &= ~a2;
  }
  sub_24F8AA438(a1);
}

void sub_24F8A2CC8(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  *v2 |= a2;
  sub_24F8AA444(a1);
}

void sub_24F8A2CE0(uint64_t a1@<X8>, int a2@<W0>)
{
  *v2 |= a2;
  sub_24F8AA438(a1);
}

uint64_t sub_24F8A2CF8(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_24F8A2D08(uint64_t result)
{
  *v1 ^= result;
  return result;
}

void sub_24F8A2D18(void *a1@<X8>)
{
}

void sub_24F8A2D20(_DWORD *a1@<X8>)
{
}

BOOL sub_24F8A2D28(int a1, int a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_24F8A2D34(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_24F8A2D40(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_24F8A2D4C(int a1, int a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_24F8A2D58(int a1, int a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_24F8A2D64(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_24F8A2D70(uint64_t a1)
{
  return a1 == 0;
}

BOOL sub_24F8A2D7C(int a1)
{
  return a1 == 0;
}

uint64_t sub_24F8A2D88(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

uint64_t sub_24F8A2D98(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

uint64_t Database.ConflictResolution.rawValue.getter()
{
  uint64_t result = 0x4B4341424C4C4F52;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x54524F4241;
      break;
    case 2:
      uint64_t result = 1279869254;
      break;
    case 3:
      uint64_t result = 0x45524F4E4749;
      break;
    case 4:
      uint64_t result = 0x4543414C504552;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F8A2E44(char a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  void v18[2] = a3;
  _OWORD v18[3] = a4;
  v18[4] = a5;
  char v19 = 1;
  swift_retain();
  if ((a1 & 1) == 0)
  {
    swift_retain();
    sub_24F8A0E14(a2, &v19, a3, a4, a5);
    uint64_t v11 = v5;
    swift_release();
    if (!v5) {
      goto LABEL_5;
    }
    return swift_release();
  }
  swift_retain();
  sub_24F8A3628();
  uint64_t v11 = v5;
  if (v5)
  {
    swift_release();
LABEL_14:
    swift_release();
    return swift_release();
  }
  while (1)
  {
    uint64_t v12 = swift_retain();
    char v13 = v11;
    sub_24F8A1398(v12, &v19, sub_24F8AA0C8, v18);
    uint64_t v14 = v11;
    if (v11) {
      uint64_t v15 = v11;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v11) {
      char v13 = 0;
    }
    sub_24F8A36D0();
    uint64_t v11 = v13;
    if (v15)
    {
      id v16 = v15;
      swift_willThrow();

      swift_release_n();
      goto LABEL_14;
    }
    uint64_t result = swift_release();
    if (v14) {
      break;
    }
    swift_release();
    swift_release();
LABEL_5:
    if ((v19 & 1) == 0) {
      return swift_release();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_24F8A2FCC(uint64_t *a1, void (*a2)(void))
{
  if (*a1)
  {
    uint64_t v5 = OBJC_IVAR____TtC12GRDBInternal8Database_isRecordingSelectedRegion;
    char v9 = *(unsigned char *)(v2 + OBJC_IVAR____TtC12GRDBInternal8Database_isRecordingSelectedRegion);
    int v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC12GRDBInternal8Database_selectedRegion);
    swift_beginAccess();
    uint64_t v7 = *v6;
    *(unsigned char *)(v2 + v5) = 1;
    sub_24F776A80();
    swift_bridgeObjectRetain();
    *int v6 = sub_24F8CEC70();
    uint64_t v8 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))a2)(v8);
    sub_24F8A5644(a1, v2, v9, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    a2();
  }
  sub_24F781A20();
}

void sub_24F8A30EC()
{
  uint64_t v1 = v0;
  type metadata accessor for SchedulingWatchdog();
  if ((sub_24F78346C(v0) & 1) == 0)
  {
LABEL_18:
    sub_24F770EAC();
    sub_24F8AA34C();
    sub_24F8CF9D0();
    __break(1u);
    return;
  }
  swift_beginAccess();
  uint64_t v2 = *(sqlite3 **)(v0 + 16);
  if (v2)
  {
    uint64_t v27 = (void *)(v0 + 16);
    uint64_t v3 = v0 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration;
    uint64_t v25 = type metadata accessor for Configuration();
    uint64_t v26 = v3;
    int v4 = *(void (**)(sqlite3 *))(v3 + *(int *)(v25 + 88));
    if (v4) {
      v4(v2);
    }
    uint64_t v5 = sub_24F773034(&OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache);
    type metadata accessor for Statement();
    uint64_t v6 = sub_24F76BB58();
    swift_bridgeObjectRelease();
    sub_24F773018(v5, v6, &OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache);
    uint64_t v7 = sub_24F773034(&OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache);
    uint64_t v8 = sub_24F76BB58();
    swift_bridgeObjectRelease();
    sub_24F773018(v7, v8, &OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache);
    uint64_t v9 = sqlite3_close(v2);
    if (v9)
    {
      int v17 = v9;
      sub_24F773614();
      id v18 = (void (*)(int *, unint64_t, unint64_t))off_269A2C420;
      if (off_269A2C420 && v17 == 5)
      {
        swift_retain();
        stmt = sqlite3_next_stmt(v2, 0);
        if (stmt)
        {
          long long v20 = stmt;
          while (1)
          {
            int v28 = 5;
            sub_24F8CF7D0();
            swift_bridgeObjectRelease();
            if (!sqlite3_sql(v20)) {
              break;
            }
            sub_24F8CEED0();
            sub_24F8CEEB0();
            swift_bridgeObjectRelease();
            v18(&v28, 0xD000000000000017, 0x800000024F8D51C0);
            swift_bridgeObjectRelease();
            long long v20 = sqlite3_next_stmt(v2, v20);
            if (!v20) {
              goto LABEL_12;
            }
          }
          __break(1u);
          __break(1u);
          goto LABEL_18;
        }
LABEL_12:
        sub_24F787238((uint64_t)v18);
        int v17 = 5;
      }
      Database.lastErrorMessage.getter();
      sub_24F8AA450();
      sub_24F7DC6DC();
      sub_24F770FA4();
      *(_DWORD *)uint64_t v21 = v17;
      *(void *)(v21 + 8) = v1;
      *(void *)(v21 + 16) = v2;
      *(_OWORD *)(v21 + 24) = 0u;
      *(_OWORD *)(v21 + 40) = 0u;
      *(unsigned char *)(v21 + 56) = 0;
      swift_willThrow();
      return;
    }
    sub_24F77775C(v9, v10, v11, v12, v13, v14, v15, v16, v23, v24, v25, v26, v27);
    if (v22) {
      v22();
    }
  }
}

uint64_t sub_24F8A3414(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[2] = a1;
  return sub_24F8565FC((uint64_t)sub_24F8AA0AC, (uint64_t)v3);
}

Swift::Void __swiftcall Database.releaseMemory()()
{
  sub_24F782504();
  if (sub_24F780400())
  {
    sub_24F773614();
    sqlite3_db_release_memory(*(sqlite3 **)(v0 + 16));
    uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache);
    swift_beginAccess();
    swift_bridgeObjectRelease();
    *uint64_t v1 = 0;
    sub_24F781274(&qword_26B1F7AF0);
    sub_24F8CECA0();
    swift_endAccess();
    sub_24F773034(&OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache);
    sub_24F8AA450();
    type metadata accessor for Statement();
    uint64_t v2 = sub_24F8AA3EC();
    swift_bridgeObjectRelease();
    sub_24F773018(v0, v2, &OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache);
    sub_24F773034(&OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache);
    sub_24F8AA450();
    uint64_t v3 = sub_24F8AA3EC();
    swift_bridgeObjectRelease();
    sub_24F773018(v0, v3, &OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache);
  }
  else
  {
    sub_24F770EAC();
    sub_24F77E454();
    __break(1u);
  }
}

uint64_t sub_24F8A35D4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3)
{
  return sub_24F8A2E44(1, a1, a2, a3, a1);
}

void sub_24F8A3628()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 1) & 1) == 0)
  {
    uint64_t v2 = OBJC_IVAR____TtC12GRDBInternal8Database__readOnlyDepth;
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database__readOnlyDepth);
    if (!v3)
    {
      sub_24F780D68();
      sub_24F7729B4();
      int v8 = sub_24F772E94(v6, v7);
      if (v1) {
        return;
      }
      sub_24F8AA474(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
      swift_release();
      uint64_t v3 = *(void *)(v0 + v2);
    }
    BOOL v4 = __OFADD__(v3, 1);
    uint64_t v5 = v3 + 1;
    if (v4) {
      __break(1u);
    }
    else {
      *(void *)(v0 + v2) = v5;
    }
  }
}

void sub_24F8A36D0()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 1) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database__readOnlyDepth);
    BOOL v3 = __OFSUB__(v2, 1);
    uint64_t v4 = v2 - 1;
    if (v3)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database__readOnlyDepth) = v4;
      if (!v4)
      {
        unint64_t v5 = sub_24F780D68();
        int v7 = sub_24F772E94(v5, v6);
        if (!v1)
        {
          sub_24F8AA474(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
          swift_release();
        }
      }
    }
  }
}

const char *Database.lastErrorMessage.getter()
{
  sub_24F773614();
  uint64_t result = sqlite3_errmsg(*(sqlite3 **)(v0 + 16));
  if (result) {
    return (const char *)sub_24F8CEED0();
  }
  __break(1u);
  return result;
}

uint64_t Database.ForeignKeyAction.rawValue.getter()
{
  uint64_t result = 0x45444143534143;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x5443495254534552;
      break;
    case 2:
      uint64_t result = 0x4C4C554E20544553;
      break;
    case 3:
      uint64_t result = 0x4146454420544553;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F8A3830(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v7[2] = a1;
  int v8 = a2;
  uint64_t v9 = a3;
  uint64_t v10 = a4;
  uint64_t v11 = a5;
  uint64_t v12 = a6;
  return sub_24F8A3414((uint64_t)sub_24F8AA084, (uint64_t)v7);
}

void sub_24F8A3878(uint64_t a1, int a2, void (*a3)(void), uint64_t a4, void (*a5)(char *))
{
  sub_24F773614();
  uint64_t v11 = *(sqlite3 **)(a1 + 16);
  sub_24F773614();
  uint64_t v12 = sqlite3_backup_init(v11, "main", *(sqlite3 **)(v5 + 16), "main");
  if (v12)
  {
    int v13 = v12;
    if (v12 == (sqlite3_backup *)1)
    {
      sub_24F7DC6DC();
      sub_24F770FA4();
      sub_24F77C904();
      if (sqlite3_errstr(1))
      {
        uint64_t v14 = sub_24F8CEED0();
        *(_DWORD *)uint64_t v5 = 1;
        *(void *)(v5 + 8) = v14;
        *(void *)(v5 + 16) = v15;
        goto LABEL_21;
      }
      goto LABEL_31;
    }
    if (a3) {
      a3();
    }
    while (1)
    {
      int v21 = sqlite3_backup_step(v13, a2);
      uint64_t v22 = sqlite3_backup_pagecount(v13);
      uint64_t v23 = sqlite3_backup_remaining(v13);
      if (v21) {
        break;
      }
      if (a5)
      {
        uint64_t v42 = v22;
        char v43 = 0;
        uint64_t v31 = sub_24F774730(v23, v24, v25, v26, v27, v28, v29, v30, v40, v23);
        a5(v31);
        if (v6) {
          goto LABEL_26;
        }
      }
    }
    if (v21 != 101)
    {
      uint64_t v35 = a1;
      uint64_t v36 = (uint64_t)Database.lastErrorMessage.getter();
      uint64_t v38 = v37;
      sub_24F7DC6DC();
      sub_24F770FA4();
      sub_24F77C904();
      if (!v38)
      {
        if (!sqlite3_errstr(v21)) {
          goto LABEL_33;
        }
        uint64_t v36 = sub_24F8CEED0();
        uint64_t v38 = v39;
      }
      *(_DWORD *)uint64_t v35 = v21;
      *(void *)(v35 + 8) = v36;
      *(void *)(v35 + 16) = v38;
      sub_24F8AA2E8();
LABEL_26:
      sqlite3_backup_finish(v13);
      goto LABEL_27;
    }
    if (a5)
    {
      uint64_t v42 = v22;
      char v43 = 1;
      uint64_t v32 = sub_24F774730(v23, v24, v25, v26, v27, v28, v29, v30, v40, v23);
      a5(v32);
      if (v6) {
    }
      }
    int v33 = sqlite3_backup_finish(v13);
    if (!v33)
    {
      Database.clearSchemaCache()();
      return;
    }
    int v16 = v33;
    uint64_t v5 = a1;
    uint64_t v17 = (uint64_t)Database.lastErrorMessage.getter();
    uint64_t v19 = v34;
    sub_24F7DC6DC();
    sub_24F770FA4();
    sub_24F77C904();
    if (v19) {
      goto LABEL_20;
    }
    if (!sqlite3_errstr(v16))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      return;
    }
    goto LABEL_7;
  }
  uint64_t v5 = a1;
  Database.lastErrorCode.getter(&v41);
  int v16 = v41;
  uint64_t v17 = (uint64_t)Database.lastErrorMessage.getter();
  uint64_t v19 = v18;
  sub_24F7DC6DC();
  sub_24F770FA4();
  sub_24F77C904();
  if (!v19)
  {
    if (!sqlite3_errstr(v16)) {
      goto LABEL_32;
    }
LABEL_7:
    uint64_t v17 = sub_24F8CEED0();
    uint64_t v19 = v20;
  }
LABEL_20:
  *(_DWORD *)uint64_t v5 = v16;
  *(void *)(v5 + 8) = v17;
  *(void *)(v5 + 16) = v19;
LABEL_21:
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(unsigned char *)(v5 + 56) = 0;
LABEL_27:
  swift_willThrow();
}

uint64_t sub_24F8A3B18()
{
  sub_24F77CEB0();
  sub_24F8A4A24();
  uint64_t v2 = sub_24F8A4BB4();
  uint64_t result = sub_24F8A4C28(v2, v3, v4, v5);
  if (!v0)
  {
    sub_24F8A4CBC();
    sub_24F8A4E44();
    sub_24F8A4ED8();
    uint64_t v7 = v1 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration;
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 1) & 1) == 0)
    {
      sub_24F77CBA8(&OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___observationBroker, (void (*)(void))type metadata accessor for DatabaseObservationBroker, 57, sub_24F79F8BC);
      sub_24F7A09A4();
      swift_release();
    }
    sub_24F7729B4();
    sub_24F8A4F6C();
    sub_24F7ED6AC(v1);
    sub_24F7729B4();
    sub_24F8A5028();
    uint64_t result = type metadata accessor for Configuration();
    int v8 = (uint64_t (**)(void))(v7 + *(int *)(result + 84));
    if (*v8) {
      return (*v8)();
    }
  }
  return result;
}

void sub_24F8A3C28()
{
  type metadata accessor for SchedulingWatchdog();
  if ((sub_24F78346C(v0) & 1) == 0) {
    goto LABEL_13;
  }
  swift_beginAccess();
  uint64_t v1 = *(sqlite3 **)(v0 + 16);
  if (!v1) {
    return;
  }
  uint64_t v23 = (void *)(v0 + 16);
  uint64_t v2 = v0 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration;
  uint64_t v21 = type metadata accessor for Configuration();
  uint64_t v22 = v2;
  uint64_t v3 = *(void (**)(sqlite3 *))(v2 + *(int *)(v21 + 88));
  if (v3) {
    v3(v1);
  }
  uint64_t v4 = sub_24F773034(&OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache);
  type metadata accessor for Statement();
  uint64_t v5 = sub_24F773558();
  swift_bridgeObjectRelease();
  sub_24F773018(v4, v5, &OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache);
  uint64_t v6 = sub_24F773034(&OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache);
  uint64_t v7 = sub_24F773558();
  swift_bridgeObjectRelease();
  sub_24F773018(v6, v7, &OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache);
  uint64_t v8 = sqlite3_close_v2(v1);
  if (v8)
  {
    int v16 = v8;
    uint64_t v8 = sub_24F773614();
    uint64_t v17 = (void (*)(int *, unint64_t, unint64_t))off_269A2C420;
    if (off_269A2C420)
    {
      swift_retain();
      if (sqlite3_errmsg(v1))
      {
        sub_24F8CEED0();
        int v24 = v16;
        sub_24F8CF7D0();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        v17(&v24, 0xD00000000000001ALL, 0x800000024F8D5120);
        sub_24F787238((uint64_t)v17);
        uint64_t v8 = swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      __break(1u);
LABEL_13:
      sub_24F770EAC();
      sub_24F8AA34C();
      sub_24F8CF9D0();
      __break(1u);
      return;
    }
  }
LABEL_9:
  sub_24F77775C(v8, v9, v10, v11, v12, v13, v14, v15, v19, v20, v21, v22, v23);
  if (v18) {
    v18();
  }
}

uint64_t sub_24F8A3EAC()
{
  swift_retain();
  uint64_t v1 = swift_retain();
  sub_24F799C08(v1, v0);
  return swift_release();
}

void sub_24F8A3F14()
{
  qword_26B1FAB20 = -1;
}

uint64_t Database.sqliteConnection.getter()
{
  sub_24F773614();
  return *(void *)(v0 + 16);
}

uint64_t Database.sqliteConnection.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Database.sqliteConnection.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_24F8A3FD4()
{
  swift_beginAccess();
  if (off_269A2C420) {
    uint64_t v0 = sub_24F8A40EC;
  }
  else {
    uint64_t v0 = 0;
  }
  return sub_24F8AA05C((uint64_t)v0);
}

uint64_t sub_24F8A4038(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t result = swift_beginAccess();
  uint64_t v6 = (void (*)(int *, uint64_t, uint64_t))off_269A2C420;
  if (off_269A2C420)
  {
    if (a3)
    {
      swift_retain();
      uint64_t v7 = sub_24F8CEED0();
      int v9 = a2;
      v6(&v9, v7, v8);
      sub_24F787238((uint64_t)v6);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *static Database.logError.getter()
{
  sub_24F773614();
  uint64_t v0 = off_269A2C420;
  sub_24F78C440((uint64_t)off_269A2C420);
  return v0;
}

uint64_t static Database.logError.setter(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = off_269A2C420;
  off_269A2C420 = a1;
  qword_269A2C428 = a2;
  sub_24F78C440((uint64_t)a1);
  sub_24F787238((uint64_t)v4);
  sub_24F8A3FD4();
  return sub_24F787238((uint64_t)a1);
}

uint64_t (*static Database.logError.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  sub_24F77DE44();
  return sub_24F8A4214;
}

uint64_t sub_24F8A4214(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_24F8A3FD4();
  }
  return result;
}

uint64_t Database.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F7EEC68(v1 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration, a1);
}

uint64_t Database.description.getter()
{
  return sub_24F76B8E8();
}

uint64_t Database.debugDescription.getter()
{
  return 0x736162617461443CLL;
}

uint64_t Database.totalChangesCount.getter()
{
  sub_24F782504();
  if (sub_24F780400())
  {
    sub_24F773614();
    return sqlite3_total_changes(*(sqlite3 **)(v0 + 16));
  }
  else
  {
    sub_24F770EAC();
    uint64_t result = sub_24F77E454();
    __break(1u);
  }
  return result;
}

uint64_t Database.lastErrorCode.getter@<X0>(_DWORD *a1@<X8>)
{
  sub_24F773614();
  uint64_t result = sqlite3_errcode(*(sqlite3 **)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_24F8A43DC()
{
  swift_retain();
  sub_24F8A21E4();
  return swift_release();
}

void sub_24F8A442C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24F773850();
  *(void *)(v5 + 16) = 0;
  uint64_t v10 = v5 + OBJC_IVAR____TtC12GRDBInternal8Database__lastSchemaVersion;
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = (void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database_schemaCache);
  sub_24F8AA184();
  uint64_t v12 = sub_24F8CEC70();
  *uint64_t v11 = 0;
  v11[1] = v12;
  sub_24F76B7D0(OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache);
  sub_24F76B7D0(OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache);
  *(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___authorizer) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___observationBroker) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database_isRecordingSelectedRegion) = 0;
  uint64_t v13 = OBJC_IVAR____TtC12GRDBInternal8Database_selectedRegion;
  sub_24F776A80();
  *(void *)(v5 + v13) = sub_24F8CEC70();
  *(unsigned char *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database_isInsideTransactionBlock) = 0;
  uint64_t v14 = OBJC_IVAR____TtC12GRDBInternal8Database__isSuspended;
  sub_24F781274(&qword_26B1F7EA0);
  swift_allocObject();
  *(void *)(v5 + v14) = sub_24F882610(0);
  sub_24F76B7D0(OBJC_IVAR____TtC12GRDBInternal8Database_journalModeCache);
  sub_24F76B7D0(OBJC_IVAR____TtC12GRDBInternal8Database_busyCallback);
  sub_24F76B7D0(OBJC_IVAR____TtC12GRDBInternal8Database_trace);
  uint64_t v15 = MEMORY[0x263F8EE88];
  *(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database_functions) = MEMORY[0x263F8EE88];
  *(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database_collations) = v15;
  *(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database__readOnlyDepth) = 0;
  if (*(unsigned char *)(a5 + 1)) {
    int v16 = 1;
  }
  else {
    int v16 = 6;
  }
  uint64_t v17 = type metadata accessor for Configuration();
  uint64_t v18 = sub_24F8A4794(a1, a2, v16 | (*(unsigned __int8 *)(a5 + *(int *)(v17 + 80)) << 15));
  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F7EECCC(a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F773140(*(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache), *(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache + 8));
    sub_24F773140(*(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache), *(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache + 8));
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_24F787238(*(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database_busyCallback));
    sub_24F787238(*(void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database_trace));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F76B8E8();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v5 + 16) = v19;
    uint64_t v20 = (void *)(v5 + OBJC_IVAR____TtC12GRDBInternal8Database_description);
    *uint64_t v20 = a3;
    v20[1] = a4;
    sub_24F8AA1D0(a5, v5 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration);
  }
  sub_24F781A20();
}

const char *sub_24F8A4794(uint64_t a1, uint64_t a2, int a3)
{
  v12[1] = *(sqlite3 **)MEMORY[0x263EF8340];
  v12[0] = 0;
  uint64_t v4 = sub_24F8CEE30();
  int v5 = sqlite3_open_v2((const char *)(v4 + 32), v12, a3, 0);
  swift_release();
  uint64_t result = (const char *)v12[0];
  if (v5)
  {
    sqlite3_close(v12[0]);
    sub_24F7DC6DC();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t result = sqlite3_errstr(v5);
    if (result)
    {
LABEL_3:
      uint64_t v9 = sub_24F8CEED0();
      *(_DWORD *)uint64_t v8 = v5;
      *(void *)(v8 + 8) = v9;
      *(void *)(v8 + 16) = v10;
      *(_OWORD *)(v8 + 24) = 0u;
      *(_OWORD *)(v8 + 40) = 0u;
      *(unsigned char *)(v8 + 56) = 0;
      return (const char *)swift_willThrow();
    }
    __break(1u);
  }
  else if (!v12[0])
  {
    sub_24F7DC6DC();
    swift_allocError();
    uint64_t v8 = v11;
    int v5 = 2;
    if (!sqlite3_errstr(2)) {
      __break(1u);
    }
    goto LABEL_3;
  }
  return result;
}

uint64_t Database.deinit()
{
  sub_24F7EECCC(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F773140(*(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache), *(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___internalStatementCache + 8));
  sub_24F773140(*(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache), *(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___publicStatementCache + 8));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F787238(*(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_busyCallback));
  sub_24F787238(*(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_trace));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Database.__deallocating_deinit()
{
  Database.deinit();
  sub_24F773850();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return MEMORY[0x270FA0228](v0, v2, v3);
}

uint64_t sub_24F8A4A24()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 1) == 1
    && (int v2 = v1[88], v2 != 255))
  {
    uint64_t v3 = (double *)(v1 + 72);
    uint64_t v4 = (uint64_t *)(v1 + 80);
  }
  else
  {
    uint64_t v3 = (double *)(v1 + 48);
    uint64_t v4 = (uint64_t *)(v1 + 56);
    int v2 = v1[64];
  }
  double v5 = *v3;
  if (!v2)
  {
    double v10 = v5 * 1000.0;
    if ((~COERCE__INT64(v5 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v10 > -2147483650.0)
      {
        if (v10 < 2147483650.0)
        {
          int v11 = (int)v10;
          swift_beginAccess();
          return sqlite3_busy_timeout(v0[2], v11);
        }
LABEL_15:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  if (v2 == 1)
  {
    uint64_t v6 = *v4;
    uint64_t v7 = (char *)v0 + OBJC_IVAR____TtC12GRDBInternal8Database_busyCallback;
    uint64_t v8 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC12GRDBInternal8Database_busyCallback);
    *(double *)uint64_t v7 = v5;
    *((void *)v7 + 1) = v6;
    sub_24F7EDD1C(*(uint64_t *)&v5, v6, 1);
    sub_24F7EDD1C(*(uint64_t *)&v5, v6, 1);
    swift_retain();
    sub_24F787238(v8);
    swift_beginAccess();
    sqlite3_busy_handler(v0[2], (int (__cdecl *)(void *, int))sub_24F8A514C, v0);
    sub_24F7EDD34(*(uint64_t *)&v5, v6, 1);
    return sub_24F7EDD34(*(uint64_t *)&v5, v6, 1);
  }
  return result;
}

uint64_t sub_24F8A4BB4()
{
  uint64_t v1 = (sqlite3 **)(v0 + 16);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 24) == 1)
  {
    swift_beginAccess();
    return sub_24F8AA13C(*v1);
  }
  else
  {
    swift_beginAccess();
    return sub_24F8AA0F8(*v1);
  }
}

uint64_t sub_24F8A4C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration) == 1)
  {
    v8[0] = MEMORY[0x263F8EE78];
    v8[1] = MEMORY[0x263F8EE80];
    v5._object = (void *)0x800000024F8D1ED0;
    uint64_t v6 = v8;
    v5._uint64_t countAndFlagsBits = 0xD000000000000018;
    Database.execute(sql:arguments:)(v5, *(GRDBInternal::StatementArguments *)(&a4 - 1));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F8A4CBC()
{
  if (qword_26B1F7F38 != -1) {
    swift_once();
  }
  Database.add(function:)();
  if (qword_26B1F7BB0 != -1) {
    swift_once();
  }
  Database.add(function:)();
  if (qword_26B1F7D98 != -1) {
    swift_once();
  }
  Database.add(function:)();
  if (qword_26B1F7D80 != -1) {
    swift_once();
  }
  Database.add(function:)();
  if (qword_26B1F7D60 != -1) {
    swift_once();
  }
  Database.add(function:)();
  if (qword_26B1F7D70 != -1) {
    swift_once();
  }
  return Database.add(function:)();
}

uint64_t sub_24F8A4E44()
{
  type metadata accessor for DatabaseCollation();
  swift_initStaticObject();
  Database.add(collation:)();
  swift_initStaticObject();
  Database.add(collation:)();
  swift_initStaticObject();
  Database.add(collation:)();
  swift_initStaticObject();
  Database.add(collation:)();
  swift_initStaticObject();
  return Database.add(collation:)();
}

uint64_t sub_24F8A4ED8()
{
  uint64_t v1 = (void *)sub_24F77CBA8(&OBJC_IVAR____TtC12GRDBInternal8Database____lazy_storage___authorizer, (void (*)(void))type metadata accessor for StatementAuthorizer, 66, sub_24F7EABD0);
  swift_release();
  swift_beginAccess();
  return sqlite3_set_authorizer(*(sqlite3 **)(v0 + 16), (int (__cdecl *)(void *, int, const char *, const char *, const char *, const char *))sub_24F785E28, v1);
}

const char *sub_24F8A4F6C()
{
  uint64_t v1 = (sqlite3 **)(v0 + 16);
  swift_beginAccess();
  uint64_t result = (const char *)sqlite3_extended_result_codes(*(sqlite3 **)(v0 + 16), 1);
  if (result)
  {
    int v3 = (int)result;
    uint64_t result = sqlite3_errmsg(*v1);
    if (result)
    {
      uint64_t v4 = sub_24F8CEED0();
      uint64_t v6 = v5;
      sub_24F7DC6DC();
      swift_allocError();
      *(_DWORD *)uint64_t v7 = v3;
      *(void *)(v7 + 8) = v4;
      *(void *)(v7 + 16) = v6;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(unsigned char *)(v7 + 56) = 0;
      return (const char *)swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24F8A5028()
{
  uint64_t result = sub_24F87F808(0xD000000000000023, 0x800000024F8D5200, 0);
  if (!v0)
  {
    v2[0] = 0;
    v2[1] = 0;
    sub_24F8987B8(v2);
    swift_release();
    sub_24F8AAD90();
    return swift_release();
  }
  return result;
}

uint64_t sub_24F8A50C0(uint64_t result, int a2)
{
  if (result)
  {
    int v3 = *(uint64_t (**)(void))(result + OBJC_IVAR____TtC12GRDBInternal8Database_busyCallback);
    uint64_t result = swift_retain();
    if (v3)
    {
      swift_retain();
      char v4 = v3(a2);
      sub_24F787238((uint64_t)v3);
      swift_release();
      return v4 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Database.add(function:)()
{
  sub_24F778D18();
  sub_24F780A08();
  uint64_t v1 = swift_retain();
  sub_24F8A88B8(v1, (uint64_t (*)(uint64_t, uint64_t))sub_24F8A9A8C, (uint64_t (*)(uint64_t, uint64_t))sub_24F8B7C70);
  sub_24F8AA45C();
  swift_release();
  return sub_24F8C0EA8(v0);
}

uint64_t Database.add(collation:)()
{
  sub_24F778D18();
  sub_24F780A08();
  uint64_t v2 = swift_retain();
  sub_24F8A88B8(v2, (uint64_t (*)(uint64_t, uint64_t))sub_24F8A9D28, (uint64_t (*)(uint64_t, uint64_t))sub_24F8B7E94);
  sub_24F8AA45C();
  swift_release();
  sub_24F773614();
  int v3 = *(sqlite3 **)(v0 + 16);
  uint64_t v4 = sub_24F8CEE30();
  collation_uint64_t v2 = sqlite3_create_collation_v2(v3, (const char *)(v4 + 32), 1, v1, (int (__cdecl *)(void *, int, const void *, int, const void *))sub_24F8A54D8, 0);
  uint64_t result = swift_release();
  if (collation_v2)
  {
    uint64_t v7 = (uint64_t)Database.lastErrorMessage.getter();
    if (!v8)
    {
      if (!sqlite3_errstr(collation_v2)) {
        __break(1u);
      }
      uint64_t v7 = sub_24F8CEED0();
    }
    *(void *)&long long v10 = v7;
    *((void *)&v10 + 1) = v8;
    swift_bridgeObjectRetain();
    sub_24F777E70(0);
    sub_24F7DC6DC();
    if (sub_24F8CFCC0())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F77835C(0);
    }
    else
    {
      swift_allocError();
      *(_DWORD *)uint64_t v9 = collation_v2;
      *(_OWORD *)(v9 + 8) = v10;
      *(_OWORD *)(v9 + 24) = 0u;
      *(_OWORD *)(v9 + 40) = 0u;
      *(unsigned char *)(v9 + 56) = 0;
    }
    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t Database.maximumStatementArgumentCount.getter()
{
  sub_24F773614();
  return sqlite3_limit(*(sqlite3 **)(v0 + 16), 9, -1);
}

uint64_t Database.remove(function:)()
{
  sub_24F778D18();
  sub_24F780A08();
  sub_24F8A7C2C(v1);
  sub_24F8AA45C();
  swift_release();
  return sub_24F8C1078(v0);
}

uint64_t sub_24F8A5438(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(result + 32);
    swift_retain();
    uint64_t v10 = v9(a2, a3, a4, a5);
    uint64_t result = swift_release();
    if (v10 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v10 <= 0x7FFFFFFF)
    {
      return v10;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Database.remove(collation:)()
{
  sub_24F778D18();
  sub_24F780A08();
  sub_24F8A7DD8();
  sub_24F8AA45C();
  swift_release();
  sub_24F773614();
  uint64_t v1 = *(sqlite3 **)(v0 + 16);
  uint64_t v2 = sub_24F8CEE30();
  sqlite3_create_collation_v2(v1, (const char *)(v2 + 32), 1, 0, 0, 0);
  return swift_release();
}

void sub_24F8A556C(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  sub_24F8A3628();
  if (!v1)
  {
    uint64_t v3 = swift_retain();
    a1(&v4, v3);
    sub_24F8A36D0();
    swift_release();
  }
}

uint64_t sub_24F8A5644(uint64_t *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_selectedRegion);
  swift_beginAccess();
  uint64_t v9 = *a1;
  uint64_t v11 = *v8;
  uint64_t v12 = v9;
  swift_bridgeObjectRetain();
  DatabaseRegion.union(_:)(&v11, &v13);
  swift_bridgeObjectRelease();
  *a1 = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a2 + OBJC_IVAR____TtC12GRDBInternal8Database_isRecordingSelectedRegion) = a3;
  if (a3)
  {
    uint64_t v11 = *v8;
    uint64_t v12 = a4;
    DatabaseRegion.union(_:)(&v11, &v13);
    *uint64_t v8 = v13;
  }
  else
  {
    *uint64_t v8 = a4;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

void static Database.TracingOptions.statement.getter(_DWORD *a1@<X8>)
{
}

uint64_t Database.trace(options:_:)(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unsigned int v7 = *a1;
  type metadata accessor for SchedulingWatchdog();
  if (sub_24F780400())
  {
    uint64_t v8 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC12GRDBInternal8Database_trace);
    uint64_t v9 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC12GRDBInternal8Database_trace);
    *uint64_t v8 = a2;
    v8[1] = a3;
    sub_24F78C440(a2);
    sub_24F787238(v9);
    if (v7 && a2)
    {
      sub_24F773614();
      uint64_t v10 = v4[2];
      uint64_t v11 = (int (__cdecl *)(unsigned int, void *, void *, void *))sub_24F8A59A4;
      unsigned int v12 = v7;
      uint64_t v13 = v4;
    }
    else
    {
      sub_24F773614();
      uint64_t v10 = v4[2];
      unsigned int v12 = 0;
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    return sqlite3_trace_v2(v10, v12, v11, v13);
  }
  else
  {
    sub_24F770EAC();
    uint64_t result = sub_24F77E454();
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8A584C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a2)
  {
    uint64_t v6 = result;
    swift_retain();
    sub_24F8A58BC(v6, a3, a4, MEMORY[0x263F8C7C0]);
    swift_release();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8A58BC(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(uint64_t *))(v4 + OBJC_IVAR____TtC12GRDBInternal8Database_trace);
  if (v5)
  {
    if (result == 2)
    {
      if (a2 && a3)
      {
        uint64_t v7 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 26);
        double v8 = (double)*a3 / 1000000000.0;
        uint64_t v9 = a2;
        uint64_t v10 = 0;
        uint64_t v11 = a4;
        unint64_t v12 = v7 | 0x8000000000000080;
        double v13 = v8;
        goto LABEL_10;
      }
    }
    else if (result == 1 && a2 && a3)
    {
      uint64_t v6 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC12GRDBInternal8Database_configuration + 26) | 0x80;
      uint64_t v9 = a2;
      uint64_t v10 = a3;
      uint64_t v11 = a4;
      unint64_t v12 = v6;
      double v13 = 0.0;
LABEL_10:
      swift_retain();
      v5(&v9);
      return sub_24F787238((uint64_t)v5);
    }
  }
  return result;
}

Swift::tuple_walFrameCount_Int_checkpointedFrameCount_Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.checkpoint(_:on:)(GRDBInternal::Database::CheckpointMode _, Swift::String_optional on)
{
  sub_24F77CEB0();
  uint64_t v4 = v3;
  uint64_t v19 = *MEMORY[0x263EF8340];
  int v6 = *v5;
  type metadata accessor for SchedulingWatchdog();
  if ((sub_24F78346C(v2) & 1) == 0) {
    goto LABEL_15;
  }
  int pnCkpt = -1;
  int pnLog = -1;
  sub_24F773614();
  uint64_t v7 = *(sqlite3 **)(v2 + 16);
  if (v4) {
    double v8 = (const char *)(sub_24F8CEE30() + 32);
  }
  else {
    double v8 = 0;
  }
  int v9 = sqlite3_wal_checkpoint_v2(v7, v8, v6, &pnLog, &pnCkpt);
  swift_unknownObjectRelease();
  if (!v9) {
    goto LABEL_9;
  }
  if (v9 != 21)
  {
    uint64_t v7 = (sqlite3 *)v2;
    uint64_t v12 = (uint64_t)Database.lastErrorMessage.getter();
    uint64_t v14 = v13;
    sub_24F7DC6DC();
    sub_24F770FA4();
    sub_24F77C904();
    if (v14)
    {
LABEL_13:
      *(_DWORD *)uint64_t v7 = v9;
      *((void *)v7 + 1) = v12;
      *((void *)v7 + 2) = v14;
      Swift::Int v10 = sub_24F8AA2E8();
      goto LABEL_16;
    }
    if (sqlite3_errstr(v9))
    {
LABEL_12:
      uint64_t v12 = sub_24F8CEED0();
      uint64_t v14 = v15;
      goto LABEL_13;
    }
    __break(1u);
LABEL_15:
    sub_24F770EAC();
    Swift::Int v10 = sub_24F8CF9D0();
    __break(1u);
    goto LABEL_16;
  }
  sub_24F7DC6DC();
  sub_24F770FA4();
  sub_24F77C904();
  if (sqlite3_errstr(21)) {
    goto LABEL_12;
  }
  __break(1u);
LABEL_9:
  Swift::Int v11 = pnCkpt;
  Swift::Int v10 = pnLog;
LABEL_16:
  result.checkpointedFrameCount = v11;
  result.walFrameCount = v10;
  return result;
}

uint64_t Database.CheckpointMode.rawValue.getter()
{
  return *v0;
}

uint64_t sub_24F8A5B6C()
{
  sub_24F780D68();
  uint64_t result = sub_24F8CED70();
  qword_269A2C430 = result;
  return result;
}

id static Database.suspendNotification.getter()
{
  return sub_24F8A5C18(&qword_269A2A370, (void **)&qword_269A2C430);
}

uint64_t sub_24F8A5BBC()
{
  uint64_t result = sub_24F8CED70();
  qword_269A2C438 = result;
  return result;
}

id static Database.resumeNotification.getter()
{
  return sub_24F8A5C18(&qword_269A2A378, (void **)&qword_269A2C438);
}

id sub_24F8A5C18(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

const char *sub_24F8A5C64()
{
  ppStmt[1] = *(sqlite3_stmt **)MEMORY[0x263EF8340];
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_journalModeCache);
  if (*(void *)(v0 + OBJC_IVAR____TtC12GRDBInternal8Database_journalModeCache + 8))
  {
    uint64_t v2 = *v1;
LABEL_5:
    swift_bridgeObjectRetain();
    return (const char *)v2;
  }
  ppStmt[0] = 0;
  swift_beginAccess();
  sqlite3_prepare_v2(*(sqlite3 **)(v0 + 16), "PRAGMA journal_mode", -1, ppStmt, 0);
  uint64_t v3 = ppStmt[0];
  sqlite3_step(ppStmt[0]);
  if (sqlite3_column_text(v3, 0))
  {
    uint64_t v2 = sub_24F8CEEE0();
    *uint64_t v1 = v2;
    v1[1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sqlite3_finalize(v3);
    goto LABEL_5;
  }
  Database.lastErrorCode.getter(&v12);
  int v6 = v12;
  uint64_t v7 = (uint64_t)Database.lastErrorMessage.getter();
  uint64_t v9 = v8;
  sub_24F7DC6DC();
  swift_allocError();
  uint64_t v2 = v10;
  if (v9)
  {
LABEL_10:
    *(_DWORD *)uint64_t v2 = v6;
    *(void *)(v2 + 8) = v7;
    *(void *)(v2 + 16) = v9;
    *(void *)(v2 + 24) = 0xD000000000000013;
    *(void *)(v2 + 32) = 0x800000024F8D3720;
    *(void *)(v2 + 40) = 0;
    *(void *)(v2 + 48) = 0;
    *(unsigned char *)(v2 + 56) = 0;
    swift_willThrow();
    sqlite3_finalize(ppStmt[0]);
    return (const char *)v2;
  }
  uint64_t result = sqlite3_errstr(v6);
  if (result)
  {
    uint64_t v7 = sub_24F8CEED0();
    uint64_t v9 = v11;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8A5E10()
{
  return 0;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Database.rollback()()
{
  if (Database.isInsideTransaction.getter())
  {
    sub_24F77231C();
    v0._uint64_t countAndFlagsBits = 0xD000000000000014;
    Database.execute(sql:arguments:)(v0, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24F8A5E9C()
{
  return Database.inSavepoint(_:)(sub_24F8AA244);
}

uint64_t sub_24F8A5EE8(unsigned char *a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t a4)
{
  a2(&v7, a4);
  if (!v4) {
    *a1 = 0;
  }
  swift_release();
  return 0;
}

uint64_t sub_24F8A5F44(unsigned char *a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t a4)
{
  LOBYTE(a3) = sub_24F8A5EE8(a1, a2, a3, a4);
  swift_release();
  return a3 & 1;
}

uint64_t Database.TransactionKind.rawValue.getter()
{
  uint64_t v1 = 0x54414944454D4D49;
  if (*v0 != 1) {
    uint64_t v1 = 0x564953554C435845;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4445525245464544;
  }
}

void Database.backup(to:pagesPerStep:progress:)(uint64_t a1, int a2, void (*a3)(char *))
{
}

uint64_t sub_24F8A6038()
{
  return Database.description.getter();
}

uint64_t sub_24F8A605C()
{
  return Database.debugDescription.getter();
}

GRDBInternal::Database::CheckpointMode_optional __swiftcall Database.CheckpointMode.init(rawValue:)(Swift::Int32 rawValue)
{
  if (rawValue >= 4) {
    char v2 = 4;
  }
  else {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (GRDBInternal::Database::CheckpointMode_optional)rawValue;
}

uint64_t sub_24F8A6094()
{
  return sub_24F8A2354();
}

uint64_t sub_24F8A609C()
{
  return sub_24F8A268C();
}

uint64_t sub_24F8A60A4()
{
  return sub_24F8A29B8();
}

GRDBInternal::Database::CheckpointMode_optional sub_24F8A60AC(Swift::Int32 *a1)
{
  return Database.CheckpointMode.init(rawValue:)(*a1);
}

uint64_t sub_24F8A60B4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = Database.CheckpointMode.rawValue.getter();
  *a1 = result;
  return result;
}

void static Database.CollationName.binary.getter(void *a1@<X8>)
{
}

void static Database.CollationName.nocase.getter(void *a1@<X8>)
{
}

void static Database.CollationName.rtrim.getter(void *a1@<X8>)
{
}

void *sub_24F8A6118@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24F8A6200(a1, (void *(*)(void *__return_ptr, void, void))Database.CollationName.init(rawValue:), a2);
}

uint64_t sub_24F8A6130(void *a1, void *a2)
{
  return sub_24F7DCBC4(*a1, a1[1], *a2, a2[1]);
}

uint64_t Database.ColumnType.rawValue.getter()
{
  return sub_24F76B8E8();
}

GRDBInternal::Database::ColumnType __swiftcall Database.ColumnType.init(rawValue:)(GRDBInternal::Database::ColumnType rawValue)
{
  *uint64_t v1 = rawValue;
  return rawValue;
}

void static Database.ColumnType.real.getter(void *a1@<X8>)
{
}

void static Database.ColumnType.numeric.getter(void *a1@<X8>)
{
}

void static Database.ColumnType.BOOLean.getter(void *a1@<X8>)
{
}

void static Database.ColumnType.blob.getter(void *a1@<X8>)
{
}

void static Database.ColumnType.date.getter(void *a1@<X8>)
{
}

void static Database.ColumnType.any.getter(void *a1@<X8>)
{
}

void *sub_24F8A61E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24F8A6200(a1, (void *(*)(void *__return_ptr, void, void))Database.ColumnType.init(rawValue:), a2);
}

void *sub_24F8A6200@<X0>(void *a1@<X0>, void *(*a2)(void *__return_ptr, void, void)@<X3>, void *a3@<X8>)
{
  uint64_t result = a2(v6, *a1, a1[1]);
  uint64_t v5 = v6[1];
  *a3 = v6[0];
  a3[1] = v5;
  return result;
}

uint64_t sub_24F8A6244@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Database.ColumnType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24F8A626C()
{
  return sub_24F8A239C();
}

uint64_t sub_24F8A6288()
{
  return sub_24F87C6A0();
}

uint64_t sub_24F8A62A4()
{
  return sub_24F8A29FC();
}

GRDBInternal::Database::ConflictResolution_optional __swiftcall Database.ConflictResolution.init(rawValue:)(Swift::String rawValue)
{
  sub_24F785754();
  unint64_t v2 = sub_24F8CFA50();
  result.value = swift_bridgeObjectRelease();
  char v4 = 5;
  if (v2 < 5) {
    char v4 = v2;
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24F8A6314(unsigned __int8 *a1, char *a2)
{
  return sub_24F7DA260(*a1, *a2);
}

uint64_t sub_24F8A6320()
{
  return sub_24F8A23F4(*v0, (void (*)(unsigned char *, uint64_t))sub_24F8A2454);
}

uint64_t sub_24F8A6350()
{
  return sub_24F8A2454();
}

uint64_t sub_24F8A6358(uint64_t a1)
{
  return sub_24F8A2B04(a1, *v1, (void (*)(unsigned char *, uint64_t))sub_24F8A2454);
}

GRDBInternal::Database::ConflictResolution_optional sub_24F8A6388(Swift::String *a1)
{
  return Database.ConflictResolution.init(rawValue:)(*a1);
}

uint64_t sub_24F8A6394@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Database.ConflictResolution.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

GRDBInternal::Database::ForeignKeyAction_optional __swiftcall Database.ForeignKeyAction.init(rawValue:)(Swift::String rawValue)
{
  sub_24F785754();
  unint64_t v2 = sub_24F8CFA50();
  result.value = swift_bridgeObjectRelease();
  char v4 = 4;
  if (v2 < 4) {
    char v4 = v2;
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24F8A6410(unsigned __int8 *a1, char *a2)
{
  return sub_24F7DA3E4(*a1, *a2);
}

uint64_t sub_24F8A641C()
{
  return sub_24F8A23F4(*v0, (void (*)(unsigned char *, uint64_t))sub_24F8A2528);
}

uint64_t sub_24F8A644C()
{
  return sub_24F8A2528();
}

uint64_t sub_24F8A6454(uint64_t a1)
{
  return sub_24F8A2B04(a1, *v1, (void (*)(unsigned char *, uint64_t))sub_24F8A2528);
}

GRDBInternal::Database::ForeignKeyAction_optional sub_24F8A6484(Swift::String *a1)
{
  return Database.ForeignKeyAction.init(rawValue:)(*a1);
}

uint64_t sub_24F8A6490@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Database.ForeignKeyAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t Database.TracingOptions.rawValue.getter()
{
  return *v0;
}

uint64_t Database.TracingOptions.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static Database.TracingOptions.profile.getter(_DWORD *a1@<X8>)
{
}

uint64_t sub_24F8A64D0@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  return Database.TracingOptions.init(rawValue:)(*a1, a2);
}

void sub_24F8A64D8(int *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_24F8A64F4(int *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_24F8A6510@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = Database.TracingOptions.init(rawValue:)(*a1, (_DWORD *)a2);
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_24F8A653C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = Database.TracingOptions.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_24F8A6564@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24F8A2C00(a1, a2);
}

uint64_t Database.TraceEvent.Statement.sql.getter()
{
  return sub_24F8A65C0();
}

uint64_t sub_24F8A65C0()
{
  if ((*(char *)(v0 + 24) & 0x80000000) == 0) {
    goto LABEL_8;
  }
  if (!*(void *)(v0 + 8) && !sqlite3_sql(*(sqlite3_stmt **)v0))
  {
    __break(1u);
LABEL_8:
    sub_24F770EAC();
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
    return result;
  }
  sub_24F8CEED0();
  if (qword_26B1F5580 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24F8CE660();
  sub_24F79F3A0(v1, (uint64_t)qword_26B1FAB00);
  sub_24F7B0E7C();
  sub_24F8CF690();
  sub_24F77C904();
  swift_bridgeObjectRelease();
  return sub_24F76B8E8();
}

uint64_t Database.TraceEvent.Statement.expandedSQL.getter()
{
  uint64_t v1 = *v0;
  if ((char)v0[3] < 0)
  {
    uint64_t v2 = ((uint64_t (*)(uint64_t))v0[2])(*v0);
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      sub_24F8CEED0();
      if (qword_26B1F5580 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_24F8CE660();
      sub_24F79F3A0(v4, (uint64_t)qword_26B1FAB00);
      sub_24F7B0E7C();
      uint64_t v1 = sub_24F8CF690();
      swift_bridgeObjectRelease();
      sqlite3_free(v3);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t Database.TraceEvent.Statement.description.getter()
{
  int v1 = *(char *)(v0 + 24);
  if (v1 < 0)
  {
    if (v1)
    {
      uint64_t v2 = (*(uint64_t (**)(void))(v0 + 16))(*(void *)v0);
      if (v2)
      {
        uint64_t v3 = (void *)v2;
        sub_24F8CEED0();
        if (qword_26B1F5580 != -1) {
          swift_once();
        }
        uint64_t v4 = sub_24F8CE660();
        sub_24F79F3A0(v4, (uint64_t)qword_26B1FAB00);
        sub_24F7B0E7C();
        sub_24F8CF690();
        swift_bridgeObjectRelease();
        sqlite3_free(v3);
        sub_24F77098C();
      }
      else
      {
        sub_24F77098C();
      }
    }
    else
    {
      sub_24F8A65C0();
      sub_24F77C904();
    }
  }
  else
  {
    sub_24F8A89CC(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  }
  return sub_24F76B8E8();
}

uint64_t Database.TraceEvent.description.getter()
{
  sub_24F776058();
  if (v4 < 0)
  {
    sub_24F781274(&qword_269A2BD68);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = MEMORY[0x263F8D538];
    *(_OWORD *)(v6 + 16) = xmmword_24F8DDBF0;
    uint64_t v8 = MEMORY[0x263F8D5B8];
    *(void *)(v6 + 56) = v7;
    *(void *)(v6 + 64) = v8;
    *(void *)(v6 + 32) = v3;
    sub_24F8CEDB0();
    sub_24F8CEEB0();
    if (v5 < 0)
    {
      if (v4)
      {
        uint64_t v12 = v2(v0);
        if (v12)
        {
          uint64_t v13 = (void *)v12;
          sub_24F8CEED0();
          if (qword_26B1F5580 != -1) {
            swift_once();
          }
          uint64_t v14 = sub_24F8CE660();
          sub_24F79F3A0(v14, (uint64_t)qword_26B1FAB00);
          sub_24F7B0E7C();
          sub_24F8CF690();
          swift_bridgeObjectRelease();
          sqlite3_free(v13);
          sub_24F8AA40C();
        }
        else
        {
          sub_24F780ED0();
        }
      }
      else
      {
        sub_24F776154();
      }
    }
    else
    {
      sub_24F8AA2B0();
    }
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
  }
  else if (v5 < 0)
  {
    if (v4)
    {
      uint64_t v9 = v2(v0);
      if (v9)
      {
        uint64_t v10 = (void *)v9;
        sub_24F8CEED0();
        if (qword_26B1F5580 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_24F8CE660();
        sub_24F79F3A0(v11, (uint64_t)qword_26B1FAB00);
        sub_24F7B0E7C();
        sub_24F8CF690();
        swift_bridgeObjectRelease();
        sqlite3_free(v10);
        sub_24F775E14();
      }
      else
      {
        sub_24F775E14();
      }
    }
    else
    {
      sub_24F776154();
      sub_24F8A89DC(v0, v1, v2, v4, v3);
    }
  }
  else
  {
    sub_24F8AA2B0();
  }
  return sub_24F76B8E8();
}

uint64_t Database.TraceEvent.expandedDescription.getter()
{
  sub_24F776058();
  if (v4 < 0)
  {
    sub_24F781274(&qword_269A2BD68);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = MEMORY[0x263F8D538];
    *(_OWORD *)(v6 + 16) = xmmword_24F8DDBF0;
    uint64_t v8 = MEMORY[0x263F8D5B8];
    *(void *)(v6 + 56) = v7;
    *(void *)(v6 + 64) = v8;
    *(void *)(v6 + 32) = v3;
    sub_24F8AA2B0();
    sub_24F8CEDB0();
    sub_24F8CEEB0();
    if (v5 < 0)
    {
      uint64_t v12 = v2(v0);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        sub_24F8CEED0();
        if (qword_26B1F5580 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_24F8CE660();
        sub_24F79F3A0(v14, (uint64_t)qword_26B1FAB00);
        sub_24F7B0E7C();
        sub_24F8CF690();
        swift_bridgeObjectRelease();
        sqlite3_free(v13);
        sub_24F8AA40C();
      }
      else
      {
        sub_24F780ED0();
      }
    }
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
  }
  else if (v5 < 0)
  {
    uint64_t v9 = v2(v0);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      sub_24F8CEED0();
      if (qword_26B1F5580 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_24F8CE660();
      sub_24F79F3A0(v11, (uint64_t)qword_26B1FAB00);
      sub_24F7B0E7C();
      sub_24F8CF690();
      swift_bridgeObjectRelease();
      sqlite3_free(v10);
      sub_24F8A89DC(v0, v1, v2, v4, v3);
    }
    else
    {
      sub_24F8A89DC(v0, v1, v2, v4, v3);
    }
  }
  else
  {
    sub_24F8A89CC(v0, v1, (uint64_t)v2, v5);
  }
  return sub_24F76B8E8();
}

BOOL static Database.TransactionCompletion.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t Database.TransactionCompletion.hash(into:)()
{
  return sub_24F8CFF40();
}

uint64_t Database.TransactionCompletion.hashValue.getter()
{
  return sub_24F8CFF80();
}

BOOL sub_24F8A6E60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static Database.TransactionCompletion.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_24F8A6E6C()
{
  return Database.TransactionCompletion.hashValue.getter();
}

uint64_t sub_24F8A6E74()
{
  return Database.TransactionCompletion.hash(into:)();
}

GRDBInternal::Database::TransactionKind_optional __swiftcall Database.TransactionKind.init(rawValue:)(Swift::String rawValue)
{
  sub_24F785754();
  unint64_t v2 = sub_24F8CFA50();
  result.value = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24F8A6ED0()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8A6F10(char *a1, char *a2)
{
  return sub_24F7DA560(*a1, *a2);
}

uint64_t sub_24F8A6F1C()
{
  return sub_24F8A243C();
}

uint64_t sub_24F8A6F24()
{
  return sub_24F8A25F8();
}

uint64_t sub_24F8A6F2C()
{
  return sub_24F8A2910();
}

GRDBInternal::Database::TransactionKind_optional sub_24F8A6F34(Swift::String *a1)
{
  return Database.TransactionKind.init(rawValue:)(*a1);
}

uint64_t sub_24F8A6F40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Database.TransactionKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24F8A6F68()
{
  return sub_24F8A6ED0();
}

uint64_t sub_24F8A6F70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v176 = *MEMORY[0x263EF8340];
  uint64_t v8 = *v4;
  uint64_t __s2 = a1;
  unint64_t v174 = a2;
  char v175 = a3;
  sub_24F8CFF30();
  swift_bridgeObjectRetain();
  DatabaseValue.hash(into:)();
  uint64_t v9 = sub_24F8CFF80();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_165:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(unsigned char *)(a4 + 16) = -1;
    return result;
  }
  uint64_t v171 = ~v10;
  BOOL v14 = a3 == 4 && (a2 | a1) == 0;
  BOOL v169 = v14;
  unint64_t v168 = a2 >> 62;
  unint64_t v163 = HIDWORD(a1);
  BOOL v15 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v164 = v15;
  uint64_t v162 = a1 >> 32;
  uint64_t v161 = (a1 >> 32) - (int)a1;
  BOOL v16 = *(double *)&a1 > -9.22337204e18;
  if (*(double *)&a1 >= 9.22337204e18) {
    BOOL v16 = 0;
  }
  if (trunc(*(double *)&a1) != *(double *)&a1) {
    BOOL v16 = 0;
  }
  BOOL v166 = v16;
  while (2)
  {
    uint64_t v17 = *(void *)(v8 + 48) + 24 * v11;
    uint64_t v18 = *(uint64_t *)v17;
    unint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    switch(v20)
    {
      case 1:
        if (a3)
        {
          if (a3 != 1) {
            goto LABEL_41;
          }
          uint64_t v170 = 24 * v11;
          uint64_t v26 = sub_24F8AA3C0(v18, v19, 1);
          sub_24F781F10(v26, v27, 1);
          if (*(double *)&v18 == *(double *)&a1) {
            goto LABEL_169;
          }
        }
        else
        {
          uint64_t v170 = 24 * v11;
          uint64_t v38 = sub_24F8AA394(v18, v19, 1);
          sub_24F781F10(v38, v39, 1);
          double v40 = trunc(*(double *)&v18);
          BOOL v41 = *(double *)&v18 > -9.22337204e18 && *(double *)&v18 < 9.22337204e18;
          if (v41 && v40 == *(double *)&v18 && (uint64_t)*(double *)&v18 == a1) {
            goto LABEL_169;
          }
        }
        goto LABEL_42;
      case 2:
        if (a3 != 2)
        {
          sub_24F781F34(v18, v19, 2);
          swift_bridgeObjectRetain();
LABEL_41:
          sub_24F781F34(a1, a2, a3);
          uint64_t v32 = sub_24F772990();
          sub_24F781F10(v32, v33, v20);
          sub_24F781F10(a1, a2, a3);
          uint64_t v34 = sub_24F772990();
          sub_24F781F10(v34, v35, v20);
LABEL_42:
          unint64_t v11 = (v11 + 1) & v171;
          if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            goto LABEL_165;
          }
          continue;
        }
        uint64_t v170 = 24 * v11;
        if (v18 != a1 || v19 != a2)
        {
          sub_24F772990();
          char v25 = sub_24F8CFD00();
          sub_24F781F34(a1, a2, 2);
          sub_24F781F34(v18, v19, 2);
          sub_24F781F10(v18, v19, 2);
          sub_24F781F10(a1, a2, 2);
          if (v25) {
            goto LABEL_169;
          }
          goto LABEL_42;
        }
        sub_24F781F34(a1, a2, 2);
        sub_24F781F34(a1, a2, 2);
        sub_24F781F10(a1, a2, 2);
        uint64_t v130 = a1;
        unint64_t v131 = a2;
        char v132 = 2;
LABEL_168:
        sub_24F781F10(v130, v131, v132);
LABEL_169:
        swift_bridgeObjectRelease();
        uint64_t v28 = v165;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v134 = *v165;
        *(void *)__s1 = *v165;
        *uint64_t v165 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
LABEL_175:
          sub_24F8BB8D0();
          uint64_t v134 = *(void *)__s1;
        }
        uint64_t v135 = *(void *)(v134 + 48) + v170;
        char v136 = *(unsigned char *)(v135 + 16);
        *(_OWORD *)a4 = *(_OWORD *)v135;
        *(unsigned char *)(a4 + 16) = v136;
        sub_24F8A82D4(v11);
        *uint64_t v28 = *(void *)__s1;
        return swift_bridgeObjectRelease();
      case 3:
        if (a3 != 3)
        {
          sub_24F781F34(v18, v19, 3);
          uint64_t v30 = sub_24F772990();
          sub_24F78419C(v30, v31);
          goto LABEL_41;
        }
        uint64_t v170 = 24 * v11;
        uint64_t v28 = (void *)(v19 >> 62);
        uint64_t v29 = 0;
        switch(v19 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v18), v18))
            {
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
              goto LABEL_175;
            }
            uint64_t v29 = HIDWORD(v18) - (int)v18;
LABEL_61:
            sub_24F781F34(v18, v19, 3);
LABEL_62:
            uint64_t v46 = BYTE6(a2);
            switch((int)v168)
            {
              case 1:
                uint64_t v46 = HIDWORD(a1) - (int)a1;
                if (v164) {
                  goto LABEL_173;
                }
                goto LABEL_66;
              case 2:
                uint64_t v48 = *(void *)(a1 + 16);
                uint64_t v47 = *(void *)(a1 + 24);
                BOOL v49 = __OFSUB__(v47, v48);
                uint64_t v46 = v47 - v48;
                if (!v49) {
                  goto LABEL_66;
                }
                goto LABEL_174;
              case 3:
                if (v29) {
                  goto LABEL_78;
                }
                goto LABEL_167;
              default:
LABEL_66:
                if (v29 == v46)
                {
                  if (v29 < 1)
                  {
LABEL_167:
                    uint64_t v130 = sub_24F7774B4();
                    goto LABEL_168;
                  }
                  switch((int)v28)
                  {
                    case 1:
                      sub_24F785978();
                      if ((int)v18 > v18 >> 32)
                      {
                        __break(1u);
LABEL_177:
                        __break(1u);
LABEL_178:
                        __break(1u);
LABEL_179:
                        __break(1u);
LABEL_180:
                        __break(1u);
LABEL_181:
                        __break(1u);
LABEL_182:
                        __break(1u);
LABEL_183:
                        __break(1u);
LABEL_184:
                        __break(1u);
LABEL_185:
                        __break(1u);
LABEL_186:
                        __break(1u);
LABEL_187:
                        __break(1u);
LABEL_188:
                        __break(1u);
LABEL_189:
                        __break(1u);
LABEL_190:
                        __break(1u);
LABEL_191:
                        __break(1u);
LABEL_192:
                        __break(1u);
LABEL_193:
                        __break(1u);
LABEL_194:
                        __break(1u);
                      }
                      sub_24F781F34(a1, a2, 3);
                      sub_24F781F34(a1, a2, 3);
                      sub_24F781F34(a1, a2, 3);
                      sub_24F773DB0(v18, v19);
                      uint64_t v56 = sub_24F8CE6A0();
                      if (v56)
                      {
                        uint64_t v57 = v56;
                        uint64_t v58 = sub_24F8CE6C0();
                        if (__OFSUB__((int)v18, v58)) {
                          goto LABEL_178;
                        }
                        uint64_t v138 = (void *)(v57 + (int)v18 - v58);
                      }
                      else
                      {
                        uint64_t v138 = 0;
                      }
                      uint64_t v12 = v8 + 56;
                      uint64_t v89 = sub_24F8CE6B0();
                      if (v168)
                      {
                        if (v168 == 1)
                        {
                          sub_24F781EB4();
                          if (v41 != v49) {
                            goto LABEL_185;
                          }
                          sub_24F8AA2D0();
                          uint64_t v97 = (char *)sub_24F8CE6A0();
                          if (v97)
                          {
                            sub_24F8CE6C0();
                            sub_24F8AA340();
                            if (v49) {
                              goto LABEL_194;
                            }
                            v97 += v98;
                          }
                          uint64_t v99 = sub_24F8CE6B0();
                          uint64_t v107 = (const void *)sub_24F8AA30C(v99, v100, v101, v102, v103, v104, v105, v106, v137, (uint64_t)v138);
                          if (!v107) {
                            goto LABEL_198;
                          }
                          if (!v97) {
                            goto LABEL_199;
                          }
                          int v66 = memcmp(v107, v97, v108);
                          sub_24F781F10(a1, a2, 3);
                        }
                        else
                        {
                          uint64_t v123 = *(void *)(a1 + 16);
                          uint64_t v160 = *(void *)(a1 + 24);
                          swift_retain();
                          sub_24F8AA2D0();
                          long long v124 = (char *)sub_24F8CE6A0();
                          if (v124)
                          {
                            uint64_t v125 = sub_24F8CE6C0();
                            if (__OFSUB__(v123, v125)) {
                              goto LABEL_193;
                            }
                            v124 += v123 - v125;
                          }
                          BOOL v49 = __OFSUB__(v160, v123);
                          int64_t v126 = v160 - v123;
                          if (v49) {
                            goto LABEL_186;
                          }
                          uint64_t v127 = sub_24F8CE6B0();
                          if (v127 >= v126) {
                            size_t v128 = v126;
                          }
                          else {
                            size_t v128 = v127;
                          }
                          if (!v138) {
                            goto LABEL_206;
                          }
                          uint64_t v12 = v8 + 56;
                          if (!v124) {
                            goto LABEL_207;
                          }
                          int v66 = memcmp(v138, v124, v128);
                          swift_release();
                          swift_release();
                        }
                      }
                      else
                      {
                        int v122 = (const void *)sub_24F7801D8(v89, v90, v91, v92, v93, v94, v95, v96, v137, (uint64_t)v138, v141, v142, v143, v144, v145, v146, v147, v148, v149,
                                               v150,
                                               v151,
                                               v152,
                                               v153,
                                               v154,
                                               v155,
                                               v156,
                                               v157,
                                               v158,
                                               v159,
                                               SHIDWORD(v159),
                                               v160,
                                               v161,
                                               v162,
                                               v163);
                        if (!v122) {
                          goto LABEL_205;
                        }
                        int v66 = memcmp(v122, __s1, BYTE6(a2));
                      }
                      sub_24F781F10(a1, a2, 3);
                      sub_24F781F10(v18, v19, 3);
LABEL_163:
                      sub_24F77F9A4();
                      if (!v66) {
                        goto LABEL_169;
                      }
                      break;
                    case 2:
                      sub_24F785978();
                      uint64_t v59 = *(char **)(v18 + 16);
                      sub_24F781F34(a1, a2, 3);
                      sub_24F781F34(a1, a2, 3);
                      sub_24F773DB0(a1, a2);
                      swift_retain();
                      swift_retain();
                      uint64_t v60 = sub_24F8CE6A0();
                      if (v60)
                      {
                        uint64_t v61 = v60;
                        uint64_t v139 = v59;
                        uint64_t v62 = v19 & 0x3FFFFFFFFFFFFFFFLL;
                        uint64_t v63 = sub_24F8CE6C0();
                        if (__OFSUB__(v139, v63)) {
                          goto LABEL_177;
                        }
                        uint64_t v140 = &v139[v61 - v63];
                      }
                      else
                      {
                        uint64_t v62 = v19 & 0x3FFFFFFFFFFFFFFFLL;
                        uint64_t v140 = 0;
                      }
                      int v68 = v62;
                      uint64_t v69 = sub_24F8CE6B0();
                      uint64_t v12 = v8 + 56;
                      if (v168)
                      {
                        if (v168 == 1)
                        {
                          sub_24F781EB4();
                          if (v41 != v49) {
                            goto LABEL_181;
                          }
                          swift_retain();
                          uint64_t v77 = (char *)sub_24F8CE6A0();
                          if (v77)
                          {
                            sub_24F8CE6C0();
                            sub_24F8AA340();
                            if (v49) {
                              goto LABEL_192;
                            }
                            v77 += v78;
                          }
                          int v68 = a2;
                          uint64_t v79 = sub_24F8CE6B0();
                          uint64_t v87 = (const void *)sub_24F8AA30C(v79, v80, v81, v82, v83, v84, v85, v86, v137, (uint64_t)v140);
                          if (!v87) {
                            goto LABEL_196;
                          }
                          if (!v77) {
                            goto LABEL_197;
                          }
                          memcmp(v87, v77, v88);
                          sub_24F7850B8();
                        }
                        else
                        {
                          uint64_t v159 = v62;
                          uint64_t v116 = *(void *)(a1 + 16);
                          uint64_t v160 = *(void *)(a1 + 24);
                          swift_retain();
                          sub_24F8AA2D0();
                          uint64_t v117 = (char *)sub_24F8CE6A0();
                          if (v117)
                          {
                            uint64_t v118 = sub_24F8CE6C0();
                            if (__OFSUB__(v116, v118)) {
                              goto LABEL_189;
                            }
                            v117 += v116 - v118;
                          }
                          BOOL v49 = __OFSUB__(v160, v116);
                          int64_t v119 = v160 - v116;
                          if (v49) {
                            goto LABEL_184;
                          }
                          uint64_t v120 = sub_24F8CE6B0();
                          if (v120 >= v119) {
                            size_t v121 = v119;
                          }
                          else {
                            size_t v121 = v120;
                          }
                          if (!v140) {
                            goto LABEL_203;
                          }
                          if (!v117) {
                            goto LABEL_204;
                          }
                          int v68 = memcmp(v140, v117, v121);
                          swift_release();
                          swift_release();
                        }
                        sub_24F781F10(a1, a2, 3);
                        swift_release();
                        swift_release();
                        uint64_t v12 = v8 + 56;
                      }
                      else
                      {
                        uint64_t v115 = (const void *)sub_24F7801D8(v69, v70, v71, v72, v73, v74, v75, v76, v137, (uint64_t)v140, v141, v142, v143, v144, v145, v146, v147, v148, v149,
                                               v150,
                                               v151,
                                               v152,
                                               v153,
                                               v154,
                                               v155,
                                               v156,
                                               v157,
                                               v158,
                                               v159,
                                               SHIDWORD(v159),
                                               v160,
                                               v161,
                                               v162,
                                               v163);
                        if (!v115) {
                          goto LABEL_202;
                        }
                        memcmp(v115, __s1, BYTE6(a2));
                        sub_24F7850B8();
                        swift_release();
                        swift_release();
                      }
                      sub_24F77F9A4();
                      if (!v68) {
                        goto LABEL_169;
                      }
                      goto LABEL_42;
                    case 3:
                      *(void *)&__s1[6] = 0;
                      *(void *)__s1 = 0;
                      if (!v168) {
                        goto LABEL_97;
                      }
                      if (v168 == 1)
                      {
                        sub_24F781EB4();
                        uint64_t v12 = v8 + 56;
                        if (v41 != v49) {
                          goto LABEL_180;
                        }
                        Swift::String v50 = (char *)sub_24F783258();
                        if (v50)
                        {
                          sub_24F8CE6C0();
                          sub_24F8AA340();
                          if (v49) {
                            goto LABEL_191;
                          }
                          v50 += v64;
                        }
                        uint64_t v52 = sub_24F8CE6B0();
                        if (!v50) {
                          goto LABEL_195;
                        }
LABEL_93:
                        if (v52 >= v161) {
                          size_t v65 = v161;
                        }
                        else {
                          size_t v65 = v52;
                        }
                        int v66 = memcmp(__s1, v50, v65);
                        goto LABEL_163;
                      }
                      sub_24F77EBFC();
                      sub_24F8AA2D0();
                      uint64_t v109 = (char *)sub_24F8CE6A0();
                      if (v109)
                      {
                        uint64_t v113 = sub_24F8CE6C0();
                        if (__OFSUB__(v29, v113)) {
                          goto LABEL_188;
                        }
                        v109 += v29 - v113;
                      }
                      BOOL v49 = __OFSUB__(v160, v29);
                      int64_t v111 = v160 - v29;
                      if (v49) {
                        goto LABEL_183;
                      }
                      uint64_t v112 = sub_24F8CE6B0();
                      if (!v109) {
                        goto LABEL_201;
                      }
LABEL_129:
                      if (v112 >= v111) {
                        size_t v114 = v111;
                      }
                      else {
                        size_t v114 = v112;
                      }
                      int v67 = memcmp(__s1, v109, v114);
                      swift_release();
                      swift_release();
LABEL_133:
                      sub_24F77F9A4();
                      uint64_t v12 = v8 + 56;
                      if (!v67) {
                        goto LABEL_169;
                      }
                      goto LABEL_42;
                    default:
                      *(void *)__s1 = v18;
                      *(_WORD *)&__s1[8] = v19;
                      __s1[10] = BYTE2(v19);
                      __s1[11] = BYTE3(v19);
                      __s1[12] = BYTE4(v19);
                      __s1[13] = BYTE5(v19);
                      if (!v168)
                      {
LABEL_97:
                        LOWORD(__s2) = a1;
                        BYTE2(__s2) = BYTE2(a1);
                        BYTE3(__s2) = BYTE3(a1);
                        BYTE4(__s2) = v163;
                        BYTE5(__s2) = BYTE5(a1);
                        BYTE6(__s2) = BYTE6(a1);
                        HIBYTE(__s2) = HIBYTE(a1);
                        LOWORD(v174) = a2;
                        BYTE2(v174) = BYTE2(a2);
                        BYTE3(v174) = BYTE3(a2);
                        BYTE4(v174) = BYTE4(a2);
                        BYTE5(v174) = BYTE5(a2);
                        sub_24F781F34(a1, a2, 3);
                        sub_24F773DB0(a1, a2);
                        int v67 = memcmp(__s1, &__s2, BYTE6(a2));
                        goto LABEL_133;
                      }
                      if (v168 == 1)
                      {
                        sub_24F781EB4();
                        uint64_t v12 = v8 + 56;
                        if (v41 != v49) {
                          goto LABEL_179;
                        }
                        Swift::String v50 = (char *)sub_24F783258();
                        if (v50)
                        {
                          sub_24F8CE6C0();
                          sub_24F8AA340();
                          if (v49) {
                            goto LABEL_190;
                          }
                          v50 += v51;
                        }
                        uint64_t v52 = sub_24F8CE6B0();
                        if (!v50)
                        {
                          __break(1u);
LABEL_195:
                          __break(1u);
LABEL_196:
                          __break(1u);
LABEL_197:
                          __break(1u);
LABEL_198:
                          __break(1u);
LABEL_199:
                          __break(1u);
LABEL_200:
                          __break(1u);
LABEL_201:
                          __break(1u);
LABEL_202:
                          __break(1u);
LABEL_203:
                          __break(1u);
LABEL_204:
                          __break(1u);
LABEL_205:
                          __break(1u);
LABEL_206:
                          __break(1u);
LABEL_207:
                          __break(1u);
                          JUMPOUT(0x24F8A7BE8);
                        }
                        goto LABEL_93;
                      }
                      sub_24F77EBFC();
                      sub_24F8AA2D0();
                      uint64_t v109 = (char *)sub_24F8CE6A0();
                      if (v109)
                      {
                        uint64_t v110 = sub_24F8CE6C0();
                        if (__OFSUB__(v29, v110)) {
                          goto LABEL_187;
                        }
                        v109 += v29 - v110;
                      }
                      BOOL v49 = __OFSUB__(v160, v29);
                      int64_t v111 = v160 - v29;
                      if (v49) {
                        goto LABEL_182;
                      }
                      uint64_t v112 = sub_24F8CE6B0();
                      if (!v109) {
                        goto LABEL_200;
                      }
                      goto LABEL_129;
                  }
                }
                else
                {
LABEL_78:
                  uint64_t v53 = sub_24F7774B4();
                  sub_24F781F10(v53, v54, v55);
                  uint64_t v12 = v8 + 56;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v45 = *(void *)(v18 + 16);
            uint64_t v44 = *(void *)(v18 + 24);
            uint64_t v29 = v44 - v45;
            if (!__OFSUB__(v44, v45)) {
              goto LABEL_61;
            }
            goto LABEL_172;
          case 3uLL:
            goto LABEL_62;
          default:
            uint64_t v29 = BYTE6(v19);
            goto LABEL_62;
        }
        goto LABEL_42;
      case 4:
        if (!v169) {
          goto LABEL_41;
        }
        uint64_t v170 = 24 * v11;
        sub_24F781F10(v18, v19, 4);
        sub_24F781F10(0, 0, 4);
        uint64_t v130 = v18;
        unint64_t v131 = v19;
        char v132 = 4;
        goto LABEL_168;
      default:
        if (a3)
        {
          if (a3 != 1) {
            goto LABEL_41;
          }
          uint64_t v170 = 24 * v11;
          uint64_t v21 = sub_24F8AA3C0(v18, v19, 0);
          sub_24F781F10(v21, v22, 0);
          BOOL v23 = v166;
          if (v18 != (uint64_t)*(double *)&a1) {
            BOOL v23 = 0;
          }
          if (v23) {
            goto LABEL_169;
          }
        }
        else
        {
          uint64_t v170 = 24 * v11;
          uint64_t v36 = sub_24F8AA394(v18, v19, 0);
          sub_24F781F10(v36, v37, 0);
          if (v18 == a1) {
            goto LABEL_169;
          }
        }
        goto LABEL_42;
    }
  }
}

uint64_t sub_24F8A7C2C(uint64_t a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) == 0)
  {
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    DatabaseFunction.hash(into:)();
    uint64_t v7 = sub_24F8CFF80();
    uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v9 = v7 & ~v8;
    if ((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      type metadata accessor for DatabaseFunction();
      uint64_t v10 = *(void *)(v3 + 48);
      if (static DatabaseFunction.== infix(_:_:)(*(void *)(v10 + 8 * v9), a1))
      {
LABEL_12:
        swift_bridgeObjectRelease();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v13 = *v1;
        uint64_t v15 = *v1;
        *uint64_t v1 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_24F8BBA14();
          uint64_t v13 = v15;
        }
        uint64_t v6 = *(void *)(*(void *)(v13 + 48) + 8 * v9);
        sub_24F8A8568(v9);
        *uint64_t v1 = v15;
        goto LABEL_15;
      }
      uint64_t v11 = ~v8;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v11;
        if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          break;
        }
        if (static DatabaseFunction.== infix(_:_:)(*(void *)(v10 + 8 * v9), a1)) {
          goto LABEL_12;
        }
      }
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3 < 0) {
    uint64_t v4 = *v1;
  }
  else {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  char v5 = sub_24F8CF750();
  swift_release();
  if ((v5 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v6 = sub_24F8A7FB8(v4, a1);
LABEL_15:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24F8A7DD8()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) == 0)
  {
    sub_24F8CFF30();
    sub_24F8CFF40();
    uint64_t v4 = sub_24F8CFF80();
    uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v6 = v4 & ~v5;
    if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      return 0;
    }
    type metadata accessor for DatabaseCollation();
    swift_bridgeObjectRetain();
    swift_retain();
    BOOL v7 = static DatabaseCollation.== infix(_:_:)();
    swift_release();
    if (v7)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = *v0;
      uint64_t v13 = *v0;
      *uint64_t v0 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_24F8BBA20();
        uint64_t v11 = v13;
      }
      uint64_t v3 = *(void *)(*(void *)(v11 + 48) + 8 * v6);
      sub_24F8A871C(v6);
      *uint64_t v0 = v13;
      goto LABEL_12;
    }
    uint64_t v8 = ~v5;
    while (1)
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        break;
      }
      swift_retain();
      BOOL v9 = static DatabaseCollation.== infix(_:_:)();
      swift_release();
      if (v9) {
        goto LABEL_9;
      }
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  char v2 = sub_24F8CF750();
  swift_release();
  if ((v2 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v3 = sub_24F8A8134();
LABEL_12:
  swift_bridgeObjectRelease();
  return v3;
}

#error "24F8A8008: call analysis failed (funcsize=95)"

uint64_t sub_24F8A8134()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_24F8CF720();
  uint64_t v3 = swift_unknownObjectRetain();
  sub_24F8B7E94(v3, v2, v4, v5, v6, v7, v8, v9, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v31);
  uint64_t v11 = v10;
  uint64_t v30 = v10;
  sub_24F8CFF30();
  sub_24F8CFF40();
  uint64_t v12 = sub_24F8CFF80();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    type metadata accessor for DatabaseCollation();
    swift_retain();
    swift_retain();
    BOOL v15 = static DatabaseCollation.== infix(_:_:)();
    swift_release();
    if (!v15)
    {
      uint64_t v16 = ~v13;
      do
      {
        unint64_t v14 = (v14 + 1) & v16;
        if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_10;
        }
        swift_retain();
        BOOL v17 = static DatabaseCollation.== infix(_:_:)();
        swift_release();
      }
      while (!v17);
    }
    swift_release();
    uint64_t v18 = *(void *)(*(void *)(v11 + 48) + 8 * v14);
    sub_24F8A871C(v14);
    if (static DatabaseCollation.== infix(_:_:)())
    {
      *uint64_t v1 = v30;
      return v18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_24F8A82D4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24F8CF6E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v27 = 24 * v6;
        uint64_t v10 = v3;
        uint64_t v11 = *(void *)(v3 + 48) + 24 * v6;
        uint64_t v13 = *(void *)v11;
        unint64_t v12 = *(void *)(v11 + 8);
        uint64_t v14 = *(unsigned __int8 *)(v11 + 16);
        sub_24F8CFF30();
        switch(v14)
        {
          case 2:
            sub_24F781F34(v13, v12, 2);
            sub_24F8CEE50();
            break;
          case 3:
            sub_24F781F34(v13, v12, 3);
            sub_24F8CE8E0();
            break;
          case 4:
            sub_24F8CFF40();
            break;
          default:
            sub_24F8CFF70();
            break;
        }
        uint64_t v15 = sub_24F8CFF80();
        sub_24F781F10(v13, v12, v14);
        unint64_t v16 = v15 & v7;
        if (v2 >= (uint64_t)v9) {
          BOOL v17 = v16 < v9 || v2 < (uint64_t)v16;
        }
        else {
          BOOL v17 = v16 < v9 && v2 < (uint64_t)v16;
        }
        uint64_t v3 = v10;
        if (!v17)
        {
          uint64_t v18 = *(void *)(v10 + 48);
          unint64_t v19 = v18 + 24 * v2;
          uint64_t v20 = (long long *)(v18 + v27);
          BOOL v21 = 24 * v2 < v27 || v19 >= (unint64_t)v20 + 24;
          BOOL v22 = !v21 && v2 == v6;
          int64_t v2 = v6;
          if (!v22)
          {
            long long v23 = *v20;
            *(void *)(v19 + 16) = *((void *)v20 + 2);
            *(_OWORD *)unint64_t v19 = v23;
            int64_t v2 = v6;
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v24 = *(void *)(v3 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
    JUMPOUT(0x24F8A8554);
  }
  *(void *)(v3 + 16) = v26;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_24F8A8568(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24F8CF6E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_24F8CFF30();
        swift_retain();
        DatabaseFunction.hash(into:)();
        uint64_t v10 = sub_24F8CFF80();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (void *)(v14 + 8 * v2);
            unint64_t v16 = (void *)(v14 + 8 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              *uint64_t v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_24F8A871C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24F8CF6E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_24F8CFF30();
        sub_24F8CFF40();
        uint64_t v10 = sub_24F8CFF80() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            uint64_t v13 = *(void *)(v3 + 48);
            uint64_t v14 = (void *)(v13 + 8 * v2);
            uint64_t v15 = (void *)(v13 + 8 * v6);
            BOOL v16 = v2 != v6 || v14 >= v15 + 1;
            int64_t v2 = v6;
            if (v16)
            {
              *uint64_t v14 = *v15;
              int64_t v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_24F8A88B8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v7 = *v3;
  if ((v7 & 0xC000000000000001) == 0)
  {
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    uint64_t v12 = a2(a1, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v15;
    swift_bridgeObjectRelease();
    return v12;
  }
  if (v7 < 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24F8CF720();
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v10, 1))
  {
    uint64_t v14 = a3(v9, v10 + 1);
    uint64_t v12 = a2(a1, 1);
    *uint64_t v5 = v14;
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8A89BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 0x80) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F8A89CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 0x80) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24F8A89E4()
{
  unint64_t result = qword_269A2C440;
  if (!qword_269A2C440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C440);
  }
  return result;
}

unint64_t sub_24F8A8A34()
{
  unint64_t result = qword_269A2C448;
  if (!qword_269A2C448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C448);
  }
  return result;
}

unint64_t sub_24F8A8A84()
{
  unint64_t result = qword_269A2C450;
  if (!qword_269A2C450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C450);
  }
  return result;
}

unint64_t sub_24F8A8AD4()
{
  unint64_t result = qword_269A2C458;
  if (!qword_269A2C458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C458);
  }
  return result;
}

unint64_t sub_24F8A8B24()
{
  unint64_t result = qword_269A2C460;
  if (!qword_269A2C460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C460);
  }
  return result;
}

unint64_t sub_24F8A8B74()
{
  unint64_t result = qword_269A2C468;
  if (!qword_269A2C468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C468);
  }
  return result;
}

unint64_t sub_24F8A8BC4()
{
  unint64_t result = qword_269A2C470;
  if (!qword_269A2C470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C470);
  }
  return result;
}

unint64_t sub_24F8A8C14()
{
  unint64_t result = qword_269A2C478;
  if (!qword_269A2C478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C478);
  }
  return result;
}

unint64_t sub_24F8A8C64()
{
  unint64_t result = qword_269A2C480;
  if (!qword_269A2C480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C480);
  }
  return result;
}

unint64_t sub_24F8A8CB4()
{
  unint64_t result = qword_269A2C488;
  if (!qword_269A2C488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C488);
  }
  return result;
}

unint64_t sub_24F8A8D04()
{
  unint64_t result = qword_269A2C490;
  if (!qword_269A2C490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C490);
  }
  return result;
}

uint64_t sub_24F8A8D50()
{
  return type metadata accessor for Database();
}

uint64_t type metadata accessor for Database()
{
  uint64_t result = qword_26B1F7BB8;
  if (!qword_26B1F7BB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24F8A8DA0()
{
  uint64_t result = type metadata accessor for Configuration();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for Database(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Database);
}

uint64_t destroy for Database.BusyMode(uint64_t a1)
{
  return sub_24F7EDD34(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12GRDBInternal8DatabaseC8BusyModeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24F7EDD1C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Database.BusyMode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24F7EDD1C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24F7EDD34(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Database.BusyMode(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24F7EDD34(v4, v5, v6);
  return a1;
}

void type metadata accessor for Database.BusyMode()
{
}

void type metadata accessor for Database.CheckpointMode()
{
}

void type metadata accessor for Database.CollationName()
{
}

uint64_t getEnumTagSinglePayload for Database.ConflictResolution(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Database.ConflictResolution(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F8A9140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for Database.ConflictResolution()
{
}

uint64_t _s12GRDBInternal8DatabaseC16ForeignKeyActionOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_24F7744C0(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_24F7744C0((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_24F7744C0((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_24F7744C0((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return sub_24F7744C0(v8);
}

unsigned char *_s12GRDBInternal8DatabaseC16ForeignKeyActionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F8A92C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for Database.ForeignKeyAction()
{
}

void type metadata accessor for Database.TracingOptions()
{
}

uint64_t destroy for Database.TraceEvent(void *a1)
{
  return sub_24F8A89DC(*a1, a1[1], a1[2], a1[3], a1[4]);
}

void *initializeWithCopy for Database.TraceEvent(void *a1, void *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_24F8A9304(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for Database.TraceEvent(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_24F8A9304(*a2, v4, v5, v6, v7);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_24F8A89DC(v8, v9, v10, v11, v12);
  return a1;
}

void *assignWithTake for Database.TraceEvent(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = v3;
  sub_24F8A89DC(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Database.TraceEvent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unsigned int v2 = (*(void *)(a1 + 24) >> 2) & 0xFFFFFFC0 | (*(void *)(a1 + 24) >> 1) & 0x3F;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Database.TraceEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (4 * -a2) & 0x3FFFFFF00 | (2 * (-a2 & 0x3FLL));
      *(void *)(result + 32) = 0;
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24F8A94E4(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 63;
}

uint64_t sub_24F8A94F0(uint64_t result)
{
  *(void *)(result + 24) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_24F8A9500(uint64_t result, uint64_t a2)
{
  *(void *)(result + 24) = *(void *)(result + 24) & 0x81 | (a2 << 63);
  return result;
}

void type metadata accessor for Database.TraceEvent()
{
}

void type metadata accessor for Database.TraceEvent.Statement()
{
}

unsigned char *storeEnumTagSinglePayload for Database.TransactionCompletion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F8A9610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for Database.TransactionCompletion()
{
}

void type metadata accessor for Database.TransactionKind()
{
}

uint64_t _s12GRDBInternal8DatabaseC10TraceEventO9StatementVwxx_0(uint64_t a1)
{
  return sub_24F8A89BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t _s12GRDBInternal8DatabaseC10TraceEventO9StatementVwcp_0(uint64_t a1, uint64_t a2)
{
  sub_24F77DBD4(a1, a2);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = v5;
  *(unsigned char *)(v2 + 24) = v6;
  return v2;
}

uint64_t _s12GRDBInternal8DatabaseC10TraceEventO9StatementVwca_0(uint64_t a1, uint64_t a2)
{
  sub_24F77DBD4(a1, a2);
  uint64_t v7 = *(void *)v2;
  uint64_t v8 = *(void *)(v2 + 8);
  uint64_t v9 = *(void *)(v2 + 16);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = v5;
  char v10 = *(unsigned char *)(v2 + 24);
  *(unsigned char *)(v2 + 24) = v6;
  sub_24F8A89BC(v7, v8, v9, v10);
  return v2;
}

uint64_t _s12GRDBInternal8DatabaseC10TraceEventO9StatementVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_24F8A89BC(v5, v7, v6, v8);
  return a1;
}

uint64_t _s12GRDBInternal8DatabaseC10TraceEventO9StatementVwet_0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 25)) {
      return sub_24F7744C0(*(_DWORD *)a1 + 126);
    }
    unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x7E | (*(unsigned __int8 *)(a1 + 24) >> 7)) ^ 0x7F;
    if (v3 >= 0x7E) {
      return sub_24F7744C0(-1);
    }
  }
  else
  {
    unsigned int v3 = -1;
  }
  return sub_24F7744C0(v3);
}

uint64_t _s12GRDBInternal8DatabaseC10TraceEventO9StatementVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_24F8A97EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 7;
}

uint64_t sub_24F8A97F8(uint64_t result)
{
  *(unsigned char *)(result + 24) &= ~0x80u;
  return result;
}

uint64_t sub_24F8A9808(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 1 | (a2 << 7);
  return result;
}

void type metadata accessor for Database.TraceEvent.Statement.Impl()
{
}

void *sub_24F8A9828(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Database.SchemaCache()
{
}

uint64_t _s12GRDBInternal8DatabaseC15TransactionKindOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_24F7744C0(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_24F7744C0((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_24F7744C0((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_24F7744C0((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return sub_24F7744C0(v8);
}

unsigned char *_s12GRDBInternal8DatabaseC15TransactionKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F8A99E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for Database.ThreadingMode()
{
}

unint64_t sub_24F8A9A1C()
{
  unint64_t result = qword_269A2C498;
  if (!qword_269A2C498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C498);
  }
  return result;
}

uint64_t sub_24F8A9A68()
{
  return sub_24F8A5E9C();
}

#error "24F8A9BF8: call analysis failed (funcsize=167)"

uint64_t sub_24F8A9D28(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v6 = *v2;
  sub_24F8CFF30();
  sub_24F8CFF40();
  uint64_t v7 = sub_24F8CFF80();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    type metadata accessor for DatabaseCollation();
    swift_retain();
    BOOL v11 = static DatabaseCollation.== infix(_:_:)();
    swift_release();
    if (v11)
    {
      uint64_t v12 = 0;
      BOOL v13 = 1;
    }
    else
    {
      uint64_t v14 = ~v8;
      unint64_t v9 = (v9 + 1) & v14;
      if ((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
      {
        uint64_t v12 = 1;
        while (1)
        {
          swift_retain();
          BOOL v13 = static DatabaseCollation.== infix(_:_:)();
          swift_release();
          if (v13) {
            break;
          }
          unint64_t v9 = (v9 + 1) & v14;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_12;
          }
        }
        uint64_t v12 = 0;
      }
      else
      {
        BOOL v13 = 0;
        uint64_t v12 = 1;
      }
    }
LABEL_12:
    int v3 = v2;
  }
  else
  {
    BOOL v13 = 0;
    uint64_t v12 = 1;
  }
  uint64_t v15 = *(void *)(v6 + 16);
  uint64_t v16 = v15 + v12;
  if (__OFADD__(v15, v12))
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v17 = *(void *)(v6 + 24);
  if (v17 >= v16 && (a2 & 1) != 0)
  {
    if (!v13) {
      goto LABEL_33;
    }
LABEL_30:
    uint64_t v25 = *(void *)(*v3 + 48);
    uint64_t result = *(void *)(v25 + 8 * v9);
    *(void *)(v25 + 8 * v9) = a1;
    return result;
  }
  if (a2)
  {
    sub_24F8B9278();
    goto LABEL_24;
  }
  if (v17 < v16)
  {
    sub_24F8BCCBC();
LABEL_24:
    uint64_t v18 = *v3;
    sub_24F8CFF30();
    sub_24F8CFF40();
    uint64_t v19 = sub_24F8CFF80();
    uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
    unint64_t v9 = v19 & ~v20;
    if ((*(void *)(v18 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      BOOL v21 = v3;
      type metadata accessor for DatabaseCollation();
      swift_retain();
      BOOL v22 = static DatabaseCollation.== infix(_:_:)();
      swift_release();
      if (v22)
      {
LABEL_29:
        int v3 = v21;
        if (v13) {
          goto LABEL_30;
        }
LABEL_38:
        type metadata accessor for DatabaseCollation();
        uint64_t result = sub_24F8CFE90();
        __break(1u);
        return result;
      }
      uint64_t v23 = ~v20;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v23;
        if (((*(void *)(v18 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          break;
        }
        swift_retain();
        BOOL v24 = static DatabaseCollation.== infix(_:_:)();
        swift_release();
        if (v24) {
          goto LABEL_29;
        }
      }
      int v3 = v21;
    }
    if (!v13) {
      goto LABEL_33;
    }
    goto LABEL_38;
  }
  sub_24F8BBA20();
  if (v13) {
    goto LABEL_30;
  }
LABEL_33:
  uint64_t v27 = *v3;
  *(void *)(*v3 + 8 * (v9 >> 6) + 56) |= 1 << v9;
  *(void *)(*(void *)(v27 + 48) + 8 * v9) = a1;
  uint64_t v28 = *(void *)(v27 + 16);
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t result = 0;
  *(void *)(v27 + 16) = v30;
  return result;
}

unsigned char *sub_24F8AA024(unsigned char *a1, char *a2)
{
  return sub_24F7A27D4(a1, *a2);
}

unsigned char *sub_24F8AA040(unsigned char *a1)
{
  return sub_24F8AA024(a1, *(char **)(v1 + 16));
}

uint64_t sub_24F8AA05C(uint64_t a1)
{
  return sqlite3_config(16, a1, 0);
}

void sub_24F8AA084(uint64_t a1)
{
  sub_24F888064(a1, *(void *)(v1 + 16), *(_DWORD *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), *(void (**)(char *))(v1 + 48));
}

uint64_t sub_24F8AA0AC(uint64_t a1)
{
  return sub_24F8A35D4(a1, *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24F8AA0C8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_24F8AA0F8(sqlite3 *a1)
{
  return sqlite3_db_config(a1, 1013, 0, 0);
}

uint64_t sub_24F8AA13C(sqlite3 *a1)
{
  return sqlite3_db_config(a1, 1013, 1, 0);
}

unint64_t sub_24F8AA184()
{
  unint64_t result = qword_26B1F7DE0;
  if (!qword_26B1F7DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7DE0);
  }
  return result;
}

uint64_t sub_24F8AA1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Configuration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F8AA244()
{
  return sub_24F772B10();
}

uint64_t sub_24F8AA2B0()
{
  return sub_24F8A89CC(v0, v1, v2, v3);
}

uint64_t sub_24F8AA2D0()
{
  return swift_retain();
}

uint64_t sub_24F8AA2E8()
{
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(unsigned char *)(v0 + 56) = 0;
  return swift_willThrow();
}

uint64_t sub_24F8AA30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

void sub_24F8AA320(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  a13 = *a1;
  Database.beginTransaction(_:)((GRDBInternal::Database::TransactionKind_optional)&a13);
}

unint64_t sub_24F8AA360()
{
  return 0xD000000000000016;
}

void sub_24F8AA374(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>, uint64_t a4)
{
  uint64_t v6 = &a4;
  unint64_t v5 = (a3 - 32) | 0x8000000000000000;
  Database.execute(sql:arguments:)(*(Swift::String *)&a1, *(GRDBInternal::StatementArguments *)(&a2 - 1));
}

uint64_t sub_24F8AA394(uint64_t a1, unint64_t a2, char a3)
{
  sub_24F781F10(a1, a2, a3);
  sub_24F781F10(v4, v3, 0);
  return v5;
}

uint64_t sub_24F8AA3C0(uint64_t a1, unint64_t a2, char a3)
{
  sub_24F781F10(a1, a2, a3);
  sub_24F781F10(v4, v3, 1);
  return v5;
}

uint64_t sub_24F8AA3EC()
{
  return sub_24F8CEC70();
}

uint64_t sub_24F8AA40C()
{
  return sub_24F8A89DC(v0, v1, v2, v4, v3);
}

void sub_24F8AA438(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = v1;
  *(unsigned char *)(a1 + 4) = v2;
}

void sub_24F8AA444(uint64_t a1@<X8>)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_24F8AA45C()
{
  return swift_endAccess();
}

void sub_24F8AA474(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a9 = 0;
  a10 = 0;
  BOOL v11 = &a9;
  Statement.execute(arguments:)(*(GRDBInternal::StatementArguments_optional *)(&a2 - 1));
}

uint64_t sub_24F8AA494(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24F7705D0(a2);
  if ((v5 & 1) == 0)
  {
    if (*(_DWORD *)(a2 + 36) == v4) {
      return result == 1 << *(unsigned char *)(a2 + 32);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_24F8AA4E8()
{
  return *(void *)(v0 + 72) == 0;
}

uint64_t Row.copy()()
{
  sub_24F7811D0((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = sub_24F8BF41C();
  return v2(v1);
}

uint64_t Row.subscript.getter()
{
  return sub_24F8B072C();
}

{
  return sub_24F8B0F30();
}

{
  return sub_24F8AF750();
}

{
  return sub_24F8AF750();
}

{
  return sub_24F8B072C();
}

{
  return sub_24F8B072C();
}

{
  return sub_24F8B0F30();
}

uint64_t sub_24F8AA560(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 72);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v2 = v18;
    if ((v1 & 0x8000000000000000) == 0)
    {
      uint64_t v14 = v1;
      uint64_t v4 = 0;
      while (v1 != v4)
      {
        uint64_t v5 = v4 + 1;
        Row.subscript.getter();
        uint64_t v7 = v6;
        uint64_t v9 = v8;
        swift_bridgeObjectRetain();
        sub_24F781F34(v15, v16, v17);
        swift_bridgeObjectRelease();
        sub_24F781F10(v15, v16, v17);
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        switch(v17)
        {
          case 1:
            sub_24F8CF2D0();
            break;
          case 2:
            swift_bridgeObjectRetain();
            sub_24F8CEE10();
            break;
          case 3:
            sub_24F78419C(v15, v16);
            sub_24F8CE880();
            sub_24F8CEEB0();
            swift_bridgeObjectRelease();
            sub_24F8CEEB0();
            sub_24F781F10(v15, v16, 3);
            break;
          case 4:
            break;
          default:
            sub_24F8CFAE0();
            break;
        }
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F781F10(v15, v16, v17);
        unint64_t v10 = *(void *)(v18 + 16);
        if (v10 >= *(void *)(v18 + 24) >> 1) {
          sub_24F77C4AC();
        }
        *(void *)(v18 + 16) = v10 + 1;
        uint64_t v11 = v18 + 16 * v10;
        *(void *)(v11 + 32) = v7;
        *(void *)(v11 + 40) = v9;
        if (*(void *)(a1 + 72) <= v4) {
          goto LABEL_18;
        }
        ++v4;
        BOOL v12 = v14 == v5;
        uint64_t v1 = v14;
        if (v12) {
          return v2;
        }
      }
      __break(1u);
LABEL_18:
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x24F8AA808);
  }
  return v2;
}

uint64_t sub_24F8AA81C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_24F7954E0();
    uint64_t v4 = a1 + 48;
    do
    {
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v14 = *(void *)(v4 - 16);
      sub_24F7748F8(v4, (uint64_t)v17, &qword_26B1F7AC0);
      uint64_t v6 = v18;
      if (v18)
      {
        uint64_t v7 = v19;
        sub_24F7811D0(v17, v18);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 24))(v15, v6, v7);
        uint64_t v8 = v15[0];
        uint64_t v9 = v15[1];
        char v10 = v16;
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v17);
      }
      else
      {
        sub_24F774DA0((uint64_t)v17, &qword_26B1F7AC0);
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        char v10 = 4;
      }
      uint64_t v2 = v20;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F7954E0();
        uint64_t v2 = v20;
      }
      unint64_t v11 = *(void *)(v2 + 16);
      if (v11 >= *(void *)(v2 + 24) >> 1)
      {
        sub_24F7954E0();
        uint64_t v2 = v20;
      }
      *(void *)(v2 + 16) = v11 + 1;
      uint64_t v12 = v2 + 40 * v11;
      *(void *)(v12 + 32) = v14;
      *(void *)(v12 + 40) = v5;
      *(void *)(v12 + 48) = v8;
      *(void *)(v12 + 56) = v9;
      *(unsigned char *)(v12 + 64) = v10;
      v4 += 56;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t FetchRequest<>.fetchAll(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8AAC88(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))static Row.fetchAll<A>(_:_:));
}

Swift::Int_optional __swiftcall Row.index(forColumn:)(Swift::String forColumn)
{
  uint64_t v1 = sub_24F77232C(forColumn._countAndFlagsBits);
  Swift::Int v3 = v2(v1);
  Swift::Bool v5 = v4 & 1;
  result.value = v3;
  result.is_nil = v5;
  return result;
}

void Row.startIndex.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Row.columnNames.getter()
{
  return swift_retain();
}

uint64_t Row.description.getter()
{
  sub_24F8AA560(v0);
  sub_24F781274(&qword_26B1F7F48);
  sub_24F7789CC((uint64_t)&qword_26B1F7EB0);
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  sub_24F770E80();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  return 91;
}

uint64_t sub_24F8AAB60(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v8 = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  swift_retain();
  a3(v6, a1, &v8);
  swift_release();
  if (v3) {
    swift_bridgeObjectRelease();
  }
  return sub_24F775FA4();
}

uint64_t Row.__allocating_init(_:)(uint64_t a1)
{
  return sub_24F8AE24C(a1, (void (*)(void))sub_24F78ED30);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  long long v13;
  uint64_t v14;
  uint64_t v15;
  long long v16;
  char v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  long long v49;
  long long v50;
  uint64_t v51;
  char v52[32];
  void v53[4];
  _OWORD v54[2];
  long long v55;
  long long v56;
  _OWORD v57[2];
  uint64_t v58;
  long long v59;
  long long v60;
  uint64_t v61;

  char v43 = a1;
  double v40 = a1 + 64;
  sub_24F77DB00();
  uint64_t v3 = v2 & v1;
  BOOL v41 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v42 = (char *)v57 + 8;
  uint64_t v45 = (_OWORD *)(v5 + 40);
  uint64_t v46 = 0;
  uint64_t v38 = v41 - 1;
  uint64_t v6 = MEMORY[0x263F8EE80];
  uint64_t v44 = MEMORY[0x263F8EE58] + 8;
  if ((v2 & v1) == 0) {
    goto LABEL_4;
  }
LABEL_2:
  sub_24F8BF474();
  uint64_t v8 = v7 | (v46 << 6);
LABEL_3:
  sub_24F89BF08(*(void *)(v43 + 48) + 40 * v8, (uint64_t)&v55);
  sub_24F79AA14(*(void *)(v43 + 56) + 32 * v8, (uint64_t)v42);
  while (1)
  {
    sub_24F8BEB0C((uint64_t)&v55, (uint64_t)&v59, &qword_269A2C418);
    if (!*((void *)&v60 + 1))
    {
      swift_release();
      sub_24F78ED30(v6);
      swift_bridgeObjectRelease();
      swift_allocObject();
      return sub_24F79036C();
    }
    sub_24F7DCBA0(v45, v54);
    char v55 = v59;
    uint64_t v56 = v60;
    *(void *)&v57[0] = v61;
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_37;
    }
    uint64_t v13 = v49;
    sub_24F79AA14((uint64_t)v54, (uint64_t)v53);
    sub_24F79AA14((uint64_t)v53, (uint64_t)v52);
    sub_24F781274(&qword_26B1F7250);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v51 = 0;
      BOOL v49 = 0u;
      Swift::String v50 = 0u;
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v53);
      sub_24F774DA0((uint64_t)&v49, &qword_26B1F7AC0);
      swift_bridgeObjectRelease();
LABEL_37:
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v54);
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
    uint64_t v47 = v3;
    sub_24F794DE0(&v49, (uint64_t)&v55);
    uint64_t v14 = *((void *)&v56 + 1);
    uint64_t v15 = *(void *)&v57[0];
    sub_24F7811D0(&v55, *((uint64_t *)&v56 + 1));
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 24))(&v49, v14, v15);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v53);
    char v16 = v49;
    char v17 = v50;
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v55);
    *((void *)&v56 + 1) = &type metadata for DatabaseValue;
    *(void *)&v57[0] = &protocol witness table for DatabaseValue;
    char v55 = v16;
    LOBYTE(v56) = v17;
    sub_24F8BEB0C((uint64_t)&v55, (uint64_t)&v49, &qword_26B1F7AC0);
    sub_24F781F34(v16, *((unint64_t *)&v16 + 1), v17);
    swift_isUniquelyReferenced_nonNull_native();
    v53[0] = v6;
    uint64_t v18 = sub_24F782950();
    if (__OFADD__(*(void *)(v6 + 16), (v19 & 1) == 0)) {
      break;
    }
    uint64_t v20 = v18;
    BOOL v21 = v19;
    sub_24F781274(&qword_26B1F7278);
    BOOL v22 = sub_24F8CF980();
    if (v22)
    {
      BOOL v22 = sub_24F782950();
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_42;
      }
      uint64_t v20 = v22;
    }
    uint64_t v6 = v53[0];
    if (v21)
    {
      uint64_t v30 = sub_24F89C2D4(v22, v23, v24, v25, v26, v27, v28, v29, v38, v39, v40, v41, (uint64_t)v42, v43, v44, (uint64_t)v45, v46, v47, v49);
      sub_24F8BE0A4((uint64_t)v30, v31, &qword_26B1F7AC0);
    }
    else
    {
      *(void *)(v53[0] + 8 * (v20 >> 6) + 64) |= 1 << v20;
      *(_OWORD *)(*(void *)(v6 + 48) + 16 * v20) = v13;
      uint64_t v32 = sub_24F89C2D4(v22, v23, v24, v25, v26, v27, v28, v29, v38, v39, v40, v41, (uint64_t)v42, v43, v44, (uint64_t)v45, v46, v47, v49);
      sub_24F8BEB0C((uint64_t)v32, v33, &qword_26B1F7AC0);
      uint64_t v34 = *(void *)(v6 + 16);
      unint64_t v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35) {
        goto LABEL_39;
      }
      *(void *)(v6 + 16) = v36;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F781F10(v16, *((unint64_t *)&v16 + 1), v17);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v54);
    uint64_t v3 = v48;
    if (v48) {
      goto LABEL_2;
    }
LABEL_4:
    if (__OFADD__(v46, 1)) {
      goto LABEL_40;
    }
    if (v46 + 1 < v41)
    {
      sub_24F8BF448();
      if (v10) {
        goto LABEL_7;
      }
      unint64_t v11 = v9 + 1;
      uint64_t v46 = v9;
      if (v9 + 1 < v41)
      {
        char v10 = *(void *)(v40 + 8 * v11);
        if (v10) {
          goto LABEL_10;
        }
        uint64_t v46 = v9 + 1;
        if (v9 + 2 < v41)
        {
          char v10 = *(void *)(v40 + 8 * (v9 + 2));
          if (v10)
          {
            v9 += 2;
            goto LABEL_7;
          }
          unint64_t v11 = v9 + 3;
          uint64_t v46 = v9 + 2;
          if (v9 + 3 < v41)
          {
            char v10 = *(void *)(v40 + 8 * v11);
            if (!v10)
            {
              while (!__OFADD__(v11, 1))
              {
                if (v11 + 1 >= v41)
                {
                  uint64_t v46 = v38;
                  goto LABEL_21;
                }
                sub_24F8BF448();
                unint64_t v11 = v12 + 1;
                if (v10) {
                  goto LABEL_7;
                }
              }
              goto LABEL_41;
            }
LABEL_10:
            uint64_t v9 = v11;
LABEL_7:
            uint64_t v3 = (v10 - 1) & v10;
            uint64_t v8 = __clz(__rbit64(v10)) + (v9 << 6);
            uint64_t v46 = v9;
            goto LABEL_3;
          }
        }
      }
    }
LABEL_21:
    uint64_t v3 = 0;
    uint64_t v58 = 0;
    memset(v57, 0, sizeof(v57));
    char v55 = 0u;
    uint64_t v56 = 0u;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  Swift::Int_optional result = sub_24F8CFEA0();
  __break(1u);
  return result;
}

uint64_t FetchRequest<>.fetchCursor(_:)()
{
  return static Row.fetchCursor<A>(_:_:)();
}

uint64_t FetchRequest<>.fetchOne(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8AAC88(a1, a2, a3, static Row.fetchOne<A>(_:_:));
}

uint64_t FetchRequest<>.fetchSet(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8AAC88(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))static Row.fetchSet<A>(_:_:));
}

uint64_t sub_24F8AAC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  type metadata accessor for Row();
  return a4(a1, v4, a2, a3);
}

uint64_t sub_24F8AACF0()
{
  sub_24F78251C();
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    swift_retain();
    swift_retain();
    sub_24F774F54();
    sub_24F89A268(v2);
    uint64_t v4 = v3;
    swift_release();
    if (!v1 && v4 == 1) {
      *(unsigned char *)(v0 + 24) = 1;
    }
  }
  return sub_24F77592C();
}

uint64_t sub_24F8AAD90()
{
  uint64_t v2 = (unsigned char *)(v0 + 24);
  uint64_t v3 = 1;
  sub_24F78251C();
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + 16);
    swift_retain();
    swift_retain();
    sub_24F774F54();
    char v5 = sub_24F89A344(v4);
    swift_release();
    if (!v1)
    {
      if (v5)
      {
        uint64_t v3 = 1;
        *uint64_t v2 = 1;
      }
      else
      {
        return 0;
      }
    }
  }
  return v3;
}

uint64_t sub_24F8AAE24()
{
  swift_beginAccess();
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    sub_24F774F78();
    swift_retain();
    sub_24F774F54();
    sub_24F89A414(v2);
    __int16 v4 = v3;
    sub_24F774F60();
    if (!v1 && (v4 & 0x100) != 0) {
      *(unsigned char *)(v0 + 24) = 1;
    }
  }
  return sub_24F775FA4();
}

uint64_t sub_24F8AAED4()
{
  sub_24F78251C();
  if (*(unsigned char *)(v0 + 24)) {
    return 3;
  }
  sub_24F774F78();
  swift_retain();
  sub_24F774F54();
  uint64_t v2 = sub_24F89A500(v3);
  sub_24F774F60();
  if (!v1 && v2 == 3)
  {
    *(unsigned char *)(v0 + 24) = 1;
    return 3;
  }
  return v2;
}

uint64_t sub_24F8AAF60@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  else
  {
    sub_24F774F78();
    swift_retain();
    sub_24F774F54();
    sub_24F89A5D0(v5, v6);
    uint64_t result = sub_24F774F60();
    if (!v2)
    {
      if (v8)
      {
        *(void *)a1 = v7;
        *(void *)(a1 + 8) = v8;
        *(void *)(a1 + 16) = v9;
        *(unsigned char *)(a1 + 24) = v10 & 1;
      }
      else
      {
        *(unsigned char *)(v1 + 24) = 1;
        *(void *)a1 = v7;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = v9;
        *(void *)(a1 + 24) = v10;
      }
      *(void *)(a1 + 32) = v11;
      *(void *)(a1 + 40) = v12;
      *(void *)(a1 + 48) = v13;
    }
  }
  return result;
}

uint64_t sub_24F8AB030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24F7BEC34(a1, a2, a3, a4, a5);
  sub_24F8BEB68(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8AB10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v7 = a1 + 40;
    while (sub_24F8CED00() != a2 || v8 != a3)
    {
      char v10 = sub_24F8CFD00();
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_13;
      }
      v7 += 16;
      if (v4 == ++v6)
      {
        uint64_t v6 = 0;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24F8AB1DC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void *))
{
  uint64_t v13 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  for (unint64_t i = (char *)(a1 + 64); ; i += 40)
  {
    uint64_t v5 = *((void *)i - 4);
    uint64_t v6 = *((void *)i - 3);
    unint64_t v8 = *((void *)i - 1);
    char v9 = *i;
    v11[0] = *((void *)i - 2);
    uint64_t v7 = v11[0];
    v11[1] = v8;
    char v12 = v9;
    swift_bridgeObjectRetain();
    sub_24F781F34(v7, v8, v9);
    LOBYTE(v5) = v13(v5, v6, v11);
    swift_bridgeObjectRelease();
    sub_24F781F10(v7, v8, v9);
    if (v5) {
      break;
    }
    if (v2 == ++v3) {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_24F8AB2D8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result = sub_24F7705D0(a3);
  if (v14) {
    goto LABEL_17;
  }
  int v15 = *(_DWORD *)(a3 + 36);
  char v16 = *(unsigned char *)(a3 + 32);
  long long v22 = *a1;
  char v23 = *((unsigned char *)a1 + 16);
  if (v15 != v13)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = result;
  uint64_t v18 = 1 << v16;
  if (1 << v16 < result)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_24F8BEB0C((uint64_t)&v22, (uint64_t)v24, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v24, (uint64_t)&v25, &qword_269A2C558);
  if (v27)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  long long v19 = *(long long *)((char *)a1 + 24);
  char v20 = *((unsigned char *)a1 + 40);
  if (v26 != v15) {
    goto LABEL_13;
  }
  if (v25 < v17)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_24F8BEB0C((uint64_t)&v19, (uint64_t)v21, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v21, (uint64_t)&v28, &qword_269A2C558);
  if ((v30 & 1) == 0)
  {
    if (v15 == v29)
    {
      if (v18 >= v28)
      {
        *(void *)(a6 + 48) = a2;
        *(void *)(a6 + 56) = a3;
        *(void *)(a6 + 64) = a4;
        *(void *)(a6 + 72) = a5;
        *(_OWORD *)a6 = v22;
        *(unsigned char *)(a6 + 16) = v23;
        *(_OWORD *)(a6 + 24) = v19;
        *(unsigned char *)(a6 + 40) = v20;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return swift_bridgeObjectRetain();
      }
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_24F8AB480@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 72);
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (result < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 >= a2)
  {
    a3[1] = a2;
    a3[2] = v3;
    *a3 = result;
    return swift_retain();
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_24F8AB4B0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v5 < result >> 14)
  {
    __break(1u);
  }
  else
  {
    sub_24F8BF61C();
    swift_bridgeObjectRetain();
    return v4;
  }
  return result;
}

uint64_t sub_24F8AB518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(void *)(a5 + 32) = sub_24F7705D0(a2);
  *(void *)(a5 + 40) = v7;
  *(unsigned char *)(a5 + 48) = v8 & 1;
  uint64_t v9 = *(unsigned int *)(a2 + 36);
  *(void *)(a5 + 56) = 1 << *(unsigned char *)(a2 + 32);
  *(void *)(a5 + 64) = v9;
  *(unsigned char *)(a5 + 72) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F8AB5B8(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 < 0)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  else
  {
    uint64_t v7 = a2;
    unint64_t v8 = result;
    char v9 = a3 & 1;
    if (a4)
    {
      uint64_t result = sub_24F8BEB5C(result, a2, a3 & 1);
      uint64_t v11 = 0;
      uint64_t v12 = a6 + 64;
      uint64_t v13 = v7;
      uint64_t v14 = a6 + 96;
      while (1)
      {
        if (v9) {
          goto LABEL_31;
        }
        if ((v8 & 0x8000000000000000) != 0 || (uint64_t v15 = 1 << *(unsigned char *)(a6 + 32), (uint64_t)v8 >= v15))
        {
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        unint64_t v16 = v8 >> 6;
        unint64_t v17 = *(void *)(v12 + 8 * (v8 >> 6));
        if (((v17 >> v8) & 1) == 0) {
          goto LABEL_28;
        }
        if (*(_DWORD *)(a6 + 36) != v7) {
          goto LABEL_29;
        }
        unint64_t v18 = v17 & (-2 << (v8 & 0x3F));
        if (v18)
        {
          unint64_t v8 = __clz(__rbit64(v18)) | v8 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          unint64_t v19 = v16 + 1;
          if (v16 + 1 >= (unint64_t)(v15 + 63) >> 6) {
            goto LABEL_22;
          }
          unint64_t v20 = *(void *)(v12 + 8 * v19);
          if (!v20)
          {
            unint64_t v21 = (unint64_t)(v15 + 63) >> 6;
            unint64_t v19 = v16 + 2;
            if (v16 + 2 >= v21) {
              goto LABEL_22;
            }
            unint64_t v20 = *(void *)(v12 + 8 * v19);
            if (!v20)
            {
              unint64_t v19 = v16 + 3;
              if (v16 + 3 >= v21) {
                goto LABEL_22;
              }
              unint64_t v20 = *(void *)(v12 + 8 * v19);
              if (!v20)
              {
                while (v16 + 4 < v21)
                {
                  unint64_t v20 = *(void *)(v14 + 8 * v16++);
                  if (v20)
                  {
                    uint64_t v22 = v8;
                    uint64_t v23 = v14;
                    uint64_t result = sub_24F7705C4(v22, v7, 0);
                    uint64_t v14 = v23;
                    unint64_t v19 = v16 + 3;
                    goto LABEL_13;
                  }
                }
                uint64_t v24 = v8;
                uint64_t v25 = v14;
                uint64_t result = sub_24F7705C4(v24, v7, 0);
                uint64_t v14 = v25;
LABEL_22:
                unint64_t v8 = v15;
                goto LABEL_23;
              }
            }
          }
LABEL_13:
          unint64_t v8 = __clz(__rbit64(v20)) + (v19 << 6);
        }
LABEL_23:
        char v9 = 0;
        ++v11;
        uint64_t v7 = v13;
        if (v11 >= a4) {
          return v8;
        }
      }
    }
    sub_24F8BEB5C(result, a2, a3 & 1);
    return v8;
  }
  return result;
}

uint64_t sub_24F8AB794(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned int a6, char a7, uint64_t a8, uint64_t a9)
{
  if (a4 < 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
    uint64_t v13 = a2;
    unint64_t v14 = result;
    uint64_t result = sub_24F8BEB5C(result, a2, a3 & 1);
    if (a4)
    {
      uint64_t v15 = 0;
      uint64_t v16 = a7 & 1;
      char v17 = (a3 | a7) & 1;
      uint64_t v18 = a9 + 64;
      uint64_t v19 = a6;
      uint64_t v20 = a9 + 96;
      uint64_t v21 = a5;
      do
      {
        if (v17) {
          goto LABEL_34;
        }
        if (v13 != a6)
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        if (v14 == v21) {
          return 0;
        }
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_30;
        }
        uint64_t v22 = 1 << *(unsigned char *)(a9 + 32);
        if ((uint64_t)v14 >= v22) {
          goto LABEL_30;
        }
        unint64_t v23 = v14 >> 6;
        unint64_t v24 = *(void *)(v18 + 8 * (v14 >> 6));
        if (((v24 >> v14) & 1) == 0) {
          goto LABEL_31;
        }
        if (*(_DWORD *)(a9 + 36) != a6) {
          goto LABEL_32;
        }
        unint64_t v25 = v24 & (-2 << (v14 & 0x3F));
        if (v25)
        {
          unint64_t v14 = __clz(__rbit64(v25)) | v14 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          unint64_t v26 = v23 + 1;
          if (v23 + 1 >= (unint64_t)(v22 + 63) >> 6) {
            goto LABEL_24;
          }
          unint64_t v27 = *(void *)(v18 + 8 * v26);
          if (!v27)
          {
            unint64_t v28 = (unint64_t)(v22 + 63) >> 6;
            unint64_t v26 = v23 + 2;
            if (v23 + 2 >= v28) {
              goto LABEL_24;
            }
            unint64_t v27 = *(void *)(v18 + 8 * v26);
            if (!v27)
            {
              unint64_t v26 = v23 + 3;
              if (v23 + 3 >= v28) {
                goto LABEL_24;
              }
              unint64_t v27 = *(void *)(v18 + 8 * v26);
              if (!v27)
              {
                while (v23 + 4 < v28)
                {
                  unint64_t v27 = *(void *)(v20 + 8 * v23++);
                  if (v27)
                  {
                    uint64_t v29 = v14;
                    uint64_t v30 = v13;
                    uint64_t v31 = v16;
                    uint64_t v32 = v19;
                    uint64_t v33 = v20;
                    uint64_t result = sub_24F7705C4(v29, v30, 0);
                    uint64_t v20 = v33;
                    uint64_t v19 = v32;
                    uint64_t v16 = v31;
                    uint64_t v21 = a5;
                    unint64_t v26 = v23 + 3;
                    goto LABEL_15;
                  }
                }
                uint64_t v34 = v14;
                uint64_t v35 = v13;
                uint64_t v36 = v16;
                uint64_t v37 = v19;
                uint64_t v38 = v20;
                uint64_t result = sub_24F7705C4(v34, v35, 0);
                uint64_t v20 = v38;
                uint64_t v19 = v37;
                uint64_t v16 = v36;
                uint64_t v21 = a5;
LABEL_24:
                unint64_t v14 = v22;
                goto LABEL_25;
              }
            }
          }
LABEL_15:
          unint64_t v14 = __clz(__rbit64(v27)) + (v26 << 6);
        }
LABEL_25:
        ++v15;
        uint64_t v13 = v19;
        char v17 = v16;
      }
      while (v15 < a4);
    }
    return v14;
  }
  return result;
}

uint64_t sub_24F8AB9CC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result >= a2)
  {
    BOOL v4 = __OFSUB__(result, a3);
    BOOL v3 = result - a3 < 0;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v3 = 0;
  }
  if (v3 == v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8AB9E0(uint64_t result, int a2, char a3, long long *a4)
{
  if (a3) {
    goto LABEL_13;
  }
  uint64_t v6 = result;
  long long v10 = *a4;
  char v11 = *((unsigned char *)a4 + 16);
  sub_24F8BEB0C((uint64_t)&v10, (uint64_t)v12, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v12, (uint64_t)&v13, &qword_269A2C558);
  if (v15) {
    goto LABEL_13;
  }
  long long v7 = *(long long *)((char *)a4 + 24);
  char v8 = *((unsigned char *)a4 + 40);
  if (v14 != a2)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v13 > v6)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_24F8BEB0C((uint64_t)&v7, (uint64_t)v9, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v9, (uint64_t)&v16, &qword_269A2C558);
  if (v18)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v17 != a2) {
    goto LABEL_11;
  }
  if (v16 <= v6)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_24F8ABAE4(uint64_t result, int a2, char a3, long long *a4)
{
  if (a3) {
    goto LABEL_13;
  }
  uint64_t v6 = result;
  long long v10 = *a4;
  char v11 = *((unsigned char *)a4 + 16);
  sub_24F8BEB0C((uint64_t)&v10, (uint64_t)v12, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v12, (uint64_t)&v13, &qword_269A2C558);
  if (v15) {
    goto LABEL_13;
  }
  long long v7 = *(long long *)((char *)a4 + 24);
  char v8 = *((unsigned char *)a4 + 40);
  if (v14 != a2)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v13 > v6)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_24F8BEB0C((uint64_t)&v7, (uint64_t)v9, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v9, (uint64_t)&v16, &qword_269A2C558);
  if (v18)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v17 != a2) {
    goto LABEL_11;
  }
  if (v16 < v6)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_24F8ABBE8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8ABBFC(long long *a1, long long *a2)
{
  long long v18 = *a1;
  char v19 = *((unsigned char *)a1 + 16);
  sub_24F8BEB0C((uint64_t)&v18, (uint64_t)v20, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v20, (uint64_t)&v21, &qword_269A2C558);
  if (v23) {
    goto LABEL_14;
  }
  uint64_t v5 = v21;
  int v6 = v22;
  long long v15 = *a2;
  char v16 = *((unsigned char *)a2 + 16);
  sub_24F8BEB0C((uint64_t)&v15, (uint64_t)v17, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v17, (uint64_t)&v24, &qword_269A2C558);
  if (v26) {
    goto LABEL_14;
  }
  long long v12 = *(long long *)((char *)a2 + 24);
  char v13 = *((unsigned char *)a2 + 40);
  if (v6 != v25)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v5 < v24)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_24F8BEB0C((uint64_t)&v12, (uint64_t)v14, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v14, (uint64_t)&v27, &qword_269A2C558);
  if (v29) {
    goto LABEL_15;
  }
  uint64_t v7 = v27;
  int v8 = v28;
  long long v9 = *(long long *)((char *)a1 + 24);
  char v10 = *((unsigned char *)a1 + 40);
  sub_24F8BEB0C((uint64_t)&v9, (uint64_t)v11, &qword_269A2C558);
  uint64_t result = sub_24F8BEB0C((uint64_t)v11, (uint64_t)&v30, &qword_269A2C558);
  if (v32) {
    goto LABEL_15;
  }
  if (v8 != v31) {
    goto LABEL_12;
  }
  if (v7 < v30)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8ABD88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2) {
    __break(1u);
  }
  return result;
}

uint64_t Row.unadapted.getter()
{
  sub_24F7811D0((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = sub_24F8BF41C();
  return v2(v1);
}

void static Row.fetchAll(_:sql:arguments:adapter:)()
{
}

#error "24F8ABFF8: call analysis failed (funcsize=121)"

#error "24F8AC1FC: call analysis failed (funcsize=123)"

#error "24F8AC498: call analysis failed (funcsize=157)"

void static Row.fetchOne(_:sql:arguments:adapter:)()
{
}

void sub_24F8AC4E4()
{
  sub_24F76FF94();
  uint64_t v20 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  sub_24F7748F8(v10, (uint64_t)v16, &qword_26B1F7F10);
  sub_24F781274(&qword_26B1F7F50);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DDBF0;
  v19[0] = v4;
  v19[1] = v2;
  uint64_t v19[2] = v9;
  void v19[3] = v8;
  sub_24F7725D4(v19);
  sub_24F76C344((uint64_t)v19, v11 + 32);
  sub_24F7748F8((uint64_t)v16, (uint64_t)v15, &qword_26B1F7F10);
  long long v12 = 0u;
  long long v13 = 0u;
  *(void *)&long long v14 = 0;
  *((void *)&v14 + 1) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F8BE0A4((uint64_t)v15, (uint64_t)&v12, &qword_26B1F7F10);
  char v18 = 2;
  v17[0] = v12;
  v17[1] = v13;
  uint64_t v17[2] = v14;
  sub_24F774DA0((uint64_t)v16, &qword_26B1F7F10);
  v20(v6, v17);
  sub_24F774DA0((uint64_t)v17, &qword_26B1F7D38);
  sub_24F77BC10();
}

void sub_24F8AC64C(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t v3 = a1 + 56;
  sub_24F77DB00();
  unint64_t v6 = v5 & v4;
  int64_t v8 = (unint64_t)(v7 + 63) >> 6;
  if ((v5 & v4) == 0) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v2 << 6); ; unint64_t i = v15 + (v2 << 6))
  {
    sub_24F8B6860(&v16, *(void *)(*(void *)(a1 + 48) + 8 * i));
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    if (v11 >= v8) {
      goto LABEL_21;
    }
    ++v2;
    if (!*(void *)(v3 + 8 * v11))
    {
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_21;
      }
      if (!*(void *)(v3 + 8 * v2))
      {
        int64_t v2 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_21;
        }
        if (!*(void *)(v3 + 8 * v2))
        {
          int64_t v2 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_21;
          }
          if (!*(void *)(v3 + 8 * v2)) {
            break;
          }
        }
      }
    }
LABEL_18:
    sub_24F8BF05C();
    unint64_t v6 = v14 & v13;
  }
  int64_t v12 = v11 + 4;
  if (v12 < v8)
  {
    if (!*(void *)(v3 + 8 * v12))
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_25;
        }
        if (v2 >= v8) {
          goto LABEL_21;
        }
        ++v12;
        if (*(void *)(v3 + 8 * v2)) {
          goto LABEL_18;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
}

void sub_24F8AC790()
{
  sub_24F76FFB8();
  int64_t v0 = 0;
  uint64_t v2 = v1 + 56;
  sub_24F77DB00();
  uint64_t v5 = v4 & v3;
  int64_t v7 = (unint64_t)(v6 + 63) >> 6;
  if ((v4 & v3) == 0) {
    goto LABEL_3;
  }
LABEL_2:
  for (v5 &= v5 - 1; ; uint64_t v5 = v11 & v10)
  {
    swift_bridgeObjectRetain();
    sub_24F8B6490();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v8 = v0 + 1;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    if (v8 >= v7) {
      goto LABEL_21;
    }
    ++v0;
    if (!*(void *)(v2 + 8 * v8))
    {
      int64_t v0 = v8 + 1;
      if (v8 + 1 >= v7) {
        goto LABEL_21;
      }
      if (!*(void *)(v2 + 8 * v0))
      {
        int64_t v0 = v8 + 2;
        if (v8 + 2 >= v7) {
          goto LABEL_21;
        }
        if (!*(void *)(v2 + 8 * v0))
        {
          int64_t v0 = v8 + 3;
          if (v8 + 3 >= v7) {
            goto LABEL_21;
          }
          if (!*(void *)(v2 + 8 * v0)) {
            break;
          }
        }
      }
    }
LABEL_18:
    sub_24F8BF05C();
  }
  int64_t v9 = v8 + 4;
  if (v9 < v7)
  {
    if (!*(void *)(v2 + 8 * v9))
    {
      while (1)
      {
        int64_t v0 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_25;
        }
        if (v0 >= v7) {
          goto LABEL_21;
        }
        ++v9;
        if (*(void *)(v2 + 8 * v0)) {
          goto LABEL_18;
        }
      }
    }
    int64_t v0 = v9;
    goto LABEL_18;
  }
LABEL_21:
  sub_24F77E5E4();
  swift_release();
}

uint64_t static Row.fetchAll(_:arguments:adapter:)(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v7 = *a2;
  uint64_t result = static Row.fetchCursor(_:arguments:adapter:)(a1, (uint64_t *)&v7, a3);
  if (!v3)
  {
    uint64_t v5 = result;
    sub_24F781274(&qword_26B1F78B0);
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v5;
    inited[3] = sub_24F8B1D28;
    inited[4] = 0;
    return sub_24F8AAB60((uint64_t)inited, MEMORY[0x263F8EE78], (void (*)(uint64_t, uint64_t, uint64_t *))sub_24F89817C);
  }
  return result;
}

BOOL sub_24F8AC984(uint64_t a1, uint64_t a2)
{
  return a2 < a1;
}

uint64_t sub_24F8AC990@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, void (*a4)(uint64_t *__return_ptr, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  void (*v23)(uint64_t *__return_ptr, uint64_t);
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  long long v28;
  unsigned __int8 v29;
  long long v30;
  long long v31;
  uint64_t v32;
  long long v33;
  unsigned __int8 v34;
  long long v35;
  long long v36;
  uint64_t v37;

  uint64_t v37 = a5;
  uint64_t v11 = sub_24F8CEDD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 == 3)
  {
    uint64_t result = sub_24F78419C(a1, a2);
  }
  else
  {
    char v23 = a4;
    if (a3 != 2
      || (sub_24F8CEDC0(),
          uint64_t v22 = sub_24F8CED90(),
          unint64_t v17 = v16,
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11),
          v17 >> 60 == 15))
    {
      v23(&v32, result);
      uint64_t v27 = v32;
      int v28 = v33;
      char v29 = v34;
      uint64_t v30 = v35;
      int v31 = v36;
      uint64_t v24 = a1;
      int v25 = a2;
      char v26 = a3;
      sub_24F7D29A4();
      swift_allocError();
      sub_24F7B00C4(MEMORY[0x263F06F78], (uint64_t)&v27, v18);
      long long v19 = v28;
      uint64_t v20 = v31;
      unsigned __int8 v21 = v29;
      swift_release();
      sub_24F7B0E68(v19, *((uint64_t *)&v19 + 1), v21);
      swift_bridgeObjectRelease();
      sub_24F77835C(v20);
      return swift_willThrow();
    }
    a1 = v22;
    a2 = v17;
  }
  *a6 = a1;
  a6[1] = a2;
  return result;
}

uint64_t sub_24F8ACBAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, void (*a4)(uint64_t *__return_ptr, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v11 = sub_24F8CEDD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 == 4)
  {
    if (!(a2 | a1))
    {
      a1 = 0;
      a2 = 0xF000000000000000;
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  if (a3 == 3)
  {
    uint64_t result = sub_24F78419C(a1, a2);
    goto LABEL_10;
  }
  if (a3 != 2
    || (sub_24F8CEDC0(),
        uint64_t v21 = sub_24F8CED90(),
        unint64_t v22 = v16,
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11),
        v22 >> 60 == 15))
  {
LABEL_7:
    a4(&v31, result);
    uint64_t v26 = v31;
    long long v27 = v32;
    unsigned __int8 v28 = v33;
    long long v29 = v34;
    long long v30 = v35;
    uint64_t v23 = a1;
    unint64_t v24 = a2;
    char v25 = a3;
    sub_24F7D29A4();
    swift_allocError();
    sub_24F7B00C4(MEMORY[0x263F06F78], (uint64_t)&v26, v17);
    long long v18 = v27;
    uint64_t v19 = v30;
    unsigned __int8 v20 = v28;
    swift_release();
    sub_24F7B0E68(v18, *((uint64_t *)&v18 + 1), v20);
    swift_bridgeObjectRelease();
    sub_24F77835C(v19);
    return swift_willThrow();
  }
  a1 = v21;
  a2 = v22;
LABEL_10:
  *a6 = a1;
  a6[1] = a2;
  return result;
}

uint64_t Row.PrefetchedRowsView.keys.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v11 = MEMORY[0x263F8EE88];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_24F76FFD0(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v3[2];
  if (v4)
  {
    do
    {
      uint64_t v5 = v3[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || (unint64_t)(v4 - 1) > v3[3] >> 1)
      {
        sub_24F788584();
        uint64_t v3 = v6;
      }
      sub_24F781274(&qword_26B1F54F8);
      swift_arrayDestroy();
      uint64_t v7 = v3[2];
      memmove(v3 + 4, v3 + 9, 40 * v7 - 40);
      void v3[2] = v7 - 1;
      if (v5) {
        sub_24F8B6490();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_24F774654();
      sub_24F79347C(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v3[2];
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

double Row.scopesTree.getter@<D0>(_OWORD *a1@<X8>)
{
  Row.scopes.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

void Row.ScopesTreeView.names.getter()
{
  sub_24F76B80C();
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v43 = MEMORY[0x263F8EE88];
  uint64_t v4 = sub_24F7705D0(v1);
  uint64_t v6 = v5;
  char v8 = v7;
  char v42 = v7 & 1;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v37 = v2;
  swift_bridgeObjectRetain();
  uint64_t v36 = v3;
  swift_bridgeObjectRetain();
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_24F7705C4(v4, v6, 0);
    sub_24F77344C();
  }
  else
  {
    while (*(_DWORD *)(v1 + 36) == v6)
    {
      sub_24F8BF6BC();
      if (v4 == v9) {
        goto LABEL_8;
      }
      uint64_t v10 = sub_24F8B31EC((uint64_t)v41, v4, v6, 0, v1);
      uint64_t v12 = v11;
      uint64_t v13 = type metadata accessor for Row();
      sub_24F7E99C8((uint64_t)v41, (uint64_t)v38);
      uint64_t v14 = v39;
      uint64_t v15 = v40;
      sub_24F798FB4((uint64_t)v38, v39);
      sub_24F77AD10();
      MEMORY[0x270FA5388](v16);
      sub_24F76B830();
      uint64_t v19 = v18 - v17;
      (*(void (**)(uint64_t))(v20 + 16))(v18 - v17);
      uint64_t v21 = swift_retain();
      uint64_t v22 = sub_24F7E98E8(v21, v19, v13, v14, v15);
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v38);
      swift_bridgeObjectRetain();
      sub_24F7BEA60(v10, v12, v37, v36);
      uint64_t v24 = v23;
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v41);
      if (v24)
      {
        swift_bridgeObjectRelease();
        sub_24F773D00();
        *(void *)(v22 + 80) = v24;
        *(void *)(v22 + 88) = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      char v27 = v42;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_24F8BDDA8(v4, v6, v27, v1);
      uint64_t v34 = v28;
      char v30 = v29;
      uint64_t v31 = v1;
      char v32 = v29 & 1;
      sub_24F7705C4(v4, v6, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      char v42 = v32;
      sub_24F8B6490();
      swift_bridgeObjectRelease();
      uint64_t v33 = Row.scopes.getter();
      Row.ScopesTreeView.names.getter(v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v1 = v31;
      sub_24F8AC790();
      swift_release();
      uint64_t v4 = v35;
      uint64_t v6 = v34;
      if (v30) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
}

Swift::Bool __swiftcall Row.hasColumn(_:)(Swift::String a1)
{
  uint64_t v1 = sub_24F77232C(a1._countAndFlagsBits);
  v2(v1);
  return (v3 & 1) == 0;
}

#error "24F8AD50C: call analysis failed (funcsize=179)"

void Row.containsNonNullValue.getter()
{
  sub_24F76B80C();
  sub_24F773850();
  uint64_t v35 = v1;
  uint64_t v2 = v0[9];
  if (v2 < 0) {
    goto LABEL_24;
  }
  if (!v2)
  {
LABEL_7:
    Row.scopes.getter();
    uint64_t v5 = v41;
    uint64_t v36 = v42;
    uint64_t v6 = sub_24F7705D0(v41);
    uint64_t v8 = v7;
    char v10 = v9;
    char v43 = v9 & 1;
    while (1)
    {
      if (v10) {
        goto LABEL_25;
      }
      uint64_t v11 = v8;
      if (*(_DWORD *)(v5 + 36) != v8)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_24F8BF6BC();
      if (v6 == v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_24F7705C4(v6, v8, 0);
        goto LABEL_21;
      }
      sub_24F8B31EC((uint64_t)&v40, v6, v8, 0, v5);
      sub_24F7E99C8((uint64_t)&v40, (uint64_t)v37);
      uint64_t v13 = v38;
      uint64_t v14 = v39;
      sub_24F798FB4((uint64_t)v37, v38);
      sub_24F77AD10();
      MEMORY[0x270FA5388](v15);
      sub_24F76B830();
      uint64_t v18 = v17 - v16;
      (*(void (**)(uint64_t))(v19 + 16))(v17 - v16);
      uint64_t v20 = swift_retain();
      uint64_t v21 = sub_24F7E98E8(v20, v18, v35, v13, v14);
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v37);
      if (!*(void *)(v36 + 16)) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_24F782950();
      uint64_t v23 = v11;
      if ((v24 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      uint64_t v25 = *(void *)(v36 + 56) + 24 * v22;
      uint64_t v26 = *(void *)(v25 + 8);
      uint64_t v27 = *(void *)(v25 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v40);
      swift_bridgeObjectRelease();
      sub_24F773D00();
      *(void *)(v21 + 80) = v26;
      *(void *)(v21 + 88) = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      char v28 = v43;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v6;
      uint64_t v30 = v23;
      uint64_t v6 = sub_24F8BDDA8(v6, v23, v28, v5);
      uint64_t v8 = v31;
      char v10 = v32;
      sub_24F7705C4(v29, v30, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = swift_release();
      char v43 = v10 & 1;
      char v34 = Row.containsNonNullValue.getter(v33);
      swift_release();
      if (v34)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_24F7705C4(v6, v8, v10 & 1);
        goto LABEL_21;
      }
    }
    uint64_t v23 = v11;
LABEL_16:
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v40);
    goto LABEL_17;
  }
  uint64_t v3 = 0;
  while (v2 != v3)
  {
    sub_24F7811D0(v0 + 2, v0[5]);
    sub_24F8BEFE8();
    if ((v4() & 1) == 0)
    {
LABEL_21:
      sub_24F77344C();
      return;
    }
    if (v2 == ++v3) {
      goto LABEL_7;
    }
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_24F8AD9C8(uint64_t a1)
{
  if (a1 < 0 || (sub_24F785E0C(), v2 ^ v3 | v1))
  {
    sub_24F770EAC();
    uint64_t result = sub_24F771278();
    __break(1u);
  }
  else
  {
    sub_24F8BF74C();
    sub_24F8BEFE8();
    return v4();
  }
  return result;
}

Swift::Bool __swiftcall Row.hasNull(atIndex:)(Swift::Int atIndex)
{
  if (atIndex < 0 || (sub_24F785E0C(), v4 ^ v5 | v3))
  {
    sub_24F770EAC();
    Swift::Bool result = sub_24F771278();
    __break(1u);
  }
  else
  {
    sub_24F76FD38();
    return (*(uint64_t (**)(Swift::Int))(v1 + 40))(atIndex) & 1;
  }
  return result;
}

#error "24F8ADC2C: call analysis failed (funcsize=112)"

uint64_t Row.count.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t Row.prefetchedRows.getter@<X0>(void *a1@<X8>)
{
  sub_24F773614();
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  *a1 = v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Row.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  return sub_24F76FDD8(v0);
}

uint64_t Row.__allocating_init(dictionaryLiteral:)(uint64_t a1)
{
  return sub_24F8AE24C(a1, (void (*)(void))sub_24F8AA81C);
}

uint64_t sub_24F8AE24C(uint64_t a1, void (*a2)(void))
{
  return sub_24F79036C();
}

uint64_t Row.hashValue.getter()
{
  return sub_24F8CFF80();
}

void sub_24F8AE30C()
{
  static Row.== infix(_:_:)();
}

void static Row.== infix(_:_:)()
{
  sub_24F76B80C();
  if (v2 == v3) {
    goto LABEL_78;
  }
  sub_24F8BF61C();
  uint64_t v5 = *(void *)(v4 + 72);
  if (v5 != *(void *)(v6 + 72)) {
    goto LABEL_78;
  }
  uint64_t v112 = v1;
  uint64_t v113 = 0;
  uint64_t v114 = v0;
  uint64_t v115 = 0;
  uint64_t v103 = v0;
  uint64_t v107 = v1;
  if (v5)
  {
    swift_retain();
    swift_retain();
    uint64_t v7 = 0;
    uint64_t v101 = v5;
    while (1)
    {
      Row.subscript.getter();
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      uint64_t v12 = v109;
      unint64_t v13 = v110;
      char v14 = v111;
      swift_bridgeObjectRetain();
      sub_24F781F34(v12, v13, v14);
      swift_bridgeObjectRelease();
      sub_24F781F10(v12, v13, v14);
      if (*(void *)(v1 + 72) <= v7)
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
        return;
      }
      uint64_t v113 = v7 + 1;
      if (v7 == v5) {
        break;
      }
      unint64_t v104 = v13;
      char v105 = v14;
      Row.subscript.getter();
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      uint64_t v19 = v0;
      uint64_t v20 = v109;
      unint64_t v21 = v110;
      char v22 = v111;
      swift_bridgeObjectRetain();
      sub_24F781F34(v20, v21, v22);
      swift_bridgeObjectRelease();
      sub_24F781F10(v20, v21, v22);
      if (*(void *)(v19 + 72) <= v7) {
        goto LABEL_81;
      }
      uint64_t v115 = ++v7;
      if (v9 == v16 && v11 == v18)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = sub_24F8CFD00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          swift_release();
          swift_release();
          sub_24F781F10(v20, v21, v22);
          sub_24F781F10(v12, v104, v105);
          goto LABEL_78;
        }
      }
      v108[0] = v12;
      v108[1] = v104;
      LOBYTE(v109) = v105;
      uint64_t v116 = v20;
      unint64_t v117 = v21;
      char v118 = v22;
      char v25 = static DatabaseValue.== infix(_:_:)((uint64_t)v108, (uint64_t)&v116);
      sub_24F781F10(v20, v21, v22);
      sub_24F781F10(v12, v104, v105);
      uint64_t v1 = v107;
      if ((v25 & 1) == 0)
      {
        swift_release();
        swift_release();
        goto LABEL_78;
      }
      uint64_t v5 = v101;
      uint64_t v0 = v103;
      if (v7 == v101) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    sub_24F781F10(v12, v13, v14);
  }
  else
  {
    swift_retain();
    swift_retain();
  }
LABEL_21:
  swift_release();
  swift_release();
  Row.scopes.getter();
  uint64_t v26 = v113;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  Row.scopes.getter();
  uint64_t v27 = v113;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((sub_24F8B2410(v26, v27) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_77;
  }
  uint64_t v98 = v27;
  uint64_t v100 = v26 + 64;
  sub_24F77DB00();
  uint64_t v30 = v29 & v28;
  int64_t v102 = (unint64_t)(v31 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  while (1)
  {
    if (v30)
    {
      sub_24F774744();
      uint64_t v106 = v30;
      uint64_t v34 = v33 | (v32 << 6);
      goto LABEL_48;
    }
    int64_t v35 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      goto LABEL_82;
    }
    if (v35 >= v102) {
      break;
    }
    uint64_t v36 = v32 + 1;
    if (!*(void *)(v100 + 8 * v35))
    {
      uint64_t v36 = v35 + 1;
      sub_24F780B28();
      if (v37 == v38) {
        break;
      }
      sub_24F8BEECC();
      if (!v40)
      {
        uint64_t v36 = v39 + 2;
        sub_24F780B28();
        if (v37 == v38) {
          break;
        }
        sub_24F8BEECC();
        if (!v42)
        {
          uint64_t v36 = v41 + 3;
          sub_24F780B28();
          if (v37 == v38) {
            break;
          }
          sub_24F8BEECC();
          if (!v44)
          {
            uint64_t v36 = v43 + 4;
            sub_24F780B28();
            if (v37 == v38) {
              break;
            }
            sub_24F8BEECC();
            if (!v46)
            {
              int64_t v47 = v45 + 5;
              if (v47 >= v102) {
                break;
              }
              if (!*(void *)(v100 + 8 * v47))
              {
                while (1)
                {
                  uint64_t v36 = v47 + 1;
                  if (__OFADD__(v47, 1)) {
                    goto LABEL_83;
                  }
                  sub_24F780B28();
                  if (v37 == v38) {
                    goto LABEL_75;
                  }
                  sub_24F8BEECC();
                  int64_t v47 = v48 + 1;
                  if (v49) {
                    goto LABEL_47;
                  }
                }
              }
              uint64_t v36 = v47;
            }
          }
        }
      }
    }
LABEL_47:
    sub_24F8BF05C();
    uint64_t v106 = v51 & v50;
    uint64_t v34 = v52 + (v36 << 6);
LABEL_48:
    uint64_t v26 = *(void *)(*(void *)(v26 + 48) + 16 * v34 + 8);
    swift_bridgeObjectRetain();
    Row.scopes.getter();
    uint64_t v53 = v119;
    if (*(void *)(v117 + 16))
    {
      unint64_t v54 = sub_24F782950();
      if (v55)
      {
        sub_24F8BF248(v54, v55, v56, v54);
        sub_24F7E99C8((uint64_t)&v112, (uint64_t)v108);
        uint64_t v57 = v111;
        sub_24F798FB4((uint64_t)v108, v110);
        sub_24F77AD10();
        MEMORY[0x270FA5388](v58);
        uint64_t v60 = sub_24F7850D8(v59, v98);
        v61(v60);
        swift_retain();
        sub_24F8BF778();
        uint64_t v32 = sub_24F7E98E8(v62, v63, v64, v65, v57);
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v108);
        if (*(void *)(v53 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v66 = sub_24F782950();
          if (v67)
          {
            uint64_t v68 = *(void *)(v53 + 56) + 24 * v66;
            uint64_t v69 = *(void *)(v68 + 8);
            uint64_t v70 = *(void *)(v68 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v112);
            swift_bridgeObjectRelease();
            sub_24F773D00();
            *(void *)(v32 + 80) = v69;
            *(void *)(v32 + 88) = v70;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_56:
            swift_bridgeObjectRelease();
            goto LABEL_57;
          }
          swift_bridgeObjectRelease();
        }
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v112);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_56;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v32 = 0;
LABEL_57:
    Row.scopes.getter();
    uint64_t v71 = v119;
    if (*(void *)(v117 + 16))
    {
      unint64_t v72 = sub_24F782950();
      if (v73)
      {
        sub_24F8BF248(v72, v73, v74, v72);
        uint64_t v26 = v75;
        sub_24F7E99C8((uint64_t)&v112, (uint64_t)v108);
        uint64_t v76 = v111;
        sub_24F798FB4((uint64_t)v108, v110);
        sub_24F77AD10();
        MEMORY[0x270FA5388](v77);
        uint64_t v79 = sub_24F7850D8(v78, v98);
        v80(v79);
        swift_retain();
        sub_24F8BF778();
        uint64_t v85 = sub_24F7E98E8(v81, v82, v83, v84, v76);
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v108);
        if (*(void *)(v71 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v86 = sub_24F782950();
          if (v87)
          {
            uint64_t v88 = *(void *)(v71 + 56) + 24 * v86;
            uint64_t v89 = *(void *)(v88 + 8);
            uint64_t v99 = *(void *)(v88 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v112);
            swift_bridgeObjectRelease();
            sub_24F773D00();
            uint64_t v90 = *(void *)(v85 + 80);
            *(void *)(v85 + 80) = v89;
            *(void *)(v85 + 88) = v99;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v26 = v90;
LABEL_65:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_66;
          }
          swift_bridgeObjectRelease();
        }
        _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v112);
        goto LABEL_65;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v85 = 0;
LABEL_66:
    uint64_t v1 = v107;
    uint64_t v30 = v106;
    if (v32)
    {
      if (!v85) {
        goto LABEL_74;
      }
      swift_retain();
      uint64_t v91 = swift_retain();
      char v92 = static Row.== infix(_:_:)(v91, v85);
      swift_release_n();
      swift_release_n();
      sub_24F8BF628();
      if ((v92 & 1) == 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_77;
      }
    }
    else
    {
      sub_24F8BF628();
      if (v85)
      {
LABEL_74:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_77;
      }
    }
  }
LABEL_75:
  swift_release();
  sub_24F773614();
  uint64_t v93 = *(void *)(v1 + 88);
  sub_24F773614();
  uint64_t v94 = *(void *)(v103 + 88);
  uint64_t v95 = (void *)sub_24F76B8E8();
  char v97 = sub_24F7EBE30(v95, v96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v97)
  {
    swift_bridgeObjectRetain();
    sub_24F82085C(v93, v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_77:
  swift_bridgeObjectRelease();
LABEL_78:
  sub_24F77344C();
}

uint64_t sub_24F8AED90()
{
  return Row.hashValue.getter();
}

uint64_t sub_24F8AEDB4()
{
  return Row.hash(into:)();
}

uint64_t Row.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t result = sub_24F8CFF40();
  if (v1)
  {
    swift_retain();
    uint64_t v3 = 0;
    do
    {
      Row.subscript.getter();
      swift_bridgeObjectRetain();
      sub_24F781F34(v9, v10, v11);
      swift_bridgeObjectRelease();
      sub_24F781F10(v9, v10, v11);
      if (*(void *)(v0 + 72) <= v3)
      {
        __break(1u);
        JUMPOUT(0x24F8AEFE0);
      }
      ++v3;
      sub_24F8CEE50();
      swift_bridgeObjectRelease();
      switch(v11)
      {
        case 2:
          sub_24F781F34(v9, v10, 2);
          sub_24F8CEE50();
          uint64_t v4 = v9;
          unint64_t v5 = v10;
          char v6 = 2;
          goto LABEL_8;
        case 3:
          sub_24F781F34(v9, v10, 3);
          sub_24F8CE8E0();
          uint64_t v4 = v9;
          unint64_t v5 = v10;
          char v6 = 3;
LABEL_8:
          sub_24F781F10(v4, v5, v6);
          break;
        case 4:
          sub_24F8CFF40();
          break;
        default:
          sub_24F8CFF70();
          break;
      }
      uint64_t v7 = sub_24F781A14();
      sub_24F781F10(v7, v8, v11);
    }
    while (v1 != v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_24F8AEFF4()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8AF034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_24F8AF0B0(a1, a3);
  if (a2 < 1)
  {
    if (result <= 0 && result > a2) {
      goto LABEL_4;
    }
LABEL_10:
    uint64_t result = sub_24F7B0D44(a1, a2, (void *)a4);
    char v8 = 0;
    goto LABEL_11;
  }
  if (result < 0 || result >= (unint64_t)a2) {
    goto LABEL_10;
  }
LABEL_4:
  *(void *)a4 = 0;
  char v8 = 1;
LABEL_11:
  *(unsigned char *)(a4 + 8) = v8;
  return result;
}

uint64_t sub_24F8AF0B0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 72);
  if (v3 >= a2 && ((a2 | result) & 0x8000000000000000) == 0 && v3 >= result) {
    return a2 - result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8AF0D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Row.__allocating_init(dictionaryLiteral:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_24F8AF100()
{
  return Row.description.getter();
}

uint64_t sub_24F8AF124()
{
  return Row.debugDescription.getter();
}

uint64_t Row.debugDescription.getter()
{
  return sub_24F8B27C8(0);
}

uint64_t sub_24F8AF150@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_24F8AF178(*a1, a2);
}

uint64_t sub_24F8AF178@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return result;
  }
  *a2 = v3;
  if (v3 < 0 || v3 >= *(void *)(v2 + 72)) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_24F8AF1A0(uint64_t *a1)
{
  uint64_t result = sub_24F8AF178(*a1, &v3);
  *a1 = v3;
  return result;
}

uint64_t sub_24F8AF1E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24F7B0D44(*a1, a2, a3);
}

uint64_t sub_24F8AF208@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24F8AF034(*a1, a2, *a3, a4);
}

uint64_t sub_24F8AF234(uint64_t *a1, uint64_t *a2)
{
  return sub_24F8AF0B0(*a1, *a2);
}

void sub_24F8AF260(void *a1@<X8>)
{
}

void sub_24F8AF278(void *a1@<X8>)
{
}

void Row.endIndex.getter(void *a1@<X8>)
{
}

void (*sub_24F8AF2A4(void *a1))()
{
  uint64_t v2 = malloc(0x68uLL);
  *a1 = v2;
  Row.subscript.getter();
  *((void *)v2 + 5) = v3;
  *(void *)uint64_t v2 = v3;
  *((void *)v2 + 1) = v4;
  uint64_t v5 = *((void *)v2 + 2);
  unint64_t v6 = *((void *)v2 + 3);
  *((void *)v2 + 10) = v4;
  *((void *)v2 + 11) = v5;
  *((void *)v2 + 12) = v6;
  char v7 = *((unsigned char *)v2 + 32);
  *((unsigned char *)v2 + 33) = v7;
  *((void *)v2 + 6) = v4;
  *((void *)v2 + 7) = v5;
  *((void *)v2 + 8) = v6;
  *((unsigned char *)v2 + 72) = v7;
  swift_bridgeObjectRetain();
  sub_24F781F34(v5, v6, v7);
  return sub_24F8AF358;
}

void sub_24F8AF358()
{
  sub_24F777204();
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  unint64_t v1 = *(void *)(*(void *)v0 + 96);
  char v3 = *(unsigned char *)(*(void *)v0 + 72);
  char v4 = *(unsigned char *)(*(void *)v0 + 33);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_24F7752FC();
  sub_24F781F10(v5, v6, v3);
  swift_bridgeObjectRelease();
  sub_24F781F10(v2, v1, v4);
  sub_24F773598();
  free(v7);
}

uint64_t sub_24F8AF3DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F8AB480(*a1, a1[1], a2);
}

void sub_24F8AF408(void *a1@<X8>)
{
}

void sub_24F8AF42C(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = 0;
    a1[1] = v2;
  }
}

BOOL sub_24F8AF440()
{
  return sub_24F8AA4E8();
}

uint64_t sub_24F8AF468()
{
  return Row.count.getter();
}

uint64_t sub_24F8AF48C(uint64_t *a1, uint64_t *a2)
{
  return sub_24F8AB9CC(*a1, *a2, a2[1]);
}

uint64_t sub_24F8AF4BC(uint64_t *a1, uint64_t *a2)
{
  return sub_24F8ABBE8(*a1, *a2, a2[1]);
}

uint64_t sub_24F8AF4EC(uint64_t *a1, uint64_t *a2)
{
  return sub_24F8ABD88(*a1, a1[1], *a2, a2[1]);
}

void sub_24F8AF520(uint64_t *a1@<X0>, void *a2@<X8>)
{
}

void sub_24F8AF548(void *a1@<X8>, uint64_t a2@<X0>)
{
  if (a2 < 0 || *(void *)(v2 + 72) <= a2) {
    __break(1u);
  }
  else {
    sub_24F780D60(a1);
  }
}

void sub_24F8AF564(uint64_t *a1)
{
  sub_24F8AF548(&v2, *a1);
  *a1 = v2;
}

void sub_24F8AF5A4(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_24F8AF5B0()
{
  return sub_24F8904B8();
}

uint64_t sub_24F8AF5D4()
{
  return sub_24F7B0D70();
}

uint64_t sub_24F8AF5F8()
{
  return sub_24F8ABDA0();
}

uint64_t sub_24F8AF61C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = sub_24F8BF3BC();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t Row.subscript.getter(uint64_t a1)
{
  if (a1 < 0 || (sub_24F785E0C(), v3 ^ v4 | v2))
  {
    sub_24F770EAC();
    uint64_t result = sub_24F771278();
    __break(1u);
  }
  else
  {
    sub_24F7811D0((void *)(v1 + 16), *(void *)(v1 + 40));
    sub_24F7762EC();
    v5();
    sub_24F775938();
    uint64_t v6 = sub_24F77591C();
    return sub_24F781F10(v6, v7, v8);
  }
  return result;
}

uint64_t sub_24F8AF750()
{
  sub_24F8BEFF8();
  uint64_t result = v1();
  if (v0)
  {
    uint64_t result = sub_24F8BEEAC();
    __break(1u);
  }
  return result;
}

void Row.decodeIfPresent<A>(_:atIndex:)(uint64_t a1, uint64_t a2)
{
  if (a2 < 0 || *(void *)(v2 + 72) <= a2)
  {
    sub_24F770EAC();
    sub_24F771278();
    __break(1u);
  }
  else
  {
    static DatabaseValueConvertible.decodeIfPresent(fromRow:atUncheckedIndex:)();
  }
}

#error "24F8AF970: call analysis failed (funcsize=122)"

void Row.decode<A>(_:atIndex:)(uint64_t a1, uint64_t a2)
{
  if (a2 < 0 || *(void *)(v2 + 72) <= a2)
  {
    sub_24F770EAC();
    sub_24F771278();
    __break(1u);
  }
  else
  {
    static DatabaseValueConvertible.decode(fromRow:atUncheckedIndex:)();
  }
}

void Row.decodeIfPresent<A>(_:forKey:)()
{
  sub_24F76FF94();
  sub_24F7811D0((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_24F8BF7A0();
  sub_24F773578();
  v1();
  if (v2) {
    sub_24F8BEFA8();
  }
  else {
    static DatabaseValueConvertible.decodeIfPresent(fromRow:atUncheckedIndex:)();
  }
  sub_24F77BC10();
}

#error "24F8AFD30: call analysis failed (funcsize=159)"

void Row.decode<A>(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24F7811D0((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_24F773578();
  v6();
  if (v7)
  {
    long long v14 = 0uLL;
    char v15 = -1;
    char v8 = (void *)swift_retain();
    RowDecodingContext.init(row:key:)(v8, &v14, (uint64_t)v16);
    sub_24F7D29A4();
    sub_24F770FA4();
    static RowDecodingError.columnNotFound(_:context:)(a2, a3, (uint64_t)v16, v9);
    uint64_t v10 = v16[1];
    uint64_t v11 = v16[2];
    unsigned __int8 v12 = v17;
    swift_release();
    sub_24F7B0E68(v10, v11, v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_24F76B950();
    sub_24F77835C(v13);
    swift_willThrow();
  }
  else
  {
    static DatabaseValueConvertible.decode(fromRow:atUncheckedIndex:)();
  }
}

uint64_t Row.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = sub_24F8BEFC8(a1, a2);
  v5(v4);
  Row.subscript.getter(a3);
  return swift_bridgeObjectRelease();
}

void Row.subscript.getter()
{
}

{
  sub_24F8B02B0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_24F76FFB8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6);
  Row.decode<A>(_:forKey:)(v8, v8, v9, v5, v3, v1);
  swift_bridgeObjectRelease();
  sub_24F77E5E4();
}

{
  sub_24F8B154C();
}

{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void (*v7)(void);

  sub_24F76FFB8();
  char v2 = *v1;
  if (*v1 < 0 || v2 >= v0[9])
  {
    sub_24F770EAC();
    sub_24F771278();
    __break(1u);
  }
  else
  {
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v5 = (void *)sub_24F7752FC();
    sub_24F7811D0(v5, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v4);
    sub_24F7811D0(v0 + 2, v0[5]);
    sub_24F7762EC();
    v7();
    sub_24F76B950();
    sub_24F77E5E4();
  }
}

#error "24F8B026C: call analysis failed (funcsize=190)"

void sub_24F8B02B0()
{
  sub_24F76FFB8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6);
  v1(v8, v8, v9, v5, v3);
  swift_bridgeObjectRelease();
  sub_24F77E5E4();
}

uint64_t Row.dataNoCopy(atIndex:)(uint64_t a1)
{
  return sub_24F8B044C(a1);
}

uint64_t sub_24F8B044C(uint64_t a1)
{
  if (a1 < 0 || (sub_24F785E0C(), v2 ^ v3 | v1))
  {
    sub_24F770EAC();
    uint64_t result = sub_24F771278();
    __break(1u);
  }
  else
  {
    sub_24F8BF74C();
    sub_24F8BEFE8();
    return v4();
  }
  return result;
}

uint64_t Row.dataNoCopy(named:)()
{
  return sub_24F8B0524();
}

uint64_t sub_24F8B0524()
{
  uint64_t v1 = v0;
  char v2 = (void *)sub_24F8BF2AC();
  sub_24F7811D0(v2, v3);
  sub_24F8BF734();
  sub_24F773578();
  uint64_t v5 = v4();
  if (v6) {
    return 0;
  }
  uint64_t v7 = v5;
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v10 = (void *)sub_24F7752FC();
  sub_24F7811D0(v10, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 80))(v7, v9, v8);
}

uint64_t Row.dataNoCopy<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_24F8BEFC8(a1, a2);
  v3(v2);
  sub_24F8B0524();
  swift_bridgeObjectRelease();
  return sub_24F76B8E8();
}

uint64_t Row.databaseValues.getter()
{
  return swift_retain();
}

uint64_t sub_24F8B06AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_24F781F34(v3, v4, v5);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_24F8B072C()
{
  sub_24F8BEFF8();
  uint64_t result = v1();
  if (v0)
  {
    uint64_t result = sub_24F8BEEAC();
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8B0784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Row.scopes.getter();
  uint64_t v69 = a2;
  uint64_t v55 = a3;
  uint64_t v9 = Row.ScopesTreeView.subscript.getter(a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v9)
  {
    Row.containsNonNullValue.getter();
    if (v10)
    {
      return (*(uint64_t (**)(uint64_t))(a5 + 8))(v9);
    }
    else
    {
      uint64_t v23 = v69;
      *(void *)&long long v59 = v69;
      *((void *)&v59 + 1) = v55;
      char v60 = 2;
      swift_retain();
      swift_bridgeObjectRetain();
      RowDecodingContext.init(row:key:)(v5, &v59, (uint64_t)&v61);
      uint64_t v24 = v63;
      uint64_t v25 = v64;
      uint64_t v26 = v66;
      uint64_t v50 = v65;
      uint64_t v27 = v67;
      uint64_t v45 = v62;
      uint64_t v48 = v68;
      sub_24F8BF29C();
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      *(void *)&long long v59 = 0x2065706F6373;
      *((void *)&v59 + 1) = 0xE600000000000000;
      uint64_t v57 = v23;
      uint64_t v58 = v55;
      swift_bridgeObjectRetain();
      sub_24F8CEE10();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      uint64_t v56 = *((void *)&v59 + 1);
      uint64_t v69 = v59;
      uint64_t v28 = swift_retain();
      uint64_t v29 = sub_24F794AA4(v28);
      swift_release();
      sub_24F7B0E54(v45, v24, v25);
      swift_bridgeObjectRetain();
      sub_24F777E70(v27);
      swift_release();
      sub_24F7B0E68(v45, v24, v25);
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_24F8BF734();
      sub_24F77835C(v30);
      sub_24F7D29A4();
      sub_24F770FA4();
      uint64_t v31 = v69;
      *(void *)uint64_t v32 = a4;
      *(void *)(v32 + 8) = v31;
      *(void *)(v32 + 16) = v56;
      *(void *)(v32 + 24) = v29;
      *(void *)(v32 + 32) = v45;
      *(void *)(v32 + 40) = v24;
      *(void *)(v32 + 48) = v25;
      *(void *)(v32 + 56) = v50;
      *(void *)(v32 + 64) = v26;
      *(void *)(v32 + 72) = v27;
      *(void *)(v32 + 88) = 0;
      *(void *)(v32 + 96) = 0;
      *(void *)(v32 + 80) = v48;
      *(unsigned char *)(v32 + 104) = 1;
      swift_willThrow();
      return swift_release();
    }
  }
  else
  {
    Row.scopes.getter();
    Row.ScopesTreeView.names.getter();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(void *)(v13 + 16))
    {
      long long v14 = (void *)sub_24F8BF670();
      RowDecodingContext.init(row:key:)(v14, &v59, (uint64_t)&v61);
      uint64_t v15 = v62;
      uint64_t v16 = v63;
      uint64_t v17 = v64;
      uint64_t v53 = v65;
      uint64_t v44 = v67;
      uint64_t v47 = v66;
      uint64_t v43 = v68;
      sub_24F8BF29C();
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      *(void *)&long long v59 = 0xD000000000000011;
      *((void *)&v59 + 1) = 0x800000024F8D5300;
      uint64_t v58 = v55;
      swift_bridgeObjectRetain();
      sub_24F8CEE10();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRetain();
      sub_24F794C78();
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      uint64_t v57 = v19;
      sub_24F897428(&v57);
      if (v49)
      {
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      MEMORY[0x2533638F0](v57, MEMORY[0x263F8D310]);
      sub_24F8CEEB0();
      swift_release();
      swift_bridgeObjectRelease();
      long long v20 = v59;
      uint64_t v21 = swift_retain();
      uint64_t v42 = sub_24F794AA4(v21);
      swift_release();
      sub_24F7B0E54(v15, v16, v17);
      swift_bridgeObjectRetain();
      sub_24F777E70(v44);
      swift_release();
      sub_24F7B0E68(v15, v16, v17);
      swift_bridgeObjectRelease();
      sub_24F77835C(v44);
      sub_24F7D29A4();
      sub_24F770FA4();
      *(void *)uint64_t v22 = v69;
      *(void *)(v22 + 8) = v55;
      *(void *)(v22 + 16) = 2;
      *(_OWORD *)(v22 + 24) = v20;
      *(void *)(v22 + 40) = v42;
      *(void *)(v22 + 48) = v15;
      *(void *)(v22 + 56) = v16;
      *(void *)(v22 + 64) = v17;
      *(void *)(v22 + 72) = v53;
      *(void *)(v22 + 80) = v47;
      *(void *)(v22 + 88) = v44;
      *(void *)(v22 + 96) = v43;
      *(unsigned char *)(v22 + 104) = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = (void *)sub_24F8BF670();
      RowDecodingContext.init(row:key:)(v33, &v59, (uint64_t)&v61);
      uint64_t v34 = v63;
      uint64_t v35 = v64;
      uint64_t v36 = v66;
      uint64_t v51 = v62;
      uint64_t v54 = v65;
      uint64_t v37 = v67;
      uint64_t v38 = v68;
      sub_24F8BF29C();
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      *(void *)&long long v59 = 0xD000000000000011;
      *((void *)&v59 + 1) = 0x800000024F8D5300;
      uint64_t v57 = v69;
      uint64_t v58 = v55;
      swift_bridgeObjectRetain();
      sub_24F8CEE10();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      long long v39 = v59;
      uint64_t v40 = swift_retain();
      uint64_t v46 = sub_24F794AA4(v40);
      swift_release();
      sub_24F7B0E54(v51, v34, v35);
      swift_bridgeObjectRetain();
      sub_24F777E70(v37);
      swift_release();
      sub_24F7B0E68(v51, v34, v35);
      swift_bridgeObjectRelease();
      sub_24F77835C(v37);
      sub_24F7D29A4();
      sub_24F770FA4();
      *(void *)uint64_t v41 = v69;
      *(void *)(v41 + 8) = v55;
      *(void *)(v41 + 16) = 2;
      *(_OWORD *)(v41 + 24) = v39;
      *(void *)(v41 + 40) = v46;
      *(void *)(v41 + 48) = v51;
      *(void *)(v41 + 56) = v34;
      *(void *)(v41 + 64) = v35;
      *(void *)(v41 + 72) = v54;
      *(void *)(v41 + 80) = v36;
      *(void *)(v41 + 88) = v37;
      *(void *)(v41 + 96) = v38;
      *(unsigned char *)(v41 + 104) = 0;
    }
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
}

uint64_t Row.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_24F8B0E1C(a1, a2, a3);
}

uint64_t sub_24F8B0E1C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  Row.scopes.getter();
  uint64_t v5 = sub_24F781A14();
  uint64_t v7 = Row.ScopesTreeView.subscript.getter(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v7) {
    goto LABEL_5;
  }
  Row.containsNonNullValue.getter();
  if ((v8 & 1) == 0)
  {
    swift_release();
LABEL_5:
    uint64_t v9 = 1;
    return sub_24F7771BC(a3, v9, 1, a1);
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(v7, a1);
  uint64_t v9 = 0;
  return sub_24F7771BC(a3, v9, 1, a1);
}

uint64_t sub_24F8B0F30()
{
  sub_24F8BEFF8();
  uint64_t result = v1();
  if (v0)
  {
    uint64_t result = sub_24F8BEEAC();
    __break(1u);
  }
  return result;
}

void sub_24F8B0F8C()
{
  sub_24F76FF94();
  uint64_t v35 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_getAssociatedTypeWitness();
  sub_24F773974();
  sub_24F771D60();
  MEMORY[0x270FA5388](v7);
  uint64_t v32 = (long long *)(v0 + 80);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 88);
  *(void *)&long long v42 = *(void *)(v0 + 80);
  *((void *)&v42 + 1) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Row.PrefetchedRowsView.subscript.getter();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (!v10)
  {
    long long v42 = *v32;
    if (*(void *)(Row.PrefetchedRowsView.keys.getter() + 16))
    {
      uint64_t v13 = (void *)sub_24F8BF518();
      sub_24F8BF4E0(v13);
      uint64_t v37 = *((void *)&v42 + 1);
      uint64_t v31 = v43;
      unsigned __int8 v14 = v44;
      uint64_t v15 = v47;
      uint64_t v34 = v45;
      uint64_t v36 = v46;
      uint64_t v16 = v48;
      unint64_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
      sub_24F8CF7D0();
      sub_24F8BF580();
      uint64_t v38 = v6;
      uint64_t v39 = v4;
      swift_bridgeObjectRetain();
      sub_24F8CEE10();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRetain();
      sub_24F794C78();
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      uint64_t v38 = v18;
      sub_24F897428(&v38);
      if (v1) {
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      MEMORY[0x2533638F0](v38, MEMORY[0x263F8D310]);
      sub_24F8CEEB0();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_24F785994();
      uint64_t v33 = sub_24F794AA4(v19);
      swift_release();
      sub_24F7B0E54(v37, v31, v14);
      swift_bridgeObjectRetain();
      sub_24F777E70(v15);
      swift_release();
      uint64_t v20 = v31;
      sub_24F7B0E68(v37, v31, v14);
      swift_bridgeObjectRelease();
      sub_24F8BF5DC();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = (void *)sub_24F8BF518();
      sub_24F8BF4E0(v24);
      uint64_t v20 = v43;
      uint64_t v34 = v45;
      uint64_t v16 = v48;
      sub_24F8BF63C(v47);
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      unint64_t v40 = 0xD000000000000023;
      unint64_t v41 = 0x800000024F8D52B0;
      uint64_t v38 = v6;
      uint64_t v39 = v4;
      swift_bridgeObjectRetain();
      sub_24F8CEE10();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_24F785994();
      uint64_t v33 = sub_24F794AA4(v25);
      swift_release();
      sub_24F7B0E54(*((uint64_t *)&v42 + 1), v43, v44);
      swift_bridgeObjectRetain();
      uint64_t v15 = v30;
      sub_24F777E70(v30);
      swift_release();
      uint64_t v37 = *((void *)&v42 + 1);
      sub_24F7B0E68(*((uint64_t *)&v42 + 1), v43, v44);
      uint64_t v36 = v46;
      swift_bridgeObjectRelease();
      sub_24F8BF5DC();
    }
    sub_24F7D29A4();
    uint64_t v26 = sub_24F770FA4();
    sub_24F8BEEEC(v26, v27);
    *(void *)(v28 + 40) = v33;
    *(void *)(v28 + 48) = v37;
    *(void *)(v28 + 56) = v20;
    *(void *)(v28 + 64) = v29;
    *(void *)(v28 + 72) = v34;
    *(void *)(v28 + 80) = v36;
    *(void *)(v28 + 88) = v15;
    *(void *)(v28 + 96) = v16;
    *(unsigned char *)(v28 + 104) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    goto LABEL_20;
  }
  sub_24F8CF490();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
  sub_24F8CF460();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_24F8CF9E0();
    swift_bridgeObjectRelease();
    if (!v12)
    {
LABEL_17:
      swift_bridgeObjectRelease();
LABEL_20:
      sub_24F77BC10();
      return;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      goto LABEL_17;
    }
  }
  if (v12 >= 1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = *(void (**)(uint64_t))(v35 + 8);
    do
    {
      if ((v10 & 0xC000000000000001) != 0) {
        MEMORY[0x253364060](v21, v11);
      }
      else {
        swift_retain();
      }
      ++v21;
      uint64_t v23 = swift_retain();
      v22(v23);
      sub_24F8CF470();
      swift_release();
      unint64_t v11 = v10;
    }
    while (v12 != v21);
    goto LABEL_17;
  }
  __break(1u);
LABEL_22:
  swift_release();
  __break(1u);
}

void sub_24F8B154C()
{
  sub_24F76FF94();
  uint64_t v44 = v1;
  uint64_t v60 = v2;
  uint64_t v50 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_24F77AD10();
  uint64_t v43 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v49 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v48 = (char *)&v42 - v14;
  swift_beginAccess();
  uint64_t v15 = *(void *)(v0 + 88);
  *(void *)&long long v55 = *(void *)(v0 + 80);
  *((void *)&v55 + 1) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Row.PrefetchedRowsView.subscript.getter();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v50 = v9;
    long long v55 = *(_OWORD *)(v0 + 80);
    if (*(void *)(Row.PrefetchedRowsView.keys.getter() + 16))
    {
      uint64_t v24 = (void *)sub_24F8BF4F8();
      sub_24F8BF4E0(v24);
      sub_24F8BF7B4();
      uint64_t v48 = v56;
      uint64_t v49 = v25;
      uint64_t v26 = v58;
      uint64_t v43 = v57;
      sub_24F8BF63C(v59);
      sub_24F8CF7D0();
      sub_24F8BF580();
      uint64_t v51 = v50;
      uint64_t v52 = v7;
      swift_bridgeObjectRetain();
      sub_24F8CEE10();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRetain();
      sub_24F794C78();
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v51 = v28;
      uint64_t v29 = v44;
      sub_24F897428(&v51);
      if (v29) {
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      MEMORY[0x2533638F0](v51, MEMORY[0x263F8D310]);
      sub_24F8CEEB0();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_24F785994();
      uint64_t v46 = (void (*)(uint64_t, uint64_t, uint64_t))sub_24F794AA4(v30);
      swift_release();
      uint64_t v31 = v49;
      sub_24F7B0E54(v49, v60, v9);
      uint64_t v32 = v43;
      swift_bridgeObjectRetain();
      uint64_t v33 = v42;
      sub_24F777E70(v26);
      uint64_t v34 = v31;
      swift_release();
      sub_24F7B0E68(v31, v60, v9);
      swift_bridgeObjectRelease();
      sub_24F8BF5DC();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = (void *)sub_24F8BF4F8();
      sub_24F8BF4E0(v35);
      sub_24F8BF7B4();
      uint64_t v32 = v57;
      uint64_t v48 = v56;
      uint64_t v49 = v36;
      uint64_t v26 = v58;
      uint64_t v33 = v59;
      unint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      sub_24F8CF7D0();
      swift_bridgeObjectRelease();
      unint64_t v53 = 0xD000000000000023;
      unint64_t v54 = 0x800000024F8D52B0;
      uint64_t v51 = v50;
      uint64_t v52 = v7;
      swift_bridgeObjectRetain();
      sub_24F8CEE10();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_24F785994();
      uint64_t v46 = (void (*)(uint64_t, uint64_t, uint64_t))sub_24F794AA4(v37);
      swift_release();
      uint64_t v34 = v49;
      sub_24F7B0E54(v49, v60, v9);
      swift_bridgeObjectRetain();
      sub_24F777E70(v26);
      swift_release();
      sub_24F7B0E68(v34, v60, v9);
      swift_bridgeObjectRelease();
      sub_24F8BF5DC();
    }
    sub_24F7D29A4();
    uint64_t v38 = sub_24F770FA4();
    sub_24F8BEEEC(v38, v39);
    *(void *)(v40 + 40) = v46;
    *(void *)(v40 + 48) = v34;
    *(void *)(v40 + 56) = v60;
    *(void *)(v40 + 64) = v41;
    *(void *)(v40 + 72) = v48;
    *(void *)(v40 + 80) = v32;
    *(void *)(v40 + 88) = v26;
    *(void *)(v40 + 96) = v33;
    *(unsigned char *)(v40 + 104) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    goto LABEL_20;
  }
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24F8CF9E0();
    swift_bridgeObjectRelease();
  }
  *(void *)&long long v55 = sub_24F8CF300();
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_24F8CF9E0();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_6;
    }
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_20:
    sub_24F77BC10();
    return;
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v18) {
    goto LABEL_17;
  }
LABEL_6:
  if (v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 8);
    uint64_t v47 = v50 + 8;
    unint64_t v45 = v17 & 0xC000000000000001;
    uint64_t v20 = (void (**)(char *, uint64_t))(v43 + 8);
    unint64_t v21 = v17;
    uint64_t v22 = v48;
    do
    {
      if (v45) {
        MEMORY[0x253364060](v19, v17);
      }
      else {
        swift_retain();
      }
      ++v19;
      uint64_t v23 = swift_retain();
      v46(v23, v5, v50);
      sub_24F8CF320();
      sub_24F8CF310();
      swift_release();
      (*v20)(v22, v5);
      unint64_t v17 = v21;
    }
    while (v18 != v19);
    goto LABEL_17;
  }
  __break(1u);
LABEL_22:
  swift_release();
  __break(1u);
}

void *Row.unscoped.getter()
{
  sub_24F773850();
  uint64_t v4 = v3;
  sub_24F76FD38();
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 96))(v0, v1, v2);
  sub_24F773614();
  if (*(void *)(v5[10] + 16))
  {
    uint64_t v6 = v5[5];
    uint64_t v7 = v5[6];
    sub_24F7811D0(v5 + 2, v6);
    uint64_t v8 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 112))(v5, v6, v7);
    sub_24F7E99C8(v8 + 16, (uint64_t)v18);
    swift_release();
    uint64_t v9 = v19;
    uint64_t v10 = v20;
    sub_24F798FB4((uint64_t)v18, v19);
    sub_24F77AD10();
    MEMORY[0x270FA5388](v11);
    sub_24F76B830();
    uint64_t v14 = v13 - v12;
    (*(void (**)(uint64_t))(v15 + 16))(v13 - v12);
    unint64_t v16 = sub_24F8BDE30(v14, v4, v9, v10);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v18);
    swift_release();
    return v16;
  }
  return v5;
}

BOOL Row.PrefetchedRowsView.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

uint64_t (*RowCursor._isDone.modify())()
{
  return j__swift_endAccess;
}

uint64_t (*sub_24F8B1CD4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_24F8B1D28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F8B1DDC(a1, a2);
}

uint64_t static Row.fetchSet(_:arguments:adapter:)(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v7 = *a2;
  uint64_t result = static Row.fetchCursor(_:arguments:adapter:)(a1, (uint64_t *)&v7, a3);
  if (!v3)
  {
    uint64_t v5 = result;
    sub_24F781274(&qword_26B1F78B0);
    uint64_t inited = (void *)swift_initStackObject();
    inited[2] = v5;
    inited[3] = sub_24F8B1D28;
    inited[4] = 0;
    return sub_24F8AAB60((uint64_t)inited, MEMORY[0x263F8EE88], (void (*)(uint64_t, uint64_t, uint64_t *))sub_24F8981A8);
  }
  return result;
}

uint64_t sub_24F8B1DDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24F7811D0((void *)(*(void *)a1 + 16), *(void *)(*(void *)a1 + 40));
  sub_24F8BEFE8();
  uint64_t result = v3();
  *a2 = result;
  return result;
}

void static Row.fetchCursor(_:sql:arguments:adapter:)()
{
}

uint64_t static Row.fetchCursor<A>(_:_:)()
{
  sub_24F8BEF78();
  v1();
  if (v0) {
    return sub_24F775FA4();
  }
  uint64_t v2 = v12;
  if (!v12)
  {
    sub_24F78C440(0);
    sub_24F787238(0);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v3 = swift_retain();
    uint64_t v4 = static Row.fetchCursor(_:arguments:adapter:)(v3, &v9, (uint64_t)&v11);
    sub_24F7CC9F0(v4, v5, v9, v10);
    swift_release();
    return sub_24F775FA4();
  }
  uint64_t v7 = v13;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v7;
  sub_24F78C440(v2);
  uint64_t result = sub_24F787238((uint64_t)sub_24F7CC5C0);
  __break(1u);
  return result;
}

uint64_t static Row.fetchAll<A>(_:_:)(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_24F8BEF78();
  v5();
  if (!v2)
  {
    sub_24F7735F4();
    sub_24F7854C8();
    uint64_t v3 = static Row.fetchAll(_:arguments:adapter:)(v6, v7, v8);
    swift_release();
    if (v14)
    {
      swift_retain();
      uint64_t v10 = v14(a1, v3);
      sub_24F7CC9F0(v10, v11);
      uint64_t v12 = sub_24F8BF734();
      sub_24F787238(v12);
    }
    else
    {
      sub_24F7AD1E4((uint64_t)v13);
    }
  }
  return v3;
}

void static Row.fetchSet(_:sql:arguments:adapter:)()
{
}

uint64_t static Row.fetchSet<A>(_:_:)(uint64_t a1)
{
  sub_24F8BEF78();
  v3();
  if (!v1)
  {
    uint64_t v4 = v15;
    long long v12 = 0uLL;
    if (v15)
    {
      uint64_t v5 = sub_24F774654();
      sub_24F78C440(v5);
      uint64_t v6 = swift_retain();
      unint64_t v10 = static Row.fetchAll(_:arguments:adapter:)(v6, &v12, (uint64_t)v14);
      swift_release();
      v4(a1, v10);
      sub_24F78E494(v10);
      sub_24F787238((uint64_t)v4);
      sub_24F7AD1E4((uint64_t)&v13);
    }
    else
    {
      uint64_t v7 = swift_retain();
      uint64_t v8 = static Row.fetchSet(_:arguments:adapter:)(v7, &v12, (uint64_t)v14);
      sub_24F7CC9F0(v8, v9, v12);
      swift_release();
    }
  }
  return sub_24F775FA4();
}

uint64_t static Row.fetchOne<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 32))(v19, a1, 1);
  if (!v5)
  {
    sub_24F7735F4();
    sub_24F7854C8();
    uint64_t v6 = static Row.fetchOne(_:arguments:adapter:)(v8, v9, v10);
    swift_release();
    if (v6 && (long long v12 = v20) != 0)
    {
      sub_24F781274(&qword_26B1F7F68);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_24F8DE5E0;
      *(void *)(v13 + 32) = v6;
      uint64_t v18 = v13;
      sub_24F8CF0B0();
      uint64_t v14 = sub_24F76B950();
      sub_24F78C440(v14);
      swift_retain();
      uint64_t v15 = v12(a1, v18);
      sub_24F7CC9F0(v15, v16);
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_24F76B950();
      sub_24F787238(v17);
    }
    else
    {
      sub_24F7AD1E4((uint64_t)v19);
    }
  }
  return v6;
}

uint64_t Row.ScopesView.names.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F8B2410(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  sub_24F8BDD70(a1, v15);
  uint64_t v3 = v15[1];
  int64_t v4 = v15[3];
  uint64_t v5 = v15[4];
  int64_t v6 = (unint64_t)(v15[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    int64_t v8 = v4;
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_24;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v3 + 8 * v9);
    ++v4;
    if (!v10)
    {
      int64_t v4 = v8 + 2;
      if (v8 + 2 >= v6) {
        goto LABEL_29;
      }
      uint64_t v10 = *(void *)(v3 + 8 * v4);
      if (!v10)
      {
        int64_t v4 = v8 + 3;
        if (v8 + 3 >= v6) {
          goto LABEL_29;
        }
        uint64_t v10 = *(void *)(v3 + 8 * v4);
        if (!v10)
        {
          int64_t v4 = v8 + 4;
          if (v8 + 4 >= v6) {
            goto LABEL_29;
          }
          uint64_t v10 = *(void *)(v3 + 8 * v4);
          if (!v10)
          {
            int64_t v4 = v8 + 5;
            if (v8 + 5 >= v6) {
              goto LABEL_29;
            }
            uint64_t v10 = *(void *)(v3 + 8 * v4);
            if (!v10)
            {
              int64_t v4 = v8 + 6;
              if (v8 + 6 >= v6) {
                goto LABEL_29;
              }
              uint64_t v10 = *(void *)(v3 + 8 * v4);
              if (!v10)
              {
                int64_t v11 = v8 + 7;
                while (v11 < v6)
                {
                  uint64_t v10 = *(void *)(v3 + 8 * v11++);
                  if (v10)
                  {
                    int64_t v4 = v11 - 1;
                    goto LABEL_23;
                  }
                }
LABEL_29:
                uint64_t v14 = 1;
LABEL_30:
                sub_24F799004();
                return v14;
              }
            }
          }
        }
      }
    }
LABEL_23:
    uint64_t v5 = (v10 - 1) & v10;
LABEL_24:
    if (*(void *)(a2 + 16))
    {
      swift_bridgeObjectRetain();
      sub_24F782950();
      char v13 = v12;
      uint64_t result = swift_bridgeObjectRelease();
      if (v13) {
        continue;
      }
    }
    uint64_t v14 = 0;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

void Row.ScopesView.subscript.getter()
{
  sub_24F76B80C();
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 + 8);
  if (*(void *)(v3 + 16))
  {
    uint64_t v4 = *(void *)(v2 + 16);
    uint64_t v5 = *(void *)(v2 + 24);
    unint64_t v6 = sub_24F782950();
    if (v7)
    {
      uint64_t v8 = sub_24F8B31EC((uint64_t)v27, v6, *(_DWORD *)(v3 + 36), 0, v3);
      uint64_t v10 = v9;
      uint64_t v11 = type metadata accessor for Row();
      sub_24F7E99C8((uint64_t)v27, (uint64_t)v24);
      uint64_t v12 = v25;
      uint64_t v13 = v26;
      sub_24F798FB4((uint64_t)v24, v25);
      sub_24F77AD10();
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = sub_24F8BEE54(v15, v24[0]);
      v17(v16);
      uint64_t v18 = swift_retain();
      uint64_t v19 = sub_24F7E98E8(v18, v1, v11, v12, v13);
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v24);
      swift_bridgeObjectRetain();
      sub_24F7BEA60(v8, v10, v4, v5);
      uint64_t v21 = v20;
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v27);
      if (v21)
      {
        swift_bridgeObjectRelease();
        sub_24F773D00();
        *(void *)(v19 + 80) = v21;
        *(void *)(v19 + 88) = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_24F77344C();
}

{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;
  unsigned char v25[40];

  sub_24F76B80C();
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  sub_24F8B31EC((uint64_t)v25, v5, v6, v2 & 1, v0[1]);
  char v7 = type metadata accessor for Row();
  sub_24F7E99C8((uint64_t)v25, (uint64_t)v22);
  uint64_t v8 = v23;
  uint64_t v9 = v24;
  sub_24F798FB4((uint64_t)v22, v23);
  sub_24F77AD10();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = sub_24F8BEE54(v11, v22[0]);
  v13(v12);
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_24F7E98E8(v14, v1, v7, v8, v9);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v22);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24F76B8E8();
  sub_24F7BEA60(v16, v17, v3, v4);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v25);
  if (v19)
  {
    swift_bridgeObjectRelease();
    sub_24F773D00();
    *(void *)(v15 + 80) = v19;
    *(void *)(v15 + 88) = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24F76B8E8();
  sub_24F77344C();
}

BOOL static Row.PrefetchedRowsView.== infix(_:_:)(void **a1, void **a2)
{
  BOOL result = 0;
  if (sub_24F7EBE30(*a1, *a2))
  {
    uint64_t v2 = sub_24F76B8E8();
    sub_24F82085C(v2, v3);
    if (v4) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_24F8B27C8(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    uint64_t v4 = v1[5];
    uint64_t v5 = v1[6];
    sub_24F7811D0(v1 + 2, v4);
    (*(void (**)(void *, uint64_t, uint64_t))(v5 + 104))(v1, v4, v5);
    static Row.== infix(_:_:)();
    char v7 = v6;
    swift_release();
    if (v7)
    {
      swift_beginAccess();
      if (!*(void *)(v2[10] + 16)) {
        return Row.description.getter();
      }
    }
  }
  uint64_t v8 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v33 = a1 + 1;
    unint64_t v34 = 8224;
    unint64_t v35 = 0xE200000000000000;
    sub_24F781274(&qword_26B1F7228);
    sub_24F7789CC((uint64_t)&qword_26B1F7268);
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    uint64_t v9 = Row.description.getter();
    if (a1)
    {
      uint64_t v36 = v9;
      unint64_t v37 = v10;
    }
    else
    {
      uint64_t v33 = 549426914;
      unint64_t v34 = 0xA400000000000000;
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      uint64_t v36 = 549426914;
      unint64_t v37 = 0xA400000000000000;
      uint64_t v11 = v2[5];
      uint64_t v12 = v2[6];
      sub_24F7811D0(v2 + 2, v11);
      (*(void (**)(void *, uint64_t, uint64_t))(v12 + 104))(v2, v11, v12);
      static Row.== infix(_:_:)();
      if ((v13 & 1) == 0)
      {
        sub_24F8CEEB0();
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        Row.description.getter();
        uint64_t v33 = 10;
        unint64_t v34 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
      }
      swift_release();
    }
    Row.scopes.getter();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24F770218();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)&unsigned long long v32 = v14;
    sub_24F8BD33C((uint64_t *)&v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v15 = *(void *)(v32 + 16);
    if (v15)
    {
      uint64_t v16 = v32 + 48;
      do
      {
        v16 += 24;
        uint64_t v33 = 10;
        unint64_t v34 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_24F8CEEB0();
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        uint64_t v17 = v33;
        unint64_t v18 = v34;
        sub_24F8B27C8(v8);
        uint64_t v33 = v17;
        unint64_t v34 = v18;
        swift_bridgeObjectRetain();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        swift_release();
        swift_bridgeObjectRelease();
        --v15;
      }
      while (v15);
    }
    swift_release();
    uint64_t v19 = v2;
    swift_beginAccess();
    unsigned long long v32 = *((_OWORD *)v2 + 5);
    Row.PrefetchedRowsView.keys.getter();
    swift_bridgeObjectRetain();
    sub_24F794C78();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    *(void *)&unsigned long long v32 = v21;
    sub_24F897428((uint64_t *)&v32);
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(v32 + 16);
    if (!v22)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_release();
      return v36;
    }
    uint64_t v23 = v32 + 40;
    while (1)
    {
      uint64_t v24 = v19[11];
      *(void *)&unsigned long long v32 = v19[10];
      *((void *)&v32 + 1) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      Row.PrefetchedRowsView.subscript.getter();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v26) {
        goto LABEL_28;
      }
      if (v26 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v27 = sub_24F8CF9E0();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v27 > 1)
      {
        *(void *)&unsigned long long v32 = sub_24F8CFAE0();
        *((void *)&v32 + 1) = v28;
        sub_24F8CEEB0();
      }
      v23 += 16;
      *(void *)&unsigned long long v32 = 10;
      *((void *)&v32 + 1) = 0xE100000000000000;
      sub_24F8CEEB0();
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v30 = *((void *)&v32 + 1);
      unint64_t v29 = v32;
      *(void *)&unsigned long long v32 = 8250;
      *((void *)&v32 + 1) = 0xE200000000000000;
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      unsigned long long v32 = __PAIR128__(v30, v29);
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      --v22;
      uint64_t v19 = v2;
      if (!v22) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

BOOL static RowIndex.< infix(_:_:)(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_24F8B2F44(uint64_t *a1, uint64_t *a2)
{
  return sub_24F8B2F50(*a1, *a2);
}

BOOL sub_24F8B2F50(uint64_t a1, uint64_t a2)
{
  return a2 >= a1;
}

BOOL sub_24F8B2F5C(uint64_t *a1, uint64_t *a2)
{
  return sub_24F8B2F68(*a1, *a2);
}

BOOL sub_24F8B2F68(uint64_t a1, uint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_24F8B2F74(uint64_t *a1, uint64_t *a2)
{
  return sub_24F8AC984(*a1, *a2);
}

Swift::Int sub_24F8B2F80@<X0>(GRDBInternal::RowIndex a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = RowIndex.distance(to:)(a1);
  *a2 = result;
  return result;
}

Swift::Int __swiftcall RowIndex.distance(to:)(GRDBInternal::RowIndex to)
{
  BOOL v2 = __OFSUB__(*(void *)to.index, *v1);
  Swift::Int result = *(void *)to.index - *v1;
  if (v2) {
    __break(1u);
  }
  return result;
}

GRDBInternal::RowIndex sub_24F8B2FC0(Swift::Int *a1)
{
  return RowIndex.advanced(by:)(*a1);
}

GRDBInternal::RowIndex __swiftcall RowIndex.advanced(by:)(GRDBInternal::RowIndex by)
{
  if (__OFADD__(*v2, by.index)) {
    __break(1u);
  }
  else {
    sub_24F780D60(v1);
  }
  return by;
}

void *sub_24F8B2FDC(void *a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  return sub_24F8B3008(a1, a2, a3 & 1, *a4, *a5, *a6);
}

void *sub_24F8B3008(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (__OFADD__(a4, a6))
  {
    __break(1u);
  }
  else
  {
    *Swift::Int result = a4 + a6;
    return 0;
  }
  return result;
}

BOOL static RowIndex.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t Row.ScopesView.startIndex.getter()
{
  return sub_24F7705D0(*(void *)(v0 + 8));
}

uint64_t Row.ScopesView.endIndex.getter()
{
  return 1 << *(unsigned char *)(*(void *)(v0 + 8) + 32);
}

uint64_t Row.ScopesView.index(after:)(uint64_t a1, int a2, char a3)
{
  return sub_24F8BDDA8(a1, a2, a3 & 1, *(void *)(v3 + 8));
}

uint64_t sub_24F8B31EC(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    sub_24F7E99C8(*(void *)(a5 + 56) + 40 * a2, result);
    swift_bridgeObjectRetain();
    return sub_24F76B8E8();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_24F8B3278@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = Row.ScopesView.startIndex.getter();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_24F8B32A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = Row.ScopesView.endIndex.getter();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

uint64_t (*sub_24F8B32D4(void *a1))()
{
  Row.ScopesView.subscript.getter();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_24F8B3328;
}

uint64_t sub_24F8B3328()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24F8B3364@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = a1[1];
  long long v5 = *a1;
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  return sub_24F8AB2D8(&v5, *v2, v2[1], v2[2], v2[3], a2);
}

uint64_t sub_24F8B33A0@<X0>(uint64_t a1@<X8>)
{
  return sub_24F8AB518(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_24F8B33AC()
{
  return sub_24F8AA494(*v0, v0[1]);
}

uint64_t sub_24F8B33B8()
{
  return sub_24F770350(*v0, v0[1]);
}

void sub_24F8B33C4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -2;
}

uint64_t sub_24F8B33D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_24F8AB5B8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), a2, *v3, v3[1]);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7 & 1;
  return result;
}

uint64_t sub_24F8B341C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_24F8AB794(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), a2, *(void *)a3, *(void *)(a3 + 8), *(unsigned char *)(a3 + 16), *v4, v4[1]);
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = v8;
  return result;
}

uint64_t sub_24F8B3480(uint64_t a1, uint64_t a2)
{
  return sub_24F7703F0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), *v2, v2[1]);
}

uint64_t sub_24F8B34C4(uint64_t *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8B34F4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, long long *, void, void, void, void))sub_24F8AB9E0);
}

uint64_t sub_24F8B34DC(uint64_t *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8B34F4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, long long *, void, void, void, void))sub_24F8ABAE4);
}

uint64_t sub_24F8B34F4(uint64_t *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, long long *, void, void, void, void))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  long long v9 = a2[1];
  long long v11 = *a2;
  v12[0] = v9;
  *(_OWORD *)((char *)v12 + 9) = *(long long *)((char *)a2 + 25);
  return a5(v6, v7, v8, &v11, *v5, v5[1], v5[2], v5[3]);
}

uint64_t sub_24F8B3548(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return sub_24F8ABBFC(&v5, &v7);
}

uint64_t sub_24F8B3598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = Row.ScopesView.index(after:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  return result;
}

void sub_24F8B35D4()
{
  sub_24F777204();
  uint64_t v1 = v0;
  uint64_t v2 = sub_24F77591C();
  uint64_t v6 = sub_24F8BDDA8(v2, v3, v4, v5);
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v11 = sub_24F77591C();
  sub_24F7705C4(v11, v12, v13);
  *(void *)uint64_t v1 = v6;
  *(void *)(v1 + 8) = v8;
  *(unsigned char *)(v1 + 16) = v10 & 1;
  sub_24F773598();
}

__n128 sub_24F8B3638@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[3];
  __n128 v9 = *(__n128 *)(v1 + 1);
  uint64_t v5 = sub_24F7705D0(v1[1]);
  *(void *)a1 = v3;
  __n128 result = v9;
  *(__n128 *)(a1 + 8) = v9;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8 & 1;
  return result;
}

uint64_t sub_24F8B369C()
{
  return sub_24F8904C0(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_24F8B36A8()
{
  return sub_24F7B0DA4();
}

uint64_t sub_24F8B36B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8ABD9C(a1, a2, a3, *v3, v3[1], v3[2], v3[3]);
}

void sub_24F8B36C0()
{
  sub_24F777204();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  uint64_t v7 = v6;
  __n128 v9 = v8;
  if (v10)
  {
    if (!v0) {
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    char v12 = sub_24F7EBF00(v11, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else if (v0)
  {
    goto LABEL_8;
  }
  if (sub_24F7EBE30(v9, v4)) {
    sub_24F82085C(v7, v2);
  }
LABEL_8:
  sub_24F773598();
}

void sub_24F8B3770()
{
}

void sub_24F8B378C(uint64_t a1, void *a2)
{
  if (a2[2])
  {
    uint64_t v3 = a2[4];
    uint64_t v4 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F8BCFD8(0, 1);
    if (a2[2])
    {
      swift_bridgeObjectRetain();
      sub_24F778BA8();
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)(v2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_24F770E80();
      uint64_t v12 = sub_24F80B9C8(v10, v11, v9);
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      if (v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = 0;
        uint64_t v14 = v6;
        uint64_t v16 = v8;
      }
      uint64_t v26 = sub_24F7752FC();
      sub_24F8B378C(v26);
      swift_bridgeObjectRelease();
      uint64_t v27 = v14;
      uint64_t v28 = v16;
      uint64_t v29 = v12;
      uint64_t v30 = v3;
      uint64_t v31 = v4;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24F778BA8();
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)(v2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_24F770E80();
      sub_24F80B9C8(v20, v21, v19);
      uint64_t v23 = v22;
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      if (v23)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v25 = v18;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_24F8BF2AC();
      uint64_t v28 = v25;
      uint64_t v30 = v3;
      uint64_t v31 = v4;
    }
    sub_24F8AB030(v29, v27, v28, v30, v31);
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_24F8B397C(BOOL result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(void *)(a2 + 16) <= (unint64_t)result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v2 = a2 + 40 * result;
  uint64_t v3 = *(void *)(v2 + 48);
  unint64_t v4 = *(void *)(v2 + 56);
  int v5 = *(unsigned __int8 *)(v2 + 64);
  swift_bridgeObjectRetain();
  sub_24F781F34(v3, v4, v5);
  swift_bridgeObjectRelease();
  BOOL v7 = v5 == 4 && (v4 | v3) == 0;
  sub_24F781F10(v3, v4, v5);
  return v7;
}

void sub_24F8B3A10()
{
}

BOOL sub_24F8B3A6C(BOOL result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(void *)(a2 + 16) <= (unint64_t)result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v2 = a2 + 24 * result;
  BOOL v4 = *(unsigned char *)(v2 + 48) == 4;
  uint64_t v3 = *(void *)(v2 + 40) | *(void *)(v2 + 32);
  return v4 && v3 == 0;
}

void sub_24F8B3AA8()
{
  sub_24F777204();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_24F8BF61C();
  uint64_t v7 = v6;
  sub_24F77AD10();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_24F76B830();
  uint64_t v13 = v12 - v11;
  type metadata accessor for Row();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v1, v5);
  uint64_t v14 = sub_24F76B950();
  uint64_t v16 = sub_24F8BDE30(v14, v15, v5, v3);
  long long v17 = v0;
  char v18 = 1;
  RowDecodingContext.init(row:key:)(v16, &v17, v7);
  sub_24F773598();
}

unint64_t sub_24F8B3B78(unint64_t result, uint64_t a2)
{
  uint64_t v11 = a2;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v3 = result;
  if (*(void *)(a2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = a2 + 40 * result;
  uint64_t v5 = *(void *)(v4 + 48);
  unint64_t v6 = *(void *)(v4 + 56);
  char v7 = *(unsigned char *)(v4 + 64);
  swift_bridgeObjectRetain();
  sub_24F781F34(v5, v6, v7);
  uint64_t v8 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v8);
  void v9[2] = &v11;
  void v9[3] = v3;
  sub_24F8AC990(v5, v6, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_24F8BEAC4, (uint64_t)v9, &v10);
  __n128 result = sub_24F781F10(v5, v6, v7);
  if (!v2) {
    return v10;
  }
  return result;
}

unint64_t sub_24F8B3C84(unint64_t result, uint64_t a2, uint64_t a3)
{
  v10[0] = a2;
  v10[1] = a3;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(a2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = a2 + 24 * result;
  uint64_t v5 = *(void *)(v4 + 32);
  unint64_t v6 = *(void *)(v4 + 40);
  char v7 = *(unsigned char *)(v4 + 48);
  _OWORD v8[2] = v10;
  v8[3] = MEMORY[0x270FA5388](result);
  sub_24F781F34(v5, v6, v7);
  sub_24F8AC990(v5, v6, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_24F8BED40, (uint64_t)v8, &v9);
  __n128 result = sub_24F781F10(v5, v6, v7);
  if (!v3) {
    return v9;
  }
  return result;
}

unint64_t sub_24F8B3D7C(unint64_t result, uint64_t a2)
{
  uint64_t v11 = a2;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v3 = result;
  if (*(void *)(a2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = a2 + 40 * result;
  uint64_t v5 = *(void *)(v4 + 48);
  unint64_t v6 = *(void *)(v4 + 56);
  char v7 = *(unsigned char *)(v4 + 64);
  swift_bridgeObjectRetain();
  sub_24F781F34(v5, v6, v7);
  uint64_t v8 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v8);
  void v9[2] = &v11;
  void v9[3] = v3;
  sub_24F8ACBAC(v5, v6, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_24F8BED9C, (uint64_t)v9, &v10);
  __n128 result = sub_24F781F10(v5, v6, v7);
  if (!v2) {
    return v10;
  }
  return result;
}

unint64_t sub_24F8B3E88(unint64_t result, uint64_t a2, uint64_t a3)
{
  v10[0] = a2;
  v10[1] = a3;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(a2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = a2 + 24 * result;
  uint64_t v5 = *(void *)(v4 + 32);
  unint64_t v6 = *(void *)(v4 + 40);
  char v7 = *(unsigned char *)(v4 + 48);
  _OWORD v8[2] = v10;
  v8[3] = MEMORY[0x270FA5388](result);
  sub_24F781F34(v5, v6, v7);
  sub_24F8ACBAC(v5, v6, v7, (void (*)(uint64_t *__return_ptr, uint64_t))sub_24F8BEDA0, (uint64_t)v8, &v9);
  __n128 result = sub_24F781F10(v5, v6, v7);
  if (!v3) {
    return v9;
  }
  return result;
}

unint64_t sub_24F8B3F80@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    uint64_t v4 = a2 + 40 * result;
    uint64_t v5 = *(void *)(v4 + 48);
    unint64_t v6 = *(void *)(v4 + 56);
    char v7 = *(unsigned char *)(v4 + 64);
    swift_bridgeObjectRetain();
    sub_24F781F34(v5, v6, v7);
    __n128 result = swift_bridgeObjectRelease();
    *(void *)a3 = v5;
    *(void *)(a3 + 8) = v6;
    *(unsigned char *)(a3 + 16) = v7;
    return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_24F8B4004(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    swift_bridgeObjectRetain();
    sub_24F8BF3BC();
    return sub_24F76B8E8();
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8B406C()
{
  sub_24F8CED00();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_24F8AB1DC(v0, (uint64_t (*)(uint64_t, uint64_t, void *))sub_24F8BEABC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24F8B40F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_24F8CED00() == a4 && v6 == a5) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24F8CFD00();
  }
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24F8B415C()
{
  return sub_24F8904C4(*v0);
}

void sub_24F8B4164(uint64_t *a1@<X8>)
{
}

unint64_t sub_24F8B4174(unint64_t a1)
{
  return sub_24F8B4004(a1, *v1);
}

BOOL sub_24F8B417C(BOOL a1)
{
  return sub_24F8B397C(a1, *v1);
}

unint64_t sub_24F8B4184@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F8B3F80(a1, *v2, a2);
}

unint64_t sub_24F8B418C(unint64_t a1)
{
  return sub_24F8B3B78(a1, *v1);
}

unint64_t sub_24F8B41A8(unint64_t a1)
{
  return sub_24F8B3D7C(a1, *v1);
}

uint64_t sub_24F8B41C4()
{
  return sub_24F8B406C();
}

uint64_t sub_24F8B41E4(uint64_t a1)
{
  return j__swift_retain(a1, *v1);
}

uint64_t sub_24F8B41F0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16);
}

uint64_t sub_24F8B41F8()
{
  return 1;
}

unint64_t sub_24F8B4200(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > result)
  {
    uint64_t v3 = *(void *)(a3 + 16 * result + 32);
    swift_bridgeObjectRetain();
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8B424C()
{
  uint64_t v0 = sub_24F8CED00();
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_24F8AB10C(v3, v0, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24F8B42C8()
{
  return sub_24F8B41F0(*v0, v0[1]);
}

uint64_t sub_24F8B42D0()
{
  return sub_24F8B41F8();
}

void sub_24F8B42D8(uint64_t *a1@<X8>)
{
}

unint64_t sub_24F8B42E8(unint64_t a1)
{
  return sub_24F8B4200(a1, *v1, v1[1]);
}

BOOL sub_24F8B42F0(BOOL a1)
{
  return sub_24F8B3A6C(a1, *v1);
}

unint64_t sub_24F8B42F8(unint64_t a1)
{
  return sub_24F8B3C84(a1, *v1, v1[1]);
}

unint64_t sub_24F8B4314(unint64_t a1)
{
  return sub_24F8B3E88(a1, *v1, v1[1]);
}

uint64_t sub_24F8B4330()
{
  return sub_24F8B424C();
}

uint64_t sub_24F8B4350(uint64_t a1)
{
  return j__swift_retain(a1, *v1);
}

uint64_t sub_24F8B4358(int a1, sqlite3_stmt *pStmt)
{
  return sqlite3_column_count(pStmt);
}

BOOL sub_24F8B4378(BOOL iCol, int a2, sqlite3_stmt *a3)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_type(a3, iCol) == 5;
  }
  __break(1u);
  return iCol;
}

#error "24F8B4598: call analysis failed (funcsize=144)"

uint64_t sub_24F8B4608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = swift_retain();
  return RowDecodingContext.init(statement:index:)(v5, a4);
}

#error "24F8B482C: call analysis failed (funcsize=153)"

const void *sub_24F8B48B4(uint64_t a1, uint64_t a2, sqlite3_stmt *a3)
{
  uint64_t v6 = sub_24F8CE860();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 result = (const void *)MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(a3, a1) == 5)
  {
    sub_24F7D29A4();
    swift_allocError();
    uint64_t v48 = v11;
    uint64_t v12 = *(sqlite3_stmt **)(a2 + 16);
    swift_retain();
    int v13 = Statement.columnNames.getter();
    sub_24F775548((int)v12, v13, v14, v15, v16, v17, v18, v19, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
      v46,
      *((uint64_t *)&v46 + 1),
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54);
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    type metadata accessor for Row();
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = sub_24F7753F0(v21, v23, v24);
    uint64_t v26 = Statement.sql.getter();
    uint64_t v28 = v27;
    Statement.arguments.getter(&v41);
    swift_release();
    long long v29 = v41;
    *(void *)&long long v41 = v25;
    *((void *)&v41 + 1) = a1;
    uint64_t v42 = 0;
    LOBYTE(v43) = 1;
    uint64_t v44 = v26;
    uint64_t v45 = v28;
    long long v46 = v29;
    sub_24F76B11C(v12, a1, (uint64_t)&v37 + 8);
    uint64_t v30 = *((void *)&v37 + 1);
    unint64_t v31 = v38;
    char v32 = v39;
    uint64_t v35 = *((void *)&v37 + 1);
    uint64_t v36 = v38;
    LOBYTE(v37) = v39;
    sub_24F7B00C4(MEMORY[0x263F06F78], (uint64_t)&v41, v48);
    sub_24F781F10(v30, v31, v32);
    swift_release();
    sub_24F7B0E68(a1, 0, 1u);
    swift_bridgeObjectRelease();
    sub_24F77835C(v29);
    return (const void *)swift_willThrow();
  }
  else
  {
    __n128 result = sqlite3_column_blob(a3, a1);
    if (result)
    {
      uint64_t v33 = result;
      uint64_t v34 = sqlite3_column_bytes(a3, a1);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x263F06F00], v6);
      return (const void *)MEMORY[0x2533630C0](v33, v34, v10);
    }
  }
  return result;
}

const void *sub_24F8B4B3C(uint64_t a1, uint64_t a2, sqlite3_stmt *a3)
{
  uint64_t v5 = sub_24F8CE860();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 result = (const void *)MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(a3, a1) == 5) {
    return 0;
  }
  __n128 result = sqlite3_column_blob(a3, a1);
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = sqlite3_column_bytes(a3, a1);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x263F06F00], v5);
    return (const void *)MEMORY[0x2533630C0](v10, v11, v9);
  }
  return result;
}

uint64_t sub_24F8B4C9C(unint64_t a1)
{
  uint64_t result = Statement.columnNames.getter();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    uint64_t v3 = *(void *)(result + 16 * a1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8B4D08()
{
  return sub_24F8B4358(*(void *)v0, *(sqlite3_stmt **)(v0 + 8));
}

uint64_t sub_24F8B4D14()
{
  return sub_24F8B41F8();
}

uint64_t sub_24F8B4D20(unint64_t a1)
{
  return sub_24F8B4C9C(a1);
}

BOOL sub_24F8B4D2C(BOOL a1)
{
  return sub_24F8B4378(a1, *(void *)v1, *(sqlite3_stmt **)(v1 + 8));
}

uint64_t sub_24F8B4D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F8B43C0(a1, a2, *v5, v5[1], v5[2], a3, a4, a5);
}

uint64_t sub_24F8B4D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24F8B4648(a1, a2, *v5, v5[1], v5[2], a3, a4, a5);
}

const void *sub_24F8B4D90(uint64_t a1)
{
  return sub_24F8B48B4(a1, *(void *)v1, *(sqlite3_stmt **)(v1 + 8));
}

const void *sub_24F8B4DB0(uint64_t a1)
{
  return sub_24F8B4B3C(a1, *(void *)v1, *(sqlite3_stmt **)(v1 + 8));
}

uint64_t sub_24F8B4DD0(uint64_t a1)
{
  return j__swift_retain(a1, *v1);
}

void sub_24F8B4DDC()
{
}

void sub_24F8B4E3C(uint64_t *a1@<X8>)
{
}

void sub_24F8B4E50()
{
}

uint64_t sub_24F8B4E68()
{
  return sub_24F781364();
}

char *sub_24F8B4E84(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[16 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B4EA4(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[48 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B4ECC(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[8 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B4EEC(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[24 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B4F10(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[216 * a2] <= a3) {
    return (char *)sub_24F7832BC(result, a3, 216 * a2);
  }
  return result;
}

char *sub_24F8B4F30(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[176 * a2] <= a3) {
    return (char *)sub_24F7832BC(result, a3, 176 * a2);
  }
  return result;
}

char *sub_24F8B4F50(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[184 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B4F78(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[168 * a2] <= a3) {
    return (char *)sub_24F7832BC(result, a3, 168 * a2);
  }
  return result;
}

char *sub_24F8B4F98(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[88 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B4FC0(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[32 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B4FE0(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[40 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B5008(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[232 * a2] <= a3) {
    return (char *)sub_24F7832BC(result, a3, 232 * a2);
  }
  return result;
}

char *sub_24F8B5028(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[208 * a2] <= a3) {
    return (char *)sub_24F7832BC(result, a3, 208 * a2);
  }
  return result;
}

char *sub_24F8B5048(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[56 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B5070(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[40 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

char *sub_24F8B5094(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[216 * a2] <= a3) {
    return (char *)sub_24F77FA10(a3, result);
  }
  return result;
}

#error "24F8B52B8: call analysis failed (funcsize=141)"

void sub_24F8B52F4()
{
  sub_24F77B104();
  sub_24F781274(&qword_269A2A318);
  sub_24F8BF33C();
  sub_24F8CFA00();
  sub_24F8BEF10();
  if (v5)
  {
    sub_24F785764();
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v9 = v8 & v7;
    unint64_t v31 = v0;
    int64_t v32 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = v2 + 64;
    swift_retain();
    int64_t v11 = 0;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    sub_24F774744();
    while (1)
    {
      sub_24F8BF434();
      if (v2)
      {
        uint64_t v20 = (uint64_t *)(v19 + v17 * v18);
        uint64_t v21 = *v20;
        memcpy(__dst, v20 + 1, sizeof(__dst));
        char v22 = *((unsigned char *)v20 + 170);
      }
      else
      {
        memcpy(v34, (const void *)(v19 + v17 * v18), 0xABuLL);
        char v22 = BYTE2(v34[21]);
        uint64_t v21 = v34[0];
        swift_bridgeObjectRetain();
        sub_24F7ADA50((uint64_t)v34);
        memcpy(__dst, &v34[1], sizeof(__dst));
      }
      sub_24F8CFF30();
      sub_24F8CEE50();
      sub_24F8CFF80();
      sub_24F76B7DC();
      sub_24F8BF7DC();
      if (v23)
      {
        sub_24F77B984();
        while (1)
        {
          sub_24F780F00();
          if (v23)
          {
            if (v25) {
              break;
            }
          }
          if (v26 == v27) {
            uint64_t v26 = 0;
          }
          if (*(void *)(v10 + 8 * v26) != -1)
          {
            sub_24F774704();
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      sub_24F773BF4();
LABEL_33:
      *(void *)(v10 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      uint64_t v28 = (void *)(*(void *)(v2 + 48) + 16 * v24);
      *uint64_t v28 = v3;
      v28[1] = v4;
      uint64_t v29 = *(void *)(v2 + 56) + 176 * v24;
      *(void *)uint64_t v29 = v21;
      memcpy((void *)(v29 + 8), __dst, 0xA2uLL);
      *(unsigned char *)(v29 + 170) = v22;
      sub_24F782CEC();
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_42;
      }
      if (v12 >= v32) {
        goto LABEL_35;
      }
      ++v11;
      if (!*(void *)(v33 + 8 * v12))
      {
        int64_t v11 = v12 + 1;
        if (v12 + 1 >= v32) {
          goto LABEL_35;
        }
        if (!*(void *)(v33 + 8 * v11))
        {
          sub_24F8BF468();
          if (v15 == v16)
          {
LABEL_35:
            swift_release();
            uint64_t v0 = v31;
            if (v2)
            {
              sub_24F773788();
              if (v15 != v16) {
                sub_24F8BEEDC(v30);
              }
              else {
                sub_24F8BEE0C(v30);
              }
              *(void *)(v1 + 16) = 0;
            }
            break;
          }
          if (!*(void *)(v33 + 8 * v13))
          {
            while (1)
            {
              int64_t v11 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_43;
              }
              if (v11 >= v14) {
                goto LABEL_35;
              }
              ++v13;
              if (*(void *)(v33 + 8 * v11)) {
                goto LABEL_19;
              }
            }
          }
          int64_t v11 = v13;
        }
      }
LABEL_19:
      sub_24F8BF454();
    }
  }
  swift_release();
  *uint64_t v0 = v2;
}

void sub_24F8B55AC()
{
  sub_24F77B104();
  sub_24F781274(&qword_26B1F75F0);
  sub_24F8BEE2C();
  sub_24F8BEF10();
  if (v3)
  {
    sub_24F785764();
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    else {
      uint64_t v6 = -1;
    }
    uint64_t v7 = v6 & v5;
    int64_t v30 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v8 = v2 + 64;
    swift_retain();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    sub_24F8109B0();
    for (uint64_t i = v10 | (v9 << 6); ; uint64_t i = v19 + (v9 << 6))
    {
      uint64_t v20 = *(void *)(*(void *)(v1 + 56) + 8 * i);
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_24F8CFF30();
      sub_24F8CEE50();
      unint64_t v21 = sub_24F8CFF80() & ~(-1 << *(unsigned char *)(v2 + 32));
      if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) == 0)
      {
        sub_24F77B984();
        while (1)
        {
          sub_24F780F00();
          if (v26)
          {
            if (v23) {
              break;
            }
          }
          if (v24 == v25) {
            uint64_t v24 = 0;
          }
          if (*(void *)(v8 + 8 * v24) != -1)
          {
            sub_24F774704();
            goto LABEL_32;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_24F773BF4();
LABEL_32:
      sub_24F772E64(v22);
      *(void *)(v28 + 8 * v27) = v20;
      sub_24F782CEC();
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_41;
      }
      if (v12 >= v30) {
        goto LABEL_34;
      }
      ++v9;
      if (!*(void *)(v31 + 8 * v12))
      {
        int64_t v9 = v12 + 1;
        if (v12 + 1 >= v30) {
          goto LABEL_34;
        }
        if (!*(void *)(v31 + 8 * v9))
        {
          sub_24F8BF468();
          if (v15 == v16)
          {
LABEL_34:
            swift_release();
            if (v32)
            {
              sub_24F773788();
              if (v15 != v16) {
                sub_24F8BEEDC(v29);
              }
              else {
                sub_24F8BEE0C(v29);
              }
              *(void *)(v1 + 16) = 0;
            }
            break;
          }
          if (!*(void *)(v31 + 8 * v13))
          {
            while (1)
            {
              int64_t v9 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_42;
              }
              if (v9 >= v14) {
                goto LABEL_34;
              }
              ++v13;
              if (*(void *)(v31 + 8 * v9)) {
                goto LABEL_19;
              }
            }
          }
          int64_t v9 = v13;
        }
      }
LABEL_19:
      sub_24F7773D0();
      uint64_t v7 = v18 & v17;
    }
  }
  swift_release();
  *uint64_t v0 = v2;
}

void sub_24F8B57DC()
{
  sub_24F77B104();
  sub_24F781274(&qword_26B1F7B80);
  sub_24F8BEE2C();
  sub_24F8BEF10();
  if (v4)
  {
    sub_24F785764();
    sub_24F8BF13C();
    uint64_t v24 = v0;
    int64_t v25 = v5 >> 6;
    swift_retain();
    uint64_t v6 = 0;
    if (!v3) {
      goto LABEL_4;
    }
LABEL_3:
    sub_24F8BF284();
    while (1)
    {
      int64_t v13 = (uint64_t *)(v1[6] + 16 * v7);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = *(void *)(v1[7] + 8 * v7);
      if ((v27 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_24F8CFF30();
      sub_24F8CEE50();
      sub_24F8CFF80();
      sub_24F8BF06C();
      if (v17)
      {
        sub_24F77B984();
        while (1)
        {
          sub_24F780F00();
          if (v17)
          {
            if (v19) {
              break;
            }
          }
          sub_24F8BF04C();
          if (!v17)
          {
            sub_24F774704();
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      sub_24F773BF4();
LABEL_27:
      sub_24F777778(v18);
      unint64_t v22 = (void *)(v21 + 16 * v20);
      *unint64_t v22 = v15;
      v22[1] = v14;
      *(void *)(*(void *)(v2 + 56) + 8 * v20) = v16;
      sub_24F782CEC();
      if (v3) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v8 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_36;
      }
      if (v8 >= v25) {
        goto LABEL_29;
      }
      ++v6;
      if (!*(void *)(v26 + 8 * v8))
      {
        uint64_t v6 = v8 + 1;
        if (v8 + 1 >= v25) {
          goto LABEL_29;
        }
        if (!*(void *)(v26 + 8 * v6))
        {
          sub_24F8BF468();
          if (v11 == v12)
          {
LABEL_29:
            swift_release();
            uint64_t v0 = v24;
            if (v27)
            {
              sub_24F773788();
              if (v11 != v12) {
                sub_24F8BEEDC(v23);
              }
              else {
                sub_24F8BEE0C(v23);
              }
              v1[2] = 0;
            }
            break;
          }
          if (!*(void *)(v26 + 8 * v9))
          {
            while (1)
            {
              uint64_t v6 = v9 + 1;
              if (__OFADD__(v9, 1)) {
                goto LABEL_37;
              }
              if (v6 >= v10) {
                goto LABEL_29;
              }
              ++v9;
              if (*(void *)(v26 + 8 * v6)) {
                goto LABEL_16;
              }
            }
          }
          uint64_t v6 = v9;
        }
      }
LABEL_16:
      sub_24F8BF180();
    }
  }
  swift_release();
  *uint64_t v0 = v2;
}

void sub_24F8B59CC()
{
}

void sub_24F8B59EC()
{
}

void sub_24F8B5A0C()
{
  sub_24F8BF1A8();
  uint64_t v43 = v1;
  uint64_t v2 = v0;
  char v4 = v3;
  uint64_t v5 = *v0;
  sub_24F781274(v6);
  char v45 = v4;
  uint64_t v7 = sub_24F8CFA00();
  if (*(void *)(v5 + 16))
  {
    sub_24F8BF6BC();
    uint64_t v42 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    uint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v41 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v7 + 64;
    swift_retain();
    int64_t v12 = 0;
    uint64_t v44 = v5;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    sub_24F8BF474();
    for (int64_t i = v14 | (v12 << 6); ; int64_t i = v20 + (v12 << 6))
    {
      uint64_t v21 = *(void *)(v5 + 56);
      unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      int64_t v25 = (uint64_t *)(v21 + i * v13);
      uint64_t v27 = *v25;
      uint64_t v26 = v25[1];
      uint64_t v28 = *((unsigned __int8 *)v25 + 16);
      if ((v45 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v43(v27, v26, v28);
      }
      sub_24F8CFF30();
      sub_24F8CEE50();
      sub_24F8CFF80();
      sub_24F76B7DC();
      sub_24F8BF7DC();
      if (v29)
      {
        sub_24F77B984();
        while (1)
        {
          sub_24F780F00();
          if (v29)
          {
            if (v30) {
              break;
            }
          }
          if (v31 == v32) {
            uint64_t v31 = 0;
          }
          if (*(void *)(v11 + 8 * v31) != -1)
          {
            sub_24F774704();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      sub_24F773BF4();
LABEL_31:
      sub_24F77C7BC();
      *(void *)(v11 + v33) |= v34;
      uint64_t v36 = (void *)(*(void *)(v7 + 48) + 16 * v35);
      *uint64_t v36 = v24;
      v36[1] = v23;
      uint64_t v38 = *(void *)(v7 + 56) + v35 * v37;
      *(void *)uint64_t v38 = v27;
      *(void *)(v38 + 8) = v26;
      *(unsigned char *)(v38 + 16) = v28;
      sub_24F782CEC();
      uint64_t v5 = v44;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_40;
      }
      if (v16 >= v41) {
        goto LABEL_33;
      }
      ++v12;
      if (!v42[v16])
      {
        int64_t v12 = v16 + 1;
        if (v16 + 1 >= v41) {
          goto LABEL_33;
        }
        if (!v42[v12])
        {
          int64_t v17 = v16 + 2;
          if (v17 >= v41)
          {
LABEL_33:
            swift_release();
            uint64_t v2 = v0;
            if (v45)
            {
              uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
              if (v39 >= 64)
              {
                sub_24F838880(0, (unint64_t)(v39 + 63) >> 6, v42);
              }
              else
              {
                sub_24F8BF3F8();
                *uint64_t v42 = v40;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          if (!v42[v17])
          {
            while (1)
            {
              int64_t v12 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_41;
              }
              if (v12 >= v41) {
                goto LABEL_33;
              }
              ++v17;
              if (v42[v12]) {
                goto LABEL_18;
              }
            }
          }
          int64_t v12 = v17;
        }
      }
LABEL_18:
      sub_24F7773D0();
      uint64_t v10 = v19 & v18;
    }
  }
  swift_release();
  *uint64_t v2 = v7;
  sub_24F8BF37C();
}

void sub_24F8B5CB4()
{
  sub_24F76B80C();
  sub_24F77B104();
  sub_24F781274(&qword_269A2A310);
  sub_24F8BEE2C();
  sub_24F8BEF10();
  if (v3)
  {
    sub_24F8BEE80();
    uint64_t v6 = v5 & v4;
    uint64_t v31 = v0;
    int64_t v32 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    int64_t v8 = 0;
    uint64_t v34 = v1;
    if (!v6) {
      goto LABEL_4;
    }
LABEL_3:
    sub_24F774744();
    for (uint64_t i = v10 | (v8 << 6); ; uint64_t i = v17 + (v8 << 6))
    {
      uint64_t v18 = (uint64_t *)(v1[6] + 16 * i);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      if (v35)
      {
        uint64_t v21 = (char *)(v1[7] + i * v9);
        uint64_t v56 = *((void *)v21 + 2);
        uint64_t v57 = *((void *)v21 + 1);
        uint64_t v54 = *((void *)v21 + 4);
        uint64_t v55 = *((void *)v21 + 3);
        char v52 = v21[40];
        char v53 = *v21;
        uint64_t v22 = *((void *)v21 + 7);
        uint64_t v23 = *((void *)v21 + 8);
        uint64_t v36 = *((void *)v21 + 12);
        uint64_t v37 = *((void *)v21 + 6);
        uint64_t v39 = *((void *)v21 + 11);
        uint64_t v40 = *((void *)v21 + 13);
        char v38 = v21[112];
        long long v47 = *(_OWORD *)(v21 + 72);
        long long v48 = *(_OWORD *)(v21 + 120);
        long long v50 = *(_OWORD *)(v21 + 136);
        char v42 = v21[152];
        uint64_t v41 = *((void *)v21 + 21);
        uint64_t v46 = *((void *)v21 + 22);
        uint64_t v43 = *((void *)v21 + 23);
        uint64_t v44 = *((void *)v21 + 20);
        uint64_t v51 = *((void *)v21 + 24);
        uint64_t v49 = *((void *)v21 + 25);
        char v45 = v21[208];
        char v24 = v21[209];
      }
      else
      {
        memcpy(__dst, (const void *)(v1[7] + i * v9), 0xD2uLL);
        uint64_t v56 = __dst[2];
        uint64_t v57 = __dst[1];
        uint64_t v54 = __dst[4];
        uint64_t v55 = __dst[3];
        char v52 = __dst[5];
        char v53 = __dst[0];
        uint64_t v51 = __dst[24];
        uint64_t v49 = __dst[25];
        char v45 = __dst[26];
        char v24 = BYTE1(__dst[26]);
        uint64_t v46 = __dst[22];
        uint64_t v43 = __dst[23];
        uint64_t v44 = __dst[20];
        char v42 = __dst[19];
        long long v50 = *(_OWORD *)&__dst[17];
        uint64_t v40 = __dst[13];
        uint64_t v41 = __dst[21];
        char v38 = __dst[14];
        uint64_t v39 = __dst[11];
        long long v47 = *(_OWORD *)&__dst[9];
        long long v48 = *(_OWORD *)&__dst[15];
        uint64_t v22 = __dst[7];
        uint64_t v36 = __dst[12];
        uint64_t v37 = __dst[6];
        uint64_t v23 = __dst[8];
        swift_bridgeObjectRetain();
        sub_24F7ADF80((uint64_t)__dst);
      }
      sub_24F8CFF30();
      sub_24F8CEE50();
      sub_24F8CFF80();
      sub_24F76B7DC();
      sub_24F8BF7DC();
      if (v25)
      {
        sub_24F77B984();
        while (1)
        {
          sub_24F780F00();
          if (v25)
          {
            if (v27) {
              break;
            }
          }
          sub_24F8BF04C();
          if (!v25)
          {
            sub_24F774704();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_24F773BF4();
LABEL_28:
      LOBYTE(__dst[0]) = v24;
      *(void *)(v2 + 64 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      uint64_t v28 = (void *)(*(void *)(v2 + 48) + 16 * v26);
      *uint64_t v28 = v19;
      v28[1] = v20;
      uint64_t v29 = *(void *)(v2 + 56) + 216 * v26;
      *(unsigned char *)uint64_t v29 = v53;
      *(void *)(v29 + 8) = v57;
      *(void *)(v29 + 16) = v56;
      *(void *)(v29 + 24) = v55;
      *(void *)(v29 + 32) = v54;
      *(unsigned char *)(v29 + 40) = v52;
      *(void *)(v29 + 48) = v37;
      *(void *)(v29 + 56) = v22;
      *(void *)(v29 + 64) = v23;
      *(void *)(v29 + 88) = v39;
      *(void *)(v29 + 96) = v36;
      *(void *)(v29 + 104) = v40;
      *(unsigned char *)(v29 + 112) = v38;
      *(unsigned char *)(v29 + 152) = v42;
      *(void *)(v29 + 160) = v44;
      *(void *)(v29 + 168) = v41;
      *(void *)(v29 + 176) = v46;
      *(void *)(v29 + 184) = v43;
      *(void *)(v29 + 192) = v51;
      *(void *)(v29 + 200) = v49;
      *(unsigned char *)(v29 + 208) = v45;
      *(unsigned char *)(v29 + 209) = v24;
      *(_OWORD *)(v29 + 72) = v47;
      *(_OWORD *)(v29 + 120) = v48;
      *(_OWORD *)(v29 + 136) = v50;
      sub_24F782CEC();
      uint64_t v1 = v34;
      if (v6) {
        goto LABEL_3;
      }
LABEL_4:
      int64_t v12 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_37;
      }
      if (v12 >= v32) {
        goto LABEL_30;
      }
      ++v8;
      if (!*(void *)(v33 + 8 * v12))
      {
        int64_t v8 = v12 + 1;
        if (v12 + 1 >= v32) {
          goto LABEL_30;
        }
        if (!*(void *)(v33 + 8 * v8))
        {
          sub_24F8BF468();
          if (v15 == v16)
          {
LABEL_30:
            swift_release();
            uint64_t v0 = v31;
            if (v35)
            {
              sub_24F773788();
              if (v15 != v16) {
                sub_24F8BEEDC(v30);
              }
              else {
                sub_24F8BEE0C(v30);
              }
              v1[2] = 0;
            }
            break;
          }
          if (!*(void *)(v33 + 8 * v13))
          {
            while (1)
            {
              int64_t v8 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_38;
              }
              if (v8 >= v14) {
                goto LABEL_30;
              }
              ++v13;
              if (*(void *)(v33 + 8 * v8)) {
                goto LABEL_16;
              }
            }
          }
          int64_t v8 = v13;
        }
      }
LABEL_16:
      sub_24F8BF454();
    }
  }
  swift_release();
  *uint64_t v0 = v2;
  sub_24F77344C();
}

void sub_24F8B60E4()
{
  sub_24F778E30();
  sub_24F77B104();
  sub_24F781274(&qword_26B1F5528);
  sub_24F8BF33C();
  sub_24F8CFA00();
  sub_24F8BEF10();
  if (v4)
  {
    uint64_t v21 = v0;
    uint64_t v22 = v1 + 8;
    sub_24F8BF13C();
    int64_t v6 = v5 >> 6;
    swift_retain();
    uint64_t v7 = 0;
    if (!v3) {
      goto LABEL_4;
    }
LABEL_3:
    sub_24F8BF284();
    while (1)
    {
      uint64_t v11 = *(void *)(v1[6] + 8 * v8);
      uint64_t v12 = *(void *)(v1[7] + 8 * v8);
      if ((v2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_24F8CFF30();
      sub_24F7C2DF8();
      sub_24F8CFF80();
      sub_24F8BF06C();
      if (v13)
      {
        sub_24F77B984();
        while (1)
        {
          sub_24F780F00();
          if (v13)
          {
            if (v15) {
              break;
            }
          }
          sub_24F8BF04C();
          if (!v13)
          {
            sub_24F774704();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      sub_24F773BF4();
LABEL_26:
      sub_24F777778(v14);
      *(void *)(v17 + 8 * v16) = v11;
      *(void *)(*(void *)(v2 + 56) + 8 * v16) = v12;
      sub_24F782CEC();
      if (v3) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v9 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_35;
      }
      if (v9 >= v6) {
        goto LABEL_28;
      }
      ++v7;
      if (!v22[v9])
      {
        uint64_t v7 = v9 + 1;
        if (v9 + 1 >= v6) {
          goto LABEL_28;
        }
        if (!v22[v7])
        {
          uint64_t v10 = v9 + 2;
          if (v10 >= v6)
          {
LABEL_28:
            swift_release();
            uint64_t v0 = v21;
            if (v2)
            {
              sub_24F773788();
              if (v19 != v20) {
                sub_24F8BEEDC(v18);
              }
              else {
                sub_24F8BEE0C(v18);
              }
              v1[2] = 0;
            }
            break;
          }
          if (!v22[v10])
          {
            while (1)
            {
              uint64_t v7 = v10 + 1;
              if (__OFADD__(v10, 1)) {
                goto LABEL_36;
              }
              if (v7 >= v6) {
                goto LABEL_28;
              }
              ++v10;
              if (v22[v7]) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v7 = v10;
        }
      }
LABEL_15:
      sub_24F8BF180();
    }
  }
  swift_release();
  *uint64_t v0 = v2;
  sub_24F771110();
}

void sub_24F8B62D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_24F77DC04();
  uint64_t v12 = v11;
  uint64_t v37 = v13;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v20 = *v10;
  sub_24F8CFF30();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_24F8CFF80();
  uint64_t v22 = -1 << *(unsigned char *)(v20 + 32);
  unint64_t v23 = v21 & ~v22;
  sub_24F8BF56C();
  if ((v24 & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24F8BF558();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F8B9504(v17, v15, v37, v12, v23, isUniquelyReferenced_nonNull_native);
    *uint64_t v10 = a10;
    swift_bridgeObjectRelease();
    *char v19 = v17;
    v19[1] = v15;
    uint64_t v19[2] = v37;
    void v19[3] = v12;
    goto LABEL_17;
  }
  uint64_t v25 = *(void *)(v20 + 48);
  unint64_t v26 = (void *)(v25 + 32 * v23);
  BOOL v27 = *v26 == v17 && v26[1] == v15;
  if (!v27 && (sub_24F8CFD00() & 1) == 0)
  {
    uint64_t v32 = ~v22;
    do
    {
      unint64_t v23 = (v23 + 1) & v32;
      sub_24F8BF56C();
      if ((v33 & 1) == 0) {
        goto LABEL_16;
      }
      uint64_t v34 = (void *)(v25 + 32 * v23);
      BOOL v35 = *v34 == v17 && v34[1] == v15;
    }
    while (!v35 && (sub_24F8CFD00() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = (uint64_t *)(*(void *)(*v10 + 48) + 32 * v23);
  uint64_t v29 = v28[1];
  uint64_t v30 = v28[2];
  uint64_t v31 = v28[3];
  *char v19 = *v28;
  v19[1] = v29;
  uint64_t v19[2] = v30;
  void v19[3] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_17:
  sub_24F781EC4();
}

void sub_24F8B6490()
{
  sub_24F77DC04();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  int64_t v6 = v5;
  uint64_t v7 = *v0;
  sub_24F8CFF30();
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  uint64_t v8 = sub_24F8CFF80();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  sub_24F77AF5C();
  if ((v11 & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v0;
    *uint64_t v0 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_24F8B96C4(v4, v2, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v0 = v22;
    swift_bridgeObjectRelease();
    *int64_t v6 = v4;
    v6[1] = v2;
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v7 + 48);
  uint64_t v13 = (void *)(v12 + 16 * v10);
  BOOL v14 = *v13 == v4 && v13[1] == v2;
  if (!v14 && (sub_24F8BF2FC() & 1) == 0)
  {
    uint64_t v17 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v17;
      sub_24F77AF5C();
      if ((v18 & 1) == 0) {
        goto LABEL_16;
      }
      char v19 = (void *)(v12 + 16 * v10);
      BOOL v20 = *v19 == v4 && v19[1] == v2;
    }
    while (!v20 && (sub_24F8BF2FC() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(*(void *)(*v0 + 48) + 16 * v10);
  uint64_t v16 = v15[1];
  *int64_t v6 = *v15;
  v6[1] = v16;
  swift_bridgeObjectRetain();
LABEL_17:
  sub_24F781EC4();
}

#error "24F8B6784: call analysis failed (funcsize=147)"

uint64_t sub_24F8B6860(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24F8CFF20();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    swift_isUniquelyReferenced_nonNull_native();
    sub_24F8BF558();
    sub_24F8B9A44(a2, v9, v13);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void sub_24F8B6950()
{
  sub_24F8BF1A8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *v0;
  sub_24F8CFF30();
  swift_bridgeObjectRetain();
  sub_24F7F87E8();
  sub_24F8CFF80();
  sub_24F8BF3F8();
  unint64_t v8 = v7 & ~v6;
  uint64_t v37 = v5 + 56;
  char v33 = v0;
  uint64_t v34 = v4;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v35 = ~v6;
    uint64_t v36 = *(void *)(v5 + 48);
    uint64_t v9 = *v2;
    uint64_t v10 = v2[1];
    do
    {
      uint64_t v11 = (void *)(v36 + (v8 << 6));
      uint64_t v12 = v11[2];
      uint64_t v13 = v11[3];
      uint64_t v14 = v11[4];
      uint64_t v15 = v11[5];
      uint64_t v17 = v11[6];
      uint64_t v16 = v11[7];
      BOOL v18 = *v11 == v9 && v11[1] == v10;
      if (!v18 && (sub_24F8CFD00() & 1) == 0) {
        goto LABEL_31;
      }
      if (v12 != v2[2] || v13 != v2[3])
      {
        sub_24F77592C();
        if ((sub_24F8CFD00() & 1) == 0) {
          goto LABEL_31;
        }
      }
      uint64_t v20 = v2[5];
      if (v15)
      {
        if (!v20) {
          goto LABEL_31;
        }
        BOOL v21 = v14 == v2[4] && v15 == v20;
        if (!v21 && (sub_24F8CFD00() & 1) == 0) {
          goto LABEL_31;
        }
      }
      else if (v20)
      {
        goto LABEL_31;
      }
      uint64_t v22 = v2[7];
      if (v16)
      {
        if (v22)
        {
          BOOL v23 = v17 == v2[6] && v16 == v22;
          if (v23 || (sub_24F8CFD00() & 1) != 0)
          {
LABEL_34:
            swift_bridgeObjectRelease();
            sub_24F8108EC((uint64_t)v2);
            unint64_t v27 = *(void *)(*v33 + 48) + (v8 << 6);
            uint64_t v28 = *(void *)(v27 + 8);
            uint64_t v29 = *(void *)(v27 + 16);
            uint64_t v30 = *(void *)(v27 + 24);
            uint64_t v31 = *(void *)(v27 + 32);
            uint64_t v32 = *(void *)(v27 + 56);
            *(void *)uint64_t v34 = *(void *)v27;
            *(void *)(v34 + 8) = v28;
            *(void *)(v34 + 16) = v29;
            *(void *)(v34 + 24) = v30;
            *(void *)(v34 + 32) = v31;
            *(_OWORD *)(v34 + 40) = *(_OWORD *)(v27 + 40);
            *(void *)(v34 + 56) = v32;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_33;
          }
        }
      }
      else if (!v22)
      {
        goto LABEL_34;
      }
LABEL_31:
      unint64_t v8 = (v8 + 1) & v35;
    }
    while (((*(void *)(v37 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = *v33;
  *char v33 = 0x8000000000000000;
  sub_24F810894((uint64_t)v2);
  sub_24F8B9B68((uint64_t)v2, v8, isUniquelyReferenced_nonNull_native);
  *char v33 = v38;
  swift_bridgeObjectRelease();
  long long v25 = *((_OWORD *)v2 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v2;
  *(_OWORD *)(v34 + 16) = v25;
  long long v26 = *((_OWORD *)v2 + 3);
  *(_OWORD *)(v34 + 32) = *((_OWORD *)v2 + 2);
  *(_OWORD *)(v34 + 48) = v26;
LABEL_33:
  sub_24F8BF37C();
}

uint64_t sub_24F8B6BC0(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v156 = *MEMORY[0x263EF8340];
  uint64_t v8 = *v4;
  uint64_t __s2 = a2;
  unint64_t v154 = a3;
  char v155 = a4;
  sub_24F8CFF30();
  swift_bridgeObjectRetain();
  DatabaseValue.hash(into:)();
  sub_24F8CFF80();
  sub_24F8BF3F8();
  unint64_t v11 = v10 & ~v9;
  uint64_t v12 = v8 + 56;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_169:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)__s1 = *v146;
    *int v146 = 0x8000000000000000;
    sub_24F781F34(a2, a3, a4);
    uint64_t v104 = sub_24F8BF2D4();
    sub_24F8B9DA4(v104, v105, v106, v11, isUniquelyReferenced_nonNull_native);
    *int v146 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *(double *)a1 = *(double *)&a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = a4;
    return result;
  }
  uint64_t v151 = ~v9;
  BOOL v14 = a4 == 4 && (a3 | a2) == 0;
  BOOL v149 = v14;
  unint64_t v148 = a3 >> 62;
  unint64_t v143 = HIDWORD(a2);
  BOOL v15 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v144 = v15;
  uint64_t v142 = a2 >> 32;
  uint64_t v141 = (a2 >> 32) - (int)a2;
  BOOL v16 = *(double *)&a2 > -9.22337204e18;
  if (*(double *)&a2 >= 9.22337204e18) {
    BOOL v16 = 0;
  }
  if (trunc(*(double *)&a2) != *(double *)&a2) {
    BOOL v16 = 0;
  }
  BOOL v145 = v16;
  while (2)
  {
    uint64_t v17 = 24 * v11;
    uint64_t v18 = *(void *)(v8 + 48) + 24 * v11;
    uint64_t v19 = *(uint64_t *)v18;
    unint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(unsigned char *)(v18 + 16);
    switch(v21)
    {
      case 1:
        if (a4)
        {
          if (a4 != 1) {
            goto LABEL_41;
          }
          uint64_t v25 = sub_24F8BF708();
          sub_24F781F10(v25, v26, 1);
          sub_24F781F10(v19, v20, 1);
          if (*(double *)&v19 == *(double *)&a2) {
            goto LABEL_171;
          }
        }
        else
        {
          uint64_t v40 = sub_24F8BF708();
          sub_24F781F10(v40, v41, 0);
          sub_24F781F10(v19, v20, 1);
          double v42 = trunc(*(double *)&v19);
          BOOL v43 = *(double *)&v19 > -9.22337204e18 && *(double *)&v19 < 9.22337204e18;
          if (v43 && v42 == *(double *)&v19 && (uint64_t)*(double *)&v19 == a2) {
            goto LABEL_171;
          }
        }
        goto LABEL_42;
      case 2:
        if (a4 != 2)
        {
          sub_24F781F34(v19, v20, 2);
          swift_bridgeObjectRetain();
LABEL_41:
          sub_24F781F34(a2, a3, a4);
          uint64_t v31 = sub_24F772990();
          sub_24F781F10(v31, v32, v21);
          uint64_t v33 = sub_24F8BF2D4();
          sub_24F781F10(v33, v34, v35);
          uint64_t v36 = sub_24F772990();
          sub_24F781F10(v36, v37, v21);
LABEL_42:
          unint64_t v11 = (v11 + 1) & v151;
          if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            goto LABEL_169;
          }
          continue;
        }
        uint64_t v150 = 24 * v11;
        if (v19 != a2 || v20 != a3)
        {
          sub_24F772990();
          char v28 = sub_24F8BF2FC();
          sub_24F781F34(a2, a3, 2);
          sub_24F781F34(v19, v20, 2);
          sub_24F781F10(v19, v20, 2);
          sub_24F8BF2B8();
          if (v28) {
            goto LABEL_171;
          }
          goto LABEL_42;
        }
        sub_24F781F34(a2, a3, 2);
        sub_24F781F34(a2, a3, 2);
        sub_24F8BF2B8();
        sub_24F8BF2B8();
LABEL_171:
        swift_bridgeObjectRelease();
        uint64_t v110 = sub_24F8BF2D4();
LABEL_172:
        sub_24F781F10(v110, v111, v112);
        size_t v108 = v146;
        uint64_t v109 = a1;
        uint64_t v17 = v150;
LABEL_173:
        uint64_t v113 = *(void *)(*v108 + 48) + v17;
        uint64_t v114 = *(void *)v113;
        unint64_t v115 = *(void *)(v113 + 8);
        *(void *)uint64_t v109 = *(void *)v113;
        *(void *)(v109 + 8) = v115;
        char v116 = *(unsigned char *)(v113 + 16);
        *(unsigned char *)(v109 + 16) = v116;
        sub_24F781F34(v114, v115, v116);
        return 0;
      case 3:
        if (a4 != 3)
        {
          sub_24F781F34(v19, v20, 3);
          uint64_t v29 = sub_24F772990();
          sub_24F78419C(v29, v30);
          goto LABEL_41;
        }
        uint64_t v150 = 24 * v11;
        uint64_t v12 = 0;
        switch(v20 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v19), v19))
            {
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
LABEL_194:
              __break(1u);
LABEL_195:
              __break(1u);
LABEL_196:
              __break(1u);
LABEL_197:
              __break(1u);
            }
            uint64_t v12 = HIDWORD(v19) - (int)v19;
LABEL_61:
            sub_24F781F34(v19, v20, 3);
            break;
          case 2uLL:
            uint64_t v47 = *(void *)(v19 + 16);
            uint64_t v46 = *(void *)(v19 + 24);
            uint64_t v12 = v46 - v47;
            if (!__OFSUB__(v46, v47)) {
              goto LABEL_61;
            }
            goto LABEL_176;
          case 3uLL:
            break;
          default:
            uint64_t v12 = BYTE6(v20);
            break;
        }
        uint64_t v48 = BYTE6(a3);
        switch((int)v148)
        {
          case 1:
            uint64_t v48 = HIDWORD(a2) - (int)a2;
            if (v144) {
              goto LABEL_177;
            }
            goto LABEL_66;
          case 2:
            uint64_t v50 = *(void *)(a2 + 16);
            uint64_t v49 = *(void *)(a2 + 24);
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v48 = v49 - v50;
            if (!v51) {
              goto LABEL_66;
            }
            goto LABEL_178;
          case 3:
            if (v12) {
              goto LABEL_78;
            }
            goto LABEL_174;
          default:
LABEL_66:
            if (v12 == v48)
            {
              if (v12 < 1)
              {
LABEL_174:
                sub_24F781F34(a2, a3, 3);
                sub_24F781F10(v19, v20, 3);
                sub_24F780418();
                swift_bridgeObjectRelease();
                uint64_t v110 = a2;
                unint64_t v111 = a3;
                char v112 = 3;
                goto LABEL_172;
              }
              switch(v20 >> 62)
              {
                case 1uLL:
                  sub_24F785978();
                  if ((int)v19 > v19 >> 32) {
                    goto LABEL_179;
                  }
                  sub_24F77C1B4();
                  sub_24F77CEBC();
                  uint64_t v55 = sub_24F8CE6A0();
                  if (v55)
                  {
                    uint64_t v56 = v55;
                    uint64_t v57 = sub_24F8CE6C0();
                    if (__OFSUB__((int)v19, v57)) {
                      goto LABEL_181;
                    }
                    char v118 = (void *)(v56 + (int)v19 - v57);
                  }
                  else
                  {
                    char v118 = 0;
                  }
                  uint64_t v12 = v8 + 56;
                  uint64_t v78 = sub_24F8CE6B0();
                  if (v148)
                  {
                    if (v148 == 1)
                    {
                      sub_24F781EB4();
                      if (v43 != v51) {
                        goto LABEL_188;
                      }
                      sub_24F8AA2D0();
                      uint64_t v86 = sub_24F8CE6A0();
                      if (v86)
                      {
                        sub_24F8CE6C0();
                        sub_24F8AA340();
                        if (v51) {
                          goto LABEL_197;
                        }
                        v86 += v87;
                      }
                      uint64_t v88 = sub_24F8CE6B0();
                      size_t v89 = v141;
                      if (v88 < v141) {
                        size_t v89 = v88;
                      }
                      if (!v118) {
                        goto LABEL_201;
                      }
                      if (!v86) {
                        goto LABEL_202;
                      }
                      int v90 = sub_24F8BEF8C(v118, v89);
                      sub_24F780418();
                    }
                    else
                    {
                      int64_t v99 = *(void *)(a2 + 16);
                      uint64_t v140 = *(void *)(a2 + 24);
                      swift_retain();
                      sub_24F8AA2D0();
                      uint64_t v100 = sub_24F8CE6A0();
                      if (v100)
                      {
                        if (__OFSUB__(v99, sub_24F8CE6C0())) {
                          goto LABEL_196;
                        }
                        sub_24F8BF690();
                      }
                      sub_24F8BF664();
                      if (v51) {
                        goto LABEL_189;
                      }
                      uint64_t v101 = sub_24F8CE6B0();
                      if (v101 >= v99) {
                        size_t v102 = v99;
                      }
                      else {
                        size_t v102 = v101;
                      }
                      if (!v118) {
                        goto LABEL_209;
                      }
                      uint64_t v12 = v8 + 56;
                      if (!v100) {
                        goto LABEL_210;
                      }
                      int v90 = sub_24F8BEF8C(v118, v102);
                      swift_release();
                      swift_release();
                    }
                  }
                  else
                  {
                    sub_24F7816D0(v78, v79, v80, v81, v82, v83, v84, v85, (uint64_t)v117, (uint64_t)v118, v120, v121, v122, v123, v124, v125, v126, v127, v128,
                      v129,
                      v130,
                      v131,
                      v132,
                      v133,
                      v134,
                      v135,
                      v136,
                      v137,
                      v138,
                      v139,
                      v140,
                      v141,
                      v142,
                      v143);
                    if (!v119) {
                      goto LABEL_208;
                    }
                    int v90 = memcmp(v119, __s1, BYTE6(a3));
                  }
                  sub_24F781F10(a2, a3, 3);
                  sub_24F781F10(v19, v20, 3);
                  sub_24F781F10(a2, a3, 3);
                  sub_24F775E60();
                  if (!v90) {
                    goto LABEL_171;
                  }
                  break;
                case 2uLL:
                  sub_24F785978();
                  uint64_t v58 = *(void *)(v19 + 16);
                  sub_24F781F34(a2, a3, 3);
                  sub_24F77C1B4();
                  swift_retain();
                  swift_retain();
                  uint64_t v59 = sub_24F8CE6A0();
                  if (v59)
                  {
                    uint64_t v60 = v59;
                    uint64_t v61 = sub_24F8CE6C0();
                    if (__OFSUB__(v58, v61)) {
                      goto LABEL_180;
                    }
                    unint64_t v117 = (void *)(v60 + v58 - v61);
                  }
                  else
                  {
                    unint64_t v117 = 0;
                  }
                  uint64_t v12 = v8 + 56;
                  uint64_t v66 = sub_24F8CE6B0();
                  if (v148)
                  {
                    if (v148 == 1)
                    {
                      sub_24F781EB4();
                      if (v43 != v51) {
                        goto LABEL_184;
                      }
                      sub_24F8AA2D0();
                      uint64_t v74 = sub_24F8CE6A0();
                      if (v74)
                      {
                        sub_24F8CE6C0();
                        sub_24F8AA340();
                        if (v51) {
                          goto LABEL_195;
                        }
                        v74 += v75;
                      }
                      uint64_t v76 = sub_24F8CE6B0();
                      size_t v77 = v141;
                      if (v76 < v141) {
                        size_t v77 = v76;
                      }
                      if (!v117) {
                        goto LABEL_199;
                      }
                      if (!v74) {
                        goto LABEL_200;
                      }
                      int v64 = sub_24F8BEF8C(v117, v77);
                      sub_24F780418();
                    }
                    else
                    {
                      int64_t v95 = *(void *)(a2 + 16);
                      uint64_t v140 = *(void *)(a2 + 24);
                      swift_retain();
                      sub_24F8AA2D0();
                      uint64_t v96 = sub_24F8CE6A0();
                      if (v96)
                      {
                        if (__OFSUB__(v95, sub_24F8CE6C0())) {
                          goto LABEL_192;
                        }
                        sub_24F8BF690();
                      }
                      sub_24F8BF664();
                      if (v51) {
                        goto LABEL_187;
                      }
                      uint64_t v97 = sub_24F8CE6B0();
                      if (v97 >= v95) {
                        size_t v98 = v95;
                      }
                      else {
                        size_t v98 = v97;
                      }
                      if (!v117) {
                        goto LABEL_206;
                      }
                      uint64_t v12 = v8 + 56;
                      if (!v96) {
                        goto LABEL_207;
                      }
                      int v64 = sub_24F8BEF8C(v117, v98);
                      swift_release();
                      swift_release();
                    }
                    sub_24F780418();
                  }
                  else
                  {
                    sub_24F7816D0(v66, v67, v68, v69, v70, v71, v72, v73, (uint64_t)v117, v20 & 0x3FFFFFFFFFFFFFFFLL, v120, v121, v122, v123, v124, v125, v126, v127, v128,
                      v129,
                      v130,
                      v131,
                      v132,
                      v133,
                      v134,
                      v135,
                      v136,
                      v137,
                      v138,
                      v139,
                      v140,
                      v141,
                      v142,
                      v143);
                    if (!v117) {
                      goto LABEL_205;
                    }
                    int v64 = memcmp(v117, __s1, BYTE6(a3));
                    sub_24F780418();
                  }
                  swift_release();
                  swift_release();
                  sub_24F780418();
LABEL_153:
                  sub_24F775E60();
                  if (!v64) {
                    goto LABEL_171;
                  }
                  goto LABEL_42;
                case 3uLL:
                  *(void *)&__s1[6] = 0;
                  *(void *)__s1 = 0;
                  if (!v148) {
                    goto LABEL_97;
                  }
                  if (v148 == 1)
                  {
                    sub_24F781EB4();
                    uint64_t v12 = v8 + 56;
                    if (v43 != v51) {
                      goto LABEL_183;
                    }
                    char v52 = (char *)sub_24F8BEDA8();
                    if (v52)
                    {
                      sub_24F8CE6C0();
                      sub_24F8AA340();
                      if (v51) {
                        goto LABEL_194;
                      }
                      v52 += v62;
                    }
                    uint64_t v54 = sub_24F8CE6B0();
                    if (!v52) {
                      goto LABEL_198;
                    }
LABEL_93:
                    if (v54 >= v141) {
                      size_t v63 = v141;
                    }
                    else {
                      size_t v63 = v54;
                    }
                    int v64 = memcmp(__s1, v52, v63);
                    goto LABEL_153;
                  }
                  sub_24F77BA7C();
                  sub_24F8AA2D0();
                  uint64_t v91 = (const void *)sub_24F8CE6A0();
                  if (v91)
                  {
                    if (__OFSUB__(v12, sub_24F8CE6C0())) {
                      goto LABEL_191;
                    }
                    sub_24F8BF690();
                  }
                  sub_24F8BF664();
                  if (v51) {
                    goto LABEL_186;
                  }
                  uint64_t v92 = sub_24F8CE6B0();
                  if (!v91) {
                    goto LABEL_204;
                  }
LABEL_134:
                  if (v92 >= v12) {
                    size_t v93 = v12;
                  }
                  else {
                    size_t v93 = v92;
                  }
                  int v94 = memcmp(__s1, v91, v93);
                  swift_release();
                  swift_release();
                  sub_24F77B724();
                  if (!v94) {
                    goto LABEL_171;
                  }
                  goto LABEL_42;
                default:
                  *(void *)__s1 = v19;
                  *(_WORD *)&__s1[8] = v20;
                  __s1[10] = BYTE2(v20);
                  __s1[11] = BYTE3(v20);
                  __s1[12] = BYTE4(v20);
                  __s1[13] = BYTE5(v20);
                  if (!v148)
                  {
LABEL_97:
                    LOWORD(__s2) = a2;
                    BYTE2(__s2) = BYTE2(a2);
                    BYTE3(__s2) = BYTE3(a2);
                    BYTE4(__s2) = v143;
                    BYTE5(__s2) = BYTE5(a2);
                    BYTE6(__s2) = BYTE6(a2);
                    HIBYTE(__s2) = HIBYTE(a2);
                    LOWORD(v154) = a3;
                    BYTE2(v154) = BYTE2(a3);
                    BYTE3(v154) = BYTE3(a3);
                    BYTE4(v154) = BYTE4(a3);
                    BYTE5(v154) = BYTE5(a3);
                    sub_24F781F34(a2, a3, 3);
                    sub_24F781F34(a2, a3, 3);
                    sub_24F77CEBC();
                    int v65 = memcmp(__s1, &__s2, BYTE6(a3));
                    sub_24F77B724();
                    if (!v65) {
                      goto LABEL_171;
                    }
                    goto LABEL_42;
                  }
                  if (v148 == 1)
                  {
                    sub_24F781EB4();
                    uint64_t v12 = v8 + 56;
                    if (v43 != v51) {
                      goto LABEL_182;
                    }
                    char v52 = (char *)sub_24F8BEDA8();
                    if (v52)
                    {
                      sub_24F8CE6C0();
                      sub_24F8AA340();
                      if (v51) {
                        goto LABEL_193;
                      }
                      v52 += v53;
                    }
                    uint64_t v54 = sub_24F8CE6B0();
                    if (!v52)
                    {
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
LABEL_200:
                      __break(1u);
LABEL_201:
                      __break(1u);
LABEL_202:
                      __break(1u);
LABEL_203:
                      __break(1u);
LABEL_204:
                      __break(1u);
LABEL_205:
                      __break(1u);
LABEL_206:
                      __break(1u);
LABEL_207:
                      __break(1u);
LABEL_208:
                      __break(1u);
LABEL_209:
                      __break(1u);
LABEL_210:
                      __break(1u);
                      JUMPOUT(0x24F8B77FCLL);
                    }
                    goto LABEL_93;
                  }
                  sub_24F77BA7C();
                  sub_24F8AA2D0();
                  uint64_t v91 = (const void *)sub_24F8CE6A0();
                  if (v91)
                  {
                    if (__OFSUB__(v12, sub_24F8CE6C0())) {
                      goto LABEL_190;
                    }
                    sub_24F8BF690();
                  }
                  sub_24F8BF664();
                  if (v51) {
                    goto LABEL_185;
                  }
                  uint64_t v92 = sub_24F8CE6B0();
                  if (!v91) {
                    goto LABEL_203;
                  }
                  goto LABEL_134;
              }
            }
            else
            {
LABEL_78:
              sub_24F781F34(a2, a3, 3);
              sub_24F781F10(v19, v20, 3);
              sub_24F781F10(a2, a3, 3);
              uint64_t v12 = v8 + 56;
            }
            break;
        }
        goto LABEL_42;
      case 4:
        if (!v149) {
          goto LABEL_41;
        }
        sub_24F781F10(v19, v20, 4);
        sub_24F781F10(0, 0, 4);
        sub_24F781F10(v19, v20, 4);
        swift_bridgeObjectRelease();
        sub_24F781F10(0, 0, 4);
        size_t v108 = v146;
        uint64_t v109 = a1;
        goto LABEL_173;
      default:
        if (a4)
        {
          if (a4 != 1) {
            goto LABEL_41;
          }
          uint64_t v22 = sub_24F8BF6DC();
          sub_24F781F10(v22, v23, 1);
          sub_24F781F10(v19, v20, 0);
          BOOL v24 = v145;
          if (v19 != (uint64_t)*(double *)&a2) {
            BOOL v24 = 0;
          }
          if (v24) {
            goto LABEL_171;
          }
        }
        else
        {
          uint64_t v38 = sub_24F8BF6DC();
          sub_24F781F10(v38, v39, 0);
          sub_24F781F10(v19, v20, 0);
          if (v19 == a2) {
            goto LABEL_171;
          }
        }
        goto LABEL_42;
    }
  }
}

void sub_24F8B7840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_24F77DC04();
  sub_24F8BF2E4();
  if (v15)
  {
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    Row.hash(into:)();
    uint64_t v17 = sub_24F8CFF80();
    uint64_t v18 = -1 << *(unsigned char *)(v12 + 32);
    uint64_t v19 = v17 & ~v18;
    sub_24F7729C0();
    if (v20)
    {
      type metadata accessor for Row();
      sub_24F8BEF48();
      static Row.== infix(_:_:)();
      sub_24F8BF4A8();
      if (v14)
      {
LABEL_9:
        swift_release();
        swift_bridgeObjectRelease();
        sub_24F8BF538();
        goto LABEL_18;
      }
      uint64_t v21 = ~v18;
      while (1)
      {
        uint64_t v19 = (v19 + 1) & v21;
        sub_24F7729C0();
        if ((v22 & 1) == 0) {
          break;
        }
        sub_24F8BEF48();
        static Row.== infix(_:_:)();
        sub_24F8BF4A8();
        if (v14) {
          goto LABEL_9;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = sub_24F8BF08C();
    sub_24F8BAFE8(v27, v19, v12);
    *unint64_t v11 = a9;
    goto LABEL_17;
  }
  sub_24F8BF4C0();
  swift_retain();
  uint64_t v16 = sub_24F8CF730();
  swift_release();
  if (v16)
  {
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for Row();
    swift_unknownObjectRetain();
    sub_24F8BF1C4();
    *uint64_t v9 = a9;
    swift_unknownObjectRelease();
LABEL_18:
    sub_24F781EC4();
    return;
  }
  uint64_t v23 = sub_24F8CF720();
  if (!__OFADD__(v23, 1))
  {
    uint64_t v24 = sub_24F8B7A5C(v13, v23 + 1);
    uint64_t v29 = v24;
    unint64_t v25 = *(void *)(v24 + 16);
    if (*(void *)(v24 + 24) <= v25)
    {
      unint64_t v28 = v25 + 1;
      swift_retain();
      sub_24F8B908C(v28, &qword_269A2C560, Row.hash(into:));
      uint64_t v26 = v29;
    }
    else
    {
      uint64_t v26 = v24;
      swift_retain();
    }
    sub_24F8B9468(v10, v26, (void (*)(unsigned char *))Row.hash(into:));
    *unint64_t v11 = v26;
LABEL_17:
    swift_bridgeObjectRelease();
    *uint64_t v9 = v10;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_24F8B7A5C(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  sub_24F781274(&qword_269A2C560);
  uint64_t v2 = sub_24F8CF790();
  uint64_t v15 = v2;
  sub_24F8CF710();
  if (!sub_24F8CF740())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  type metadata accessor for Row();
  while (1)
  {
    swift_dynamicCast();
    uint64_t v2 = v15;
    unint64_t v3 = *(void *)(v15 + 16);
    if (*(void *)(v15 + 24) <= v3)
    {
      sub_24F8B908C(v3 + 1, &qword_269A2C560, Row.hash(into:));
      uint64_t v2 = v15;
    }
    sub_24F8CFF30();
    Row.hash(into:)();
    uint64_t result = sub_24F8CFF80();
    uint64_t v5 = v2 + 56;
    uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v7 = result & ~v6;
    unint64_t v8 = v7 >> 6;
    if (((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6))) == 0) {
      break;
    }
    unint64_t v9 = __clz(__rbit64((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(void *)(*(void *)(v2 + 48) + 8 * v9) = v14;
    ++*(void *)(v2 + 16);
    if (!sub_24F8CF740()) {
      goto LABEL_16;
    }
  }
  char v10 = 0;
  unint64_t v11 = (unint64_t)(63 - v6) >> 6;
  while (++v8 != v11 || (v10 & 1) == 0)
  {
    BOOL v12 = v8 == v11;
    if (v8 == v11) {
      unint64_t v8 = 0;
    }
    v10 |= v12;
    uint64_t v13 = *(void *)(v5 + 8 * v8);
    if (v13 != -1)
    {
      unint64_t v9 = __clz(__rbit64(~v13)) + (v8 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

void sub_24F8B7C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_24F8B7CB8(a1, a2, (uint64_t)&unk_26B1F7EC8, (uint64_t)type metadata accessor for DatabaseFunction, (uint64_t)DatabaseFunction.hash(into:), (uint64_t)DatabaseFunction.hash(into:), a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32);
}

void sub_24F8B7CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_24F778E30();
  a31 = v32;
  a32 = v36;
  uint64_t v56 = v37;
  if (!v38)
  {
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  unint64_t v39 = v35;
  uint64_t v40 = v34;
  unint64_t v41 = v33;
  sub_24F781274(v33);
  sub_24F775958();
  a20 = sub_24F8CF790();
  sub_24F8CF710();
  uint64_t v42 = sub_24F8CF740();
  if (!v42)
  {
LABEL_16:
    swift_release();
LABEL_18:
    sub_24F771110();
    return;
  }
  uint64_t v43 = v42;
  v40(0);
  while (1)
  {
    a10 = v43;
    swift_dynamicCast();
    uint64_t v44 = a20;
    unint64_t v45 = *(void *)(a20 + 16);
    if (*(void *)(a20 + 24) <= v45)
    {
      sub_24F8B908C(v45 + 1, v41, v56);
      uint64_t v44 = a20;
    }
    uint64_t v46 = a19;
    sub_24F8CFF30();
    v39(&a10);
    uint64_t v47 = sub_24F8CFF80();
    uint64_t v48 = -1 << *(unsigned char *)(v44 + 32);
    unint64_t v49 = v47 & ~v48;
    unint64_t v50 = v49 >> 6;
    if (((-1 << v49) & ~*(void *)(v44 + 56 + 8 * (v49 >> 6))) == 0) {
      break;
    }
    sub_24F8BF608();
LABEL_15:
    *(void *)(v51 + ((v52 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v52;
    *(void *)(*(void *)(v44 + 48) + 8 * v52) = v46;
    ++*(void *)(v44 + 16);
    uint64_t v43 = sub_24F8CF740();
    if (!v43) {
      goto LABEL_16;
    }
  }
  char v53 = 0;
  unint64_t v54 = (unint64_t)(63 - v48) >> 6;
  while (++v50 != v54 || (v53 & 1) == 0)
  {
    BOOL v55 = v50 == v54;
    if (v50 == v54) {
      unint64_t v50 = 0;
    }
    v53 |= v55;
    if (*(void *)(v44 + 56 + 8 * v50) != -1)
    {
      sub_24F8BF5F4();
      goto LABEL_15;
    }
  }
  __break(1u);
}

void sub_24F8B7E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  sub_24F778E30();
  if (!v19)
  {
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  sub_24F781274(&qword_26B1F7C80);
  sub_24F76B8E8();
  uint64_t v30 = sub_24F8CF790();
  sub_24F8CF710();
  if (!sub_24F8CF740())
  {
LABEL_16:
    swift_release();
LABEL_18:
    sub_24F771110();
    return;
  }
  type metadata accessor for DatabaseCollation();
  while (1)
  {
    swift_dynamicCast();
    uint64_t v20 = v30;
    if (*(void *)(v30 + 24) <= *(void *)(v30 + 16))
    {
      sub_24F8B9278();
      uint64_t v20 = v30;
    }
    sub_24F8CFF30();
    sub_24F8CFF40();
    uint64_t v21 = sub_24F8CFF80();
    uint64_t v22 = -1 << *(unsigned char *)(v20 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v20 + 56 + 8 * (v23 >> 6))) == 0) {
      break;
    }
    sub_24F8BF608();
LABEL_15:
    *(void *)(v25 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    *(void *)(*(void *)(v20 + 48) + 8 * v26) = a19;
    sub_24F782CEC();
    if (!sub_24F8CF740()) {
      goto LABEL_16;
    }
  }
  char v27 = 0;
  unint64_t v28 = (unint64_t)(63 - v22) >> 6;
  while (++v24 != v28 || (v27 & 1) == 0)
  {
    BOOL v29 = v24 == v28;
    if (v24 == v28) {
      unint64_t v24 = 0;
    }
    v27 |= v29;
    if (*(void *)(v20 + 56 + 8 * v24) != -1)
    {
      sub_24F8BF5F4();
      goto LABEL_15;
    }
  }
  __break(1u);
}

uint64_t sub_24F8B8050()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_26B1F7F18);
  uint64_t v3 = sub_24F8CF780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      uint64_t v16 = v2;
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 32 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      uint64_t v21 = v17[2];
      uint64_t v20 = v17[3];
      sub_24F8CFF30();
      swift_bridgeObjectRetain();
      sub_24F8CEE50();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24F8CFF80();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) == 0)
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v24);
          if (v29 != -1)
          {
            unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      uint64_t v30 = (void *)(*(void *)(v4 + 48) + 32 * v25);
      *uint64_t v30 = v18;
      v30[1] = v19;
      v30[2] = v21;
      void v30[3] = v20;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v16;
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v13 >= v32) {
        goto LABEL_32;
      }
      unint64_t v14 = v33[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v32) {
          goto LABEL_32;
        }
        unint64_t v14 = v33[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v32) {
            goto LABEL_32;
          }
          unint64_t v14 = v33[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v32)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
              if (v31 > 63) {
                sub_24F838880(0, (unint64_t)(v31 + 63) >> 6, v33);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v33[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_39;
                }
                if (v10 >= v32) {
                  goto LABEL_32;
                }
                unint64_t v14 = v33[v10];
                ++v15;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24F8B8368()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_26B1F7F20);
  uint64_t v3 = sub_24F8CF780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_24F8CFF30();
      sub_24F8CEE50();
      uint64_t result = sub_24F8CFF80();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      BOOL v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *BOOL v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_24F838880(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24F8B8644()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_269A2A1C8);
  uint64_t result = sub_24F8CF780();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v7 = (uint64_t *)(v2 + 56);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = -1 << v8;
    BOOL v28 = v1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v6;
    uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = result + 56;
    if ((v9 & v6) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v13 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = sub_24F8CFF20();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v11) {
        goto LABEL_32;
      }
      unint64_t v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        int64_t v5 = v15 + 1;
        if (v15 + 1 >= v11) {
          goto LABEL_32;
        }
        unint64_t v16 = v7[v5];
        if (!v16)
        {
          int64_t v5 = v15 + 2;
          if (v15 + 2 >= v11) {
            goto LABEL_32;
          }
          unint64_t v16 = v7[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63) {
                sub_24F838880(0, v11, (void *)(v2 + 56));
              }
              else {
                *unint64_t v7 = v27;
              }
              uint64_t v1 = v28;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v11) {
                  goto LABEL_32;
                }
                unint64_t v16 = v7[v5];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24F8B88C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_26B1F7968);
  uint64_t v3 = sub_24F8CF780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v38 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    uint64_t v36 = v1;
    int64_t v37 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v39 = v2;
    uint64_t v40 = v4;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v41 = (v7 - 1) & v7;
    int64_t v44 = v10;
    for (unint64_t i = __clz(__rbit64(v7)) | (v10 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
    {
      unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + (i << 6));
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      uint64_t v19 = v16[2];
      uint64_t v20 = v16[3];
      uint64_t v21 = v16[4];
      uint64_t v22 = v16[5];
      uint64_t v24 = v16[6];
      uint64_t v23 = v16[7];
      sub_24F8CFF30();
      swift_bridgeObjectRetain();
      uint64_t v43 = v18;
      sub_24F8CEE50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v42 = v19;
      sub_24F8CEE50();
      swift_bridgeObjectRelease();
      if (v22)
      {
        sub_24F8CFF50();
        swift_bridgeObjectRetain();
        uint64_t v25 = v21;
        sub_24F8CEE50();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v25 = v21;
        sub_24F8CFF50();
      }
      sub_24F8CFF50();
      if (v23)
      {
        swift_bridgeObjectRetain();
        sub_24F8CEE50();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_24F8CFF80();
      uint64_t v4 = v40;
      uint64_t v26 = -1 << *(unsigned char *)(v40 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v8 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_35;
          }
        }
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_35:
      *(void *)(v8 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      unint64_t v34 = (void *)(*(void *)(v40 + 48) + (v29 << 6));
      int64_t v10 = v44;
      *unint64_t v34 = v43;
      v34[1] = v17;
      unint64_t v7 = v41;
      void v34[2] = v42;
      v34[3] = v20;
      v34[4] = v25;
      v34[5] = v22;
      v34[6] = v24;
      v34[7] = v23;
      ++*(void *)(v40 + 16);
      uint64_t v2 = v39;
      if (v41) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_43;
      }
      if (v12 >= v37) {
        goto LABEL_37;
      }
      unint64_t v13 = v38[v12];
      int64_t v14 = v10 + 1;
      if (!v13)
      {
        int64_t v14 = v10 + 2;
        if (v10 + 2 >= v37) {
          goto LABEL_37;
        }
        unint64_t v13 = v38[v14];
        if (!v13)
        {
          int64_t v14 = v10 + 3;
          if (v10 + 3 >= v37) {
            goto LABEL_37;
          }
          unint64_t v13 = v38[v14];
          if (!v13)
          {
            uint64_t v15 = v10 + 4;
            if (v10 + 4 >= v37)
            {
LABEL_37:
              swift_release();
              uint64_t v1 = v36;
              uint64_t v35 = 1 << *(unsigned char *)(v2 + 32);
              if (v35 > 63) {
                sub_24F838880(0, (unint64_t)(v35 + 63) >> 6, v38);
              }
              else {
                *uint64_t v38 = -1 << v35;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v13 = v38[v15];
            if (!v13)
            {
              while (1)
              {
                int64_t v14 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_44;
                }
                if (v14 >= v37) {
                  goto LABEL_37;
                }
                unint64_t v13 = v38[v14];
                ++v15;
                if (v13) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v14 = v10 + 4;
          }
        }
      }
LABEL_20:
      uint64_t v41 = (v13 - 1) & v13;
      int64_t v44 = v14;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24F8B8CB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_269A2C570);
  uint64_t v3 = sub_24F8CF780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v35 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v34 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    swift_retain();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
LABEL_21:
      uint64_t v15 = *(void *)(v2 + 48) + 24 * v11;
      uint64_t v16 = *(void *)v15;
      unint64_t v17 = *(void *)(v15 + 8);
      uint64_t v18 = *(unsigned __int8 *)(v15 + 16);
      sub_24F8CFF30();
      switch(v18)
      {
        case 2:
          swift_bridgeObjectRetain();
          sub_24F8CEE50();
          uint64_t v19 = v16;
          unint64_t v20 = v17;
          char v21 = 2;
          goto LABEL_25;
        case 3:
          sub_24F78419C(v16, v17);
          sub_24F8CE8E0();
          uint64_t v19 = v16;
          unint64_t v20 = v17;
          char v21 = 3;
LABEL_25:
          sub_24F781F10(v19, v20, v21);
          break;
        case 4:
          sub_24F8CFF40();
          break;
        default:
          sub_24F8CFF70();
          break;
      }
      uint64_t v22 = sub_24F8CFF80();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = v22 & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_36;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v8 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
LABEL_36:
      *(void *)(v8 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      uint64_t v31 = *(void *)(v4 + 48) + 24 * v26;
      *(void *)uint64_t v31 = v16;
      *(void *)(v31 + 8) = v17;
      *(unsigned char *)(v31 + 16) = v18;
      ++*(void *)(v4 + 16);
      if (v7) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_44;
    }
    if (v12 < v34)
    {
      unint64_t v13 = v35[v12];
      ++v9;
      if (v13) {
        goto LABEL_20;
      }
      int64_t v9 = v12 + 1;
      if (v12 + 1 < v34)
      {
        unint64_t v13 = v35[v9];
        if (v13) {
          goto LABEL_20;
        }
        int64_t v9 = v12 + 2;
        if (v12 + 2 < v34)
        {
          unint64_t v13 = v35[v9];
          if (v13) {
            goto LABEL_20;
          }
          int64_t v14 = v12 + 3;
          if (v14 < v34)
          {
            unint64_t v13 = v35[v14];
            if (v13)
            {
              int64_t v9 = v14;
LABEL_20:
              unint64_t v7 = (v13 - 1) & v13;
              unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v9 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                break;
              }
              if (v9 >= v34) {
                goto LABEL_38;
              }
              unint64_t v13 = v35[v9];
              ++v14;
              if (v13) {
                goto LABEL_20;
              }
            }
LABEL_45:
            __break(1u);
            JUMPOUT(0x24F8B9058);
          }
        }
      }
    }
LABEL_38:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v32 = 1 << *(unsigned char *)(v2 + 32);
    if (v32 > 63) {
      sub_24F838880(0, (unint64_t)(v32 + 63) >> 6, v35);
    }
    else {
      *uint64_t v35 = -1 << v32;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24F8B906C(uint64_t a1)
{
  return sub_24F8B908C(a1, &unk_26B1F7EC8, DatabaseFunction.hash(into:));
}

#error "24F8B923C: call analysis failed (funcsize=123)"

void sub_24F8B9278()
{
  sub_24F77DC04();
  uint64_t v3 = v0;
  sub_24F780A2C();
  sub_24F781274(&qword_26B1F7C80);
  sub_24F8BF34C();
  sub_24F8BEF10();
  if (v4)
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v1 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v1 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v9 = v8 & *(void *)(v1 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    sub_24F8109B0();
    for (int64_t i = v11 | (v5 << 6); ; int64_t i = v15 + (v5 << 6))
    {
      uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * i);
      sub_24F8CFF30();
      sub_24F8CFF40();
      unint64_t v17 = sub_24F8CFF80() & ~(-1 << *(unsigned char *)(v2 + 32));
      if (((-1 << v17) & ~*(void *)(v2 + 56 + 8 * (v17 >> 6))) == 0)
      {
        sub_24F77B984();
        while (1)
        {
          sub_24F780F00();
          if (v20)
          {
            if (v19) {
              break;
            }
          }
          sub_24F8BF04C();
          if (!v20)
          {
            sub_24F774704();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_24F773BF4();
LABEL_29:
      sub_24F777778(v18);
      *(void *)(v22 + 8 * v21) = v16;
      sub_24F782CEC();
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_37;
      }
      if (v13 >= v10) {
        goto LABEL_31;
      }
      ++v5;
      if (!v6[v13])
      {
        int64_t v5 = v13 + 1;
        if (v13 + 1 >= v10) {
          goto LABEL_31;
        }
        if (!v6[v5])
        {
          int64_t v5 = v13 + 2;
          if (v13 + 2 >= v10) {
            goto LABEL_31;
          }
          if (!v6[v5])
          {
            int64_t v14 = v13 + 3;
            if (v14 >= v10)
            {
LABEL_31:
              sub_24F8BF6C8();
              if (v24 ^ v25 | v20)
              {
                sub_24F8BF3F8();
                *uint64_t v6 = v26;
              }
              else
              {
                sub_24F838880(0, (unint64_t)(v23 + 63) >> 6, (void *)(v1 + 56));
              }
              uint64_t v3 = v0;
              *(void *)(v1 + 16) = 0;
              break;
            }
            if (!v6[v14])
            {
              while (1)
              {
                int64_t v5 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_38;
                }
                if (v5 >= v10) {
                  goto LABEL_31;
                }
                ++v14;
                if (v6[v5]) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v14;
          }
        }
      }
LABEL_20:
      sub_24F8BF7C8();
    }
  }
  swift_release();
  *uint64_t v3 = v2;
  sub_24F781EC4();
}

void sub_24F8B9468(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_24F8BF61C();
  sub_24F8CFF30();
  a3(v7);
  sub_24F8CFF80();
  sub_24F8BF3F8();
  unint64_t v6 = sub_24F8CF700();
  *(void *)(v3 + 56 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v6;
  *(void *)(*(void *)(v3 + 48) + 8 * v6) = v4;
  sub_24F8BF198();
}

uint64_t sub_24F8B9504(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v12 = result;
  unint64_t v13 = *(void *)(*v6 + 16);
  unint64_t v14 = *(void *)(*v6 + 24);
  if (v14 > v13 && (a6 & 1) != 0) {
    goto LABEL_22;
  }
  if (a6)
  {
    sub_24F8B8050();
  }
  else
  {
    if (v14 > v13)
    {
      uint64_t result = (uint64_t)sub_24F8BB1C8();
      goto LABEL_22;
    }
    sub_24F8BBB54();
  }
  uint64_t v15 = *v6;
  sub_24F8CFF30();
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24F8CFF80();
  uint64_t v16 = -1 << *(unsigned char *)(v15 + 32);
  a5 = result & ~v16;
  uint64_t v17 = v15 + 56;
  if ((*(void *)(v15 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v18 = *(void *)(v15 + 48);
    char v19 = (void *)(v18 + 32 * a5);
    BOOL v20 = *v19 == v12 && v19[1] == a2;
    if (v20 || (uint64_t result = sub_24F8CFD00(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_24F8CFE90();
      __break(1u);
    }
    else
    {
      uint64_t v21 = ~v16;
      while (1)
      {
        a5 = (a5 + 1) & v21;
        if (((*(void *)(v17 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) == 0) {
          break;
        }
        uint64_t v22 = (void *)(v18 + 32 * a5);
        if (*v22 != v12 || v22[1] != a2)
        {
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v24 = *v7;
  *(void *)(*v7 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  char v25 = (uint64_t *)(*(void *)(v24 + 48) + 32 * a5);
  *char v25 = v12;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27) {
    __break(1u);
  }
  else {
    *(void *)(v24 + 16) = v28;
  }
  return result;
}

uint64_t sub_24F8B96C4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_24F8B8368();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_24F8BB38C();
      goto LABEL_22;
    }
    sub_24F8BBE38();
  }
  uint64_t v11 = *v4;
  sub_24F8CFF30();
  sub_24F8CEE50();
  uint64_t result = sub_24F8CFF80();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_24F8CFD00(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_24F8CFE90();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

#error "24F8B9910: call analysis failed (funcsize=116)"

uint64_t sub_24F8B9A44(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_24F8B8644();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_24F8BB540();
      goto LABEL_14;
    }
    sub_24F8BC0E4();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_24F8CFF20();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_24F8CFE90();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_24F8B9B68(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = (void *)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_24F8B88C8();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_24F8BB6D8();
        goto LABEL_39;
      }
      sub_24F8BC344();
    }
    uint64_t v8 = *v3;
    sub_24F8CFF30();
    sub_24F7F87E8();
    uint64_t result = sub_24F8CFF80();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    uint64_t v35 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v34 = ~v9;
      uint64_t v33 = *(void *)(v8 + 48);
      uint64_t v10 = *v5;
      uint64_t v11 = v5[1];
      do
      {
        uint64_t v12 = (uint64_t *)(v33 + (a2 << 6));
        uint64_t result = *v12;
        uint64_t v14 = v12[2];
        uint64_t v13 = v12[3];
        uint64_t v16 = v12[4];
        uint64_t v15 = v12[5];
        uint64_t v18 = v12[6];
        uint64_t v17 = v12[7];
        if (*v12 != v10 || v12[1] != v11)
        {
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            goto LABEL_38;
          }
        }
        if (v14 != v5[2] || v13 != v5[3])
        {
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            goto LABEL_38;
          }
        }
        uint64_t v21 = v5[5];
        if (v15)
        {
          if (!v21) {
            goto LABEL_38;
          }
          if (v16 != v5[4] || v15 != v21)
          {
            uint64_t result = sub_24F8CFD00();
            if ((result & 1) == 0) {
              goto LABEL_38;
            }
          }
        }
        else if (v21)
        {
          goto LABEL_38;
        }
        uint64_t v23 = v5[7];
        if (v17)
        {
          if (v23)
          {
            if (v18 == v5[6] && v17 == v23) {
              goto LABEL_42;
            }
            uint64_t result = sub_24F8CFD00();
            if (result) {
              goto LABEL_42;
            }
          }
        }
        else if (!v23)
        {
          goto LABEL_42;
        }
LABEL_38:
        a2 = (a2 + 1) & v34;
      }
      while (((*(void *)(v35 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_39:
  uint64_t v25 = *v32;
  *(void *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v26 = (_OWORD *)(*(void *)(v25 + 48) + (a2 << 6));
  long long v27 = *((_OWORD *)v5 + 1);
  *uint64_t v26 = *(_OWORD *)v5;
  v26[1] = v27;
  long long v28 = *((_OWORD *)v5 + 3);
  void v26[2] = *((_OWORD *)v5 + 2);
  void v26[3] = v28;
  uint64_t v29 = *(void *)(v25 + 16);
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
    __break(1u);
LABEL_42:
    uint64_t result = sub_24F8CFE90();
    __break(1u);
  }
  else
  {
    *(void *)(v25 + 16) = v31;
  }
  return result;
}

void sub_24F8B9DA4(uint64_t a1, unint64_t a2, char a3, unint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v114 = *MEMORY[0x263EF8340];
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 <= v11 || (a5 & 1) == 0)
  {
    if (a5)
    {
      sub_24F8B8CB4();
    }
    else
    {
      if (v12 > v11)
      {
        sub_24F8BB8D0();
        goto LABEL_183;
      }
      sub_24F8BC718();
    }
    uint64_t v13 = *v5;
    uint64_t __s2 = a1;
    unint64_t v112 = a2;
    char v113 = a3;
    sub_24F8CFF30();
    DatabaseValue.hash(into:)();
    uint64_t v14 = sub_24F8CFF80();
    uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
    a4 = v14 & ~v15;
    uint64_t v16 = v13 + 56;
    if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      uint64_t v109 = ~v15;
      BOOL v18 = a3 == 4 && (a2 | a1) == 0;
      BOOL v108 = v18;
      BOOL v19 = __OFSUB__(HIDWORD(a1), a1);
      BOOL v102 = v19;
      unint64_t v107 = a2 >> 62;
      uint64_t v101 = a1 >> 32;
      uint64_t v100 = (a1 >> 32) - (int)a1;
      BOOL v20 = *(double *)&a1 > -9.22337204e18;
      if (*(double *)&a1 >= 9.22337204e18) {
        BOOL v20 = 0;
      }
      if (trunc(*(double *)&a1) != *(double *)&a1) {
        BOOL v20 = 0;
      }
      BOOL v103 = v20;
      uint64_t v104 = v5;
      uint64_t v105 = v13 + 56;
      uint64_t v106 = v13;
      while (2)
      {
        uint64_t v21 = *(void *)(v13 + 48) + 24 * a4;
        uint64_t v23 = *(uint64_t *)v21;
        unint64_t v22 = *(void *)(v21 + 8);
        char v24 = *(unsigned char *)(v21 + 16);
        switch(v24)
        {
          case 1:
            if (a3)
            {
              if (a3 == 1)
              {
                sub_24F781F10(v23, v22, 1);
                sub_24F781F10(a1, a2, 1);
                sub_24F781F10(v23, v22, 1);
                if (*(double *)&v23 == *(double *)&a1) {
                  goto LABEL_226;
                }
                goto LABEL_49;
              }
              goto LABEL_48;
            }
            sub_24F781F10(v23, v22, 1);
            sub_24F781F10(a1, a2, 0);
            sub_24F781F10(v23, v22, 1);
            double v29 = trunc(*(double *)&v23);
            if (*(double *)&v23 > -9.22337204e18
              && *(double *)&v23 < 9.22337204e18
              && v29 == *(double *)&v23
              && (uint64_t)*(double *)&v23 == a1)
            {
              goto LABEL_226;
            }
            goto LABEL_49;
          case 2:
            if (a3 != 2)
            {
              sub_24F781F34(v23, v22, 2);
              swift_bridgeObjectRetain();
LABEL_48:
              sub_24F781F34(a1, a2, a3);
              sub_24F781F10(v23, v22, v24);
              sub_24F781F10(a1, a2, a3);
              sub_24F781F10(v23, v22, v24);
              goto LABEL_49;
            }
            if (v23 == a1 && v22 == a2)
            {
              sub_24F781F34(a1, a2, 2);
              sub_24F781F34(a1, a2, 2);
              unint64_t v95 = a2;
              uint64_t v96 = a1;
              goto LABEL_225;
            }
            char v27 = sub_24F8CFD00();
            sub_24F781F34(a1, a2, 2);
            sub_24F781F34(v23, v22, 2);
            sub_24F781F10(v23, v22, 2);
            sub_24F781F10(a1, a2, 2);
            if (v27) {
              goto LABEL_226;
            }
LABEL_49:
            a4 = (a4 + 1) & v109;
            if (((*(void *)(v16 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) == 0) {
              goto LABEL_183;
            }
            continue;
          case 3:
            if (a3 != 3)
            {
              sub_24F781F34(v23, v22, 3);
              sub_24F78419C(v23, v22);
              goto LABEL_48;
            }
            uint64_t v28 = 0;
            switch(v22 >> 62)
            {
              case 1uLL:
                if (__OFSUB__(HIDWORD(v23), v23)) {
                  goto LABEL_186;
                }
                uint64_t v28 = HIDWORD(v23) - (int)v23;
LABEL_68:
                sub_24F781F34(v23, v22, 3);
                break;
              case 2uLL:
                uint64_t v34 = *(void *)(v23 + 16);
                uint64_t v33 = *(void *)(v23 + 24);
                uint64_t v28 = v33 - v34;
                if (!__OFSUB__(v33, v34)) {
                  goto LABEL_68;
                }
                goto LABEL_187;
              case 3uLL:
                break;
              default:
                uint64_t v28 = BYTE6(v22);
                break;
            }
            uint64_t v35 = BYTE6(a2);
            switch((int)v107)
            {
              case 1:
                uint64_t v35 = HIDWORD(a1) - (int)a1;
                if (v102) {
                  goto LABEL_188;
                }
                goto LABEL_73;
              case 2:
                uint64_t v37 = *(void *)(a1 + 16);
                uint64_t v36 = *(void *)(a1 + 24);
                BOOL v38 = __OFSUB__(v36, v37);
                uint64_t v35 = v36 - v37;
                if (!v38) {
                  goto LABEL_73;
                }
                goto LABEL_189;
              case 3:
                if (v28) {
                  goto LABEL_85;
                }
                goto LABEL_224;
              default:
LABEL_73:
                if (v28 != v35)
                {
LABEL_85:
                  sub_24F781F34(a1, a2, 3);
                  sub_24F781F10(v23, v22, 3);
                  sub_24F781F10(a1, a2, 3);
                  unint64_t v6 = v104;
                  uint64_t v16 = v105;
                  uint64_t v13 = v106;
                  goto LABEL_49;
                }
                if (v28 < 1)
                {
LABEL_224:
                  sub_24F781F34(a1, a2, 3);
                  unint64_t v95 = v22;
                  uint64_t v96 = v23;
                  goto LABEL_225;
                }
                break;
            }
            break;
          case 4:
            if (v108) {
              goto LABEL_222;
            }
            goto LABEL_48;
          default:
            if (a3)
            {
              if (a3 != 1) {
                goto LABEL_48;
              }
              sub_24F781F10(v23, v22, 0);
              sub_24F781F10(a1, a2, 1);
              sub_24F781F10(v23, v22, 0);
              BOOL v25 = v103;
              if (v23 != (uint64_t)*(double *)&a1) {
                BOOL v25 = 0;
              }
              if (v25) {
                goto LABEL_226;
              }
            }
            else
            {
              sub_24F781F10(v23, v22, 0);
              sub_24F781F10(a1, a2, 0);
              sub_24F781F10(v23, v22, 0);
              if (v23 == a1) {
                goto LABEL_226;
              }
            }
            goto LABEL_49;
        }
        break;
      }
      switch(v22 >> 62)
      {
        case 1uLL:
          if ((int)v23 > v23 >> 32) {
            goto LABEL_190;
          }
          char v24 = v22;
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(v23, v22, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(v23, v22, 3);
          uint64_t v49 = sub_24F8CE6A0();
          uint64_t v13 = v106;
          if (v49)
          {
            uint64_t v50 = v49;
            uint64_t v51 = sub_24F8CE6C0();
            if (__OFSUB__((int)v23, v51)) {
              goto LABEL_192;
            }
            size_t v98 = (void *)(v50 + (int)v23 - v51);
          }
          else
          {
            size_t v98 = 0;
          }
          unint64_t v6 = v104;
          sub_24F8CE6B0();
          uint64_t v16 = v105;
          if (v107)
          {
            if (v107 == 1)
            {
              if (v101 < (int)a1) {
                goto LABEL_199;
              }
              swift_retain();
              uint64_t v57 = (char *)sub_24F8CE6A0();
              if (v57)
              {
                uint64_t v58 = sub_24F8CE6C0();
                if (__OFSUB__((int)a1, v58)) {
                  goto LABEL_208;
                }
                v57 += (int)a1 - v58;
              }
              char v24 = a2;
              uint64_t v59 = sub_24F8CE6B0();
              size_t v60 = (a1 >> 32) - (int)a1;
              if (v59 < v100) {
                size_t v60 = v59;
              }
              if (!v98) {
                goto LABEL_212;
              }
              if (!v57) {
                goto LABEL_213;
              }
              int v56 = memcmp(v98, v57, v60);
              sub_24F781F10(a1, a2, 3);
            }
            else
            {
              uint64_t v81 = *(void *)(a1 + 16);
              uint64_t v82 = *(void *)(a1 + 24);
              swift_retain();
              char v24 = a2;
              swift_retain();
              uint64_t v83 = (char *)sub_24F8CE6A0();
              if (v83)
              {
                uint64_t v84 = sub_24F8CE6C0();
                if (__OFSUB__(v81, v84)) {
                  goto LABEL_206;
                }
                v83 += v81 - v84;
                char v24 = a2;
              }
              BOOL v38 = __OFSUB__(v82, v81);
              int64_t v85 = v82 - v81;
              if (v38) {
                goto LABEL_200;
              }
              uint64_t v86 = sub_24F8CE6B0();
              if (v86 >= v85) {
                size_t v87 = v85;
              }
              else {
                size_t v87 = v86;
              }
              uint64_t v13 = v106;
              if (!v98) {
                goto LABEL_219;
              }
              unint64_t v6 = v104;
              if (!v83) {
                goto LABEL_220;
              }
              int v56 = memcmp(v98, v83, v87);
              swift_release();
              swift_release();
            }
            sub_24F781F10(a1, a2, 3);
            sub_24F781F10(v23, v22, 3);
            sub_24F781F10(a1, a2, 3);
            uint64_t v16 = v105;
          }
          else
          {
            *(void *)uint64_t v110 = a1;
            *(_WORD *)&v110[8] = a2;
            v110[10] = BYTE2(a2);
            v110[11] = BYTE3(a2);
            v110[12] = BYTE4(a2);
            v110[13] = BYTE5(a2);
            if (!v98) {
              goto LABEL_218;
            }
            int v56 = memcmp(v98, v110, BYTE6(a2));
            sub_24F781F10(a1, a2, 3);
            sub_24F781F10(v23, v22, 3);
LABEL_158:
            sub_24F781F10(a1, a2, 3);
          }
          sub_24F781F10(v23, v22, 3);
          sub_24F781F10(a1, a2, 3);
          sub_24F781F10(v23, v22, 3);
          sub_24F781F10(a1, a2, 3);
          sub_24F781F10(a1, a2, 3);
          if (!v56) {
            goto LABEL_226;
          }
          goto LABEL_49;
        case 2uLL:
          uint64_t v42 = *(void *)(v23 + 16);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(v23, v22, 3);
          swift_retain();
          swift_retain();
          uint64_t v43 = sub_24F8CE6A0();
          uint64_t v13 = v106;
          if (v43)
          {
            uint64_t v44 = v43;
            uint64_t v45 = sub_24F8CE6C0();
            if (__OFSUB__(v42, v45)) {
              goto LABEL_191;
            }
            __s1 = (void *)(v44 + v42 - v45);
          }
          else
          {
            __s1 = 0;
          }
          unint64_t v6 = v104;
          char v24 = v22;
          sub_24F8CE6B0();
          uint64_t v16 = v105;
          if (v107)
          {
            if (v107 == 1)
            {
              if (v101 < (int)a1) {
                goto LABEL_196;
              }
              swift_retain();
              unint64_t v52 = (char *)sub_24F8CE6A0();
              if (v52)
              {
                uint64_t v53 = sub_24F8CE6C0();
                if (__OFSUB__((int)a1, v53)) {
                  goto LABEL_207;
                }
                v52 += (int)a1 - v53;
              }
              char v24 = a2;
              uint64_t v54 = sub_24F8CE6B0();
              size_t v55 = (a1 >> 32) - (int)a1;
              if (v54 < v100) {
                size_t v55 = v54;
              }
              if (!__s1) {
                goto LABEL_210;
              }
              if (!v52) {
                goto LABEL_211;
              }
              int v56 = memcmp(__s1, v52, v55);
              sub_24F781F10(a1, a2, 3);
            }
            else
            {
              uint64_t v74 = *(void *)(a1 + 16);
              uint64_t v75 = *(void *)(a1 + 24);
              swift_retain();
              char v24 = a2;
              swift_retain();
              uint64_t v76 = (char *)sub_24F8CE6A0();
              if (v76)
              {
                uint64_t v77 = sub_24F8CE6C0();
                if (__OFSUB__(v74, v77)) {
                  goto LABEL_203;
                }
                v76 += v74 - v77;
                char v24 = a2;
              }
              BOOL v38 = __OFSUB__(v75, v74);
              int64_t v78 = v75 - v74;
              if (v38) {
                goto LABEL_198;
              }
              uint64_t v79 = sub_24F8CE6B0();
              if (v79 >= v78) {
                size_t v80 = v78;
              }
              else {
                size_t v80 = v79;
              }
              uint64_t v13 = v106;
              if (!__s1) {
                goto LABEL_216;
              }
              unint64_t v6 = v104;
              if (!v76) {
                goto LABEL_217;
              }
              int v56 = memcmp(__s1, v76, v80);
              swift_release();
              swift_release();
            }
            sub_24F781F10(a1, a2, 3);
            swift_release();
            swift_release();
            uint64_t v16 = v105;
          }
          else
          {
            *(void *)uint64_t v110 = a1;
            *(_WORD *)&v110[8] = a2;
            v110[10] = BYTE2(a2);
            v110[11] = BYTE3(a2);
            v110[12] = BYTE4(a2);
            v110[13] = BYTE5(a2);
            if (!__s1) {
              goto LABEL_215;
            }
            int v56 = memcmp(__s1, v110, BYTE6(a2));
            sub_24F781F10(a1, a2, 3);
            swift_release();
            swift_release();
          }
          goto LABEL_158;
        case 3uLL:
          *(void *)&v110[6] = 0;
          *(void *)uint64_t v110 = 0;
          unint64_t v6 = v104;
          uint64_t v13 = v106;
          if (!v107)
          {
            uint64_t __s2 = a1;
            LOWORD(v112) = a2;
            BYTE2(v112) = BYTE2(a2);
            BYTE3(v112) = BYTE3(a2);
            BYTE4(v112) = BYTE4(a2);
            BYTE5(v112) = BYTE5(a2);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(v23, v22, 3);
            p_s2 = &__s2;
            size_t v47 = BYTE6(a2);
LABEL_130:
            int v61 = memcmp(v110, p_s2, v47);
            sub_24F781F10(v23, v22, 3);
            sub_24F781F10(a1, a2, 3);
            sub_24F781F10(v23, v22, 3);
            sub_24F781F10(a1, a2, 3);
            sub_24F781F10(a1, a2, 3);
            goto LABEL_181;
          }
          if (v107 == 1)
          {
            if (v101 < (int)a1) {
              goto LABEL_193;
            }
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(v23, v22, 3);
            uint64_t v39 = sub_24F8CE6A0();
            if (v39)
            {
              uint64_t v46 = sub_24F8CE6C0();
              if (__OFSUB__((int)a1, v46)) {
                goto LABEL_204;
              }
              v39 += (int)a1 - v46;
            }
            char v24 = a2;
            uint64_t v41 = sub_24F8CE6B0();
            if (!v39) {
              goto LABEL_209;
            }
LABEL_96:
            if (v41 >= v100) {
              size_t v47 = (a1 >> 32) - (int)a1;
            }
            else {
              size_t v47 = v41;
            }
            p_s2 = (void *)v39;
            goto LABEL_130;
          }
          uint64_t v62 = *(void *)(a1 + 16);
          uint64_t v63 = *(void *)(a1 + 24);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(a1, a2, 3);
          sub_24F781F34(v23, v22, 3);
          swift_retain();
          char v24 = a2;
          swift_retain();
          uint64_t v64 = sub_24F8CE6A0();
          if (v64)
          {
            uint64_t v65 = v64;
            uint64_t v66 = sub_24F8CE6C0();
            if (__OFSUB__(v62, v66)) {
              goto LABEL_202;
            }
            int64_t v99 = (void *)(v65 + v62 - v66);
            char v24 = a2;
          }
          else
          {
            int64_t v99 = 0;
          }
          BOOL v38 = __OFSUB__(v63, v62);
          int64_t v88 = v63 - v62;
          if (v38) {
            goto LABEL_197;
          }
          uint64_t v89 = sub_24F8CE6B0();
          uint64_t v13 = v106;
          if (!v99) {
            goto LABEL_221;
          }
          if (v89 >= v88) {
            size_t v90 = v88;
          }
          else {
            size_t v90 = v89;
          }
          int v61 = memcmp(v110, v99, v90);
          goto LABEL_179;
        default:
          *(void *)uint64_t v110 = v23;
          *(_WORD *)&v110[8] = v22;
          v110[10] = BYTE2(v22);
          v110[11] = BYTE3(v22);
          v110[12] = BYTE4(v22);
          v110[13] = BYTE5(v22);
          uint64_t v13 = v106;
          if (v107)
          {
            if (v107 == 1)
            {
              if (v101 < (int)a1) {
                goto LABEL_194;
              }
              sub_24F781F34(a1, a2, 3);
              sub_24F781F34(a1, a2, 3);
              sub_24F781F34(a1, a2, 3);
              sub_24F781F34(v23, v22, 3);
              uint64_t v39 = sub_24F8CE6A0();
              unint64_t v6 = v104;
              if (v39)
              {
                uint64_t v40 = sub_24F8CE6C0();
                if (__OFSUB__((int)a1, v40)) {
                  goto LABEL_205;
                }
                v39 += (int)a1 - v40;
              }
              char v24 = a2;
              uint64_t v41 = sub_24F8CE6B0();
              if (!v39)
              {
                __break(1u);
LABEL_209:
                __break(1u);
LABEL_210:
                __break(1u);
LABEL_211:
                __break(1u);
LABEL_212:
                __break(1u);
LABEL_213:
                __break(1u);
LABEL_214:
                __break(1u);
LABEL_215:
                __break(1u);
LABEL_216:
                __break(1u);
LABEL_217:
                __break(1u);
LABEL_218:
                __break(1u);
LABEL_219:
                __break(1u);
LABEL_220:
                __break(1u);
LABEL_221:
                __break(1u);
LABEL_222:
                sub_24F781F10(v23, v22, 4);
                unint64_t v95 = 0;
                uint64_t v96 = 0;
                a2 = v22;
                a1 = v23;
LABEL_225:
                sub_24F781F10(v96, v95, v24);
                sub_24F781F10(a1, a2, v24);
LABEL_226:
                sub_24F8CFE90();
                __break(1u);
                JUMPOUT(0x24F8BAFA4);
              }
              goto LABEL_96;
            }
            uint64_t v67 = *(void *)(a1 + 16);
            uint64_t v68 = *(void *)(a1 + 24);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(v23, v22, 3);
            swift_retain();
            char v24 = a2;
            swift_retain();
            uint64_t v69 = (char *)sub_24F8CE6A0();
            if (v69)
            {
              uint64_t v70 = sub_24F8CE6C0();
              if (__OFSUB__(v67, v70)) {
                goto LABEL_201;
              }
              v69 += v67 - v70;
              char v24 = a2;
            }
            BOOL v38 = __OFSUB__(v68, v67);
            int64_t v71 = v68 - v67;
            if (v38) {
              goto LABEL_195;
            }
            uint64_t v72 = sub_24F8CE6B0();
            uint64_t v13 = v106;
            if (!v69) {
              goto LABEL_214;
            }
            if (v72 >= v71) {
              size_t v73 = v71;
            }
            else {
              size_t v73 = v72;
            }
            int v61 = memcmp(v110, v69, v73);
LABEL_179:
            swift_release();
            swift_release();
          }
          else
          {
            uint64_t __s2 = a1;
            LOWORD(v112) = a2;
            BYTE2(v112) = BYTE2(a2);
            BYTE3(v112) = BYTE3(a2);
            BYTE4(v112) = BYTE4(a2);
            BYTE5(v112) = BYTE5(a2);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(a1, a2, 3);
            sub_24F781F34(v23, v22, 3);
            int v61 = memcmp(v110, &__s2, BYTE6(a2));
          }
          sub_24F781F10(v23, v22, 3);
          sub_24F781F10(a1, a2, 3);
          sub_24F781F10(v23, v22, 3);
          sub_24F781F10(a1, a2, 3);
          sub_24F781F10(a1, a2, 3);
          unint64_t v6 = v104;
LABEL_181:
          uint64_t v16 = v105;
          if (!v61) {
            goto LABEL_226;
          }
          goto LABEL_49;
      }
    }
  }
LABEL_183:
  uint64_t v91 = *v6;
  *(void *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v92 = *(void *)(v91 + 48) + 24 * a4;
  *(double *)uint64_t v92 = *(double *)&a1;
  *(void *)(v92 + 8) = a2;
  *(unsigned char *)(v92 + 16) = a3;
  uint64_t v93 = *(void *)(v91 + 16);
  BOOL v38 = __OFADD__(v93, 1);
  uint64_t v94 = v93 + 1;
  if (v38)
  {
    __break(1u);
LABEL_186:
    __break(1u);
LABEL_187:
    __break(1u);
LABEL_188:
    __break(1u);
LABEL_189:
    __break(1u);
LABEL_190:
    __break(1u);
LABEL_191:
    __break(1u);
LABEL_192:
    __break(1u);
LABEL_193:
    __break(1u);
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
  }
  *(void *)(v91 + 16) = v94;
}

#error "24F8BB098: call analysis failed (funcsize=115)"

void *sub_24F8BB1C8()
{
  uint64_t v1 = v0;
  sub_24F781274(&qword_26B1F7F18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24F8CF770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    BOOL v20 = (void *)(*(void *)(v2 + 48) + 32 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = v20[2];
    uint64_t v23 = v20[3];
    char v24 = (void *)(*(void *)(v4 + 48) + 32 * i);
    *char v24 = *v20;
    v24[1] = v21;
    void v24[2] = v22;
    uint64_t v24[3] = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24F8BB38C()
{
  uint64_t v1 = v0;
  sub_24F781274(&qword_26B1F7F20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24F8CF770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    BOOL v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24F8BB540()
{
  uint64_t v1 = v0;
  sub_24F781274(&qword_269A2A1C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24F8CF770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(void *)(*(void *)(v4 + 48) + 8 * i) = *(void *)(*(void *)(v2 + 48) + 8 * i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24F8BB6D8()
{
  uint64_t v1 = v0;
  sub_24F781274(&qword_26B1F7968);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24F8CF770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    unint64_t v20 = *(void *)(v2 + 48) + (i << 6);
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
    uint64_t v23 = *(void *)(v20 + 24);
    uint64_t v24 = *(void *)(v20 + 32);
    uint64_t v25 = *(void *)(v20 + 56);
    unint64_t v26 = *(void *)(v4 + 48) + (i << 6);
    long long v27 = *(_OWORD *)(v20 + 40);
    *(void *)unint64_t v26 = *(void *)v20;
    *(void *)(v26 + 8) = v21;
    *(void *)(v26 + 16) = v22;
    *(void *)(v26 + 24) = v23;
    *(void *)(v26 + 32) = v24;
    *(_OWORD *)(v26 + 40) = v27;
    *(void *)(v26 + 56) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_24F8BB8D0()
{
  sub_24F777204();
  uint64_t v5 = v0;
  sub_24F781274(&qword_269A2C570);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24F8CF770();
  if (!*(void *)(v6 + 16))
  {
LABEL_26:
    swift_release();
    *uint64_t v5 = v7;
    sub_24F773598();
    return;
  }
  uint64_t v8 = (void *)sub_24F778D24();
  if (v11) {
    BOOL v12 = (unint64_t)v8 >= v10;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12) {
    memmove(v8, v1, 8 * v9);
  }
  sub_24F7805BC();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_9:
  sub_24F8BF1E8();
  while (1)
  {
    uint64_t v16 = 3 * v13;
    uint64_t v17 = *(void *)(v6 + 48) + 8 * v16;
    uint64_t v18 = *(void *)v17;
    unint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = *(void *)(v7 + 48) + 8 * v16;
    *(void *)uint64_t v21 = *(void *)v17;
    *(void *)(v21 + 8) = v19;
    *(unsigned char *)(v21 + 16) = v20;
    sub_24F781F34(v18, v19, v20);
    if (v4) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v2) {
      goto LABEL_26;
    }
    ++v3;
    if (!*((void *)v1 + v14))
    {
      uint64_t v3 = v14 + 1;
      if (v14 + 1 >= v2) {
        goto LABEL_26;
      }
      if (!*((void *)v1 + v3))
      {
        uint64_t v3 = v14 + 2;
        if (v14 + 2 >= v2) {
          goto LABEL_26;
        }
        if (!*((void *)v1 + v3)) {
          break;
        }
      }
    }
LABEL_23:
    sub_24F8BF404();
  }
  uint64_t v15 = v14 + 3;
  if (v15 >= v2) {
    goto LABEL_26;
  }
  if (*((void *)v1 + v15))
  {
    uint64_t v3 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v3 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v3 >= v2) {
      goto LABEL_26;
    }
    ++v15;
    if (*((void *)v1 + v3)) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

void sub_24F8BBA14()
{
}

void sub_24F8BBA20()
{
}

void sub_24F8BBA2C()
{
  sub_24F777204();
  uint64_t v5 = v0;
  sub_24F781274(v6);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_24F8CF770();
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    swift_release();
    *uint64_t v5 = v8;
    sub_24F773598();
    return;
  }
  uint64_t v9 = (void *)sub_24F778D24();
  if (v12) {
    BOOL v13 = (unint64_t)v9 >= v11;
  }
  else {
    BOOL v13 = 1;
  }
  if (v13) {
    memmove(v9, v1, 8 * v10);
  }
  sub_24F7805BC();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_9:
  sub_24F8BF1E8();
  while (1)
  {
    *(void *)(*(void *)(v8 + 48) + 8 * v14) = *(void *)(*(void *)(v7 + 48) + 8 * v14);
    swift_retain();
    if (v4) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v15 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v2) {
      goto LABEL_26;
    }
    ++v3;
    if (!*((void *)v1 + v15))
    {
      uint64_t v3 = v15 + 1;
      if (v15 + 1 >= v2) {
        goto LABEL_26;
      }
      if (!*((void *)v1 + v3))
      {
        uint64_t v3 = v15 + 2;
        if (v15 + 2 >= v2) {
          goto LABEL_26;
        }
        if (!*((void *)v1 + v3)) {
          break;
        }
      }
    }
LABEL_23:
    sub_24F8BF404();
  }
  uint64_t v16 = v15 + 3;
  if (v16 >= v2) {
    goto LABEL_26;
  }
  if (*((void *)v1 + v16))
  {
    uint64_t v3 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v2) {
      goto LABEL_26;
    }
    ++v16;
    if (*((void *)v1 + v3)) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_24F8BBB54()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_26B1F7F18);
  uint64_t v3 = sub_24F8CF780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 32 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v20 = v16[2];
    uint64_t v19 = v16[3];
    sub_24F8CFF30();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24F8CFF80();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6))) == 0)
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v8 + 8 * v23);
        if (v28 != -1)
        {
          unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v8 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    double v29 = (void *)(*(void *)(v4 + 48) + 32 * v24);
    *double v29 = v17;
    v29[1] = v18;
    void v29[2] = v20;
    void v29[3] = v19;
    ++*(void *)(v4 + 16);
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v31) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v30 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v31) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v30 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v31) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v30 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v31)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v30 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24F8BBE38()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_26B1F7F20);
  uint64_t v3 = sub_24F8CF780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    uint64_t result = sub_24F8CFF80();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24F8BC0E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_269A2A1C8);
  uint64_t result = sub_24F8CF780();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = sub_24F8CFF20();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24F8BC344()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24F781274(&qword_26B1F7968);
  uint64_t v3 = sub_24F8CF780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_39:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v35 = v1;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v38 = v2;
  uint64_t v39 = v4;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v40 = (v7 - 1) & v7;
  int64_t v42 = v10;
  for (unint64_t i = __clz(__rbit64(v7)) | (v10 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + (i << 6));
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v20 = v16[2];
    uint64_t v19 = v16[3];
    uint64_t v21 = v16[4];
    uint64_t v22 = v16[5];
    uint64_t v24 = v16[6];
    uint64_t v23 = v16[7];
    sub_24F8CFF30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v41 = v18;
    sub_24F8CEE50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24F8CEE50();
    swift_bridgeObjectRelease();
    if (v22)
    {
      sub_24F8CFF50();
      swift_bridgeObjectRetain();
      uint64_t v25 = v21;
      sub_24F8CEE50();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = v21;
      sub_24F8CFF50();
    }
    sub_24F8CFF50();
    if (v23)
    {
      swift_bridgeObjectRetain();
      sub_24F8CEE50();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_24F8CFF80();
    uint64_t v4 = v39;
    uint64_t v26 = -1 << *(unsigned char *)(v39 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) == 0)
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v8 + 8 * v28);
        if (v33 != -1)
        {
          unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_35:
    *(void *)(v8 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t v34 = (void *)(*(void *)(v39 + 48) + (v29 << 6));
    int64_t v10 = v42;
    *uint64_t v34 = v41;
    v34[1] = v17;
    void v34[2] = v20;
    v34[3] = v19;
    v34[4] = v25;
    v34[5] = v22;
    v34[6] = v24;
    v34[7] = v23;
    ++*(void *)(v39 + 16);
    uint64_t v2 = v38;
    unint64_t v7 = v40;
    if (v40) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v12 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_41;
    }
    if (v12 >= v37) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v36 + 8 * v12);
    int64_t v14 = v10 + 1;
    if (!v13)
    {
      int64_t v14 = v10 + 2;
      if (v10 + 2 >= v37) {
        goto LABEL_37;
      }
      unint64_t v13 = *(void *)(v36 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v10 + 3;
        if (v10 + 3 >= v37) {
          goto LABEL_37;
        }
        unint64_t v13 = *(void *)(v36 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v40 = (v13 - 1) & v13;
    int64_t v42 = v14;
  }
  uint64_t v15 = v10 + 4;
  if (v10 + 4 >= v37)
  {
LABEL_37:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_39;
  }
  unint64_t v13 = *(void *)(v36 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v37) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v36 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24F8BC718()
{
  uint64_t v1 = *v0;
  sub_24F781274(&qword_269A2C570);
  uint64_t v2 = sub_24F8CF780();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v32 = v1 + 56;
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v33 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v7 = v2 + 56;
    swift_retain();
    int64_t v8 = 0;
    if (!v6) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
LABEL_21:
      uint64_t v14 = *(void *)(v1 + 48) + 24 * v10;
      uint64_t v15 = *(void *)v14;
      unint64_t v16 = *(void *)(v14 + 8);
      uint64_t v17 = *(unsigned __int8 *)(v14 + 16);
      sub_24F8CFF30();
      switch(v17)
      {
        case 2:
          sub_24F781F34(v15, v16, 2);
          swift_bridgeObjectRetain();
          sub_24F8CEE50();
          uint64_t v18 = v15;
          unint64_t v19 = v16;
          char v20 = 2;
          goto LABEL_25;
        case 3:
          sub_24F781F34(v15, v16, 3);
          sub_24F78419C(v15, v16);
          sub_24F8CE8E0();
          uint64_t v18 = v15;
          unint64_t v19 = v16;
          char v20 = 3;
LABEL_25:
          sub_24F781F10(v18, v19, v20);
          break;
        case 4:
          sub_24F8CFF40();
          break;
        default:
          sub_24F8CFF70();
          break;
      }
      uint64_t v21 = sub_24F8CFF80();
      uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v23 = v21 & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v7 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v7 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_36;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v7 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
LABEL_36:
      *(void *)(v7 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      uint64_t v30 = *(void *)(v3 + 48) + 24 * v25;
      *(void *)uint64_t v30 = v15;
      *(void *)(v30 + 8) = v16;
      *(unsigned char *)(v30 + 16) = v17;
      ++*(void *)(v3 + 16);
      if (v6) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_42;
    }
    if (v11 < v33)
    {
      unint64_t v12 = *(void *)(v32 + 8 * v11);
      ++v8;
      if (v12) {
        goto LABEL_20;
      }
      int64_t v8 = v11 + 1;
      if (v11 + 1 < v33)
      {
        unint64_t v12 = *(void *)(v32 + 8 * v8);
        if (v12) {
          goto LABEL_20;
        }
        int64_t v8 = v11 + 2;
        if (v11 + 2 < v33)
        {
          unint64_t v12 = *(void *)(v32 + 8 * v8);
          if (v12) {
            goto LABEL_20;
          }
          int64_t v13 = v11 + 3;
          if (v13 < v33)
          {
            unint64_t v12 = *(void *)(v32 + 8 * v13);
            if (v12)
            {
              int64_t v8 = v13;
LABEL_20:
              unint64_t v6 = (v12 - 1) & v12;
              unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v8 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                break;
              }
              if (v8 >= v33) {
                goto LABEL_38;
              }
              unint64_t v12 = *(void *)(v32 + 8 * v8);
              ++v13;
              if (v12) {
                goto LABEL_20;
              }
            }
LABEL_43:
            __break(1u);
            JUMPOUT(0x24F8BCAA4);
          }
        }
      }
    }
LABEL_38:
    uint64_t result = swift_release_n();
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v0 = v3;
  return result;
}

void sub_24F8BCAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_24F8BCAD8(a1, (uint64_t)&unk_26B1F7EC8, (uint64_t)DatabaseFunction.hash(into:), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32);
}

void sub_24F8BCAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_24F778E30();
  a31 = v34;
  a32 = v35;
  int64_t v37 = v36;
  sub_24F8BF26C();
  sub_24F781274(v38);
  uint64_t v39 = sub_24F8BF318();
  if (!*(void *)(v33 + 16))
  {
    swift_release();
LABEL_32:
    *uint64_t v32 = v39;
    sub_24F771110();
    return;
  }
  sub_24F8BF6BC();
  uint64_t v40 = v33 + 56;
  sub_24F8BF5A0();
  uint64_t v43 = v42 & v41;
  int64_t v58 = (unint64_t)(v44 + 63) >> 6;
  swift_retain();
  int64_t v45 = 0;
  if (!v43) {
    goto LABEL_4;
  }
LABEL_3:
  sub_24F8109B0();
  for (int64_t i = v46 | (v45 << 6); ; int64_t i = v50 + (v45 << 6))
  {
    uint64_t v51 = *(void *)(*(void *)(v33 + 48) + 8 * i);
    sub_24F8CFF30();
    swift_retain();
    v37(&a12);
    sub_24F8CFF80();
    sub_24F76F95C();
    if (v52)
    {
      sub_24F77B984();
      while (1)
      {
        sub_24F780F00();
        if (v52)
        {
          if (v54) {
            break;
          }
        }
        if (v55 == v56) {
          uint64_t v55 = 0;
        }
        if (*(void *)(v39 + 56 + 8 * v55) != -1)
        {
          sub_24F774704();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    sub_24F773BF4();
LABEL_28:
    sub_24F8BF02C(v53);
    *(void *)(*(void *)(v39 + 48) + 8 * v57) = v51;
    sub_24F8BF198();
    if (v43) {
      goto LABEL_3;
    }
LABEL_4:
    int64_t v48 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      goto LABEL_34;
    }
    if (v48 >= v58) {
      goto LABEL_30;
    }
    ++v45;
    if (!*(void *)(v40 + 8 * v48))
    {
      int64_t v45 = v48 + 1;
      if (v48 + 1 >= v58) {
        goto LABEL_30;
      }
      if (!*(void *)(v40 + 8 * v45))
      {
        int64_t v45 = v48 + 2;
        if (v48 + 2 >= v58) {
          goto LABEL_30;
        }
        if (!*(void *)(v40 + 8 * v45)) {
          break;
        }
      }
    }
LABEL_17:
    sub_24F8BF7C8();
  }
  int64_t v49 = v48 + 3;
  if (v49 >= v58)
  {
LABEL_30:
    swift_release_n();
    goto LABEL_32;
  }
  if (*(void *)(v40 + 8 * v49))
  {
    int64_t v45 = v49;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v45 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v45 >= v58) {
      goto LABEL_30;
    }
    ++v49;
    if (*(void *)(v40 + 8 * v45)) {
      goto LABEL_17;
    }
  }
LABEL_35:
  __break(1u);
}

void sub_24F8BCCBC()
{
  sub_24F77DC04();
  sub_24F8BF26C();
  sub_24F781274(&qword_26B1F7C80);
  uint64_t v2 = sub_24F8BF318();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    swift_release();
LABEL_35:
    *uint64_t v0 = v3;
    sub_24F781EC4();
    return;
  }
  unint64_t v25 = v0;
  int64_t v4 = 0;
  uint64_t v5 = v1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = v2 + 56;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * i);
    sub_24F8CFF30();
    sub_24F8CFF40();
    unint64_t v17 = sub_24F8CFF80() & ~(-1 << *(unsigned char *)(v3 + 32));
    if (((-1 << v17) & ~*(void *)(v10 + 8 * (v17 >> 6))) == 0)
    {
      sub_24F77B984();
      while (1)
      {
        sub_24F780F00();
        if (v21)
        {
          if (v18) {
            break;
          }
        }
        if (v19 == v20) {
          uint64_t v19 = 0;
        }
        if (*(void *)(v10 + 8 * v19) != -1)
        {
          sub_24F774704();
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    sub_24F773BF4();
LABEL_31:
    sub_24F77C7BC();
    *(void *)(v10 + v22) |= v23;
    *(void *)(*(void *)(v3 + 48) + 8 * v24) = v16;
    sub_24F8BF198();
    swift_retain();
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_37;
    }
    if (v13 >= v9) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9)
  {
LABEL_33:
    swift_release();
    uint64_t v0 = v25;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_24F8BCEC4()
{
  sub_24F777204();
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  sub_24F76D720();
  if (v6 != v7)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = v5;
  uint64_t v9 = v2 - v5;
  if (__OFSUB__(v2, v5))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v10 = v5 - v2;
  if (__OFSUB__(0, v9))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFADD__(v3, v10))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 - v9 > *(void *)(v0 + 24) >> 1)
  {
    sub_24F7877E8();
    uint64_t v0 = v11;
  }
  sub_24F781274(&qword_269A2A3D0);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v13 = v12 - v2;
  if (__OFSUB__(v12, v2)) {
    goto LABEL_24;
  }
  unint64_t v14 = (const void *)(v0 + 32 + 48 * v2);
  if (v8 != v2 || (unint64_t)v14 + 48 * v13 <= v0 + 32 + 48 * v8)
  {
    memmove((void *)(v0 + 32 + 48 * v8), v14, 48 * v13);
    uint64_t v12 = *(void *)(v0 + 16);
  }
  BOOL v7 = __OFADD__(v12, v10);
  uint64_t v16 = v12 - v9;
  if (!v7)
  {
    *(void *)(v0 + 16) = v16;
LABEL_18:
    *uint64_t v1 = v0;
    sub_24F773598();
    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_24F8BCFD8(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFADD__(v5, v8))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v7 > *(void *)(v4 + 24) >> 1)
  {
    sub_24F787184();
    uint64_t v4 = v9;
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v10 - a2;
  if (__OFSUB__(v10, a2)) {
    goto LABEL_24;
  }
  uint64_t v12 = (const void *)(v4 + 32 + 16 * a2);
  if (v6 != a2 || (unint64_t)v12 + 16 * v11 <= v4 + 32 + 16 * v6)
  {
    uint64_t result = (uint64_t)memmove((void *)(v4 + 32 + 16 * v6), v12, 16 * v11);
    uint64_t v10 = *(void *)(v4 + 16);
  }
  BOOL v14 = __OFADD__(v10, v8);
  uint64_t v15 = v10 - v7;
  if (!v14)
  {
    *(void *)(v4 + 16) = v15;
LABEL_18:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24F8BD0EC(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFADD__(v5, v8))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v7 > *(void *)(v4 + 24) >> 1)
  {
    sub_24F788584();
    uint64_t v4 = v9;
  }
  sub_24F781274(&qword_26B1F54F8);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v10 - a2;
  if (__OFSUB__(v10, a2)) {
    goto LABEL_24;
  }
  uint64_t v12 = (const void *)(v4 + 32 + 40 * a2);
  if (v6 != a2 || (unint64_t)v12 + 40 * v11 <= v4 + 32 + 40 * v6)
  {
    uint64_t result = (uint64_t)memmove((void *)(v4 + 32 + 40 * v6), v12, 40 * v11);
    uint64_t v10 = *(void *)(v4 + 16);
  }
  BOOL v14 = __OFADD__(v10, v8);
  uint64_t v15 = v10 - v7;
  if (!v14)
  {
    *(void *)(v4 + 16) = v15;
LABEL_18:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24F8BD214(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFADD__(v5, v8))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v7 > *(void *)(v4 + 24) >> 1)
  {
    sub_24F7885AC();
    uint64_t v4 = v9;
  }
  sub_24F781274(&qword_26B1F5500);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v10 - a2;
  if (__OFSUB__(v10, a2)) {
    goto LABEL_24;
  }
  uint64_t v12 = (const void *)(v4 + 32 + 24 * a2);
  if (v6 != a2 || (unint64_t)v12 + 24 * v11 <= v4 + 32 + 24 * v6)
  {
    uint64_t result = (uint64_t)memmove((void *)(v4 + 32 + 24 * v6), v12, 24 * v11);
    uint64_t v10 = *(void *)(v4 + 16);
  }
  BOOL v14 = __OFADD__(v10, v8);
  uint64_t v15 = v10 - v7;
  if (!v14)
  {
    *(void *)(v4 + 16) = v15;
LABEL_18:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24F8BD33C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24F8975F8();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_24F8BD3A8(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_24F8BD3A8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24F8CFAD0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_147;
    }
    if (v3) {
      return sub_24F8BDA88(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v100 = result;
  uint64_t v97 = a1;
  if (v3 <= 1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    BOOL v103 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v40 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v8 = MEMORY[0x263F8EE78];
      goto LABEL_113;
    }
    uint64_t v99 = MEMORY[0x263F8EE78];
  }
  else
  {
    sub_24F781274(&qword_26B1F5500);
    uint64_t result = sub_24F8CF120();
    *(void *)(result + 16) = v3 / 2;
    uint64_t v99 = result;
    BOOL v103 = (char *)(result + 32);
  }
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v98 = *a1 + 8;
  uint64_t v96 = *a1 - 24;
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v101 = v3;
  uint64_t v102 = v7;
  while (1)
  {
    uint64_t v9 = v6++;
    if (v6 >= v3) {
      goto LABEL_39;
    }
    uint64_t v10 = (uint64_t *)(v7 + 24 * v6);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v7 + 24 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_38;
      }
      int v14 = 0;
    }
    else
    {
      uint64_t result = sub_24F8CFD00();
      int v14 = result;
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_30;
      }
    }
    uint64_t v16 = (void *)(v98 + 24 * v15);
    do
    {
      uint64_t result = *(v16 - 1);
      unint64_t v17 = (void *)(v7 + 24 * v6);
      if (result == *v17 && *v16 == v17[1])
      {
        if (v14) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t result = sub_24F8CFD00();
        if ((v14 ^ result)) {
          goto LABEL_30;
        }
      }
      v16 += 3;
      uint64_t v19 = v15 + 1;
      uint64_t v6 = v15;
      uint64_t v15 = v19;
    }
    while (v19 < v3);
    uint64_t v15 = v19;
LABEL_30:
    uint64_t v6 = v15;
    if (v14)
    {
LABEL_31:
      if (v15 < v9) {
        goto LABEL_150;
      }
      if (v9 < v15)
      {
        uint64_t v20 = 24 * v15;
        uint64_t v21 = 24 * v9;
        uint64_t v22 = v15;
        uint64_t v23 = v9;
        do
        {
          if (v23 != --v22)
          {
            if (!v7) {
              goto LABEL_153;
            }
            uint64_t v24 = v7 + v21;
            uint64_t v25 = v7 + v20;
            uint64_t v26 = *(void *)(v7 + v21);
            long long v27 = *(_OWORD *)(v7 + v21 + 8);
            long long v28 = *(_OWORD *)(v7 + v20 - 24);
            *(void *)(v24 + 16) = *(void *)(v7 + v20 - 8);
            *(_OWORD *)uint64_t v24 = v28;
            *(void *)(v25 - 24) = v26;
            *(_OWORD *)(v25 - 16) = v27;
          }
          ++v23;
          v20 -= 24;
          v21 += 24;
        }
        while (v23 < v22);
      }
LABEL_38:
      uint64_t v6 = v15;
    }
LABEL_39:
    if (v6 < v3)
    {
      if (__OFSUB__(v6, v9)) {
        goto LABEL_145;
      }
      if (v6 - v9 < v100) {
        break;
      }
    }
LABEL_59:
    if (v6 < v9) {
      goto LABEL_140;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24F897440(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    unint64_t v39 = *(void *)(v8 + 16);
    unint64_t v38 = *(void *)(v8 + 24);
    unint64_t v40 = v39 + 1;
    if (v39 >= v38 >> 1)
    {
      uint64_t result = (uint64_t)sub_24F897440((char *)(v38 > 1), v39 + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    *(void *)(v8 + 16) = v40;
    uint64_t v41 = v8 + 32;
    uint64_t v42 = (uint64_t *)(v8 + 32 + 16 * v39);
    *uint64_t v42 = v9;
    v42[1] = v6;
    if (v39)
    {
      uint64_t v7 = v102;
      while (1)
      {
        unint64_t v43 = v40 - 1;
        if (v40 >= 4)
        {
          unint64_t v48 = v41 + 16 * v40;
          uint64_t v49 = *(void *)(v48 - 64);
          uint64_t v50 = *(void *)(v48 - 56);
          BOOL v54 = __OFSUB__(v50, v49);
          uint64_t v51 = v50 - v49;
          if (v54) {
            goto LABEL_129;
          }
          uint64_t v53 = *(void *)(v48 - 48);
          uint64_t v52 = *(void *)(v48 - 40);
          BOOL v54 = __OFSUB__(v52, v53);
          uint64_t v46 = v52 - v53;
          char v47 = v54;
          if (v54) {
            goto LABEL_130;
          }
          unint64_t v55 = v40 - 2;
          uint64_t v56 = (uint64_t *)(v41 + 16 * (v40 - 2));
          uint64_t v58 = *v56;
          uint64_t v57 = v56[1];
          BOOL v54 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          if (v54) {
            goto LABEL_131;
          }
          BOOL v54 = __OFADD__(v46, v59);
          uint64_t v60 = v46 + v59;
          if (v54) {
            goto LABEL_133;
          }
          if (v60 >= v51)
          {
            int64_t v78 = (uint64_t *)(v41 + 16 * v43);
            uint64_t v80 = *v78;
            uint64_t v79 = v78[1];
            BOOL v54 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v54) {
              goto LABEL_139;
            }
            BOOL v71 = v46 < v81;
            goto LABEL_97;
          }
        }
        else
        {
          if (v40 != 3)
          {
            uint64_t v72 = *(void *)(v8 + 32);
            uint64_t v73 = *(void *)(v8 + 40);
            BOOL v54 = __OFSUB__(v73, v72);
            uint64_t v65 = v73 - v72;
            char v66 = v54;
            goto LABEL_91;
          }
          uint64_t v45 = *(void *)(v8 + 32);
          uint64_t v44 = *(void *)(v8 + 40);
          BOOL v54 = __OFSUB__(v44, v45);
          uint64_t v46 = v44 - v45;
          char v47 = v54;
        }
        if (v47) {
          goto LABEL_132;
        }
        unint64_t v55 = v40 - 2;
        int v61 = (uint64_t *)(v41 + 16 * (v40 - 2));
        uint64_t v63 = *v61;
        uint64_t v62 = v61[1];
        BOOL v64 = __OFSUB__(v62, v63);
        uint64_t v65 = v62 - v63;
        char v66 = v64;
        if (v64) {
          goto LABEL_134;
        }
        uint64_t v67 = (uint64_t *)(v41 + 16 * v43);
        uint64_t v69 = *v67;
        uint64_t v68 = v67[1];
        BOOL v54 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v54) {
          goto LABEL_136;
        }
        if (__OFADD__(v65, v70)) {
          goto LABEL_138;
        }
        if (v65 + v70 >= v46)
        {
          BOOL v71 = v46 < v70;
LABEL_97:
          if (v71) {
            unint64_t v43 = v55;
          }
          goto LABEL_99;
        }
LABEL_91:
        if (v66) {
          goto LABEL_135;
        }
        uint64_t v74 = (uint64_t *)(v41 + 16 * v43);
        uint64_t v76 = *v74;
        uint64_t v75 = v74[1];
        BOOL v54 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v54) {
          goto LABEL_137;
        }
        if (v77 < v65) {
          goto LABEL_108;
        }
LABEL_99:
        unint64_t v82 = v43 - 1;
        if (v43 - 1 >= v40)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (!v7) {
          goto LABEL_152;
        }
        uint64_t v83 = v7;
        uint64_t v84 = (uint64_t *)(v41 + 16 * v82);
        uint64_t v85 = *v84;
        uint64_t v86 = (void *)(v41 + 16 * v43);
        uint64_t v87 = v86[1];
        uint64_t result = sub_24F8BDB68((char *)(v83 + 24 * *v84), (char *)(v83 + 24 * *v86), v83 + 24 * v87, v103);
        if (v1)
        {
LABEL_110:
          swift_bridgeObjectRelease();
          *(void *)(v99 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v87 < v85) {
          goto LABEL_126;
        }
        if (v43 > *(void *)(v8 + 16)) {
          goto LABEL_127;
        }
        *uint64_t v84 = v85;
        *(void *)(v41 + 16 * v82 + 8) = v87;
        unint64_t v88 = *(void *)(v8 + 16);
        if (v43 >= v88) {
          goto LABEL_128;
        }
        unint64_t v40 = v88 - 1;
        uint64_t result = (uint64_t)memmove((void *)(v41 + 16 * v43), v86 + 2, 16 * (v88 - 1 - v43));
        *(void *)(v8 + 16) = v88 - 1;
        BOOL v71 = v88 > 2;
        uint64_t v7 = v102;
        if (!v71) {
          goto LABEL_108;
        }
      }
    }
    unint64_t v40 = 1;
    uint64_t v7 = v102;
LABEL_108:
    uint64_t v3 = v101;
    if (v6 >= v101)
    {
      uint64_t v5 = v99;
LABEL_113:
      uint64_t result = v8;
      uint64_t v99 = v5;
      if (v40 >= 2)
      {
        uint64_t v89 = *v97;
        do
        {
          unint64_t v90 = v40 - 2;
          if (v40 < 2) {
            goto LABEL_141;
          }
          if (!v89) {
            goto LABEL_154;
          }
          uint64_t v91 = result;
          uint64_t v92 = *(void *)(result + 32 + 16 * v90);
          uint64_t v93 = *(void *)(result + 32 + 16 * (v40 - 1) + 8);
          uint64_t result = sub_24F8BDB68((char *)(v89 + 24 * v92), (char *)(v89 + 24 * *(void *)(result + 32 + 16 * (v40 - 1))), v89 + 24 * v93, v103);
          if (v1) {
            goto LABEL_110;
          }
          if (v93 < v92) {
            goto LABEL_142;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_24F897538();
            uint64_t v91 = result;
          }
          if (v90 >= *(void *)(v91 + 16)) {
            goto LABEL_143;
          }
          uint64_t v94 = (void *)(v91 + 32 + 16 * v90);
          *uint64_t v94 = v92;
          v94[1] = v93;
          unint64_t v95 = *(void *)(v91 + 16);
          if (v40 > v95) {
            goto LABEL_144;
          }
          memmove((void *)(v91 + 32 + 16 * (v40 - 1)), (const void *)(v91 + 32 + 16 * v40), 16 * (v95 - v40));
          uint64_t result = v91;
          *(void *)(v91 + 16) = v95 - 1;
          unint64_t v40 = v95 - 1;
        }
        while (v95 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v99 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v9, v100)) {
    goto LABEL_148;
  }
  if (v9 + v100 >= v3) {
    uint64_t v29 = v3;
  }
  else {
    uint64_t v29 = v9 + v100;
  }
  if (v29 >= v9)
  {
    if (v6 != v29)
    {
      uint64_t v30 = v96 + 24 * v6;
      do
      {
        unint64_t v31 = (uint64_t *)(v7 + 24 * v6);
        uint64_t result = *v31;
        uint64_t v32 = v31[1];
        uint64_t v33 = v9;
        uint64_t v34 = v30;
        do
        {
          if (result == *(void *)v34 && v32 == *(void *)(v34 + 8)) {
            break;
          }
          uint64_t result = sub_24F8CFD00();
          if ((result & 1) == 0) {
            break;
          }
          if (!v7) {
            goto LABEL_151;
          }
          long long v36 = *(_OWORD *)(v34 + 32);
          uint64_t v37 = *(void *)(v34 + 16);
          uint64_t result = *(void *)(v34 + 24);
          *(_OWORD *)(v34 + 24) = *(_OWORD *)v34;
          *(void *)(v34 + 40) = v37;
          *(void *)uint64_t v34 = result;
          *(_OWORD *)(v34 + 8) = v36;
          uint64_t v32 = v36;
          v34 -= 24;
          ++v33;
        }
        while (v6 != v33);
        ++v6;
        v30 += 24;
      }
      while (v6 != v29);
      uint64_t v6 = v29;
    }
    goto LABEL_59;
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
  return result;
}

uint64_t sub_24F8BDA88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 24 * a3 - 24;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 24 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = v8;
      do
      {
        if (result == *(void *)v12 && v10 == *(void *)(v12 + 8)) {
          break;
        }
        uint64_t result = sub_24F8CFD00();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        long long v14 = *(_OWORD *)(v12 + 32);
        uint64_t v15 = *(void *)(v12 + 16);
        uint64_t result = *(void *)(v12 + 24);
        *(_OWORD *)(v12 + 24) = *(_OWORD *)v12;
        *(void *)(v12 + 40) = v15;
        *(void *)uint64_t v12 = result;
        *(_OWORD *)(v12 + 8) = v14;
        uint64_t v10 = v14;
        v12 -= 24;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 24;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_24F8BDB68(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 24;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 24;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[24 * v11] <= a4) {
      memmove(a4, __src, 24 * v11);
    }
    uint64_t v13 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_57;
    }
    unint64_t v21 = a3 - 24;
    while (1)
    {
      uint64_t v22 = (char *)(v21 + 24);
      uint64_t v23 = v13 - 24;
      BOOL v24 = *((void *)v13 - 3) == *((void *)v6 - 3) && *((void *)v13 - 2) == *((void *)v6 - 2);
      if (v24 || (sub_24F8CFD00() & 1) == 0)
      {
        BOOL v26 = v22 != v13 || v21 >= (unint64_t)v13;
        v13 -= 24;
        if (!v26) {
          goto LABEL_53;
        }
      }
      else
      {
        BOOL v25 = v22 != v6 || v21 >= (unint64_t)v6;
        uint64_t v23 = v6 - 24;
        v6 -= 24;
        if (!v25) {
          goto LABEL_53;
        }
      }
      long long v27 = *(_OWORD *)v23;
      *(void *)(v21 + 16) = *((void *)v23 + 2);
      *(_OWORD *)unint64_t v21 = v27;
LABEL_53:
      v21 -= 24;
      if (v6 <= v7 || v13 <= v4) {
        goto LABEL_57;
      }
    }
  }
  if (a4 != __dst || &__dst[24 * v9] <= a4) {
    memmove(a4, __dst, 24 * v9);
  }
  uint64_t v13 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v15 && (sub_24F8CFD00() & 1) != 0) {
        break;
      }
      uint64_t v16 = v4;
      BOOL v15 = v7 == v4;
      v4 += 24;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 24;
      if (v4 >= v13 || (unint64_t)v6 >= a3) {
        goto LABEL_26;
      }
    }
    uint64_t v16 = v6;
    BOOL v15 = v7 == v6;
    v6 += 24;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    long long v17 = *(_OWORD *)v16;
    *((void *)v7 + 2) = *((void *)v16 + 2);
    *(_OWORD *)uint64_t v7 = v17;
    goto LABEL_21;
  }
LABEL_26:
  uint64_t v6 = v7;
LABEL_57:
  uint64_t v29 = (v13 - v4) / 24;
  if (v6 != v4 || v6 >= &v4[24 * v29]) {
    memmove(v6, v4, 24 * v29);
  }
  return 1;
}

uint64_t sub_24F8BDD70@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_24F8BDDA8(uint64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_10;
  }
  if (result < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= result)
  {
    __break(1u);
  }
  else if ((*(void *)(a4 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result))
  {
    if (*(_DWORD *)(a4 + 36) == a2) {
      return sub_24F8CF6F0();
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void *sub_24F8BDE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  int64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  uint64_t v11 = sub_24F8BDF40((uint64_t)v9, v10, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  return v11;
}

void *sub_24F8BDF40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void v12[3] = a3;
  void v12[4] = a4;
  uint64_t v8 = sub_24F76ADC4(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v8, a1, a3);
  sub_24F778BA8();
  a2[10] = v9;
  a2[11] = v10;
  a2[7] = 0;
  a2[8] = 0;
  sub_24F7E99C8((uint64_t)v12, (uint64_t)(a2 + 2));
  a2[9] = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v12);
  return a2;
}

uint64_t sub_24F8BE014()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_24F7902D0();
  return sub_24F8BF398(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11);
}

uint64_t sub_24F8BE050()
{
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24F770E80();
  uint64_t v0 = (void *)sub_24F79031C();
  return sub_24F8BF398(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11);
}

uint64_t sub_24F8BE0A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_24F77494C(a1, a2, a3);
  sub_24F773974();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v3, v4);
  return v3;
}

uint64_t sub_24F8BE0F8()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_24F8BE130()
{
  return sub_24F8BE41C((uint64_t)&unk_269A2C4A0);
}

unint64_t sub_24F8BE164()
{
  return sub_24F8BE41C((uint64_t)&unk_269A2C4A8);
}

unint64_t sub_24F8BE198()
{
  return sub_24F8BE4DC((uint64_t)&unk_269A2C4B0);
}

unint64_t sub_24F8BE1CC()
{
  unint64_t result = qword_269A2C4C0;
  if (!qword_269A2C4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C4C0);
  }
  return result;
}

unint64_t sub_24F8BE218()
{
  unint64_t result = qword_269A2C4C8;
  if (!qword_269A2C4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C4C8);
  }
  return result;
}

unint64_t sub_24F8BE264()
{
  return sub_24F8BE36C((uint64_t)&unk_269A2C4D0);
}

unint64_t sub_24F8BE2B4()
{
  return sub_24F8BE41C((uint64_t)&unk_269A2C4E8);
}

unint64_t sub_24F8BE2E8()
{
  return sub_24F8BE4DC((uint64_t)&unk_269A2C4F0);
}

unint64_t sub_24F8BE31C()
{
  return sub_24F8BE36C((uint64_t)&unk_269A2C4F8);
}

unint64_t sub_24F8BE36C(uint64_t a1)
{
  unint64_t result = sub_24F8BF370(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_24F7688B8(&qword_269A2C4D8);
    sub_24F8BE41C(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_24F8BE3E8()
{
  return sub_24F8BE41C((uint64_t)&unk_26B1F55C0);
}

unint64_t sub_24F8BE41C(uint64_t a1)
{
  unint64_t result = sub_24F8BF370(a1);
  if (!result)
  {
    type metadata accessor for Row();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_24F8BE45C()
{
  unint64_t result = qword_269A2A170;
  if (!qword_269A2A170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2A170);
  }
  return result;
}

unint64_t sub_24F8BE4A8()
{
  return sub_24F8BE4DC((uint64_t)&unk_269A2C500);
}

unint64_t sub_24F8BE4DC(uint64_t a1)
{
  unint64_t result = sub_24F8BF370(a1);
  if (!result)
  {
    sub_24F7688B8(&qword_269A2C4B8);
    sub_24F8BE1CC();
    sub_24F8BE218();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_24F8BE548()
{
  return sub_24F7789CC((uint64_t)&unk_269A2C508);
}

unint64_t sub_24F8BE584()
{
  return sub_24F7789CC((uint64_t)&unk_269A2A180);
}

unint64_t sub_24F8BE5C4()
{
  unint64_t result = qword_269A2A178;
  if (!qword_269A2A178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2A178);
  }
  return result;
}

uint64_t sub_24F8BE610()
{
  return MEMORY[0x263F8D720];
}

unint64_t sub_24F8BE620()
{
  unint64_t result = qword_269A2C510;
  if (!qword_269A2C510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C510);
  }
  return result;
}

unint64_t sub_24F8BE66C()
{
  return sub_24F7789CC((uint64_t)&unk_269A2C518);
}

unint64_t sub_24F8BE6A8()
{
  return sub_24F7789CC((uint64_t)&unk_269A2C528);
}

unint64_t sub_24F8BE6E4()
{
  return sub_24F7789CC((uint64_t)&unk_269A2C538);
}

unint64_t sub_24F8BE720()
{
  return sub_24F7789CC((uint64_t)&unk_269A2C548);
}

uint64_t method lookup function for Row(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Row);
}

uint64_t method lookup function for RowCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RowCursor);
}

void type metadata accessor for RowIndex()
{
}

void type metadata accessor for Row.ScopesView()
{
}

uint64_t _s12GRDBInternal3RowC10ScopesViewVwxx_0(uint64_t a1)
{
  sub_24F8BF370(a1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s12GRDBInternal3RowC10ScopesViewVwcp_0(uint64_t *a1, uint64_t *a2)
{
  sub_24F775534(a1, a2);
  uint64_t v4 = *(void *)(v3 + 24);
  *(void *)(v2 + 16) = *(void *)(v3 + 16);
  *(void *)(v2 + 24) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

void *_s12GRDBInternal3RowC10ScopesViewVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s12GRDBInternal3RowC10ScopesViewVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_24F8BE93C(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
    if (a3 < 0) {
      *((unsigned char *)result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_24F8BF740(result, a2);
    }
    *((unsigned char *)result + 32) = 0;
    if (a2) {
      return sub_24F8BF740(result, a2);
    }
  }
  return result;
}

void type metadata accessor for Row.ScopesTreeView()
{
}

uint64_t sub_24F8BE984(uint64_t *a1, uint64_t *a2)
{
  sub_24F775534(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

void *assignWithTake for Row.PrefetchedRowsView(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_24F8BEC44(a1, a2, a3, MEMORY[0x263F8EEA0]);
}

void type metadata accessor for Row.PrefetchedRowsView()
{
}

void type metadata accessor for ArrayRowImpl()
{
}

uint64_t sub_24F8BE9EC(uint64_t *a1, uint64_t *a2)
{
  sub_24F775534(a1, a2);
  *(void *)(v2 + 16) = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

void *assignWithCopy for Row.Prefetch(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Row.Prefetch()
{
  return &type metadata for Row.Prefetch;
}

uint64_t sub_24F8BEABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24F8B40F0(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_24F8BEAC4()
{
  return sub_24F8BE014();
}

void sub_24F8BEAE4()
{
}

uint64_t sub_24F8BEB0C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_24F77494C(a1, a2, a3);
  sub_24F773974();
  sub_24F76BAA0();
  v4();
  return v3;
}

uint64_t sub_24F8BEB5C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24F8BEB68(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F8BEBB8(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_24F781F34(result, a2, a3);
  }
  return result;
}

void *assignWithCopy for StatementCopyRowImpl(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for StatementCopyRowImpl(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_24F8BEC44(a1, a2, a3, MEMORY[0x263F8EED8]);
}

void *sub_24F8BEC44(void *a1, _OWORD *a2, uint64_t a3, void (*a4)(void))
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_24F8BEC88(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
    if (a3 < 0) {
      *((unsigned char *)result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_24F8BF740(result, a2);
    }
    *((unsigned char *)result + 16) = 0;
    if (a2) {
      return sub_24F8BF740(result, a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatementCopyRowImpl()
{
  return &type metadata for StatementCopyRowImpl;
}

ValueMetadata *type metadata accessor for EmptyRowImpl()
{
  return &type metadata for EmptyRowImpl;
}

uint64_t assignWithTake for StatementRowImpl(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StatementRowImpl()
{
  return &type metadata for StatementRowImpl;
}

uint64_t sub_24F8BED34()
{
  return sub_24F8B4608(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_24F8BED40()
{
  return sub_24F8BE050();
}

uint64_t sub_24F8BEDA8()
{
  sub_24F781F34(v1, v0, 3);
  sub_24F781F34(v1, v0, 3);
  sub_24F781F34(v1, v0, 3);
  sub_24F781F34(v2, v3, 3);
  return sub_24F8CE6A0();
}

uint64_t sub_24F8BEE0C@<X0>(uint64_t a1@<X8>)
{
  return sub_24F838880(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_24F8BEE2C()
{
  return sub_24F8CFA00();
}

char *sub_24F8BEE54@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_24F8BEEAC()
{
  return swift_unexpectedError();
}

void sub_24F8BEEDC(char a1@<W8>)
{
  *uint64_t v1 = -1 << a1;
}

void sub_24F8BEEEC(uint64_t a1, void *a2)
{
  *a2 = v3;
  a2[1] = v2;
  a2[2] = 3;
  uint64_t v5 = *(void *)(v4 - 248);
  a2[3] = *(void *)(v4 - 264);
  a2[4] = v5;
}

uint64_t sub_24F8BEF28()
{
  return v0;
}

uint64_t sub_24F8BEF48()
{
  return swift_retain();
}

uint64_t sub_24F8BEF64()
{
  return v0;
}

uint64_t sub_24F8BEF8C@<X0>(const void *a1@<X0>, size_t a2@<X8>)
{
  return memcmp(a1, v2, a2);
}

uint64_t sub_24F8BEFA8()
{
  return sub_24F7771BC(v1, 1, 1, v0);
}

uint64_t sub_24F8BEFC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24F8BF00C()
{
  return v0;
}

void sub_24F8BF02C(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t sub_24F8BF08C()
{
  *uint64_t v0 = 0x8000000000000000;
  return swift_retain();
}

void sub_24F8BF0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned __int8 a31,uint64_t a32,uint64_t a33,unint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v53 = *(void *)(v51 - 96);
  static DatabaseValueConvertible<>._valueMismatch(fromStatement:atUncheckedIndex:context:)(a1, v49, a3, a4, v50, v53, v48, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48);
}

uint64_t sub_24F8BF0DC()
{
  return v0;
}

uint64_t sub_24F8BF0F8()
{
  return v0;
}

uint64_t sub_24F8BF114()
{
  return sqlite3_column_type(v1, v0);
}

uint64_t sub_24F8BF158()
{
  return sub_24F8CF610();
}

void sub_24F8BF198()
{
  ++*(void *)(v0 + 16);
}

uint64_t sub_24F8BF1C4()
{
  return swift_dynamicCast();
}

void sub_24F8BF200()
{
  Row.fastDecodeIfPresent<A>(_:atUncheckedIndex:)();
}

void sub_24F8BF224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned __int8 a31,uint64_t a32,uint64_t a33,unint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v52 = *(void *)(v50 - 96);
  static DatabaseValueConvertible<>._valueMismatch(fromStatement:atUncheckedIndex:context:)(a1, a2, a3, a4, v48, v52, v49, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48);
}

uint64_t sub_24F8BF248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = *(_DWORD *)(v4 + 36);
  return sub_24F8B31EC(v5 - 160, a4, v7, 0, v4);
}

uint64_t sub_24F8BF2AC()
{
  return v0;
}

uint64_t sub_24F8BF2B8()
{
  return sub_24F781F10(v1, v0, 2);
}

uint64_t sub_24F8BF2D4()
{
  return v0;
}

uint64_t sub_24F8BF2FC()
{
  return sub_24F8CFD00();
}

uint64_t sub_24F8BF318()
{
  return sub_24F8CF780();
}

uint64_t sub_24F8BF33C()
{
  return v0;
}

uint64_t sub_24F8BF34C()
{
  return sub_24F8CF780();
}

uint64_t sub_24F8BF370(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_24F8BF398(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, char a11)
{
  a10 = v11;
  a11 = 1;
  return RowDecodingContext.init(row:key:)(a1, &a10, v12);
}

uint64_t sub_24F8BF3BC()
{
  sub_24F781F34(v0, v1, v2);
  return sub_24F781F10(v0, v1, v2);
}

uint64_t sub_24F8BF41C()
{
  return v0;
}

uint64_t sub_24F8BF488@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_24F838880(0, (unint64_t)(a1 + 63) >> 6, a4);
}

uint64_t sub_24F8BF4A8()
{
  return swift_release();
}

uint64_t sub_24F8BF4C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24F8BF4E0(void *a1)
{
  return RowDecodingContext.init(row:key:)(a1, (long long *)(v1 - 200), v1 - 176);
}

uint64_t sub_24F8BF4F8()
{
  *(void *)(v0 - 200) = 0;
  *(void *)(v0 - 192) = 0;
  *(unsigned char *)(v0 - 184) = -1;
  return swift_retain();
}

uint64_t sub_24F8BF518()
{
  *(void *)(v0 - 200) = 0;
  *(void *)(v0 - 192) = 0;
  *(unsigned char *)(v0 - 184) = -1;
  return swift_retain();
}

uint64_t sub_24F8BF538()
{
  *uint64_t v0 = *(void *)(*(void *)(*(void *)v1 + 48) + 8 * v2);
  return swift_retain();
}

void sub_24F8BF558()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_24F8BF580()
{
  return sub_24F8CEEB0();
}

uint64_t sub_24F8BF5DC()
{
  return sub_24F77835C(v0);
}

void sub_24F8BF63C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  *(void *)(v2 - 200) = 0;
  *(void *)(v2 - 192) = 0xE000000000000000;
}

uint64_t sub_24F8BF670()
{
  return swift_retain();
}

uint64_t sub_24F8BF69C()
{
  return v0;
}

uint64_t sub_24F8BF6A8()
{
  return v0;
}

uint64_t sub_24F8BF6DC()
{
  sub_24F781F10(v1, v2, 0);
  return v0;
}

uint64_t sub_24F8BF708()
{
  sub_24F781F10(v1, v2, 1);
  return v0;
}

uint64_t sub_24F8BF734()
{
  return v0;
}

void *sub_24F8BF740(void *result, int a2)
{
  *uint64_t result = (a2 - 1);
  return result;
}

void *sub_24F8BF74C()
{
  return sub_24F7811D0((void *)(v0 + 16), *(void *)(v0 + 40));
}

void sub_24F8BF78C(char a1@<W8>, uint64_t a2, uint64_t a3, void *a4)
{
  *a4 = -1 << a1;
}

uint64_t sub_24F8BF7A0()
{
  return v0;
}

void sub_24F8BF7B4()
{
  *(void *)(v0 - 72) = *(void *)(v0 - 160);
}

uint64_t static FetchableRecord<>.fetchCursor(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8BF840(a1, a2, a3, a4, FetchRequest<>.fetchCursor(_:));
}

uint64_t static FetchableRecord<>.fetchAll(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24F8BF840(a1, a2, a3, a4, FetchRequest<>.fetchAll(_:));
}

#error "24F8BF860: call analysis failed (funcsize=29)"

#error "24F8BF8F4: call analysis failed (funcsize=32)"

#error "24F8BF95C: call analysis failed (funcsize=29)"

uint64_t static FetchableRecord<>.fetchCursor<A>(_:keys:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_24F77379C(a1, a2);
  int v6 = static TableRecord.filter<A>(keys:)(v2, v3, v4, v5);
  sub_24F773884(v6, v7, v8, v9, v10, v11, v12, v13, v24, v26, v28, v30, v32, v34, v36, v38, v40, v42, v44,
    v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62,
    v64,
    v66);
  sub_24F77B464();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_24F77E47C(WitnessTable);
  sub_24F775CEC(v15, v16, v17, v18, v19, v20, v21, v22, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43, v45,
    v47,
    v49,
    v51,
    v53,
    v55,
    v57,
    v59,
    v61,
    v63,
    v65,
    v67);
  return sub_24F780B98();
}

uint64_t static FetchableRecord<>.fetchAll<A>(_:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a5;
  sub_24F77AD10();
  MEMORY[0x270FA5388](v8);
  sub_24F76B830();
  (*(void (**)(uint64_t))(v11 + 16))(v10 - v9);
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24F8CF1D0();
  v20[0] = v12;
  uint64_t v13 = sub_24F8CF1B0();
  swift_getWitnessTable();
  if (sub_24F8CF410())
  {
    swift_bridgeObjectRelease();
    return sub_24F8CF110();
  }
  else
  {
    v20[0] = v12;
    swift_getWitnessTable();
    static TableRecord.filter<A>(keys:)((uint64_t)v20, a3, v13, a6);
    swift_bridgeObjectRelease();
    sub_24F77729C(v20);
    sub_24F77729C(&v19);
    uint64_t InterfaceRequest = type metadata accessor for QueryInterfaceRequest();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v14 = FetchRequest<>.fetchAll(_:)(a1, InterfaceRequest, WitnessTable, v21);
    sub_24F7920F8(v20);
  }
  return v14;
}

uint64_t static FetchableRecord<>.fetchOne<A>(_:key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v28 = a7;
  uint64_t v27 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a3;
  uint64_t v29 = a1;
  uint64_t v32 = a8;
  uint64_t v10 = sub_24F8CF610();
  sub_24F77AD10();
  uint64_t v12 = v11;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v26 - v17;
  sub_24F77AD10();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  sub_24F76B830();
  uint64_t v24 = v23 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, a2, v10);
  if (sub_24F777048((uint64_t)v18, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v10);
    return sub_24F7771BC(v32, 1, 1, v31);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v24, v18, a4);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v16, v24, a4);
    sub_24F7771BC((uint64_t)v16, 0, 1, a4);
    static TableRecord.filter<A>(key:)(v34, v16, v31, a4, v27, v28);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v10);
    memcpy(__dst, v34, 0xA2uLL);
    memcpy(v33, v34, sizeof(v33));
    sub_24F7712A0();
    swift_getWitnessTable();
    FetchRequest<>.fetchOne(_:)(v29, v30, v32);
    sub_24F7920F8(__dst);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v24, a4);
  }
}

uint64_t static FetchableRecord<>.fetchCursor<A>(_:ids:)()
{
  sub_24F8C0C58();
  uint64_t v2 = sub_24F77C220(v0, v1);
  int v6 = static TableRecord<>.filter<A>(ids:)(v2, v3, v4, v5);
  sub_24F773884(v6, v7, v8, v9, v10, v11, v12, v13, v24, v26, v28, v30, v32, v34, v36, v38, v40, v42, v44,
    v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62,
    v64,
    v66);
  sub_24F77B464();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_24F77E47C(WitnessTable);
  sub_24F775CEC(v15, v16, v17, v18, v19, v20, v21, v22, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43, v45,
    v47,
    v49,
    v51,
    v53,
    v55,
    v57,
    v59,
    v61,
    v63,
    v65,
    v67);
  return sub_24F780B98();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  sub_24F8C0C58();
  uint64_t v2 = sub_24F77C220(v0, v1);
  int v8 = static TableRecord<>.filter<A>(ids:)(v2, v3, v4, v5, v6, v7);
  sub_24F773884(v8, v9, v10, v11, v12, v13, v14, v15, v26, v28, v30, v32, v34, v36, v38, v40, v42, v44, v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62,
    v64,
    v66,
    v68);
  sub_24F77B464();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_24F77E47C(WitnessTable);
  sub_24F775CEC(v17, v18, v19, v20, v21, v22, v23, v24, v27, v29, v31, v33, v35, v37, v39, v41, v43, v45, v47,
    v49,
    v51,
    v53,
    v55,
    v57,
    v59,
    v61,
    v63,
    v65,
    v67,
    v69);
  return sub_24F780B98();
}

#error "24F8BFFB0: call analysis failed (funcsize=32)"

#error "24F8C001C: call analysis failed (funcsize=25)"

#error "24F8C0120: call analysis failed (funcsize=32)"

#error "24F8C0190: call analysis failed (funcsize=26)"

uint64_t static FetchableRecord<>.fetchSet<A>(_:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v24 = a7;
  sub_24F77AD10();
  MEMORY[0x270FA5388](v9);
  sub_24F76B830();
  (*(void (**)(uint64_t))(v12 + 16))(v11 - v10);
  swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24F8CF1D0();
  v23[0] = v13;
  uint64_t v14 = sub_24F8CF1B0();
  swift_getWitnessTable();
  if (sub_24F8CF410())
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_24F8C0C40();
    if (MEMORY[0x2533639E0](v15, a3))
    {
      return sub_24F8C0884(v15, a3, v24);
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE88];
    }
  }
  else
  {
    v23[0] = v13;
    swift_getWitnessTable();
    static TableRecord.filter<A>(keys:)((uint64_t)v23, a3, v14, a6);
    swift_bridgeObjectRelease();
    sub_24F77729C(v23);
    sub_24F77729C(&v22);
    uint64_t v17 = sub_24F7712A0();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v16 = FetchRequest<>.fetchSet(_:)(a1, v17, WitnessTable, a5, v24);
    sub_24F7920F8(v23);
  }
  return v16;
}

#error "24F8C0474: call analysis failed (funcsize=44)"

#error "24F8C0528: call analysis failed (funcsize=44)"

uint64_t static FetchableRecord<>.fetchCursor(_:keys:)(uint64_t a1, uint64_t a2)
{
  sub_24F77379C(a1, a2);
  int v2 = static TableRecord.filter(keys:)();
  sub_24F773884(v2, v3, v4, v5, v6, v7, v8, v9, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38, v40,
    v42,
    v44,
    v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62);
  sub_24F77B464();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_24F77E47C(WitnessTable);
  sub_24F775CEC(v11, v12, v13, v14, v15, v16, v17, v18, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39, v41,
    v43,
    v45,
    v47,
    v49,
    v51,
    v53,
    v55,
    v57,
    v59,
    v61,
    v63);
  return sub_24F780B98();
}

uint64_t static FetchableRecord<>.fetchAll(_:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a2 + 16)) {
    return sub_24F8C0C40();
  }
  int v6 = static TableRecord.filter(keys:)();
  sub_24F773884(v6, v7, v8, v9, v10, v11, v12, v13, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43, v45,
    v47,
    v49,
    v51,
    v53,
    v55,
    v57,
    v59,
    v61,
    v63,
    v65,
    v67);
  uint64_t v14 = sub_24F7712A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = FetchRequest<>.fetchAll(_:)(a1, v14, WitnessTable, a4);
  sub_24F781EE0(v16, v17, v18, v19, v20, v21, v22, v23, v26, v28, v30, v32, v34, v36, v38, v40, v42, v44, v46,
    v48,
    v50,
    v52,
    v54,
    v56,
    v58,
    v60,
    v62,
    v64,
    v66,
    v68);
  return v16;
}

#error "24F8C0708: call analysis failed (funcsize=49)"

#error "24F8C07D4: call analysis failed (funcsize=61)"

uint64_t sub_24F8C0884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  int v9 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v50 = (char *)&v38 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v38 - v13;
  if (MEMORY[0x2533639A0](v12))
  {
    sub_24F8CF7B0();
    uint64_t v15 = sub_24F8CF7A0();
  }
  else
  {
    uint64_t v15 = MEMORY[0x263F8EE88];
  }
  uint64_t v43 = MEMORY[0x2533639E0](v5, a2);
  if (v43)
  {
    uint64_t v39 = v7;
    uint64_t v40 = v6;
    uint64_t v16 = 0;
    uint64_t v48 = (uint64_t (**)(char *, uint64_t *, uint64_t))(v6 + 16);
    uint64_t v49 = v15 + 56;
    uint64_t v45 = v6 + 32;
    uint64_t v47 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v41 = v5;
    uint64_t v42 = v14;
    while (1)
    {
      char v17 = sub_24F8CF130();
      sub_24F8CF0D0();
      if (v17)
      {
        uint64_t v18 = *(uint64_t (**)(char *, uint64_t *, uint64_t))(v6 + 16);
        uint64_t result = v18(v14, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16), a2);
      }
      else
      {
        uint64_t result = sub_24F8CF800();
        if (v39 != 8) {
          goto LABEL_24;
        }
        uint64_t v51 = result;
        uint64_t v18 = *v48;
        (*v48)(v14, &v51, a2);
        uint64_t result = swift_unknownObjectRelease();
      }
      BOOL v20 = __OFADD__(v16, 1);
      uint64_t v21 = v16 + 1;
      if (v20) {
        break;
      }
      uint64_t v46 = v21;
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v44(v50, v14, a2);
      uint64_t v22 = sub_24F8CECF0();
      uint64_t v23 = v15;
      uint64_t v24 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v25 = v22 & ~v24;
      unint64_t v26 = v25 >> 6;
      uint64_t v27 = *(void *)(v49 + 8 * (v25 >> 6));
      uint64_t v28 = 1 << v25;
      uint64_t v29 = *(void *)(v6 + 72);
      if (((1 << v25) & v27) != 0)
      {
        uint64_t v30 = ~v24;
        while (1)
        {
          v18(v9, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
          uint64_t v31 = a3;
          char v32 = sub_24F8CED50();
          uint64_t v33 = *v47;
          (*v47)(v9, a2);
          if (v32) {
            break;
          }
          unint64_t v25 = (v25 + 1) & v30;
          unint64_t v26 = v25 >> 6;
          uint64_t v27 = *(void *)(v49 + 8 * (v25 >> 6));
          uint64_t v28 = 1 << v25;
          a3 = v31;
          if ((v27 & (1 << v25)) == 0)
          {
            uint64_t v6 = v40;
            uint64_t v5 = v41;
            goto LABEL_14;
          }
        }
        v33(v50, a2);
        a3 = v31;
        uint64_t v6 = v40;
        uint64_t v5 = v41;
        uint64_t v15 = v23;
      }
      else
      {
LABEL_14:
        uint64_t v34 = v50;
        *(void *)(v49 + 8 * v26) = v28 | v27;
        unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
        uint64_t v15 = v23;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v44)(v35, v34, a2);
        uint64_t v36 = *(void *)(v23 + 16);
        BOOL v20 = __OFADD__(v36, 1);
        uint64_t v37 = v36 + 1;
        if (v20) {
          goto LABEL_23;
        }
        *(void *)(v23 + 16) = v37;
      }
      uint64_t v14 = v42;
      uint64_t v16 = v46;
      if (v46 == v43) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_24F8C0C40()
{
  return sub_24F8CF110();
}

uint64_t DatabaseFunction.__allocating_init(_:argumentCount:pure:function:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24F780248();
  uint64_t v9 = sub_24F77E4A4();
  DatabaseFunction.init(_:argumentCount:pure:function:)(v9, v10, v11, v12, a5, a6);
  return v6;
}

uint64_t DatabaseFunction.callAsFunction(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 56) == 1)
  {
    uint64_t v6 = *(void *)(v2 + 16);
    uint64_t v5 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24F7A5754(a1);
    uint64_t v11 = v6;
    uint64_t v12 = v5;
    __int16 v13 = 0;
  }
  else
  {
    uint64_t v9 = *(void *)(v2 + 16);
    uint64_t v8 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24F7A5754(a1);
    uint64_t v11 = v9;
    uint64_t v12 = v8;
    __int16 v13 = 1;
  }
  uint64_t v14 = v7;
  sub_24F7A45E4((uint64_t)&v11);
  return sub_24F76F710((uint64_t)&v11, a2);
}

void sub_24F8C0D70(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_context *a4)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v6 = a1;
  __int16 v7 = a2;
  char v8 = BYTE2(a2);
  char v9 = BYTE3(a2);
  char v10 = BYTE4(a2);
  char v11 = BYTE5(a2);
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_6;
  }
  int v5 = a3;
  if (a3 > 0x7FFFFFFF)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  int v4 = a4;
  if (qword_26B1F76D0 != -1) {
LABEL_7:
  }
    swift_once();
  sqlite3_result_blob(v4, &v6, v5, (void (__cdecl *)(void *))qword_26B1FAB20);
}

uint64_t sub_24F8C0EA8(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 56);
  int v4 = (void *)sub_24F8C1960(*(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56));
  swift_beginAccess();
  int v5 = *(sqlite3 **)(a1 + 16);
  int v6 = *(_DWORD *)(v1 + 32);
  if (*(unsigned char *)(v1 + 36)) {
    int v7 = 2049;
  }
  else {
    int v7 = 1;
  }
  BOOL v8 = v3 == 0;
  if (v3) {
    char v9 = (void (__cdecl *)(sqlite3_context *))sub_24F8C2528;
  }
  else {
    char v9 = 0;
  }
  if (v8) {
    char v10 = 0;
  }
  else {
    char v10 = (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_24F8C23E0;
  }
  if (v8) {
    char v11 = (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_24F8C1ED0;
  }
  else {
    char v11 = 0;
  }
  uint64_t v12 = (const char *)(sub_24F8CEE30() + 32);
  swift_unknownObjectRetain();
  function_uint64_t v2 = sqlite3_create_function_v2(v5, v12, v6, v7, v4, v11, v10, v9, (void (__cdecl *)(void *))sub_24F8C19D8);
  swift_release();
  if (!function_v2) {
    return swift_unknownObjectRelease();
  }
  Database.lastErrorMessage.getter();
  if (!v15)
  {
    if (!sqlite3_errstr(function_v2)) {
      __break(1u);
    }
    sub_24F8CEED0();
  }
  sub_24F77ECAC();
  sub_24F777E70(0);
  sub_24F7DC6DC();
  if (sub_24F8CFCC0())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F77835C(0);
  }
  else
  {
    uint64_t v16 = swift_allocError();
    sub_24F77FA20(v16, v17, v18, v19, v20, v21, v22, v23, (uint64_t)xDestroy, v26, v27, function_v2, v24, v28, v29, v30);
  }
  swift_willThrow();
  uint64_t result = sub_24F773E20();
  __break(1u);
  return result;
}

uint64_t sub_24F8C1078(uint64_t a1)
{
  swift_beginAccess();
  int v3 = *(sqlite3 **)(a1 + 16);
  int v4 = *(_DWORD *)(v1 + 32);
  if (*(unsigned char *)(v1 + 36)) {
    int v5 = 2049;
  }
  else {
    int v5 = 1;
  }
  uint64_t v6 = sub_24F8CEE30();
  function_uint64_t v2 = sqlite3_create_function_v2(v3, (const char *)(v6 + 32), v4, v5, 0, 0, 0, 0, 0);
  uint64_t result = swift_release();
  if (function_v2)
  {
    Database.lastErrorMessage.getter();
    if (!v9)
    {
      if (!sqlite3_errstr(function_v2)) {
        __break(1u);
      }
      sub_24F8CEED0();
    }
    sub_24F77ECAC();
    sub_24F777E70(0);
    sub_24F7DC6DC();
    if (sub_24F8CFCC0())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F77835C(0);
    }
    else
    {
      uint64_t v10 = swift_allocError();
      sub_24F77FA20(v10, v11, v12, v13, v14, v15, v16, v17, (uint64_t)xDestroy, v20, v21, function_v2, v18, v22, v23, v24);
    }
    swift_willThrow();
    uint64_t result = sub_24F773E20();
    __break(1u);
  }
  return result;
}

uint64_t sub_24F8C11D0()
{
  return sub_24F8CFF60();
}

BOOL sub_24F8C1230(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  if (a1 == a4 && a2 == a5) {
    return a3 == a6;
  }
  char v9 = sub_24F8CFD00();
  BOOL result = 0;
  if (v9) {
    return a3 == a6;
  }
  return result;
}

uint64_t sub_24F8C1284()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8C12FC()
{
  return sub_24F8C1284();
}

uint64_t sub_24F8C1308()
{
  return sub_24F8C11D0();
}

uint64_t sub_24F8C1314()
{
  return sub_24F8CFF80();
}

BOOL sub_24F8C1384(uint64_t a1, uint64_t a2)
{
  return sub_24F8C1230(*(void *)a1, *(void *)(a1 + 8), *(_DWORD *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(_DWORD *)(a2 + 16));
}

uint64_t DatabaseFunction.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DatabaseFunction.init(_:argumentCount:pure:function:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  if ((a3 & 0x100000000) != 0) {
    int v9 = -1;
  }
  else {
    int v9 = a3;
  }
  *(_DWORD *)(v6 + 32) = v9;
  *(unsigned char *)(v6 + 36) = a4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a5;
  *(void *)(v10 + 24) = a6;
  *(void *)(v6 + 40) = sub_24F8C1800;
  *(void *)(v6 + 48) = v10;
  *(unsigned char *)(v6 + 56) = 0;
  return v6;
}

uint64_t sub_24F8C1444(int a1, sqlite3_value **a2, void (*a3)(void))
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (a1 < 0) {
    goto LABEL_26;
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!a1) {
    goto LABEL_24;
  }
  uint64_t v19 = a3;
  uint64_t v5 = a1;
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_24F781818();
  uint64_t v3 = v21;
  while (2)
  {
    if (!v5)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v6 = *a2;
    if (!*a2)
    {
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
    }
    double v7 = 0.0;
    unint64_t v8 = 0;
    char v9 = 4;
    switch(sqlite3_value_type(*a2))
    {
      case 1:
        double v7 = COERCE_DOUBLE(sqlite3_value_int64(v6));
        unint64_t v8 = 0;
        char v9 = 0;
        goto LABEL_20;
      case 2:
        unint64_t v8 = 0;
        double v7 = sqlite3_value_double(v6);
        char v9 = 1;
        goto LABEL_20;
      case 3:
        if (!sqlite3_value_text(v6)) {
          goto LABEL_28;
        }
        double v7 = COERCE_DOUBLE(sub_24F8CEEE0());
        unint64_t v8 = v15;
        char v9 = 2;
LABEL_20:
        uint64_t v21 = v3;
        unint64_t v16 = *(void *)(v3 + 16);
        if (v16 >= *(void *)(v3 + 24) >> 1)
        {
          sub_24F781818();
          uint64_t v3 = v21;
        }
        *(void *)(v3 + 16) = v16 + 1;
        uint64_t v17 = v3 + 24 * v16;
        *(double *)(v17 + 32) = v7;
        *(void *)(v17 + 40) = v8;
        *(unsigned char *)(v17 + 48) = v9;
        ++a2;
        if (--v5) {
          continue;
        }
        a3 = v19;
        break;
      case 4:
        uint64_t v10 = sqlite3_value_blob(v6);
        if (v10 && (uint64_t v11 = v10, (v12 = sqlite3_value_bytes(v6)) != 0))
        {
          uint64_t v13 = v12;
          if (v12 < 15)
          {
            *(void *)((char *)&__dst + 6) = 0;
            *(void *)&long long __dst = 0;
            BYTE14(__dst) = v12;
            memcpy(&__dst, v11, v12);
            double v7 = *(double *)&__dst;
            unint64_t v8 = DWORD2(__dst) | ((unint64_t)BYTE12(__dst) << 32) | ((unint64_t)BYTE13(__dst) << 40) | ((unint64_t)BYTE14(__dst) << 48);
          }
          else
          {
            sub_24F8CE6D0();
            swift_allocObject();
            if (v13 == 0x7FFFFFFF)
            {
              uint64_t v14 = sub_24F8CE690();
              sub_24F8CE8A0();
              double v7 = COERCE_DOUBLE(swift_allocObject());
              *(_OWORD *)(*(void *)&v7 + 16) = xmmword_24F8E6550;
              unint64_t v8 = v14 | 0x8000000000000000;
            }
            else
            {
              *(void *)&double v7 = v13 << 32;
              unint64_t v8 = sub_24F8CE690() | 0x4000000000000000;
            }
          }
          char v9 = 3;
        }
        else
        {
          double v7 = 0.0;
          char v9 = 3;
          unint64_t v8 = 0xC000000000000000;
        }
        goto LABEL_20;
      case 5:
        goto LABEL_20;
      default:
        *(void *)&long long __dst = 0;
        *((void *)&__dst + 1) = 0xE000000000000000;
        sub_24F8CF7D0();
        swift_bridgeObjectRelease();
        *(void *)&long long __dst = 0xD00000000000001ELL;
        *((void *)&__dst + 1) = 0x800000024F8D5500;
        sub_24F8CFAE0();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F8CF9D0();
        __break(1u);
        JUMPOUT(0x24F8C17B4);
    }
    break;
  }
LABEL_24:
  a3(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8C17C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24F8C1800(int a1, sqlite3_value **a2)
{
  return sub_24F8C1444(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t DatabaseFunction.__allocating_init<A>(_:argumentCount:pure:aggregate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_24F780248();
  uint64_t v10 = sub_24F77E4A4();
  DatabaseFunction.init<A>(_:argumentCount:pure:aggregate:)(v10, v11, v12, v13, v14, a6, a7);
  return v7;
}

uint64_t DatabaseFunction.init<A>(_:argumentCount:pure:aggregate:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  if ((a3 & 0x100000000) != 0) {
    int v10 = -1;
  }
  else {
    int v10 = a3;
  }
  *(_DWORD *)(v7 + 32) = v10;
  *(unsigned char *)(v7 + 36) = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a6;
  *(void *)(v11 + 24) = a7;
  *(void *)(v7 + 40) = sub_24F8C1958;
  *(void *)(v7 + 48) = v11;
  *(unsigned char *)(v7 + 56) = 1;
  return v7;
}

uint64_t sub_24F8C18F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  a3[3] = a1;
  a3[4] = a2;
  sub_24F76ADC4(a3);
  return v5(a1, a2);
}

uint64_t sub_24F8C1948()
{
  return swift_deallocObject();
}

uint64_t sub_24F8C1958@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F8C18F0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24F8C1960(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    type metadata accessor for DatabaseFunction.AggregateDefinition();
  }
  else {
    type metadata accessor for DatabaseFunction.FunctionDefinition();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_24F8C29A0();
  return v5;
}

uint64_t sub_24F8C19CC(uint64_t result)
{
  if (result) {
    return swift_unknownObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8C19E0()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return MEMORY[0x270FA0228](v0, 57, 7);
}

void *sub_24F8C1A18(sqlite3_context *a1, uint64_t a2, uint64_t a3)
{
  void (*v8)(void *__return_ptr, uint64_t, uint64_t);
  void v9[5];

  BOOL result = sqlite3_user_data(a1);
  if (result)
  {
    uint64_t v7 = result;
    type metadata accessor for DatabaseFunction();
    unint64_t v8 = (void (*)(void *__return_ptr, uint64_t, uint64_t))v7[2];
    swift_retain();
    v8(v9, a2, a3);
    sub_24F8C1B08((uint64_t)v9, a1);
    swift_release();
    return (void *)sub_24F7817A4((uint64_t)v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24F8C1B08(uint64_t a1, sqlite3_context *a2)
{
  sub_24F79089C(a1, (uint64_t)v17);
  uint64_t v3 = v18;
  if (v18)
  {
    uint64_t v4 = v19;
    sub_24F7811D0(v17, v18);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v15, v3, v4);
    uint64_t v5 = v15[0];
    unint64_t v6 = v15[1];
    uint64_t v7 = v16;
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v17);
    switch(v7)
    {
      case 1:
        sqlite3_result_double(a2, *(double *)&v5);
        break;
      case 2:
        if (qword_26B1F76D0 != -1) {
          swift_once();
        }
        unint64_t v8 = (void (__cdecl *)(void *))qword_26B1FAB20;
        uint64_t v9 = sub_24F8CEE30();
        sub_24F781F10(v5, v6, 2);
        sqlite3_result_text(a2, (const char *)(v9 + 32), -1, v8);
        swift_release();
        break;
      case 3:
        switch(v6 >> 62)
        {
          case 1uLL:
            if (v5 >> 32 < (int)v5)
            {
              __break(1u);
              JUMPOUT(0x24F8C1D6CLL);
            }
            swift_retain();
            sub_24F8C2C7C((int)v5, v5 >> 32, v6 & 0x3FFFFFFFFFFFFFFFLL, a2);
            sub_24F781F10(v5, v6, 3);
            goto LABEL_15;
          case 2uLL:
            uint64_t v13 = *(void *)(v5 + 16);
            uint64_t v14 = *(void *)(v5 + 24);
            swift_retain();
            swift_retain();
            sub_24F8C2C7C(v13, v14, v6 & 0x3FFFFFFFFFFFFFFFLL, a2);
            swift_release();
            swift_release();
LABEL_15:
            sub_24F781F10(v5, v6, 3);
            return;
          case 3uLL:
            uint64_t v12 = 0;
            uint64_t v11 = 0;
            uint64_t v10 = 0;
            goto LABEL_17;
          default:
            uint64_t v10 = BYTE6(v6);
            uint64_t v11 = v6 & 0xFFFFFFFFFFFFLL;
            uint64_t v12 = v5;
LABEL_17:
            sub_24F8C0D70(v12, v11, v10, a2);
            sub_24F781F10(v5, v6, 3);
            break;
        }
        break;
      case 4:
        goto LABEL_5;
      default:
        sqlite3_result_int64(a2, v5);
        break;
    }
  }
  else
  {
    sub_24F7817A4((uint64_t)v17);
LABEL_5:
    sqlite3_result_null(a2);
  }
}

uint64_t sub_24F8C1D90(void *a1, sqlite3_context *a2)
{
  id v3 = a1;
  sub_24F781274(&qword_26B1F7040);
  if (swift_dynamicCast())
  {
    if (v8)
    {
      uint64_t v4 = sub_24F8CEE30();
      sqlite3_result_error(a2, (const char *)(v4 + 32), -1);
      swift_release();
    }
    sqlite3_result_error_code(a2, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_24F77835C(v9);
  }
  else
  {
    sub_24F8CF920();
    uint64_t v6 = sub_24F8CEE30();
    swift_bridgeObjectRelease();
    sqlite3_result_error(a2, (const char *)(v6 + 32), -1);
    return swift_release();
  }
}

uint64_t sub_24F8C1ED4(sqlite3_context *a1, int a2, sqlite3_value **a3)
{
  LODWORD(v4) = a2;
  uint64_t v26 = *MEMORY[0x263EF8340];
  type metadata accessor for DatabaseFunction();
  uint64_t v6 = sub_24F8C2300(a1);
  swift_retain();
  if ((v4 & 0x80000000) != 0) {
    goto LABEL_26;
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v4) {
    goto LABEL_24;
  }
  long long v23 = v6;
  uint64_t v4 = (int)v4;
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_24F781818();
  uint64_t v7 = v24;
  while (2)
  {
    if (!v4)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v8 = *a3;
    if (!*a3)
    {
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
    }
    double v9 = 0.0;
    unint64_t v10 = 0;
    char v11 = 4;
    switch(sqlite3_value_type(*a3))
    {
      case 1:
        double v9 = COERCE_DOUBLE(sqlite3_value_int64(v8));
        unint64_t v10 = 0;
        char v11 = 0;
        goto LABEL_20;
      case 2:
        unint64_t v10 = 0;
        double v9 = sqlite3_value_double(v8);
        char v11 = 1;
        goto LABEL_20;
      case 3:
        if (!sqlite3_value_text(v8)) {
          goto LABEL_28;
        }
        double v9 = COERCE_DOUBLE(sub_24F8CEEE0());
        unint64_t v10 = v17;
        char v11 = 2;
LABEL_20:
        unint64_t v18 = *(void *)(v24 + 16);
        if (v18 >= *(void *)(v24 + 24) >> 1) {
          sub_24F781818();
        }
        *(void *)(v24 + 16) = v18 + 1;
        uint64_t v19 = v24 + 24 * v18;
        *(double *)(v19 + 32) = v9;
        *(void *)(v19 + 40) = v10;
        *(unsigned char *)(v19 + 48) = v11;
        ++a3;
        if (--v4) {
          continue;
        }
        uint64_t v6 = v23;
        break;
      case 4:
        uint64_t v12 = sqlite3_value_blob(v8);
        if (v12 && (uint64_t v13 = v12, (v14 = sqlite3_value_bytes(v8)) != 0))
        {
          uint64_t v15 = v14;
          if (v14 < 15)
          {
            *(void *)((char *)&__dst + 6) = 0;
            *(void *)&long long __dst = 0;
            BYTE14(__dst) = v14;
            memcpy(&__dst, v13, v14);
            double v9 = *(double *)&__dst;
            unint64_t v10 = DWORD2(__dst) | ((unint64_t)BYTE12(__dst) << 32) | ((unint64_t)BYTE13(__dst) << 40) | ((unint64_t)BYTE14(__dst) << 48);
          }
          else
          {
            sub_24F8CE6D0();
            swift_allocObject();
            if (v15 == 0x7FFFFFFF)
            {
              uint64_t v16 = sub_24F8CE690();
              sub_24F8CE8A0();
              double v9 = COERCE_DOUBLE(swift_allocObject());
              *(_OWORD *)(*(void *)&v9 + 16) = xmmword_24F8E6550;
              unint64_t v10 = v16 | 0x8000000000000000;
            }
            else
            {
              *(void *)&double v9 = v15 << 32;
              unint64_t v10 = sub_24F8CE690() | 0x4000000000000000;
            }
          }
          char v11 = 3;
        }
        else
        {
          double v9 = 0.0;
          char v11 = 3;
          unint64_t v10 = 0xC000000000000000;
        }
        goto LABEL_20;
      case 5:
        goto LABEL_20;
      default:
        *(void *)&long long __dst = 0;
        *((void *)&__dst + 1) = 0xE000000000000000;
        sub_24F8CF7D0();
        swift_bridgeObjectRelease();
        *(void *)&long long __dst = 0xD00000000000001ELL;
        *((void *)&__dst + 1) = 0x800000024F8D5500;
        sub_24F8CFAE0();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F8CF9D0();
        __break(1u);
        JUMPOUT(0x24F8C22ECLL);
    }
    break;
  }
LABEL_24:
  swift_beginAccess();
  uint64_t v20 = v6[5];
  uint64_t v21 = v6[6];
  sub_24F798FB4((uint64_t)(v6 + 2), v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v7, v20, v21);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t *sub_24F8C2300(sqlite3_context *a1)
{
  void (*v7)(void *__return_ptr, uint64_t);
  uint64_t v8;
  long long v9[2];
  void v10[5];

  BOOL result = (uint64_t *)sqlite3_aggregate_context(a1, 8);
  if (result)
  {
    id v3 = result;
    if (*(unsigned char *)result) {
      return (uint64_t *)*result;
    }
    uint64_t v4 = 1;
    while (v4 != 8)
    {
      if (*((unsigned __int8 *)result + v4++)) {
        return (uint64_t *)*result;
      }
    }
    BOOL result = (uint64_t *)sqlite3_user_data(a1);
    if (result)
    {
      uint64_t v7 = (void (*)(void *__return_ptr, uint64_t))result[2];
      uint64_t v8 = swift_retain();
      v7(v10, v8);
      swift_release();
      sub_24F775458((uint64_t)v10, (uint64_t)v9);
      type metadata accessor for DatabaseFunction.AggregateContext();
      uint64_t v6 = swift_allocObject();
      *(unsigned char *)(v6 + 56) = 0;
      sub_24F794DE0(v9, v6 + 16);
      *id v3 = v6;
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v10);
      return (uint64_t *)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24F8C23E4(sqlite3_context *a1)
{
  type metadata accessor for DatabaseFunction();
  uint64_t v2 = sub_24F8C2300(a1);
  if (v2[7])
  {
    return swift_release();
  }
  else
  {
    swift_beginAccess();
    sub_24F775458((uint64_t)(v2 + 2), (uint64_t)v7);
    uint64_t v4 = v8;
    uint64_t v5 = v9;
    sub_24F7811D0(v7, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 24))(v6, v4, v5);
    sub_24F8C1B08((uint64_t)v6, a1);
    swift_release();
    sub_24F7817A4((uint64_t)v6);
    return _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v7);
  }
}

void sub_24F8C252C(void *a1, uint64_t a2, sqlite3_context *a3)
{
  if (a1) {
    uint64_t v5 = a2 - (void)a1;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v5 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v3 = a3;
  uint64_t v4 = a1;
  if (qword_26B1F76D0 != -1) {
LABEL_10:
  }
    swift_once();
  sqlite3_result_blob(v3, v4, v5, (void (__cdecl *)(void *))qword_26B1FAB20);
}

uint64_t DatabaseFunction.deinit()
{
  swift_bridgeObjectRelease();
  sub_24F8C2600();
  return v0;
}

uint64_t sub_24F8C2600()
{
  return swift_release();
}

uint64_t DatabaseFunction.__deallocating_deinit()
{
  DatabaseFunction.deinit();
  return MEMORY[0x270FA0228](v0, 57, 7);
}

uint64_t DatabaseFunction.hashValue.getter()
{
  return sub_24F8CFF80();
}

uint64_t sub_24F8C267C()
{
  return DatabaseFunction.hashValue.getter();
}

uint64_t sub_24F8C26A0()
{
  return DatabaseFunction.hash(into:)();
}

uint64_t DatabaseFunction.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24F8CEE50();
  sub_24F8CFF60();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F8C272C()
{
  return sub_24F8CFF80();
}

BOOL sub_24F8C276C(uint64_t *a1, uint64_t *a2)
{
  return static DatabaseFunction.== infix(_:_:)(*a1, *a2);
}

BOOL static DatabaseFunction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 32);
  int v3 = *(_DWORD *)(a2 + 32);
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return v2 == v3;
  }
  char v5 = sub_24F8CFD00();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

unint64_t sub_24F8C27F4()
{
  unint64_t result = qword_26B1F7DA0;
  if (!qword_26B1F7DA0)
  {
    type metadata accessor for DatabaseFunction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1F7DA0);
  }
  return result;
}

uint64_t type metadata accessor for DatabaseFunction()
{
  return self;
}

uint64_t method lookup function for DatabaseFunction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DatabaseFunction);
}

uint64_t dispatch thunk of DatabaseFunction.__allocating_init(_:argumentCount:pure:function:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v3 + 104))(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32));
}

uint64_t dispatch thunk of DatabaseFunction.__allocating_init<A>(_:argumentCount:pure:aggregate:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v3 + 112))(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32));
}

uint64_t type metadata accessor for DatabaseFunction.FunctionDefinition()
{
  return self;
}

uint64_t type metadata accessor for DatabaseFunction.AggregateDefinition()
{
  return self;
}

uint64_t type metadata accessor for DatabaseFunction.AggregateContext()
{
  return self;
}

uint64_t dispatch thunk of DatabaseAggregate.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DatabaseAggregate.step(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DatabaseAggregate.finalize()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_24F8C29A0()
{
  return swift_retain();
}

uint64_t destroy for DatabaseFunction.Kind()
{
  return sub_24F8C2600();
}

uint64_t _s12GRDBInternal16DatabaseFunctionC4KindOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24F8C29A0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DatabaseFunction.Kind(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24F8C29A0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24F8C2600();
  return a1;
}

uint64_t assignWithTake for DatabaseFunction.Kind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24F8C2600();
  return a1;
}

ValueMetadata *type metadata accessor for DatabaseFunction.Kind()
{
  return &type metadata for DatabaseFunction.Kind;
}

uint64_t sub_24F8C2AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DatabaseFunction.Identity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for DatabaseFunction.Identity(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DatabaseFunction.Identity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseFunction.Identity(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 20))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseFunction.Identity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseFunction.Identity()
{
  return &type metadata for DatabaseFunction.Identity;
}

unint64_t sub_24F8C2C30()
{
  unint64_t result = qword_269A2C580;
  if (!qword_269A2C580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C580);
  }
  return result;
}

void sub_24F8C2C7C(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_context *a4)
{
  uint64_t v7 = (char *)sub_24F8CE6A0();
  if (v7)
  {
    uint64_t v8 = sub_24F8CE6C0();
    if (__OFSUB__(a1, v8))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v7 += a1 - v8;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = sub_24F8CE6B0();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = &v7[v12];
  if (v7) {
    uint64_t v14 = (uint64_t)v13;
  }
  else {
    uint64_t v14 = 0;
  }
  sub_24F8C252C(v7, v14, a4);
}

uint64_t static ValueObservationScheduler.async(onQueue:)(void *a1)
{
  unint64_t v6 = sub_24F783524();
  uint64_t v7 = &off_270106348;
  *(void *)&long long v5 = a1;
  type metadata accessor for ValueObservationScheduler();
  uint64_t v2 = swift_allocObject();
  sub_24F794DE0(&v5, v2 + 16);
  id v3 = a1;
  return v2;
}

uint64_t type metadata accessor for ValueObservationScheduler()
{
  return self;
}

uint64_t sub_24F8C2DAC()
{
  id v3 = &type metadata for ImmediateImpl;
  uint64_t v4 = &off_2700FF070;
  type metadata accessor for ValueObservationScheduler();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_24F794DE0(&v2, v0 + 16);
  qword_269A2C588 = v0;
  return result;
}

uint64_t static ValueObservationScheduler.immediate.getter()
{
  if (qword_269A2A380 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_24F8C2E68(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  sub_24F7811D0(v2 + 2, v5);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6)) {
    return a1();
  }
  uint64_t v9 = v2[5];
  uint64_t v8 = v2[6];
  sub_24F7811D0(v2 + 2, v9);
  return (*(uint64_t (**)(uint64_t (*)(void), uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, v9, v8);
}

uint64_t ValueObservationScheduler.deinit()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return v0;
}

uint64_t ValueObservationScheduler.__deallocating_deinit()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t sub_24F8C2F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F8CEBD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24F8CEC00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F783524();
  uint64_t v12 = (void *)sub_24F8CF540();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24F8363BC;
  aBlock[3] = &unk_2701084B0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24F8CEBE0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24F768BC4();
  sub_24F781274(&qword_26B1F7960);
  sub_24F768B70();
  sub_24F8CF6D0();
  MEMORY[0x253363DC0](0, v11, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24F8C31DC()
{
  if (objc_msgSend(self, sel_isMainThread)) {
    return 1;
  }
  uint64_t result = sub_24F8CF9D0();
  __break(1u);
  return result;
}

uint64_t sub_24F8C326C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F8CEBD0();
  sub_24F770DF4();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24F8CEC00();
  sub_24F770DF4();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24F8363BC;
  aBlock[3] = &unk_2701083E8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_24F8CEBE0();
  v18[1] = MEMORY[0x263F8EE78];
  sub_24F768BC4();
  sub_24F781274(&qword_26B1F7960);
  sub_24F768B70();
  sub_24F8CF6D0();
  MEMORY[0x253363DC0](0, v15, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  return swift_release();
}

uint64_t sub_24F8C3460(uint64_t a1, uint64_t a2)
{
  return sub_24F8C326C(a1, a2);
}

uint64_t method lookup function for ValueObservationScheduler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ValueObservationScheduler);
}

uint64_t sub_24F8C349C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24F8C34AC()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for ImmediateImpl()
{
  return &type metadata for ImmediateImpl;
}

uint64_t sub_24F8C34CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_24F795568();
    uint64_t v5 = v16;
    uint64_t v6 = (unsigned char *)(a1 + 48);
    do
    {
      uint64_t v8 = *((void *)v6 - 2);
      uint64_t v7 = *((void *)v6 - 1);
      char v9 = *v6;
      if (*v6)
      {
        uint64_t v10 = (void *)(*((void *)v6 - 1) & 1);
        sub_24F808C90(*((void *)v6 - 2), *((void *)v6 - 1), 1);
        sub_24F808C90(v8, v7, 1);
        swift_retain();
        uint64_t v11 = (void *(*)())sub_24F8C34CC(v8, a2, v15);
        sub_24F808CA0(v8, v7, 1);
        sub_24F808CA0(v8, v7, 1);
      }
      else
      {
        uint64_t v10 = (void *)swift_allocObject();
        void v10[2] = sub_24F8CD458;
        void v10[3] = a2;
        v10[4] = v8;
        _OWORD v10[5] = v7;
        sub_24F808C90(v8, v7, 0);
        swift_retain();
        uint64_t v11 = sub_24F8CD478;
      }
      uint64_t v16 = v5;
      unint64_t v12 = *(void *)(v5 + 16);
      if (v12 >= *(void *)(v5 + 24) >> 1)
      {
        sub_24F795568();
        uint64_t v5 = v16;
      }
      v6 += 24;
      *(void *)(v5 + 16) = v12 + 1;
      uint64_t v13 = v5 + 24 * v12;
      *(void *)(v13 + 32) = v11;
      *(void *)(v13 + 40) = v10;
      *(unsigned char *)(v13 + 48) = v9;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v5;
}

void sub_24F8C36A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unsigned char *))
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    if (*(void *)(a2 + 16))
    {
      uint64_t v8 = v26;
      char v9 = (uint64_t *)(a1 + 40);
      while (1)
      {
        uint64_t v10 = *(v9 - 1);
        uint64_t v11 = *v9;
        swift_bridgeObjectRetain_n();
        unint64_t v12 = sub_24F782950();
        if ((v13 & 1) == 0) {
          break;
        }
        memcpy(__dst, (const void *)(*(void *)(a2 + 56) + 176 * v12), 0xABuLL);
        sub_24F7ADA50((uint64_t)__dst);
        swift_bridgeObjectRelease();
        __src[0] = v10;
        __src[1] = v11;
        memcpy(&__src[2], __dst, 0xABuLL);
        memcpy(v23, __src, 0xBBuLL);
        swift_bridgeObjectRetain();
        sub_24F7ADA50((uint64_t)__dst);
        sub_24F7AD964((uint64_t)__src);
        uint64_t v14 = a3(v10, v11, &v23[16]);
        if (v4)
        {
          sub_24F7AD964((uint64_t)__src);
          swift_release();
          return;
        }
        uint64_t v16 = v14;
        uint64_t v17 = v15;
        uint64_t v18 = a2;
        sub_24F7AD964((uint64_t)__src);
        uint64_t v26 = v8;
        unint64_t v19 = *(void *)(v8 + 16);
        if (v19 >= *(void *)(v8 + 24) >> 1)
        {
          sub_24F77C4AC();
          uint64_t v8 = v26;
        }
        *(void *)(v8 + 16) = v19 + 1;
        uint64_t v20 = v8 + 16 * v19;
        *(void *)(v20 + 32) = v16;
        *(void *)(v20 + 40) = v17;
        if (!--v5) {
          return;
        }
        v9 += 2;
        a2 = v18;
        uint64_t v21 = *(void *)(v18 + 16);
        uint64_t v4 = 0;
        if (!v21) {
          goto LABEL_14;
        }
      }
      __break(1u);
    }
LABEL_14:
    __break(1u);
  }
}

unint64_t sub_24F8C3890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    unint64_t result = sub_24F7955F0(0, v4, 0);
    if (*(void *)(a3 + 16))
    {
      uint64_t v5 = v13;
      uint64_t v8 = a1 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        unint64_t result = sub_24F782950();
        if ((v9 & 1) == 0) {
          break;
        }
        memcpy(__dst, (const void *)(*(void *)(a3 + 56) + 176 * result), 0xABuLL);
        sub_24F7ADA50((uint64_t)__dst);
        swift_bridgeObjectRelease();
        uint64_t v13 = v5;
        unint64_t v11 = *(void *)(v5 + 16);
        unint64_t v10 = *(void *)(v5 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_24F7955F0(v10 > 1, v11 + 1, 1);
          uint64_t v5 = v13;
        }
        *(void *)(v5 + 16) = v11 + 1;
        unint64_t result = (unint64_t)memcpy((void *)(v5 + 176 * v11 + 32), __dst, 0xABuLL);
        if (!--v4) {
          goto LABEL_10;
        }
        v8 += 16;
        if (!*(void *)(a3 + 16)) {
          goto LABEL_12;
        }
      }
      __break(1u);
    }
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_24F8C39F0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_24F795698();
    uint64_t v5 = v13;
    uint64_t v6 = (char *)(a1 + 32);
    for (uint64_t i = v3 - 1; ; --i)
    {
      memcpy(__dst, v6, 0xA3uLL);
      memcpy(v10, v6, sizeof(v10));
      sub_24F8CCD38(__dst);
      sub_24F814C38(a2, __src);
      sub_24F8CCD38(__dst);
      uint64_t v13 = v5;
      unint64_t v8 = *(void *)(v5 + 16);
      if (v8 >= *(void *)(v5 + 24) >> 1)
      {
        sub_24F795698();
        uint64_t v5 = v13;
      }
      *(void *)(v5 + 16) = v8 + 1;
      memcpy((void *)(v5 + 168 * v8 + 32), __src, 0xA3uLL);
      if (!i) {
        break;
      }
      v6 += 168;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v5;
}

uint64_t sub_24F8C3B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v6 = v19;
    uint64_t v7 = (char *)(a1 + 32);
    uint64_t v8 = v4 - 1;
    for (uint64_t i = a2; ; a2 = i)
    {
      memcpy(__dst, v7, 0xA3uLL);
      memcpy(v17, v7, sizeof(v17));
      sub_24F8CCD38(__dst);
      uint64_t v9 = sub_24F76D734(a2, 0);
      if (v2)
      {
        sub_24F8CCD38(__dst);
        swift_release();
        swift_release();
        return v6;
      }
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      sub_24F8CCD38(__dst);
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      if (v13 >= *(void *)(v6 + 24) >> 1)
      {
        sub_24F77C4AC();
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v12;
      if (!v8) {
        break;
      }
      v7 += 168;
      --v8;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v6;
}

uint64_t sub_24F8C3D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_24F77C4AC();
    uint64_t v6 = v19;
    uint64_t v7 = (char *)(a1 + 32);
    uint64_t v8 = v4 - 1;
    for (uint64_t i = a2; ; a2 = i)
    {
      memcpy(__dst, v7, 0xB8uLL);
      memcpy(v17, v7, sizeof(v17));
      sub_24F8CCDAC(__dst);
      uint64_t v9 = sub_24F7A3AC8(a2);
      if (v2)
      {
        sub_24F8CCDAC(__dst);
        swift_release();
        swift_release();
        return v6;
      }
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      sub_24F8CCDAC(__dst);
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      if (v13 >= *(void *)(v6 + 24) >> 1)
      {
        sub_24F77C4AC();
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v12;
      if (!v8) {
        break;
      }
      v7 += 184;
      --v8;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v6;
}

uint64_t sub_24F8C3EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    sub_24F77C23C(MEMORY[0x263F8EE78]);
    uint64_t v6 = v19;
    uint64_t v7 = a1 + 32;
    uint64_t v8 = v4 - 1;
    for (uint64_t i = a2; ; a2 = i)
    {
      sub_24F771060(v18);
      sub_24F771060(v17);
      sub_24F8CCD38(v18);
      uint64_t v9 = sub_24F880F70(a2);
      if (v2)
      {
        sub_24F8CCD38(v18);
        swift_release();
        swift_release();
        return v6;
      }
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      sub_24F8CCD38(v18);
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      if (v13 >= *(void *)(v6 + 24) >> 1)
      {
        sub_24F77C4AC();
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v12;
      if (!v8) {
        break;
      }
      v7 += 168;
      --v8;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v6;
}

void sub_24F8C4038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_24F76FF94();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v11 + 16);
  if (v14)
  {
    uint64_t v15 = v11;
    sub_24F77C23C(MEMORY[0x263F8EE78]);
    uint64_t v16 = v15 + 72;
    uint64_t v17 = v14 - 1;
    while (1)
    {
      uint64_t v19 = *(void *)(v16 - 16);
      uint64_t v18 = *(void *)(v16 - 8);
      sub_24F7811D0((void *)(v16 - 40), v19);
      (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(v18 + 8) + 8) + 8))(__src, v19);
      memcpy(v37, __src, 0xA3uLL);
      memcpy(__dst, __src, sizeof(__dst));
      uint64_t v20 = sub_24F78173C(v13);
      if (v10)
      {
        sub_24F8CCD38(v37);
        swift_release();
        swift_release();
        goto LABEL_13;
      }
      uint64_t v22 = v20;
      uint64_t v23 = v21;
      uint64_t v31 = v17;
      sub_24F8CCD38(v37);
      uint64_t v32 = v22;
      uint64_t v33 = v23;
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      uint64_t v24 = v32;
      uint64_t v25 = v33;
      sub_24F771060(v34);
      sub_24F771060(&v32);
      sub_24F8CCD38(v34);
      uint64_t v26 = v13;
      sub_24F78173C(v13);
      sub_24F8CCD38(v34);
      uint64_t v32 = v24;
      uint64_t v33 = v25;
      swift_bridgeObjectRetain();
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v32;
      uint64_t v28 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24F77C4AC();
      }
      unint64_t v29 = *(void *)(a10 + 16);
      if (v29 >= *(void *)(a10 + 24) >> 1) {
        sub_24F77C4AC();
      }
      *(void *)(a10 + 16) = v29 + 1;
      uint64_t v30 = a10 + 16 * v29;
      *(void *)(v30 + 32) = v27;
      *(void *)(v30 + 40) = v28;
      if (!v31) {
        break;
      }
      v16 += 208;
      uint64_t v17 = v31 - 1;
      uint64_t v13 = v26;
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
LABEL_13:
  sub_24F77BC10();
}

uint64_t sub_24F8C42FC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_24F795850();
    uint64_t v7 = v27;
    uint64_t v8 = (char *)(a1 + 32);
    uint64_t v20 = a2;
    uint64_t v9 = (void *)a2[2];
    for (uint64_t i = v5 - 1; ; --i)
    {
      memcpy(__dst, v8, sizeof(__dst));
      sub_24F7997BC((uint64_t)__dst, (uint64_t)v26);
      switch(sub_24F799818((uint64_t)v26))
      {
        case 1u:
          uint64_t v11 = (const void *)sub_24F799910((uint64_t)v26);
          memcpy(v23, v11, 0xA3uLL);
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F814C38(v9, __src);
          sub_24F8CCDAC((__n128 *)__dst);
          memcpy(v23, __src, 0xA3uLL);
          sub_24F799920(v23);
          sub_24F7997BC((uint64_t)v23, (uint64_t)v24);
          break;
        case 2u:
          uint64_t v12 = (__n128 *)sub_24F799910((uint64_t)v26);
          uint64_t v13 = v3;
          unint64_t v15 = v12[10].n128_u64[1];
          unint64_t v14 = v12[11].n128_u64[0];
          memcpy(v23, v12, 0xA3uLL);
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F814C38(v9, v21);
          sub_24F8CCD38(v12);
          sub_24F8CCDAC((__n128 *)__dst);
          memcpy(__src, v21, 0xA8uLL);
          void __src[21] = v15;
          void __src[22] = v14;
          uint64_t v3 = v13;
          sub_24F7998DC(__src);
          goto LABEL_8;
        case 3u:
          sub_24F799910((uint64_t)v26);
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F8CCDAC((__n128 *)__dst);
          swift_retain();
          sub_24F8511E4();
          uint64_t v17 = v16;
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F8CCDAC((__n128 *)__dst);
          __src[0] = v17;
          sub_24F799834(__src);
LABEL_8:
          sub_24F7997BC((uint64_t)__src, (uint64_t)v23);
          goto LABEL_10;
        case 4u:
          __src[0] = v9;
          sub_24F799954(__src);
          sub_24F7997BC((uint64_t)__src, (uint64_t)v23);
          swift_retain();
          sub_24F8CCDAC((__n128 *)__dst);
LABEL_10:
          memcpy(v24, v23, sizeof(v24));
          break;
        default:
          sub_24F799910((uint64_t)v26);
          sub_24F7997BC((uint64_t)__dst, (uint64_t)v23);
          sub_24F799910((uint64_t)v23);
          memcpy(v24, __dst, sizeof(v24));
          swift_retain();
          break;
      }
      uint64_t v27 = v7;
      unint64_t v18 = *(void *)(v7 + 16);
      if (v18 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F795850();
        uint64_t v7 = v27;
      }
      *(void *)(v7 + 16) = v18 + 1;
      memcpy((void *)(v7 + 184 * v18 + 32), v24, 0xB8uLL);
      if (!i) {
        break;
      }
      v8 += 184;
    }
    sub_24F8CBAD0(v20);
  }
  else
  {
    sub_24F8CBAD0(a2);
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

uint64_t sub_24F8C46DC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_24F795850();
    uint64_t v7 = v25;
    uint64_t v8 = (char *)(a1 + 32);
    for (uint64_t i = v5 - 1; ; --i)
    {
      memcpy(__dst, v8, sizeof(__dst));
      sub_24F7997BC((uint64_t)__dst, (uint64_t)v24);
      switch(sub_24F799818((uint64_t)v24))
      {
        case 1u:
          uint64_t v10 = (const void *)sub_24F799910((uint64_t)v24);
          memcpy(v21, v10, 0xA3uLL);
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F814C38(a2, __src);
          sub_24F8CCDAC((__n128 *)__dst);
          memcpy(v21, __src, 0xA3uLL);
          sub_24F799920(v21);
          sub_24F7997BC((uint64_t)v21, (uint64_t)v22);
          break;
        case 2u:
          uint64_t v11 = (__n128 *)sub_24F799910((uint64_t)v24);
          uint64_t v12 = v3;
          unint64_t v14 = v11[10].n128_u64[1];
          unint64_t v13 = v11[11].n128_u64[0];
          memcpy(v21, v11, 0xA3uLL);
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F814C38(a2, v19);
          sub_24F8CCD38(v11);
          sub_24F8CCDAC((__n128 *)__dst);
          memcpy(__src, v19, 0xA8uLL);
          void __src[21] = v14;
          void __src[22] = v13;
          uint64_t v3 = v12;
          sub_24F7998DC(__src);
          goto LABEL_8;
        case 3u:
          sub_24F799910((uint64_t)v24);
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F8CCDAC((__n128 *)__dst);
          swift_retain();
          sub_24F8511E4();
          uint64_t v16 = v15;
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F8CCDAC((__n128 *)__dst);
          __src[0] = v16;
          sub_24F799834(__src);
LABEL_8:
          sub_24F7997BC((uint64_t)__src, (uint64_t)v21);
          goto LABEL_10;
        case 4u:
          __src[0] = a2;
          sub_24F799954(__src);
          sub_24F7997BC((uint64_t)__src, (uint64_t)v21);
          swift_retain();
          sub_24F8CCDAC((__n128 *)__dst);
LABEL_10:
          memcpy(v22, v21, sizeof(v22));
          break;
        default:
          sub_24F799910((uint64_t)v24);
          sub_24F7997BC((uint64_t)__dst, (uint64_t)v21);
          sub_24F799910((uint64_t)v21);
          memcpy(v22, __dst, sizeof(v22));
          swift_retain();
          break;
      }
      uint64_t v25 = v7;
      unint64_t v17 = *(void *)(v7 + 16);
      if (v17 >= *(void *)(v7 + 24) >> 1)
      {
        sub_24F795850();
        uint64_t v7 = v25;
      }
      *(void *)(v7 + 16) = v17 + 1;
      memcpy((void *)(v7 + 184 * v17 + 32), v22, 0xB8uLL);
      if (!i) {
        break;
      }
      v8 += 184;
    }
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

void sub_24F8C4AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_24F796174();
    if (*(void *)(a3 + 16))
    {
      uint64_t v6 = v12;
      uint64_t v7 = a1 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        unint64_t v8 = sub_24F782950();
        if ((v9 & 1) == 0) {
          break;
        }
        memcpy(__dst, (const void *)(*(void *)(a3 + 56) + 216 * v8), 0xD8uLL);
        sub_24F8CC9B4((uint64_t)__dst);
        swift_bridgeObjectRelease();
        uint64_t v12 = v6;
        unint64_t v10 = *(void *)(v6 + 16);
        if (v10 >= *(void *)(v6 + 24) >> 1)
        {
          sub_24F796174();
          uint64_t v6 = v12;
        }
        *(void *)(v6 + 16) = v10 + 1;
        memcpy((void *)(v6 + 216 * v10 + 32), __dst, 0xD8uLL);
        if (!--v4) {
          goto LABEL_10;
        }
        v7 += 16;
        if (!*(void *)(a3 + 16)) {
          goto LABEL_12;
        }
      }
      __break(1u);
    }
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_24F8C4C14()
{
  sub_24F76FF94();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_24F795698();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    for (uint64_t i = v2 - 1; ; --i)
    {
      sub_24F771060(v8);
      sub_24F771060(v6);
      sub_24F8CCD38(v8);
      swift_getAtKeyPath();
      sub_24F8CCD38(v8);
      memcpy(v9, __src, sizeof(v9));
      unint64_t v5 = *(void *)(v10 + 16);
      if (v5 >= *(void *)(v10 + 24) >> 1) {
        sub_24F795698();
      }
      *(void *)(v10 + 16) = v5 + 1;
      memcpy((void *)(v10 + 168 * v5 + 32), v9, 0xA3uLL);
      if (!i) {
        break;
      }
      v3 += 168;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F77BC10();
}

void sub_24F8C4D78()
{
  sub_24F76FF94();
  uint64_t v3 = v2;
  char v4 = sub_24F8C862C(v2);
  if (v1) {
    goto LABEL_7;
  }
  if (!v4)
  {
    memcpy(__dst, v0, sizeof(__dst));
    if (!*(void *)(__dst[10] + 16))
    {
      swift_retain();
      sub_24F8C7A0C();
      type metadata accessor for StatementArgumentsSink();
      sub_24F7859BC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24F778A30(0);
      type metadata accessor for SQLGenerationContext();
      swift_allocObject();
      uint64_t v5 = sub_24F8CE464();
      unint64_t v8 = sub_24F779224(v5, v6, v7);
      uint64_t v22 = sub_24F8C7C1C();
      uint64_t v23 = v9;
      sub_24F77DC3C();
      strcpy(__src, "DELETE FROM ");
      _OWORD __src[13] = 0;
      *(_WORD *)&__src[14] = -5120;
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      sub_24F77B788();
      swift_bridgeObjectRelease();
      sub_24F77A91C((uint64_t)&__dst[6], (uint64_t)v26, &qword_26B1F7360);
      sub_24F77A91C((uint64_t)v26, (uint64_t)v27, &qword_26B1F7360);
      if (v27[0])
      {
        uint64_t v10 = sub_24F782D18();
        v11(v10);
        memcpy(v20, __src, 0xA3uLL);
        sub_24F77EFB8();
        memcpy(v19, v20, sizeof(v19));
        sub_24F78173C((uint64_t)v8);
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F8CCD38(v20);
      }
      sub_24F77A91C((uint64_t)&__dst[16], (uint64_t)&v25, &qword_26B1F5A60);
      sub_24F77D91C();
      if ((v29 & 1) == 0)
      {
        uint64_t v13 = v27[2];
        uint64_t v14 = v27[3];
        char v15 = v28;
        sub_24F8C7F2C();
        sub_24F77C934();
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        if (*(void *)(v17 + 16))
        {
          sub_24F780274();
          swift_retain();
          uint64_t v18 = sub_24F8C3EB4(v17, (uint64_t)v8);
          swift_bridgeObjectRelease();
          *(void *)__src = v18;
          sub_24F781274(&qword_26B1F7F48);
          sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
          sub_24F8CED30();
          swift_bridgeObjectRelease();
          sub_24F8CEEB0();
        }
        swift_bridgeObjectRelease();
        sub_24F80388C(v13, v14, v15);
        sub_24F77B138();
        swift_bridgeObjectRelease();
        sub_24F77B788();
        swift_bridgeObjectRelease();
      }
      sub_24F77BEF0();
      swift_bridgeObjectRelease();
      sub_24F778A9C(__src);
      v20[0] = *(__n128 *)__src;
      Statement.arguments.setter(v20, v12);
      swift_release();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    sub_24F8C8910(v3);
LABEL_7:
    sub_24F77BC10();
    return;
  }
  sub_24F770EAC();
  sub_24F780A58();
  __break(1u);
}

void sub_24F8C51D4()
{
  sub_24F76FF94();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = *v6;
  char v8 = sub_24F8C862C(v4);
  if (v1) {
    goto LABEL_8;
  }
  if (v8)
  {
    if (v8 != 1)
    {
      sub_24F770EAC();
      sub_24F780A58();
      __break(1u);
      JUMPOUT(0x24F8C5830);
    }
    goto LABEL_7;
  }
  memcpy(__dst, v0, sizeof(__dst));
  if (*(void *)(__dst[10] + 16))
  {
LABEL_7:
    __src[0] = v7;
    sub_24F8C9010(v5, __src, v3);
    goto LABEL_8;
  }
  if (*(void *)(v3 + 16))
  {
    swift_retain();
    sub_24F8C7A0C();
    type metadata accessor for StatementArgumentsSink();
    sub_24F7859BC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F778A30(0);
    type metadata accessor for SQLGenerationContext();
    swift_allocObject();
    uint64_t v9 = sub_24F8CE464();
    uint64_t v12 = sub_24F779224(v9, v10, v11);
    uint64_t v36 = sub_24F8C7C1C();
    uint64_t v37 = v13;
    sub_24F8CEEB0();
    switch(v7)
    {
      case 1:
        goto LABEL_14;
      default:
        char v14 = sub_24F8CFD00();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          *(void *)__src = 2118223;
          *(void *)&__src[8] = 0xE300000000000000;
          switch(v7)
          {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
              sub_24F8CEEB0();
              swift_bridgeObjectRelease();
              sub_24F8CEEB0();
              sub_24F8CEEB0();
              break;
            default:
              JUMPOUT(0);
          }
LABEL_14:
          swift_bridgeObjectRelease();
        }
        sub_24F77DC3C();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        swift_retain();
        sub_24F8C4038(v3, (uint64_t)v12, v15, v16, v17, v18, v19, v20, v30, v31);
        *(void *)__src = v21;
        sub_24F781274(&qword_26B1F7F48);
        sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
        sub_24F775EF0();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
        sub_24F77A91C((uint64_t)&__dst[6], (uint64_t)v40, &qword_26B1F7360);
        sub_24F77A91C((uint64_t)v40, (uint64_t)v41, &qword_26B1F7360);
        if (v41[0])
        {
          uint64_t v22 = sub_24F782D18();
          v23(v22);
          memcpy(v34, __src, 0xA3uLL);
          sub_24F77EFB8();
          memcpy(v33, v34, sizeof(v33));
          sub_24F78173C((uint64_t)v12);
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          sub_24F8CCD38(v34);
        }
        sub_24F77A91C((uint64_t)&__dst[16], (uint64_t)&v39, &qword_26B1F5A60);
        sub_24F77D91C();
        if ((v43 & 1) == 0)
        {
          uint64_t v25 = v41[3];
          uint64_t v44 = v41[2];
          char v26 = v42;
          sub_24F8C7F2C();
          sub_24F77C934();
          uint64_t v28 = v27;
          char v32 = v26;
          swift_bridgeObjectRelease();
          if (*(void *)(v28 + 16))
          {
            sub_24F780274();
            swift_retain();
            uint64_t v29 = sub_24F8C3EB4(v28, (uint64_t)v12);
            swift_bridgeObjectRelease();
            *(void *)__src = v29;
            sub_24F775EF0();
            swift_bridgeObjectRelease();
            sub_24F8CEEB0();
          }
          swift_bridgeObjectRelease();
          sub_24F80388C(v44, v25, v32);
          sub_24F77B138();
          swift_bridgeObjectRelease();
          sub_24F77B788();
          swift_bridgeObjectRelease();
        }
        sub_24F77BEF0();
        swift_bridgeObjectRelease();
        sub_24F778A9C(__src);
        v34[0] = *(__n128 *)__src;
        Statement.arguments.setter(v34, v24);
        swift_release();
        break;
    }
  }
LABEL_8:
  sub_24F77BC10();
}

uint64_t sub_24F8C5858(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *__return_ptr, unsigned char *))
{
  uint64_t v6 = v5;
  uint64_t v9 = *(void *)(a3 + 16);
  if (!v9) {
    return a1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (*(void *)(a4 + 16))
  {
    unint64_t v11 = (uint64_t *)(a3 + 40);
    uint64_t v33 = a4;
    while (1)
    {
      uint64_t v12 = *(v11 - 1);
      uint64_t v13 = *v11;
      swift_bridgeObjectRetain_n();
      unint64_t v14 = sub_24F782950();
      if ((v15 & 1) == 0) {
        break;
      }
      memcpy(__dst, (const void *)(*(void *)(a4 + 56) + 216 * v14), 0xD2uLL);
      sub_24F7ADF80((uint64_t)__dst);
      swift_bridgeObjectRelease();
      __src[0] = v12;
      __src[1] = v13;
      memcpy(&__src[2], __dst, 0xD2uLL);
      swift_bridgeObjectRetain();
      sub_24F7ADF80((uint64_t)__dst);
      sub_24F7AE06C((uint64_t)__src);
      memcpy(v41, __src, 0xE2uLL);
      uint64_t v16 = v6;
      a5(v40, &v41[16]);
      if (v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F7AE06C((uint64_t)__src);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_24F77A91C((uint64_t)v40, (uint64_t)v38, &qword_26B1F5668);
      sub_24F77A91C((uint64_t)v38, (uint64_t)v39, &qword_26B1F5668);
      if (sub_24F808F30((uint64_t)v39) == 1)
      {
        sub_24F7AE06C((uint64_t)__src);
      }
      else
      {
        unint64_t v34 = a1;
        sub_24F77A91C((uint64_t)v38, (uint64_t)v37, &qword_26B1F5668);
        sub_24F8CD2F4(v38);
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v44 = a2;
        unint64_t v17 = sub_24F782950();
        if (__OFADD__(a2[2], (v18 & 1) == 0)) {
          goto LABEL_27;
        }
        a1 = v17;
        char v19 = v18;
        sub_24F781274(&qword_26B1F59A8);
        if (sub_24F8CF980())
        {
          unint64_t v20 = sub_24F782950();
          if ((v19 & 1) != (v21 & 1)) {
            goto LABEL_30;
          }
          a1 = v20;
        }
        if (v19) {
          goto LABEL_29;
        }
        a2 = v44;
        v44[(a1 >> 6) + 8] |= 1 << a1;
        uint64_t v22 = (void *)(a2[6] + 16 * a1);
        *uint64_t v22 = v12;
        v22[1] = v13;
        memcpy((void *)(a2[7] + 216 * a1), v37, 0xD8uLL);
        uint64_t v23 = a2[2];
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_28;
        }
        a2[2] = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        a1 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24F787184();
          a1 = v28;
        }
        a4 = v33;
        unint64_t v26 = *(void *)(a1 + 16);
        if (v26 >= *(void *)(a1 + 24) >> 1)
        {
          sub_24F787184();
          a1 = v29;
        }
        *(void *)(a1 + 16) = v26 + 1;
        unint64_t v27 = a1 + 16 * v26;
        *(void *)(v27 + 32) = v12;
        *(void *)(v27 + 40) = v13;
        sub_24F8CD2F4(v38);
        sub_24F7AE06C((uint64_t)__src);
        uint64_t v6 = v16;
      }
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return a1;
      }
      v11 += 2;
      if (!*(void *)(a4 + 16)) {
        goto LABEL_25;
      }
    }
  }
  else
  {
LABEL_25:
    __break(1u);
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  uint64_t v31 = (void *)(v44[7] + 216 * a1);
  memcpy(v36, v31, sizeof(v36));
  memcpy(v31, v37, 0xD8uLL);
  swift_bridgeObjectRelease();
  sub_24F8CCBC0((uint64_t)v36);
  sub_24F8CF9D0();
  __break(1u);
LABEL_30:
  uint64_t result = sub_24F8CFEA0();
  __break(1u);
  return result;
}

uint64_t sub_24F8C5CAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *__return_ptr, unsigned char *))
{
  uint64_t v7 = v5;
  uint64_t v10 = *(void *)(a3 + 16);
  if (!v10) {
    return a1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (*(void *)(a4 + 16))
  {
    unint64_t v6 = a3 + 40;
    while (1)
    {
      uint64_t v12 = *(void *)(v6 - 8);
      uint64_t v13 = *(void *)v6;
      swift_bridgeObjectRetain_n();
      unint64_t v14 = sub_24F782950();
      if ((v15 & 1) == 0) {
        break;
      }
      memcpy(__dst, (const void *)(*(void *)(a4 + 56) + 216 * v14), sizeof(__dst));
      sub_24F8CC9B4((uint64_t)__dst);
      swift_bridgeObjectRelease();
      __src[0] = v12;
      __src[1] = v13;
      memcpy(&__src[2], __dst, 0xD8uLL);
      swift_bridgeObjectRetain();
      sub_24F8CC9B4((uint64_t)__dst);
      sub_24F8CCAA8((uint64_t)__src);
      memcpy(v38, __src, sizeof(v38));
      a5(v37, &v38[16]);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24F8CCAA8((uint64_t)__src);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return a1;
      }
      unint64_t v33 = v6;
      uint64_t v34 = v10;
      memcpy(v36, v37, sizeof(v36));
      sub_24F8CC9B4((uint64_t)v36);
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v41 = a2;
      unint64_t v16 = sub_24F782950();
      if (__OFADD__(a2[2], (v17 & 1) == 0)) {
        goto LABEL_24;
      }
      unint64_t v6 = v16;
      char v18 = v17;
      sub_24F781274(&qword_26B1F59A8);
      if (sub_24F8CF980())
      {
        unint64_t v19 = sub_24F782950();
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_27;
        }
        unint64_t v6 = v19;
      }
      if (v18) {
        goto LABEL_26;
      }
      a2 = v41;
      v41[(v6 >> 6) + 8] |= 1 << v6;
      char v21 = (void *)(a2[6] + 16 * v6);
      *char v21 = v12;
      v21[1] = v13;
      memcpy((void *)(a2[7] + 216 * v6), v36, 0xD8uLL);
      uint64_t v22 = a2[2];
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23) {
        goto LABEL_25;
      }
      a2[2] = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24F787184();
        a1 = v27;
      }
      unint64_t v25 = *(void *)(a1 + 16);
      if (v25 >= *(void *)(a1 + 24) >> 1)
      {
        sub_24F787184();
        a1 = v28;
      }
      *(void *)(a1 + 16) = v25 + 1;
      uint64_t v26 = a1 + 16 * v25;
      *(void *)(v26 + 32) = v12;
      *(void *)(v26 + 40) = v13;
      sub_24F8CCBC0((uint64_t)v36);
      sub_24F8CCAA8((uint64_t)__src);
      --v10;
      if (v34 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return a1;
      }
      unint64_t v6 = v33 + 16;
      uint64_t v7 = 0;
      if (!*(void *)(a4 + 16)) {
        goto LABEL_22;
      }
    }
  }
  else
  {
LABEL_22:
    __break(1u);
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t v30 = (void *)(v41[7] + 216 * v6);
  memcpy(v35, v30, sizeof(v35));
  memcpy(v30, v36, 0xD8uLL);
  swift_bridgeObjectRelease();
  sub_24F8CCBC0((uint64_t)v35);
  sub_24F8CF9D0();
  __break(1u);
LABEL_27:
  uint64_t result = sub_24F8CFEA0();
  __break(1u);
  return result;
}

void sub_24F8C60A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_24F76FF94();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  type metadata accessor for StatementArgumentsSink();
  sub_24F7859BC();
  swift_retain();
  uint64_t v27 = sub_24F778A30(0);
  unint64_t v28 = MEMORY[0x263F8EE78];
  sub_24F778B08();
  type metadata accessor for SQLGenerationContext();
  swift_allocObject();
  unint64_t v29 = sub_24F779224(v26, v27, v28);
  sub_24F8C6B4C((uint64_t)v29, v30, v31, v32, v33, v34, v35, v36, v72, v73, v74, v76, v77, v78, v80, v82, v84, v86, v88,
    v90);
  if (v21) {
    goto LABEL_28;
  }
  uint64_t v39 = sub_24F87F808(v37, v38, 0);
  swift_bridgeObjectRelease();
  sub_24F778A9C(__src);
  *(_OWORD *)unint64_t v95 = __src[0];
  Statement.arguments.setter(v95, v40);
  uint64_t v41 = (uint64_t *)(v39 + 32);
  swift_beginAccess();
  v95[0] = *(void *)(v39 + 32);
  swift_bridgeObjectRetain();
  sub_24F8C8478(v26, v95, (uint64_t *)__src);
  swift_bridgeObjectRelease();
  *uint64_t v41 = *(void *)&__src[0];
  swift_bridgeObjectRelease();
  if (*v41)
  {
    if (!*(void *)(*v41 + 16)) {
      goto LABEL_28;
    }
  }
  a10 = (void *)v24[22];
  char v42 = a10;
  uint64_t v79 = *v24;
  uint64_t v89 = v24[1];
  sub_24F776A80();
  uint64_t v43 = sub_24F8CEC70();
  uint64_t v44 = v42[2];
  if (!v44)
  {
LABEL_30:
    swift_beginAccess();
    uint64_t v97 = *v41;
    uint64_t v94 = v43;
    DatabaseRegion.union(_:)(&v94, v95);
    swift_bridgeObjectRelease();
    *uint64_t v41 = v95[0];
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  uint64_t v75 = v39 + 32;
  swift_bridgeObjectRetain();
  uint64_t v45 = v42[4];
  if (!*(void *)(v45 + 16))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    swift_release();
LABEL_3:
    sub_24F77BC10();
    return;
  }
  uint64_t v46 = v44 - 1;
  uint64_t v47 = v42 + 5;
  uint64_t v87 = v26;
  while (1)
  {
    uint64_t v85 = v43;
    int v48 = *(char *)(v45 + 88);
    if (v48 < 0) {
      break;
    }
    uint64_t v81 = v47;
    uint64_t v83 = v46;
    uint64_t v49 = *(void *)(v45 + 56);
    uint64_t v50 = *(void *)(v45 + 72);
    uint64_t v51 = *(void *)(v45 + 80);
    if (v48) {
      uint64_t v52 = v79;
    }
    else {
      uint64_t v52 = *(void *)(v45 + 56);
    }
    if (v48) {
      uint64_t v53 = v89;
    }
    else {
      uint64_t v53 = *(void *)(v45 + 64);
    }
    if (v48) {
      uint64_t v54 = *(void *)(v45 + 56);
    }
    else {
      uint64_t v54 = v79;
    }
    uint64_t v55 = *(void *)(v45 + 64);
    if (v48) {
      uint64_t v56 = *(void *)(v45 + 64);
    }
    else {
      uint64_t v56 = v89;
    }
    uint64_t v91 = *(void *)(v45 + 72);
    uint64_t v92 = *(void *)(v45 + 80);
    if (v50)
    {
      uint64_t v57 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v53 = v57;
      uint64_t v58 = v50;
    }
    else
    {
      uint64_t v58 = 0;
      uint64_t v51 = 0;
    }
    uint64_t v101 = v52;
    uint64_t v102 = v53;
    uint64_t v103 = v54;
    uint64_t v104 = v56;
    uint64_t v105 = v58;
    uint64_t v106 = v51;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_24F76BA78();
    sub_24F799140(v59, v60, v61, v62, v63);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_24F82862C(v87);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = sub_24F8289CC(v48 & 1, v64);
    swift_bridgeObjectRelease();
    sub_24F7AD3A0(v49, v55, v91, v92, v48);
    sub_24F7D6414((uint64_t)&unk_270101210, v65, __src);
    memcpy(__dst, __src, 0xA3uLL);
    uint64_t v97 = v45;
    swift_bridgeObjectRetain();
    sub_24F7AB52C(&v97, __dst);
    uint64_t v94 = v97;
    sub_24F868EE0((uint64_t)v98);
    swift_bridgeObjectRelease();
    sub_24F7D8D44(v98);
    sub_24F8C7698(v98, (uint64_t)v95);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F780434();
    sub_24F7ABCFC(v66, v67);
    uint64_t v69 = v68;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(__src, v95, 0xA8uLL);
    BYTE8(__src[10]) = 0;
    *(void *)&_OWORD __src[11] = v69;
    memcpy(v99, __src, sizeof(v99));
    uint64_t v70 = sub_24F8C60A4(v87);
    sub_24F8CCD38(__dst);
    sub_24F7920F8(v98);
    sub_24F7AC0E8(__src);
    swift_beginAccess();
    uint64_t v71 = *(void *)(v70 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    v93[0] = v71;
    v93[1] = v85;
    DatabaseRegion.union(_:)(v93, &v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = v94;
    if (!v83)
    {
      sub_24F809590((uint64_t)&a10);
      uint64_t v41 = (uint64_t *)v75;
      goto LABEL_30;
    }
    uint64_t v47 = v81 + 1;
    uint64_t v45 = *v81;
    uint64_t v46 = v83 - 1;
    if (!*(void *)(*v81 + 16)) {
      goto LABEL_27;
    }
  }
  sub_24F770EAC();
  sub_24F8CF9D0();
  __break(1u);
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_24F8C66E4@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(void *)(result + 16))
  {
    uint64_t v7 = result;
    char v8 = (void *)swift_allocObject();
    v8[5] = &type metadata for RangeRowAdapter;
    v8[6] = &protocol witness table for RangeRowAdapter;
    _OWORD v8[2] = a2;
    v8[3] = a3;
    v8[7] = v7;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v9 = &protocol witness table for ScopeAdapter;
    uint64_t v10 = &type metadata for ScopeAdapter;
    a2 = v8;
  }
  else
  {
    a4[1] = a3;
    uint64_t v9 = &protocol witness table for RangeRowAdapter;
    uint64_t v10 = &type metadata for RangeRowAdapter;
  }
  a4[3] = v10;
  a4[4] = v9;
  *a4 = a2;
  return result;
}

uint64_t sub_24F8C6798(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_24F794C78();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_24F7F4BC8(v6, a1, a2);
  swift_release();
  if (!v2)
  {
    if (v7)
    {
      swift_bridgeObjectRelease();
      char v8 = 1;
    }
    else
    {
      char v8 = 0;
    }
  }
  return v8 & 1;
}

void sub_24F8C6838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_24F76FF94();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  memcpy(v38, v20, sizeof(v38));
  sub_24F8CB9F4(v38);
  sub_24F8CA140(v25, (uint64_t)v38, &a10);
  sub_24F8CBAD0(v38);
  if (!v21)
  {
    uint64_t v26 = a10;
    type metadata accessor for StatementArgumentsSink();
    sub_24F7859BC();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_24F778A30(0);
    type metadata accessor for SQLGenerationContext();
    swift_initStackObject();
    sub_24F779224(v25, v27, MEMORY[0x263F8EE78]);
    uint64_t v28 = *(void *)(v26 + 16);
    if (!v28)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    memcpy(__dst, (const void *)(v26 + 32), sizeof(__dst));
    uint64_t v29 = 0;
    uint64_t v30 = v28 - 1;
    uint64_t v31 = 216;
    while (1)
    {
      sub_24F7997BC((uint64_t)__dst, (uint64_t)v37);
      switch(sub_24F799818((uint64_t)v37))
      {
        case 1u:
        case 2u:
          sub_24F799910((uint64_t)v37);
          uint64_t v32 = 1;
          goto LABEL_7;
        case 3u:
          goto LABEL_14;
        case 4u:
          goto LABEL_15;
        default:
          sub_24F799910((uint64_t)v37);
          sub_24F7997BC((uint64_t)__dst, (uint64_t)v35);
          sub_24F799910((uint64_t)v35);
          sub_24F8CCDAC((__n128 *)__dst);
          swift_retain();
          uint64_t v33 = sub_24F829718();
          uint64_t v32 = sub_24F828FAC(v33);
          swift_bridgeObjectRelease();
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F8CCDAC((__n128 *)__dst);
LABEL_7:
          BOOL v34 = __OFADD__(v29, v32);
          v29 += v32;
          if (v34)
          {
            __break(1u);
LABEL_14:
            sub_24F799910((uint64_t)v37);
LABEL_15:
            sub_24F770EAC();
            sub_24F8CF9D0();
            __break(1u);
            JUMPOUT(0x24F8C6B38);
          }
          if (!v30)
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            goto LABEL_12;
          }
          memcpy(__dst, (const void *)(v26 + v31), sizeof(__dst));
          v31 += 184;
          --v30;
          break;
      }
    }
  }
LABEL_12:
  sub_24F77BC10();
}

void sub_24F8C6B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v41)(void *__return_ptr);
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  unsigned char *v45;
  void (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  unsigned char v60[163];
  __n128 v61[10];
  unsigned char v62[216];
  void __src[27];
  __n128 v64;
  unsigned char v65[216];
  uint64_t v66;
  uint64_t v67;
  uint64_t __dst[21];
  unsigned char v69[16];
  uint64_t v70;
  unsigned char v71[16];
  uint64_t v72;
  void (*v73[2])(void *__return_ptr);
  void (*v74)(void);
  void (*v75[3])(void);

  sub_24F76FF94();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  memcpy(__dst, v20, sizeof(__dst));
  sub_24F8C7A0C();
  uint64_t v25 = sub_24F82949C();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_24F8C7C1C();
  if (v21)
  {
    swift_release();
    goto LABEL_6;
  }
  uint64_t v66 = v26;
  uint64_t v67 = v27;
  sub_24F8CEEB0();
  if (__dst[5]) {
    sub_24F8CEEB0();
  }
  sub_24F8CB9F4(__dst);
  uint64_t v28 = sub_24F829230();
  sub_24F8CA140(v28, (uint64_t)__dst, &v64);
  sub_24F8CBAD0(__dst);
  swift_release();
  unint64_t v29 = v64.n128_u64[0];
  if (*(void *)(v64.n128_u64[0] + 16))
  {
    sub_24F8CEEB0();
    swift_retain();
    sub_24F780434();
    v64.n128_u64[0] = sub_24F8C3D0C(v30, v31);
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    uint64_t v32 = __dst[2];
    sub_24F8C7E0C((uint64_t)v25, __dst[0], __dst[1], __dst[2]);
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    uint64_t v33 = __dst[10];
    uint64_t v34 = __dst[11];
    a10 = __dst[10];
    uint64_t v35 = *(void *)(__dst[10] + 16);
    if (!v35)
    {
LABEL_16:
      sub_24F77A91C((uint64_t)&__dst[6], (uint64_t)v71, &qword_26B1F7360);
      sub_24F77A91C((uint64_t)v71, (uint64_t)v73, &qword_26B1F7360);
      uint64_t v41 = v73[0];
      if (v73[0])
      {
        sub_24F829230();
        v41(__src);
        swift_release();
        memcpy(v61, __src, 0xA3uLL);
        memcpy(v62, __src, 0xA3uLL);
        nullsub_1(v62);
        sub_24F8CCD38(v61);
        sub_24F77EFB8();
        memcpy(v60, v61, sizeof(v60));
        sub_24F78173C((uint64_t)v25);
        sub_24F8CE478();
        swift_bridgeObjectRelease();
        sub_24F8CCD38(v61);
        uint64_t v45 = v62;
      }
      else
      {
        sub_24F7A46F0((uint64_t)__src);
        uint64_t v45 = __src;
      }
      sub_24F77A91C((uint64_t)v45, (uint64_t)&v64, qword_26B1F7458);
      sub_24F77A91C((uint64_t)&__dst[12], (uint64_t)&v70, &qword_26B1F7368);
      sub_24F77D91C();
      char v42 = v74;
      if (v74)
      {
        sub_24F829230();
        sub_24F781EF8();
        v42();
        uint64_t v34 = v29;
        swift_release();
        uint64_t v36 = (unint64_t *)__src[0];
      }
      else
      {
        uint64_t v34 = v29;
        uint64_t v36 = (unint64_t *)MEMORY[0x263F8EE78];
      }
      if (v36[2])
      {
        sub_24F8CEEB0();
        swift_retain();
        sub_24F780434();
        __src[0] = sub_24F8C3B60(v43, v44);
        sub_24F780D7C();
        sub_24F8CED30();
        swift_bridgeObjectRelease();
        sub_24F8CEEB0();
        swift_bridgeObjectRelease();
      }
      sub_24F77A91C((uint64_t)&__dst[14], (uint64_t)v69, &qword_26B1F7360);
      sub_24F77A91C((uint64_t)v69, (uint64_t)v75, &qword_26B1F7360);
      uint64_t v46 = v75[0];
      if (v75[0])
      {
        sub_24F829230();
        sub_24F781EF8();
        v46();
        swift_release();
        memcpy(v62, __src, 0xA3uLL);
        sub_24F8CEEB0();
        memcpy(v61, v62, 0xA3uLL);
        sub_24F78173C((uint64_t)v25);
        sub_24F8CE478();
        swift_bridgeObjectRelease();
        sub_24F8CCD38((__n128 *)v62);
      }
      sub_24F8C7F2C();
      sub_24F829230();
      sub_24F80399C();
      int v48 = v47;
      swift_bridgeObjectRelease();
      swift_release();
      if (!*(void *)(v48 + 16))
      {
LABEL_31:
        swift_bridgeObjectRelease();
        if ((__dst[18] & 0x100) != 0)
        {
          if ((v24[168] & 1) == 0)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_34:
            sub_24F8CCD38(&v64);
            goto LABEL_6;
          }
          uint64_t v56 = sub_24F829230();
          sub_24F77A91C((uint64_t)&v64, (uint64_t)__src, qword_26B1F7458);
          uint64_t v57 = sub_24F8C818C(v56, v34, (uint64_t)__src, (uint64_t)v36);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          if (v57)
          {
            swift_release();
            goto LABEL_34;
          }
          uint64_t v53 = 0;
          uint64_t v54 = 1;
          uint64_t v55 = 1;
        }
        else
        {
          uint64_t v52 = __dst[18];
          uint64_t v53 = __dst[17];
          uint64_t v54 = __dst[16];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v55 = v52 & 1;
        }
        sub_24F8CEEB0();
        sub_24F80388C(v54, v53, v55);
        sub_24F8CE478();
        swift_release();
        sub_24F8CCD38(&v64);
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      sub_24F780274();
      swift_retain();
      sub_24F780434();
      unint64_t v39 = sub_24F8C3EB4(v49, v50);
LABEL_30:
      uint64_t v51 = v39;
      swift_bridgeObjectRelease();
      __src[0] = v51;
      sub_24F780D7C();
      sub_24F8CED30();
      swift_bridgeObjectRelease();
      sub_24F8CEEB0();
      goto LABEL_31;
    }
    uint64_t v58 = v29;
    uint64_t v72 = __dst[11];
    uint64_t v59 = v32;
    swift_retain();
    sub_24F8092B8((uint64_t)&a10);
    sub_24F8092B8((uint64_t)&v72);
    if (*(void *)(v34 + 16))
    {
      uint64_t v36 = (unint64_t *)(v33 + 40);
      while (1)
      {
        unint64_t v38 = *(v36 - 1);
        unint64_t v37 = *v36;
        swift_bridgeObjectRetain_n();
        unint64_t v39 = sub_24F782950();
        if ((v40 & 1) == 0) {
          break;
        }
        memcpy(__src, (const void *)(*(void *)(v34 + 56) + 216 * v39), sizeof(__src));
        sub_24F8CC9B4((uint64_t)__src);
        swift_bridgeObjectRelease();
        v64.n128_u64[0] = v38;
        v64.n128_u64[1] = v37;
        memcpy(v65, __src, sizeof(v65));
        sub_24F8CC9B4((uint64_t)__src);
        sub_24F8CCAA8((uint64_t)&v64);
        sub_24F8CEEB0();
        memcpy(v62, __src, sizeof(v62));
        sub_24F8CC0EC((uint64_t)v25, v59, 1);
        sub_24F8CE478();
        swift_bridgeObjectRelease();
        sub_24F8CCBC0((uint64_t)__src);
        if (!--v35)
        {
          sub_24F809590((uint64_t)&a10);
          sub_24F809590((uint64_t)&v72);
          swift_release();
          unint64_t v29 = v58;
          goto LABEL_16;
        }
        v36 += 2;
        if (!*(void *)(v34 + 16)) {
          goto LABEL_14;
        }
      }
      __break(1u);
      goto LABEL_30;
    }
LABEL_14:
    __break(1u);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_24F809590((uint64_t)&a10);
    sub_24F809590((uint64_t)&v72);
    swift_bridgeObjectRelease();
    sub_24F8CCBC0((uint64_t)__src);
LABEL_6:
    sub_24F77BC10();
    return;
  }
  sub_24F770EAC();
  sub_24F8CF9D0();
  __break(1u);
}

uint64_t sub_24F8C7698@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v45 = *a1;
  if (a1[2])
  {
    uint64_t v6 = a1[2];
  }
  else
  {
    type metadata accessor for TableAlias();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 40) = 0;
    *(unsigned char *)(v6 + 48) = 1;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v9 = (void *)sub_24F76BAD0();
  void v9[2] = sub_24F8CD0E4;
  void v9[3] = v6;
  _OWORD v9[4] = v8;
  void v9[5] = v7;
  uint64_t v43 = v9;
  uint64_t v10 = a1[5];
  uint64_t v11 = a1[6];
  if (v10)
  {
    uint64_t v12 = (void *)sub_24F76BAD0();
    _OWORD v12[2] = sub_24F8CD188;
    void v12[3] = v6;
    void v12[4] = v10;
    uint64_t v12[5] = v11;
    char v42 = v12;
    swift_retain();
    uint64_t v41 = sub_24F8CE434;
  }
  else
  {
    uint64_t v41 = 0;
    char v42 = (void *)a1[6];
  }
  uint64_t v46 = a1[7];
  uint64_t v13 = v46;
  char v47 = *((unsigned char *)a1 + 64);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24F8092B8((uint64_t)&v46);
  swift_retain();
  sub_24F78C440(v10);
  uint64_t v40 = sub_24F8C34CC(v13, v6);
  sub_24F809590((uint64_t)&v46);
  char v39 = v47;
  uint64_t v14 = a1[14];
  uint64_t v15 = a1[15];
  uint64_t v44 = v5;
  if (v14)
  {
    unint64_t v16 = (void *)sub_24F76BAD0();
    void v16[2] = sub_24F8CD154;
    void v16[3] = v6;
    void v16[4] = v14;
    v16[5] = v15;
    unint64_t v38 = v16;
    swift_retain();
    unint64_t v37 = sub_24F8CD118;
  }
  else
  {
    unint64_t v37 = 0;
    unint64_t v38 = (void *)a1[15];
  }
  uint64_t v17 = a1[16];
  uint64_t v18 = a1[17];
  if (v17)
  {
    unint64_t v19 = (void *)sub_24F76BAD0();
    uint64_t v19[2] = sub_24F8CE44C;
    void v19[3] = v6;
    v19[4] = v17;
    void v19[5] = v18;
    swift_retain();
    uint64_t v35 = sub_24F8CD138;
  }
  else
  {
    uint64_t v35 = 0;
    unint64_t v19 = (void *)a1[17];
  }
  uint64_t v21 = a1[11];
  uint64_t v20 = a1[12];
  sub_24F78C440(v14);
  sub_24F78C440(v17);
  unint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v23 = (void *)sub_24F8CEC70();
  uint64_t v24 = sub_24F8C5858(v22, v23, v21, v20, (void (*)(void *__return_ptr, unsigned char *))sub_24F8CBDE8);
  uint64_t v26 = v25;
  uint64_t v36 = a1[18];
  uint64_t v34 = a1[19];
  char v33 = *((unsigned char *)a1 + 160);
  char v27 = *((unsigned char *)a1 + 161);
  char v28 = *((unsigned char *)a1 + 104);
  uint64_t v29 = sub_24F8022A4();
  uint64_t v31 = v30;
  sub_24F7920F8(a1);
  uint64_t result = swift_release();
  *(void *)a2 = v45;
  *(void *)(a2 + 8) = v44;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = sub_24F8CD118;
  *(void *)(a2 + 32) = v43;
  *(unsigned char *)(a2 + 40) = v28;
  *(void *)(a2 + 48) = v41;
  *(void *)(a2 + 56) = v42;
  *(void *)(a2 + 64) = v40;
  *(unsigned char *)(a2 + 72) = v39;
  *(void *)(a2 + 80) = v24;
  *(void *)(a2 + 88) = v26;
  *(void *)(a2 + 96) = v37;
  *(void *)(a2 + 104) = v38;
  *(void *)(a2 + 112) = v35;
  *(void *)(a2 + 120) = v19;
  *(void *)(a2 + 128) = v36;
  *(void *)(a2 + 136) = v34;
  *(unsigned char *)(a2 + 144) = v33;
  *(unsigned char *)(a2 + 145) = v27;
  *(void *)(a2 + 152) = v29;
  *(void *)(a2 + 160) = v31;
  return result;
}

uint64_t sub_24F8C7A0C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v20 = *(void *)(v0 + 80);
  uint64_t v19 = v1;
  v16[0] = MEMORY[0x263F8EE78];
  swift_retain_n();
  sub_24F8092B8((uint64_t)&v20);
  uint64_t v2 = sub_24F8092B8((uint64_t)&v19);
  MEMORY[0x2533638D0](v2);
  if (*(void *)((v16[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_13;
  }
  while (1)
  {
    uint64_t v3 = v20;
    sub_24F8CF140();
    sub_24F8CF0B0();
    uint64_t v4 = v16[0];
    swift_release();
    uint64_t v18 = v4;
    uint64_t v5 = *(void *)(v3 + 16);
    if (!v5)
    {
      sub_24F809590((uint64_t)&v20);
      sub_24F809590((uint64_t)&v19);
      return v4;
    }
    uint64_t v6 = v19;
    sub_24F8092B8((uint64_t)&v20);
    sub_24F8092B8((uint64_t)&v19);
    if (!*(void *)(v6 + 16)) {
      break;
    }
    uint64_t v7 = (uint64_t *)(v3 + 40);
    while (1)
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      swift_bridgeObjectRetain_n();
      unint64_t v10 = sub_24F782950();
      if ((v11 & 1) == 0) {
        break;
      }
      memcpy(v15, (const void *)(*(void *)(v6 + 56) + 216 * v10), sizeof(v15));
      sub_24F8CC9B4((uint64_t)v15);
      swift_bridgeObjectRelease();
      v16[0] = v9;
      v16[1] = v8;
      memcpy(v17, v15, sizeof(v17));
      swift_bridgeObjectRetain();
      sub_24F8CC9B4((uint64_t)v15);
      sub_24F8CCAA8((uint64_t)v16);
      uint64_t v12 = memcpy(__dst, &v15[48], sizeof(__dst));
      uint64_t v13 = sub_24F8C7A0C(v12);
      sub_24F792BA0(v13);
      sub_24F8CCAA8((uint64_t)v16);
      if (!--v5) {
        goto LABEL_9;
      }
      v7 += 2;
      if (!*(void *)(v6 + 16)) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_13:
    sub_24F8CF0F0();
  }
LABEL_8:
  __break(1u);
LABEL_9:
  sub_24F809590((uint64_t)&v20);
  sub_24F809590((uint64_t)&v19);
  sub_24F809590((uint64_t)&v20);
  sub_24F809590((uint64_t)&v19);
  return v18;
}

uint64_t sub_24F8C7C1C()
{
  uint64_t v2 = *(void *)(v0 + 152);
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t v3 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_24F8C3890(v2, v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = 202;
    while ((*(unsigned char *)(v4 + v6) & 1) == 0)
    {
      v6 += 176;
      if (!--v5) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F8C36A4(v2, v3, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_24F8CCDF4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  sub_24F781274(&qword_26B1F7F48);
  sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
  sub_24F8CED30();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  return 0x2048544957;
}

uint64_t sub_24F8C7E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24F829538(a4);
  if (v4)
  {
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24F8CEEB0();
    sub_24F8CEEB0();
  }
  return 34;
}

unint64_t sub_24F8C7F2C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v24 = v1;
  uint64_t v3 = v0[8];
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    uint64_t v23 = v2;
    swift_bridgeObjectRetain();
    sub_24F8092B8((uint64_t)&v23);
    sub_24F8092B8((uint64_t)&v24);
    swift_bridgeObjectRetain();
    sub_24F8092B8((uint64_t)&v23);
    unint64_t result = sub_24F8092B8((uint64_t)&v24);
    if (*(void *)(v2 + 16))
    {
      uint64_t v6 = (uint64_t *)(v1 + 40);
      uint64_t v7 = v3;
      while (1)
      {
        uint64_t v9 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain_n();
        unint64_t result = sub_24F782950();
        if ((v10 & 1) == 0) {
          break;
        }
        memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 216 * result), sizeof(__dst));
        sub_24F8CC9B4((uint64_t)__dst);
        swift_bridgeObjectRelease();
        v21[0] = v9;
        v21[1] = v8;
        memcpy(v22, __dst, sizeof(v22));
        swift_bridgeObjectRetain();
        sub_24F8CC9B4((uint64_t)__dst);
        sub_24F8CCAA8((uint64_t)v21);
        char v11 = memcpy(v25, &__dst[48], sizeof(v25));
        uint64_t v12 = sub_24F8C7F2C(v11);
        char v14 = v13;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v15 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24F7878F0();
          uint64_t v15 = v18;
        }
        unint64_t v16 = *(void *)(v15 + 16);
        if (v16 >= *(void *)(v15 + 24) >> 1)
        {
          sub_24F7878F0();
          uint64_t v15 = v19;
        }
        *(void *)(v15 + 16) = v16 + 1;
        uint64_t v17 = v15 + 24 * v16;
        *(void *)(v17 + 32) = v12;
        *(void *)(v17 + 40) = v14 & 1;
        *(unsigned char *)(v17 + 48) = 1;
        swift_bridgeObjectRelease_n();
        sub_24F8CCAA8((uint64_t)v21);
        unint64_t result = swift_bridgeObjectRelease();
        if (!--v4)
        {
          sub_24F809590((uint64_t)&v24);
          sub_24F809590((uint64_t)&v23);
          swift_bridgeObjectRelease();
          sub_24F809590((uint64_t)&v24);
          sub_24F809590((uint64_t)&v23);
          return v15;
        }
        v6 += 2;
        uint64_t v7 = v15;
        if (!*(void *)(v2 + 16)) {
          goto LABEL_16;
        }
      }
      __break(1u);
    }
LABEL_16:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  return result;
}

uint64_t sub_24F8C818C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24F77A91C(a3, (uint64_t)v23, qword_26B1F7458);
  if (*(void *)(v4[10] + 16)) {
    goto LABEL_2;
  }
  uint64_t v8 = *v4;
  uint64_t v9 = (void *)v4[1];
  v10._uint64_t countAndFlagsBits = *v4;
  v10._object = v9;
  Swift::Bool v11 = Database.tableExists(_:)(v10);
  if (v12) {
    return v7 & 1;
  }
  if (v11)
  {
    sub_24F77A91C((uint64_t)v23, (uint64_t)__src, qword_26B1F7458);
    if (sub_24F7996B8((uint64_t)__src) != 1)
    {
      memcpy(__dst, __src, sizeof(__dst));
      sub_24F77A91C((uint64_t)v23, (uint64_t)v21, qword_26B1F7458);
      sub_24F8CCD38(v21);
      sub_24F819250();
      sub_24F8CCD38(v23);
      char v18 = sub_24F8C6798(v8, (uint64_t)v9);
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_18:
        char v7 = 1;
        return v7 & 1;
      }
    }
  }
  if (!*(void *)(a4 + 16))
  {
    uint64_t v14 = *(void *)(a2 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      sub_24F7997BC(a2 + 32, (uint64_t)v21);
      uint64_t v15 = a2 + 216;
      for (uint64_t i = v14 - 1; ; --i)
      {
        sub_24F7997BC((uint64_t)v21, (uint64_t)__src);
        if (sub_24F799818((uint64_t)__src) - 1 <= 1)
        {
          uint64_t v17 = (const void *)sub_24F799910((uint64_t)__src);
          memcpy(__dst, v17, sizeof(__dst));
          memcpy(v19, __dst, sizeof(v19));
          if (sub_24F8147B4()) {
            break;
          }
        }
        if (!i)
        {
          swift_bridgeObjectRelease();
          goto LABEL_2;
        }
        sub_24F7997BC(v15, (uint64_t)v21);
        v15 += 184;
      }
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
LABEL_2:
  char v7 = 0;
  return v7 & 1;
}

double sub_24F8C83CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, v2, sizeof(__dst));
  sub_24F8C9A54(a1, 0, 1, &v7);
  if (!v3)
  {
    if (v8)
    {
      sub_24F794DE0(&v7, a2);
    }
    else
    {
      sub_24F7783C0((uint64_t)&v7, qword_26B1F74E0);
      *(void *)(a2 + 32) = 0;
      double result = 0.0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return result;
}

uint64_t sub_24F8C8478@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  void (*v18)(void *__return_ptr, uint64_t);

  uint64_t v6 = *a2;
  memcpy(__dst, v3, sizeof(__dst));
  uint64_t v7 = *(void *)__dst;
  uint64_t v8 = *(void *)&__dst[8];
  uint64_t v9 = *(void *)&__dst[16];
  uint64_t result = Database.tableExists(_:)(*(Swift::String *)__dst);
  if (!v11)
  {
    if (result)
    {
      sub_24F77A91C((uint64_t)&__dst[48], (uint64_t)v17, &qword_26B1F7360);
      sub_24F77A91C((uint64_t)v17, (uint64_t)&v18, &qword_26B1F7360);
      if (v18)
      {
        v18(__src, a1);
        memcpy(v14, __src, 0xA3uLL);
        memcpy(v13, __src, 0xA3uLL);
        unint64_t v12 = sub_24F81990C(a1, v9);
        if (v12)
        {
          v13[0] = v6;
          sub_24F80CB98(v7, v8, v12, a3);
          sub_24F8CCD38(v14);
          return swift_bridgeObjectRelease();
        }
        sub_24F8CCD38(v14);
      }
    }
    *a3 = v6;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24F8C862C(uint64_t a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_24F77A91C((uint64_t)&__dst[96], (uint64_t)v19, &qword_26B1F7368);
  sub_24F77A91C((uint64_t)v19, (uint64_t)v20, &qword_26B1F7368);
  if (!v20[0]) {
    return 0;
  }
  uint64_t result = (uint64_t)((uint64_t (*)(__n128 *__return_ptr, uint64_t))v20[0])(__src, a1);
  if (v2) {
    return result;
  }
  unint64_t v5 = __src[0].n128_u64[0];
  uint64_t v6 = *(void *)(__src[0].n128_u64[0] + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = *(void *)__dst;
  uint64_t v8 = *(void *)&__dst[8];
  Swift::Bool v9 = Database.tableExists(_:)(*(Swift::String *)__dst);
  if (v10) {
    return swift_bridgeObjectRelease();
  }
  if (v9)
  {
    v20[4] = MEMORY[0x263F8EE88];
    memcpy(__src, (const void *)(v5 + 32), 0xA3uLL);
    memcpy(v16, __src, 0xA3uLL);
    sub_24F8CCD38(__src);
    sub_24F8183E4();
    uint64_t v12 = v11;
    for (uint64_t i = 200; ; i += 168)
    {
      if (!v12)
      {
        sub_24F8CCD38(__src);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      sub_24F8B6490();
      sub_24F8CCD38(__src);
      swift_bridgeObjectRelease();
      if (!--v6) {
        break;
      }
      memcpy(__src, (const void *)(v5 + i), 0xA3uLL);
      memcpy(v16, __src, 0xA3uLL);
      sub_24F8CCD38(__src);
      sub_24F8183E4();
      uint64_t v12 = v14;
    }
    swift_bridgeObjectRelease();
    char v15 = sub_24F8C6798(v7, v8);
    swift_bridgeObjectRelease();
    if (v15) {
      return 1;
    }
    else {
      return 2;
    }
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 2;
  }
}

uint64_t sub_24F8C8910(uint64_t a1)
{
  uint64_t v2 = v1;
  memcpy(__dst, v1, sizeof(__dst));
  uint64_t v4 = __dst[0];
  uint64_t v5 = __dst[1];
  type metadata accessor for TableAlias();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = 0;
  *(unsigned char *)(v6 + 48) = 1;
  sub_24F781274(&qword_26B1F7F68);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24F8DE5E0;
  *(void *)(v7 + 32) = v6;
  *(void *)&v24[0] = v7;
  sub_24F8CF0B0();
  type metadata accessor for StatementArgumentsSink();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v8 = sub_24F778A30(0);
  sub_24F778B08();
  type metadata accessor for SQLGenerationContext();
  swift_allocObject();
  sub_24F779224(a1, v8, *(unint64_t *)&v24[0]);
  sub_24F8C7A0C();
  uint64_t v23 = sub_24F82949C();
  swift_bridgeObjectRelease();
  sub_24F8CCE58((uint64_t)v31);
  sub_24F76F710((uint64_t)v31, (uint64_t)__src);
  char v9 = v2[168];
  sub_24F781274(&qword_26B1F75F8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24F8DDBF0;
  memcpy(v33, __src, 0xA3uLL);
  sub_24F799920(v33);
  sub_24F7997BC((uint64_t)v33, (uint64_t)v34);
  memcpy((void *)(v10 + 32), v34, 0xB8uLL);
  sub_24F8CCE94(v2);
  sub_24F8C8E2C(v10, (uint64_t)v35);
  swift_setDeallocating();
  sub_24F87FF90();
  sub_24F8CBAD0(__dst);
  uint64_t v11 = *((void *)v2 + 22);
  memcpy(v36, v35, 0xA8uLL);
  LOBYTE(v36[21]) = v9;
  v36[22] = v11;
  memcpy(v30, v36, sizeof(v30));
  sub_24F8CF7D0();
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "DELETE FROM ");
  BYTE13(v24[0]) = 0;
  HIWORD(v24[0]) = -5120;
  *((void *)&v25 + 1) = 0xE100000000000000;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  long long v28 = v24[0];
  uint64_t v26 = &type metadata for SQLExpression;
  char v27 = &protocol witness table for SQLExpression;
  *(void *)&long long v25 = swift_allocObject();
  memcpy((void *)(v25 + 16), __src, 0xA3uLL);
  sub_24F829F4C(&v25);
  memcpy(v24, v37, 0xA3uLL);
  uint64_t v12 = v38;
  sub_24F76D734();
  if (v12)
  {
    sub_24F7AC0E8(v36);
    swift_release();
    swift_release();
    swift_release();
    sub_24F8CCD38(v37);
    swift_bridgeObjectRelease();
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v25);
  }
  else
  {
    sub_24F8CCD38(v37);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v25);
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8C6B4C((uint64_t)v23, v13, v14, v15, v16, v17, v18, v19, v22, (uint64_t)v23, *(uint64_t *)&v24[0], *((uint64_t *)&v24[0] + 1), *(uint64_t *)&v24[1], *((uint64_t *)&v24[1] + 1), *(uint64_t *)&v24[2], *((uint64_t *)&v24[2] + 1), *(uint64_t *)&v24[3], *((uint64_t *)&v24[3] + 1), *(uint64_t *)&v24[4],
      *((uint64_t *)&v24[4] + 1));
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    a1 = sub_24F87F808(v28, *((uint64_t *)&v28 + 1), 0);
    swift_bridgeObjectRelease();
    sub_24F778A9C(v24);
    long long v25 = v24[0];
    Statement.arguments.setter(&v25, v21);
    sub_24F7AC0E8(v36);
    swift_release();
    swift_release();
    swift_release();
  }
  return a1;
}

__n128 sub_24F8C8E2C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_24F8CB9F4(v3);
  uint64_t v6 = sub_24F8C42FC(a1, v3);
  uint64_t v20 = *v3;
  long long v27 = *((_OWORD *)v3 + 3);
  uint64_t v26 = v3[8];
  char v7 = *((unsigned char *)v3 + 72);
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  long long v24 = *((_OWORD *)v3 + 7);
  long long v25 = *((_OWORD *)v3 + 6);
  uint64_t v22 = v3[17];
  uint64_t v23 = v3[16];
  char v21 = *((unsigned char *)v3 + 144);
  char v10 = *((unsigned char *)v3 + 145);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  long long v18 = *(_OWORD *)(v3 + 1);
  __n128 v19 = *(__n128 *)(v3 + 19);
  sub_24F8CB9F4(v3);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v13 = (void *)sub_24F8CEC70();
  uint64_t v14 = sub_24F8C5CAC(v12, v13, v8, v9, (void (*)(void *__return_ptr, unsigned char *))sub_24F8CBEFC);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(_OWORD *)(a2 + 8) = v18;
  *(void *)(a2 + 24) = sub_24F8CD088;
  *(void *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 48) = v27;
  *(void *)(a2 + 64) = v26;
  *(unsigned char *)(a2 + 72) = v7 & 1;
  *(void *)(a2 + 80) = v14;
  *(void *)(a2 + 88) = v16;
  *(_OWORD *)(a2 + 96) = v25;
  *(_OWORD *)(a2 + 112) = v24;
  *(void *)(a2 + 128) = v23;
  *(void *)(a2 + 136) = v22;
  *(unsigned char *)(a2 + 144) = v21;
  *(unsigned char *)(a2 + 145) = v10 & 1;
  __n128 result = v19;
  *(__n128 *)(a2 + 152) = v19;
  return result;
}

uint64_t sub_24F8C9010(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  uint64_t v5 = v3;
  uint64_t v7 = *a2;
  memcpy(__dst, v3, sizeof(__dst));
  uint64_t v8 = __dst[0];
  uint64_t v9 = __dst[1];
  type metadata accessor for TableAlias();
  uint64_t v10 = swift_allocObject();
  uint64_t v56 = v8;
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 40) = 0;
  *(unsigned char *)(v10 + 48) = 1;
  sub_24F781274(&qword_26B1F7F68);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24F8DE5E0;
  *(void *)(v11 + 32) = v10;
  *(void *)uint64_t v45 = v11;
  sub_24F8CF0B0();
  type metadata accessor for StatementArgumentsSink();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v12 = sub_24F778A30(0);
  sub_24F778B08();
  type metadata accessor for SQLGenerationContext();
  swift_allocObject();
  uint64_t v38 = a1;
  uint64_t v13 = sub_24F779224(a1, v12, *(unint64_t *)v45);
  sub_24F8C7A0C();
  uint64_t v14 = sub_24F82949C();
  swift_bridgeObjectRelease();
  sub_24F8CCE58((uint64_t)v48);
  sub_24F76F710((uint64_t)v48, (uint64_t)__src);
  char v15 = v5[168];
  sub_24F781274(&qword_26B1F75F8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24F8DDBF0;
  memcpy(v50, __src, 0xA3uLL);
  sub_24F799920(v50);
  sub_24F7997BC((uint64_t)v50, (uint64_t)v51);
  memcpy((void *)(v16 + 32), v51, 0xB8uLL);
  sub_24F8CCE94(v5);
  sub_24F8C8E2C(v16, (uint64_t)v52);
  swift_setDeallocating();
  sub_24F87FF90();
  sub_24F8CBAD0(__dst);
  uint64_t v17 = *((void *)v5 + 22);
  memcpy(v53, v52, 0xA8uLL);
  LOBYTE(v53[21]) = v15;
  v53[22] = v17;
  memcpy(v55, v53, sizeof(v55));
  uint64_t v46 = 0x20455441445055;
  uint64_t v47 = 0xE700000000000000;
  switch(v7)
  {
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v19 = a3;
      break;
    default:
      char v20 = sub_24F8CFD00();
      swift_bridgeObjectRelease();
      uint64_t v19 = a3;
      if ((v20 & 1) == 0)
      {
        *(void *)uint64_t v45 = 2118223;
        *(void *)&v45[8] = 0xE300000000000000;
        switch(v7)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
            sub_24F8CEEB0();
            swift_bridgeObjectRelease();
            sub_24F8CEEB0();
            sub_24F8CEEB0();
            swift_bridgeObjectRelease();
            break;
          default:
            JUMPOUT(0);
        }
      }
      return result;
  }
  *(void *)uint64_t v45 = 34;
  *(void *)&v45[8] = 0xE100000000000000;
  sub_24F8CEEB0();
  sub_24F8CEEB0();
  uint64_t v18 = 0xE100000000000000;
  sub_24F8CEEB0();
  swift_bridgeObjectRelease();
  sub_24F8CEEB0();
  swift_retain();
  sub_24F8C4038(v19, (uint64_t)v13, v21, v22, v23, v24, v25, v26, v36, v38);
  if (v4)
  {
    swift_release();
    sub_24F7AC0E8(v53);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    uint64_t v43 = &type metadata for SQLExpression;
    uint64_t v44 = &protocol witness table for SQLExpression;
    *(void *)&long long v42 = swift_allocObject();
    memcpy((void *)(v42 + 16), __src, 0xA3uLL);
    sub_24F829F4C(&v42);
    memcpy(v41, v45, 0xA3uLL);
    sub_24F76D734();
    sub_24F8CCD38((__n128 *)v45);
    _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)&v42);
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8C6B4C((uint64_t)v14, v28, v29, v30, v31, v32, v33, v34, v37, v39, a3, 0, v41[0], v41[1], v41[2], v41[3], v41[4], v41[5], v41[6],
      v41[7]);
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    uint64_t v18 = sub_24F87F808(v46, v47, 0);
    swift_bridgeObjectRelease();
    sub_24F778A9C(v41);
    long long v42 = *(_OWORD *)v41;
    Statement.arguments.setter(&v42, v35);
    swift_release();
    sub_24F7AC0E8(v53);
    swift_release();
    swift_release();
  }
  return v18;
}

uint64_t sub_24F8C97B4(int a1, int a2, uint64_t *__src)
{
  uint64_t v4 = *__src;
  memcpy(__dst, __src + 1, 0xA2uLL);
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  if (v4 && *(void *)(v4 + 16))
  {
    uint64_t v8 = 40;
    unint64_t v9 = 0xE100000000000000;
    v7[0] = sub_24F7922AC(v4);
    sub_24F781274(&qword_26B1F7F48);
    sub_24F778988((unint64_t *)&qword_26B1F7EB0, &qword_26B1F7F48);
    sub_24F8CED30();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
  }
  sub_24F778B08();
  uint64_t v5 = sub_24F82949C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v7, __dst, 0xA2uLL);
  sub_24F8CCE10(__dst);
  sub_24F83B018(v5);
  if (v3)
  {
    swift_release();
    sub_24F8CCE10(__dst);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24F8CCE10(__dst);
    v7[0] = 34;
    v7[1] = 0xE100000000000000;
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    swift_release();
    return v7[0];
  }
}

uint64_t sub_24F8C9A54@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  void (*v9)(long long *__return_ptr);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char *v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  char *v42;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  long long v49[2];
  char *v50;
  long long v51;
  uint64_t v52;
  char *v53;
  unsigned char v54[40];
  unsigned char __dst[216];
  void v56[2];
  unsigned char v57[216];
  uint64_t v58;
  unsigned char v59[168];
  uint64_t v60;

  uint64_t v6 = v4;
  uint64_t v7 = result;
  if ((a3 & 1) != 0 && !*(void *)(*(void *)(v4 + 80) + 16))
  {
    a4[1] = 0u;
    a4[2] = 0u;
    *a4 = 0u;
    return result;
  }
  unint64_t v9 = *(void (**)(long long *__return_ptr))(v4 + 24);
  sub_24F829230();
  v9(&v51);
  if (v5) {
    return swift_release();
  }
  swift_release();
  uint64_t v10 = v51;
  uint64_t v11 = *(void *)(v51 + 16);
  uint64_t v41 = a4;
  if (v11)
  {
    swift_bridgeObjectRetain();
    memcpy(__dst, (const void *)(v10 + 32), 0xB8uLL);
    uint64_t v12 = 0;
    uint64_t v13 = v11 - 1;
    uint64_t v14 = 216;
    while (1)
    {
      sub_24F7997BC((uint64_t)__dst, (uint64_t)v56);
      switch(sub_24F799818((uint64_t)v56))
      {
        case 1u:
        case 2u:
          sub_24F799910((uint64_t)v56);
          char v15 = 1;
          goto LABEL_10;
        case 3u:
          goto LABEL_50;
        case 4u:
          goto LABEL_51;
        default:
          sub_24F799910((uint64_t)v56);
          sub_24F7997BC((uint64_t)__dst, (uint64_t)v49);
          sub_24F799910((uint64_t)v49);
          sub_24F8CCDAC((__n128 *)__dst);
          swift_retain();
          uint64_t v16 = sub_24F829718();
          char v15 = sub_24F828FAC(v16, v17);
          swift_bridgeObjectRelease();
          sub_24F8CCDAC((__n128 *)__dst);
          sub_24F8CCDAC((__n128 *)__dst);
LABEL_10:
          uint64_t v18 = __OFADD__(v12, v15);
          v12 += v15;
          if (v18)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            sub_24F799910((uint64_t)v56);
            while (1)
            {
LABEL_51:
              sub_24F8CF9D0();
              __break(1u);
LABEL_52:
              sub_24F8CFEA0();
              __break(1u);
            }
          }
          if (!v13)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_16;
          }
          memcpy(__dst, (const void *)(v10 + v14), 0xB8uLL);
          v14 += 184;
          --v13;
          break;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = 0;
LABEL_16:
  long long v42 = (char *)(a2 + v12);
  if (__OFADD__(a2, v12)) {
    goto LABEL_48;
  }
  sub_24F781274(&qword_26B1F5718);
  uint64_t v19 = (void *)sub_24F8CEC70();
  char v20 = *(void *)(v6 + 80);
  uint64_t v21 = *(void *)(v6 + 88);
  uint64_t v60 = v20;
  uint64_t v58 = v21;
  uint64_t v22 = *(void *)(v20 + 16);
  if (!v22) {
    goto LABEL_35;
  }
  sub_24F8092B8((uint64_t)&v60);
  sub_24F8092B8((uint64_t)&v58);
  if (!*(void *)(v21 + 16))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    uint64_t v40 = (uint64_t)v42;
    uint64_t v24 = v42;
    goto LABEL_37;
  }
  uint64_t v23 = (uint64_t *)(v20 + 40);
  uint64_t v24 = (char *)(a2 + v12);
  uint64_t v45 = v21;
  uint64_t v46 = v12;
  while (1)
  {
    int v48 = v22;
    uint64_t v25 = *(v23 - 1);
    uint64_t v26 = *v23;
    swift_bridgeObjectRetain_n();
    long long v27 = sub_24F782950();
    if ((v28 & 1) == 0) {
      goto LABEL_45;
    }
    memcpy(__dst, (const void *)(*(void *)(v21 + 56) + 216 * v27), sizeof(__dst));
    sub_24F8CC9B4((uint64_t)__dst);
    swift_bridgeObjectRelease();
    v56[0] = v25;
    v56[1] = v26;
    memcpy(v57, __dst, sizeof(v57));
    swift_bridgeObjectRetain();
    sub_24F8CC9B4((uint64_t)__dst);
    sub_24F8CCAA8((uint64_t)v56);
    memcpy(v59, &__dst[48], sizeof(v59));
    sub_24F8C9A54(&v51, v7, v24, 0);
    if (v52)
    {
      uint64_t v29 = v53;
      sub_24F794DE0(&v51, (uint64_t)v49);
      uint64_t v47 = v29;
      uint64_t v50 = v29;
      sub_24F794DE0(v49, (uint64_t)v54);
      sub_24F775458((uint64_t)v54, (uint64_t)v49);
      swift_isUniquelyReferenced_nonNull_native();
      *(void *)&uint64_t v51 = v19;
      uint64_t v30 = sub_24F782950();
      if (__OFADD__(v19[2], (v31 & 1) == 0)) {
        goto LABEL_46;
      }
      uint64_t v32 = v30;
      uint64_t v33 = v31;
      sub_24F781274(&qword_26B1F59A0);
      if (sub_24F8CF980())
      {
        uint64_t v34 = sub_24F782950();
        if ((v33 & 1) != (v35 & 1)) {
          goto LABEL_52;
        }
        uint64_t v32 = v34;
      }
      uint64_t v19 = (void *)v51;
      if (v33)
      {
        uint64_t v36 = *(void *)(v51 + 56) + 40 * v32;
        _s12GRDBInternal13DatabaseEventVwxx_0(v36);
        sub_24F794DE0(v49, v36);
      }
      else
      {
        *(void *)(v51 + 8 * (v32 >> 6) + 64) |= 1 << v32;
        uint64_t v37 = (void *)(v19[6] + 16 * v32);
        *uint64_t v37 = v25;
        v37[1] = v26;
        sub_24F794DE0(v49, v19[7] + 40 * v32);
        uint64_t v38 = v19[2];
        uint64_t v18 = __OFADD__(v38, 1);
        uint64_t v39 = v38 + 1;
        if (v18) {
          goto LABEL_47;
        }
        uint64_t v19[2] = v39;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24F8CCBC0((uint64_t)__dst);
      _s12GRDBInternal13DatabaseEventVwxx_0((uint64_t)v54);
      uint64_t v24 = v47;
      uint64_t v21 = v45;
    }
    else
    {
      sub_24F7783C0((uint64_t)&v51, qword_26B1F74E0);
      swift_bridgeObjectRelease();
      sub_24F8CCBC0((uint64_t)__dst);
    }
    uint64_t v22 = v48 - 1;
    uint64_t v12 = v46;
    if (v48 == 1) {
      break;
    }
    v23 += 2;
    if (!*(void *)(v21 + 16)) {
      goto LABEL_34;
    }
  }
  sub_24F809590((uint64_t)&v60);
  sub_24F809590((uint64_t)&v58);
  uint64_t v40 = (uint64_t)v42;
LABEL_37:
  if ((a3 & 1) == 0 && v12 || v19[2])
  {
    if (v40 < a2) {
      goto LABEL_49;
    }
    if (a2 < 0) {
      goto LABEL_51;
    }
    sub_24F8C66E4((uint64_t)v19, (void *)a2, v40, v41);
    uint64_t result = swift_bridgeObjectRelease();
    *((void *)v41 + 5) = v24;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    v41[1] = 0u;
    void v41[2] = 0u;
    *uint64_t v41 = 0u;
  }
  return result;
}

void sub_24F8CA140(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v13)(void *__return_ptr, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *__return_ptr, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const void *v35;
  void (*v36)(void *__return_ptr, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(void *__return_ptr, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(void *__return_ptr, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(void *__return_ptr, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(void *__return_ptr, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(void *__return_ptr, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(void *__return_ptr, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(void *__return_ptr, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t j;
  void (*v101)(void *__return_ptr, uint64_t);
  void (*v102)(void *__return_ptr, uint64_t);
  void (*v103)(void *__return_ptr, uint64_t);
  void (*v104)(void *__return_ptr, uint64_t);
  void (*v105)(void *__return_ptr, uint64_t);
  uint64_t v106;
  uint64_t v107;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  void (*v114)(void *__return_ptr, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(void *__return_ptr, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(void *__return_ptr, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(void *__return_ptr, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(void *__return_ptr, uint64_t);
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t i;
  unsigned char v176[216];
  void v177[27];
  uint64_t v178;
  void v179[28];
  void v180[28];
  void v181[28];
  void v182[28];
  void v183[27];
  uint64_t v184;
  void v185[27];
  void v186[27];
  void __src[27];
  void v188[27];
  void __dst[28];

  (*(void (**)(void *__return_ptr))(a2 + 24))(__dst);
  uint64_t v7 = v3;
  if (!v3)
  {
    uint64_t v8 = __dst[0];
    uint64_t v10 = *(void *)(a2 + 80);
    uint64_t v9 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_24F8C4AB4(v10, v10, v9);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 16))
    {
      unint64_t v168 = *(void *)(v12 + 16);
      swift_bridgeObjectRetain();
      memcpy(__dst, (const void *)(v12 + 32), 0xD8uLL);
      uint64_t v13 = (void (*)(void *__return_ptr, uint64_t))__dst[9];
      sub_24F8CC9B4((uint64_t)__dst);
      sub_24F8CB9F4(&__dst[6]);
      v13(v188, a1);
      uint64_t v161 = v12 + 32;
      unint64_t v143 = a3;
      uint64_t v14 = 1;
      for (uint64_t i = a1; ; v140(v188, i))
      {
        char v15 = v188[0];
        uint64_t v16 = __dst[16];
        uint64_t v17 = __dst[17];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_24F8C4AB4(v16, v16, v17);
        uint64_t v19 = v18;
        swift_bridgeObjectRelease();
        char v20 = *(void *)(v19 + 16);
        if (v20) {
          break;
        }
        swift_bridgeObjectRelease();
        sub_24F8CBAD0(&__dst[6]);
LABEL_136:
        int v135 = *(void *)(v15 + 16);
        char v136 = *(void *)(v8 + 16);
        if (__OFADD__(v136, v135)) {
          goto LABEL_159;
        }
        if (!swift_isUniquelyReferenced_nonNull_native() || v136 + v135 > *(void *)(v8 + 24) >> 1)
        {
          sub_24F788164();
          uint64_t v8 = v137;
        }
        if (*(void *)(v15 + 16))
        {
          if ((*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16) < v135) {
            goto LABEL_169;
          }
          swift_arrayInitWithCopy();
          if (v135)
          {
            char v138 = *(void *)(v8 + 16);
            unint64_t v112 = __OFADD__(v138, v135);
            int v139 = v138 + v135;
            if (v112) {
              goto LABEL_174;
            }
            *(void *)(v8 + 16) = v139;
          }
        }
        else if (v135)
        {
          goto LABEL_160;
        }
        swift_bridgeObjectRelease();
        sub_24F8CCBC0((uint64_t)__dst);
        if (v14 == v168)
        {
          swift_bridgeObjectRelease_n();
          a3 = v143;
          goto LABEL_150;
        }
        memcpy(__dst, (const void *)(v161 + 216 * v14++), 0xD8uLL);
        uint64_t v140 = (void (*)(void *__return_ptr, uint64_t))__dst[9];
        sub_24F8CC9B4((uint64_t)__dst);
        sub_24F8CB9F4(&__dst[6]);
      }
      swift_bridgeObjectRetain();
      uint64_t v159 = v19 + 32;
      memcpy(v188, (const void *)(v19 + 32), sizeof(v188));
      uint64_t v21 = (void (*)(void *__return_ptr, uint64_t))v188[9];
      sub_24F8CC9B4((uint64_t)v188);
      sub_24F8CB9F4(&v188[6]);
      v21(__src, i);
      uint64_t v141 = v14;
      uint64_t v22 = 1;
      BOOL v169 = v8;
      int v158 = v20;
      while (1)
      {
        uint64_t v165 = v22;
        uint64_t v23 = __src[0];
        uint64_t v24 = *(void *)(v188[16] + 16);
        uint64_t v170 = v15;
        if (v24) {
          break;
        }
        uint64_t v33 = v8;
        uint64_t v34 = MEMORY[0x263F8EE78];
LABEL_17:
        if (*(void *)(v34 + 16))
        {
          uint64_t v156 = *(void *)(v34 + 16);
          uint64_t v35 = (const void *)(v34 + 32);
          swift_bridgeObjectRetain();
          memcpy(__src, v35, sizeof(__src));
          uint64_t v36 = (void (*)(void *__return_ptr, uint64_t))__src[9];
          sub_24F8CC9B4((uint64_t)__src);
          sub_24F8CB9F4(&__src[6]);
          v36(v186, i);
          uint64_t v8 = v33;
          uint64_t v37 = 1;
          while (1)
          {
            BOOL v164 = v37;
            uint64_t v172 = v186[0];
            unint64_t v174 = v23;
            uint64_t v38 = *(void *)(__src[16] + 16);
            if (v38) {
              break;
            }
            uint64_t v40 = (void *)MEMORY[0x263F8EE78];
LABEL_30:
            uint64_t v45 = v40[2];
            if (v45)
            {
              swift_bridgeObjectRetain();
              memcpy(v186, v40 + 4, sizeof(v186));
              uint64_t v46 = (void (*)(void *__return_ptr, uint64_t))v186[9];
              sub_24F8CC9B4((uint64_t)v186);
              sub_24F8CB9F4(&v186[6]);
              v46(v185, i);
              unint64_t v163 = 1;
              int v152 = v45;
              while (1)
              {
                uint64_t v171 = v185[0];
                uint64_t v47 = *(void *)(v186[16] + 16);
                if (v47) {
                  break;
                }
                uint64_t v49 = (void *)MEMORY[0x263F8EE78];
LABEL_43:
                uint64_t v54 = v49[2];
                uint64_t v55 = i;
                if (v54)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v151 = v49 + 4;
                  memcpy(v185, v49 + 4, sizeof(v185));
                  uint64_t v56 = (void (*)(void *__return_ptr, uint64_t))v185[9];
                  sub_24F8CC9B4((uint64_t)v185);
                  sub_24F8CB9F4(&v185[6]);
                  v56(v183, i);
                  uint64_t v162 = 1;
                  uint64_t v150 = v54;
                  while (1)
                  {
                    uint64_t v57 = v183[0];
                    uint64_t v58 = v185[16];
                    uint64_t v59 = v185[17];
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain();
                    sub_24F8C4AB4(v58, v58, v59);
                    uint64_t v61 = v60;
                    swift_bridgeObjectRelease();
                    uint64_t v184 = v57;
                    uint64_t v62 = *(void *)(v61 + 16);
                    if (v62)
                    {
                      swift_bridgeObjectRetain();
                      BOOL v149 = v61 + 32;
                      memcpy(v183, (const void *)(v61 + 32), sizeof(v183));
                      char v63 = (void (*)(void *__return_ptr, uint64_t))v183[9];
                      sub_24F8CC9B4((uint64_t)v183);
                      sub_24F8CB9F4(&v183[6]);
                      v63(v182, v55);
                      uint64_t v160 = 1;
                      unint64_t v148 = v62;
                      while (1)
                      {
                        uint64_t v64 = v182[0];
                        uint64_t v65 = v183[16];
                        uint64_t v66 = v183[17];
                        swift_bridgeObjectRetain_n();
                        swift_bridgeObjectRetain();
                        sub_24F8C4AB4(v65, v65, v66);
                        uint64_t v68 = v67;
                        swift_bridgeObjectRelease();
                        v182[27] = v64;
                        if (*(void *)(v68 + 16))
                        {
                          char v147 = *(void *)(v68 + 16);
                          swift_bridgeObjectRetain();
                          int v146 = v68 + 32;
                          memcpy(v182, (const void *)(v68 + 32), 0xD8uLL);
                          uint64_t v69 = (void (*)(void *__return_ptr, uint64_t))v182[9];
                          sub_24F8CC9B4((uint64_t)v182);
                          sub_24F8CB9F4(&v182[6]);
                          v69(v181, v55);
                          char v157 = 1;
                          while (1)
                          {
                            uint64_t v70 = v181[0];
                            uint64_t v71 = v182[16];
                            uint64_t v72 = v182[17];
                            swift_bridgeObjectRetain_n();
                            swift_bridgeObjectRetain();
                            sub_24F8C4AB4(v71, v71, v72);
                            uint64_t v74 = v73;
                            swift_bridgeObjectRelease();
                            v181[27] = v70;
                            if (*(void *)(v74 + 16))
                            {
                              BOOL v145 = *(void *)(v74 + 16);
                              swift_bridgeObjectRetain();
                              BOOL v144 = v74 + 32;
                              memcpy(v181, (const void *)(v74 + 32), 0xD8uLL);
                              uint64_t v75 = (void (*)(void *__return_ptr, uint64_t))v181[9];
                              sub_24F8CC9B4((uint64_t)v181);
                              sub_24F8CB9F4(&v181[6]);
                              v75(v180, v55);
                              unint64_t v154 = 1;
                              while (1)
                              {
                                uint64_t v76 = v180[0];
                                uint64_t v77 = v181[16];
                                uint64_t v78 = v181[17];
                                swift_bridgeObjectRetain_n();
                                swift_bridgeObjectRetain();
                                sub_24F8C4AB4(v77, v77, v78);
                                uint64_t v80 = v79;
                                swift_bridgeObjectRelease();
                                v180[27] = v76;
                                char v155 = *(void *)(v80 + 16);
                                if (v155)
                                {
                                  swift_bridgeObjectRetain();
                                  uint64_t v142 = v80 + 32;
                                  memcpy(v180, (const void *)(v80 + 32), 0xD8uLL);
                                  uint64_t v81 = (void (*)(void *__return_ptr, uint64_t))v180[9];
                                  sub_24F8CC9B4((uint64_t)v180);
                                  sub_24F8CB9F4(&v180[6]);
                                  v81(v179, v55);
                                  uint64_t v82 = 1;
                                  while (1)
                                  {
                                    char v153 = v82;
                                    uint64_t v83 = v179[0];
                                    uint64_t v84 = v180[16];
                                    uint64_t v85 = v180[17];
                                    swift_bridgeObjectRetain_n();
                                    swift_bridgeObjectRetain();
                                    sub_24F8C4AB4(v84, v84, v85);
                                    uint64_t v87 = v86;
                                    swift_bridgeObjectRelease();
                                    v179[27] = v83;
                                    if (*(void *)(v87 + 16))
                                    {
                                      uint64_t v88 = *(void *)(v87 + 16);
                                      uint64_t v89 = v87 + 32;
                                      swift_bridgeObjectRetain();
                                      memcpy(v179, (const void *)(v87 + 32), 0xD8uLL);
                                      uint64_t v90 = (void (*)(void *__return_ptr, uint64_t))v179[9];
                                      sub_24F8CC9B4((uint64_t)v179);
                                      sub_24F8CB9F4(&v179[6]);
                                      v90(v177, v55);
                                      uint64_t v91 = 1;
                                      while (1)
                                      {
                                        uint64_t v92 = v7;
                                        uint64_t v93 = v177[0];
                                        uint64_t v94 = v179[16];
                                        unint64_t v95 = v179[17];
                                        swift_bridgeObjectRetain_n();
                                        swift_bridgeObjectRetain();
                                        sub_24F8C4AB4(v94, v94, v95);
                                        uint64_t v97 = v96;
                                        uint64_t v98 = v92;
                                        swift_bridgeObjectRelease();
                                        uint64_t v178 = v93;
                                        uint64_t v99 = *(void *)(v97 + 16);
                                        if (v99)
                                        {
                                          swift_bridgeObjectRetain();
                                          memcpy(v177, (const void *)(v97 + 32), sizeof(v177));
                                          memcpy(v176, v177, sizeof(v176));
                                          sub_24F8CC9B4((uint64_t)v177);
                                          sub_24F8CBBA8((uint64_t)&v178, (uint64_t)v176, i);
                                          for (j = 248; ; j += 216)
                                          {
                                            uint64_t v98 = 0;
                                            sub_24F8CCBC0((uint64_t)v177);
                                            if (!--v99) {
                                              break;
                                            }
                                            memcpy(v177, (const void *)(v97 + j), sizeof(v177));
                                            memcpy(v176, v177, sizeof(v176));
                                            sub_24F8CC9B4((uint64_t)v177);
                                            sub_24F8CBBA8((uint64_t)&v178, (uint64_t)v176, i);
                                          }
                                          swift_bridgeObjectRelease_n();
                                          sub_24F8CBAD0(&v179[6]);
                                        }
                                        else
                                        {
                                          swift_bridgeObjectRelease();
                                          sub_24F8CBAD0(&v179[6]);
                                        }
                                        sub_24F793314();
                                        sub_24F8CCBC0((uint64_t)v179);
                                        if (v91 == v88) {
                                          break;
                                        }
                                        memcpy(v179, (const void *)(v89 + 216 * v91++), 0xD8uLL);
                                        uint64_t v101 = (void (*)(void *__return_ptr, uint64_t))v179[9];
                                        sub_24F8CC9B4((uint64_t)v179);
                                        sub_24F8CB9F4(&v179[6]);
                                        v101(v177, i);
                                        uint64_t v7 = v98;
                                      }
                                      swift_bridgeObjectRelease_n();
                                      sub_24F8CBAD0(&v180[6]);
                                      uint64_t v7 = v98;
                                      uint64_t v8 = v169;
                                      uint64_t v55 = i;
                                    }
                                    else
                                    {
                                      swift_bridgeObjectRelease();
                                      sub_24F8CBAD0(&v180[6]);
                                    }
                                    sub_24F793314();
                                    sub_24F8CCBC0((uint64_t)v180);
                                    if (v153 == v155) {
                                      break;
                                    }
                                    memcpy(v180, (const void *)(v142 + 216 * v153), 0xD8uLL);
                                    uint64_t v82 = v153 + 1;
                                    uint64_t v102 = (void (*)(void *__return_ptr, uint64_t))v180[9];
                                    sub_24F8CC9B4((uint64_t)v180);
                                    sub_24F8CB9F4(&v180[6]);
                                    v102(v179, v55);
                                  }
                                  swift_bridgeObjectRelease_n();
                                  sub_24F8CBAD0(&v181[6]);
                                }
                                else
                                {
                                  swift_bridgeObjectRelease();
                                  sub_24F8CBAD0(&v181[6]);
                                }
                                sub_24F793314();
                                sub_24F8CCBC0((uint64_t)v181);
                                if (v154 == v145) {
                                  break;
                                }
                                memcpy(v181, (const void *)(v144 + 216 * v154++), 0xD8uLL);
                                uint64_t v103 = (void (*)(void *__return_ptr, uint64_t))v181[9];
                                sub_24F8CC9B4((uint64_t)v181);
                                sub_24F8CB9F4(&v181[6]);
                                v103(v180, v55);
                              }
                              swift_bridgeObjectRelease_n();
                              sub_24F8CBAD0(&v182[6]);
                            }
                            else
                            {
                              swift_bridgeObjectRelease();
                              sub_24F8CBAD0(&v182[6]);
                            }
                            sub_24F793314();
                            sub_24F8CCBC0((uint64_t)v182);
                            if (v157 == v147) {
                              break;
                            }
                            memcpy(v182, (const void *)(v146 + 216 * v157++), 0xD8uLL);
                            uint64_t v104 = (void (*)(void *__return_ptr, uint64_t))v182[9];
                            sub_24F8CC9B4((uint64_t)v182);
                            sub_24F8CB9F4(&v182[6]);
                            v104(v181, v55);
                          }
                          swift_bridgeObjectRelease_n();
                          sub_24F8CBAD0(&v183[6]);
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                          sub_24F8CBAD0(&v183[6]);
                        }
                        sub_24F793314();
                        sub_24F8CCBC0((uint64_t)v183);
                        if (v160 == v148) {
                          break;
                        }
                        memcpy(v183, (const void *)(v149 + 216 * v160++), sizeof(v183));
                        uint64_t v105 = (void (*)(void *__return_ptr, uint64_t))v183[9];
                        sub_24F8CC9B4((uint64_t)v183);
                        sub_24F8CB9F4(&v183[6]);
                        v105(v182, v55);
                      }
                      swift_bridgeObjectRelease_n();
                      sub_24F8CBAD0(&v185[6]);
                      uint64_t v57 = v184;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      sub_24F8CBAD0(&v185[6]);
                    }
                    uint64_t v106 = *(void *)(v57 + 16);
                    unint64_t v107 = *(void *)(v171 + 16);
                    if (__OFADD__(v107, v106)) {
                      goto LABEL_166;
                    }
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    uint64_t v109 = v171;
                    if (!isUniquelyReferenced_nonNull_native || v107 + v106 > *(void *)(v171 + 24) >> 1)
                    {
                      sub_24F788164();
                      uint64_t v109 = v110;
                    }
                    uint64_t v171 = v109;
                    if (*(void *)(v57 + 16))
                    {
                      if ((*(void *)(v109 + 24) >> 1) - *(void *)(v109 + 16) < v106) {
                        goto LABEL_173;
                      }
                      swift_arrayInitWithCopy();
                      if (v106)
                      {
                        unint64_t v111 = *(void *)(v171 + 16);
                        unint64_t v112 = __OFADD__(v111, v106);
                        char v113 = v111 + v106;
                        if (v112) {
                          goto LABEL_177;
                        }
                        *(void *)(v171 + 16) = v113;
                      }
                    }
                    else if (v106)
                    {
                      goto LABEL_168;
                    }
                    swift_bridgeObjectRelease();
                    sub_24F8CCBC0((uint64_t)v185);
                    if (v162 == v150)
                    {
                      swift_bridgeObjectRelease_n();
                      goto LABEL_94;
                    }
                    memcpy(v185, &v151[27 * v162++], sizeof(v185));
                    uint64_t v114 = (void (*)(void *__return_ptr, uint64_t))v185[9];
                    sub_24F8CC9B4((uint64_t)v185);
                    sub_24F8CB9F4(&v185[6]);
                    v114(v183, v55);
                  }
                }
                swift_bridgeObjectRelease();
LABEL_94:
                sub_24F8CBAD0(&v186[6]);
                unint64_t v115 = *(void *)(v171 + 16);
                char v116 = *(void *)(v172 + 16);
                char v15 = v170;
                uint64_t v23 = v174;
                if (__OFADD__(v116, v115)) {
                  goto LABEL_165;
                }
                unint64_t v117 = swift_isUniquelyReferenced_nonNull_native();
                char v118 = v172;
                if ((v117 & 1) == 0 || v116 + v115 > *(void *)(v172 + 24) >> 1)
                {
                  sub_24F788164();
                  char v118 = v119;
                }
                uint64_t v172 = v118;
                if (*(void *)(v171 + 16))
                {
                  if ((*(void *)(v118 + 24) >> 1) - *(void *)(v118 + 16) < v115) {
                    goto LABEL_172;
                  }
                  swift_arrayInitWithCopy();
                  if (v115)
                  {
                    char v120 = *(void *)(v172 + 16);
                    unint64_t v112 = __OFADD__(v120, v115);
                    int v121 = v120 + v115;
                    if (v112) {
                      goto LABEL_178;
                    }
                    *(void *)(v172 + 16) = v121;
                  }
                }
                else if (v115)
                {
                  goto LABEL_167;
                }
                swift_bridgeObjectRelease();
                sub_24F8CCBC0((uint64_t)v186);
                if (v163 == v152)
                {
                  swift_bridgeObjectRelease_n();
                  goto LABEL_108;
                }
                memcpy(v186, &v40[27 * v163++ + 4], sizeof(v186));
                char v122 = (void (*)(void *__return_ptr, uint64_t))v186[9];
                sub_24F8CC9B4((uint64_t)v186);
                sub_24F8CB9F4(&v186[6]);
                v122(v185, i);
              }
              uint64_t v167 = v7;
              int v48 = v186[17];
              v183[0] = MEMORY[0x263F8EE78];
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              sub_24F796174();
              if (!*(void *)(v48 + 16)) {
                goto LABEL_157;
              }
              uint64_t v49 = (void *)v183[0];
              uint64_t v50 = 40;
              while (1)
              {
                swift_bridgeObjectRetain();
                uint64_t v51 = sub_24F782950();
                if ((v52 & 1) == 0) {
                  goto LABEL_158;
                }
                memcpy(v185, (const void *)(*(void *)(v48 + 56) + 216 * v51), sizeof(v185));
                sub_24F8CC9B4((uint64_t)v185);
                swift_bridgeObjectRelease();
                v183[0] = v49;
                uint64_t v53 = v49[2];
                if (v53 >= v49[3] >> 1)
                {
                  sub_24F796174();
                  uint64_t v49 = (void *)v183[0];
                }
                void v49[2] = v53 + 1;
                memcpy(&v49[27 * v53 + 4], v185, 0xD8uLL);
                if (!--v47)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  uint64_t v8 = v169;
                  uint64_t v7 = v167;
                  goto LABEL_43;
                }
                v50 += 16;
                if (!*(void *)(v48 + 16)) {
                  goto LABEL_157;
                }
              }
            }
            swift_bridgeObjectRelease();
LABEL_108:
            sub_24F8CBAD0(&__src[6]);
            int v123 = *(void *)(v172 + 16);
            char v124 = *(void *)(v23 + 16);
            if (__OFADD__(v124, v123)) {
              goto LABEL_163;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v124 + v123 > *(void *)(v23 + 24) >> 1)
            {
              sub_24F788164();
              uint64_t v23 = v125;
            }
            if (*(void *)(v172 + 16))
            {
              if ((*(void *)(v23 + 24) >> 1) - *(void *)(v23 + 16) < v123) {
                goto LABEL_171;
              }
              swift_arrayInitWithCopy();
              if (v123)
              {
                char v126 = *(void *)(v23 + 16);
                unint64_t v112 = __OFADD__(v126, v123);
                int v127 = v126 + v123;
                if (v112) {
                  goto LABEL_175;
                }
                *(void *)(v23 + 16) = v127;
              }
            }
            else if (v123)
            {
              goto LABEL_164;
            }
            swift_bridgeObjectRelease();
            sub_24F8CCBC0((uint64_t)__src);
            if (v164 == v156)
            {
              swift_bridgeObjectRelease_n();
              sub_24F8CBAD0(&v188[6]);
              goto LABEL_122;
            }
            memcpy(__src, (const void *)(216 * v164), sizeof(__src));
            uint64_t v37 = v164 + 1;
            char v128 = (void (*)(void *__return_ptr, uint64_t))__src[9];
            sub_24F8CC9B4((uint64_t)__src);
            sub_24F8CB9F4(&__src[6]);
            v128(v186, i);
          }
          BOOL v166 = v7;
          uint64_t v39 = __src[17];
          v185[0] = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_24F796174();
          if (!*(void *)(v39 + 16)) {
            goto LABEL_156;
          }
          uint64_t v40 = (void *)v185[0];
          uint64_t v41 = 40;
          while (1)
          {
            swift_bridgeObjectRetain();
            long long v42 = sub_24F782950();
            if ((v43 & 1) == 0) {
              goto LABEL_155;
            }
            memcpy(v186, (const void *)(*(void *)(v39 + 56) + 216 * v42), sizeof(v186));
            sub_24F8CC9B4((uint64_t)v186);
            swift_bridgeObjectRelease();
            v185[0] = v40;
            uint64_t v44 = v40[2];
            if (v44 >= v40[3] >> 1)
            {
              sub_24F796174();
              uint64_t v40 = (void *)v185[0];
            }
            v40[2] = v44 + 1;
            memcpy(&v40[27 * v44 + 4], v186, 0xD8uLL);
            if (!--v38)
            {
              swift_bridgeObjectRelease();
              uint64_t v8 = v169;
              char v15 = v170;
              uint64_t v7 = v166;
              uint64_t v23 = v174;
              goto LABEL_30;
            }
            v41 += 16;
            if (!*(void *)(v39 + 16)) {
              goto LABEL_156;
            }
          }
        }
        swift_bridgeObjectRelease();
        sub_24F8CBAD0(&v188[6]);
        uint64_t v8 = v33;
LABEL_122:
        int v129 = *(void *)(v23 + 16);
        char v130 = *(void *)(v15 + 16);
        if (__OFADD__(v130, v129)) {
          goto LABEL_161;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v130 + v129 > *(void *)(v15 + 24) >> 1)
        {
          sub_24F788164();
          char v15 = v131;
        }
        if (*(void *)(v23 + 16))
        {
          if ((*(void *)(v15 + 24) >> 1) - *(void *)(v15 + 16) < v129) {
            goto LABEL_170;
          }
          swift_arrayInitWithCopy();
          if (v129)
          {
            char v132 = *(void *)(v15 + 16);
            unint64_t v112 = __OFADD__(v132, v129);
            int v133 = v132 + v129;
            if (v112) {
              goto LABEL_176;
            }
            *(void *)(v15 + 16) = v133;
          }
        }
        else if (v129)
        {
          goto LABEL_162;
        }
        swift_bridgeObjectRelease();
        sub_24F8CCBC0((uint64_t)v188);
        if (v165 == v158)
        {
          swift_bridgeObjectRelease_n();
          sub_24F8CBAD0(&__dst[6]);
          uint64_t v14 = v141;
          goto LABEL_136;
        }
        memcpy(v188, (const void *)(v159 + 216 * v165), sizeof(v188));
        uint64_t v22 = v165 + 1;
        char v134 = (void (*)(void *__return_ptr, uint64_t))v188[9];
        sub_24F8CC9B4((uint64_t)v188);
        sub_24F8CB9F4(&v188[6]);
        v134(__src, i);
      }
      uint64_t v173 = __src[0];
      uint64_t v25 = v7;
      uint64_t v26 = v188[17];
      v186[0] = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_24F796174();
      if (*(void *)(v26 + 16))
      {
        long long v27 = v186[0];
        uint64_t v28 = 40;
        while (1)
        {
          swift_bridgeObjectRetain();
          uint64_t v29 = sub_24F782950();
          if ((v30 & 1) == 0) {
            break;
          }
          memcpy(__src, (const void *)(*(void *)(v26 + 56) + 216 * v29), sizeof(__src));
          sub_24F8CC9B4((uint64_t)__src);
          swift_bridgeObjectRelease();
          uint64_t v31 = v27;
          v186[0] = v27;
          uint64_t v32 = *(void *)(v27 + 16);
          if (v32 >= *(void *)(v27 + 24) >> 1)
          {
            sub_24F796174();
            uint64_t v31 = v186[0];
          }
          *(void *)(v31 + 16) = v32 + 1;
          long long v27 = v31;
          memcpy((void *)(v31 + 216 * v32 + 32), __src, 0xD8uLL);
          if (!--v24)
          {
            swift_bridgeObjectRelease();
            uint64_t v7 = v25;
            uint64_t v33 = v169;
            char v15 = v170;
            uint64_t v23 = v173;
            uint64_t v34 = v27;
            goto LABEL_17;
          }
          v28 += 16;
          if (!*(void *)(v26 + 16)) {
            goto LABEL_154;
          }
        }
        __break(1u);
      }
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_150:
      *a3 = v8;
    }
  }
}

void *sub_24F8CB9F4(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[12];
  uint64_t v5 = a1[14];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_24F78C440(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F78C440(v3);
  sub_24F78C440(v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24F8CBAD0(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[12];
  uint64_t v5 = a1[14];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F787238(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F787238(v3);
  sub_24F787238(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_24F8CBBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(void *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  unsigned char v13[216];
  void __src[27];
  uint64_t v15;
  void __dst[21];

  memcpy(__dst, (const void *)(a2 + 48), sizeof(__dst));
  uint64_t v5 = (void (*)(void *__return_ptr, uint64_t))__dst[3];
  sub_24F8CB9F4(__dst);
  v5(__src, a3);
  if (v3)
  {
    sub_24F8CBAD0(__dst);
  }
  else
  {
    uint64_t v6 = __src[0];
    uint64_t v8 = __dst[10];
    uint64_t v7 = __dst[11];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_24F8C4AB4(v8, v8, v7);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    char v15 = v6;
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      memcpy(__src, (const void *)(v10 + 32), sizeof(__src));
      memcpy(v13, __src, sizeof(v13));
      sub_24F8CC9B4((uint64_t)__src);
      sub_24F8CBBA8(&v15, v13, a3);
      for (uint64_t i = 248; ; i += 216)
      {
        sub_24F8CCBC0((uint64_t)__src);
        if (!--v11) {
          break;
        }
        memcpy(__src, (const void *)(v10 + i), sizeof(__src));
        memcpy(v13, __src, sizeof(v13));
        sub_24F8CC9B4((uint64_t)__src);
        sub_24F8CBBA8(&v15, v13, a3);
      }
      swift_bridgeObjectRelease_n();
      sub_24F8CBAD0(__dst);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_24F8CBAD0(__dst);
    }
    sub_24F793314();
  }
}

uint64_t sub_24F8CBD8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, unsigned char *)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_retain();
  uint64_t result = a3(v7, a2, v9);
  *a4 = result;
  return result;
}

uint64_t sub_24F8CBDE8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 4);
  char v8 = a1[40];
  memcpy(__dst, a1 + 48, 0xA2uLL);
  if ((v3 - 2) >= 2)
  {
    sub_24F799140(v4, v5, v6, v7, v8);
    sub_24F7D8D44(__dst);
    sub_24F8C7698(__src, __dst);
    memcpy(&v11[7], __src, 0xA8uLL);
    v12[0] = v3 != 0;
    uint64_t v13 = v4;
    uint64_t v14 = v5;
    uint64_t v15 = v6;
    uint64_t v16 = v7;
    char v17 = v8;
    memcpy(v18, v11, sizeof(v18));
    nullsub_1(v12);
  }
  else
  {
    sub_24F8CD450(v12);
  }
  return sub_24F77A91C((uint64_t)v12, a2, &qword_26B1F5668);
}

void *sub_24F8CBEFC@<X0>(void *__src@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  long long v8 = *(_OWORD *)&__dst[1];
  uint64_t v3 = __dst[3];
  uint64_t v4 = __dst[4];
  char v5 = __dst[5];
  char v6 = __dst[0];
  memcpy(v9, &__dst[6], sizeof(v9));
  sub_24F8CC9B4((uint64_t)__dst);
  sub_24F8C8E2C(__srca, MEMORY[0x263F8EE78]);
  sub_24F8CBAD0(&__dst[6]);
  memcpy(&v12[7], __srca, 0xA8uLL);
  *(unsigned char *)a2 = v6;
  *(_OWORD *)(a2 + 8) = v8;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  *(unsigned char *)(a2 + 40) = v5;
  return memcpy((void *)(a2 + 41), v12, 0xAFuLL);
}

uint64_t sub_24F8CBFE4()
{
  uint64_t v0 = sub_24F8CFA50();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_24F8CC038(char a1)
{
  if (a1) {
    return 1313427274;
  }
  else {
    return 0x494F4A205446454CLL;
  }
}

uint64_t sub_24F8CC06C(char *a1, char *a2)
{
  return sub_24F7DA898(*a1, *a2);
}

uint64_t sub_24F8CC078()
{
  return sub_24F8A2448();
}

uint64_t sub_24F8CC080()
{
  return sub_24F8A27D4();
}

uint64_t sub_24F8CC088()
{
  return sub_24F8A2A70();
}

uint64_t sub_24F8CC090@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F8CBFE4();
  *a1 = result;
  return result;
}

uint64_t sub_24F8CC0C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F8CC038(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24F8CC0EC(uint64_t a1, uint64_t a2, char a3)
{
  void (*v6)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unsigned char *__return_ptr);
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unsigned char *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (**v24)(unsigned char *__return_ptr);
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  void (*v33)(unsigned char *__return_ptr);
  uint64_t v34;
  int v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  void v41[21];
  unsigned char v42[216];
  unsigned char v43[216];
  unsigned char v44[232];
  __n128 v45[10];
  unsigned char v46[168];
  void v47[21];
  uint64_t v48;
  uint64_t v49;

  unsigned int v5 = *v3;
  char v6 = (void (*)(void *__return_ptr, uint64_t, uint64_t))*((void *)v3 + 1);
  uint64_t v7 = *((void *)v3 + 3);
  uint64_t v37 = *((void *)v3 + 4);
  uint64_t v35 = (char)v3[40];
  uint64_t v40 = *((void *)v3 + 8);
  uint64_t v33 = (void (*)(unsigned char *__return_ptr))*((void *)v3 + 12);
  uint64_t v34 = *((void *)v3 + 2);
  uint64_t v31 = *((void *)v3 + 16);
  uint64_t v38 = *((void *)v3 + 17);
  if (v5 == 1 && (a3 & 1) == 0)
  {
    uint64_t result = sub_24F8CF9D0();
    __break(1u);
  }
  else
  {
    uint64_t v9 = *((void *)v3 + 6);
    long long v8 = *((void *)v3 + 7);
    *(void *)uint64_t v44 = 0;
    *(void *)&v44[8] = 0xE000000000000000;
    sub_24F8CEEB0();
    swift_bridgeObjectRelease();
    sub_24F8CEEB0();
    sub_24F8C7E0C(a1, v9, v8, v40);
    if (v4)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = v5;
      sub_24F8CEEB0();
      swift_bridgeObjectRelease();
      int v48 = *(void *)v44;
      uint64_t v49 = *(void *)&v44[8];
      swift_retain();
      sub_24F799140((uint64_t)v6, v34, v7, v37, v35);
      uint64_t v11 = sub_24F829230();
      if (v35 < 0)
      {
        swift_retain();
        v6(v47, a2, v40);
        sub_24F7AD3A0((uint64_t)v6, v34, v7, v37, v35);
        sub_24F7AD3A0((uint64_t)v6, v34, v7, v37, v35);
        swift_release();
      }
      else
      {
        *(void *)long long v42 = v6;
        *(void *)&v42[8] = v34;
        *(void *)&v42[16] = v7;
        *(void *)&v42[24] = v37;
        v42[32] = v35 & 1;
        sub_24F829718();
        uint64_t v12 = sub_24F800E40(v11);
        swift_bridgeObjectRelease();
        sub_24F8070F8(a2, v40, v12, v43);
        swift_bridgeObjectRelease();
        sub_24F7AD3A0((uint64_t)v6, v34, v7, v37, v35);
        swift_release();
        memcpy(v44, v43, 0xA3uLL);
        nullsub_1(v44);
        sub_24F77A91C((uint64_t)v44, (uint64_t)v47, qword_26B1F7458);
      }
      sub_24F77A91C((uint64_t)v47, (uint64_t)v45, qword_26B1F7458);
      sub_24F77A91C((uint64_t)v45, (uint64_t)v46, qword_26B1F7458);
      uint64_t v13 = v33;
      if (sub_24F7996B8((uint64_t)v46) != 1)
      {
        sub_24F77A91C((uint64_t)v45, (uint64_t)v44, qword_26B1F7458);
        sub_24F8CCD38((__n128 *)v44);
        sub_24F7878C8();
        uint64_t v14 = v16;
        char v17 = *(void *)(v16 + 16);
        uint64_t v18 = (unsigned char *)(v17 + 1);
        if (v17 >= *(void *)(v16 + 24) >> 1) {
          goto LABEL_31;
        }
        goto LABEL_11;
      }
      uint64_t v14 = MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)v40;
      while (1)
      {
        if (v13)
        {
          sub_24F829230();
          v13(v44);
          swift_release();
          memcpy(v42, v44, 0xA3uLL);
          memcpy(v41, v44, 0xA3uLL);
          sub_24F814C38(v15, v43);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24F7878C8();
            uint64_t v14 = v29;
          }
          uint64_t v19 = *(void *)(v14 + 16);
          if (v19 >= *(void *)(v14 + 24) >> 1)
          {
            sub_24F7878C8();
            uint64_t v14 = v30;
          }
          *(void *)(v14 + 16) = v19 + 1;
          memcpy((void *)(v14 + 168 * v19 + 32), v43, 0xA3uLL);
          sub_24F8CCD38((__n128 *)v42);
        }
        if (*(void *)(v14 + 16))
        {
          char v20 = sub_24F8CEEB0();
          *(void *)long long v42 = 4476481;
          *(void *)&v42[8] = 0xE300000000000000;
          *(_OWORD *)&v42[16] = xmmword_24F8DF640;
          *(_WORD *)&v42[32] = 256;
          v42[34] = 0;
          MEMORY[0x270FA5388](v20);
          sub_24F781274(&qword_26B1F5970);
          sub_24F778988((unint64_t *)&qword_26B1F5978, &qword_26B1F5970);
          swift_getKeyPath();
          swift_retain();
          sub_24F8C4C14();
          uint64_t v22 = v21;
          swift_release();
          sub_24F816D90((uint64_t)v42, v22, v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          memcpy(v44, v43, 0xA3uLL);
          memcpy(v42, v43, 0xA3uLL);
          sub_24F76D734(a1, 0);
          sub_24F8CCD38((__n128 *)v44);
          sub_24F8CEEB0();
        }
        swift_bridgeObjectRelease();
        uint64_t v23 = *(void *)(v31 + 16);
        uint64_t v18 = (unsigned char *)v38;
        if (!v23) {
          break;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!*(void *)(v38 + 16))
        {
LABEL_26:
          __break(1u);
          break;
        }
        uint64_t v24 = (void (**)(unsigned char *__return_ptr))(v31 + 40);
        char v17 = (unint64_t)&v44[16];
        while (1)
        {
          uint64_t v25 = (uint64_t)*(v24 - 1);
          uint64_t v13 = *v24;
          swift_bridgeObjectRetain_n();
          uint64_t v26 = sub_24F782950();
          if ((v27 & 1) == 0) {
            break;
          }
          memcpy(v43, (const void *)(*((void *)v18 + 7) + 216 * v26), sizeof(v43));
          sub_24F8CC9B4((uint64_t)v43);
          swift_bridgeObjectRelease();
          *(void *)uint64_t v44 = v25;
          *(void *)&v44[8] = v13;
          memcpy(&v44[16], v43, 0xD8uLL);
          sub_24F8CC9B4((uint64_t)v43);
          sub_24F8CCAA8((uint64_t)v44);
          v41[0] = 0;
          v41[1] = 0xE000000000000000;
          sub_24F8CEEB0();
          memcpy(v42, v43, sizeof(v42));
          sub_24F8CC0EC(a1, v40, v32);
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          sub_24F8CEEB0();
          swift_bridgeObjectRelease();
          sub_24F8CCBC0((uint64_t)v43);
          if (!--v23)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v48;
          }
          v24 += 2;
          uint64_t v18 = (unsigned char *)v38;
          if (!*(void *)(v38 + 16)) {
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_31:
        sub_24F7878C8();
        uint64_t v14 = v28;
LABEL_11:
        uint64_t v15 = (void *)v40;
        *(void *)(v14 + 16) = v18;
        memcpy((void *)(v14 + 168 * v17 + 32), v46, 0xA3uLL);
        sub_24F8CCD38(v45);
      }
      swift_release();
      return v48;
    }
  }
  return result;
}

uint64_t sub_24F8CC9B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v5 = *(void *)(a1 + 160);
  sub_24F799140(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_24F78C440(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F78C440(v3);
  sub_24F78C440(v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24F8CCAA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v9 = *(void *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 176);
  char v7 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRelease();
  sub_24F7AD3A0(v2, v3, v4, v5, v7);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F787238(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F787238(v9);
  sub_24F787238(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24F8CCBC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v5 = *(void *)(a1 + 160);
  sub_24F7AD3A0(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F787238(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24F787238(v3);
  sub_24F787238(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24F8CCCB4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21)
{
  BOOL v22 = a9 >> 1 != 0xFFFFFFFF || a14 > 1;
  if (v22 || (a21 & 0xFE7E00) != 0)
  {
    return sub_24F76C98C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21);
  }
  return result;
}

uint64_t sub_24F8CCD38(__n128 *a1)
{
  sub_24F773BC8(a1);
  sub_24F77294C();
  v2();
  return v1;
}

uint64_t sub_24F8CCD8C()
{
  return 24;
}

__n128 sub_24F8CCD98(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_24F8CCDAC(__n128 *a1)
{
  sub_24F77ECD0(a1);
  sub_24F77294C();
  v2();
  return v1;
}

uint64_t sub_24F8CCDF4(int a1, int a2, uint64_t *a3)
{
  return sub_24F8C97B4(a1, a2, a3);
}

uint64_t sub_24F8CCE10(__n128 *a1)
{
  sub_24F773BC8(a1);
  sub_24F77294C();
  v2();
  return v1;
}

void sub_24F8CCE58(uint64_t a1)
{
  *(void *)a1 = 1;
  bzero((void *)(a1 + 8), 0x98uLL);
  *(unsigned char *)(a1 + 162) = -88;
  *(_WORD *)(a1 + 160) = 0;
}

void *sub_24F8CCE94(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[12];
  uint64_t v5 = a1[14];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_24F78C440(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F78C440(v3);
  sub_24F78C440(v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24F8CCF80()
{
  unsigned int v22 = *(unsigned __int16 *)(v0 + 176) | (*(unsigned __int8 *)(v0 + 178) << 16);
  uint64_t v20 = *(void *)(v0 + 160);
  uint64_t v21 = *(void *)(v0 + 168);
  sub_24F77294C();
  sub_24F76C98C(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return swift_deallocObject();
}

void *sub_24F8CCFF4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X2>, void *(*a4)(uint64_t *__return_ptr)@<X3>, void *a5@<X8>)
{
  __n128 result = sub_24F80154C(a1, a2, a3, a4);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

uint64_t sub_24F8CD020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F801A74();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_24F8CD050()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F8CD088@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F8CD020(a1);
}

uint64_t sub_24F8CD0A4()
{
  _s12GRDBInternal13DatabaseEventVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24F8CD0E4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F8CBD8C(a1, v2, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_24F8C46DC, a2);
}

void *sub_24F8CD118()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v2;
  void *(*v3)(uint64_t *__return_ptr);
  void *v4;

  sub_24F785640();
  return sub_24F8CCFF4(v0, v1, v2, v3, v4);
}

void *sub_24F8CD138()
{
  void *(*v3)(void *__return_ptr);

  sub_24F785640();
  return sub_24F801564(v0, v1, v2, v3);
}

uint64_t sub_24F8CD154@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F8CBD8C(a1, v2, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_24F8C39F0, a2);
}

void *sub_24F8CD188@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  return sub_24F814C38(v2, a2);
}

uint64_t sub_24F8CD1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a8)
  {
    sub_24F799140(a2, a3, a4, a5, a6);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_24F78C440(a13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24F78C440(a19);
    sub_24F78C440(a21);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24F8CD2F4(__n128 *a1)
{
  sub_24F77ECD0(a1);
  sub_24F77294C();
  v2();
  return v1;
}

uint64_t sub_24F8CD344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a8)
  {
    sub_24F7AD3A0(a2, a3, a4, a5, a6);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_24F787238(a13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24F787238(a19);
    sub_24F787238(a21);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24F8CD450(void *a1)
{
}

uint64_t sub_24F8CD458@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24F803950(a1, v2, a2);
}

void *sub_24F8CD478()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v2;
  void *(*v3)(uint64_t *__return_ptr);
  void *v4;

  sub_24F785640();
  return sub_24F808C64(v0, v1, v2, v3, v4);
}

uint64_t destroy for SQLQualifiedJoin(uint64_t a1)
{
  sub_24F7AD3A0(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 96)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 144)) {
    swift_release();
  }
  if (*(void *)(a1 + 160)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SQLQualifiedJoin(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_24F799140(v4, v5, v6, v7, v8);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v9)
  {
    uint64_t v12 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v9;
    *(void *)(a1 + 104) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  }
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13)
  {
    uint64_t v15 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v13;
    *(void *)(a1 + 152) = v15;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  }
  uint64_t v16 = *(void *)(a2 + 160);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v16;
    *(void *)(a1 + 168) = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  uint64_t v18 = *(void *)(a2 + 200);
  uint64_t v19 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = v18;
  *(void *)(a1 + 208) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLQualifiedJoin(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_24F799140(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v13 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_24F7AD3A0(v9, v10, v11, v12, v13);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v14 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = *(void *)(a1 + 96);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  if (v15)
  {
    if (v16)
    {
      uint64_t v17 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = v16;
      *(void *)(a1 + 104) = v17;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_24F7783C0(a1 + 96, &qword_269A2A6A0);
  }
  else if (v16)
  {
    uint64_t v18 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v16;
    *(void *)(a1 + 104) = v18;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
LABEL_8:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 144);
  if (*(void *)(a1 + 144))
  {
    if (v19)
    {
      uint64_t v20 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = v19;
      *(void *)(a1 + 152) = v20;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_24F7783C0(a1 + 144, qword_269A2A6A8);
  }
  else if (v19)
  {
    uint64_t v21 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v19;
    *(void *)(a1 + 152) = v21;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
LABEL_15:
  uint64_t v22 = *(void *)(a2 + 160);
  if (!*(void *)(a1 + 160))
  {
    if (v22)
    {
      uint64_t v24 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = v22;
      *(void *)(a1 + 168) = v24;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    goto LABEL_22;
  }
  if (!v22)
  {
    sub_24F7783C0(a1 + 160, &qword_269A2A6A0);
    goto LABEL_21;
  }
  uint64_t v23 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = v22;
  *(void *)(a1 + 168) = v23;
  swift_retain();
  swift_release();
LABEL_22:
  long long v25 = *(_OWORD *)(a2 + 176);
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = v25;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for SQLQualifiedJoin(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD8uLL);
}

uint64_t assignWithTake for SQLQualifiedJoin(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_24F7AD3A0(v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  uint64_t v11 = *(void *)(a2 + 96);
  uint64_t v12 = *(void *)(a1 + 96);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  if (v12)
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = v11;
      *(void *)(a1 + 104) = v13;
      swift_release();
      goto LABEL_6;
    }
    sub_24F7783C0(a1 + 96, &qword_269A2A6A0);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
LABEL_6:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 144);
  if (*(void *)(a1 + 144))
  {
    if (v14)
    {
      uint64_t v15 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = v14;
      *(void *)(a1 + 152) = v15;
      swift_release();
      goto LABEL_11;
    }
    sub_24F7783C0(a1 + 144, qword_269A2A6A8);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
LABEL_11:
  uint64_t v16 = *(void *)(a2 + 160);
  if (!*(void *)(a1 + 160))
  {
LABEL_15:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    goto LABEL_16;
  }
  if (!v16)
  {
    sub_24F7783C0(a1 + 160, &qword_269A2A6A0);
    goto LABEL_15;
  }
  uint64_t v17 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = v16;
  *(void *)(a1 + 168) = v17;
  swift_release();
LABEL_16:
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLQualifiedJoin(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 216))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLQualifiedJoin(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLQualifiedJoin()
{
  return &type metadata for SQLQualifiedJoin;
}

uint64_t destroy for SQLQualifiedRelation(void *a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (a1[6]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[12]) {
    swift_release();
  }
  if (a1[14]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SQLQualifiedRelation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v7;
  }
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v9;
    *(void *)(a1 + 104) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  }
  uint64_t v12 = *(void *)(a2 + 112);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v12;
    *(void *)(a1 + 120) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  uint64_t v14 = *(void *)(a2 + 152);
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v14;
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLQualifiedRelation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a1 + 48);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  if (v5)
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v6;
      *(void *)(a1 + 56) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_24F7783C0(a1 + 48, &qword_269A2A6A0);
  }
  else if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v9)
    {
      uint64_t v10 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = v9;
      *(void *)(a1 + 104) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_24F7783C0(a1 + 96, qword_269A2A6A8);
  }
  else if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v9;
    *(void *)(a1 + 104) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
LABEL_15:
  uint64_t v12 = *(void *)(a2 + 112);
  if (!*(void *)(a1 + 112))
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = v12;
      *(void *)(a1 + 120) = v14;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    goto LABEL_22;
  }
  if (!v12)
  {
    sub_24F7783C0(a1 + 112, &qword_269A2A6A0);
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 120) = v13;
  swift_retain();
  swift_release();
LABEL_22:
  long long v15 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = v15;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for SQLQualifiedRelation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t assignWithTake for SQLQualifiedRelation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a1 + 48);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (v6)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v5;
      *(void *)(a1 + 56) = v7;
      swift_release();
      goto LABEL_6;
    }
    sub_24F7783C0(a1 + 48, &qword_269A2A6A0);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = v8;
      *(void *)(a1 + 104) = v9;
      swift_release();
      goto LABEL_11;
    }
    sub_24F7783C0(a1 + 96, qword_269A2A6A8);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 112);
  if (!*(void *)(a1 + 112))
  {
LABEL_15:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    goto LABEL_16;
  }
  if (!v10)
  {
    sub_24F7783C0(a1 + 112, &qword_269A2A6A0);
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 120) = v11;
  swift_release();
LABEL_16:
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLQualifiedRelation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 168))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLQualifiedRelation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLQualifiedRelation()
{
  return &type metadata for SQLQualifiedRelation;
}

unsigned char *storeEnumTagSinglePayload for SQLQualifiedJoin.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F8CE334);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLQualifiedJoin.Kind()
{
  return &type metadata for SQLQualifiedJoin.Kind;
}

void *assignWithCopy for SQLQualifiedSource(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SQLQualifiedSource()
{
  return &type metadata for SQLQualifiedSource;
}

unint64_t sub_24F8CE3E8()
{
  unint64_t result = qword_269A2C590;
  if (!qword_269A2C590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A2C590);
  }
  return result;
}

void *sub_24F8CE434()
{
  return sub_24F8CD138();
}

void *sub_24F8CE44C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24F8CD188(a1, a2);
}

uint64_t sub_24F8CE464()
{
  return v0;
}

uint64_t sub_24F8CE478()
{
  return sub_24F8CEEB0();
}

uint64_t sub_24F8CE490()
{
  return MEMORY[0x270EEDAC8]();
}

uint64_t sub_24F8CE4A0()
{
  return MEMORY[0x270EEDD78]();
}

uint64_t sub_24F8CE4B0()
{
  return MEMORY[0x270EEDD88]();
}

uint64_t sub_24F8CE4C0()
{
  return MEMORY[0x270EEDD90]();
}

uint64_t sub_24F8CE4D0()
{
  return MEMORY[0x270EEDDA0]();
}

uint64_t sub_24F8CE4E0()
{
  return MEMORY[0x270EEDDB0]();
}

uint64_t sub_24F8CE4F0()
{
  return MEMORY[0x270EEDDB8]();
}

uint64_t sub_24F8CE500()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_24F8CE510()
{
  return MEMORY[0x270EEDDF8]();
}

uint64_t sub_24F8CE520()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_24F8CE530()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_24F8CE540()
{
  return MEMORY[0x270EEDE28]();
}

uint64_t sub_24F8CE550()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_24F8CE560()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_24F8CE570()
{
  return MEMORY[0x270EEDE98]();
}

uint64_t sub_24F8CE580()
{
  return MEMORY[0x270EEDEA0]();
}

uint64_t sub_24F8CE590()
{
  return MEMORY[0x270EEDEB0]();
}

uint64_t sub_24F8CE5A0()
{
  return MEMORY[0x270EEDEB8]();
}

uint64_t sub_24F8CE5B0()
{
  return MEMORY[0x270EEDEC8]();
}

uint64_t sub_24F8CE5C0()
{
  return MEMORY[0x270EEDED0]();
}

uint64_t sub_24F8CE5D0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_24F8CE5E0()
{
  return MEMORY[0x270EEDF08]();
}

uint64_t sub_24F8CE5F0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_24F8CE600()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_24F8CE610()
{
  return MEMORY[0x270EEE0C0]();
}

uint64_t sub_24F8CE620()
{
  return MEMORY[0x270EEE108]();
}

uint64_t sub_24F8CE630()
{
  return MEMORY[0x270EEE120]();
}

uint64_t sub_24F8CE640()
{
  return MEMORY[0x270EEE188]();
}

uint64_t sub_24F8CE650()
{
  return MEMORY[0x270EEE1A8]();
}

uint64_t sub_24F8CE660()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24F8CE670()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_24F8CE680()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_24F8CE690()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_24F8CE6A0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_24F8CE6B0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_24F8CE6C0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_24F8CE6D0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_24F8CE6E0()
{
  return MEMORY[0x270EEE6C0]();
}

uint64_t sub_24F8CE6F0()
{
  return MEMORY[0x270EEE6C8]();
}

uint64_t sub_24F8CE700()
{
  return MEMORY[0x270EEE768]();
}

uint64_t sub_24F8CE710()
{
  return MEMORY[0x270EEE780]();
}

uint64_t sub_24F8CE720()
{
  return MEMORY[0x270EEE7B8]();
}

uint64_t sub_24F8CE730()
{
  return MEMORY[0x270EEE7C8]();
}

uint64_t sub_24F8CE740()
{
  return MEMORY[0x270EEE7D8]();
}

uint64_t sub_24F8CE750()
{
  return MEMORY[0x270EEE7F0]();
}

uint64_t sub_24F8CE760()
{
  return MEMORY[0x270EEE800]();
}

uint64_t sub_24F8CE770()
{
  return MEMORY[0x270EEE810]();
}

uint64_t sub_24F8CE780()
{
  return MEMORY[0x270EEE828]();
}

uint64_t sub_24F8CE790()
{
  return MEMORY[0x270EEE838]();
}

uint64_t sub_24F8CE7A0()
{
  return MEMORY[0x270EEE848]();
}

uint64_t sub_24F8CE7B0()
{
  return MEMORY[0x270EEE850]();
}

uint64_t sub_24F8CE7C0()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_24F8CE7D0()
{
  return MEMORY[0x270EEE8D8]();
}

uint64_t sub_24F8CE7E0()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_24F8CE7F0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24F8CE800()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_24F8CE810()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24F8CE820()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_24F8CE830()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_24F8CE840()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_24F8CE850()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24F8CE860()
{
  return MEMORY[0x270EEFFE8]();
}

uint64_t sub_24F8CE870()
{
  return MEMORY[0x270EF0018]();
}

uint64_t sub_24F8CE880()
{
  return MEMORY[0x270EF0020]();
}

uint64_t sub_24F8CE890()
{
  return MEMORY[0x270EF0038]();
}

uint64_t sub_24F8CE8A0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_24F8CE8B0()
{
  return MEMORY[0x270EF00F8]();
}

uint64_t sub_24F8CE8C0()
{
  return MEMORY[0x270EF0158]();
}

uint64_t sub_24F8CE8D0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24F8CE8E0()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_24F8CE8F0()
{
  return MEMORY[0x270EF0198]();
}

uint64_t sub_24F8CE900()
{
  return MEMORY[0x270EF0238]();
}

uint64_t sub_24F8CE910()
{
  return MEMORY[0x270EF02B0]();
}

uint64_t sub_24F8CE920()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_24F8CE930()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_24F8CE940()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_24F8CE950()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_24F8CE960()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_24F8CE970()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24F8CE980()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_24F8CE990()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24F8CE9A0()
{
  return MEMORY[0x270EF0CE0]();
}

uint64_t sub_24F8CE9B0()
{
  return MEMORY[0x270EF0CF0]();
}

uint64_t sub_24F8CE9C0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24F8CE9D0()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_24F8CE9E0()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_24F8CE9F0()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24F8CEA00()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_24F8CEA10()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_24F8CEA20()
{
  return MEMORY[0x270EF1368]();
}

uint64_t sub_24F8CEA30()
{
  return MEMORY[0x270EF13C8]();
}

uint64_t sub_24F8CEA40()
{
  return MEMORY[0x270EF1410]();
}

uint64_t sub_24F8CEA50()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_24F8CEA60()
{
  return MEMORY[0x270EF15A8]();
}

uint64_t sub_24F8CEA70()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_24F8CEA80()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_24F8CEA90()
{
  return MEMORY[0x270EE3828]();
}

uint64_t sub_24F8CEAA0()
{
  return MEMORY[0x270EE3AE0]();
}

uint64_t sub_24F8CEAB0()
{
  return MEMORY[0x270EE3AE8]();
}

uint64_t sub_24F8CEAC0()
{
  return MEMORY[0x270EE3AF0]();
}

uint64_t sub_24F8CEAD0()
{
  return MEMORY[0x270EE3AF8]();
}

uint64_t sub_24F8CEAE0()
{
  return MEMORY[0x270EE3B10]();
}

uint64_t sub_24F8CEAF0()
{
  return MEMORY[0x270EE3B40]();
}

uint64_t sub_24F8CEB00()
{
  return MEMORY[0x270EE3B48]();
}

uint64_t sub_24F8CEB10()
{
  return MEMORY[0x270EE3B50]();
}

uint64_t sub_24F8CEB30()
{
  return MEMORY[0x270EE3B78]();
}

uint64_t sub_24F8CEB40()
{
  return MEMORY[0x270EE3D68]();
}

uint64_t sub_24F8CEB50()
{
  return MEMORY[0x270EE3D70]();
}

uint64_t sub_24F8CEB60()
{
  return MEMORY[0x270EE3D98]();
}

uint64_t sub_24F8CEB70()
{
  return MEMORY[0x270EE3DA0]();
}

uint64_t sub_24F8CEB80()
{
  return MEMORY[0x270EE3DF8]();
}

uint64_t sub_24F8CEB90()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_24F8CEBA0()
{
  return MEMORY[0x270EE4038]();
}

uint64_t sub_24F8CEBB0()
{
  return MEMORY[0x270FA0968]();
}

uint64_t sub_24F8CEBC0()
{
  return MEMORY[0x270FA0998]();
}

uint64_t sub_24F8CEBD0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24F8CEBE0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24F8CEBF0()
{
  return MEMORY[0x270FA0A00]();
}

uint64_t sub_24F8CEC00()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24F8CEC10()
{
  return MEMORY[0x270FA0A80]();
}

uint64_t sub_24F8CEC20()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_24F8CEC30()
{
  return MEMORY[0x270F9CFB0]();
}

uint64_t sub_24F8CEC40()
{
  return MEMORY[0x270F9CFC8]();
}

uint64_t sub_24F8CEC50()
{
  return MEMORY[0x270F9D070]();
}

uint64_t sub_24F8CEC60()
{
  return MEMORY[0x270F9D088]();
}

uint64_t sub_24F8CEC70()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_24F8CEC80()
{
  return MEMORY[0x270F9D0B0]();
}

uint64_t sub_24F8CECA0()
{
  return MEMORY[0x270F9D190]();
}

uint64_t sub_24F8CECB0()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_24F8CECD0()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_24F8CECE0()
{
  return MEMORY[0x270F9D220]();
}

uint64_t sub_24F8CECF0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24F8CED00()
{
  return MEMORY[0x270F9D360]();
}

uint64_t sub_24F8CED10()
{
  return MEMORY[0x270F9D368]();
}

uint64_t sub_24F8CED20()
{
  return MEMORY[0x270F9D3C8]();
}

uint64_t sub_24F8CED30()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24F8CED40()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_24F8CED50()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24F8CED60()
{
  return MEMORY[0x270EF1898]();
}

uint64_t sub_24F8CED70()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24F8CED80()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24F8CED90()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_24F8CEDA0()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_24F8CEDB0()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_24F8CEDC0()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_24F8CEDD0()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_24F8CEDE0()
{
  return MEMORY[0x270EF1B18]();
}

uint64_t sub_24F8CEDF0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24F8CEE00()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24F8CEE10()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_24F8CEE20()
{
  return MEMORY[0x270F9D610]();
}

uint64_t sub_24F8CEE30()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_24F8CEE40()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_24F8CEE50()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24F8CEE60()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_24F8CEE70()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_24F8CEE80()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_24F8CEE90()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_24F8CEEA0()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_24F8CEEB0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24F8CEEC0()
{
  return MEMORY[0x270F9D7A0]();
}

uint64_t sub_24F8CEED0()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_24F8CEEE0()
{
  return MEMORY[0x270F9D7C8]();
}

uint64_t sub_24F8CEEF0()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_24F8CEF00()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24F8CEF10()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_24F8CEF20()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_24F8CEF30()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_24F8CEF40()
{
  return MEMORY[0x270F9D830]();
}

uint64_t sub_24F8CEF50()
{
  return MEMORY[0x270F9D840]();
}

uint64_t sub_24F8CEF60()
{
  return MEMORY[0x270F9D850]();
}

uint64_t sub_24F8CEF70()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_24F8CEF80()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_24F8CEF90()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24F8CEFA0()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24F8CEFB0()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_24F8CEFC0()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_24F8CEFD0()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_24F8CEFE0()
{
  return MEMORY[0x270F9D948]();
}

uint64_t sub_24F8CEFF0()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_24F8CF000()
{
  return MEMORY[0x270F9D980]();
}

uint64_t sub_24F8CF010()
{
  return MEMORY[0x270F9D988]();
}

uint64_t sub_24F8CF020()
{
  return MEMORY[0x270F9D9A8]();
}

uint64_t sub_24F8CF030()
{
  return MEMORY[0x270F9D9C0]();
}

uint64_t sub_24F8CF040()
{
  return MEMORY[0x270F9DA20]();
}

uint64_t sub_24F8CF050()
{
  return MEMORY[0x270F9DA28]();
}

uint64_t sub_24F8CF060()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_24F8CF070()
{
  return MEMORY[0x270F9DA78]();
}

uint64_t sub_24F8CF080()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24F8CF090()
{
  return MEMORY[0x270F9DBA8]();
}

uint64_t sub_24F8CF0A0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24F8CF0B0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24F8CF0C0()
{
  return MEMORY[0x270F9DBC8]();
}

uint64_t sub_24F8CF0D0()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_24F8CF0E0()
{
  return MEMORY[0x270F9DBE0]();
}

uint64_t sub_24F8CF0F0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24F8CF100()
{
  return MEMORY[0x270F9DC08]();
}

uint64_t sub_24F8CF110()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_24F8CF120()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24F8CF130()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_24F8CF140()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24F8CF150()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_24F8CF160()
{
  return MEMORY[0x270F9DC68]();
}

uint64_t sub_24F8CF170()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_24F8CF180()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_24F8CF190()
{
  return MEMORY[0x270F9DCB0]();
}

uint64_t sub_24F8CF1A0()
{
  return MEMORY[0x270F9DCB8]();
}

uint64_t sub_24F8CF1B0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24F8CF1C0()
{
  return MEMORY[0x270F9DCF8]();
}

uint64_t sub_24F8CF1D0()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_24F8CF1E0()
{
  return MEMORY[0x270F9DD10]();
}

uint64_t sub_24F8CF1F0()
{
  return MEMORY[0x270F9DD28]();
}

uint64_t sub_24F8CF200()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24F8CF220()
{
  return MEMORY[0x270FA20B8]();
}

uint64_t sub_24F8CF230()
{
  return MEMORY[0x270FA20C0]();
}

uint64_t sub_24F8CF240()
{
  return MEMORY[0x270FA20C8]();
}

uint64_t sub_24F8CF250()
{
  return MEMORY[0x270FA20D8]();
}

uint64_t sub_24F8CF260()
{
  return MEMORY[0x270FA20E0]();
}

uint64_t sub_24F8CF270()
{
  return MEMORY[0x270FA20E8]();
}

uint64_t sub_24F8CF280()
{
  return MEMORY[0x270FA20F0]();
}

uint64_t sub_24F8CF2A0()
{
  return MEMORY[0x270FA2108]();
}

uint64_t sub_24F8CF2B0()
{
  return MEMORY[0x270FA2118]();
}

uint64_t sub_24F8CF2C0()
{
  return MEMORY[0x270FA2120]();
}

uint64_t sub_24F8CF2D0()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_24F8CF2E0()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_24F8CF2F0()
{
  return MEMORY[0x270F9DDF0]();
}

uint64_t sub_24F8CF300()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24F8CF310()
{
  return MEMORY[0x270F9DF58]();
}

uint64_t sub_24F8CF320()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_24F8CF330()
{
  return MEMORY[0x270F9DFE8]();
}

uint64_t sub_24F8CF340()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_24F8CF350()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_24F8CF360()
{
  return MEMORY[0x270F9E0C8]();
}

uint64_t sub_24F8CF370()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_24F8CF380()
{
  return MEMORY[0x270F9E0F0]();
}

uint64_t sub_24F8CF3A0()
{
  return MEMORY[0x270F9E110]();
}

uint64_t sub_24F8CF3B0()
{
  return MEMORY[0x270F9E118]();
}

uint64_t sub_24F8CF3C0()
{
  return MEMORY[0x270F9E120]();
}

uint64_t sub_24F8CF3E0()
{
  return MEMORY[0x270F9E138]();
}

uint64_t sub_24F8CF3F0()
{
  return MEMORY[0x270F9E148]();
}

uint64_t sub_24F8CF400()
{
  return MEMORY[0x270F9E150]();
}

uint64_t sub_24F8CF410()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_24F8CF420()
{
  return MEMORY[0x270F9E180]();
}

uint64_t sub_24F8CF430()
{
  return MEMORY[0x270F9E1B8]();
}

uint64_t sub_24F8CF440()
{
  return MEMORY[0x270F9E1D0]();
}

uint64_t sub_24F8CF450()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_24F8CF460()
{
  return MEMORY[0x270F9E208]();
}

uint64_t sub_24F8CF470()
{
  return MEMORY[0x270F9E218]();
}

uint64_t sub_24F8CF480()
{
  return MEMORY[0x270F9E230]();
}

uint64_t sub_24F8CF490()
{
  return MEMORY[0x270F9E2F8]();
}

uint64_t sub_24F8CF4A0()
{
  return MEMORY[0x270EF1D50]();
}

uint64_t sub_24F8CF4B0()
{
  return MEMORY[0x270FA0C10]();
}

uint64_t sub_24F8CF4C0()
{
  return MEMORY[0x270FA0C38]();
}

uint64_t sub_24F8CF4D0()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_24F8CF4E0()
{
  return MEMORY[0x270FA0CA8]();
}

uint64_t sub_24F8CF4F0()
{
  return MEMORY[0x270FA0CB0]();
}

uint64_t sub_24F8CF500()
{
  return MEMORY[0x270FA0CC0]();
}

uint64_t sub_24F8CF510()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_24F8CF520()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_24F8CF530()
{
  return MEMORY[0x270FA0D60]();
}

uint64_t sub_24F8CF540()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_24F8CF550()
{
  return MEMORY[0x270FA0D78]();
}

uint64_t sub_24F8CF560()
{
  return MEMORY[0x270FA0D88]();
}

uint64_t sub_24F8CF570()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24F8CF580()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_24F8CF590()
{
  return MEMORY[0x270FA0F00]();
}

uint64_t sub_24F8CF5A0()
{
  return MEMORY[0x270FA0F10]();
}

uint64_t sub_24F8CF5B0()
{
  return MEMORY[0x270FA0F28]();
}

uint64_t sub_24F8CF5C0()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_24F8CF5D0()
{
  return MEMORY[0x270EF2210]();
}

uint64_t sub_24F8CF5E0()
{
  return MEMORY[0x270EF22C0]();
}

uint64_t sub_24F8CF5F0()
{
  return MEMORY[0x270EF22F0]();
}

uint64_t sub_24F8CF600()
{
  return MEMORY[0x270EF2300]();
}

uint64_t sub_24F8CF610()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24F8CF620()
{
  return MEMORY[0x270F9E468]();
}

uint64_t sub_24F8CF630()
{
  return MEMORY[0x270F9E4A0]();
}

uint64_t sub_24F8CF640()
{
  return MEMORY[0x270F9E4F8]();
}

uint64_t sub_24F8CF650()
{
  return MEMORY[0x270F9E508]();
}

uint64_t sub_24F8CF660()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_24F8CF670()
{
  return MEMORY[0x270EF2410]();
}

uint64_t sub_24F8CF680()
{
  return MEMORY[0x270EF2448]();
}

uint64_t sub_24F8CF690()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_24F8CF6B0()
{
  return MEMORY[0x270F9E708]();
}

uint64_t sub_24F8CF6D0()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24F8CF6E0()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24F8CF6F0()
{
  return MEMORY[0x270F9E7F8]();
}

uint64_t sub_24F8CF700()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_24F8CF710()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_24F8CF720()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_24F8CF730()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_24F8CF740()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_24F8CF750()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_24F8CF760()
{
  return MEMORY[0x270F9E890]();
}

uint64_t sub_24F8CF770()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24F8CF780()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24F8CF790()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_24F8CF7A0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24F8CF7B0()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_24F8CF7C0()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_24F8CF7D0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24F8CF7E0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24F8CF7F0()
{
  return MEMORY[0x270F9E9E0]();
}

uint64_t sub_24F8CF800()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_24F8CF810()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24F8CF820()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_24F8CF830()
{
  return MEMORY[0x270F9EA68]();
}

uint64_t sub_24F8CF840()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24F8CF850()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24F8CF860()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24F8CF870()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_24F8CF880()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_24F8CF890()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_24F8CF8A0()
{
  return MEMORY[0x270F9EC00]();
}

uint64_t sub_24F8CF8B0()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_24F8CF8C0()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_24F8CF8D0()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_24F8CF8E0()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_24F8CF8F0()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_24F8CF900()
{
  return MEMORY[0x270F9ECD0]();
}

uint64_t sub_24F8CF910()
{
  return MEMORY[0x270F9ED00]();
}

uint64_t sub_24F8CF920()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24F8CF930()
{
  return MEMORY[0x270F9EDB8]();
}

uint64_t sub_24F8CF940()
{
  return MEMORY[0x270F9EDC0]();
}

uint64_t sub_24F8CF950()
{
  return MEMORY[0x270F9EDC8]();
}

uint64_t sub_24F8CF960()
{
  return MEMORY[0x270F9EDD0]();
}

uint64_t sub_24F8CF970()
{
  return MEMORY[0x270F9EDF8]();
}

uint64_t sub_24F8CF980()
{
  return MEMORY[0x270F9EF08]();
}

uint64_t sub_24F8CF990()
{
  return MEMORY[0x270F9EF18]();
}

uint64_t sub_24F8CF9A0()
{
  return MEMORY[0x270F9EF20]();
}

uint64_t sub_24F8CF9B0()
{
  return MEMORY[0x270F9EF28]();
}

uint64_t sub_24F8CF9C0()
{
  return MEMORY[0x270F9EF40]();
}

uint64_t sub_24F8CF9D0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24F8CF9E0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24F8CF9F0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24F8CFA00()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24F8CFA10()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24F8CFA20()
{
  return MEMORY[0x270F9F0D0]();
}

uint64_t sub_24F8CFA30()
{
  return MEMORY[0x270F9F148]();
}

uint64_t sub_24F8CFA40()
{
  return MEMORY[0x270F9F210]();
}

uint64_t sub_24F8CFA50()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24F8CFA60()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24F8CFA70()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24F8CFA80()
{
  return MEMORY[0x270F9F380]();
}

uint64_t sub_24F8CFA90()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24F8CFAA0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24F8CFAB0()
{
  return MEMORY[0x270F9F4B0]();
}

uint64_t sub_24F8CFAC0()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_24F8CFAD0()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_24F8CFAE0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24F8CFAF0()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_24F8CFB00()
{
  return MEMORY[0x270F9F5B0]();
}

uint64_t sub_24F8CFB10()
{
  return MEMORY[0x270F9F5B8]();
}

uint64_t sub_24F8CFB20()
{
  return MEMORY[0x270F9F5C0]();
}

uint64_t sub_24F8CFB30()
{
  return MEMORY[0x270F9F5C8]();
}

uint64_t sub_24F8CFB40()
{
  return MEMORY[0x270F9F5D0]();
}

uint64_t sub_24F8CFB50()
{
  return MEMORY[0x270F9F5D8]();
}

uint64_t sub_24F8CFB60()
{
  return MEMORY[0x270F9F5E0]();
}

uint64_t sub_24F8CFB70()
{
  return MEMORY[0x270F9F5E8]();
}

uint64_t sub_24F8CFB80()
{
  return MEMORY[0x270F9F5F0]();
}

uint64_t sub_24F8CFB90()
{
  return MEMORY[0x270F9F5F8]();
}

uint64_t sub_24F8CFBA0()
{
  return MEMORY[0x270F9F688]();
}

uint64_t sub_24F8CFBB0()
{
  return MEMORY[0x270F9F690]();
}

uint64_t sub_24F8CFBC0()
{
  return MEMORY[0x270F9F698]();
}

uint64_t sub_24F8CFBD0()
{
  return MEMORY[0x270F9F6A0]();
}

uint64_t sub_24F8CFBE0()
{
  return MEMORY[0x270F9F6A8]();
}

uint64_t sub_24F8CFBF0()
{
  return MEMORY[0x270F9F6B0]();
}

uint64_t sub_24F8CFC00()
{
  return MEMORY[0x270F9F6B8]();
}

uint64_t sub_24F8CFC10()
{
  return MEMORY[0x270F9F6C0]();
}

uint64_t sub_24F8CFC20()
{
  return MEMORY[0x270F9F6C8]();
}

uint64_t sub_24F8CFC30()
{
  return MEMORY[0x270F9F6D0]();
}

uint64_t sub_24F8CFC40()
{
  return MEMORY[0x270F9F6D8]();
}

uint64_t sub_24F8CFC50()
{
  return MEMORY[0x270F9F6E0]();
}

uint64_t sub_24F8CFC60()
{
  return MEMORY[0x270F9F6E8]();
}

uint64_t sub_24F8CFC70()
{
  return MEMORY[0x270F9F6F0]();
}

uint64_t sub_24F8CFC80()
{
  return MEMORY[0x270F9F6F8]();
}

uint64_t sub_24F8CFC90()
{
  return MEMORY[0x270F9F700]();
}

uint64_t sub_24F8CFCA0()
{
  return MEMORY[0x270F9F708]();
}

uint64_t sub_24F8CFCB0()
{
  return MEMORY[0x270F9F710]();
}

uint64_t sub_24F8CFCC0()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_24F8CFCD0()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_24F8CFCE0()
{
  return MEMORY[0x270F9F778]();
}

uint64_t sub_24F8CFCF0()
{
  return MEMORY[0x270F9F7C8]();
}

uint64_t sub_24F8CFD00()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24F8CFD10()
{
  return MEMORY[0x270F9F7E8]();
}

uint64_t sub_24F8CFD20()
{
  return MEMORY[0x270F9F860]();
}

uint64_t sub_24F8CFD30()
{
  return MEMORY[0x270F9F868]();
}

uint64_t sub_24F8CFD40()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_24F8CFD50()
{
  return MEMORY[0x270F9F8F8]();
}

uint64_t sub_24F8CFD60()
{
  return MEMORY[0x270F9F900]();
}

uint64_t sub_24F8CFD70()
{
  return MEMORY[0x270F9F908]();
}

uint64_t sub_24F8CFD80()
{
  return MEMORY[0x270F9F910]();
}

uint64_t sub_24F8CFD90()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_24F8CFDA0()
{
  return MEMORY[0x270F9F960]();
}

uint64_t sub_24F8CFDB0()
{
  return MEMORY[0x270F9F968]();
}

uint64_t sub_24F8CFDC0()
{
  return MEMORY[0x270F9F9B0]();
}

uint64_t sub_24F8CFDD0()
{
  return MEMORY[0x270F9F9B8]();
}

uint64_t sub_24F8CFDE0()
{
  return MEMORY[0x270F9F9C0]();
}

uint64_t sub_24F8CFDF0()
{
  return MEMORY[0x270F9F9C8]();
}

uint64_t sub_24F8CFE00()
{
  return MEMORY[0x270F9F9D0]();
}

uint64_t sub_24F8CFE10()
{
  return MEMORY[0x270F9F9D8]();
}

uint64_t sub_24F8CFE20()
{
  return MEMORY[0x270F9F9E0]();
}

uint64_t sub_24F8CFE30()
{
  return MEMORY[0x270F9F9E8]();
}

uint64_t sub_24F8CFE40()
{
  return MEMORY[0x270F9F9F0]();
}

uint64_t sub_24F8CFE50()
{
  return MEMORY[0x270F9F9F8]();
}

uint64_t sub_24F8CFE60()
{
  return MEMORY[0x270F9FA00]();
}

uint64_t sub_24F8CFE70()
{
  return MEMORY[0x270F9FA08]();
}

uint64_t sub_24F8CFE80()
{
  return MEMORY[0x270F9FA10]();
}

uint64_t sub_24F8CFE90()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24F8CFEA0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24F8CFED0()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24F8CFEE0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24F8CFEF0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24F8CFF00()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24F8CFF10()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_24F8CFF20()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_24F8CFF30()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24F8CFF40()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24F8CFF50()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24F8CFF60()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_24F8CFF70()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_24F8CFF80()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24F8CFF90()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_24F8CFFA0()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_24F8CFFB0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24F8CFFC0()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_24F8CFFD0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24F8CFFE0()
{
  return MEMORY[0x270FA0090]();
}

uint64_t sub_24F8CFFF0()
{
  return MEMORY[0x270FA0098]();
}

uint64_t sub_24F8D0020()
{
  return MEMORY[0x270FA0128]();
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x270EF2C48]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x270FA0150]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void *__cdecl sqlite3_aggregate_context(sqlite3_context *a1, int nBytes)
{
  return (void *)MEMORY[0x270F9B460](a1, *(void *)&nBytes);
}

int sqlite3_backup_finish(sqlite3_backup *p)
{
  return MEMORY[0x270F9B468](p);
}

sqlite3_backup *__cdecl sqlite3_backup_init(sqlite3 *pDest, const char *zDestName, sqlite3 *pSource, const char *zSourceName)
{
  return (sqlite3_backup *)MEMORY[0x270F9B470](pDest, zDestName, pSource, zSourceName);
}

int sqlite3_backup_pagecount(sqlite3_backup *p)
{
  return MEMORY[0x270F9B478](p);
}

int sqlite3_backup_remaining(sqlite3_backup *p)
{
  return MEMORY[0x270F9B480](p);
}

int sqlite3_backup_step(sqlite3_backup *p, int nPage)
{
  return MEMORY[0x270F9B488](p, *(void *)&nPage);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B490](a1, *(void *)&a2, a3, *(void *)&n, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x270F9B4A0](a1, *(void *)&a2, a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x270F9B4B0](a1, *(void *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x270F9B4B8](a1, *(void *)&a2);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B4C0](a1);
}

const char *__cdecl sqlite3_bind_parameter_name(sqlite3_stmt *a1, int a2)
{
  return (const char *)MEMORY[0x270F9B4D0](a1, *(void *)&a2);
}

int sqlite3_bind_pointer(sqlite3_stmt *a1, int a2, void *a3, const char *a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B4D8](a1, *(void *)&a2, a3, a4, a5);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B4E0](a1, *(void *)&a2, a3, *(void *)&a4, a5);
}

int sqlite3_busy_handler(sqlite3 *a1, int (__cdecl *a2)(void *, int), void *a3)
{
  return MEMORY[0x270F9B530](a1, a2, a3);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return MEMORY[0x270F9B538](a1, *(void *)&ms);
}

int sqlite3_changes(sqlite3 *a1)
{
  return MEMORY[0x270F9B540](a1);
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B550](a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x270F9B558](a1);
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return MEMORY[0x270F9B560](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x270F9B568](a1, *(void *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B570](a1, *(void *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B580](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  MEMORY[0x270F9B590](a1, *(void *)&iCol);
  return result;
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5A0](a1, *(void *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x270F9B5A8](a1, *(void *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B5C0](a1, *(void *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5D0](a1, *(void *)&iCol);
}

void *__cdecl sqlite3_commit_hook(sqlite3 *a1, int (__cdecl *a2)(void *), void *a3)
{
  return (void *)MEMORY[0x270F9B5E0](a1, a2, a3);
}

int sqlite3_config(int a1, ...)
{
  return MEMORY[0x270F9B5E8](*(void *)&a1);
}

int sqlite3_create_collation_v2(sqlite3 *a1, const char *zName, int eTextRep, void *pArg, int (__cdecl *xCompare)(void *, int, const void *, int, const void *), void (__cdecl *xDestroy)(void *))
{
  return MEMORY[0x270F9B5F8](a1, zName, *(void *)&eTextRep, pArg, xCompare, xDestroy);
}

int sqlite3_create_function_v2(sqlite3 *db, const char *zFunctionName, int nArg, int eTextRep, void *pApp, void (__cdecl *xFunc)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xStep)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xFinal)(sqlite3_context *), void (__cdecl *xDestroy)(void *))
{
  return MEMORY[0x270F9B608](db, zFunctionName, *(void *)&nArg, *(void *)&eTextRep, pApp, xFunc, xStep, xFinal);
}

int sqlite3_db_config(sqlite3 *a1, int op, ...)
{
  return MEMORY[0x270F9B618](a1, *(void *)&op);
}

int sqlite3_db_release_memory(sqlite3 *a1)
{
  return MEMORY[0x270F9B638](a1);
}

int sqlite3_errcode(sqlite3 *db)
{
  return MEMORY[0x270F9B650](db);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x270F9B658](a1);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x270F9B660](*(void *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x270F9B668](a1, sql, callback, a4, errmsg);
}

int sqlite3_extended_result_codes(sqlite3 *a1, int onoff)
{
  return MEMORY[0x270F9B680](a1, *(void *)&onoff);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B690](pStmt);
}

void sqlite3_free(void *a1)
{
}

int sqlite3_get_autocommit(sqlite3 *a1)
{
  return MEMORY[0x270F9B6A0](a1);
}

void sqlite3_interrupt(sqlite3 *a1)
{
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return MEMORY[0x270F9B6D0](a1);
}

int sqlite3_libversion_number(void)
{
  return MEMORY[0x270F9B6D8]();
}

int sqlite3_limit(sqlite3 *a1, int id, int newVal)
{
  return MEMORY[0x270F9B6E0](a1, *(void *)&id, *(void *)&newVal);
}

sqlite3_stmt *__cdecl sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt)
{
  return (sqlite3_stmt *)MEMORY[0x270F9B700](pDb, pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x270F9B710](filename, ppDb, *(void *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x270F9B720](db, zSql, *(void *)&nByte, ppStmt, pzTail);
}

int sqlite3_prepare_v3(sqlite3 *db, const char *zSql, int nByte, unsigned int prepFlags, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x270F9B728](db, zSql, *(void *)&nByte, *(void *)&prepFlags, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B730](pStmt);
}

void sqlite3_result_blob(sqlite3_context *a1, const void *a2, int a3, void (__cdecl *a4)(void *))
{
}

void sqlite3_result_double(sqlite3_context *a1, double a2)
{
}

void sqlite3_result_error(sqlite3_context *a1, const char *a2, int a3)
{
}

void sqlite3_result_error_code(sqlite3_context *a1, int a2)
{
}

void sqlite3_result_int64(sqlite3_context *a1, sqlite3_int64 a2)
{
}

void sqlite3_result_null(sqlite3_context *a1)
{
}

void sqlite3_result_text(sqlite3_context *a1, const char *a2, int a3, void (__cdecl *a4)(void *))
{
}

void *__cdecl sqlite3_rollback_hook(sqlite3 *a1, void (__cdecl *a2)(void *), void *a3)
{
  return (void *)MEMORY[0x270F9B7A8](a1, a2, a3);
}

int sqlite3_set_authorizer(sqlite3 *a1, int (__cdecl *xAuth)(void *, int, const char *, const char *, const char *, const char *), void *pUserData)
{
  return MEMORY[0x270F9B7B0](a1, xAuth, pUserData);
}

int sqlite3_snapshot_cmp(sqlite3_snapshot *p1, sqlite3_snapshot *p2)
{
  return MEMORY[0x270F9B7D0](p1, p2);
}

void sqlite3_snapshot_free(sqlite3_snapshot *a1)
{
}

int sqlite3_snapshot_get(sqlite3 *db, const char *zSchema, sqlite3_snapshot **ppSnapshot)
{
  return MEMORY[0x270F9B7E0](db, zSchema, ppSnapshot);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x270F9B7F8](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B800](a1);
}

int sqlite3_stmt_busy(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B808](a1);
}

int sqlite3_stmt_readonly(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B810](pStmt);
}

int sqlite3_stricmp(const char *a1, const char *a2)
{
  return MEMORY[0x270F9B820](a1, a2);
}

int sqlite3_total_changes(sqlite3 *a1)
{
  return MEMORY[0x270F9B838](a1);
}

int sqlite3_trace_v2(sqlite3 *a1, unsigned int uMask, int (__cdecl *xCallback)(unsigned int, void *, void *, void *), void *pCtx)
{
  return MEMORY[0x270F9B840](a1, *(void *)&uMask, xCallback, pCtx);
}

void *__cdecl sqlite3_update_hook(sqlite3 *a1, void (__cdecl *a2)(void *, int, const char *, const char *, sqlite3_int64), void *a3)
{
  return (void *)MEMORY[0x270F9B850](a1, a2, a3);
}

void *__cdecl sqlite3_user_data(sqlite3_context *a1)
{
  return (void *)MEMORY[0x270F9B868](a1);
}

const void *__cdecl sqlite3_value_blob(sqlite3_value *a1)
{
  return (const void *)MEMORY[0x270F9B870](a1);
}

int sqlite3_value_bytes(sqlite3_value *a1)
{
  return MEMORY[0x270F9B878](a1);
}

double sqlite3_value_double(sqlite3_value *a1)
{
  MEMORY[0x270F9B888](a1);
  return result;
}

sqlite3_int64 sqlite3_value_int64(sqlite3_value *a1)
{
  return MEMORY[0x270F9B8A8](a1);
}

const unsigned __int8 *__cdecl sqlite3_value_text(sqlite3_value *a1)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B8C0](a1);
}

int sqlite3_value_type(sqlite3_value *a1)
{
  return MEMORY[0x270F9B8D0](a1);
}

int sqlite3_wal_checkpoint_v2(sqlite3 *db, const char *zDb, int eMode, int *pnLog, int *pnCkpt)
{
  return MEMORY[0x270F9B900](db, zDb, *(void *)&eMode, pnLog, pnCkpt);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x270FA0238]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x270FA02B0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x270FA0390]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x270FA0480]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x270FA0490]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x270FA0610]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x270FA0618]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x270FA0620]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}