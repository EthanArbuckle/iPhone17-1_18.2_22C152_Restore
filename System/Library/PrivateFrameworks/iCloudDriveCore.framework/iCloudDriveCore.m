uint64_t ____brc_create_section_block_invoke_2(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = __brc_create_section_lastSectionID + 1;
  v1 = *(void *)(*(void *)(result + 32) + 8);
  v2 = *(void *)(v1 + 24);
  if (*(unsigned char *)(result + 40) != ((v2 & 1) == 0))
  {
    *(void *)(v1 + 24) = v2 + 1;
    v2 = *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24);
  }
  __brc_create_section_lastSectionID = v2;
  return result;
}

void sub_23FA44BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

__CFString *BRCPrettyPrintEnumWithContext(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  v6 = v5;
  if (!*(void *)(a2 + 8))
  {
    v8 = @"<unknown>";
    goto LABEL_18;
  }
  v7 = (int *)(a2 + 16);
  v8 = @"<unknown>";
  while (*((void *)v7 - 2) != a1)
  {
    uint64_t v9 = *((void *)v7 + 2);
    v7 += 6;
    if (!v9) {
      goto LABEL_18;
    }
  }
  id v10 = v5;
  v11 = [NSString stringWithUTF8String:*((void *)v7 - 1)];
  int v12 = *v7;
  if (*v7 == 2)
  {
    v16 = v11;
    uint64_t v17 = 3;
  }
  else
  {
    if (v12 != 1)
    {
      if (v12)
      {
        v13 = brc_bread_crumbs();
        v14 = brc_default_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
          BRCPrettyPrintEnumWithContext_cold_1((uint64_t)v13, v14);
        }
      }
      v15 = v11;
      goto LABEL_17;
    }
    v16 = v11;
    uint64_t v17 = 1;
  }
  v15 = +[BRCDumpContext highlightedString:v16 type:v17 context:v10];
LABEL_17:
  v8 = v15;

LABEL_18:
  return v8;
}

void sub_23FA450DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj, uint64_t a10)
{
}

void brc_task_tracker_cancel(void *a1)
{
  v1 = a1;
  if (!v1)
  {
    v2 = brc_bread_crumbs();
    v3 = brc_default_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT)) {
      brc_task_tracker_async_with_logs_and_qos_cold_1();
    }
  }
  atomic_store(1u, v1 + 24);
}

void sub_23FA452D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA45D40(_Unwind_Exception *a1)
{
}

uint64_t _brc_ipc_check_logged_status(void *a1, uint64_t a2, void *a3)
{
  uint64_t v78 = *MEMORY[0x263EF8340];
  id v5 = a1;
  v6 = a3;
  if (!v5)
  {
    id v10 = brc_bread_crumbs();
    v11 = brc_default_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT)) {
      _brc_ipc_check_logged_status_cold_1();
    }

    goto LABEL_53;
  }
  if (a2 == 2)
  {
LABEL_53:
    uint64_t v36 = 1;
    goto LABEL_54;
  }
  v7 = [v5 session];

  if (!v7)
  {
    v70 = +[BRCAccountsManager sharedManager];
    v68 = [v70 accountForCurrentPersona];
    v69 = [v68 identifier];
    if (v69)
    {
      v8 = brc_bread_crumbs();
      uint64_t v9 = brc_default_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412546;
        *(void *)&buf[4] = v69;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v8;
        _os_log_impl(&dword_23FA42000, v9, OS_LOG_TYPE_INFO, "[INFO] Account %@ is not loaded, waiting for it%@", buf, 0x16u);
      }

      if (![v70 waitForAccountLoadingSynchronouslyIfPossible:v69])
      {
        v71 = 0;
        v72 = 0;
LABEL_17:
        v14 = brc_bread_crumbs();
        v15 = brc_default_log();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412802;
          *(void *)&buf[4] = v72;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v71;
          *(_WORD *)&buf[22] = 2112;
          v75 = v14;
          _os_log_impl(&dword_23FA42000, v15, OS_LOG_TYPE_INFO, "[INFO] After waiting, the sesion is: %@, handler is: %@%@", buf, 0x20u);
        }

        if (v72)
        {
          v16 = [v72 accountHandler];
          BOOL v17 = v16 == 0;

          if (!v17)
          {
            v18 = [v72 accountHandler];
            BOOL v19 = v18 == v71;

            if (!v19)
            {
              v62 = brc_bread_crumbs();
              v63 = brc_default_log();
              if (os_log_type_enabled(v63, OS_LOG_TYPE_FAULT)) {
                _brc_ipc_check_logged_status_cold_6();
              }
            }
          }
        }
        if (![v71 doesNotHaveEnoughDiskSpaceToBeFunctional]) {
          goto LABEL_39;
        }
        if ([v71 checkEnoughDiskSpaceToBeFunctional])
        {
          memset(buf, 0, sizeof(buf));
          __brc_create_section(0, (uint64_t)"_brc_ipc_check_logged_status", 602, buf);
          v20 = brc_bread_crumbs();
          v21 = brc_default_log();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG)) {
            _brc_ipc_check_logged_status_cold_5();
          }

          if (v68)
          {
            id v22 = v71;
            objc_sync_enter(v22);
            int v23 = [v22 doesNotHaveEnoughDiskSpaceToBeFunctional];
            if (v23)
            {
              [v22 setDoesNotHaveEnoughDiskSpaceToBeFunctional:0];
            }
            else
            {
              v24 = brc_bread_crumbs();
              v25 = brc_default_log();
              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                LODWORD(v76) = 138412290;
                *(void *)((char *)&v76 + 4) = v24;
                _os_log_impl(&dword_23FA42000, v25, OS_LOG_TYPE_DEFAULT, "[NOTICE] another thread has already tried to load the account%@", (uint8_t *)&v76, 0xCu);
              }
            }
            objc_sync_exit(v22);

            __brc_leave_section((uint64_t *)buf);
            if (v23)
            {
              v26 = brc_bread_crumbs();
              v27 = brc_default_log();
              if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                *(void *)&buf[4] = v26;
                _os_log_impl(&dword_23FA42000, v27, OS_LOG_TYPE_DEFAULT, "[NOTICE] iCloud Drive has now enough disk space to work so loading account%@", buf, 0xCu);
              }

              [v22 startAndLoadAccountSynchronously:v68];
              v28 = brc_bread_crumbs();
              v29 = brc_default_log();
              if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG)) {
                _brc_ipc_check_logged_status_cold_4();
              }

              BRPostAccountTokenChangedNotification();
              uint64_t v30 = [v22 session];

              v72 = (void *)v30;
LABEL_39:
              if (v72)
              {
                objc_opt_class();
                if (objc_opt_isKindOfClass())
                {
                  v31 = +[BRCDaemonFPFS daemon];
                  [v31 waitOnAccountResumedQueue];
                }
                [v5 setSession:v72];
              }

              goto LABEL_44;
            }
          }
          else
          {
            __brc_leave_section((uint64_t *)buf);
          }
        }
        v38 = brc_bread_crumbs();
        v39 = brc_default_log();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          *(void *)&buf[4] = v38;
          _os_log_impl(&dword_23FA42000, v39, OS_LOG_TYPE_DEFAULT, "[WARNING] Returning error because iCloud Drive doesn't have enough disk space to be functional%@", buf, 0xCu);
        }

        v40 = (void *)MEMORY[0x263F087E8];
        *(void *)&long long v76 = *MEMORY[0x263F08320];
        v41 = [MEMORY[0x263F086E0] mainBundle];
        v42 = [v41 localizedStringForKey:@"Can't use iCloud Drive." value:&stru_26F3822F0 table:0];
        *(void *)buf = v42;
        *((void *)&v76 + 1) = *MEMORY[0x263F08338];
        v43 = [MEMORY[0x263F086E0] mainBundle];
        v44 = [v43 localizedStringForKey:@"The disk is full." value:&stru_26F3822F0 table:0];
        *(void *)&buf[8] = v44;
        uint64_t v77 = *MEMORY[0x263F08348];
        v45 = [MEMORY[0x263F086E0] mainBundle];
        v46 = [v45 localizedStringForKey:@"Free some space on your disk?" value:&stru_26F3822F0 table:0];
        *(void *)&buf[16] = v46;
        v47 = [NSDictionary dictionaryWithObjects:buf forKeys:&v76 count:3];
        v48 = [v40 errorWithDomain:*MEMORY[0x263F32360] code:34 userInfo:v47];

        v6[2](v6, v48);
        goto LABEL_58;
      }
      v71 = [v70 accountHandlerForACAccountID:v69];
      [v71 session];
    }
    else
    {
      int v12 = brc_bread_crumbs();
      v13 = brc_default_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
        _brc_ipc_check_logged_status_cold_7();
      }

      v71 = [v70 accountHandlerForCurrentPersona];
      [v71 session];
    v72 = };
    goto LABEL_17;
  }
LABEL_44:
  v32 = [v5 session];
  v33 = v32;
  if (v32) {
    uint64_t v34 = 1;
  }
  else {
    uint64_t v34 = -1;
  }

  if (v34 == a2 || a2 == 3 && v33 || !a2) {
    goto LABEL_53;
  }
  if (a2 == -1)
  {
    v35 = objc_msgSend(MEMORY[0x263F087E8], "brc_errorDaemonShouldBeLoggedOut");
    v6[2](v6, v35);

LABEL_58:
    uint64_t v36 = 0;
    goto LABEL_54;
  }
  id v73 = 0;
  BOOL v49 = +[BRCSystemSupportAnalyzer isCloudDocsSupportedWithError:&v73];
  id v50 = v73;
  if (!v49)
  {
    v57 = brc_bread_crumbs();
    v58 = brc_default_log();
    if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      *(void *)&buf[4] = v50;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v57;
      _os_log_impl(&dword_23FA42000, v58, OS_LOG_TYPE_DEFAULT, "[WARNING] Returning error because iCloud Drive not supported: %@%@", buf, 0x16u);
    }

    v6[2](v6, v50);
    goto LABEL_58;
  }
  v51 = +[BRCAccountsManager sharedManager];
  if (![v51 waitForInitialAccountLoadingSynchronouslyIfPossible])
  {
    v53 = 0;
LABEL_73:
    v59 = (void *)MEMORY[0x263F087E8];
    v60 = [v53 loggedOutError];
    v56 = objc_msgSend(v59, "brc_errorLoggedOutWithUnderlyingError:", v60);

    goto LABEL_74;
  }
  v52 = [v51 accountForCurrentPersona];
  v53 = [v51 accountHandlerForCurrentPersona];
  char v54 = [v53 waitForSessionLoading];
  if (v52) {
    char v55 = v54;
  }
  else {
    char v55 = 1;
  }
  if ((v55 & 1) == 0
    && objc_msgSend(v52, "br_isEnabledForCloudDocs")
    && objc_msgSend(v52, "br_isEligibleiCloudAccount"))
  {
    v64 = brc_bread_crumbs();
    v65 = brc_default_log();
    if (os_log_type_enabled(v65, (os_log_type_t)0x90u)) {
      _brc_ipc_check_logged_status_cold_3();
    }

    v66 = brc_bread_crumbs();
    v67 = brc_default_log();
    if (os_log_type_enabled(v67, OS_LOG_TYPE_DEBUG)) {
      -[BRCAccountHandler _loadOnDiskAccountSessionWithError:]();
    }

    exit(0);
  }
  v56 = [v53 loggedOutError];

  if (!v56) {
    goto LABEL_73;
  }
LABEL_74:
  if (a2 == 3
    && ((objc_msgSend(v56, "br_isCloudDocsErrorCode:", 22) & 1) != 0
     || (objc_msgSend(v56, "br_isCloudDocsErrorCode:", 34) & 1) != 0))
  {
    int v61 = 0;
    uint64_t v36 = 1;
  }
  else
  {
    v6[2](v6, v56);
    uint64_t v36 = 0;
    int v61 = 1;
  }

  if (v61) {
    goto LABEL_58;
  }
LABEL_54:

  return v36;
}

void sub_23FA46888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  objc_sync_exit(v15);
  __brc_leave_section(&a15);
  _Unwind_Resume(a1);
}

void sub_23FA47044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FA473A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void __brc_leave_section(uint64_t *a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a1)
  {
    uint64_t v1 = *a1;
    if (*a1)
    {
      v2 = brc_bread_crumbs();
      v3 = brc_default_log();
      v4 = v3;
      if (v1)
      {
        if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
          __brc_leave_section_cold_1((uint64_t)v2, v1, v4);
        }
      }
      else if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        int v5 = 134218242;
        uint64_t v6 = v1;
        __int16 v7 = 2112;
        v8 = v2;
        _os_log_impl(&dword_23FA42000, v4, OS_LOG_TYPE_INFO, "[INFO] ┗%llx %@", (uint8_t *)&v5, 0x16u);
      }
    }
  }
}

void __brc_create_section(char a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  if (__brc_create_section_once != -1) {
    dispatch_once(&__brc_create_section_once, &__block_literal_global_61);
  }
  uint64_t v10 = 0;
  v11 = &v10;
  uint64_t v12 = 0x2020000000;
  uint64_t v13 = 0;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  v8[2] = ____brc_create_section_block_invoke_2;
  v8[3] = &unk_2650867D0;
  v8[4] = &v10;
  char v9 = a1;
  dispatch_sync((dispatch_queue_t)__brc_create_section_queue, v8);
  a4[1] = a2;
  a4[2] = 0;
  *a4 = v11[3];
  *((_DWORD *)a4 + 4) = a3;
  _Block_object_dispose(&v10, 8);
}

void sub_23FA47730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

brc_task_tracker *brc_task_tracker_create(const char *a1)
{
  v2 = objc_alloc_init(brc_task_tracker);
  if (!a1)
  {
    v3 = brc_bread_crumbs();
    v4 = brc_default_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      brc_task_tracker_create_cold_1();
    }

    a1 = "unknown";
  }
  v2->label = strdup(a1);
  dispatch_group_t v5 = dispatch_group_create();
  group = v2->group;
  v2->group = (OS_dispatch_group *)v5;

  return v2;
}

void sub_23FA47CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FA47EC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA48994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FA48E50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA4954C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA49670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA4976C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA49A00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA49F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA4A030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA4A7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

uint64_t _brc_ipc_check_applibrary_write_access(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  char v9 = a4;
  if (v7)
  {
    if (_brc_ipc_check_logged_status(v7, a2, v9))
    {
      id v13 = 0;
      uint64_t v10 = [v7 _canCreateAppLibraryWithID:v8 error:&v13];
      id v11 = v13;
      if ((v10 & 1) == 0) {
        v9[2](v9, v11);
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  else
  {
    uint64_t v10 = 1;
  }

  return v10;
}

void sub_23FA4ACD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t _brc_ipc_check_applibrary_read_access(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  char v9 = a4;
  if (v7)
  {
    if (_brc_ipc_check_logged_status(v7, a2, v9))
    {
      id v13 = 0;
      uint64_t v10 = [v7 _hasAccessToAppLibraryID:v8 error:&v13];
      id v11 = v13;
      if ((v10 & 1) == 0) {
        v9[2](v9, v11);
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  else
  {
    uint64_t v10 = 1;
  }

  return v10;
}

uint64_t AppTelemetryStuckStatusReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  dispatch_group_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    unint64_t v7 = 0x268C5E000uLL;
    unint64_t v8 = 0x268C5E000uLL;
    char v9 = (int *)MEMORY[0x263F62268];
    unint64_t v10 = 0x268C5E000uLL;
    unint64_t v11 = 0x268C5E000uLL;
    unint64_t v12 = 0x268C5E000uLL;
    unint64_t v13 = 0x268C5E000uLL;
    unint64_t v14 = 0x268C5E000uLL;
    unint64_t v15 = 0x268C5E000uLL;
    unint64_t v16 = 0x268C5E000uLL;
    unint64_t v17 = 0x268C5E000uLL;
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v18 = 0;
      unsigned int v19 = 0;
      unint64_t v20 = 0;
      while (1)
      {
        uint64_t v21 = *v3;
        unint64_t v22 = *(void *)(a2 + v21);
        if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v23 = *(unsigned char *)(*(void *)(a2 + *v9) + v22);
        *(void *)(a2 + v21) = v22 + 1;
        v20 |= (unint64_t)(v23 & 0x7F) << v18;
        if ((v23 & 0x80) == 0) {
          goto LABEL_12;
        }
        v18 += 7;
        BOOL v24 = v19++ >= 9;
        if (v24)
        {
          unint64_t v20 = 0;
          int v25 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v25 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v20 = 0;
      }
LABEL_14:
      if (v25 || (v20 & 7) == 4) {
        break;
      }
      switch((v20 >> 3))
      {
        case 1u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x40000u;
          while (1)
          {
            uint64_t v30 = *v3;
            unint64_t v31 = *(void *)(a2 + v30);
            if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)(a2 + *v9) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0) {
              goto LABEL_176;
            }
            v27 += 7;
            BOOL v24 = v28++ >= 9;
            if (v24)
            {
              uint64_t v29 = 0;
              goto LABEL_178;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_176:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v29 = 0;
          }
LABEL_178:
          BOOL v148 = v29 != 0;
          uint64_t v149 = *(int *)(v8 + 3332);
          goto LABEL_247;
        case 2u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x80000u;
          while (2)
          {
            uint64_t v42 = *v3;
            unint64_t v43 = *(void *)(a2 + v42);
            if (v43 == -1 || v43 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v9) + v43);
              *(void *)(a2 + v42) = v43 + 1;
              v41 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v24 = v40++ >= 9;
                if (v24)
                {
                  uint64_t v41 = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v41 = 0;
          }
LABEL_182:
          BOOL v148 = v41 != 0;
          uint64_t v149 = *(int *)(v10 + 3336);
          goto LABEL_247;
        case 3u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 2u;
          while (2)
          {
            uint64_t v48 = *v3;
            unint64_t v49 = *(void *)(a2 + v48);
            if (v49 == -1 || v49 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v50 = *(unsigned char *)(*(void *)(a2 + *v9) + v49);
              *(void *)(a2 + v48) = v49 + 1;
              v47 |= (unint64_t)(v50 & 0x7F) << v45;
              if (v50 < 0)
              {
                v45 += 7;
                BOOL v24 = v46++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_186:
          uint64_t v150 = *(int *)(v11 + 3340);
          goto LABEL_264;
        case 4u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 4u;
          while (2)
          {
            uint64_t v53 = *v3;
            unint64_t v54 = *(void *)(a2 + v53);
            if (v54 == -1 || v54 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v55 = *(unsigned char *)(*(void *)(a2 + *v9) + v54);
              *(void *)(a2 + v53) = v54 + 1;
              v47 |= (unint64_t)(v55 & 0x7F) << v51;
              if (v55 < 0)
              {
                v51 += 7;
                BOOL v24 = v52++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_190:
          uint64_t v150 = *(int *)(v12 + 3344);
          goto LABEL_264;
        case 5u:
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 1u;
          while (2)
          {
            uint64_t v58 = *v3;
            unint64_t v59 = *(void *)(a2 + v58);
            if (v59 == -1 || v59 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v60 = *(unsigned char *)(*(void *)(a2 + *v9) + v59);
              *(void *)(a2 + v58) = v59 + 1;
              v47 |= (unint64_t)(v60 & 0x7F) << v56;
              if (v60 < 0)
              {
                v56 += 7;
                BOOL v24 = v57++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_194:
          uint64_t v150 = *(int *)(v13 + 3348);
          goto LABEL_264;
        case 6u:
          char v61 = 0;
          unsigned int v62 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 8u;
          while (2)
          {
            uint64_t v63 = *v3;
            unint64_t v64 = *(void *)(a2 + v63);
            if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v65 = *(unsigned char *)(*(void *)(a2 + *v9) + v64);
              *(void *)(a2 + v63) = v64 + 1;
              v47 |= (unint64_t)(v65 & 0x7F) << v61;
              if (v65 < 0)
              {
                v61 += 7;
                BOOL v24 = v62++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_198;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_198:
          uint64_t v150 = *(int *)(v14 + 3352);
          goto LABEL_264;
        case 7u:
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x100000u;
          while (2)
          {
            uint64_t v69 = *v3;
            unint64_t v70 = *(void *)(a2 + v69);
            if (v70 == -1 || v70 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v71 = *(unsigned char *)(*(void *)(a2 + *v9) + v70);
              *(void *)(a2 + v69) = v70 + 1;
              v68 |= (unint64_t)(v71 & 0x7F) << v66;
              if (v71 < 0)
              {
                v66 += 7;
                BOOL v24 = v67++ >= 9;
                if (v24)
                {
                  uint64_t v68 = 0;
                  goto LABEL_202;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v68 = 0;
          }
LABEL_202:
          BOOL v148 = v68 != 0;
          uint64_t v149 = *(int *)(v15 + 3356);
          goto LABEL_247;
        case 8u:
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x20u;
          while (2)
          {
            uint64_t v74 = *v3;
            unint64_t v75 = *(void *)(a2 + v74);
            if (v75 == -1 || v75 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v76 = *(unsigned char *)(*(void *)(a2 + *v9) + v75);
              *(void *)(a2 + v74) = v75 + 1;
              v47 |= (unint64_t)(v76 & 0x7F) << v72;
              if (v76 < 0)
              {
                v72 += 7;
                BOOL v24 = v73++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_206:
          uint64_t v150 = *(int *)(v16 + 3360);
          goto LABEL_264;
        case 9u:
          char v77 = 0;
          unsigned int v78 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x10u;
          while (2)
          {
            uint64_t v79 = *v3;
            unint64_t v80 = *(void *)(a2 + v79);
            if (v80 == -1 || v80 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v81 = *(unsigned char *)(*(void *)(a2 + *v9) + v80);
              *(void *)(a2 + v79) = v80 + 1;
              v47 |= (unint64_t)(v81 & 0x7F) << v77;
              if (v81 < 0)
              {
                v77 += 7;
                BOOL v24 = v78++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_210;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_210:
          uint64_t v150 = *(int *)(v17 + 3364);
          goto LABEL_264;
        case 0xAu:
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x800u;
          while (2)
          {
            uint64_t v84 = *v3;
            unint64_t v85 = *(void *)(a2 + v84);
            if (v85 == -1 || v85 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v86 = *(unsigned char *)(*(void *)(a2 + *v9) + v85);
              *(void *)(a2 + v84) = v85 + 1;
              v47 |= (unint64_t)(v86 & 0x7F) << v82;
              if (v86 < 0)
              {
                v82 += 7;
                BOOL v24 = v83++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_214;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_214:
          uint64_t v150 = 96;
          goto LABEL_264;
        case 0xBu:
          char v87 = 0;
          unsigned int v88 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x100u;
          while (2)
          {
            uint64_t v89 = *v3;
            unint64_t v90 = *(void *)(a2 + v89);
            if (v90 == -1 || v90 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v91 = *(unsigned char *)(*(void *)(a2 + *v9) + v90);
              *(void *)(a2 + v89) = v90 + 1;
              v47 |= (unint64_t)(v91 & 0x7F) << v87;
              if (v91 < 0)
              {
                v87 += 7;
                BOOL v24 = v88++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_218;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_218:
          uint64_t v150 = 72;
          goto LABEL_264;
        case 0xCu:
          char v92 = 0;
          unsigned int v93 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x1000u;
          while (2)
          {
            uint64_t v94 = *v3;
            unint64_t v95 = *(void *)(a2 + v94);
            if (v95 == -1 || v95 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v96 = *(unsigned char *)(*(void *)(a2 + *v9) + v95);
              *(void *)(a2 + v94) = v95 + 1;
              v47 |= (unint64_t)(v96 & 0x7F) << v92;
              if (v96 < 0)
              {
                v92 += 7;
                BOOL v24 = v93++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_222;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_222:
          uint64_t v150 = 104;
          goto LABEL_264;
        case 0xDu:
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x400u;
          while (2)
          {
            uint64_t v99 = *v3;
            unint64_t v100 = *(void *)(a2 + v99);
            if (v100 == -1 || v100 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v101 = *(unsigned char *)(*(void *)(a2 + *v9) + v100);
              *(void *)(a2 + v99) = v100 + 1;
              v47 |= (unint64_t)(v101 & 0x7F) << v97;
              if (v101 < 0)
              {
                v97 += 7;
                BOOL v24 = v98++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_226;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_226:
          uint64_t v150 = 88;
          goto LABEL_264;
        case 0xEu:
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x200u;
          while (2)
          {
            uint64_t v104 = *v3;
            unint64_t v105 = *(void *)(a2 + v104);
            if (v105 == -1 || v105 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v106 = *(unsigned char *)(*(void *)(a2 + *v9) + v105);
              *(void *)(a2 + v104) = v105 + 1;
              v47 |= (unint64_t)(v106 & 0x7F) << v102;
              if (v106 < 0)
              {
                v102 += 7;
                BOOL v24 = v103++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_230;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_230:
          uint64_t v150 = 80;
          goto LABEL_264;
        case 0xFu:
          char v107 = 0;
          unsigned int v108 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x80u;
          while (2)
          {
            uint64_t v109 = *v3;
            unint64_t v110 = *(void *)(a2 + v109);
            if (v110 == -1 || v110 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v111 = *(unsigned char *)(*(void *)(a2 + *v9) + v110);
              *(void *)(a2 + v109) = v110 + 1;
              v47 |= (unint64_t)(v111 & 0x7F) << v107;
              if (v111 < 0)
              {
                v107 += 7;
                BOOL v24 = v108++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_234;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_234:
          uint64_t v150 = 64;
          goto LABEL_264;
        case 0x10u:
          char v112 = 0;
          unsigned int v113 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x40u;
          while (2)
          {
            uint64_t v114 = *v3;
            unint64_t v115 = *(void *)(a2 + v114);
            if (v115 == -1 || v115 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v116 = *(unsigned char *)(*(void *)(a2 + *v9) + v115);
              *(void *)(a2 + v114) = v115 + 1;
              v47 |= (unint64_t)(v116 & 0x7F) << v112;
              if (v116 < 0)
              {
                v112 += 7;
                BOOL v24 = v113++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_238;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_238:
          uint64_t v150 = 56;
          goto LABEL_264;
        case 0x11u:
          char v117 = 0;
          unsigned int v118 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x2000u;
          while (2)
          {
            uint64_t v119 = *v3;
            unint64_t v120 = *(void *)(a2 + v119);
            if (v120 == -1 || v120 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v121 = *(unsigned char *)(*(void *)(a2 + *v9) + v120);
              *(void *)(a2 + v119) = v120 + 1;
              v47 |= (unint64_t)(v121 & 0x7F) << v117;
              if (v121 < 0)
              {
                v117 += 7;
                BOOL v24 = v118++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_242;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_242:
          uint64_t v150 = 112;
          goto LABEL_264;
        case 0x12u:
          char v122 = 0;
          unsigned int v123 = 0;
          uint64_t v124 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x200000u;
          while (2)
          {
            uint64_t v125 = *v3;
            unint64_t v126 = *(void *)(a2 + v125);
            if (v126 == -1 || v126 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v127 = *(unsigned char *)(*(void *)(a2 + *v9) + v126);
              *(void *)(a2 + v125) = v126 + 1;
              v124 |= (unint64_t)(v127 & 0x7F) << v122;
              if (v127 < 0)
              {
                v122 += 7;
                BOOL v24 = v123++ >= 9;
                if (v24)
                {
                  uint64_t v124 = 0;
                  goto LABEL_246;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v124 = 0;
          }
LABEL_246:
          BOOL v148 = v124 != 0;
          uint64_t v149 = 155;
LABEL_247:
          *(unsigned char *)(a1 + v149) = v148;
          continue;
        case 0x13u:
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x4000u;
          while (2)
          {
            uint64_t v130 = *v3;
            unint64_t v131 = *(void *)(a2 + v130);
            if (v131 == -1 || v131 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v132 = *(unsigned char *)(*(void *)(a2 + *v9) + v131);
              *(void *)(a2 + v130) = v131 + 1;
              v47 |= (unint64_t)(v132 & 0x7F) << v128;
              if (v132 < 0)
              {
                v128 += 7;
                BOOL v24 = v129++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_251;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_251:
          uint64_t v150 = 120;
          goto LABEL_264;
        case 0x14u:
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x10000u;
          while (2)
          {
            uint64_t v135 = *v3;
            unint64_t v136 = *(void *)(a2 + v135);
            if (v136 == -1 || v136 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v137 = *(unsigned char *)(*(void *)(a2 + *v9) + v136);
              *(void *)(a2 + v135) = v136 + 1;
              v47 |= (unint64_t)(v137 & 0x7F) << v133;
              if (v137 < 0)
              {
                v133 += 7;
                BOOL v24 = v134++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_255;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_255:
          uint64_t v150 = 136;
          goto LABEL_264;
        case 0x15u:
          char v138 = 0;
          unsigned int v139 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x8000u;
          while (2)
          {
            uint64_t v140 = *v3;
            unint64_t v141 = *(void *)(a2 + v140);
            if (v141 == -1 || v141 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v142 = *(unsigned char *)(*(void *)(a2 + *v9) + v141);
              *(void *)(a2 + v140) = v141 + 1;
              v47 |= (unint64_t)(v142 & 0x7F) << v138;
              if (v142 < 0)
              {
                v138 += 7;
                BOOL v24 = v139++ >= 9;
                if (v24)
                {
                  uint64_t v47 = 0;
                  goto LABEL_259;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_259:
          uint64_t v150 = 128;
          goto LABEL_264;
        case 0x16u:
          char v143 = 0;
          unsigned int v144 = 0;
          uint64_t v47 = 0;
          *(_DWORD *)(a1 + *(int *)(v7 + 3328)) |= 0x20000u;
          break;
        default:
          unint64_t v33 = v8;
          unint64_t v34 = v10;
          unint64_t v35 = v11;
          unint64_t v36 = v7;
          unint64_t v37 = v12;
          uint64_t result = PBReaderSkipValueWithTag();
          dispatch_group_t v5 = (int *)MEMORY[0x263F62270];
          unint64_t v12 = v37;
          unint64_t v13 = 0x268C5E000;
          unint64_t v7 = v36;
          unint64_t v14 = 0x268C5E000;
          unint64_t v11 = v35;
          unint64_t v15 = 0x268C5E000;
          unint64_t v10 = v34;
          unint64_t v17 = 0x268C5E000;
          unint64_t v8 = v33;
          unint64_t v16 = 0x268C5E000;
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v145 = *v3;
        unint64_t v146 = *(void *)(a2 + v145);
        if (v146 == -1 || v146 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v147 = *(unsigned char *)(*(void *)(a2 + *v9) + v146);
        *(void *)(a2 + v145) = v146 + 1;
        v47 |= (unint64_t)(v147 & 0x7F) << v143;
        if ((v147 & 0x80) == 0) {
          goto LABEL_261;
        }
        v143 += 7;
        BOOL v24 = v144++ >= 9;
        if (v24)
        {
          uint64_t v47 = 0;
          goto LABEL_263;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_261:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v47 = 0;
      }
LABEL_263:
      uint64_t v150 = 144;
LABEL_264:
      *(void *)(a1 + v150) = v47;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL AppTelemetryQBSInvestigationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  dispatch_group_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    unint64_t v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 48) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4))
            {
              BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthDirCount;
              goto LABEL_61;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              break;
            }
            v17 += 7;
            BOOL v23 = v18++ > 8;
            if (v23)
            {
              uint64_t v19 = 0;
              BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthDirCount;
              goto LABEL_64;
            }
          }
          BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthDirCount;
          goto LABEL_62;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 48) |= 4u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthDirFaultCount;
              goto LABEL_61;
            }
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v23 = v26++ > 8;
              if (v23)
              {
                uint64_t v19 = 0;
                BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthDirFaultCount;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthDirFaultCount;
          goto LABEL_62;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__clientTruthDirFaultCount;
              goto LABEL_61;
            }
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v23 = v31++ > 8;
              if (v23)
              {
                uint64_t v19 = 0;
                BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__clientTruthDirFaultCount;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__clientTruthDirFaultCount;
          goto LABEL_62;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 48) |= 0x10u;
          while (2)
          {
            uint64_t v37 = *v3;
            unint64_t v38 = *(void *)(a2 + v37);
            if (v38 == -1 || v38 >= *(void *)(a2 + *v4))
            {
              BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__timeSinceLogin;
              goto LABEL_61;
            }
            char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              BOOL v23 = v36++ > 8;
              if (v23)
              {
                uint64_t v19 = 0;
                BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__timeSinceLogin;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__timeSinceLogin;
          goto LABEL_62;
        case 5u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 48) |= 8u;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
          return 0;
      }
      while (1)
      {
        uint64_t v42 = *v3;
        unint64_t v43 = *(void *)(a2 + v42);
        if (v43 == -1 || v43 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
        *(void *)(a2 + v42) = v43 + 1;
        v19 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
        {
          BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthTotalItemsCount;
          goto LABEL_62;
        }
        v40 += 7;
        BOOL v23 = v41++ > 8;
        if (v23)
        {
          uint64_t v19 = 0;
          BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthTotalItemsCount;
          goto LABEL_64;
        }
      }
      BOOL v24 = &OBJC_IVAR___AppTelemetryQBSInvestigation__serverTruthTotalItemsCount;
LABEL_61:
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_62:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v19 = 0;
      }
LABEL_64:
      *(void *)(a1 + *v24) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FA5097C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA50E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

uint64_t BRFieldCKInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  dispatch_group_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    unint64_t v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_40;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_42;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_42:
          BOOL v33 = v19 != 0;
          uint64_t v34 = 32;
          goto LABEL_47;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          break;
        case 3u:
          uint64_t v30 = PBReaderReadString();
          uint64_t v31 = 16;
          goto LABEL_38;
        case 4u:
          uint64_t v30 = PBReaderReadString();
          uint64_t v31 = 24;
          goto LABEL_38;
        case 5u:
          uint64_t v30 = PBReaderReadData();
          uint64_t v31 = 8;
LABEL_38:
          uint64_t v32 = *(void **)(a1 + v31);
          *(void *)(a1 + v31) = v30;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)(a2 + v27);
        if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
        *(void *)(a2 + v27) = v28 + 1;
        v26 |= (unint64_t)(v29 & 0x7F) << v24;
        if ((v29 & 0x80) == 0) {
          goto LABEL_44;
        }
        v24 += 7;
        BOOL v14 = v25++ >= 9;
        if (v14)
        {
          uint64_t v26 = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v26 = 0;
      }
LABEL_46:
      BOOL v33 = v26 != 0;
      uint64_t v34 = 33;
LABEL_47:
      *(unsigned char *)(a1 + v34) = v33;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FA52BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FA52FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_23FA546D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA54938(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA54B4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA54DEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA55024(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id queryPlanForSQL(const char *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [MEMORY[0x263F089D8] string];
  dispatch_group_t v5 = [MEMORY[0x263F8C720] rawInjection:a1 length:strlen(a1)];
  uint64_t v6 = (void *)[v3 fetch:@"explain query plan %@", v5];

  [v4 appendFormat:@"plan:\n"];
  if ([v6 next])
  {
    do
    {
      unint64_t v7 = [v6 stringAtIndex:3];
      [v4 appendFormat:@"    %@\n", v7];
    }
    while (([v6 next] & 1) != 0);
  }

  return v4;
}

void sub_23FA57560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FA57B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void OUTLINED_FUNCTION_4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, (os_log_type_t)0x90u, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_5(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

void sub_23FA589E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA58B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA592E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14, uint64_t a15, uint64_t a16, id obj)
{
}

void dispatch_async_with_logs(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  dispatch_group_t v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  unint64_t v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  char v8 = v3;
  char v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FA59BC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA5A28C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA5A3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA5A7EC(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

void sub_23FA5A924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA5AAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA5AED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
}

void sub_23FA5B2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  objc_sync_exit(v18);
  __brc_leave_section(&a18);
  _Unwind_Resume(a1);
}

void sub_23FA5B6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA5BBF4(_Unwind_Exception *a1)
{
}

void sub_23FA5BF2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA5C2B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FA5C908(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 128));
  objc_sync_exit(v2);
  _Unwind_Resume(a1);
}

void sub_23FA5CD04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA5D300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FA5D5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void OUTLINED_FUNCTION_2_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_5_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_7(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(void *)(a3 + 14) = a2;
  return result;
}

void dispatch_async_with_logs_0(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v3 = a1;
  id v4 = a2;
  uint64_t v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  unint64_t v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_0;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  uint64_t v8 = v3;
  uint64_t v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FA5E248(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA5E568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  objc_destroyWeak(v32);
  objc_destroyWeak(v31);
  objc_destroyWeak(v30);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v33 - 136), 8);
  objc_destroyWeak((id *)(v33 - 88));
  _Unwind_Resume(a1);
}

void sub_23FA5E5C8()
{
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_23FA5EACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA5F0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_0(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FA5F2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA629F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

id _issueReadWriteSandboxExtensionForURL(void *a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = *MEMORY[0x263EF8008];
  id v8 = 0;
  uint64_t v3 = objc_msgSend(v1, "brc_issueSandboxExtensionOfClass:error:", v2, &v8);
  id v4 = v8;
  if (v3)
  {
    long long v5 = brc_bread_crumbs();
    uint64_t v6 = brc_notifications_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      _issueReadWriteSandboxExtensionForURL_cold_1();
    }
  }
  else
  {
    long long v5 = brc_bread_crumbs();
    uint64_t v6 = brc_default_log();
    if (os_log_type_enabled(v6, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 138412802;
      id v10 = v1;
      __int16 v11 = 2112;
      id v12 = v4;
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_error_impl(&dword_23FA42000, v6, (os_log_type_t)0x90u, "[ERROR] failed to issue sandbox extension for %@: %@%@", buf, 0x20u);
    }
  }

  return v3;
}

uint64_t BRFieldFinderTagsReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    unint64_t v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = PBReaderReadString();
        if (v17) {
          [a1 addTags:v17];
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FA63970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA63A28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA63AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA64384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FA64588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  objc_destroyWeak(v16);
  __brc_leave_section(&a16);
  _Unwind_Resume(a1);
}

void sub_23FA64900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA66704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA66BCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __br_notify_register_dispatch_block_invoke(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  if (([*(id *)(a1 + 32) isEqualToString:@"__defaultPersonaID__"] & 1) != 0
    || (id v2 = *(id *)(a1 + 32)) == 0)
  {
    if (_block_invoke___personaOnceToken != -1) {
      dispatch_once(&_block_invoke___personaOnceToken, &__block_literal_global_92);
    }
    id v3 = (id)_block_invoke___personalPersona;
    int v4 = 1;
  }
  else
  {
    id v3 = v2;
    int v4 = 0;
  }
  long long v5 = [MEMORY[0x263F841B0] sharedManager];
  uint64_t v6 = [v5 currentPersona];

  id v25 = 0;
  id v7 = [v6 userPersonaUniqueString];
  char v8 = v7;
  if (v7 == v3 || ([v7 isEqualToString:v3] & 1) != 0) {
    goto LABEL_9;
  }
  if (!voucher_process_can_use_arbitrary_personas())
  {
    if (v4 && ([v6 isDataSeparatedPersona] & 1) == 0)
    {
      uint64_t v21 = brc_bread_crumbs();
      char v22 = brc_default_log();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
        __br_notify_register_dispatch_block_invoke_cold_4();
      }
    }
    else
    {
      long long v17 = brc_bread_crumbs();
      uint64_t v18 = brc_default_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
        __br_notify_register_dispatch_block_invoke_cold_3();
      }

      id v14 = [MEMORY[0x263F087E8] errorWithDomain:*MEMORY[0x263F08438] code:22 userInfo:0];
      if (v14) {
        goto LABEL_25;
      }
    }
LABEL_9:
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    goto LABEL_10;
  }
  id v24 = 0;
  unsigned int v9 = (void *)[v6 copyCurrentPersonaContextWithError:&v24];
  id v10 = v24;
  id v11 = v25;
  id v25 = v9;

  if (v10)
  {
    unint64_t v12 = brc_bread_crumbs();
    char v13 = brc_default_log();
    if (os_log_type_enabled(v13, (os_log_type_t)0x90u)) {
      -[_BRCOperation completedWithResult:error:]();
    }
  }
  id v14 = [v6 generateAndRestorePersonaContextWithPersonaUniqueString:v3];

  if (!v14) {
    goto LABEL_9;
  }
  int v15 = brc_bread_crumbs();
  uint64_t v16 = brc_default_log();
  if (os_log_type_enabled(v16, (os_log_type_t)0x90u))
  {
    uint64_t v23 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    uint64_t v27 = v23;
    __int16 v28 = 2112;
    char v29 = v14;
    __int16 v30 = 2112;
    uint64_t v31 = v15;
    _os_log_error_impl(&dword_23FA42000, v16, (os_log_type_t)0x90u, "[ERROR] Can't adopt persona %@: %@%@", buf, 0x20u);
  }

LABEL_25:
  uint64_t v19 = brc_bread_crumbs();
  uint64_t v20 = brc_default_log();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_FAULT)) {
    __br_notify_register_dispatch_block_invoke_cold_1(a1, (uint64_t)v19, v20);
  }

LABEL_10:
  _BRRestorePersona();
}

void sub_23FA680D8(_Unwind_Exception *a1)
{
}

void __br_notify_register_dispatch_block_invoke_2()
{
  id v2 = [MEMORY[0x263F841C0] personaAttributesForPersonaType:0];
  uint64_t v0 = [v2 userPersonaUniqueString];
  id v1 = (void *)_block_invoke___personalPersona;
  _block_invoke___personalPersona = v0;
}

void OUTLINED_FUNCTION_4_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_23FA68460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA685DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA6899C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA68AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FA69DA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

uint64_t create_control_file(char *a1, __darwin_ino64_t *a2, int a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  if (a3 && unlink(a1) && *__error() != 2)
  {
    int v6 = *__error();
    id v7 = brc_bread_crumbs();
    char v8 = brc_default_log();
    if (os_log_type_enabled(v8, (os_log_type_t)0x90u))
    {
      int v9 = 136315650;
      id v10 = a1;
      __int16 v11 = 1024;
      int v12 = v6;
      __int16 v13 = 2112;
      id v14 = v7;
      _os_log_error_impl(&dword_23FA42000, v8, (os_log_type_t)0x90u, "[ERROR] failed unlinking '%s' %{errno}d%@", (uint8_t *)&v9, 0x1Cu);
    }

    *__error() = v6;
    return 0xFFFFFFFFLL;
  }
  else
  {
    return file_id_from_control_file(a1, a2, 0);
  }
}

uint64_t file_id_from_control_file(const char *a1, __darwin_ino64_t *a2, int a3)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  memset(&v17, 0, sizeof(v17));
  if (a3) {
    int v5 = open(a1, 33028, 384);
  }
  else {
    int v5 = open(a1, 773, 384);
  }
  if (v5 < 0)
  {
    int v11 = *__error();
    int v12 = brc_bread_crumbs();
    __int16 v13 = brc_default_log();
    if (os_log_type_enabled(v13, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v19 = a1;
      __int16 v20 = 1024;
      int v21 = v11;
      __int16 v22 = 2112;
      uint64_t v23 = v12;
      _os_log_error_impl(&dword_23FA42000, v13, (os_log_type_t)0x90u, "[ERROR] failed opening '%s' %{errno}d%@", buf, 0x1Cu);
    }

    *__error() = v11;
    return 0xFFFFFFFFLL;
  }
  int v6 = v5;
  if (fstat(v5, &v17))
  {
    int v7 = *__error();
    char v8 = brc_bread_crumbs();
    int v9 = brc_default_log();
    if (os_log_type_enabled(v9, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v19 = a1;
      __int16 v20 = 1024;
      int v21 = v7;
      __int16 v22 = 2112;
      uint64_t v23 = v8;
      _os_log_error_impl(&dword_23FA42000, v9, (os_log_type_t)0x90u, "[ERROR] failed stating '%s' %{errno}d%@", buf, 0x1Cu);
    }

    *__error() = v7;
    int v10 = *__error();
    close(v6);
    *__error() = v10;
    return 0xFFFFFFFFLL;
  }
  if (close(v6))
  {
    uint64_t v15 = brc_bread_crumbs();
    uint64_t v16 = brc_default_log();
    if (os_log_type_enabled(v16, (os_log_type_t)0x90u)) {
      file_id_from_control_file_cold_1();
    }
  }
  uint64_t result = 0;
  *a2 = v17.st_ino;
  return result;
}

void sub_23FA6FD90(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_23FA701AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  __brc_leave_section(&a22);
  _Unwind_Resume(a1);
}

void sub_23FA704FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA70E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_23FA7369C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FA74224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA74500(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_13(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, (os_log_type_t)0x90u, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_15(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x18u);
}

void OUTLINED_FUNCTION_16(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x1Eu);
}

void sub_23FA76E70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA76F14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA77588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void BRSetupAARequest(void *a1)
{
  id v3 = a1;
  uint64_t v1 = _CFHTTPCookieStorageCreateWithProperties();
  if (v1)
  {
    id v2 = (const void *)v1;
    [v3 setCookieStorage:v1];
    CFRelease(v2);
  }
}

void sub_23FA779B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA77CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA78158(_Unwind_Exception *a1)
{
}

void sub_23FA7845C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA7972C(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_23FA7A2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA7A764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA7AF38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA7B914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_23FA7BB3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, __CFString *a11, uint64_t a12, char a13)
{
  if (a2 == 2)
  {
    id v15 = objc_begin_catch(exception_object);
    uint64_t v16 = brc_bread_crumbs();
    stat v17 = brc_default_log();
    if (os_log_type_enabled(v17, (os_log_type_t)0x90u))
    {
      uint64_t v18 = [v15 reason];
      -[BRCAccountHandler _tryToOpenSession:error:](v18, (uint64_t)v16, (uint64_t)&a13);
    }

    uint64_t v19 = objc_msgSend(MEMORY[0x263F087E8], "br_errorWithDomain:code:description:", *MEMORY[0x263F32360], 22, @"Disabled - iCloud Drive database is from the future");
    [v14 setLoggedOutError:v19];

    if (v13)
    {
      void *v13 = [v14 loggedOutError];
    }

    objc_end_catch();
  }
  else
  {
    if (a2 != 1) {
      _Unwind_Resume(exception_object);
    }
    id v20 = objc_begin_catch(exception_object);
    int v21 = brc_bread_crumbs();
    __int16 v22 = brc_default_log();
    if (os_log_type_enabled(v22, (os_log_type_t)0x90u)) {
      -[BRCAccountHandler _tryToOpenSession:error:]();
    }

    uint64_t v23 = brc_bread_crumbs();
    uint64_t v24 = brc_default_log();
    if (os_log_type_enabled(v24, (os_log_type_t)0x90u))
    {
      id v25 = [v20 callStackSymbols];
      -[BRCAccountHandler _tryToOpenSession:error:](v25, (uint64_t)v23, (uint64_t)&a13);
    }

    if (v13)
    {
      uint64_t v26 = (void *)MEMORY[0x263F087E8];
      a11 = @"exception";
      a12 = (uint64_t)v20;
      uint64_t v27 = [NSDictionary dictionaryWithObjects:&a12 forKeys:&a11 count:1];
      void *v13 = [v26 errorWithDomain:*MEMORY[0x263F32360] code:9999 userInfo:v27];
    }
    objc_end_catch();
  }
  JUMPOUT(0x23FA7BA88);
}

void sub_23FA7CBB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA7CE3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA7D100(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA7DD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void __dispatch_async_with_logs_block_invoke_1(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  id v2 = brc_bread_crumbs();
  id v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    int v10 = label;
    __int16 v11 = 2112;
    int v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FA7EDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void __dispatch_group_async_with_logs_block_invoke(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  id v2 = brc_bread_crumbs();
  id v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    int v10 = label;
    __int16 v11 = 2112;
    int v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FA7EF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void __brc_dispatch_async_autorelease_with_logs_block_invoke(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v2 = (void *)MEMORY[0x2455D97F0]();
  long long v6 = *(_OWORD *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 64);
  id v3 = brc_bread_crumbs();
  uint64_t v4 = brc_default_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v9 = v6;
    __int16 v10 = 2080;
    __int16 v11 = label;
    __int16 v12 = 2112;
    uint64_t v13 = v3;
    _os_log_debug_impl(&dword_23FA42000, v4, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v6);
}

void sub_23FA7F078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void OUTLINED_FUNCTION_11_0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_13_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, (os_log_type_t)0x90u, a4, (uint8_t *)va, 0x12u);
}

void sub_23FA7F4B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23FA7FE80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA80C98(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x230], 8);
  _Block_object_dispose(&STACK[0x250], 8);
  _Block_object_dispose((const void *)(v1 - 256), 8);
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_23FA82290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA825C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA8272C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA82AB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA83B7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_3_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_23FA84440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 112));
  _Unwind_Resume(a1);
}

void sub_23FA84BD0(_Unwind_Exception *a1)
{
}

void sub_23FA85184(_Unwind_Exception *a1)
{
}

void sub_23FA8570C(_Unwind_Exception *a1)
{
}

void sub_23FA86848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id BRDiskCheckerServiceConnection()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x263F08D68]) initWithServiceName:@"com.apple.iCloudDriveCore.telemetry-disk-checker"];
  uint64_t v1 = BRDiskCheckerServiceInterface();
  [v0 setRemoteObjectInterface:v1];

  [v0 resume];
  return v0;
}

void sub_23FA86E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FA871C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_23FA8EA74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

id BRDiskCheckerServiceInterface()
{
  if (BRDiskCheckerServiceInterface_onceToken != -1) {
    dispatch_once(&BRDiskCheckerServiceInterface_onceToken, &__block_literal_global_746);
  }
  uint64_t v0 = (void *)BRDiskCheckerServiceInterface_interface;
  return v0;
}

void __BRDiskCheckerServiceInterface_block_invoke()
{
  uint64_t v0 = [MEMORY[0x263F08D80] interfaceWithProtocol:&unk_26F4351B8];
  uint64_t v1 = (void *)BRDiskCheckerServiceInterface_interface;
  BRDiskCheckerServiceInterface_interface = v0;

  id v2 = (void *)BRDiskCheckerServiceInterface_interface;
  id v3 = (void *)MEMORY[0x263EFFA08];
  uint64_t v4 = objc_opt_class();
  long long v5 = objc_msgSend(v3, "setWithObjects:", v4, objc_opt_class(), 0);
  [v2 setClasses:v5 forSelector:sel_checkTreeConsistencyWithDatabaseURL_rootURLWrappers_fileChecksumRatePerThousand_packageChecksumRatePerThousand_maxEventsCount_forZoneRowIDs_reply_ argumentIndex:1 ofReply:0];

  long long v6 = (void *)BRDiskCheckerServiceInterface_interface;
  uint64_t v7 = (void *)MEMORY[0x263EFFA08];
  uint64_t v8 = objc_opt_class();
  uint64_t v9 = objc_msgSend(v7, "setWithObjects:", v8, objc_opt_class(), 0);
  [v6 setClasses:v9 forSelector:sel_checkTreeConsistencyWithDatabaseURL_rootURLWrappers_fileChecksumRatePerThousand_packageChecksumRatePerThousand_maxEventsCount_forZoneRowIDs_reply_ argumentIndex:0 ofReply:1];

  uint64_t v10 = (void *)BRDiskCheckerServiceInterface_interface;
  __int16 v11 = (void *)MEMORY[0x263EFFA08];
  uint64_t v12 = objc_opt_class();
  objc_msgSend(v11, "setWithObjects:", v12, objc_opt_class(), 0);
  id v13 = (id)objc_claimAutoreleasedReturnValue();
  [v10 setClasses:v13 forSelector:sel_checkTreeConsistencyWithDatabaseURL_rootURLWrappers_fileChecksumRatePerThousand_packageChecksumRatePerThousand_maxEventsCount_forZoneRowIDs_reply_ argumentIndex:1 ofReply:1];
}

void OUTLINED_FUNCTION_12_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

BOOL BRCExtensionErrorPayloadReadFrom(char *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  uint64_t v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    uint64_t v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 16)
      {
        if (v17 == 17)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 8;
          goto LABEL_28;
        }
        if (v17 == 18)
        {
          id v20 = PBReaderReadString();
          if (v20) {
            [a1 addRecordIds:v20];
          }
          goto LABEL_29;
        }
      }
      else
      {
        if (v17 == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 16;
          goto LABEL_28;
        }
        if (v17 == 16)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = 24;
LABEL_28:
          id v20 = *(void **)&a1[v19];
          *(void *)&a1[v19] = v18;
LABEL_29:

          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FA93A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  objc_destroyWeak(v30);
  _Block_object_dispose(&a28, 8);
  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak((id *)(v31 - 184));
  _Unwind_Resume(a1);
}

void sub_23FA93EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA94188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA94380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA946B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA947B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t BRCItemFieldsPrettyPrint()
{
  return BRCPrettyPrintBitmap();
}

uint64_t BRCIsBusyDate(uint64_t a1)
{
  return [MEMORY[0x263F39790] dateIsBusyFolderDate:(double)a1 - *MEMORY[0x263EFFAF8]];
}

uint64_t BRFieldPkgItemReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  uint64_t v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    uint64_t v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_62;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_64;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_62:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_64:
          *(_DWORD *)(a1 + 56) = v19;
          continue;
        case 2u:
          uint64_t v23 = PBReaderReadString();
          uint64_t v24 = 24;
          goto LABEL_53;
        case 3u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 64) |= 1u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v2_Block_object_dispose(&STACK[0x280], 8) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  uint64_t v27 = 0;
                  goto LABEL_68;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v27 = 0;
          }
LABEL_68:
          uint64_t v50 = 8;
          goto LABEL_82;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          *(unsigned char *)(a1 + 64) |= 8u;
          while (2)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
              *(void *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v33 = 0;
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v33 = 0;
          }
LABEL_72:
          BOOL v51 = v33 != 0;
          uint64_t v52 = 61;
          goto LABEL_77;
        case 5u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          *(unsigned char *)(a1 + 64) |= 4u;
          while (2)
          {
            uint64_t v40 = *v3;
            unint64_t v41 = *(void *)(a2 + v40);
            if (v41 == -1 || v41 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v42 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
              *(void *)(a2 + v40) = v41 + 1;
              v39 |= (unint64_t)(v42 & 0x7F) << v37;
              if (v42 < 0)
              {
                v37 += 7;
                BOOL v14 = v38++ >= 9;
                if (v14)
                {
                  uint64_t v39 = 0;
                  goto LABEL_76;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v39 = 0;
          }
LABEL_76:
          BOOL v51 = v39 != 0;
          uint64_t v52 = 60;
LABEL_77:
          *(unsigned char *)(a1 + v52) = v51;
          continue;
        case 6u:
          uint64_t v23 = PBReaderReadString();
          uint64_t v24 = 48;
          goto LABEL_53;
        case 7u:
          uint64_t v23 = PBReaderReadData();
          uint64_t v24 = 32;
          goto LABEL_53;
        case 0xFu:
          uint64_t v23 = PBReaderReadData();
          uint64_t v24 = 40;
LABEL_53:
          char v44 = *(void **)(a1 + v24);
          *(void *)(a1 + v24) = v23;

          continue;
        case 0x10u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 64) |= 2u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v47 = *v3;
        unint64_t v48 = *(void *)(a2 + v47);
        if (v48 == -1 || v48 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
        *(void *)(a2 + v47) = v48 + 1;
        v27 |= (unint64_t)(v49 & 0x7F) << v45;
        if ((v49 & 0x80) == 0) {
          goto LABEL_79;
        }
        v45 += 7;
        BOOL v14 = v46++ >= 9;
        if (v14)
        {
          uint64_t v27 = 0;
          goto LABEL_81;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_79:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v27 = 0;
      }
LABEL_81:
      uint64_t v50 = 16;
LABEL_82:
      *(void *)(a1 + v50) = v27;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void __brc_pendingPlaceholder_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x263EFF8F8]) initWithBytes:"\x01?" length:2];
  uint64_t v1 = (void *)brc_pendingPlaceholder_filePlaceHolder;
  brc_pendingPlaceholder_filePlaceHolder = v0;

  uint64_t v2 = [objc_alloc(MEMORY[0x263EFF8F8]) initWithBytes:"\x1B?" length:2];
  id v3 = (void *)brc_pendingPlaceholder_pkgPlaceHolder;
  brc_pendingPlaceholder_pkgPlaceHolder = v2;
}

void sub_23FA9AF14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void sub_23FA9B844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA9B9D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void dispatch_async_with_logs_1(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  long long v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  long long v6 = brc_bread_crumbs();
  uint64_t v7 = brc_notifications_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[NOTIF] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_2;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  char v8 = v3;
  char v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FA9C0C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FA9C618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
}

void sub_23FA9C944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA9CC00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FA9CD6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_2(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  id v3 = brc_notifications_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[NOTIF] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FA9CF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FA9D1E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void sub_23FA9DB8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FA9DE60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t AppTelemetryQBSPerformanceReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    uint64_t v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v17;

          continue;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 48) |= 4u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_53:
          uint64_t v41 = 24;
          goto LABEL_66;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v2_Block_object_dispose(&STACK[0x280], 8) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_57;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_57:
          uint64_t v41 = 8;
          goto LABEL_66;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 48) |= 2u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v22 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  uint64_t v22 = 0;
                  goto LABEL_61;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v22 = 0;
          }
LABEL_61:
          uint64_t v41 = 16;
          goto LABEL_66;
        case 5u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 48) |= 8u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v38 = *v3;
        unint64_t v39 = *(void *)(a2 + v38);
        if (v39 == -1 || v39 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
        *(void *)(a2 + v3_Block_object_dispose(&STACK[0x280], 8) = v39 + 1;
        v22 |= (unint64_t)(v40 & 0x7F) << v36;
        if ((v40 & 0x80) == 0) {
          goto LABEL_63;
        }
        v36 += 7;
        BOOL v14 = v37++ >= 9;
        if (v14)
        {
          uint64_t v22 = 0;
          goto LABEL_65;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_63:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v22 = 0;
      }
LABEL_65:
      uint64_t v41 = 32;
LABEL_66:
      *(void *)(a1 + v41) = v22;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t brc_mutex_init_recursive(pthread_mutex_t *a1)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  v3.__sig = 0;
  *(void *)v3.__opaque = 0;
  pthread_mutexattr_init(&v3);
  pthread_mutexattr_settype(&v3, 2);
  LODWORD(a1) = pthread_mutex_init(a1, &v3);
  pthread_mutexattr_destroy(&v3);
  if (a1) {
    brc_mutex_abort((uint64_t)"Can't init mutex");
  }
  return 0;
}

void brc_mutex_abort(uint64_t a1)
{
  uint64_t v2 = brc_bread_crumbs();
  pthread_mutexattr_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
  {
    int v4 = 136315394;
    uint64_t v5 = a1;
    __int16 v6 = 2112;
    uint64_t v7 = v2;
    _os_log_fault_impl(&dword_23FA42000, v3, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: mutex error: %s%@", (uint8_t *)&v4, 0x16u);
  }

  __break(1u);
}

uint64_t brc_mutex_init(pthread_mutex_t *a1)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  v3.__sig = 0;
  *(void *)v3.__opaque = 0;
  pthread_mutexattr_init(&v3);
  pthread_mutexattr_settype(&v3, 1);
  LODWORD(a1) = pthread_mutex_init(a1, &v3);
  pthread_mutexattr_destroy(&v3);
  if (a1) {
    brc_mutex_abort((uint64_t)"Can't init mutex");
  }
  return 0;
}

uint64_t brc_mutex_destroy(pthread_mutex_t *a1)
{
  uint64_t result = pthread_mutex_destroy(a1);
  if (result) {
    brc_mutex_abort((uint64_t)"Can't destroy mutex");
  }
  return result;
}

uint64_t brc_mutex_lock(pthread_mutex_t *a1)
{
  uint64_t result = pthread_mutex_lock(a1);
  if (result)
  {
    if (result == 11) {
      brc_mutex_abort((uint64_t)"Dead lock");
    }
    brc_mutex_abort((uint64_t)"Invalid mutex");
  }
  return result;
}

uint64_t brc_mutex_unlock(pthread_mutex_t *a1)
{
  uint64_t result = pthread_mutex_unlock(a1);
  if (result) {
    brc_mutex_abort((uint64_t)"Can't unlock mutex");
  }
  return result;
}

uint64_t brc_mutex_assert_locked(pthread_mutex_t *a1)
{
  uint64_t result = pthread_mutex_lock(a1);
  if (result != 11) {
    brc_mutex_abort((uint64_t)"Mutex should already be locked");
  }
  return result;
}

uint64_t brc_mutex_assert_unlocked(pthread_mutex_t *a1)
{
  uint64_t result = pthread_mutex_lock(a1);
  if (result)
  {
    if (result == 11) {
      brc_mutex_abort((uint64_t)"Mutex should already be locked");
    }
  }
  else
  {
    return pthread_mutex_unlock(a1);
  }
  return result;
}

void sub_23FAA0688(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_23FAA0904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void sub_23FAA1378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void sub_23FAA160C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FAA1C68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAA4DA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_23FAA51F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FAA66CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _buddyHasFinished(uint64_t a1, void *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  pthread_mutexattr_t v3 = brc_bread_crumbs();
  uint64_t v4 = brc_default_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412290;
    uint64_t v7 = v3;
    _os_log_impl(&dword_23FA42000, v4, OS_LOG_TYPE_DEFAULT, "[NOTICE] BYSetupAssistantFinishedDarwinNotification was received%@", (uint8_t *)&v6, 0xCu);
  }

  return [a2 _stopObservingBuddyAndExecuteCallbacks];
}

void sub_23FAA6D74(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v2 - 128), 8);
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void sub_23FAA70DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAA72F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FAA73E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAA780C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FAA7B48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAA7E80(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_23FAA81B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAA84E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_3(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  pthread_mutexattr_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    unint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FAA8864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t AppTelemetryInvestigationReadFrom(uint64_t a1, uint64_t a2)
{
  pthread_mutexattr_t v3 = (int *)MEMORY[0x263F62298];
  uint64_t v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 0x3E8u:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 144;
        goto LABEL_95;
      case 0x3E9u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 160) |= 0x80u;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                uint64_t v22 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_106:
        BOOL v68 = v22 != 0;
        uint64_t v69 = 156;
        goto LABEL_131;
      case 0x3EAu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 40;
        goto LABEL_95;
      case 0x3EBu:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 160) |= 1u;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_110:
        uint64_t v70 = 8;
        goto LABEL_136;
      case 0x3ECu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
        goto LABEL_95;
      case 0x3EDu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 80;
        goto LABEL_95;
      case 0x3EEu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 64;
        goto LABEL_95;
      case 0x3EFu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 120;
        goto LABEL_95;
      case 0x3F0u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 96;
        goto LABEL_95;
      case 0x3F1u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 160) |= 0x40u;
        while (2)
        {
          uint64_t v35 = *v3;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
            *(void *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v14 = v33++ >= 9;
              if (v14)
              {
                uint64_t v34 = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v34 = 0;
        }
LABEL_114:
        BOOL v68 = v34 != 0;
        uint64_t v69 = 155;
        goto LABEL_131;
      case 0x3F2u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 160) |= 8u;
        while (2)
        {
          uint64_t v41 = *v3;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
            *(void *)(a2 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v14 = v39++ >= 9;
              if (v14)
              {
                uint64_t v40 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v40 = 0;
        }
LABEL_118:
        BOOL v68 = v40 != 0;
        uint64_t v69 = 152;
        goto LABEL_131;
      case 0x3F3u:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 160) |= 0x20u;
        while (2)
        {
          uint64_t v47 = *v3;
          unint64_t v48 = *(void *)(a2 + v47);
          if (v48 == -1 || v48 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
            *(void *)(a2 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v14 = v45++ >= 9;
              if (v14)
              {
                uint64_t v46 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v46 = 0;
        }
LABEL_122:
        BOOL v68 = v46 != 0;
        uint64_t v69 = 154;
        goto LABEL_131;
      case 0x3F4u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 48;
        goto LABEL_95;
      case 0x3F5u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 88;
        goto LABEL_95;
      case 0x3F6u:
        uint64_t v50 = objc_alloc_init(AppTelemetryQBSInvestigation);
        objc_storeStrong((id *)(a1 + 104), v50);
        if (!PBReaderPlaceMark() || !AppTelemetryQBSInvestigationReadFrom((uint64_t)v50, a2)) {
          goto LABEL_139;
        }
        goto LABEL_86;
      case 0x3F7u:
        uint64_t v50 = objc_alloc_init(AppTelemetryQBSPerformance);
        objc_storeStrong((id *)(a1 + 112), v50);
        if (!PBReaderPlaceMark() || (AppTelemetryQBSPerformanceReadFrom((uint64_t)v50, a2) & 1) == 0) {
          goto LABEL_139;
        }
        goto LABEL_86;
      case 0x3F8u:
        uint64_t v50 = objc_alloc_init(AppTelemetryFPFSMigrationInvestigation);
        objc_storeStrong((id *)(a1 + 56), v50);
        if (!PBReaderPlaceMark()
          || (AppTelemetryFPFSMigrationInvestigationReadFrom((uint64_t)v50, a2) & 1) == 0)
        {
          goto LABEL_139;
        }
        goto LABEL_86;
      case 0x3F9u:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 160) |= 2u;
        while (2)
        {
          uint64_t v53 = *v3;
          unint64_t v54 = *(void *)(a2 + v53);
          if (v54 == -1 || v54 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + *v7) + v54);
            *(void *)(a2 + v53) = v54 + 1;
            v28 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v51 += 7;
              BOOL v14 = v52++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_126:
        uint64_t v70 = 16;
        goto LABEL_136;
      case 0x3FAu:
        uint64_t v50 = objc_alloc_init(AppTelemetryItemStatsInvestigation);
        objc_storeStrong((id *)(a1 + 72), v50);
        if (!PBReaderPlaceMark()
          || (AppTelemetryItemStatsInvestigationReadFrom((uint64_t)v50, a2) & 1) == 0)
        {
          goto LABEL_139;
        }
        goto LABEL_86;
      case 0x3FBu:
        uint64_t v50 = objc_alloc_init(AppTelemetryStuckStatus);
        objc_storeStrong((id *)(a1 + 128), v50);
        if PBReaderPlaceMark() && (AppTelemetryStuckStatusReadFrom((uint64_t)v50, a2))
        {
LABEL_86:
          PBReaderRecallMark();

LABEL_137:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_139:

        return 0;
      case 0x3FCu:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(unsigned char *)(a1 + 160) |= 0x10u;
        while (2)
        {
          uint64_t v59 = *v3;
          unint64_t v60 = *(void *)(a2 + v59);
          if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
            *(void *)(a2 + v59) = v60 + 1;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v14 = v57++ >= 9;
              if (v14)
              {
                uint64_t v58 = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v58 = 0;
        }
LABEL_130:
        BOOL v68 = v58 != 0;
        uint64_t v69 = 153;
LABEL_131:
        *(unsigned char *)(a1 + v69) = v68;
        goto LABEL_137;
      case 0x3FDu:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 136;
LABEL_95:
        unsigned int v62 = *(void **)(a1 + v18);
        *(void *)(a1 + v1_Block_object_dispose(&STACK[0x280], 8) = v17;

        goto LABEL_137;
      case 0x3FEu:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 160) |= 4u;
        while (2)
        {
          uint64_t v65 = *v3;
          unint64_t v66 = *(void *)(a2 + v65);
          if (v66 == -1 || v66 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
            *(void *)(a2 + v65) = v66 + 1;
            v28 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              BOOL v14 = v64++ >= 9;
              if (v14)
              {
                uint64_t v28 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v28 = 0;
        }
LABEL_135:
        uint64_t v70 = 24;
LABEL_136:
        *(void *)(a1 + v70) = v28;
        goto LABEL_137;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_137;
    }
  }
}

void sub_23FAABC30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FAABDF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_4_1(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x280], 8) = a1;
}

void sub_23FAAEF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 152));
  _Unwind_Resume(a1);
}

void sub_23FAAFBB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
}

void sub_23FAB0954(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAB21E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  _Block_object_dispose((const void *)(v30 - 160), 8);
  __brc_leave_section(&a30);
  _Unwind_Resume(a1);
}

void sub_23FAB2BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAB3170(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAB37D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_23FAB4804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,id location,uint64_t a63)
{
  __brc_leave_section(&a72);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void sub_23FAB4AC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_23FAB4C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAB4EAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_23FAB4FF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAB5C20(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 232));
  _Block_object_dispose((const void *)(v1 - 224), 8);
  _Unwind_Resume(a1);
}

void sub_23FAB5E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAB61F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAB65C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FAB6B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAB6E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAB7244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAB7598(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAB7F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

void __brc_dispatch_async_autorelease_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x2455D97F0]();
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __brc_dispatch_async_autorelease_with_logs_block_invoke_0(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)MEMORY[0x2455D97F0]();
  long long v6 = *(_OWORD *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v3 = brc_bread_crumbs();
  uint64_t v4 = brc_notifications_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v9 = v6;
    __int16 v10 = 2080;
    uint64_t v11 = label;
    __int16 v12 = 2112;
    char v13 = v3;
    _os_log_debug_impl(&dword_23FA42000, v4, OS_LOG_TYPE_DEBUG, "[NOTIF] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v6);
}

void sub_23FAB8118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void __dispatch_async_with_logs_block_invoke_4(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_notifications_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    __int16 v10 = label;
    __int16 v11 = 2112;
    __int16 v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[NOTIF] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FAB825C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id userNotificationRefToCompletionBlock()
{
  if (userNotificationRefToCompletionBlock_onceToken != -1) {
    dispatch_once(&userNotificationRefToCompletionBlock_onceToken, &__block_literal_global_309);
  }
  uint64_t v0 = (void *)userNotificationRefToCompletionBlock_userNotificationRefToCompletion;
  return v0;
}

void sub_23FAB88CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void _notificationCallback(void *a1, char a2)
{
  dispatch_assert_queue_V2(MEMORY[0x263EF83A0]);
  uint64_t v4 = userNotificationRefToCompletionBlock();
  id v5 = a1;
  uint64_t v6 = [v4 objectForKey:v5];
  if (v6)
  {
    uint64_t v7 = a2 & 3;
    uint64_t v8 = brc_bread_crumbs();
    __int16 v9 = brc_default_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
      _notificationCallback_cold_2();
    }

    v6[2](v6, v7);
  }
  else
  {
    __int16 v10 = brc_bread_crumbs();
    __int16 v11 = brc_default_log();
    if (os_log_type_enabled(v11, (os_log_type_t)0x90u)) {
      _notificationCallback_cold_1();
    }
  }
  [v4 removeObjectForKey:v5];
}

void sub_23FAB9708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void __userNotificationRefToCompletionBlock_block_invoke()
{
  uint64_t v0 = [MEMORY[0x263F08968] strongToStrongObjectsMapTable];
  uint64_t v1 = (void *)userNotificationRefToCompletionBlock_userNotificationRefToCompletion;
  userNotificationRefToCompletionBlock_userNotificationRefToCompletion = v0;
}

void sub_23FABCD2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(location);
  objc_destroyWeak(a9);
  objc_destroyWeak(&a28);
  _Unwind_Resume(a1);
}

void sub_23FABEB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FABEF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FABF108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FABF338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FABF6F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAC00C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAC046C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAC0C48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAC0ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FAC117C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAC1498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FAC15DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAC1984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_5(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    __int16 v10 = label;
    __int16 v11 = 2112;
    uint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FAC3DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FAC5828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FAC6B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,os_activity_scope_state_s state)
{
}

void sub_23FAC77B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL BRCRecursivelyChangeOwnerAndGroupToMobile(void *a1, void *a2)
{
  v48[2] = *MEMORY[0x263EF8340];
  id v25 = a1;
  uint64_t v2 = *MEMORY[0x263F08028];
  v47[0] = *MEMORY[0x263F08060];
  v47[1] = v2;
  v48[0] = @"mobile";
  v48[1] = @"mobile";
  uint64_t v3 = [NSDictionary dictionaryWithObjects:v48 forKeys:v47 count:2];
  uint64_t v34 = 0;
  uint64_t v35 = &v34;
  uint64_t v36 = 0x3032000000;
  char v37 = __Block_byref_object_copy__12;
  char v38 = __Block_byref_object_dispose__12;
  id v39 = 0;
  id obj = 0;
  char v4 = [v25 setResourceValues:v3 error:&obj];
  objc_storeStrong(&v39, obj);
  if (v4)
  {
    long long v5 = [MEMORY[0x263F08850] defaultManager];
    v32[0] = MEMORY[0x263EF8330];
    v32[1] = 3221225472;
    v32[2] = __BRCRecursivelyChangeOwnerAndGroupToMobile_block_invoke;
    v32[3] = &unk_265080670;
    v32[4] = &v34;
    uint64_t v6 = [v5 enumeratorAtURL:v25 includingPropertiesForKeys:0 options:0 errorHandler:v32];

    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id v7 = v6;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v28 objects:v40 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v29;
      while (2)
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v29 != v9) {
            objc_enumerationMutation(v7);
          }
          __int16 v11 = *(void **)(*((void *)&v28 + 1) + 8 * i);
          uint64_t v12 = (void *)MEMORY[0x2455D97F0]();
          uint64_t v13 = (id *)(v35 + 5);
          id v27 = (id)v35[5];
          int v14 = [v11 setResourceValues:v3 error:&v27];
          objc_storeStrong(v13, v27);
          if ((v14 & 1) == 0)
          {
            uint64_t v15 = brc_bread_crumbs();
            uint64_t v16 = brc_default_log();
            if (os_log_type_enabled(v16, (os_log_type_t)0x90u))
            {
              uint64_t v17 = [v11 path];
              uint64_t v18 = v35[5];
              *(_DWORD *)buf = 138412802;
              unint64_t v42 = v17;
              __int16 v43 = 2112;
              uint64_t v44 = v18;
              __int16 v45 = 2112;
              uint64_t v46 = v15;
              _os_log_error_impl(&dword_23FA42000, v16, (os_log_type_t)0x90u, "[ERROR] Failed to make %@ owned by mobile: %@%@", buf, 0x20u);
            }
            if (a2) {
              *a2 = (id) v35[5];
            }
          }
          if (!v14)
          {

            BOOL v19 = 0;
            goto LABEL_21;
          }
        }
        uint64_t v8 = [v7 countByEnumeratingWithState:&v28 objects:v40 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }

    BOOL v19 = v35[5] == 0;
LABEL_21:
  }
  else
  {
    char v20 = brc_bread_crumbs();
    unsigned int v21 = brc_default_log();
    if (os_log_type_enabled(v21, (os_log_type_t)0x90u))
    {
      uint64_t v23 = [v25 path];
      uint64_t v24 = v35[5];
      *(_DWORD *)buf = 138412802;
      unint64_t v42 = v23;
      __int16 v43 = 2112;
      uint64_t v44 = v24;
      __int16 v45 = 2112;
      uint64_t v46 = v20;
      _os_log_error_impl(&dword_23FA42000, v21, (os_log_type_t)0x90u, "[ERROR] Failed to make %@ owned by mobile: %@%@", buf, 0x20u);
    }
    BOOL v19 = 0;
    if (a2) {
      *a2 = (id) v35[5];
    }
  }
  _Block_object_dispose(&v34, 8);

  return v19;
}

void sub_23FAC8A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

uint64_t __BRCRecursivelyChangeOwnerAndGroupToMobile_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id v7 = brc_bread_crumbs();
  uint64_t v8 = brc_default_log();
  if (os_log_type_enabled(v8, (os_log_type_t)0x90u))
  {
    uint64_t v12 = [v5 path];
    int v13 = 138412802;
    int v14 = v12;
    __int16 v15 = 2112;
    id v16 = v6;
    __int16 v17 = 2112;
    uint64_t v18 = v7;
    _os_log_error_impl(&dword_23FA42000, v8, (os_log_type_t)0x90u, "[ERROR] Error enumerating %@: %@%@", (uint8_t *)&v13, 0x20u);
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;

  return 0;
}

__CFString *BRCAppLibraryStatePrettyPrint(unsigned int a1)
{
  return BRCPrettyPrintBitmapWithContext(a1, (uint64_t)&applibrary_state_entries, 0);
}

__CFString *BRCAppLibraryStatePrettyPrintWithContext(unsigned int a1, void *a2)
{
  return BRCPrettyPrintBitmapWithContext(a1, (uint64_t)&applibrary_state_entries, a2);
}

void sub_23FACA9C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FACBE0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FACD7CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_2(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v3 = a1;
  id v4 = a2;
  id v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  id v6 = brc_bread_crumbs();
  id v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    char v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_6;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  uint64_t v8 = v3;
  int v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FACDDA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FACE6D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FACFECC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_6(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    uint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FAD0B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void OUTLINED_FUNCTION_9_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x20u);
}

void sub_23FAD1518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FAD17CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAD195C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAD5E6C(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 200));
  _Unwind_Resume(a1);
}

void sub_23FAD7798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

void sub_23FAD7D14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_7(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    uint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FAD9CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

__CFString *BRCPrettyPrintBitmapWithContext(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v5 = a3;
  uint64_t v6 = [MEMORY[0x263F089D8] stringWithCapacity:255];
  if (*(void *)(a2 + 8))
  {
    id v7 = (int *)(a2 + 16);
    unint64_t v8 = 0x263F08000uLL;
    unint64_t v9 = 0x26507D000uLL;
    id v28 = v5;
    while (1)
    {
      uint64_t v10 = *((void *)v7 - 2);
      if ((v10 & ~a1) != 0) {
        goto LABEL_21;
      }
      if (!v10 && a1 != 0) {
        goto LABEL_21;
      }
      id v12 = v5;
      uint64_t v13 = [*(id *)(v8 + 2880) stringWithUTF8String:*((void *)v7 - 1)];
      id v14 = v13;
      int v15 = *v7;
      if (*v7 == 2) {
        break;
      }
      if (v15 == 1)
      {
        long long v17 = *(void **)(v9 + 3072);
        uint64_t v18 = v14;
        uint64_t v19 = 1;
LABEL_15:
        id v16 = [v17 highlightedString:v18 type:v19 context:v12];
        goto LABEL_16;
      }
      if (v15)
      {
        unint64_t v21 = v9;
        unint64_t v22 = v8;
        uint64_t v23 = brc_bread_crumbs();
        uint64_t v24 = brc_default_log();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)buf = 138412290;
          long long v30 = v23;
          _os_log_fault_impl(&dword_23FA42000, v24, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: unknown color%@", buf, 0xCu);
        }

        id v20 = v14;
        unint64_t v8 = v22;
        unint64_t v9 = v21;
        id v5 = v28;
        goto LABEL_20;
      }
      id v16 = v13;
LABEL_16:
      id v20 = v16;
LABEL_20:

      [v6 appendFormat:@"%@|", v20];
      a1 ^= v10;
LABEL_21:
      uint64_t v25 = *((void *)v7 + 2);
      v7 += 6;
      if (!v25) {
        goto LABEL_22;
      }
    }
    long long v17 = *(void **)(v9 + 3072);
    uint64_t v18 = v14;
    uint64_t v19 = 3;
    goto LABEL_15;
  }
LABEL_22:
  if (a1)
  {
    objc_msgSend(v6, "appendFormat:", @"0x%llx", a1);
LABEL_26:
    char v26 = v6;
    goto LABEL_27;
  }
  if ([v6 length])
  {
    objc_msgSend(v6, "deleteCharactersInRange:", objc_msgSend(v6, "length") - 1, 1);
    goto LABEL_26;
  }
  char v26 = &stru_26F3822F0;
LABEL_27:

  return v26;
}

void sub_23FADC314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_3(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v3 = a1;
  id v4 = a2;
  id v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  id v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    id v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_8;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  unint64_t v8 = v3;
  uint64_t v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FADCB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

void sub_23FADD01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FADD258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FAE0388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __brc_leave_section(&a64);
  _Unwind_Resume(a1);
}

void sub_23FAE06B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_8(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    id v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FAE0D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void OUTLINED_FUNCTION_5_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, (os_log_type_t)0x90u, a4, a5, 0x16u);
}

uint64_t BRCIsLegacyUbiquityFault(int a1, char a2, __int16 a3, _DWORD *a4)
{
  if ((a2 & 0x20) != 0)
  {
    value[0] = 0;
    value[1] = 0;
    int v10 = 0;
    if (fgetxattr(a1, "com.apple.decmpfs", value, 0x14uLL, 0, 32) == 20)
    {
      BOOL v6 = LODWORD(value[0]) == 1668116582 && HIDWORD(value[0]) == -2147483647;
      if (v6 && v10 == 1) {
        return 1;
      }
    }
  }
  if ((a3 & 0xF000) == 0x4000 && *a4 == 1802465890) {
    return 2;
  }
  return 0;
}

uint64_t BRCTouchRootMergeWitness(void *a1, void *a2)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = (void *)MEMORY[0x263F08850];
  id v5 = a1;
  BOOL v6 = [v4 defaultManager];
  id v7 = [v5 stringByAppendingPathComponent:*MEMORY[0x263F324F0]];

  id v25 = 0;
  char v8 = [v6 createDirectoryAtPath:v7 withIntermediateDirectories:1 attributes:0 error:&v25];
  id v9 = v25;
  if ((v8 & 1) == 0)
  {
    int v10 = brc_bread_crumbs();
    __int16 v11 = brc_default_log();
    if (os_log_type_enabled(v11, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 138412802;
      long long v30 = v7;
      __int16 v31 = 2112;
      id v32 = v9;
      __int16 v33 = 2112;
      uint64_t v34 = v10;
      _os_log_error_impl(&dword_23FA42000, v11, (os_log_type_t)0x90u, "[ERROR] Unable to create directory \"%@\": %@%@", buf, 0x20u);
    }
  }
  id v12 = NSURL;
  v28[0] = v7;
  v28[1] = @".icloud-drive.do-not-delete";
  uint64_t v13 = [MEMORY[0x263EFF8C0] arrayWithObjects:v28 count:2];
  id v14 = [v12 fileURLWithPathComponents:v13];

  long long v15 = [MEMORY[0x263EFF8F8] data];
  [v15 writeToURL:v14 atomically:0];

  uint64_t v16 = *MEMORY[0x263EFF6C8];
  v26[0] = *MEMORY[0x263EFF610];
  v26[1] = v16;
  v27[0] = v3;
  v27[1] = MEMORY[0x263EFFA88];
  long long v17 = [NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:2];
  id v24 = v9;
  uint64_t v18 = [v14 setResourceValues:v17 error:&v24];
  id v19 = v24;

  if ((v18 & 1) == 0)
  {
    id v20 = brc_bread_crumbs();
    uint64_t v21 = brc_default_log();
    if (os_log_type_enabled(v21, (os_log_type_t)0x90u))
    {
      uint64_t v23 = [v14 path];
      *(_DWORD *)buf = 138412802;
      long long v30 = v23;
      __int16 v31 = 2112;
      id v32 = v19;
      __int16 v33 = 2112;
      uint64_t v34 = v20;
      _os_log_error_impl(&dword_23FA42000, v21, (os_log_type_t)0x90u, "[ERROR] Unable to set mtime & hidden on \"%@\": %@%@", buf, 0x20u);
    }
  }

  return v18;
}

uint64_t BRCMigrateLegacyUbiquityRoot(void *a1, void *a2, void *a3)
{
  uint64_t v226 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v201 = a3;
  memset(v209, 0, sizeof(v209));
  __brc_create_section(0, (uint64_t)"BRCMigrateLegacyUbiquityRoot", 183, v209);
  id v7 = brc_bread_crumbs();
  char v8 = brc_default_log();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    BRCMigrateLegacyUbiquityRoot_cold_6();
  }

  id v9 = v6;
  int v10 = (const char *)[v9 fileSystemRepresentation];
  int v16 = BRCOpenAt(0xFFFFFFFFLL, v10, 33028, v11, v12, v13, v14, v15, v196);
  if (v16 < 0)
  {
    if (*__error() == 2)
    {
      int v17 = 0;
      goto LABEL_10;
    }
    int v18 = *__error();
    id v19 = brc_bread_crumbs();
    id v20 = brc_default_log();
    if (os_log_type_enabled(v20, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 138412802;
      *(void *)&uint8_t buf[4] = v9;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = v18;
      *(_WORD *)&buf[18] = 2112;
      *(void *)&buf[20] = v19;
      _os_log_error_impl(&dword_23FA42000, v20, (os_log_type_t)0x90u, "[ERROR] can't open root '%@' %{errno}d%@", buf, 0x1Cu);
    }

    *__error() = v18;
  }
  int v17 = 1;
LABEL_10:
  v203 = BRCGetXattrValueForKeyOnFD(v16, v9, @"com.apple.ubd.prsid");
  v202 = [v5 stringByAppendingString:@".CloudDocs"];
  uint64_t v21 = [BRCFileUnlinker alloc];
  unint64_t v22 = [v201 stringByAppendingPathComponent:@"Caches/com.apple.bird"];
  v204 = [(BRCFileUnlinker *)v21 initWithCacheDirPath:v22];

  [(BRCFileUnlinker *)v204 resume];
  int v23 = [v203 isEqualToString:v202];
  memset(&v208, 0, sizeof(v208));
  id v205 = [v9 stringByAppendingPathExtension:v202];
  int v24 = lstat((const char *)[v205 fileSystemRepresentation], &v208);
  if (v24 < 0)
  {
    if (*__error() != 2)
    {
      int v44 = *__error();
      __int16 v45 = brc_bread_crumbs();
      uint64_t v46 = brc_default_log();
      if (os_log_type_enabled(v46, (os_log_type_t)0x90u))
      {
        *(_DWORD *)buf = 138412802;
        *(void *)&uint8_t buf[4] = v205;
        *(_WORD *)&buf[12] = 1024;
        *(_DWORD *)&buf[14] = v44;
        *(_WORD *)&buf[18] = 2112;
        *(void *)&buf[20] = v45;
        _os_log_error_impl(&dword_23FA42000, v46, (os_log_type_t)0x90u, "[ERROR] can't lstat '%@' %{errno}d%@", buf, 0x1Cu);
      }

      *__error() = v44;
    }
    if (v23)
    {
      close(v16);
      goto LABEL_95;
    }
  }
  else
  {
    id v25 = brc_bread_crumbs();
    char v26 = brc_default_log();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      int v199 = aPcDBLSW[(unint64_t)v208.st_mode >> 12];
      if ((v208.st_mode & 0x100) != 0) {
        int v27 = 114;
      }
      else {
        int v27 = 45;
      }
      if ((v208.st_mode & 0x80) != 0) {
        int v28 = 119;
      }
      else {
        int v28 = 45;
      }
      if ((v208.st_mode & 0x40) != 0) {
        int v29 = 120;
      }
      else {
        int v29 = 45;
      }
      if ((v208.st_mode & 0x20) != 0) {
        int v30 = 114;
      }
      else {
        int v30 = 45;
      }
      if ((v208.st_mode & 0x10) != 0) {
        int v31 = 119;
      }
      else {
        int v31 = 45;
      }
      if ((v208.st_mode & 8) != 0) {
        int v32 = 120;
      }
      else {
        int v32 = 45;
      }
      if ((v208.st_mode & 4) != 0) {
        int v33 = 114;
      }
      else {
        int v33 = 45;
      }
      if ((v208.st_mode & 2) != 0) {
        int v34 = 119;
      }
      else {
        int v34 = 45;
      }
      if (v208.st_mode) {
        int v35 = 120;
      }
      else {
        int v35 = 45;
      }
      *(_DWORD *)buf = 138417666;
      *(void *)&uint8_t buf[4] = v205;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = v208.st_dev;
      *(_WORD *)&buf[18] = 2048;
      *(void *)&buf[20] = v208.st_ino;
      *(_WORD *)&buf[28] = 1024;
      *(_DWORD *)&buf[30] = v199;
      *(_WORD *)&buf[34] = 1024;
      *(_DWORD *)&buf[36] = v27;
      *(_WORD *)&buf[40] = 1024;
      *(_DWORD *)&buf[42] = v28;
      *(_WORD *)v215 = 1024;
      *(_DWORD *)&v215[2] = v29;
      *(_WORD *)v216 = 1024;
      *(_DWORD *)&v216[2] = v30;
      *(_WORD *)v217 = 1024;
      *(_DWORD *)&v217[2] = v31;
      *(_WORD *)v218 = 1024;
      *(_DWORD *)&v218[2] = v32;
      *(_WORD *)v219 = 1024;
      *(_DWORD *)&v219[2] = v33;
      *(_WORD *)v220 = 1024;
      *(_DWORD *)&v220[2] = v34;
      *(_WORD *)v221 = 1024;
      *(_DWORD *)&v221[2] = v35;
      *(_WORD *)v222 = 1024;
      *(_DWORD *)&v222[2] = v208.st_nlink;
      *(_WORD *)v223 = 1024;
      *(_DWORD *)&v223[2] = v208.st_uid;
      *(_WORD *)v224 = 1024;
      *(_DWORD *)&v224[2] = v208.st_gid;
      *(_WORD *)v225 = 2048;
      *(void *)&v225[2] = v208.st_atimespec.tv_sec;
      *(_WORD *)&v225[10] = 2048;
      *(void *)&v225[12] = v208.st_mtimespec.tv_sec;
      *(_WORD *)&v225[20] = 2048;
      *(void *)&v225[22] = v208.st_ctimespec.tv_sec;
      *(_WORD *)&v225[30] = 2048;
      *(void *)&v225[32] = v208.st_size;
      *(_WORD *)&v225[40] = 1024;
      *(_DWORD *)&v225[42] = v208.st_flags;
      *(_WORD *)&v225[46] = 2112;
      *(void *)&v225[48] = v25;
      _os_log_impl(&dword_23FA42000, v26, OS_LOG_TYPE_DEFAULT, "[NOTICE] found our root at '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", buf, 0xA2u);
    }

    if (v23)
    {
      if (![(BRCFileUnlinker *)v204 renameAndUnlinkInBackgroundItemAtPath:v205])
      {
        uint64_t v36 = brc_bread_crumbs();
        char v37 = brc_default_log();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_FAULT)) {
          BRCMigrateLegacyUbiquityRoot_cold_5();
        }
      }
      char v38 = [NSURL fileURLWithPath:v9];
      id v207 = 0;
      [v38 getResourceValue:&v207 forKey:*MEMORY[0x263EFF610] error:0];
      id v39 = v207;

      if (v39) {
        BRCTouchRootMergeWitness(v9, v39);
      }
      uint64_t v40 = brc_bread_crumbs();
      uint64_t v41 = brc_default_log();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_FAULT)) {
        BRCMigrateLegacyUbiquityRoot_cold_4();
      }

      id v42 = 0;
      uint64_t v43 = 0;
LABEL_147:

      goto LABEL_148;
    }
  }
  if ((v16 & 0x80000000) == 0)
  {
    close(v16);
    if (v203)
    {
      char v47 = [v203 hasPrefix:v5];
      if (v24 < 0) {
        char v48 = v47;
      }
      else {
        char v48 = 0;
      }
      if (v48)
      {
        char v49 = brc_bread_crumbs();
        uint64_t v50 = brc_default_log();
        if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412802;
          *(void *)&uint8_t buf[4] = v203;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v202;
          *(_WORD *)&buf[22] = 2112;
          *(void *)&unsigned char buf[24] = v49;
          char v51 = "[NOTICE] migrating root from accountString %@ to %@%@";
          unsigned int v52 = v50;
          uint32_t v53 = 32;
LABEL_84:
          _os_log_impl(&dword_23FA42000, v52, OS_LOG_TYPE_DEFAULT, v51, buf, v53);
          goto LABEL_85;
        }
        goto LABEL_85;
      }
    }
    else if (v24 < 0)
    {
      char v49 = brc_bread_crumbs();
      uint64_t v50 = brc_default_log();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        *(void *)&uint8_t buf[4] = v202;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v49;
        char v51 = "[NOTICE] tagging root with accountString %@%@";
        unsigned int v52 = v50;
        uint32_t v53 = 22;
        goto LABEL_84;
      }
LABEL_85:

      id v64 = v9;
      id v65 = v201;
      memset(v210, 0, sizeof(v210));
      __brc_create_section(0, (uint64_t)"_unlinkUbiquitySupportFiles", 58, v210);
      unint64_t v66 = brc_bread_crumbs();
      char v67 = brc_default_log();
      if (os_log_type_enabled(v67, OS_LOG_TYPE_DEBUG)) {
        BRCMigrateLegacyUbiquityRoot_cold_1();
      }

      BOOL v68 = [BRCFileUnlinker alloc];
      uint64_t v69 = [v65 stringByAppendingPathComponent:@"Caches/com.apple.bird"];
      uint64_t v70 = [(BRCFileUnlinker *)v68 initWithCacheDirPath:v69];

      [(BRCFileUnlinker *)v70 resume];
      memset(&v211, 0, 64);
      uint64_t v71 = [&unk_26F3DDB38 countByEnumeratingWithState:&v211 objects:buf count:16];
      if (v71)
      {
        uint64_t v72 = **(void **)&v211.st_uid;
        do
        {
          for (uint64_t i = 0; i != v71; ++i)
          {
            if (**(void **)&v211.st_uid != v72) {
              objc_enumerationMutation(&unk_26F3DDB38);
            }
            uint64_t v74 = [v64 stringByAppendingPathComponent:*(void *)(v211.st_ino + 8 * i)];
            [(BRCFileUnlinker *)v70 renameAndUnlinkInBackgroundItemAtPath:v74];
          }
          uint64_t v71 = [&unk_26F3DDB38 countByEnumeratingWithState:&v211 objects:buf count:16];
        }
        while (v71);
      }
      unint64_t v75 = [v65 stringByAppendingPathComponent:@"Application Support/Ubiquity"];
      [(BRCFileUnlinker *)v70 renameAndUnlinkInBackgroundItemAtPath:v75];

      char v76 = [v65 stringByAppendingPathComponent:@"Caches/com.apple.ubd"];
      [(BRCFileUnlinker *)v70 renameAndUnlinkInBackgroundItemAtPath:v76];

      char v77 = [v65 stringByAppendingPathComponent:@"Logs/CrashReporter/DiagnosticLogs/Ubiquity"];
      [(BRCFileUnlinker *)v70 renameAndUnlinkInBackgroundItemAtPath:v77];

      __brc_leave_section(v210);
      goto LABEL_95;
    }
  }
  if (v17)
  {
    memset(buf, 0, 24);
    __brc_create_section(0, (uint64_t)"BRCMigrateLegacyUbiquityRoot", 325, buf);
    unint64_t v54 = brc_bread_crumbs();
    char v55 = brc_default_log();
    if (os_log_type_enabled(v55, OS_LOG_TYPE_DEBUG)) {
      BRCMigrateLegacyUbiquityRoot_cold_3();
    }

    BOOL v56 = [(BRCFileUnlinker *)v204 renameAndUnlinkInBackgroundItemAtPath:v9];
    if (!v56)
    {
      unsigned int v57 = brc_bread_crumbs();
      uint64_t v58 = brc_default_log();
      if (os_log_type_enabled(v58, OS_LOG_TYPE_FAULT)) {
        BRCMigrateLegacyUbiquityRoot_cold_2();
      }
    }
    __brc_leave_section((uint64_t *)buf);
    if (!v56)
    {
      id v42 = 0;
      uint64_t v43 = 0;
      goto LABEL_148;
    }
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((BRCRenameAt(-1, v205, -1, v9, 0) & 0x80000000) != 0)
    {
      int v61 = *__error();
      unsigned int v62 = brc_bread_crumbs();
      char v63 = brc_default_log();
      if (os_log_type_enabled(v63, (os_log_type_t)0x90u))
      {
        *(_DWORD *)buf = 138413058;
        *(void *)&uint8_t buf[4] = v205;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v9;
        *(_WORD *)&buf[22] = 1024;
        *(_DWORD *)&unsigned char buf[24] = v61;
        *(_WORD *)&buf[28] = 2112;
        *(void *)&buf[30] = v62;
        _os_log_error_impl(&dword_23FA42000, v63, (os_log_type_t)0x90u, "[ERROR] failed renaming root back from '%@' to '%@' %{errno}d%@", buf, 0x26u);
      }

      *__error() = v61;
    }
    else
    {
      uint64_t v59 = brc_bread_crumbs();
      unint64_t v60 = brc_default_log();
      if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        *(void *)&uint8_t buf[4] = v205;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v9;
        *(_WORD *)&buf[22] = 2112;
        *(void *)&unsigned char buf[24] = v59;
        _os_log_impl(&dword_23FA42000, v60, OS_LOG_TYPE_DEFAULT, "[NOTICE] moved '%@' back to '%@'%@", buf, 0x20u);
      }
    }
  }
LABEL_95:
  id v78 = v9;
  memset(&v211, 0, sizeof(v211));
  id v79 = v78;
  unint64_t v80 = (const char *)[v79 fileSystemRepresentation];
  int v86 = BRCOpenAt(0xFFFFFFFFLL, v80, 33028, v81, v82, v83, v84, v85, v197);
  int v87 = v86;
  if (v86 < 0)
  {
    if (*__error() != 2)
    {
      int v89 = *__error();
      unint64_t v90 = brc_bread_crumbs();
      char v91 = brc_default_log();
      if (os_log_type_enabled(v91, (os_log_type_t)0x90u))
      {
        *(_DWORD *)buf = 67109890;
        *(_DWORD *)&uint8_t buf[4] = -1;
        *(_WORD *)&buf[8] = 2112;
        *(void *)&buf[10] = v79;
        *(_WORD *)&buf[18] = 1024;
        *(_DWORD *)&buf[20] = v89;
        *(_WORD *)&unsigned char buf[24] = 2112;
        *(void *)&buf[26] = v90;
        _os_log_error_impl(&dword_23FA42000, v91, (os_log_type_t)0x90u, "[ERROR] can't open (%d, '%@') %{errno}d%@", buf, 0x22u);
      }

      *__error() = v89;
    }
  }
  else
  {
    if (fstat(v86, &v211) < 0)
    {
      int v92 = *__error();
      unsigned int v93 = brc_bread_crumbs();
      uint64_t v94 = brc_default_log();
      if (os_log_type_enabled(v94, (os_log_type_t)0x90u))
      {
        *(_DWORD *)buf = 67109890;
        *(_DWORD *)&uint8_t buf[4] = -1;
        *(_WORD *)&buf[8] = 2112;
        *(void *)&buf[10] = v79;
        *(_WORD *)&buf[18] = 1024;
        *(_DWORD *)&buf[20] = v92;
        *(_WORD *)&unsigned char buf[24] = 2112;
        *(void *)&buf[26] = v93;
        _os_log_error_impl(&dword_23FA42000, v94, (os_log_type_t)0x90u, "[ERROR] can't fstat (%d, '%@') %{errno}d%@", buf, 0x22u);
      }
      goto LABEL_138;
    }
    if ((v211.st_mode & 0xF000) == 0x4000)
    {
      BOOL v88 = 0;
      goto LABEL_114;
    }
    unint64_t v95 = brc_bread_crumbs();
    char v96 = brc_default_log();
    if (os_log_type_enabled(v96, (os_log_type_t)0x90u))
    {
      int v145 = aPcDBLSW[(unint64_t)v211.st_mode >> 12];
      if ((v211.st_mode & 0x100) != 0) {
        int v146 = 114;
      }
      else {
        int v146 = 45;
      }
      if ((v211.st_mode & 0x80) != 0) {
        int v147 = 119;
      }
      else {
        int v147 = 45;
      }
      if ((v211.st_mode & 0x40) != 0) {
        int v148 = 120;
      }
      else {
        int v148 = 45;
      }
      if ((v211.st_mode & 0x20) != 0) {
        int v149 = 114;
      }
      else {
        int v149 = 45;
      }
      if ((v211.st_mode & 0x10) != 0) {
        int v150 = 119;
      }
      else {
        int v150 = 45;
      }
      if ((v211.st_mode & 8) != 0) {
        int v151 = 120;
      }
      else {
        int v151 = 45;
      }
      if ((v211.st_mode & 4) != 0) {
        int v152 = 114;
      }
      else {
        int v152 = 45;
      }
      if ((v211.st_mode & 2) != 0) {
        int v153 = 119;
      }
      else {
        int v153 = 45;
      }
      if (v211.st_mode) {
        int v154 = 120;
      }
      else {
        int v154 = 45;
      }
      *(_DWORD *)buf = 67114754;
      *(_DWORD *)&uint8_t buf[4] = -1;
      *(_WORD *)&buf[8] = 2112;
      *(void *)&buf[10] = v79;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&buf[20] = v211.st_dev;
      *(_WORD *)&unsigned char buf[24] = 2048;
      *(void *)&buf[26] = v211.st_ino;
      *(_WORD *)&buf[34] = 1024;
      *(_DWORD *)&buf[36] = v145;
      *(_WORD *)&buf[40] = 1024;
      *(_DWORD *)&buf[42] = v146;
      *(_WORD *)v215 = 1024;
      *(_DWORD *)&v215[2] = v147;
      *(_WORD *)v216 = 1024;
      *(_DWORD *)&v216[2] = v148;
      *(_WORD *)v217 = 1024;
      *(_DWORD *)&v217[2] = v149;
      *(_WORD *)v218 = 1024;
      *(_DWORD *)&v218[2] = v150;
      *(_WORD *)v219 = 1024;
      *(_DWORD *)&v219[2] = v151;
      *(_WORD *)v220 = 1024;
      *(_DWORD *)&v220[2] = v152;
      *(_WORD *)v221 = 1024;
      *(_DWORD *)&v221[2] = v153;
      *(_WORD *)v222 = 1024;
      *(_DWORD *)&v222[2] = v154;
      *(_WORD *)v223 = 1024;
      *(_DWORD *)&v223[2] = v211.st_nlink;
      *(_WORD *)v224 = 1024;
      *(_DWORD *)&v224[2] = v211.st_uid;
      *(_WORD *)v225 = 1024;
      *(_DWORD *)&v225[2] = v211.st_gid;
      *(_WORD *)&v225[6] = 2048;
      *(void *)&v225[8] = v211.st_atimespec.tv_sec;
      *(_WORD *)&v225[16] = 2048;
      *(void *)&v225[18] = v211.st_mtimespec.tv_sec;
      *(_WORD *)&v225[26] = 2048;
      *(void *)&v225[28] = v211.st_ctimespec.tv_sec;
      *(_WORD *)&v225[36] = 2048;
      *(void *)&v225[38] = v211.st_size;
      *(_WORD *)&v225[46] = 1024;
      *(_DWORD *)&v225[48] = v211.st_flags;
      *(_WORD *)&v225[52] = 2112;
      *(void *)&v225[54] = v95;
      _os_log_error_impl(&dword_23FA42000, v96, (os_log_type_t)0x90u, "[ERROR] not a directory at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", buf, 0xA8u);
    }

    close(v87);
    BRCUnlinkAt(-1, v79, 0);
  }
  int v97 = BRCMkdirAt(-1, v79, 493);
  if (v97 < 0 && *__error() != 17)
  {
    int v113 = *__error();
    uint64_t v114 = brc_bread_crumbs();
    unint64_t v115 = brc_default_log();
    if (os_log_type_enabled(v115, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 67109890;
      *(_DWORD *)&uint8_t buf[4] = -1;
      *(_WORD *)&buf[8] = 2112;
      *(void *)&buf[10] = v79;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&buf[20] = v113;
      *(_WORD *)&unsigned char buf[24] = 2112;
      *(void *)&buf[26] = v114;
      _os_log_error_impl(&dword_23FA42000, v115, (os_log_type_t)0x90u, "[ERROR] mkdirat(%d, '%@') %{errno}d%@", buf, 0x22u);
    }
    goto LABEL_131;
  }
  id v98 = v79;
  uint64_t v99 = (const char *)[v98 fileSystemRepresentation];
  int v105 = BRCOpenAt(0xFFFFFFFFLL, v99, 33028, v100, v101, v102, v103, v104, v198);
  int v87 = v105;
  if (v105 < 0)
  {
    int v113 = *__error();
    uint64_t v114 = brc_bread_crumbs();
    unint64_t v115 = brc_default_log();
    if (os_log_type_enabled(v115, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 67109890;
      *(_DWORD *)&uint8_t buf[4] = -1;
      *(_WORD *)&buf[8] = 2112;
      *(void *)&buf[10] = v98;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&buf[20] = v113;
      *(_WORD *)&unsigned char buf[24] = 2112;
      *(void *)&buf[26] = v114;
      _os_log_error_impl(&dword_23FA42000, v115, (os_log_type_t)0x90u, "[ERROR] can't open (%d, '%@') after mkdir %{errno}d%@", buf, 0x22u);
    }
LABEL_131:

    *__error() = v113;
    goto LABEL_140;
  }
  if (fstat(v105, &v211) < 0)
  {
    int v92 = *__error();
    unsigned int v93 = brc_bread_crumbs();
    uint64_t v94 = brc_default_log();
    if (os_log_type_enabled(v94, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 67109890;
      *(_DWORD *)&uint8_t buf[4] = -1;
      *(_WORD *)&buf[8] = 2112;
      *(void *)&buf[10] = v98;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&buf[20] = v92;
      *(_WORD *)&unsigned char buf[24] = 2112;
      *(void *)&buf[26] = v93;
      _os_log_error_impl(&dword_23FA42000, v94, (os_log_type_t)0x90u, "[ERROR] can't fstat (%d, '%@') after mkdir %{errno}d%@", buf, 0x22u);
    }
    goto LABEL_138;
  }
  if ((v211.st_mode & 0xF000) != 0x4000)
  {
    v200 = brc_bread_crumbs();
    char v116 = brc_default_log();
    if (os_log_type_enabled(v116, (os_log_type_t)0x90u))
    {
      int v176 = aPcDBLSW[(unint64_t)v211.st_mode >> 12];
      if ((v211.st_mode & 0x100) != 0) {
        int v177 = 114;
      }
      else {
        int v177 = 45;
      }
      if ((v211.st_mode & 0x80) != 0) {
        int v178 = 119;
      }
      else {
        int v178 = 45;
      }
      if ((v211.st_mode & 0x40) != 0) {
        int v179 = 120;
      }
      else {
        int v179 = 45;
      }
      if ((v211.st_mode & 0x20) != 0) {
        int v180 = 114;
      }
      else {
        int v180 = 45;
      }
      if ((v211.st_mode & 0x10) != 0) {
        int v181 = 119;
      }
      else {
        int v181 = 45;
      }
      if ((v211.st_mode & 8) != 0) {
        int v182 = 120;
      }
      else {
        int v182 = 45;
      }
      if ((v211.st_mode & 4) != 0) {
        int v183 = 114;
      }
      else {
        int v183 = 45;
      }
      if ((v211.st_mode & 2) != 0) {
        int v184 = 119;
      }
      else {
        int v184 = 45;
      }
      if (v211.st_mode) {
        int v185 = 120;
      }
      else {
        int v185 = 45;
      }
      *(_DWORD *)buf = 67114754;
      *(_DWORD *)&uint8_t buf[4] = -1;
      *(_WORD *)&buf[8] = 2112;
      *(void *)&buf[10] = v98;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&buf[20] = v211.st_dev;
      *(_WORD *)&unsigned char buf[24] = 2048;
      *(void *)&buf[26] = v211.st_ino;
      *(_WORD *)&buf[34] = 1024;
      *(_DWORD *)&buf[36] = v176;
      *(_WORD *)&buf[40] = 1024;
      *(_DWORD *)&buf[42] = v177;
      *(_WORD *)v215 = 1024;
      *(_DWORD *)&v215[2] = v178;
      *(_WORD *)v216 = 1024;
      *(_DWORD *)&v216[2] = v179;
      *(_WORD *)v217 = 1024;
      *(_DWORD *)&v217[2] = v180;
      *(_WORD *)v218 = 1024;
      *(_DWORD *)&v218[2] = v181;
      *(_WORD *)v219 = 1024;
      *(_DWORD *)&v219[2] = v182;
      *(_WORD *)v220 = 1024;
      *(_DWORD *)&v220[2] = v183;
      *(_WORD *)v221 = 1024;
      *(_DWORD *)&v221[2] = v184;
      *(_WORD *)v222 = 1024;
      *(_DWORD *)&v222[2] = v185;
      *(_WORD *)v223 = 1024;
      *(_DWORD *)&v223[2] = v211.st_nlink;
      *(_WORD *)v224 = 1024;
      *(_DWORD *)&v224[2] = v211.st_uid;
      *(_WORD *)v225 = 1024;
      *(_DWORD *)&v225[2] = v211.st_gid;
      *(_WORD *)&v225[6] = 2048;
      *(void *)&v225[8] = v211.st_atimespec.tv_sec;
      *(_WORD *)&v225[16] = 2048;
      *(void *)&v225[18] = v211.st_mtimespec.tv_sec;
      *(_WORD *)&v225[26] = 2048;
      *(void *)&v225[28] = v211.st_ctimespec.tv_sec;
      *(_WORD *)&v225[36] = 2048;
      *(void *)&v225[38] = v211.st_size;
      *(_WORD *)&v225[46] = 1024;
      *(_DWORD *)&v225[48] = v211.st_flags;
      *(_WORD *)&v225[52] = 2112;
      *(void *)&v225[54] = v200;
      _os_log_error_impl(&dword_23FA42000, v116, (os_log_type_t)0x90u, "[ERROR] not a directory at (%d, '%@') after mkdir deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", buf, 0xA8u);
    }

    goto LABEL_139;
  }
  BOOL v88 = v97 >= 0;
LABEL_114:
  uid_t v106 = getuid();
  if (v211.st_uid != v106)
  {
    char v107 = brc_bread_crumbs();
    unsigned int v108 = brc_default_log();
    if (os_log_type_enabled(v108, (os_log_type_t)0x90u))
    {
      int v155 = aPcDBLSW[(unint64_t)v211.st_mode >> 12];
      if ((v211.st_mode & 0x100) != 0) {
        int v156 = 114;
      }
      else {
        int v156 = 45;
      }
      if ((v211.st_mode & 0x80) != 0) {
        int v157 = 119;
      }
      else {
        int v157 = 45;
      }
      if ((v211.st_mode & 0x40) != 0) {
        int v158 = 120;
      }
      else {
        int v158 = 45;
      }
      if ((v211.st_mode & 0x20) != 0) {
        int v159 = 114;
      }
      else {
        int v159 = 45;
      }
      if ((v211.st_mode & 0x10) != 0) {
        int v160 = 119;
      }
      else {
        int v160 = 45;
      }
      id v161 = v5;
      if ((v211.st_mode & 8) != 0) {
        int v162 = 120;
      }
      else {
        int v162 = 45;
      }
      if ((v211.st_mode & 4) != 0) {
        int v163 = 114;
      }
      else {
        int v163 = 45;
      }
      if ((v211.st_mode & 2) != 0) {
        int v164 = 119;
      }
      else {
        int v164 = 45;
      }
      if (v211.st_mode) {
        int v165 = 120;
      }
      else {
        int v165 = 45;
      }
      *(_DWORD *)buf = 67115010;
      *(_DWORD *)&uint8_t buf[4] = v106;
      *(_WORD *)&buf[8] = 1024;
      *(_DWORD *)&buf[10] = -1;
      *(_WORD *)&buf[14] = 2112;
      *(void *)&buf[16] = v79;
      *(_WORD *)&unsigned char buf[24] = 1024;
      *(_DWORD *)&buf[26] = v211.st_dev;
      *(_WORD *)&buf[30] = 2048;
      *(void *)&buf[32] = v211.st_ino;
      *(_WORD *)&buf[40] = 1024;
      *(_DWORD *)&buf[42] = v155;
      *(_WORD *)v215 = 1024;
      *(_DWORD *)&v215[2] = v156;
      *(_WORD *)v216 = 1024;
      *(_DWORD *)&v216[2] = v157;
      *(_WORD *)v217 = 1024;
      *(_DWORD *)&v217[2] = v158;
      *(_WORD *)v218 = 1024;
      *(_DWORD *)&v218[2] = v159;
      *(_WORD *)v219 = 1024;
      *(_DWORD *)&v219[2] = v160;
      *(_WORD *)v220 = 1024;
      *(_DWORD *)&v220[2] = v162;
      id v5 = v161;
      *(_WORD *)v221 = 1024;
      *(_DWORD *)&v221[2] = v163;
      *(_WORD *)v222 = 1024;
      *(_DWORD *)&v222[2] = v164;
      *(_WORD *)v223 = 1024;
      *(_DWORD *)&v223[2] = v165;
      *(_WORD *)v224 = 1024;
      *(_DWORD *)&v224[2] = v211.st_nlink;
      *(_WORD *)v225 = 1024;
      *(_DWORD *)&v225[2] = v211.st_uid;
      *(_WORD *)&v225[6] = 1024;
      *(_DWORD *)&v225[8] = v211.st_gid;
      *(_WORD *)&v225[12] = 2048;
      *(void *)&v225[14] = v211.st_atimespec.tv_sec;
      *(_WORD *)&v225[22] = 2048;
      *(void *)&v225[24] = v211.st_mtimespec.tv_sec;
      *(_WORD *)&v225[32] = 2048;
      *(void *)&v225[34] = v211.st_ctimespec.tv_sec;
      *(_WORD *)&v225[42] = 2048;
      *(void *)&v225[44] = v211.st_size;
      *(_WORD *)&v225[52] = 1024;
      *(_DWORD *)&v225[54] = v211.st_flags;
      *(_WORD *)&v225[58] = 2112;
      *(void *)&v225[60] = v107;
      _os_log_error_impl(&dword_23FA42000, v108, (os_log_type_t)0x90u, "[ERROR] unexpected uid != %u at (%d, '%@')deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", buf, 0xAEu);
    }
  }
  if ((~v211.st_mode & 0x1ED) == 0) {
    goto LABEL_121;
  }
  uint64_t v109 = brc_bread_crumbs();
  unint64_t v110 = brc_default_log();
  if (os_log_type_enabled(v110, (os_log_type_t)0x90u))
  {
    int v166 = aPcDBLSW[(unint64_t)v211.st_mode >> 12];
    if ((v211.st_mode & 0x100) != 0) {
      int v167 = 114;
    }
    else {
      int v167 = 45;
    }
    if ((v211.st_mode & 0x80) != 0) {
      int v168 = 119;
    }
    else {
      int v168 = 45;
    }
    if ((v211.st_mode & 0x40) != 0) {
      int v169 = 120;
    }
    else {
      int v169 = 45;
    }
    if ((v211.st_mode & 0x20) != 0) {
      int v170 = 114;
    }
    else {
      int v170 = 45;
    }
    if ((v211.st_mode & 0x10) != 0) {
      int v171 = 119;
    }
    else {
      int v171 = 45;
    }
    if ((v211.st_mode & 8) != 0) {
      int v172 = 120;
    }
    else {
      int v172 = 45;
    }
    if ((v211.st_mode & 4) != 0) {
      int v173 = 114;
    }
    else {
      int v173 = 45;
    }
    if ((v211.st_mode & 2) != 0) {
      int v174 = 119;
    }
    else {
      int v174 = 45;
    }
    if (v211.st_mode) {
      int v175 = 120;
    }
    else {
      int v175 = 45;
    }
    *(_DWORD *)buf = 67114754;
    *(_DWORD *)&uint8_t buf[4] = -1;
    *(_WORD *)&buf[8] = 2112;
    *(void *)&buf[10] = v79;
    *(_WORD *)&buf[18] = 1024;
    *(_DWORD *)&buf[20] = v211.st_dev;
    *(_WORD *)&unsigned char buf[24] = 2048;
    *(void *)&buf[26] = v211.st_ino;
    *(_WORD *)&buf[34] = 1024;
    *(_DWORD *)&buf[36] = v166;
    *(_WORD *)&buf[40] = 1024;
    *(_DWORD *)&buf[42] = v167;
    *(_WORD *)v215 = 1024;
    *(_DWORD *)&v215[2] = v168;
    *(_WORD *)v216 = 1024;
    *(_DWORD *)&v216[2] = v169;
    *(_WORD *)v217 = 1024;
    *(_DWORD *)&v217[2] = v170;
    *(_WORD *)v218 = 1024;
    *(_DWORD *)&v218[2] = v171;
    *(_WORD *)v219 = 1024;
    *(_DWORD *)&v219[2] = v172;
    *(_WORD *)v220 = 1024;
    *(_DWORD *)&v220[2] = v173;
    *(_WORD *)v221 = 1024;
    *(_DWORD *)&v221[2] = v174;
    *(_WORD *)v222 = 1024;
    *(_DWORD *)&v222[2] = v175;
    *(_WORD *)v223 = 1024;
    *(_DWORD *)&v223[2] = v211.st_nlink;
    *(_WORD *)v224 = 1024;
    *(_DWORD *)&v224[2] = v211.st_uid;
    *(_WORD *)v225 = 1024;
    *(_DWORD *)&v225[2] = v211.st_gid;
    *(_WORD *)&v225[6] = 2048;
    *(void *)&v225[8] = v211.st_atimespec.tv_sec;
    *(_WORD *)&v225[16] = 2048;
    *(void *)&v225[18] = v211.st_mtimespec.tv_sec;
    *(_WORD *)&v225[26] = 2048;
    *(void *)&v225[28] = v211.st_ctimespec.tv_sec;
    *(_WORD *)&v225[36] = 2048;
    *(void *)&v225[38] = v211.st_size;
    *(_WORD *)&v225[46] = 1024;
    *(_DWORD *)&v225[48] = v211.st_flags;
    *(_WORD *)&v225[52] = 2112;
    *(void *)&v225[54] = v109;
    _os_log_error_impl(&dword_23FA42000, v110, (os_log_type_t)0x90u, "[ERROR] unexpected permissions at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", buf, 0xA8u);
  }

  if (fchmod(v87, v211.st_mode | 0x1ED) < 0)
  {
    int v117 = *__error();
    unsigned int v118 = brc_bread_crumbs();
    uint64_t v119 = brc_default_log();
    if (os_log_type_enabled(v119, (os_log_type_t)0x90u))
    {
      int v186 = aPcDBLSW[(unint64_t)v211.st_mode >> 12];
      if ((v211.st_mode & 0x100) != 0) {
        int v187 = 114;
      }
      else {
        int v187 = 45;
      }
      if ((v211.st_mode & 0x80) != 0) {
        int v188 = 119;
      }
      else {
        int v188 = 45;
      }
      if ((v211.st_mode & 0x40) != 0) {
        int v189 = 120;
      }
      else {
        int v189 = 45;
      }
      if ((v211.st_mode & 0x20) != 0) {
        int v190 = 114;
      }
      else {
        int v190 = 45;
      }
      if ((v211.st_mode & 0x10) != 0) {
        int v191 = 119;
      }
      else {
        int v191 = 45;
      }
      if ((v211.st_mode & 8) != 0) {
        int v192 = 120;
      }
      else {
        int v192 = 45;
      }
      if ((v211.st_mode & 4) != 0) {
        int v193 = 114;
      }
      else {
        int v193 = 45;
      }
      if ((v211.st_mode & 2) != 0) {
        int v194 = 119;
      }
      else {
        int v194 = 45;
      }
      if (v211.st_mode) {
        int v195 = 120;
      }
      else {
        int v195 = 45;
      }
      *(_DWORD *)buf = 67115010;
      *(_DWORD *)&uint8_t buf[4] = -1;
      *(_WORD *)&buf[8] = 2112;
      *(void *)&buf[10] = v79;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&buf[20] = v211.st_dev;
      *(_WORD *)&unsigned char buf[24] = 2048;
      *(void *)&buf[26] = v211.st_ino;
      *(_WORD *)&buf[34] = 1024;
      *(_DWORD *)&buf[36] = v186;
      *(_WORD *)&buf[40] = 1024;
      *(_DWORD *)&buf[42] = v187;
      *(_WORD *)v215 = 1024;
      *(_DWORD *)&v215[2] = v188;
      *(_WORD *)v216 = 1024;
      *(_DWORD *)&v216[2] = v189;
      *(_WORD *)v217 = 1024;
      *(_DWORD *)&v217[2] = v190;
      *(_WORD *)v218 = 1024;
      *(_DWORD *)&v218[2] = v191;
      *(_WORD *)v219 = 1024;
      *(_DWORD *)&v219[2] = v192;
      *(_WORD *)v220 = 1024;
      *(_DWORD *)&v220[2] = v193;
      *(_WORD *)v221 = 1024;
      *(_DWORD *)&v221[2] = v194;
      *(_WORD *)v222 = 1024;
      *(_DWORD *)&v222[2] = v195;
      *(_WORD *)v223 = 1024;
      *(_DWORD *)&v223[2] = v211.st_nlink;
      *(_WORD *)v224 = 1024;
      *(_DWORD *)&v224[2] = v211.st_uid;
      *(_WORD *)v225 = 1024;
      *(_DWORD *)&v225[2] = v211.st_gid;
      *(_WORD *)&v225[6] = 2048;
      *(void *)&v225[8] = v211.st_atimespec.tv_sec;
      *(_WORD *)&v225[16] = 2048;
      *(void *)&v225[18] = v211.st_mtimespec.tv_sec;
      *(_WORD *)&v225[26] = 2048;
      *(void *)&v225[28] = v211.st_ctimespec.tv_sec;
      *(_WORD *)&v225[36] = 2048;
      *(void *)&v225[38] = v211.st_size;
      *(_WORD *)&v225[46] = 1024;
      *(_DWORD *)&v225[48] = v211.st_flags;
      *(_WORD *)&v225[52] = 1024;
      *(_DWORD *)&v225[54] = v117;
      *(_WORD *)&v225[58] = 2112;
      *(void *)&v225[60] = v118;
      _os_log_error_impl(&dword_23FA42000, v119, (os_log_type_t)0x90u, "[ERROR] failed chmod at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d%@", buf, 0xAEu);
    }

    *__error() = v117;
    goto LABEL_139;
  }
  if (fstat(v87, &v211) < 0)
  {
    int v92 = *__error();
    unsigned int v93 = brc_bread_crumbs();
    uint64_t v94 = brc_default_log();
    if (os_log_type_enabled(v94, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 67109890;
      *(_DWORD *)&uint8_t buf[4] = -1;
      *(_WORD *)&buf[8] = 2112;
      *(void *)&buf[10] = v79;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&buf[20] = v92;
      *(_WORD *)&unsigned char buf[24] = 2112;
      *(void *)&buf[26] = v93;
      _os_log_error_impl(&dword_23FA42000, v94, (os_log_type_t)0x90u, "[ERROR] can't fstat (%d, '%@') after mkdir %{errno}d%@", buf, 0x22u);
    }
LABEL_138:

    *__error() = v92;
LABEL_139:
    close(v87);
LABEL_140:

    unint64_t v120 = [MEMORY[0x263F08850] defaultManager];
    uint64_t v212 = *MEMORY[0x263F08078];
    v213 = &unk_26F3DD178;
    char v121 = [NSDictionary dictionaryWithObjects:&v213 forKeys:&v212 count:1];
    id v206 = 0;
    int v122 = [v120 createDirectoryAtPath:v79 withIntermediateDirectories:1 attributes:v121 error:&v206];
    id v42 = v206;

    if (!v122)
    {
      brc_bread_crumbs();
      id v39 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v40 = brc_default_log();
      if (os_log_type_enabled(v40, (os_log_type_t)0x90u))
      {
        *(_DWORD *)buf = 138412802;
        *(void *)&uint8_t buf[4] = v79;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v42;
        *(_WORD *)&buf[22] = 2112;
        *(void *)&unsigned char buf[24] = v39;
        _os_log_error_impl(&dword_23FA42000, v40, (os_log_type_t)0x90u, "[ERROR] Failed to create root at %@ - %@%@", buf, 0x20u);
      }
      uint64_t v43 = 1;
      goto LABEL_147;
    }
    goto LABEL_141;
  }
LABEL_121:
  close(v87);
  char v111 = brc_bread_crumbs();
  char v112 = brc_default_log();
  if (os_log_type_enabled(v112, OS_LOG_TYPE_DEBUG))
  {
    char v133 = "found";
    int v134 = aPcDBLSW[(unint64_t)v211.st_mode >> 12];
    if (v88) {
      char v133 = "created";
    }
    if ((v211.st_mode & 0x100) != 0) {
      int v135 = 114;
    }
    else {
      int v135 = 45;
    }
    if ((v211.st_mode & 0x80) != 0) {
      int v136 = 119;
    }
    else {
      int v136 = 45;
    }
    if ((v211.st_mode & 0x40) != 0) {
      int v137 = 120;
    }
    else {
      int v137 = 45;
    }
    if ((v211.st_mode & 0x20) != 0) {
      int v138 = 114;
    }
    else {
      int v138 = 45;
    }
    id v139 = v5;
    if ((v211.st_mode & 0x10) != 0) {
      int v140 = 119;
    }
    else {
      int v140 = 45;
    }
    *(void *)&uint8_t buf[4] = v133;
    *(_DWORD *)&buf[14] = -1;
    if ((v211.st_mode & 8) != 0) {
      int v141 = 120;
    }
    else {
      int v141 = 45;
    }
    if ((v211.st_mode & 4) != 0) {
      int v142 = 114;
    }
    else {
      int v142 = 45;
    }
    *(_DWORD *)buf = 136321026;
    if ((v211.st_mode & 2) != 0) {
      int v143 = 119;
    }
    else {
      int v143 = 45;
    }
    *(_WORD *)&buf[12] = 1024;
    if (v211.st_mode) {
      int v144 = 120;
    }
    else {
      int v144 = 45;
    }
    *(_WORD *)&buf[18] = 2112;
    *(void *)&buf[20] = v79;
    *(_WORD *)&buf[28] = 1024;
    *(_DWORD *)&buf[30] = v211.st_dev;
    *(_WORD *)&buf[34] = 2048;
    *(void *)&buf[36] = v211.st_ino;
    *(_WORD *)&buf[44] = 1024;
    *(_DWORD *)v215 = v134;
    *(_WORD *)&v215[4] = 1024;
    *(_DWORD *)v216 = v135;
    *(_WORD *)&v216[4] = 1024;
    *(_DWORD *)v217 = v136;
    *(_WORD *)&v217[4] = 1024;
    *(_DWORD *)v218 = v137;
    *(_WORD *)&v218[4] = 1024;
    *(_DWORD *)v219 = v138;
    *(_WORD *)&v219[4] = 1024;
    *(_DWORD *)v220 = v140;
    id v5 = v139;
    *(_WORD *)&v220[4] = 1024;
    *(_DWORD *)v221 = v141;
    *(_WORD *)&v221[4] = 1024;
    *(_DWORD *)v222 = v142;
    *(_WORD *)&v222[4] = 1024;
    *(_DWORD *)v223 = v143;
    *(_WORD *)&v223[4] = 1024;
    *(_DWORD *)v224 = v144;
    *(_WORD *)&v224[4] = 1024;
    *(_DWORD *)v225 = v211.st_nlink;
    *(_WORD *)&v225[4] = 1024;
    *(_DWORD *)&v225[6] = v211.st_uid;
    *(_WORD *)&v225[10] = 1024;
    *(_DWORD *)&v225[12] = v211.st_gid;
    *(_WORD *)&v225[16] = 2048;
    *(void *)&v225[18] = v211.st_atimespec.tv_sec;
    *(_WORD *)&v225[26] = 2048;
    *(void *)&v225[28] = v211.st_mtimespec.tv_sec;
    *(_WORD *)&v225[36] = 2048;
    *(void *)&v225[38] = v211.st_ctimespec.tv_sec;
    *(_WORD *)&v225[46] = 2048;
    *(void *)&v225[48] = v211.st_size;
    *(_WORD *)&v225[56] = 1024;
    *(_DWORD *)&v225[58] = v211.st_flags;
    *(_WORD *)&v225[62] = 2112;
    *(void *)&v225[64] = v111;
    _os_log_debug_impl(&dword_23FA42000, v112, OS_LOG_TYPE_DEBUG, "[DEBUG] %s dir at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", buf, 0xB2u);
  }

  id v42 = 0;
LABEL_141:
  id v123 = v79;
  uint64_t v124 = (const char *)[v123 fileSystemRepresentation];
  int v130 = BRCOpenAt(0xFFFFFFFFLL, v124, 33028, v125, v126, v127, v128, v129, v198);
  int v131 = v130;
  if ((v130 & 0x80000000) == 0)
  {
    BRCSetXattrValueForKeyOnFD(v130, v123, @"com.apple.ubd.prsid", v202);
    close(v131);
  }
  uint64_t v43 = 1;
LABEL_148:

  __brc_leave_section(v209);
  return v43;
}

void sub_23FAE2F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
}

uint64_t BRCRootIsOwnedByUbd(void *a1)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = (const char *)[v1 fileSystemRepresentation];
  int v8 = BRCOpenAt(0xFFFFFFFFLL, v2, 33028, v3, v4, v5, v6, v7, v22.st_dev);
  if (v8 < 0)
  {
    if (*__error() == 2)
    {
      uint64_t v11 = 0;
    }
    else
    {
      int v18 = *__error();
      id v19 = brc_bread_crumbs();
      id v20 = brc_default_log();
      if (os_log_type_enabled(v20, (os_log_type_t)0x90u))
      {
        v22.st_dev = 138412802;
        *(void *)&v22.st_mode = v1;
        WORD2(v22.st_ino) = 1024;
        *(_DWORD *)((char *)&v22.st_ino + 6) = v18;
        HIWORD(v22.st_uvoid (**v9)(id, id) = 2112;
        *(void *)&v22.st_gid = v19;
        _os_log_error_impl(&dword_23FA42000, v20, (os_log_type_t)0x90u, "[ERROR] can't open root '%@' %{errno}d%@", (uint8_t *)&v22, 0x1Cu);
      }

      uint64_t v11 = 0;
      *__error() = v18;
    }
  }
  else
  {
    int v9 = v8;
    memset(&v22, 0, sizeof(v22));
    int v10 = fstatat(v8, ".ubd", &v22, 32);
    uint64_t v11 = v10 == 0;
    if (!v10)
    {
      uint64_t v12 = brc_bread_crumbs();
      uint64_t v13 = brc_default_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
        BRCRootIsOwnedByUbd_cold_2(&v22.st_dev, (uint64_t)v12, v13);
      }
    }
    uint64_t v14 = BRCGetXattrValueForKeyOnFD(v9, v1, @"com.apple.ubd.prsid");
    if (v14)
    {
      uint64_t v15 = brc_bread_crumbs();
      int v16 = brc_default_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG)) {
        BRCRootIsOwnedByUbd_cold_1();
      }

      unsigned int v17 = [v14 hasSuffix:@".CloudDocs"] ^ 1;
      if (v10) {
        uint64_t v11 = v17;
      }
      else {
        uint64_t v11 = 1;
      }
    }
    close(v9);
  }
  return v11;
}

uint64_t BRCConvertDownloadOptionsToInternal(unint64_t a1)
{
  uint64_t v1 = (4 * a1) & 0x10;
  if (a1) {
    uint64_t v1 = 1;
  }
  return (2 * (int)a1) & 4 | (32 * ((a1 >> 3) & 1)) | v1;
}

void sub_23FAE7758(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAEA180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAEB7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__15(uint64_t a1)
{
}

void sub_23FAEE2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAEEDF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16(uint64_t a1)
{
}

void sub_23FAEF540(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_23FAEFB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FAEFFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FAF0774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_23FAF0FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
}

void sub_23FAF27BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

BOOL brc_pack_xattrs(int a1, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  id v9 = a2;
  uint64_t v40 = objc_opt_new();
  unint64_t v41 = a5;
  if (!a5)
  {
    BOOL v10 = 1;
    goto LABEL_25;
  }
  id v39 = a6;
  BOOL v10 = 0;
  id v11 = 0;
  uint64_t v12 = 0;
  int v44 = v9;
  while (1)
  {
    uint64_t v13 = v11;
    uint64_t v14 = *(const char **)(a4 + 8 * v12);
    size_t v15 = strlen(v14);
    int v16 = [v9 data];
    uint64_t v17 = [v16 length];
    id v45 = v11;
    int v18 = BRCGetXattrValue(a1, v14, a3 - v17 - v15, &v45);
    id v11 = v45;

    if (!v18) {
      break;
    }
    id v19 = (void *)[[NSString alloc] initWithBytes:v14 length:v15 encoding:4];
    [v40 setName:v19];

    [v40 setValue:v18];
    id v20 = v9;
    uint64_t v21 = objc_alloc_init(MEMORY[0x263F62230]);
    [v40 writeTo:v21];
    stat v22 = [v21 data];
    uint64_t v23 = [v20 data];
    uint64_t v24 = [v23 length];
    uint64_t v25 = [v22 length];
    unint64_t v26 = [v22 length];
    unint64_t v27 = v24 + v25 + 1;
    do
    {
      ++v27;
      BOOL v28 = v26 > 0x7F;
      v26 >>= 7;
    }
    while (v28);

    if (v27 <= a3)
    {
      [v44 writeData:v22 forTag:1];
      int v29 = brc_bread_crumbs();
      int v30 = brc_default_log();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
      {
        int v32 = [v44 data];
        uint64_t v33 = [v32 length];
        *(_DWORD *)buf = 136315650;
        char v47 = v14;
        __int16 v48 = 2048;
        uint64_t v49 = v33;
        __int16 v50 = 2112;
        id v51 = v29;
        _os_log_debug_impl(&dword_23FA42000, v30, OS_LOG_TYPE_DEBUG, "[DEBUG] serialized xattr %s (blob size:%ld)%@", buf, 0x20u);
      }
    }
    else
    {
      int v29 = brc_bread_crumbs();
      int v30 = brc_default_log();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v31 = [v18 length];
        *(_DWORD *)buf = 136315650;
        char v47 = v14;
        __int16 v48 = 2048;
        uint64_t v49 = v31;
        __int16 v50 = 2112;
        id v51 = v29;
        _os_log_impl(&dword_23FA42000, v30, OS_LOG_TYPE_DEFAULT, "[WARNING] skipping xattr %s (size:%zd) because we don't have enough space anymore%@", buf, 0x20u);
      }
    }

LABEL_15:
    BOOL v10 = ++v12 >= v41;
    id v9 = v44;
    if (v12 == v41)
    {
      BOOL v10 = 1;
      goto LABEL_24;
    }
  }
  if (objc_msgSend(v11, "br_isPOSIXErrorCode:", 27))
  {
    int v18 = brc_bread_crumbs();
    uint64_t v21 = brc_default_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      char v47 = v14;
      __int16 v48 = 2112;
      uint64_t v49 = (uint64_t)v18;
      _os_log_impl(&dword_23FA42000, v21, OS_LOG_TYPE_DEFAULT, "[WARNING] Ignoring xattr which is too large %s%@", buf, 0x16u);
    }
    goto LABEL_15;
  }
  id v34 = v11;
  if (v34)
  {
    int v35 = brc_bread_crumbs();
    uint64_t v36 = brc_default_log();
    if (os_log_type_enabled(v36, (os_log_type_t)0x90u))
    {
      char v38 = "(passed to caller)";
      *(_DWORD *)buf = 136315906;
      char v47 = "brc_pack_xattrs";
      __int16 v48 = 2080;
      if (!v39) {
        char v38 = "(ignored by caller)";
      }
      uint64_t v49 = (uint64_t)v38;
      __int16 v50 = 2112;
      id v51 = v34;
      __int16 v52 = 2112;
      uint32_t v53 = v35;
      _os_log_error_impl(&dword_23FA42000, v36, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", buf, 0x2Au);
    }
  }
  if (v39) {
    void *v39 = v34;
  }

LABEL_24:
LABEL_25:

  return v10;
}

void brc_remove_xattrs(int fd, const char **a2, uint64_t a3)
{
  *(void *)&v14[13] = *MEMORY[0x263EF8340];
  if (a3)
  {
    uint64_t v3 = a3;
    do
    {
      if (fremovexattr(fd, *a2, 0) < 0)
      {
        uint64_t v6 = brc_bread_crumbs();
        uint64_t v7 = brc_default_log();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
        {
          id v9 = *a2;
          int v10 = *__error();
          *(_DWORD *)buf = 136315650;
          uint64_t v12 = v9;
          __int16 v13 = 1024;
          *(_DWORD *)uint64_t v14 = v10;
          v14[2] = 2112;
          *(void *)&v14[3] = v6;
          _os_log_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEFAULT, "[WARNING] removing xattr %s failed %{errno}d%@", buf, 0x1Cu);
        }
      }
      else
      {
        uint64_t v6 = brc_bread_crumbs();
        uint64_t v7 = brc_default_log();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
        {
          int v8 = *a2;
          *(_DWORD *)buf = 136315394;
          uint64_t v12 = v8;
          __int16 v13 = 2112;
          *(void *)uint64_t v14 = v6;
          _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] removed xattr %s%@", buf, 0x16u);
        }
      }

      ++a2;
      --v3;
    }
    while (v3);
  }
}

uint64_t ubiquitousItemHasUnresolvedConflicts()
{
  return MEMORY[0x263EFFA80];
}

uint64_t ubiquitousItemIsDownloading(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[BRCSystemResourcesManager manager];
  int v3 = [v2 isNetworkReachable];

  uint64_t v4 = MEMORY[0x263EFFA80];
  if (v3)
  {
    if ([v1 isDocument])
    {
      uint64_t v5 = [v1 asDocument];
      int v6 = [v5 downloadStatus];
      uint64_t v7 = MEMORY[0x263EFFA88];
      if (v6 == 3) {
        uint64_t v7 = v4;
      }
      if (v6) {
        uint64_t v4 = v7;
      }
      else {
        uint64_t v4 = 0;
      }
    }
    else
    {
      uint64_t v4 = 0;
    }
  }

  return v4;
}

uint64_t ubiquitousItemIsDownloadRequested(void *a1)
{
  if ([a1 isDocument]) {
    return MEMORY[0x263EFFA88];
  }
  else {
    return 0;
  }
}

id ubiquitousItemUploadingError(void *a1)
{
  id v1 = a1;
  if (![v1 isDocument]) {
    goto LABEL_5;
  }
  uint64_t v2 = [v1 asDocument];
  int v3 = [v2 uploadError];

  if (!v3 || objc_msgSend(v3, "brc_isCloudKitErrorRequiringAssetRescan"))
  {

LABEL_5:
    uint64_t v4 = [v1 syncUpError];
    int v3 = v4;
    goto LABEL_6;
  }
  uint64_t v4 = v3;
LABEL_6:
  uint64_t v5 = objc_msgSend(v4, "brc_wrappedError");

  return v5;
}

uint64_t ubiquitousItemDownloadingError()
{
  return 0;
}

uint64_t ubiquitousItemIsShared(void *a1)
{
  id v1 = a1;
  char v2 = [v1 isSharedByMe];
  uint64_t v3 = MEMORY[0x263EFFA88];
  if ((v2 & 1) == 0)
  {
    uint64_t v4 = [v1 clientZone];
    int v5 = [v4 isSharedZone];

    if (!v5) {
      uint64_t v3 = MEMORY[0x263EFFA80];
    }
  }

  return v3;
}

id ubiquitousSharedItemRole(void *a1)
{
  id v1 = a1;
  if ([v1 isSharedByMe])
  {
    char v2 = (id *)MEMORY[0x263EFF838];
LABEL_5:
    id v5 = *v2;
    goto LABEL_7;
  }
  uint64_t v3 = [v1 clientZone];
  int v4 = [v3 isSharedZone];

  if (v4)
  {
    char v2 = (id *)MEMORY[0x263EFF840];
    goto LABEL_5;
  }
  id v5 = 0;
LABEL_7:

  return v5;
}

id ubiquitousSharedItemOwnerName(void *a1)
{
  id v1 = ubiquitousSharedItemOwnerNameComponents(a1);
  char v2 = objc_msgSend(v1, "br_formattedName");

  return v2;
}

id ubiquitousSharedItemOwnerNameComponents(void *a1)
{
  id v1 = a1;
  char v2 = [v1 clientZone];
  int v3 = [v2 isSharedZone];

  if (v3)
  {
    int v4 = [v1 ownerKey];
    id v5 = [v1 db];
    int v6 = +[BRCAccountSessionFPFS userIdentityForKey:v4 db:v5];

    if (!v6)
    {
      id v9 = brc_bread_crumbs();
      int v10 = brc_default_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
        ubiquitousSharedItemOwnerNameComponents_cold_1((uint64_t)v9, v10);
      }
    }
    uint64_t v7 = [v6 nameComponents];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id ubiquitousItemLastEditorNameComponents(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 isDocument])
  {
    id v5 = [v3 asDocument];
    int v6 = [v5 currentVersion];
    uint64_t v7 = [v6 lastEditorUserIdentityWithDB:v4];
  }
  else
  {
    uint64_t v7 = 0;
  }
  int v8 = [v7 nameComponentsAcceptUnknownUser:1];

  return v8;
}

id ubiquitousSharedItemOldPermissions(void *a1)
{
  id v1 = a1;
  char v2 = [v1 clientZone];
  char v3 = [v2 isSharedZone];

  if ((v3 & 1) == 0)
  {
    if ([v1 isSharedByMe])
    {
      if (([v1 sharingOptions] & 0x48) != 0)
      {
        uint64_t v4 = 16;
        goto LABEL_6;
      }
      if [v1 isDocument] && (objc_msgSend(v1, "sharingOptions"))
      {
        uint64_t v4 = 2;
        goto LABEL_6;
      }
    }
    id v7 = 0;
    goto LABEL_12;
  }
  uint64_t v4 = 32;
LABEL_6:
  uint64_t v5 = [v1 sharingOptions];
  int v6 = (id *)MEMORY[0x263EFF828];
  if ((v5 & v4) != 0) {
    int v6 = (id *)MEMORY[0x263EFF820];
  }
  id v7 = *v6;
LABEL_12:

  return v7;
}

id ubiquitousSharedItemCurrentUserPermissions(void *a1)
{
  id v1 = a1;
  char v2 = [v1 clientZone];
  int v3 = [v2 isSharedZone];

  if (v3)
  {
    char v4 = [v1 sharingOptions];

    uint64_t v5 = (id *)MEMORY[0x263EFF820];
    if ((v4 & 0x20) == 0) {
      uint64_t v5 = (id *)MEMORY[0x263EFF828];
    }
    goto LABEL_7;
  }
  int v6 = [v1 isSharedByMe];

  if (v6)
  {
    uint64_t v5 = (id *)MEMORY[0x263EFF828];
LABEL_7:
    id v7 = *v5;
    goto LABEL_9;
  }
  id v7 = 0;
LABEL_9:
  return v7;
}

uint64_t ubiquitousItemIsUploading(void *a1)
{
  id v1 = a1;
  char v2 = +[BRCSystemResourcesManager manager];
  int v3 = [v2 isNetworkReachable];

  uint64_t v4 = MEMORY[0x263EFFA80];
  if (v3)
  {
    if ([v1 isDocument])
    {
      uint64_t v5 = [v1 asDocument];
      int v6 = [v5 uploadStatus];

      uint64_t v7 = MEMORY[0x263EFFA88];
      if (v6 == 3) {
        uint64_t v7 = v4;
      }
      if (v6) {
        uint64_t v4 = v7;
      }
      else {
        uint64_t v4 = 0;
      }
    }
    else
    {
      uint64_t v4 = 0;
    }
  }

  return v4;
}

id ubiquitousItemLastEditorDeviceName(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 isDocument])
  {
    uint64_t v5 = [v3 asDocument];
    int v6 = [v5 currentVersion];
    uint64_t v7 = [v6 lastEditorDeviceDisplayNameWithDB:v4];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id ubiquitousItemLastEditorName(void *a1, void *a2)
{
  char v2 = ubiquitousItemLastEditorNameComponents(a1, a2);
  id v3 = objc_msgSend(v2, "br_formattedName");

  return v3;
}

id ubiquitousItemIsConflicted(void *a1)
{
  id v1 = a1;
  if ([v1 isDocument])
  {
    char v2 = NSNumber;
    id v3 = [v1 asDocument];
    id v4 = [v3 currentVersion];
    uint64_t v5 = [v4 conflictLoserEtags];
    int v6 = objc_msgSend(v2, "numberWithInt:", objc_msgSend(v5, "count") != 0);
  }
  else
  {
    int v6 = (void *)MEMORY[0x263EFFA80];
  }

  return v6;
}

id ubiquitousItemIdentifier(void *a1)
{
  id v1 = a1;
  char v2 = [v1 itemID];
  id v3 = [v1 session];

  id v4 = [v2 zoneUniqueItemIDStringWithSession:v3];

  return v4;
}

id ubiquitousDocumentRecordID(void *a1)
{
  id v1 = a1;
  if ([v1 isDocument])
  {
    char v2 = [v1 asDocument];
    id v3 = [v2 documentRecordID];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id ubiquitousEditedSinceShared(void *a1)
{
  id v1 = a1;
  if ([v1 isDocument] && (objc_msgSend(v1, "sharingOptions") & 0x48) != 0)
  {
    char v2 = [v1 asDocument];
    id v3 = [v2 currentVersion];
    id v4 = [v3 editedSinceShared];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id ubiquitousIsTopLevelSharedItem(void *a1)
{
  id v1 = a1;
  char v2 = NSNumber;
  BOOL v3 = ([v1 sharingOptions] & 4) != 0 && (objc_msgSend(v1, "sharingOptions") & 0x48) != 0;
  id v4 = [v2 numberWithInt:v3];

  return v4;
}

void sub_23FAF5884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, id *a13, id *a14)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(v14);
  objc_destroyWeak(location);
  objc_destroyWeak(a13);
  objc_destroyWeak(a14);
  objc_destroyWeak((id *)(v17 - 128));
  _Unwind_Resume(a1);
}

void sub_23FAF62DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
}

void sub_23FAF66F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAF68AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAF6CCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAF6F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAF7438(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_4(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  BOOL v3 = a1;
  id v4 = a2;
  uint64_t v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  int v6 = brc_bread_crumbs();
  uint64_t v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    id v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_9;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  int v8 = v3;
  __int16 v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FAF8138(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_23FAF8604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  __brc_leave_section((uint64_t *)(v22 - 88));
  _Unwind_Resume(a1);
}

void sub_23FAF8AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAF8F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAF954C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  __brc_leave_section((uint64_t *)(v22 - 88));
  _Unwind_Resume(a1);
}

void sub_23FAF9E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  __brc_leave_section((uint64_t *)(v22 - 88));
  _Unwind_Resume(a1);
}

void sub_23FAFAE28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FAFBA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAFBFF0(_Unwind_Exception *a1)
{
}

void sub_23FAFC434(_Unwind_Exception *a1)
{
}

void sub_23FAFCBE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FAFDDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__17(uint64_t a1)
{
}

void sub_23FAFE110(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_9(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  BOOL v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    uint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FAFE720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

Class initUIDevice()
{
  if (!UIKitLibrary_frameworkLibrary)
  {
    UIKitLibrary_frameworkLibrary = (uint64_t)dlopen("/System/Library/Frameworks/UIKit.framework/UIKit", 2);
    if (!UIKitLibrary_frameworkLibrary) {
      initUIDevice_cold_1();
    }
  }
  Class Class = objc_getClass("UIDevice");
  classUIDevice = (uint64_t)Class;
  if (!Class) {
    initUIDevice_cold_2();
  }
  getUIDeviceClass Class = (uint64_t (*)())UIDeviceFunction;
  return Class;
}

id UIDeviceFunction()
{
  return (id)classUIDevice;
}

void OUTLINED_FUNCTION_8_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x20u);
}

id etagFromVersionIdentifier(void *a1)
{
  id v1 = [a1 componentsSeparatedByString:@";"];
  uint64_t v2 = [v1 firstObject];

  if ([v2 length]) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }

  return v3;
}

uint64_t areSignaturesEquivalent(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  long long v5 = [v3 versionIdentifier];
  uint64_t v6 = [v4 versionIdentifier];
  char v7 = [v5 isEqualToString:v6];

  if ((v7 & 1) != 0
    || [v3 hasOldVersionIdentifier]
    && ([v3 oldVersionIdentifier],
        __int16 v9 = objc_claimAutoreleasedReturnValue(),
        [v4 versionIdentifier],
        uint64_t v10 = objc_claimAutoreleasedReturnValue(),
        char v11 = [v9 isEqualToString:v10],
        v10,
        v9,
        (v11 & 1) != 0))
  {
    uint64_t v8 = 1;
  }
  else if ([v4 hasOldVersionIdentifier])
  {
    uint64_t v12 = [v4 oldVersionIdentifier];
    uint64_t v13 = [v3 versionIdentifier];
    uint64_t v8 = [v12 isEqualToString:v13];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

void sub_23FB02F40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB030D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB03888(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB05470(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB08034(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_23FB087CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
}

void sub_23FB08AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB08C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB09308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB09524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB09724(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23FB09CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB0A954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_23FB0B22C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18(uint64_t a1)
{
}

void sub_23FB0B750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *BRCServerZoneStatePrettyPrint(unsigned int a1)
{
  return BRCPrettyPrintBitmapWithContext(a1, (uint64_t)&server_zone_state_entries, 0);
}

__CFString *BRCServerZoneStatePrettyPrintWithContext(unsigned int a1, void *a2)
{
  return BRCPrettyPrintBitmapWithContext(a1, (uint64_t)&server_zone_state_entries, a2);
}

id _BRCClassesForContainerState()
{
  if (_BRCClassesForContainerState_onceToken != -1) {
    dispatch_once(&_BRCClassesForContainerState_onceToken, &__block_literal_global_24);
  }
  uint64_t v0 = (void *)_BRCClassesForContainerState_allowedClasses;
  return v0;
}

void sub_23FB15074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,os_activity_scope_state_s state)
{
  _Block_object_dispose((const void *)(v39 - 176), 8);
  __brc_leave_section(&a36);
  os_activity_scope_leave(&state);
  _Block_object_dispose((const void *)(v39 - 240), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__19(uint64_t a1)
{
}

void sub_23FB169C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB16F18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB1721C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB18108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_23FB18578(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_23FB18CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

uint64_t BRCGenerationCountFromData(void *a1)
{
  return *(unsigned int *)([a1 bytes] + 8);
}

void sub_23FB1ACD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__20(uint64_t a1)
{
}

void OUTLINED_FUNCTION_1_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, (os_log_type_t)0x90u, a4, &a9, 0x16u);
}

void sub_23FB1C1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB1C9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_sync_exit(v9);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__21(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__21(uint64_t a1)
{
}

void sub_23FB26CD8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long buf, int a20,__int16 a21,__int16 a22,void *a23,long long a24)
{
  if (a2 == 1)
  {
    id v25 = objc_begin_catch(a1);
    unint64_t v26 = objc_msgSend(MEMORY[0x263F087E8], "brc_errorFromException:", v25);
    unint64_t v27 = *(void **)(v24 + 24);
    if (v26)
    {
      BOOL v28 = brc_bread_crumbs();
      int v29 = brc_default_log();
      if (os_log_type_enabled(v29, (os_log_type_t)0x90u))
      {
        int v30 = "(passed to caller)";
        LODWORD(buf) = 136315906;
        *(void *)((char *)&buf + 4) = "-[CKRecord(BRCSerializationAdditions) serializeStatInfo:diffs:stageID:deadInServ"
                                        "erTruth:shouldPCSChainStatus:basehashSaltGetter:childBasehashSaltGetter:error:]";
        WORD6(buf) = 2080;
        if (!v27) {
          int v30 = "(ignored by caller)";
        }
        *(void *)((char *)&buf + 14) = v30;
        a22 = 2112;
        a23 = v26;
        LOWORD(a24) = 2112;
        *(void *)((char *)&a24 + 2) = v28;
        _os_log_error_impl(&dword_23FA42000, v29, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", (uint8_t *)&buf, 0x2Au);
      }
    }
    if (v27) {
      void *v27 = v26;
    }

    objc_end_catch();
    JUMPOUT(0x23FB26C7CLL);
  }
  _Unwind_Resume(a1);
}

void sub_23FB2793C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, long long buf, int a16, __int16 a17, __int16 a18, void *a19, long long a20)
{
  if (a2 == 1)
  {
    id v20 = objc_begin_catch(a1);
    uint64_t v21 = objc_msgSend(MEMORY[0x263F087E8], "brc_errorFromException:", v20);
    if (v21)
    {
      uint64_t v22 = brc_bread_crumbs();
      uint64_t v23 = brc_default_log();
      if (os_log_type_enabled(v23, (os_log_type_t)0x90u))
      {
        uint64_t v24 = "(passed to caller)";
        LODWORD(buf) = 136315906;
        *(void *)((char *)&buf + 4) = "-[CKRecord(BRCSerializationAdditions) serializeVersion:diffs:deadInServerTruth:b"
                                        "asehashSalt:error:]";
        WORD6(buf) = 2080;
        if (!a11) {
          uint64_t v24 = "(ignored by caller)";
        }
        *(void *)((char *)&buf + 14) = v24;
        a18 = 2112;
        a19 = v21;
        LOWORD(a20) = 2112;
        *(void *)((char *)&a20 + 2) = v22;
        _os_log_error_impl(&dword_23FA42000, v23, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", (uint8_t *)&buf, 0x2Au);
      }
    }
    if (a11) {
      *a11 = v21;
    }

    objc_end_catch();
    JUMPOUT(0x23FB277F0);
  }
  _Unwind_Resume(a1);
}

__CFString *prettyPrintServerChangeToken(void *a1, uint64_t a2)
{
  uint64_t v2 = [a1 descriptionWithContext:a2];
  id v3 = v2;
  if (!v2) {
    uint64_t v2 = @"nil-token";
  }
  id v4 = v2;

  return v4;
}

__CFString *prettyPrintQueryCursor(void *a1)
{
  uint64_t v1 = [a1 data];
  uint64_t v2 = [v1 base64EncodedStringWithOptions:0];
  id v3 = v2;
  if (!v2) {
    uint64_t v2 = @"nil-cursor";
  }
  id v4 = v2;

  return v4;
}

void sub_23FB2FF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __brc_leave_section(&a64);
  _Unwind_Resume(a1);
}

void sub_23FB31B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void reuploadItemInContainer(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v10 = a2;
  char v11 = [v7 recordType];
  int v12 = [v11 isEqualToString:@"structure"];

  if (v12)
  {
    uint64_t v13 = brc_bread_crumbs();
    id v14 = brc_default_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
      reuploadItemInContainer_cold_1();
    }

    handleErrorForRecord(v7, v10, v8, v9);
  }
  else
  {
    long long v15 = [v7 recordID];
    uint64_t v16 = [v10 session];
    uint64_t v17 = objc_msgSend(v15, "brc_itemIDWithSession:", v16);

    uint64_t v18 = [v10 itemByItemID:v17];

    if ([v18 isDocument]
      && [v18 syncUpState] == 4
      && ([v18 isDead] & 1) == 0)
    {
      uint64_t v21 = brc_bread_crumbs();
      uint64_t v22 = brc_default_log();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
        reuploadItemInContainer_cold_3();
      }

      uint64_t v23 = [v18 asDocument];
      [v23 markNeedsReading];

      [v18 saveToDB];
    }
    else
    {
      id v19 = brc_bread_crumbs();
      id v20 = brc_default_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG)) {
        reuploadItemInContainer_cold_2();
      }
    }
    id v10 = (id)v17;
  }
}

void markRecordBacklistedFromSyncWithMinimumSupportedOS(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [a1 recordID];
  id v8 = [v5 session];
  objc_msgSend(v7, "brc_itemIDWithSession:", v8);
  id v10 = (id)objc_claimAutoreleasedReturnValue();

  id v9 = [v5 itemByItemID:v10];

  [v9 markNeedsOSUpgradeToSyncUpWithName:v6];
  [v9 saveToDB];
}

void markRecordNeedingRemapToNewParent(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v10 = a2;
  char v11 = [v7 objectForKeyedSubscript:@"parent"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v12 = [v11 recordID];
  }
  else
  {
    int v12 = 0;
  }
  id v13 = objc_alloc(MEMORY[0x263EFD7E8]);
  id v14 = [v8 serverZone];
  long long v15 = [v14 zoneID];
  uint64_t v16 = (void *)[v13 initWithRecordName:v10 zoneID:v15];

  uint64_t v17 = [v8 session];
  uint64_t v18 = objc_msgSend(v16, "brc_itemIDWithSession:", v17);

  id v19 = [v8 session];
  id v20 = objc_msgSend(v12, "brc_itemIDWithSession:", v19);

  if (v20)
  {
    remapItemIDToNewItemID(v20, v18, v8, v9);
  }
  else
  {
    uint64_t v21 = brc_bread_crumbs();
    uint64_t v22 = brc_default_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT)) {
      markRecordNeedingRemapToNewParent_cold_1();
    }
  }
}

void markRecordNeedingRemapToNewRecordName(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = (objc_class *)MEMORY[0x263EFD7E8];
  id v8 = a4;
  id v9 = a3;
  id v10 = a2;
  id v11 = a1;
  id v12 = [v7 alloc];
  id v13 = [v9 serverZone];
  id v14 = [v13 zoneID];
  id v20 = (id)[v12 initWithRecordName:v10 zoneID:v14];

  long long v15 = [v9 session];
  uint64_t v16 = objc_msgSend(v20, "brc_itemIDWithSession:", v15);

  uint64_t v17 = [v11 recordID];

  uint64_t v18 = [v9 session];
  id v19 = objc_msgSend(v17, "brc_itemIDWithSession:", v18);

  remapItemIDToNewItemID(v19, v16, v9, v8);
}

void handleErrorForRecord(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = v7;
  id v11 = a1;
  id v12 = [v10 session];
  id v13 = [v11 recordID];
  id v14 = [v13 recordName];
  int v15 = [v14 hasPrefix:@"shareAlias/"];

  if (!v15)
  {
    unint64_t v26 = [v11 recordID];

    unint64_t v27 = objc_msgSend(v26, "brc_itemIDWithSession:", v12);

    uint64_t v23 = [v10 itemByItemID:v27];

    id v20 = v10;
    goto LABEL_12;
  }
  uint64_t v16 = [v11 objectForKeyedSubscript:@"target"];

  if (!v16)
  {
    uint64_t v23 = 0;
    id v20 = v10;
    goto LABEL_11;
  }
  uint64_t v17 = [v16 recordID];
  uint64_t v18 = [v17 zoneID];
  id v19 = [v12 serverZoneByCKZoneID:v18];
  id v20 = [v19 clientZone];

  if (!v20) {
    goto LABEL_8;
  }
  uint64_t v21 = [v16 recordID];
  uint64_t v22 = objc_msgSend(v21, "brc_itemIDWithSession:", v12);
  uint64_t v23 = [v20 itemByItemID:v22];

  if (![v23 syncUpState])
  {
    uint64_t v24 = brc_bread_crumbs();
    id v25 = brc_default_log();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_FAULT)) {
      handleErrorForRecord_cold_2();
    }

LABEL_8:
    uint64_t v23 = 0;
  }
LABEL_11:

LABEL_12:
  BOOL v28 = brc_bread_crumbs();
  int v29 = brc_default_log();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG)) {
    handleErrorForRecord_cold_1();
  }

  if (v23)
  {
    if (([v23 isZoneRoot] & 1) == 0)
    {
      int v30 = [v9 syncUpCallback];
      uint64_t v31 = [v20 dbRowID];
      unint64_t v32 = [v30 postponeSyncUpCallback:v23 inZone:v31];

      uint64_t v33 = [v20 mangledID];
      id v34 = +[BRCUserDefaults defaultsForMangledID:v33];
      unint64_t v35 = [v34 syncUpRetryCountForFailure];

      if (v32 > v35)
      {
        id v36 = v23;
        char v37 = objc_msgSend(v8, "brc_telemetryReportableErrorWithRecordName:", 0);
        char v38 = [v36 db];
        uint64_t v43 = [v36 dbRowID];

        uint64_t v39 = [v37 domain];
        id v44 = v8;
        uint64_t v40 = [v37 code];
        unint64_t v41 = objc_msgSend(v37, "brc_cloudKitErrorMessage");
        [v38 execute:@"INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, error_message, service) VALUES (%llu, %@, %ld, %@, %d)", v43, v39, v40, v41, 3];

        id v42 = +[BRCAutoBugCaptureReporter sharedABCReporter];
        [v42 captureLogsForOperationType:@"SyncHealth" ofSubtype:@"SyncUp" forError:v37];

        id v8 = v44;
      }
    }
  }
  [v9 setThrottledItemInBatch:1];
}

void sub_23FB34388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FB34C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t __Block_byref_object_copy__22(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__22(uint64_t a1)
{
}

void sub_23FB35844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void remapItemIDToNewItemID(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if ([v10 containsObject:v7])
  {
    id v11 = brc_bread_crumbs();
    id v12 = brc_default_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      remapItemIDToNewItemID_cold_1();
    }
  }
  else
  {
    [v10 addObject:v7];
    id v13 = [v9 db];
    v14[0] = MEMORY[0x263EF8330];
    v14[1] = 3221225472;
    v14[2] = __remapItemIDToNewItemID_block_invoke;
    v14[3] = &unk_26507F760;
    id v15 = v9;
    id v16 = v7;
    id v17 = v8;
    [v13 groupInTransaction:v14];

    id v11 = v15;
  }
}

uint64_t __remapItemIDToNewItemID_block_invoke(uint64_t a1)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) itemByItemID:*(void *)(a1 + 40)];
  if ([v2 isKnownByServer])
  {
    uint64_t v18 = brc_bread_crumbs();
    id v19 = brc_default_log();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT)) {
      __remapItemIDToNewItemID_block_invoke_cold_1();
    }
  }
  id v3 = [*(id *)(a1 + 32) serverItemByItemID:*(void *)(a1 + 48)];
  id v4 = [*(id *)(a1 + 32) itemByItemID:*(void *)(a1 + 48)];
  if (v4)
  {
    id v5 = brc_bread_crumbs();
    id v6 = brc_default_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = *(void **)(a1 + 40);
      uint64_t v8 = *(void *)(a1 + 48);
      int v20 = 138412802;
      uint64_t v21 = v7;
      __int16 v22 = 2112;
      uint64_t v23 = v8;
      __int16 v24 = 2112;
      id v25 = v5;
      _os_log_impl(&dword_23FA42000, v6, OS_LOG_TYPE_DEFAULT, "[WARNING] We were told to remap to an item %@ -> %@ which is already in our client truth%@", (uint8_t *)&v20, 0x20u);
    }

    if ([v4 isOnDisk])
    {
      id v9 = brc_bread_crumbs();
      id v10 = brc_default_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        int v20 = 138412290;
        uint64_t v21 = v9;
        _os_log_impl(&dword_23FA42000, v10, OS_LOG_TYPE_DEFAULT, "[WARNING] Item is also on disk, marking the item as rejected%@", (uint8_t *)&v20, 0xCu);
      }

      [v4 markForceRejected];
      id v11 = objc_opt_new();
      [v4 learnItemID:v11 serverItem:0];

      if (([v4 saveToDB] & 1) == 0) {
        goto LABEL_9;
      }
    }
    else
    {
      [v4 markNeedsDeleteForRescheduleOfItem:v3];
      if (![v4 saveToDB])
      {
LABEL_9:
        uint64_t v12 = 0;
        goto LABEL_14;
      }
    }
  }
  id v13 = brc_bread_crumbs();
  id v14 = brc_default_log();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    id v16 = *(void **)(a1 + 40);
    uint64_t v17 = *(void *)(a1 + 48);
    int v20 = 138412802;
    uint64_t v21 = v16;
    __int16 v22 = 2112;
    uint64_t v23 = v17;
    __int16 v24 = 2112;
    id v25 = v13;
    _os_log_debug_impl(&dword_23FA42000, v14, OS_LOG_TYPE_DEBUG, "[DEBUG] The server wasn't able to remap parentID %@ to pcs chained parent %@ so doing it now%@", (uint8_t *)&v20, 0x20u);
  }

  [v2 learnItemID:*(void *)(a1 + 48) serverItem:v3];
  uint64_t v12 = [v2 saveToDB];
LABEL_14:

  return v12;
}

Class initRadarDraft()
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("RadarDraft");
  classRadarDraft = (uint64_t)result;
  getRadarDraftClass Class = (uint64_t (*)())RadarDraftFunction;
  return result;
}

void TapToRadarKitLibrary()
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (!TapToRadarKitLibrary_frameworkLibrary)
  {
    TapToRadarKitLibrary_frameworkLibrary = (uint64_t)dlopen("/AppleInternal/Library/Frameworks/TapToRadarKit.framework/TapToRadarKit", 2);
    if (!TapToRadarKitLibrary_frameworkLibrary)
    {
      uint64_t v0 = brc_bread_crumbs();
      uint64_t v1 = brc_default_log();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
      {
        int v2 = 136315394;
        id v3 = dlerror();
        __int16 v4 = 2112;
        id v5 = v0;
        _os_log_impl(&dword_23FA42000, v1, OS_LOG_TYPE_DEFAULT, "[WARNING] Can't open TapToRadarKit : %s%@", (uint8_t *)&v2, 0x16u);
      }
    }
  }
}

id RadarDraftFunction()
{
  return (id)classRadarDraft;
}

Class initRadarComponent()
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("RadarComponent");
  classRadarComponent = (uint64_t)result;
  getRadarComponentClass Class = (uint64_t (*)())RadarComponentFunction;
  return result;
}

id RadarComponentFunction()
{
  return (id)classRadarComponent;
}

Class initTapToRadarService()
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("TapToRadarService");
  classTapToRadarService = (uint64_t)result;
  getTapToRadarServiceClass Class = (uint64_t (*)())TapToRadarServiceFunction;
  return result;
}

id TapToRadarServiceFunction()
{
  return (id)classTapToRadarService;
}

void sub_23FB3AE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t dropFPFSMigrationTablesWithDB(void *a1)
{
  id v1 = a1;
  if ([v1 execute:@"DROP INDEX IF EXISTS \"client_items/item_file_id_unique\""]
    && [v1 execute:@"DROP INDEX IF EXISTS \"client_items/item_doc_id\""])
  {
    uint64_t v2 = [v1 execute:@"DROP INDEX IF EXISTS \"client_items/trashed_items_migration\""];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t createFPFSMigrationNonMigratedFoldersTable(void *a1, const char *a2)
{
  return [a1 execute:@"CREATE TABLE IF NOT EXISTS fpfs_folders_not_migrated(item_id blob NOT NULL, zone_rowid integer NOT NULL, PRIMARY KEY (item_id, zone_rowid))"];
}

uint64_t isFPFSMigrationNonMigratedFoldersExists(void *a1, const char *a2)
{
  return objc_msgSend(a1, "br_isTableExists:", @"fpfs_folders_not_migrated");
}

uint64_t fillFPFSMigrationNonMigratedFoldersTable(void *a1)
{
  id v1 = a1;
  if (objc_msgSend(v1, "br_isTableExists:", @"fpfs_folders_not_migrated")) {
    uint64_t v2 = [v1 execute:@"INSERT OR IGNORE INTO fpfs_folders_not_migrated SELECT item_id, zone_rowid FROM client_items WHERE item_localsyncupstate IN (5,6) AND +item_type IN (0, 9, 10, 4)"];
  }
  else {
    uint64_t v2 = 1;
  }

  return v2;
}

uint64_t dropFPFSMigrationNonMigratedFoldersTable(void *a1)
{
  id v1 = a1;
  if ([v1 execute:@"DROP TABLE IF EXISTS fpfs_folders_not_migrated"]) {
    uint64_t v2 = [v1 execute:@"DROP INDEX IF EXISTS \"client_items/items_pending_fpfs_migration\""];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t br_create_tables_initial(void *a1, void *a2, int a3, void **a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = v8;
  long long v21 = 0uLL;
  uint64_t v22 = 0;
  if (!a3)
  {
    if (v7)
    {
      if (([v7 _setupBackupDetector:&v21 error:a4] & 1) == 0)
      {
LABEL_25:
        uint64_t v14 = 0;
        goto LABEL_26;
      }
    }
    else
    {
      long long v21 = xmmword_23FD343C0;
      uint64_t v22 = 0;
    }
    if ([v9 execute:@"CREATE TABLE backup_detector( old integer, new integer, counter integer, os text not null, br text not null)"])
    {
      long long v20 = v21;
      uint64_t v10 = v22;
      id v11 = OSVersion();
      uint64_t v12 = BRVersion();
      if [v9 execute:@"INSERT INTO backup_detector (old, new, counter, os, br) VALUES (%llu, %llu, %llu, %@, %@)", v20, v10, v11, v12]&& objc_msgSend(v9, "execute:", @"CREATE TABLE boot_history(date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)")&& objc_msgSend(v9, "execute:", @"CREATE TABLE client_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)")&& (objc_msgSend(v9, "execute:", @"CREATE TABLE client_state (v)"))
      {
        char v13 = [v9 execute:@"INSERT INTO client_state values (NULL)"];

        if (v13) {
          goto LABEL_18;
        }
      }
      else
      {
      }
    }
LABEL_20:
    if (a4)
    {
      uint64_t v15 = [v9 lastError];
      id v16 = *a4;
      *a4 = (void *)v15;
    }
    uint64_t v17 = brc_bread_crumbs();
    uint64_t v18 = brc_default_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT)) {
      br_create_tables_initial_cold_1();
    }

    goto LABEL_25;
  }
  if (![v8 execute:@"CREATE TABLE devices(key integer primary key, name text unique not null)"]|| !objc_msgSend(v9, "execute:", @"CREATE TABLE server_boot_history(date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)")|| !objc_msgSend(v9, "execute:", @"CREATE TABLE server_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)")|| (objc_msgSend(v9, "execute:", @"CREATE TABLE server_state (state, config_plist)") & 1) == 0|| (objc_msgSend(v9, "execute:", @"INSERT INTO server_state values (NULL, NULL)") & 1) == 0)
  {
    goto LABEL_20;
  }
LABEL_18:
  uint64_t v14 = 1;
LABEL_26:

  return v14;
}

uint64_t br_update_tables_1_000(uint64_t a1, void *a2, char a3, void **a4)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else
  {
    id v9 = (void *)[v6 fetch:@"SELECT container_id, container_plist FROM client_containers"];
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id obj = [v9 enumerateObjectsOfClass:objc_opt_class()];
    uint64_t v10 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v23 = a4;
      __int16 v24 = v9;
      uint64_t v12 = *(void *)v27;
      while (2)
      {
        for (uint64_t i = 0; i != v11; ++i)
        {
          if (*(void *)v27 != v12) {
            objc_enumerationMutation(obj);
          }
          uint64_t v14 = *(void *)(*((void *)&v26 + 1) + 8 * i);
          uint64_t v15 = [MEMORY[0x263F8C718] nameWithPrefix:v14 suffix:@"items"];
          id v16 = [MEMORY[0x263F8C718] nameWithPrefix:v14 suffix:@"unapplied_table"];
          uint64_t v17 = [MEMORY[0x263F8C718] nameWithPrefix:v14 suffix:@"server_items"];
          if (![v7 execute:@"UPDATE %@ SET item_live_conflict_loser_etags = call_block(%@, item_live_conflict_loser_etags) WHERE item_live_conflict_loser_etags IS NOT NULL", v15, &__block_literal_global_28]|| (objc_msgSend(v7, "execute:", @"INSERT OR IGNORE INTO %@ (throttle_id) SELECT item_rank FROM %@ WHERE version_conflict_loser_etags IS NOT NULL AND item_rank IS NOT NULL", v16, v17) & 1) == 0)
          {
            if (v23)
            {
              uint64_t v18 = [v7 lastError];
              id v19 = *v23;
              *uint64_t v23 = (void *)v18;
            }
            long long v20 = brc_bread_crumbs();
            long long v21 = brc_default_log();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_FAULT)) {
              br_create_tables_initial_cold_1();
            }

            uint64_t v8 = 0;
            id v9 = v24;
            goto LABEL_19;
          }
        }
        uint64_t v11 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
        uint64_t v8 = 1;
        id v9 = v24;
        if (v11) {
          continue;
        }
        break;
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
LABEL_19:
  }
  return v8;
}

uint64_t br_update_tables_2_000(void *a1, void *a2, int a3, void **a4)
{
  uint64_t v81 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  id v9 = objc_alloc_init(MEMORY[0x263EFF9A0]);
  if (a3)
  {
    if [v8 execute:@"CREATE TABLE server_zones(rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))"]&& objc_msgSend(v8, "execute:", @"CREATE TABLE server_xattr_blobs(zone_rowid integer not null, signature blob not null, data blob not null, PRIMARY KEY(zone_rowid, signature))")&& (objc_msgSend(v8, "execute:", @"CREATE TABLE server_pending_fetches(zone_rowid integer not null, record_id blob not null, record blob, PRIMARY KEY (zone_rowid, record_id))"))
    {
      if [v8 execute:@"INSERT INTO server_zones (rowid, zone_owner, zone_name, zone_plist) SELECT NULL, %@, container_id, container_plist FROM server_containers", *MEMORY[0x263EFD488]]&& (objc_msgSend(v8, "execute:", @"DROP TABLE server_containers"))
      {
        uint64_t v10 = (void *)[v8 fetch:@"SELECT rowid, zone_name FROM server_zones"];
        if ([v10 next])
        {
          do
          {
            uint64_t v11 = [v10 stringAtIndex:1];
            uint64_t v12 = [v10 numberAtIndex:0];
            [v9 setObject:v11 forKeyedSubscript:v12];
          }
          while (([v10 next] & 1) != 0);
        }
        long long v76 = 0u;
        long long v77 = 0u;
        long long v74 = 0u;
        long long v75 = 0u;
        id obj = [v9 keyEnumerator];
        uint64_t v61 = [obj countByEnumeratingWithState:&v74 objects:v80 count:16];
        if (v61)
        {
          uint64_t v59 = *(void *)v75;
          while (2)
          {
            for (uint64_t i = 0; i != v61; ++i)
            {
              if (*(void *)v75 != v59) {
                objc_enumerationMutation(obj);
              }
              uint64_t v14 = *(void *)(*((void *)&v74 + 1) + 8 * i);
              uint64_t v15 = [v9 objectForKeyedSubscript:v14];
              id v16 = [MEMORY[0x263F8C718] nameWithPrefix:v15 suffix:@"server_xattrs"];
              if (![v8 execute:@"INSERT INTO server_xattr_blobs SELECT %@, signature, data FROM %@", v14, v16]|| !objc_msgSend(v8, "execute:", @"DROP TABLE %@", v16)|| (objc_msgSend(MEMORY[0x263F8C718], "nameWithPrefix:suffix:", v15, @"pending_fetches"), uint64_t v17 = objc_claimAutoreleasedReturnValue(), v18 = objc_msgSend(v8, "execute:", @"DROP TABLE %@", v17), v17, (v18 & 1) == 0))
              {
                if (a4)
                {
                  uint64_t v33 = [v8 lastError];
                  id v34 = *a4;
                  *a4 = (void *)v33;
                }
                unint64_t v35 = brc_bread_crumbs();
                id v36 = brc_default_log();
                if (os_log_type_enabled(v36, OS_LOG_TYPE_FAULT)) {
                  br_update_tables_2_000_cold_1();
                }

                goto LABEL_53;
              }
            }
            uint64_t v61 = [obj countByEnumeratingWithState:&v74 objects:v80 count:16];
            if (v61) {
              continue;
            }
            break;
          }
        }

        goto LABEL_20;
      }
      if (a4)
      {
        uint64_t v31 = [v8 lastError];
        unint64_t v32 = *a4;
        *a4 = (void *)v31;
      }
      long long v26 = brc_bread_crumbs();
      long long v27 = brc_default_log();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_FAULT)) {
        br_update_tables_2_000_cold_2();
      }
    }
    else
    {
      if (a4)
      {
        uint64_t v28 = [v8 lastError];
        long long v29 = *a4;
        *a4 = (void *)v28;
      }
      long long v26 = brc_bread_crumbs();
      long long v27 = brc_default_log();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_FAULT)) {
        br_update_tables_2_000_cold_3();
      }
    }
    goto LABEL_52;
  }
  if (![v8 execute:@"CREATE TABLE client_zones(rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))"]|| !objc_msgSend(v8, "execute:", @"CREATE TABLE client_reader_throttle(throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0)")|| !objc_msgSend(v8, "execute:", @"CREATE INDEX \"client_reader_throttle/zone_rowid\" ON client_reader_throttle (zone_rowid)")|| !objc_msgSend(v8, "execute:", @"CREATE INDEX \"client_reader_throttle/next_retry_stamp_active_state\" ON client_reader_throttle (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1")|| !objc_msgSend(v8, "execute:", @"CREATE INDEX \"client_reader_throttle/zone_rowid__throttle_state\" ON client_reader_throttle (throttle_state, zone_rowid)")
    || ![v8 execute:@"CREATE INDEX \"client_reader_throttle/expire_stamp_inactive_state\" ON client_reader_throttle (throttle_state, expire_stamp ASC) WHERE throttle_state = 0"]|| !objc_msgSend(v8, "execute:", @"CREATE TABLE client_unapplied_table(throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, apply_kind integer not null)")|| !objc_msgSend(v8, "execute:", @"CREATE INDEX \"client_unapplied_table/zone_rowid\" ON client_unapplied_table (zone_rowid)")|| !objc_msgSend(v8, "execute:", @"CREATE INDEX \"client_unapplied_table/next_retry_stamp_active_state\" ON client_unapplied_table (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1")|| !objc_msgSend(v8, "execute:", @"CREATE INDEX \"client_unapplied_table/zone_rowid__kind__throttle_state\" ON client_unapplied_table (throttle_state, zone_rowid, apply_kind)")
    || ![v8 execute:@"CREATE INDEX \"client_unapplied_table/expire_stamp_inactive_state\" ON client_unapplied_table (throttle_state, expire_stamp ASC) WHERE throttle_state = 0"]|| !objc_msgSend(v8, "execute:", @"CREATE TABLE client_document_access(zone_rowid text not null , item_rowid integer not null , evictable integer not null , access_time integer not null default 0, PRIMARY KEY (zone_rowid, item_rowid))")|| !objc_msgSend(v8, "execute:", @"CREATE INDEX \"client_document_access/access_item\" ON client_document_access (access_time)")|| !objc_msgSend(v8, "execute:", @"CREATE INDEX \"client_document_access/evictable\" ON client_document_access (evictable)")|| (objc_msgSend(v8, "execute:", @"DROP TABLE IF EXISTS document_access") & 1) == 0)
  {
    if (a4)
    {
      uint64_t v24 = [v8 lastError];
      id v25 = *a4;
      *a4 = (void *)v24;
    }
    long long v26 = brc_bread_crumbs();
    long long v27 = brc_default_log();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_FAULT)) {
      br_update_tables_2_000_cold_6();
    }
LABEL_52:

    uint64_t v10 = 0;
LABEL_53:
    uint64_t v19 = 0;
    goto LABEL_54;
  }
  uint64_t v70 = 0;
  uint64_t v71 = &v70;
  uint64_t v72 = 0x2020000000;
  uint64_t v73 = 1;
  long long v20 = (void *)[v8 fetch:@"SELECT rowid, zone_name FROM server_zones"];
  while ([v20 next])
  {
    unint64_t v21 = [v20 unsignedLongAtIndex:0];
    if (v21 > v71[3]) {
      v71[3] = v21 + 1;
    }
    uint64_t v22 = [NSNumber numberWithUnsignedLongLong:v21];
    uint64_t v23 = [v20 stringAtIndex:1];
    [v9 setObject:v22 forKeyedSubscript:v23];
  }
  v67[0] = MEMORY[0x263EF8330];
  v67[1] = 3221225472;
  v67[2] = __br_update_tables_2_000_block_invoke;
  v67[3] = &unk_265082590;
  id v62 = v9;
  id v68 = v62;
  uint64_t v69 = &v70;
  char v37 = (void *)MEMORY[0x2455D9A50](v67);
  if (([v8 execute:@"INSERT INTO client_zones (rowid, zone_owner, zone_name, zone_plist)    SELECT call_block(%@, container_id), %@, container_id, container_plist      FROM client_containers", v37, *MEMORY[0x263EFD488]] & 1) == 0)
  {

LABEL_71:
    if (a4)
    {
      uint64_t v40 = [v8 lastError];
      unint64_t v41 = *a4;
      *a4 = (void *)v40;
    }
    brc_bread_crumbs();
    id v56 = (id)objc_claimAutoreleasedReturnValue();
    id v42 = brc_default_log();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_FAULT))
    {
      uint64_t v43 = [v8 lastError];
      br_update_tables_2_000_cold_4(v43, (uint64_t)v56, (uint64_t)v79);
    }
LABEL_92:

    char v48 = 0;
    uint64_t v10 = v20;
    goto LABEL_93;
  }
  char v38 = [v8 execute:@"DROP TABLE client_containers"];

  if ((v38 & 1) == 0) {
    goto LABEL_71;
  }
  [v62 removeAllObjects];
  uint64_t v10 = (void *)[v8 fetch:@"SELECT rowid, zone_name FROM client_zones"];
  while (1)
  {

    if (![v10 next]) {
      break;
    }
    long long v20 = [v10 stringAtIndex:1];
    uint64_t v39 = [v10 numberAtIndex:0];
    [v62 setObject:v20 forKeyedSubscript:v39];
  }
  long long v65 = 0u;
  long long v66 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  id v56 = [v62 keyEnumerator];
  uint64_t v55 = [v56 countByEnumeratingWithState:&v63 objects:v78 count:16];
  if (v55)
  {
    uint64_t v54 = *(void *)v64;
    while (2)
    {
      for (uint64_t j = 0; j != v55; ++j)
      {
        if (*(void *)v64 != v54) {
          objc_enumerationMutation(v56);
        }
        id v42 = [v62 objectForKeyedSubscript:*(void *)(*((void *)&v63 + 1) + 8 * j)];
        id obja = [MEMORY[0x263F8C718] nameWithPrefix:v42 suffix:@"items"];
        unint64_t v60 = [MEMORY[0x263F8C718] nameWithPrefix:v42 suffix:@"desired_additions"];
        id v45 = [MEMORY[0x263F8C718] nameWithPrefix:v42 suffix:@"unapplied_table"];
        if (![v8 execute:@"DROP TABLE %@", v60]
          || ![v8 execute:@"UPDATE %@   SET item_state = -1, item_processing_stamp = 1 WHERE item_type = 3   AND item_localsyncupstate = 3", obja]|| !objc_msgSend(v8, "execute:", @"DROP TABLE %@", v45)|| (objc_msgSend(MEMORY[0x263F8C718], "nameWithPrefix:suffix:", v42, @"reader_throttle"), uint64_t v46 = objc_claimAutoreleasedReturnValue(), v47 = objc_msgSend(v8, "execute:", @"DROP TABLE %@", v46), v46, (v47 & 1) == 0))
        {
          if (a4)
          {
            uint64_t v49 = [v8 lastError];
            __int16 v50 = *a4;
            *a4 = (void *)v49;
          }
          id v51 = brc_bread_crumbs();
          __int16 v52 = brc_default_log();
          if (os_log_type_enabled(v52, OS_LOG_TYPE_FAULT))
          {
            uint32_t v53 = [v8 lastError];
            br_update_tables_2_000_cold_4(v53, (uint64_t)v51, (uint64_t)v79);
          }

          long long v20 = v10;
          goto LABEL_92;
        }
      }
      uint64_t v55 = [v56 countByEnumeratingWithState:&v63 objects:v78 count:16];
      char v48 = 1;
      if (v55) {
        continue;
      }
      break;
    }
  }
  else
  {
    char v48 = 1;
  }
LABEL_93:

  _Block_object_dispose(&v70, 8);
  if ((v48 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_20:
  if (v7) {
    +[BRCStageRegistry migrateStageToVersion2_0WithSession:v7];
  }
  uint64_t v19 = 1;
LABEL_54:

  return v19;
}

void sub_23FB3E01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t br_update_tables_3_002(uint64_t a1, void *a2, int a3, void **a4)
{
  v75[2] = *MEMORY[0x263EF8340];
  id v6 = a2;
  id v7 = (void *)MEMORY[0x263EFFA08];
  v75[0] = objc_opt_class();
  v75[1] = objc_opt_class();
  id v8 = [MEMORY[0x263EFF8C0] arrayWithObjects:v75 count:2];
  id v9 = [v7 setWithArray:v8];

  id v10 = objc_alloc_init(MEMORY[0x263EFF9A0]);
  v71[0] = MEMORY[0x263EF8330];
  v71[1] = 3221225472;
  v71[2] = __br_update_tables_3_002_block_invoke;
  v71[3] = &unk_26507F148;
  id v11 = v9;
  id v72 = v11;
  uint64_t v12 = (void *)MEMORY[0x2455D9A50](v71);
  if (a3)
  {
    if ([v6 execute:@" CREATE TABLE server_items(zone_rowid integer not null, item_id blob not null, item_rank integer, item_sharing_options integer not null default 0, item_sharing_etag blob default null, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text not null, item_origname text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, PRIMARY KEY (zone_rowid, item_id), UNIQUE (item_rank))"])
    {
      if ([v6 execute:@"CREATE INDEX \"server_items/path_index\" ON server_items (zone_rowid, item_parent_id, item_filename)"])
      {
        if ([v6 execute:@"CREATE INDEX \"server_items/alias_map\" ON server_items (item_type, item_filename, zone_rowid, item_rank) WHERE item_type = 3"])
        {
          if ([v6 execute:@"CREATE INDEX \"server_items/item_rank\" ON server_items (zone_rowid, item_rank)"])
          {
            if ([v6 execute:@"CREATE INDEX \"server_items/item_parent_id__item_state\" ON server_items (zone_rowid, item_parent_id, item_state)"])
            {
              if ([v6 execute:@"CREATE INDEX \"server_items/item_xattr_signature\" ON server_items (zone_rowid, item_xattr_signature)"])
              {
                if ([v6 execute:@"CREATE INDEX \"server_items/version_xattr_signature\" ON server_items (zone_rowid, version_xattr_signature)"])
                {
                  if ([v6 execute:@"CREATE TABLE server_owners(owner_key integer primary key, owner_name text not null, owner_plist blob, UNIQUE (owner_name))"])
                  {
                    unint64_t v13 = 0x263F8C000uLL;
                    uint64_t v14 = [MEMORY[0x263F8C718] nameWithPrefix:*MEMORY[0x263F32528] suffix:@"server_items"];
                    char v15 = [v6 execute:@"DROP TABLE IF EXISTS %@", v14];

                    if (v15)
                    {
                      id v16 = (void *)[v6 fetch:@"SELECT rowid, zone_name FROM server_zones"];
                      if ([v16 next])
                      {
                        do
                        {
                          uint64_t v17 = [v16 stringAtIndex:1];
                          char v18 = [v16 numberAtIndex:0];
                          [v10 setObject:v17 forKeyedSubscript:v18];
                        }
                        while (([v16 next] & 1) != 0);
                      }
                      long long v69 = 0u;
                      long long v70 = 0u;
                      long long v67 = 0u;
                      long long v68 = 0u;
                      uint64_t v19 = [v10 keyEnumerator];
                      uint64_t v50 = [v19 countByEnumeratingWithState:&v67 objects:v74 count:16];
                      if (v50)
                      {
                        uint64_t v52 = *(void *)v68;
                        while (2)
                        {
                          uint64_t v20 = 0;
                          do
                          {
                            if (*(void *)v68 != v52) {
                              objc_enumerationMutation(v19);
                            }
                            uint64_t v54 = v20;
                            uint64_t v56 = *(void *)(*((void *)&v67 + 1) + 8 * v20);
                            unint64_t v21 = objc_msgSend(v10, "objectForKeyedSubscript:");
                            uint64_t v22 = [*(id *)(v13 + 1816) nameWithPrefix:v21 suffix:@"server_items"];
                            uint64_t v59 = (void *)MEMORY[0x2455D9A50](v12);
                            uint64_t v61 = (void *)v22;
                            if (![v6 execute:@"INSERT INTO server_items (zone_rowid, item_sharing_options, item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info) SELECT %@, call_block(%@, item_iwork_sharing_info), item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM %@", v56, v59, v22])goto LABEL_76; {
                            uint64_t v23 = [*(id *)(v13 + 1816) nameWithPrefix:v21 suffix:@"server_items_view"];
                            }
                            if (([v6 execute:@"DROP VIEW IF EXISTS %@", v23] & 1) == 0)
                            {

LABEL_76:
                              uint64_t v24 = v61;
LABEL_77:
                              if (a4)
                              {
                                uint64_t v37 = [v6 lastError];
                                char v38 = *a4;
                                *a4 = (void *)v37;
                              }
                              uint64_t v39 = brc_bread_crumbs();
                              uint64_t v40 = brc_default_log();
                              if (os_log_type_enabled(v40, OS_LOG_TYPE_FAULT)) {
                                br_create_tables_initial_cold_1();
                              }

                              goto LABEL_88;
                            }
                            uint64_t v24 = v61;
                            char v57 = [v6 execute:@"DROP TABLE %@", v61];

                            if ((v57 & 1) == 0) {
                              goto LABEL_77;
                            }

                            uint64_t v20 = v54 + 1;
                            unint64_t v13 = 0x263F8C000;
                          }
                          while (v50 != v54 + 1);
                          uint64_t v25 = 1;
                          uint64_t v50 = [v19 countByEnumeratingWithState:&v67 objects:v74 count:16];
                          if (v50) {
                            continue;
                          }
                          break;
                        }
                      }
                      else
                      {
                        uint64_t v25 = 1;
                      }
                      goto LABEL_89;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    if (a4)
    {
      uint64_t v35 = [v6 lastError];
      id v36 = *a4;
      *a4 = (void *)v35;
    }
    uint64_t v19 = brc_bread_crumbs();
    unint64_t v21 = brc_default_log();
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_FAULT)) {
      goto LABEL_87;
    }
LABEL_86:
    br_create_tables_initial_cold_1();
LABEL_87:
    id v16 = 0;
LABEL_88:

    uint64_t v25 = 0;
LABEL_89:

    goto LABEL_90;
  }
  if (![v6 execute:@" CREATE TABLE client_items(rowid integer primary key, zone_rowid integer not null, item_id blob not null, item_sharing_options integer not null default 0, item_localsyncupstate integer, item_in_flight_diffs integer, item_local_diffs integer not null, item_notifs_rank integer not null, item_transfer_priority integer, item_processing_stamp integer, item_doc_id integer, item_file_id integer, item_generation, item_localname text, item_bouncedname text, item_staged_file_id integer, item_staged_generation integer, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, item_live_conflict_loser_etags blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, version_uploaded_assets blob, version_upload_error blob, desired_version blob, UNIQUE (zone_rowid, item_id), UNIQUE (zone_rowid, item_doc_id), UNIQUE (zone_rowid, item_file_id), UNIQUE (item_staged_file_id), UNIQUE (zone_rowid, item_parent_id, item_localname))"]|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/item_parent_id__item_state\" ON client_items (zone_rowid, item_parent_id, item_state)")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/item_path\" ON client_items (zone_rowid, item_parent_id, item_filename)")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/alias_map\" ON client_items (item_type, item_filename, zone_rowid) WHERE item_type = 3")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/item_in_flight_diffs\" ON client_items (zone_rowid, item_in_flight_diffs)")
    || ![v6 execute:@"CREATE INDEX \"client_items/item_bouncedname\" ON client_items (item_bouncedname) WHERE item_bouncedname IS NOT NULL"]|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/lost_scan_index\" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -1")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/zombie_scan_index\" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -3")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/item_notifs_rank\" ON client_items (zone_rowid, item_notifs_rank)")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/download_index\" ON client_items (zone_rowid, item_staged_file_id, desired_version)")
    || ![v6 execute:@"CREATE INDEX \"client_items/eviction_index\" ON client_items (item_localsyncupstate, zone_rowid, version_size) WHERE item_localsyncupstate = 0"]|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/sync_up_enumerator_1\" ON client_items (item_localsyncupstate, zone_rowid, item_type) WHERE item_localsyncupstate = 4")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/sync_up_enumerator_2\" ON client_items (item_localsyncupstate, zone_rowid, item_state) WHERE item_localsyncupstate = 4")|| !objc_msgSend(v6, "execute:", @" CREATE TABLE client_pkg_items(item_doc_id integer not null, rel_path text not null, zone_rowid integer not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))")|| !objc_msgSend(v6, "execute:", @"CREATE UNIQUE INDEX \"client_pkg_items/asset_rank\" ON client_pkg_items (item_doc_id, asset_rank)")
    || ![v6 execute:@"CREATE INDEX \"client_pkg_items/size\" ON client_pkg_items (item_doc_id, size)"]|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_pkg_items/is_dirty\" ON client_pkg_items (item_doc_id, is_dirty)")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_pkg_items/zone_rowid\" ON client_pkg_items (zone_rowid)")|| !objc_msgSend(v6, "execute:", @"CREATE TABLE client_uploads(throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, UNIQUE(transfer_stage))")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_uploads/gc_index\" ON client_uploads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0")
    || ![v6 execute:@"CREATE INDEX IF NOT EXISTS \"client_uploads/scheduling_by_size\" ON client_uploads (throttle_state, transfer_queue, transfer_operation, transfer_size ASC)  WHERE throttle_state = 1"]|| !objc_msgSend(v6, "execute:", @"CREATE INDEX IF NOT EXISTS \"client_uploads/scheduling_by_stamp\" ON client_uploads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_uploads/transfer_operation\" ON client_uploads (transfer_operation) WHERE transfer_operation IS NOT NULL")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_uploads/zone_rowid__throttle_state\" ON client_uploads (throttle_state, zone_rowid)")|| !objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_uploads/reset_index\" ON client_uploads (zone_rowid, throttle_state)")
    || ![v6 execute:@"CREATE INDEX \"client_uploads/out_of_quota_index\" ON client_uploads (throttle_state, zone_rowid, transfer_size)  WHERE throttle_state = 32"])
  {
LABEL_83:
    if (a4)
    {
      uint64_t v41 = [v6 lastError];
      id v42 = *a4;
      *a4 = (void *)v41;
    }
    uint64_t v19 = brc_bread_crumbs();
    unint64_t v21 = brc_default_log();
    if (!os_log_type_enabled(v21, OS_LOG_TYPE_FAULT)) {
      goto LABEL_87;
    }
    goto LABEL_86;
  }
  uint64_t v26 = *MEMORY[0x263F32528];
  long long v27 = [MEMORY[0x263F8C718] nameWithPrefix:*MEMORY[0x263F32528] suffix:@"pkg_items"];
  if (([v6 execute:@"DROP TABLE IF EXISTS %@", v27] & 1) == 0)
  {

    goto LABEL_83;
  }
  uint64_t v28 = [MEMORY[0x263F8C718] nameWithPrefix:v26 suffix:@"items"];
  char v29 = [v6 execute:@"DROP TABLE IF EXISTS %@", v28];

  if ((v29 & 1) == 0) {
    goto LABEL_83;
  }
  id v16 = (void *)[v6 fetch:@"SELECT rowid, zone_name FROM client_zones"];
  if ([v16 next])
  {
    do
    {
      int v30 = [v16 stringAtIndex:1];
      uint64_t v31 = [v16 numberAtIndex:0];
      [v10 setObject:v30 forKeyedSubscript:v31];
    }
    while (([v16 next] & 1) != 0);
  }
  long long v65 = 0u;
  long long v66 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  uint64_t v19 = [v10 keyEnumerator];
  uint64_t v51 = [v19 countByEnumeratingWithState:&v63 objects:v73 count:16];
  if (v51)
  {
    uint64_t v53 = *(void *)v64;
    while (2)
    {
      for (uint64_t i = 0; i != v51; ++i)
      {
        if (*(void *)v64 != v53) {
          objc_enumerationMutation(v19);
        }
        uint64_t v32 = *(void *)(*((void *)&v63 + 1) + 8 * i);
        unint64_t v21 = [v10 objectForKeyedSubscript:v32];
        id v62 = [MEMORY[0x263F8C718] nameWithPrefix:v21 suffix:@"pkg_items"];
        unint64_t v60 = [MEMORY[0x263F8C718] nameWithPrefix:v21 suffix:@"items"];
        uint64_t v55 = (void *)MEMORY[0x2455D9A50](v12);
        if (![v6 execute:@"INSERT INTO client_items (rowid, zone_rowid, version_upload_error, item_sharing_options, item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version) SELECT rowid, %@, NULL, call_block(%@, item_iwork_sharing_info), item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version FROM %@", v32, v55, v60])goto LABEL_92; {
        uint64_t v33 = [MEMORY[0x263F8C718] nameWithPrefix:v21 suffix:@"items_view"];
        }
        if (![v6 execute:@"DROP VIEW IF EXISTS %@", v33]
          || ![v6 execute:@"DROP TABLE %@", v60]
          || ([v6 execute:@"INSERT INTO client_pkg_items (zone_rowid, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT %@, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM %@", v32, v62] & 1) == 0)
        {

LABEL_92:
LABEL_93:
          if (a4)
          {
            uint64_t v44 = [v6 lastError];
            id v45 = *a4;
            *a4 = (void *)v44;
          }
          uint64_t v46 = brc_bread_crumbs();
          char v47 = brc_default_log();
          if (os_log_type_enabled(v47, OS_LOG_TYPE_FAULT)) {
            br_create_tables_initial_cold_1();
          }

          goto LABEL_88;
        }
        char v34 = [v6 execute:@"DROP TABLE %@", v62];

        if ((v34 & 1) == 0) {
          goto LABEL_93;
        }
      }
      uint64_t v51 = [v19 countByEnumeratingWithState:&v63 objects:v73 count:16];
      if (v51) {
        continue;
      }
      break;
    }
  }

  if (![v6 execute:@"DELETE FROM client_reader_throttle"]
    || ![v6 execute:@"INSERT INTO client_reader_throttle (zone_rowid, throttle_id, throttle_state) SELECT zone_rowid, rowid, 1 FROM client_items WHERE item_localsyncupstate = 2"]|| (objc_msgSend(v6, "execute:", @"INSERT INTO client_uploads (zone_rowid, throttle_id, throttle_state, item_id, transfer_queue, transfer_size) SELECT zone_rowid, rowid, 1, item_id, '_prepare', version_size + version_thumb_size  FROM client_items WHERE item_localsyncupstate = 1") & 1) == 0)
  {
    if (a4)
    {
      uint64_t v48 = [v6 lastError];
      uint64_t v49 = *a4;
      *a4 = (void *)v48;
    }
    uint64_t v19 = brc_bread_crumbs();
    unint64_t v21 = brc_default_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_FAULT)) {
      br_create_tables_initial_cold_1();
    }
    goto LABEL_88;
  }
  uint64_t v25 = 1;
LABEL_90:

  return v25;
}

uint64_t br_update_tables_4_000(void *a1, void *a2, int a3, void **a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = v8;
  if (a3)
  {
    id v10 = @"DROP TABLE IF EXISTS server_alias_map";
  }
  else
  {
    if (![v8 execute:@"DELETE FROM client_unapplied_table"]
      || ![v9 execute:@"DROP TABLE IF EXISTS alias_map"]
      || ![v9 execute:@"INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, -rowid, 1, item_id, %u FROM client_items WHERE item_localsyncupstate = 1", 0]|| !objc_msgSend(v9, "execute:", @"INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, item_rank, 1, item_id, %u FROM server_items", 1)|| !objc_msgSend(v9, "execute:", @"DROP TABLE IF EXISTS client_desired_additions")|| !objc_msgSend(v9, "execute:", @"CREATE TABLE client_downloads(throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))")|| !objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_downloads/scheduling_by_priority\" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1")|| !objc_msgSend(
                          v9,
                          "execute:",
                          @"CREATE INDEX \"client_downloads/scheduling_by_priority_and_kind\" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_kind, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1")
      || ![v9 execute:@"CREATE INDEX \"client_downloads/scheduling_by_stamp\" ON client_downloads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1"]|| !objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_downloads/gc_index\" ON client_downloads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0")|| !objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_downloads/transfer_operation\" ON client_downloads (transfer_operation) WHERE transfer_operation IS NOT NULL")|| !objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_downloads/zone_rowid__throttle_state\" ON client_downloads (throttle_state, zone_rowid)"))
    {
      goto LABEL_18;
    }
    id v10 = @"CREATE INDEX \"client_downloads/reset_index\" ON client_downloads (zone_rowid, throttle_state)";
  }
  if ([v9 execute:v10])
  {
    uint64_t v11 = 1;
    goto LABEL_23;
  }
LABEL_18:
  if (a4)
  {
    uint64_t v12 = [v9 lastError];
    unint64_t v13 = *a4;
    *a4 = (void *)v12;
  }
  uint64_t v14 = brc_bread_crumbs();
  char v15 = brc_default_log();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT)) {
    br_create_tables_initial_cold_1();
  }

  uint64_t v11 = 0;
LABEL_23:

  return v11;
}

uint64_t br_update_tables_4_001(void *a1, void *a2, char a3, void **a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = v8;
  if ((a3 & 1) != 0
    || ([v8 execute:@"ALTER TABLE client_uploads ADD COLUMN upload_error blob"] & 1) != 0)
  {
    uint64_t v10 = 1;
  }
  else
  {
    if (a4)
    {
      uint64_t v11 = [v9 lastError];
      uint64_t v12 = *a4;
      *a4 = (void *)v11;
    }
    unint64_t v13 = brc_bread_crumbs();
    uint64_t v14 = brc_default_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
      br_create_tables_initial_cold_1();
    }

    uint64_t v10 = 0;
  }

  return v10;
}

uint64_t br_update_tables_4_002()
{
  return 1;
}

uint64_t br_update_tables_4_003()
{
  return 1;
}

uint64_t br_update_tables_4_004(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  if (a3)
  {
    id v3 = [MEMORY[0x263F32588] containersRepositoryURL];
    __int16 v4 = [MEMORY[0x263F08850] defaultManager];
    id v10 = 0;
    char v5 = [v4 removeItemAtURL:v3 error:&v10];
    id v6 = v10;

    if ((v5 & 1) == 0)
    {
      if ((objc_msgSend(v6, "br_isPOSIXErrorCode:", 2) & 1) != 0
        || objc_msgSend(v6, "br_isCocoaErrorCode:", 4))
      {
        id v7 = brc_bread_crumbs();
        id v8 = brc_default_log();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
          br_update_tables_4_004_cold_1();
        }
      }
      else
      {
        id v7 = brc_bread_crumbs();
        id v8 = brc_default_log();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412802;
          uint64_t v12 = v3;
          __int16 v13 = 2112;
          id v14 = v6;
          __int16 v15 = 2112;
          id v16 = v7;
          _os_log_impl(&dword_23FA42000, v8, OS_LOG_TYPE_DEFAULT, "[WARNING] can't suppress %@: %@%@", buf, 0x20u);
        }
      }
    }
  }
  return 1;
}

uint64_t br_update_tables_4_005(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"CREATE INDEX \"client_downloads/low_disk_index\" ON client_downloads (throttle_state, throttle_id, download_kind)  WHERE throttle_state = 43"])
  {
    uint64_t v8 = [v7 execute:@"DROP INDEX \"client_document_access/access_item\""];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_4_006(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"CREATE INDEX \"server_items/version_size\" ON server_items (version_size)"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_4_007(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE TABLE spotlight_ranks(doc_id integer not null, notif_rank integer not null, PRIMARY KEY (doc_id, notif_rank ASC))"];
  }
}

uint64_t br_update_tables_4_008(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE backup_detector ADD COLUMN uuid blob"])
  {
    id v9 = objc_opt_new();
    id v10 = [v9 UUIDString];
    uint64_t v8 = [v7 execute:@"UPDATE backup_detector SET uuid = %@", v10];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_4_009(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"CREATE INDEX \"client_pkg_items/item_doc_id\" ON client_pkg_items (item_doc_id, zone_rowid)"])
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/doc_sync_state\" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1  AND item_localsyncupstate IN (2, 3, 4)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_4_010(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX \"client_items/item_notifs_rank\""])
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/item_notifs_rank\" ON client_items (item_notifs_rank, zone_rowid)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_4_011(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX \"client_items/spotlight_index\" ON client_items (item_type, item_state, item_doc_id, item_notifs_rank) WHERE item_type in (1, 2)"];
  }
}

uint64_t br_update_tables_4_012(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX \"spotlight_ranks/notif_rank\" ON spotlight_ranks (notif_rank)"];
  }
}

uint64_t br_update_tables_4_013(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN item_scope integer NOT NULL DEFAULT 0"])
  {
    uint64_t v8 = 0;
    if (br_fixup_tables_4_013(v5, v7, 0)) {
      uint64_t v8 = [v7 execute:@"CREATE INDEX item_scope_index ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)"];
    }
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_4_014(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX pending_download_docs ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL"];
  }
}

uint64_t br_update_tables_4_015()
{
  return 1;
}

uint64_t br_update_tables_4_016(uint64_t a1, void *a2, int a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    if ([v4 execute:@"ALTER TABLE server_items ADD COLUMN item_depth integer NOT NULL DEFAULT 0"])uint64_t v6 = objc_msgSend(v5, "execute:", @"CREATE INDEX \"server_items/item_rank_depth\" ON server_items (zone_rowid, item_rank, item_depth)"); {
    else
    }
      uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t br_update_tables_4_017(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN item_min_supported_os_rowid integer DEFAULT NULL"])
  {
    uint64_t v8 = [v7 execute:@"CREATE TABLE os_names(name text unique)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_4_018()
{
  return 1;
}

uint64_t br_update_tables_4_019()
{
  return 1;
}

uint64_t br_update_tables_4_020(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  id v5 = +[BRCUserDefaults defaultsForMangledID:0];
  uint64_t v6 = objc_msgSend(v4, "execute:", @"UPDATE client_document_access SET evictable = (SELECT version_mtime FROM client_items as ci WHERE ci.rowid = item_rowid) WHERE access_time = 0 AND evictable = 0 AND (SELECT version_size FROM client_items as ci WHERE ci.rowid = item_rowid) > %lld AND (SELECT item_type FROM client_items as ci WHERE ci.rowid = item_rowid) = 1", objc_msgSend(v5, "minAutomaticallyEvictableFilesize"));

  return v6;
}

uint64_t br_update_tables_5_000(void *a1, void *a2, uint64_t a3, void **a4)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  id v9 = v8;
  if ((a3 & 1) == 0)
  {
    if ([v8 execute:@" CREATE TABLE app_libraries(rowid integer PRIMARY KEY, app_library_plist blob)"])
    {
      uint64_t v46 = a4;
      id v47 = v7;
      unsigned int v45 = a3;
      uint64_t v11 = (void *)[v9 fetch:@"SELECT rowid, zone_plist FROM client_zones"];
      if ([v11 next])
      {
        while (1)
        {
          uint64_t v12 = _BRCClassesForContainerState();
          __int16 v13 = [v11 unarchivedObjectOfClasses:v12 atIndex:1];

          if (!v13)
          {
            uint64_t v31 = brc_bread_crumbs();
            uint64_t v32 = brc_default_log();
            if (os_log_type_enabled(v32, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)buf = 138412290;
              uint64_t v49 = v31;
              _os_log_fault_impl(&dword_23FA42000, v32, OS_LOG_TYPE_FAULT, "[CRIT] Assertion failed: plist != nil%@", buf, 0xCu);
            }
          }
          id v14 = [MEMORY[0x263EFF9A0] dictionary];
          __int16 v15 = [MEMORY[0x263EFF9A0] dictionary];
          id v16 = [v13 objectForKeyedSubscript:@"state"];
          int v17 = [v16 unsignedIntegerValue];

          char v18 = [NSNumber numberWithUnsignedInteger:*(void *)&v17 & 0xC0804];
          [v14 setObject:v18 forKeyedSubscript:@"state"];

          uint64_t v19 = [v13 objectForKeyedSubscript:@"fileID"];
          [v14 setObject:v19 forKeyedSubscript:@"fileID"];

          uint64_t v20 = [v13 objectForKeyedSubscript:@"generationID"];
          [v14 setObject:v20 forKeyedSubscript:@"generationID"];

          unint64_t v21 = [v13 objectForKeyedSubscript:@"maxLostStamp"];
          [v14 setObject:v21 forKeyedSubscript:@"maxLostStamp"];

          uint64_t v22 = [v13 objectForKeyedSubscript:@"deepScanStamp"];
          [v14 setObject:v22 forKeyedSubscript:@"deepScanStamp"];

          uint64_t v23 = [NSNumber numberWithUnsignedInteger:*(void *)&v17 & 0x131710];
          [v15 setObject:v23 forKeyedSubscript:@"state"];

          uint64_t v24 = [v13 objectForKeyedSubscript:@"requestID"];
          [v15 setObject:v24 forKeyedSubscript:@"requestID"];

          uint64_t v25 = [v13 objectForKeyedSubscript:@"lastApplyRank"];
          [v15 setObject:v25 forKeyedSubscript:@"lastApplyRank"];

          uint64_t v26 = [v13 objectForKeyedSubscript:@"appliedTombstoneRanks"];
          [v15 setObject:v26 forKeyedSubscript:@"appliedTombstoneRanks"];

          long long v27 = [v13 objectForKeyedSubscript:@"syncUpThrottle"];
          [v15 setObject:v27 forKeyedSubscript:@"syncUpThrottle"];

          uint64_t v28 = [v13 objectForKeyedSubscript:@"syncUpBudget"];
          [v15 setObject:v28 forKeyedSubscript:@"syncUpBudget"];

          char v29 = [v13 objectForKeyedSubscript:@"syncDownThrottle"];
          [v15 setObject:v29 forKeyedSubscript:@"syncDownThrottle"];

          int v30 = [v11 numberAtIndex:0];
          if (([v9 execute:@"UPDATE client_zones SET zone_plist = %@ WHERE rowid = %@", v15, v30] & 1) == 0)break; {
          if (([v9 execute:@"INSERT INTO app_libraries (rowid, app_library_plist) VALUES (%@, %@)", v30, v14] & 1) == 0)
          }
          {
            if (v46)
            {
              uint64_t v41 = [v9 lastError];
              id v42 = *v46;
              void *v46 = (void *)v41;
            }
            uint64_t v39 = brc_bread_crumbs();
            uint64_t v40 = brc_default_log();
            if (!os_log_type_enabled(v40, OS_LOG_TYPE_FAULT)) {
              goto LABEL_50;
            }
LABEL_53:
            uint64_t v44 = [v9 lastError];
            *(_DWORD *)buf = 138412546;
            uint64_t v49 = v44;
            __int16 v50 = 2112;
            uint64_t v51 = v39;
            _os_log_fault_impl(&dword_23FA42000, v40, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: migration should work: %@%@", buf, 0x16u);

            goto LABEL_50;
          }

          if (![v11 next]) {
            goto LABEL_20;
          }
        }
        if (v46)
        {
          uint64_t v37 = [v9 lastError];
          char v38 = *v46;
          void *v46 = (void *)v37;
        }
        uint64_t v39 = brc_bread_crumbs();
        uint64_t v40 = brc_default_log();
        if (os_log_type_enabled(v40, OS_LOG_TYPE_FAULT)) {
          goto LABEL_53;
        }
LABEL_50:
      }
      else
      {
LABEL_20:
        if ([v9 execute:@"ALTER TABLE client_items ADD COLUMN app_library_rowid"]
          && [v9 execute:@"UPDATE client_items SET app_library_rowid = zone_rowid"]
          && [v9 execute:@"CREATE UNIQUE INDEX \"client_items/item_doc_id\" ON client_items (item_doc_id)"]&& objc_msgSend(v9, "execute:", @"CREATE UNIQUE INDEX \"client_items/item_file_id_unique\" ON client_items (item_file_id, item_state)WHERE item_state != -3")&& objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_items/item_id\" ON client_items(item_id)")&& objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_items/item_file_id\" ON client_items (item_file_id)")&& objc_msgSend(v9, "execute:", @"DROP INDEX \"client_items/item_parent_id__item_state\"")&& objc_msgSend(v9, "execute:",
                             @"CREATE INDEX \"client_items/item_parent_id__item_state\" ON client_items (item_parent_id, item_state)")
          && [v9 execute:@"DROP INDEX \"client_items/item_path\""]
          && [v9 execute:@"CREATE INDEX \"client_items/item_path\" ON client_items (item_parent_id, item_filename)"]&& objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_items/item_parent_id__item_localname\" ON client_items (item_parent_id, item_localname)")&& objc_msgSend(v9, "execute:", @" CREATE TABLE client_pkg_items_tmp(item_doc_id integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))")&& objc_msgSend(v9, "execute:", @"INSERT INTO client_pkg_items_tmp (item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM client_pkg_items")&& objc_msgSend(v9, "execute:", @"DROP TABLE client_pkg_items")&& objc_msgSend(v9, "execute:",
                             @"ALTER TABLE client_pkg_items_tmp RENAME TO client_pkg_items")
          && [v9 execute:@"CREATE INDEX \"client_pkg_items/size\" ON client_pkg_items (item_doc_id, size)"]&& objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_pkg_items/is_dirty\" ON client_pkg_items (item_doc_id, is_dirty)")&& objc_msgSend(v9, "execute:", @"DROP INDEX item_scope_index")&& objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_items/item_scope_index\" ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)")&& objc_msgSend(v9, "execute:", @"DROP INDEX pending_download_docs")&& (objc_msgSend(v9, "execute:", @"CREATE INDEX \"client_items/pending_download_docs\" ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL") & 1) != 0)
        {
          uint64_t v10 = [v9 execute:@"DROP INDEX \"client_items/doc_sync_state\""];

          id v7 = v47;
          a3 = v45;
          if (!v10) {
            goto LABEL_52;
          }
          goto LABEL_3;
        }
      }

      uint64_t v10 = 0;
      id v7 = v47;
      goto LABEL_52;
    }
    if (a4)
    {
      uint64_t v33 = [v9 lastError];
      char v34 = *a4;
      *a4 = (void *)v33;
    }
    uint64_t v35 = brc_bread_crumbs();
    id v36 = brc_default_log();
    if (os_log_type_enabled(v36, OS_LOG_TYPE_FAULT)) {
      br_create_tables_initial_cold_1();
    }

LABEL_19:
    uint64_t v10 = 0;
    goto LABEL_52;
  }
  if (([v8 execute:@"CREATE INDEX \"server_items/item_id\" ON server_items(item_id)"] & 1) == 0) {
    goto LABEL_19;
  }
LABEL_3:
  uint64_t v10 = +[BRCItemID migrateItemIDsToVersion5WithDB:v9 serverTruth:a3];
LABEL_52:

  return v10;
}

uint64_t br_update_tables_5_001(uint64_t a1, void *a2, int a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    if ([v4 execute:@"CREATE TABLE users(user_key integer primary key, user_name text not null, user_plist blob, UNIQUE (user_name))"]&& objc_msgSend(v5, "execute:", @"INSERT INTO users(user_key, user_name, user_plist) SELECT owner_key, owner_name, owner_plist FROM server_owners"))
    {
      uint64_t v6 = [v5 execute:@"DROP TABLE server_owners"];
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t br_update_tables_5_002(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"ALTER TABLE client_downloads ADD COLUMN unit_count_completed INTEGER DEFAULT 0"];
  }
}

uint64_t br_update_tables_5_003(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_document_access RENAME TO client_document_access_tmp"]&& objc_msgSend(v7, "execute:", @"CREATE TABLE client_document_access(item_rowid integer primary key, evictable integer not null , access_time integer not null default 0)")&& objc_msgSend(v7, "execute:", @"INSERT INTO client_document_access(item_rowid, evictable, access_time) SELECT item_rowid, evictable, access_time FROM client_document_access_tmp")&& objc_msgSend(v7, "execute:", @"DROP TABLE client_document_access_tmp"))
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_document_access/evictable\" ON client_document_access (evictable)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_5_004(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (!a3)
  {
    if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL"])
    {
      uint64_t v8 = @"ALTER TABLE client_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL";
      goto LABEL_6;
    }
LABEL_7:
    uint64_t v9 = 0;
    goto LABEL_8;
  }
  if (([v6 execute:@"ALTER TABLE server_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL"] & 1) == 0)goto LABEL_7; {
  uint64_t v8 = @"ALTER TABLE server_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL";
  }
LABEL_6:
  uint64_t v9 = [v7 execute:v8];
LABEL_8:

  return v9;
}

uint64_t br_update_tables_5_005(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (!a3)
  {
    if ([v6 execute:@"ALTER TABLE client_uploads ADD COLUMN upload_priority integer DEFAULT 0"]&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_uploads ADD COLUMN upload_request_stamp integer DEFAULT 0")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_pkg_items/asset_rank\" ON client_pkg_items (item_doc_id, asset_rank)")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/lost_scan_index\"")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/zombie_scan_index\"")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/lost_scan_index\" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -1")&& objc_msgSend(v7,
                         "execute:",
                         @"CREATE INDEX \"client_items/zombie_scan_index\" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -3"))
    {
      uint64_t v8 = @"CREATE INDEX \"client_items/doc_sync_state\" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1";
      goto LABEL_4;
    }
LABEL_13:
    uint64_t v9 = 0;
    goto LABEL_14;
  }
  if (([v6 execute:@"DROP INDEX \"server_items/path_index\""] & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v8 = @"CREATE INDEX \"server_items/path_index\" ON server_items (item_parent_id, item_filename)";
LABEL_4:
  uint64_t v9 = [v7 execute:v8];
LABEL_14:

  return v9;
}

uint64_t br_update_tables_5_006(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN item_thumb_greedy integer default 0"]&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_items ADD COLUMN item_thumb_live_signature blob default null"))
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_document_access/evictable/item_rowid\" ON client_document_access (item_rowid)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_5_007(void *a1, void *a2, char a3)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = [v6 execute:@"CREATE TABLE rowid_reservations(rowid integer PRIMARY KEY, container_id text not null, owner text, UNIQUE (container_id, owner))"];
    uint64_t v9 = (void *)[v7 fetch:@"SELECT zone_name, zone_owner, rowid FROM server_zones WHERE zone_plist IS NULL"];
    if ([v9 next])
    {
      do
      {
        uint64_t v10 = [v9 stringAtIndex:0];
        uint64_t v11 = [v9 stringAtIndex:1];
        uint64_t v12 = [v9 numberAtIndex:2];
        [v7 execute:@"INSERT INTO rowid_reservations  (container_id, owner, rowid)  VALUES (%@, %@, %@)", v10, v11, v12];
      }
      while (([v9 next] & 1) != 0);
    }
    [v7 execute:@"DELETE FROM server_zones WHERE zone_plist IS NULL"];
    long long v37 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    uint64_t v32 = v5;
    __int16 v13 = [v5 _privateServerZonesEnumerator:v7];
    uint64_t v14 = [v13 countByEnumeratingWithState:&v37 objects:v42 count:16];
    uint64_t v31 = v9;
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)v38;
      do
      {
        for (uint64_t i = 0; i != v15; ++i)
        {
          if (*(void *)v38 != v16) {
            objc_enumerationMutation(v13);
          }
          if (v8)
          {
            char v18 = *(void **)(*((void *)&v37 + 1) + 8 * i);
            uint64_t v19 = [v18 dbRowID];
            uint64_t v20 = [v18 zoneName];
            uint64_t v8 = [v7 execute:@"INSERT INTO rowid_reservations  (rowid, container_id, owner) VALUES (%@, %@, %@)", v19, v20, 0];
          }
          else
          {
            uint64_t v8 = 0;
          }
        }
        uint64_t v15 = [v13 countByEnumeratingWithState:&v37 objects:v42 count:16];
      }
      while (v15);
    }

    long long v35 = 0u;
    long long v36 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    unint64_t v21 = [v32 _sharedServerZonesEnumerator:v7];
    uint64_t v22 = [v21 countByEnumeratingWithState:&v33 objects:v41 count:16];
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = *(void *)v34;
      do
      {
        for (uint64_t j = 0; j != v23; ++j)
        {
          if (*(void *)v34 != v24) {
            objc_enumerationMutation(v21);
          }
          if (v8)
          {
            uint64_t v26 = *(void **)(*((void *)&v33 + 1) + 8 * j);
            long long v27 = [v26 dbRowID];
            uint64_t v28 = [v26 zoneName];
            char v29 = [v26 ownerName];
            uint64_t v8 = [v7 execute:@"INSERT INTO rowid_reservations  (rowid, container_id, owner) VALUES (%@, %@, %@)", v27, v28, v29];
          }
          else
          {
            uint64_t v8 = 0;
          }
        }
        uint64_t v23 = [v21 countByEnumeratingWithState:&v33 objects:v41 count:16];
      }
      while (v23);
    }

    id v5 = v32;
  }
  else if ([v6 execute:@"ALTER TABLE app_libraries ADD COLUMN app_library_name text default null"]&& objc_msgSend(v7, "execute:", @"ALTER TABLE app_libraries ADD COLUMN app_library_owner text default null")&& objc_msgSend(v7, "execute:", @"ALTER TABLE app_libraries ADD COLUMN zone_rowid integer default 0"))
  {
    uint64_t v8 = [v7 execute:@"UPDATE app_libraries SET app_library_name = (SELECT zone_name FROM client_zones WHERE app_libraries.rowid = client_zones.rowid), app_library_owner = (SELECT zone_owner FROM client_zones WHERE app_libraries.rowid = client_zones.rowid), zone_rowid = rowid"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_5_008(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX \"client_items/item_parent_id__item_state\""])
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/item_parent_id__item_state\" ON client_items (app_library_rowid, item_parent_id, item_state)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_5_009(uint64_t a1, void *a2, int a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    if ([v4 execute:@"ALTER TABLE rowid_reservations RENAME TO rowid_reservations_old"]&& objc_msgSend(v5, "execute:", @"CREATE TABLE rowid_reservations(rowid integer PRIMARY KEY, container_id text not null, owner text, UNIQUE (container_id, owner))")&& objc_msgSend(v5, "execute:", @"INSERT INTO rowid_reservations (rowid, container_id, owner) SELECT rowid, container_id, owner FROM rowid_reservations_old"))
    {
      uint64_t v6 = [v5 execute:@"DROP TABLE rowid_reservations_old"];
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t br_update_tables_5_010(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    id v3 = @"CREATE UNIQUE INDEX \"server_zones/zone_name__zone_owner\" ON server_zones (zone_name, zone_owner)";
  }
  else {
    id v3 = @"CREATE UNIQUE INDEX \"client_zones/zone_name__zone_owner\" ON client_zones (zone_name, zone_owner)";
  }
  return [a2 execute:v3];
}

uint64_t br_update_tables_5_011(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (!a3)
  {
    uint64_t v11 = (void *)[v6 numberWithSQL:@"SELECT COUNT(*) FROM app_libraries GROUP BY app_library_name, app_library_owner"];
    if ((unint64_t)[v11 unsignedLongLongValue] >= 2)
    {
      __int16 v13 = brc_bread_crumbs();
      uint64_t v14 = brc_default_log();
      if (os_log_type_enabled(v14, (os_log_type_t)0x90u)) {
        br_update_tables_5_011_cold_2();
      }
    }
    else
    {

      if ([v7 execute:@"ALTER TABLE app_libraries RENAME TO app_libraries_old"]
        && [v7 execute:@"CREATE TABLE app_libraries(rowid integer PRIMARY KEY, app_library_plist blob, app_library_name text default null, app_library_owner text default null, zone_rowid integer default 0, UNIQUE (app_library_name, app_library_owner))"]&& objc_msgSend(v7, "execute:", @"INSERT INTO app_libraries        (rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid) SELECT rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid FROM app_libraries_old"))
      {
        uint64_t v12 = [v7 execute:@"DROP TABLE app_libraries_old"];
        uint64_t v8 = 0;
        goto LABEL_17;
      }
    }
    uint64_t v8 = 0;
LABEL_16:
    uint64_t v12 = 0;
    goto LABEL_17;
  }
  uint64_t v8 = (void *)[v6 fetch:@"SELECT rowid FROM rowid_reservations WHERE owner = %@", *MEMORY[0x263EFD488]];
  if ([v8 next])
  {
    uint64_t v9 = brc_bread_crumbs();
    uint64_t v10 = brc_default_log();
    if (os_log_type_enabled(v10, (os_log_type_t)0x90u)) {
      br_update_tables_5_011_cold_1();
    }

    goto LABEL_16;
  }
  uint64_t v12 = 1;
LABEL_17:

  return v12;
}

uint64_t br_update_tables_5_012(uint64_t a1, void *a2, int a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    if ([v4 execute:@"CREATE TABLE aggregates(key TEXT NOT NULL, value INTEGER NOT NULL DEFAULT 0)"])uint64_t v6 = objc_msgSend(v5, "execute:", @"INSERT INTO aggregates (key, value) SELECT 'version_size_sum', COALESCE(SUM(version_size), 0) FROM server_items"); {
    else
    }
      uint64_t v6 = 0;
    [v5 execute:@"CREATE TRIGGER insert_version_sum_size AFTER INSERT ON server_items  BEGIN  UPDATE aggregates SET value = (value + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END"];
    [v5 execute:@"CREATE TRIGGER update_version_sum_size UPDATE OF version_size ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0) + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END"];
    [v5 execute:@"CREATE TRIGGER delete_version_sum_size BEFORE DELETE ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0)) WHERE key = 'version_size_sum';   END"];
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t br_update_tables_5_013(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = [v4 execute:@"CREATE TABLE client_pkg_sizes (item_doc_id integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)"];
  int v6 = v5 & [v4 execute:@"INSERT INTO client_pkg_sizes SELECT item_doc_id, COALESCE(SUM(size), 0), COALESCE(MAX(size), 0) FROM client_pkg_items GROUP BY item_doc_id"];
  int v7 = [v4 execute:@"CREATE TRIGGER \"client_pkg_items/increase_pkg_size\" AFTER INSERT ON client_pkg_items BEGIN INSERT OR IGNORE INTO client_pkg_sizes VALUES (new.item_doc_id, 0, 0); UPDATE client_pkg_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END"];
  int v8 = v6 & v7 & [v4 execute:@"CREATE TRIGGER \"client_pkg_items/update_pkg_size\" UPDATE OF size ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END"];
  int v9 = [v4 execute:@"CREATE TRIGGER \"client_pkg_items/reduce_pkg_size\"  BEFORE DELETE ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_doc_id = old.item_doc_id; END"];
  unsigned int v10 = [v4 execute:@"DROP INDEX \"client_pkg_items/size\""];

  return v8 & v9 & v10;
}

uint64_t br_update_tables_5_014(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, share_metadata blob non null)"];
  }
}

uint64_t br_update_tables_5_015(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = [v4 execute:@"ALTER TABLE app_libraries ADD COLUMN auto_client_item_count INTEGER DEFAULT 0"];
  int v6 = v5 & [v4 execute:@"ALTER TABLE app_libraries ADD COLUMN auto_document_count INTEGER DEFAULT 0"];
  int v7 = [v4 execute:@"ALTER TABLE app_libraries ADD COLUMN auto_document_with_local_changes_count INTEGER DEFAULT 0"];
  int v8 = v6 & v7 & [v4 execute:@"ALTER TABLE app_libraries ADD COLUMN auto_aggregate_size INTEGER DEFAULT 0"];
  int v9 = [v4 execute:@"CREATE TRIGGER \"client_items/insert_item\" AFTER INSERT ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END"];
  int v10 = v9 & [v4 execute:@"CREATE TRIGGER \"client_items/delete_item\" BEFORE delete ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2; END"];
  int v11 = v8 & v10 & [v4 execute:@"CREATE TRIGGER \"client_items/update_size\" UPDATE OF version_size, item_type, item_state ON client_items BEGIN  UPDATE app_libraries SET    auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size,0)  * (old.item_type = 1 AND old.item_state != 1) + COALESCE(new.version_size,0) * (new.item_type = 1 AND new.item_state != 1), auto_document_count = auto_document_count - (old.item_type = 1 AND old.item_state != 1) + (new.item_type = 1 AND new.item_state != 1)      WHERE rowid = new.app_library_rowid; END"];
  unsigned int v12 = [v4 execute:@"CREATE TRIGGER \"client_items/update_changes_count\" UPDATE OF item_type,item_localsyncupstate ON client_items BEGIN  UPDATE app_libraries set auto_document_with_local_changes_count = auto_document_with_local_changes_count - (old.item_type = 1 AND old.item_localsyncupstate >= 2) + (new.item_type = 1 AND new.item_localsyncupstate >= 2) where rowid = new.app_library_rowid; END"];

  return v11 & v12;
}

uint64_t br_update_tables_5_016(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"ALTER TABLE server_items ADD COLUMN pcs_state INTEGER NOT NULL DEFAULT 0"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_6_000()
{
  return 1;
}

uint64_t br_update_tables_6_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP TABLE share_metadata_cache"])
  {
    uint64_t v8 = [v7 execute:@"CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, record_id blob non null)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_6_002()
{
  return 1;
}

uint64_t br_update_tables_6_003()
{
  return 1;
}

uint64_t br_update_tables_6_004(uint64_t a1, void *a2, char a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    uint64_t v6 = 1;
  }
  else
  {
    int v7 = [v4 execute:@"ALTER TABLE \"client_uploads\" ADD COLUMN app_library_rowid INTEGER"];
    int v8 = [v5 execute:@"UPDATE \"client_uploads\" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_uploads.throttle_id) "];
    int v9 = [v5 execute:@"ALTER TABLE \"client_downloads\" ADD COLUMN app_library_rowid INTEGER "];
    unsigned int v10 = [v5 execute:@"UPDATE \"client_downloads\" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_downloads.throttle_id) "];
    int v11 = (void *)[v5 numberWithSQL:@"SELECT 1 FROM client_uploads WHERE app_library_rowid == NULL LIMIT 1"];
    if ([v11 BOOLValue])
    {
      unsigned int v12 = brc_bread_crumbs();
      __int16 v13 = brc_default_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT)) {
        br_update_tables_6_004_cold_2();
      }

      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v6 = v7 & v8 & v9 & v10;
    }
    uint64_t v14 = (void *)[v5 numberWithSQL:@"SELECT 1 FROM client_downloads WHERE app_library_rowid == NULL LIMIT 1"];

    if ([v14 BOOLValue])
    {
      uint64_t v15 = brc_bread_crumbs();
      uint64_t v16 = brc_default_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT)) {
        br_update_tables_6_004_cold_1();
      }

      uint64_t v6 = 0;
    }
  }
  return v6;
}

uint64_t br_update_tables_6_005(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"DROP TABLE IF EXISTS share_metadata_cache"];
  }
}

uint64_t br_update_tables_6_006()
{
  return 1;
}

uint64_t br_update_tables_6_007()
{
  return 1;
}

uint64_t br_update_tables_6_008(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"CREATE INDEX \"client_items/item_parent_id_rowid\" ON client_items(zone_rowid, item_parent_id, rowid)"])
  {
    uint64_t v8 = [v7 execute:@"CREATE TABLE mark_children_lost_progress(zone_rowid INTEGER NOT NULL, item_parent_id BLOB NOT NULL, last_updated_row_id INTEGER NOT NULL, UNIQUE(zone_rowid, item_parent_id))"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_6_009(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"ALTER TABLE client_pkg_items ADD COLUMN xattrs BLOB"];
  }
}

uint64_t br_update_tables_6_010(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = [v4 execute:@"DROP INDEX IF EXISTS \"client_items/lost_scan_index\""];
  int v6 = v5 & [v4 execute:@"DROP INDEX IF EXISTS \"client_items/zombie_scan_index\""];
  int v7 = [v4 execute:@"DROP INDEX IF EXISTS \"client_items/lostzombie_scan_index\""];
  unsigned int v8 = [v4 execute:@"CREATE INDEX \"client_items/lostzombie_scan_index\" ON client_items (item_processing_stamp) WHERE item_state IN (-1, -3)"];

  return v6 & v7 & v8;
}

uint64_t br_update_tables_6_011(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"ALTER TABLE server_pending_fetches ADD COLUMN deleted_record_type INTEGER NOT NULL DEFAULT 0"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_6_012()
{
  return 1;
}

uint64_t br_update_tables_6_013(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3) {
    unsigned int v8 = @"SELECT 1 FROM server_items WHERE zone_rowid NOT IN (SELECT rowid from server_zones)";
  }
  else {
    unsigned int v8 = @"SELECT 1 FROM client_items WHERE zone_rowid NOT IN (SELECT rowid from client_zones)";
  }
  int v9 = (void *)[v6 numberWithSQL:v8];
  if ([v9 BOOLValue])
  {
    unsigned int v10 = brc_bread_crumbs();
    int v11 = brc_default_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT)) {
      br_update_tables_6_013_cold_1();
    }
  }
  uint64_t v12 = [v9 BOOLValue] ^ 1;

  return v12;
}

uint64_t br_update_tables_6_014()
{
  return 1;
}

uint64_t br_update_tables_6_015()
{
  return 1;
}

uint64_t br_update_tables_6_016(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 execute:@"DROP TABLE IF EXISTS sqlite_stat1"]
    && [v2 execute:@"DROP TABLE IF EXISTS sqlite_stat2"]
    && [v2 execute:@"DROP TABLE IF EXISTS sqlite_stat3"])
  {
    uint64_t v3 = [v2 execute:@"DROP TABLE IF EXISTS sqlite_stat4"];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

uint64_t br_update_tables_6_017(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"ALTER TABLE mark_children_lost_progress ADD COLUMN item_parent_file_id integer"];
  }
}

BOOL br_update_tables_7_000(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v16 = 0;
  int v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 0;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 3221225472;
  v15[2] = __br_update_tables_7_000_block_invoke;
  v15[3] = &unk_2650825B8;
  v15[4] = &v16;
  int v7 = (void *)MEMORY[0x2455D9A50](v15);
  uint64_t v8 = MEMORY[0x2455D9A50]();
  int v9 = (void *)v8;
  uint64_t v10 = *MEMORY[0x263EFD488];
  if (!a3)
  {
    int v13 = [v6 execute:@"UPDATE client_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM client_zones WHERE client_zones.zone_owner != %@)", v8, v10];

    if (!v13) {
      goto LABEL_3;
    }
LABEL_5:
    BOOL v12 = *((unsigned char *)v17 + 24) == 0;
    goto LABEL_6;
  }
  char v11 = [v6 execute:@"UPDATE server_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM server_zones WHERE zone_owner != %@)", v8, v10];

  if (v11) {
    goto LABEL_5;
  }
LABEL_3:
  BOOL v12 = 0;
LABEL_6:

  _Block_object_dispose(&v16, 8);
  return v12;
}

void sub_23FB410E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t br_update_tables_7_001()
{
  return 1;
}

uint64_t br_update_tables_7_002()
{
  return 1;
}

uint64_t br_update_tables_7_003(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_document_access ADD COLUMN modify_access_time integer NOT NULL DEFAULT 0"]&& objc_msgSend(v7, "execute:", @"UPDATE client_document_access SET modify_access_time = MAX(access_time, IFNULL((SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid), 0))")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_document_access/modify_access_item\" ON client_document_access(modify_access_time)"))
  {
    uint64_t v8 = [v7 execute:@"INSERT OR IGNORE INTO client_document_access (item_rowid, evictable, access_time, modify_access_time) SELECT rowid, 0, 0, version_mtime FROM client_items WHERE item_type IN (1, 2, 8)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

BOOL br_update_tables_8_000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return +[BRCItemID migrateItemIDsToVersion8WithDB:a2 serverTruth:a3];
}

uint64_t br_update_tables_8_001(uint64_t a1, void *a2, int a3)
{
  if (!a3) {
    return 1;
  }
  id v3 = a2;
  int v4 = [v3 execute:@"DROP INDEX IF EXISTS \"server_pending_fetches/record_index\""];
  int v5 = v4 & [v3 execute:@"CREATE INDEX \"server_pending_fetches/record_is_null\" ON server_pending_fetches (zone_rowid) WHERE record IS NULL"];
  unsigned int v6 = [v3 execute:@"CREATE INDEX \"server_pending_fetches/record_is_not_null\" ON server_pending_fetches (zone_rowid) WHERE (record >= '')"];

  return v5 & v6;
}

uint64_t br_update_tables_8_002(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_document_access ADD COLUMN indexable integer NOT NULL DEFAULT 0"]&& objc_msgSend(v7, "execute:", @"UPDATE client_document_access SET indexable = 1 WHERE (SELECT item_scope FROM client_items AS ci WHERE ci.rowid = item_rowvoid (**v9)(id, id) = 2"))
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_document_access/indexable\" ON client_document_access(indexable) WHERE indexable != 0"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_9_000(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_document_access RENAME TO client_document_access_tmp"]&& objc_msgSend(v7, "execute:", @"CREATE TABLE client_document_access( item_rowid integer primary key, access_time integer not null default 0, modify_access_time integer NOT NULL DEFAULT 0, properties integer NOT NULL DEFAULT 0)")&& objc_msgSend(v7, "execute:", @"INSERT INTO client_document_access(item_rowid, access_time, modify_access_time, properties) SELECT item_rowid, access_time, modify_access_time, ((case when indexable != 0 then 0x2 else 0 end) | (case when evictable != 0 then 0x1 else 0 end)) FROM client_document_access_tmp")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_document_access/evictable\"")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_document_access/evictable/item_rowid\"")&& objc_msgSend(v7, "execute:", {
                            @"DROP INDEX \"client_document_access/modify_access_item\"")
  }
         && [v7 execute:@"DROP INDEX \"client_document_access/indexable\""]
         && [v7 execute:@"DROP TABLE client_document_access_tmp"]
         && [v7 execute:@"CREATE INDEX \"client_document_access/evictable\" ON client_document_access (properties) WHERE ((properties & 0x1) != 0)"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_document_access/evictable/item_rowid\" ON client_document_access (item_rowid);")
         && [v7 execute:@"CREATE INDEX \"client_document_access/modify_access_item\" ON client_document_access(modify_access_time);"])
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_document_access/indexable\" ON client_document_access(properties) WHERE ((properties & 0x2) != 0)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_9_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX \"client_items/doc_sync_state\""])
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/doc_sync_state\" ON client_items (zone_rowid, item_localsyncupstate) WHERE item_type IN (1, 6)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_9_002(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX \"client_document_access/access_item\" ON client_document_access(access_time);"];
  }
}

uint64_t br_update_tables_9_003()
{
  return 1;
}

uint64_t br_update_tables_9_004(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = [v4 execute:@"CREATE TRIGGER IF NOT EXISTS \"client_items/update_app_library\" AFTER UPDATE OF app_library_rowid ON client_items WHEN new.app_library_rowid <> old.app_library_rowid BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2;  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END"];
  unsigned int v6 = [v4 execute:@"UPDATE app_libraries SET auto_client_item_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type != 4 AND item_type != 3), auto_document_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_state != 1), auto_aggregate_size=(SELECT COALESCE(SUM(version_size), 0) FROM client_items WHERE app_libraries.rowid = app_library_rowid AND item_type = 1 AND item_state != 1), auto_document_with_local_changes_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_localsyncupstate >= 2)"];

  return v5 & v6;
}

uint64_t br_update_tables_10_000(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
LABEL_8:
    uint64_t v12 = 1;
    goto LABEL_9;
  }
  int v8 = [v6 execute:@"CREATE TABLE client_sync_up(throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, in_flight_diffs integer, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, UNIQUE(throttle_id, zone_rowid))"];
  int v9 = [v7 execute:@"ALTER TABLE client_items  ADD COLUMN item_parent_zone_rowid integer"];
  int v10 = [v7 execute:@"INSERT OR IGNORE INTO client_sync_up( throttle_id, zone_rowid, throttle_state, in_flight_diffs) SELECT  rowid, zone_rowid, 1, item_in_flight_diffs FROM client_items WHERE  item_localsyncupstate = 4"];
  int v11 = [v7 execute:@"UPDATE client_items SET item_parent_zone_rowid = zone_rowid"];
  uint64_t v12 = 0;
  if (v8 && v9 && v10 && v11)
  {
    if (v5) {
      +[BRCDaemonFPFS isDaemonRunning];
    }
    goto LABEL_8;
  }
LABEL_9:

  return v12;
}

uint64_t br_update_tables_11_000(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (!a3)
  {
    if ([v6 execute:@"ALTER TABLE app_libraries RENAME TO app_libraries_old"]
      && [v7 execute:@"CREATE TABLE app_libraries(rowid integer PRIMARY KEY, app_library_plist blob, app_library_name text unique default null, zone_rowid integer default 0, auto_client_item_count integer default 0, auto_document_count INTEGER DEFAULT 0, auto_document_with_local_changes_count INTEGER DEFAULT 0, auto_aggregate_size INTEGER DEFAULT 0)"]&& objc_msgSend(v7, "execute:", @"INSERT INTO app_libraries  (rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size) SELECT rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size   FROM app_libraries_old WHERE app_library_owner = %@ OR app_library_owner IS NULL", *MEMORY[0x263EFD488])&& objc_msgSend(v7, "execute:", @"DROP TABLE app_libraries_old"))
    {
      uint64_t v9 = 0;
      if (!+[BRCItemID migrateItemIDsToVersion11WithDB:v7 serverTruth:0])goto LABEL_49; {
      if ([v7 execute:@"ALTER TABLE mark_children_lost_progress RENAME TO mark_children_lost_progress_old"]&& objc_msgSend(v7, "execute:", @"CREATE TABLE mark_children_lost_progress (zone_rowid INTEGER NOT NULL , item_parent_id BLOB NOT NULL , last_updated_row_id INTEGER NOT NULL , item_parent_file_id INTEGER , app_library_rowid INTEGER NOT NULL , PRIMARY KEY(zone_rowid, item_parent_id))")&& objc_msgSend(v7, "execute:", @"INSERT INTO mark_children_lost_progress (zone_rowid, item_parent_id, last_updated_row_id, item_parent_file_id, app_library_rowid) SELECT o.zone_rowid, o.item_parent_id, o.last_updated_row_id, o.item_parent_file_id, c.app_library_rowid   FROM mark_children_lost_progress_old AS o INNER JOIN client_items AS c     ON o.zone_rowid = c.zone_rowid AND o.item_parent_id = c.item_id")&& objc_msgSend(v7, "execute:", @"DROP TABLE mark_children_lost_progress_old")&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_downloads RENAME TO client_downloads_old")&& objc_msgSend(v7, "execute:",
      }
                           @"CREATE TABLE client_downloads(throttle_id integer not null, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, unit_count_completed INTEGER DEFAULT 0, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))")
        && [v7 execute:@"INSERT INTO client_downloads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed FROM client_downloads_old"]&& objc_msgSend(v7, "execute:", @"DROP TABLE client_downloads_old")&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_uploads RENAME TO client_uploads_old")&& objc_msgSend(v7, "execute:", @"CREATE TABLE client_uploads(throttle_id integer primary key, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, upload_error blob, upload_priority integer DEFAULT 0, upload_request_stamp integer DEFAULT 0, UNIQUE(transfer_stage))")&& objc_msgSend(v7, "execute:", @"INSERT INTO client_uploads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp FROM client_uploads_old")&& objc_msgSend(v7, "execute:", @"DROP TABLE client_uploads_old")&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_unapplied_table RENAME TO client_unapplied_table_old")&& objc_msgSend(
                           v7,
                           "execute:",
                           @"CREATE TABLE client_unapplied_table(throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, apply_kind integer not null)")
        && [v7 execute:@"INSERT INTO client_unapplied_table (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind) SELECT throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind FROM client_unapplied_table_old"]&& objc_msgSend(v7, "execute:", @"DROP TABLE client_unapplied_table_old")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_downloads/scheduling_by_priority\" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_downloads/scheduling_by_priority_and_kind\" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_kind, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_downloads/scheduling_by_stamp\" ON client_downloads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1")&& objc_msgSend(v7, "execute:",
                           @"CREATE INDEX \"client_downloads/gc_index\" ON client_downloads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0")
        && [v7 execute:@"CREATE INDEX \"client_downloads/transfer_operation\" ON client_downloads (transfer_operation) WHERE transfer_operation IS NOT NULL"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_downloads/zone_rowid__throttle_state\" ON client_downloads (throttle_state, zone_rowid)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_downloads/reset_index\" ON client_downloads (zone_rowid, throttle_state)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_downloads/low_disk_index\" ON client_downloads (throttle_state, throttle_id, download_kind)  WHERE throttle_state = 43")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_uploads/gc_index\" ON client_uploads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0")
        && [v7 execute:@"CREATE INDEX IF NOT EXISTS \"client_uploads/scheduling_by_size\" ON client_uploads (throttle_state, transfer_queue, transfer_operation, transfer_size ASC)  WHERE throttle_state = 1"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX IF NOT EXISTS \"client_uploads/scheduling_by_stamp\" ON client_uploads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_uploads/transfer_operation\" ON client_uploads (transfer_operation) WHERE transfer_operation IS NOT NULL")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_uploads/zone_rowid__throttle_state\" ON client_uploads (throttle_state, zone_rowid)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_uploads/reset_index\" ON client_uploads (zone_rowid, throttle_state)")
        && [v7 execute:@"CREATE INDEX \"client_uploads/out_of_quota_index\" ON client_uploads (throttle_state, zone_rowid, transfer_size)  WHERE throttle_state = 32"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_unapplied_table/zone_rowid\" ON client_unapplied_table (zone_rowid)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_unapplied_table/next_retry_stamp_active_state\" ON client_unapplied_table (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_unapplied_table/zone_rowid__kind__throttle_state\" ON client_unapplied_table (throttle_state, zone_rowid, apply_kind)"))
      {
        uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_unapplied_table/expire_stamp_inactive_state\" ON client_unapplied_table (throttle_state, expire_stamp ASC) WHERE throttle_state = 0"];
        goto LABEL_7;
      }
    }
LABEL_48:
    uint64_t v9 = 0;
    goto LABEL_49;
  }
  if (![v6 execute:@"ALTER TABLE rowid_reservations RENAME TO rowid_reservations_old"]|| !objc_msgSend(v7, "execute:", @"CREATE TABLE rowid_reservations(rowid integer PRIMARY KEY, container_id text unique not null)")|| !objc_msgSend(v7, "execute:", @"INSERT INTO rowid_reservations (rowid, container_id) SELECT rowid, container_id FROM rowid_reservations_old WHERE owner = %@ OR owner IS NULL", *MEMORY[0x263EFD488])|| !objc_msgSend(v7, "execute:", @"DROP TABLE rowid_reservations_old"))
  {
    goto LABEL_48;
  }
  uint64_t v8 = +[BRCItemID migrateItemIDsToVersion11WithDB:v7 serverTruth:1];
LABEL_7:
  uint64_t v9 = v8;
LABEL_49:

  return v9;
}

uint64_t br_update_tables_11_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"CREATE INDEX \"client_items/mark_children_lost_index\" ON client_items(item_parent_zone_rowid, item_parent_id, rowid ASC) WHERE item_state = 0"]&& objc_msgSend(v7, "execute:", @"create index \"client_items/faults_enumeration\" ON client_items(zone_rowid, rowid) WHERE item_type = 2")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/sync_up_enumerator_1\"")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/sync_up_enumerator_2\"")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/sync_up_enumerator_1\" ON client_items(item_parent_zone_rowid, item_parent_id) WHERE item_localsyncupstate = 4 AND item_state IN (0, 1)"))
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/sync_up_enumerator_2\" ON client_items(zone_rowid) WHERE item_localsyncupstate IN (2, 3, 4)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_11_002(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    id v3 = @"ALTER TABLE server_items ADD COLUMN item_lastusedtime integer DEFAULT NULL";
  }
  else {
    id v3 = @"ALTER TABLE client_items ADD COLUMN item_lastusedtime integer DEFAULT NULL";
  }
  return [a2 execute:v3];
}

uint64_t br_update_tables_11_003(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    id v3 = @"ALTER TABLE server_items ADD COLUMN item_favoriterank integer DEFAULT NULL";
  }
  else {
    id v3 = @"ALTER TABLE client_items ADD COLUMN item_favoriterank integer DEFAULT NULL";
  }
  return [a2 execute:v3];
}

uint64_t br_update_tables_12_000(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX \"spotlight_ranks/notif_rank\""] {
         && [v7 execute:@"DROP TABLE spotlight_ranks"]
  }
         && [v7 execute:@"CREATE TABLE tombstones(file_object_id      integer not null, file_object_id_type integer not null, notif_rank          integer not null, PRIMARY KEY (file_object_id, notif_rank ASC))"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"tombstones/notif_rank\" ON tombstones (notif_rank)")&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_items ADD COLUMN item_user_visible integer not null default 1")&& objc_msgSend(v7, "execute:", @"UPDATE client_document_access SET properties = properties & 1"))
  {
    uint64_t v8 = [v7 execute:@"DROP INDEX \"client_document_access/indexable\""];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_12_001(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    id v3 = a2;
    [v3 execute:@"UPDATE client_downloads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_downloads.throttle_id = client_items.rowid) WHERE throttle_state != 0"];
    [v3 execute:@"UPDATE client_uploads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_uploads.throttle_id = client_items.rowid) WHERE throttle_state != 0"];
  }
  return 1;
}

uint64_t br_update_tables_13_000(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (!a3)
  {
    if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN item_alias_target text"])
    {
      uint64_t v8 = @"UPDATE client_items SET item_alias_target = item_filename, item_filename = NULL WHERE item_type = 3";
      goto LABEL_6;
    }
LABEL_7:
    uint64_t v9 = 0;
    goto LABEL_8;
  }
  if (([v6 execute:@"ALTER TABLE server_items ADD COLUMN item_alias_target text"] & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v8 = @"UPDATE server_items SET item_alias_target = item_filename, item_filename = \"\" WHERE item_type = 3";
LABEL_6:
  uint64_t v9 = [v7 execute:v8];
LABEL_8:

  return v9;
}

uint64_t br_update_tables_13_001(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"UPDATE server_items SET version_quarantine_info = %@, item_rank = NULL WHERE length(version_quarantine_info) == 0 AND version_quarantine_info IS NOT NULL", 0];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_13_002(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  id v5 = objc_opt_new();
  id v6 = [v5 UUIDString];
  uint64_t v7 = [v4 execute:@"UPDATE backup_detector SET uuid = %@", v6];

  return v7;
}

uint64_t br_update_tables_13_003(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if (objc_msgSend(v6, "execute:", @"UPDATE client_items SET item_local_diffs = item_local_diffs | %llu & ~%llu WHERE item_local_diffs & %llu != 0", 0x2000, 0x80000000000000, 0x80000000000000))
  {
    uint64_t v8 = objc_msgSend(v7, "execute:", @"UPDATE client_items SET item_local_diffs = item_local_diffs | %llu WHERE item_type = 5 AND item_stat_ckinfo IS NULL AND (item_local_diffs & %llu)==0", 0x2000, 0x2000);
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_14_000(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN item_tmpbounceno INTEGER"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/item_tmpbounceno\" ON client_items (item_tmpbounceno) WHERE item_tmpbounceno IS NOT NULL")&& objc_msgSend(v7, "execute:", @"UPDATE client_items SET item_tmpbounceno = call_block(%p, item_bouncedname) WHERE item_bouncedname IS NOT NULL", &__block_literal_global_1155)&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/item_bouncedname\"")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/item_parent_id__item_localname\"")&& objc_msgSend(v7, {
                            "execute:",
  }
                            @"CREATE INDEX \"client_items/item_parent_id__item_bouncedname\" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname) WHERE item_bouncedname IS NOT NULL")
         && [v7 execute:@"CREATE INDEX \"client_items/item_parent_id__item_localname\" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname) WHERE item_localname IS NOT NULL"])
  {
    uint64_t v8 = [v7 execute:@"UPDATE client_items SET item_bouncedname = call_block(%p, item_filename, item_localname) WHERE item_localname IS NOT NULL", &__block_literal_global_1173];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_14_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX \"client_items/item_path\""] {
         && [v7 execute:@"CREATE INDEX \"client_items/item_filename_path\" ON client_items (item_parent_zone_rowid, item_parent_id, item_filename)"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/item_localname_path\" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/item_bouncedname_path\" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/shared_item_library\" ON client_items (app_library_rowid, item_state) WHERE item_creator_id != 0;")
  }
         && [v7 execute:@"DROP INDEX \"client_items/item_id\""]
         && [v7 execute:@"DROP INDEX \"client_items/item_file_id\""]
         && [v7 execute:@"DROP INDEX \"client_items/item_file_id_unique\""])
  {
    uint64_t v8 = [v7 execute:@"CREATE UNIQUE INDEX \"client_items/item_file_id_unique\" ON client_items(item_file_id) WHERE item_state IN (0, -1)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_14_002(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"CREATE INDEX \"client_sync_up/next_retry\" ON client_sync_up (next_retry_stamp) WHERE throttle_state = 1"]&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/sync_up_enumerator_1\"")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/sync_up_enumerator_2\""))
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/sync_up_enumerator\" ON client_items(item_state, item_type) WHERE item_localsyncupstate = 4 AND item_min_supported_os_rowid IS NULL"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_14_003(uint64_t a1, void *a2, char a3)
{
  id v4 = a2;
  if (a3)
  {
    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v7 = brc_current_date_nsec();
    if ([v4 execute:@"UPDATE client_items SET item_user_visible = 0 WHERE item_scope IN (0, 1)"]&& objc_msgSend(v4, "execute:", @"UPDATE client_items SET item_user_visible = 0 WHERE item_scope = 3 AND (SELECT parent.item_filename FROM client_items AS parent WHERE parent.item_id = item_parent_id AND parent.zone_rowid = item_parent_zone_rowid)")&& objc_msgSend(v4, "execute:", @"UPDATE client_items SET item_user_visible = 0 WHERE item_filename LIKE '.%%' AND item_scope = 2"))
    {
      uint64_t v5 = [v4 execute:@"UPDATE client_items SET item_state = -1, item_processing_stamp = inc_and_fetch64(%p) WHERE item_user_visible = 0 AND item_scope = 2 AND item_type = 0 AND item_state = 0", &v7];
    }
    else
    {
      uint64_t v5 = 0;
    }
  }

  return v5;
}

uint64_t br_update_tables_15_000(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"DROP TABLE server_pending_fetches"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_15_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX \"client_items/item_notifs_rank\""] {
         && [v7 execute:@"CREATE INDEX \"client_items/item_notifs_rank_children\" ON client_items (item_parent_id, item_parent_zone_rowid, item_notifs_rank) WHERE item_state IN (0, -1)"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/item_notifs_rank_library\" ON client_items (item_notifs_rank, app_library_rowid) WHERE item_state IN (0, -1)")&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/alias_map\""))
  }
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/alias_map\" ON client_items(item_type, item_alias_target) WHERE item_type = 3"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_15_002(uint64_t a1, void *a2, int a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    if ([v4 execute:@"DROP INDEX \"server_items/alias_map\""]) {
      uint64_t v6 = [v5 execute:@"CREATE INDEX \"server_items/alias_map\" ON server_items(item_type, item_alias_target) WHERE item_type = 3"];
    }
    else {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t br_update_tables_15_003(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX \"client_items/item_localname_path\""] {
         && [v7 execute:@"DROP INDEX \"client_items/item_bouncedname_path\""]
  }
         && [v7 execute:@"DROP INDEX \"client_items/item_parent_id_rowid\""]
         && [v7 execute:@"DROP INDEX \"client_items/spotlight_index\""]
         && [v7 execute:@"DROP INDEX \"client_items/item_parent_id__item_state\""]
         && [v7 execute:@"DROP INDEX \"client_items/download_index\""]
         && [v7 execute:@"DROP INDEX \"client_items/eviction_index\""]
         && [v7 execute:@"DROP INDEX \"client_items/item_in_flight_diffs\""]
         && [v7 execute:@"DROP INDEX \"client_uploads/scheduling_by_size\""]
         && [v7 execute:@"DROP INDEX \"client_pkg_items/is_dirty\""]
         && [v7 execute:@"DROP INDEX \"client_items/pending_download_docs\""]
         && [v7 execute:@"DROP INDEX \"client_document_access/evictable\""]
         && [v7 execute:@"DROP INDEX \"client_document_access/evictable/item_rowid\""]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/app_library_rowid\" ON client_items (app_library_rowid)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/item_parent_id_rowid\" ON client_items (item_parent_id, app_library_rowid, rowid)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/working_set_index\" ON client_items (item_notifs_rank) WHERE item_user_visible = 1")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/eviction_index\" ON client_items (version_mtime, app_library_rowid) WHERE item_localsyncupstate = 0 AND item_state != 1")
         && [v7 execute:@"CREATE INDEX \"client_sync_up/sync_state_index\" ON client_sync_up (zone_rowid, throttle_state)"]&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_sync_up/throttle_id\" ON client_sync_up (throttle_id)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_sync_up/zone_rowid\" ON client_sync_up (zone_rowid)")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_sync_up/expire_stamp_inactive_state\" ON client_sync_up (throttle_state, expire_stamp) WHERE throttle_state = 0"))
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_uploads/scheduling_by_priority\" ON client_uploads (throttle_state, transfer_queue, upload_priority DESC, upload_request_stamp DESC, transfer_size ASC)  WHERE throttle_state = 1 AND transfer_operation IS NULL"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_15_004()
{
  return 1;
}

uint64_t br_update_tables_16_000(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (!a3)
  {
    if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN item_side_car_ckinfo BLOB"]&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_items ADD COLUMN item_creator INTEGER")&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_items ADD COLUMN version_edited_since_shared INTEGER"))
    {
      uint64_t v8 = @"DROP INDEX \"client_items/eviction_index\"";
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v9 = 0;
    goto LABEL_12;
  }
  if (![v6 execute:@"ALTER TABLE server_items ADD COLUMN item_side_car_ckinfo BLOB"]|| !objc_msgSend(v7, "execute:", @"ALTER TABLE server_items ADD COLUMN item_creator INTEGER")|| (objc_msgSend(v7, "execute:", @"ALTER TABLE server_items ADD COLUMN version_edited_since_shared INTEGER") & 1) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v8 = @"CREATE TABLE side_car_lookahead(record_name text primary key , root_alias_record_name text NOT NULL, item_side_car_ckinfo BLOB NOT NULL , item_favoriterank integer , item_lastusedtime integer)";
LABEL_10:
  uint64_t v9 = [v7 execute:v8];
LABEL_12:

  return v9;
}

uint64_t br_update_tables_16_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN visible_child_count integer"]&& objc_msgSend(v7, "execute:", @"CREATE TRIGGER \"visible_child_count/deletion\" AFTER DELETE ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count - 1 WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND old.item_parent_id = item_id AND old.item_parent_zone_rowid = zone_rowid AND old.item_filename != \".Trash\" ; END"))
  {
    uint64_t v8 = [v7 execute:@"CREATE TRIGGER \"visible_child_count/insertion\" AFTER INSERT ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count + 1 WHERE (new.item_user_visible = 1 OR new.item_scope = 3) AND new.item_filename != \".Trash\" AND new.item_parent_id = item_id AND new.item_parent_zone_rowid = zone_rowid ; END"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_16_002(uint64_t a1, void *a2, int a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    if ([v4 execute:@"ALTER TABLE server_items ADD COLUMN quota_used INTEGER"]
      && [v5 execute:@"ALTER TABLE server_items ADD COLUMN recursive_child_count INTEGER"]&& objc_msgSend(v5, "execute:", @"ALTER TABLE server_items ADD COLUMN shared_children_count INTEGER")&& objc_msgSend(v5, "execute:", @"ALTER TABLE server_items ADD COLUMN shared_alias_count INTEGER"))
    {
      uint64_t v6 = [v5 execute:@"ALTER TABLE server_items ADD COLUMN child_count INTEGER"];
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t br_update_tables_16_003(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"CREATE INDEX \"server_items/item_parent_id__item_type\" ON server_items(zone_rowid, item_type, item_parent_id)"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_16_004()
{
  return 1;
}

uint64_t br_update_tables_16_005(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"ALTER TABLE side_car_lookahead ADD COLUMN item_finder_tags blob"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_16_006(void *a1, void *a2, int a3, void **a4)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  if (a3)
  {
    uint64_t v9 = +[BRCMigrationQueryOperation folderSharesMigrationKey];
    uint64_t v10 = _br_setupMigrationQueryOnServerTruth(v9, v7, v8, a4);

    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    int v11 = [v7 _sharedServerZonesEnumerator:v8];
    uint64_t v12 = [v11 countByEnumeratingWithState:&v28 objects:v33 count:16];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)v29;
      do
      {
        for (uint64_t i = 0; i != v13; ++i)
        {
          if (*(void *)v29 != v14) {
            objc_enumerationMutation(v11);
          }
          uint64_t v16 = *(void **)(*((void *)&v28 + 1) + 8 * i);
          int v17 = [v16 changeState];
          [v17 forgetChangeTokens];

          if (v10) {
            uint64_t v10 = [v7 saveServerZoneToDB:v16];
          }
          else {
            uint64_t v10 = 0;
          }
        }
        uint64_t v13 = [v11 countByEnumeratingWithState:&v28 objects:v33 count:16];
      }
      while (v13);
    }
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    int v11 = objc_msgSend(v7, "_sharedClientZonesEnumerator", 0);
    uint64_t v18 = [v11 countByEnumeratingWithState:&v24 objects:v32 count:16];
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)v25;
      LOBYTE(v10) = 1;
      do
      {
        for (uint64_t j = 0; j != v19; ++j)
        {
          if (*(void *)v25 != v20) {
            objc_enumerationMutation(v11);
          }
          uint64_t v22 = *(void **)(*((void *)&v24 + 1) + 8 * j);
          [v22 setStateBits:256];
          if (v10) {
            uint64_t v10 = [v7 saveClientZoneToDB:v22];
          }
          else {
            uint64_t v10 = 0;
          }
        }
        uint64_t v19 = [v11 countByEnumeratingWithState:&v24 objects:v32 count:16];
      }
      while (v19);
    }
    else
    {
      uint64_t v10 = 1;
    }
  }

  return v10;
}

uint64_t br_update_tables_16_007()
{
  return 1;
}

uint64_t br_update_tables_16_008()
{
  return 1;
}

uint64_t br_update_tables_16_009(void *a1, void *a2, int a3)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    id v31 = v5;
    id v8 = (void *)[v6 fetch:@"SELECT record_name, root_alias_record_name, item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM side_car_lookahead WHERE length(root_alias_record_name) = 36"];
    if ([v8 next])
    {
      char v36 = 1;
      unint64_t v9 = 0x26507D000uLL;
      uint64_t v32 = v7;
      while (1)
      {
        long long v37 = (void *)MEMORY[0x2455D97F0]();
        uint64_t v10 = [v8 stringAtIndex:0];
        int v11 = [v8 stringAtIndex:1];
        uint64_t v12 = (void *)[objc_alloc(*(Class *)(v9 + 3288)) initWithUUIDString:v11];
        uint64_t v13 = [v10 componentsSeparatedByString:@"/"];
        if ([v13 count] != 2)
        {
          uint64_t v23 = brc_bread_crumbs();
          long long v24 = brc_default_log();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)buf = 138412290;
            long long v39 = v23;
            _os_log_fault_impl(&dword_23FA42000, v24, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: Ignoring corrupt side car file%@", buf, 0xCu);
          }

          goto LABEL_21;
        }
        uint64_t v14 = v7;
        id v15 = objc_alloc(*(Class *)(v9 + 3288));
        uint64_t v16 = [v13 lastObject];
        uint64_t v17 = [v15 initWithUUIDString:v16];

        uint64_t v18 = [v8 numberAtIndex:2];
        uint64_t v19 = [v8 numberAtIndex:3];
        uint64_t v20 = [v8 dataAtIndex:4];
        uint64_t v21 = [v8 objectOfClass:objc_opt_class() atIndex:5];
        uint64_t v34 = (void *)v18;
        long long v35 = (void *)v17;
        long long v33 = (void *)v21;
        if (v36)
        {
          uint64_t v30 = v17;
          id v7 = v14;
          int v25 = [v14 execute:@"UPDATE server_items SET item_favoriterank = %@, item_lastusedtime = %@, item_finder_tags = %@, item_side_car_ckinfo = %@, item_rank = NULL WHERE item_id = %@ AND zone_rowid IN (SELECT zone_rowid FROM server_items WHERE item_id = %@)", v18, v19, v20, v21, v12, v30];
          if ([v14 changes] <= 1)
          {
            if (v25) {
              char v36 = [v14 execute:@"DELETE FROM side_car_lookahead WHERE record_name = %@", v10];
            }
            else {
              char v36 = 0;
            }
            int v22 = 1;
            goto LABEL_20;
          }
          char v36 = v25;
        }
        else
        {
          id v7 = v14;
          char v36 = 0;
          if ([v14 changes] < 2)
          {
            int v22 = 1;
            goto LABEL_20;
          }
        }
        long long v26 = brc_bread_crumbs();
        long long v27 = brc_default_log();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)buf = 138412290;
          long long v39 = v26;
          _os_log_fault_impl(&dword_23FA42000, v27, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: Found more than one match for that query%@", buf, 0xCu);
        }

        int v22 = 0;
        id v7 = v32;
LABEL_20:

        unint64_t v9 = 0x26507D000;
        if (!v22)
        {

          uint64_t v28 = 0;
          goto LABEL_26;
        }
LABEL_21:
        if (([v8 next] & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    char v36 = 1;
LABEL_25:

    uint64_t v28 = v36 & 1;
LABEL_26:
    id v5 = v31;
  }
  else
  {
    uint64_t v28 = 1;
  }

  return v28;
}

uint64_t br_update_tables_16_010(uint64_t a1, void *a2, int a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    if ([v4 execute:@"DROP TRIGGER IF EXISTS \"server_items/sharing_state_propagation\""]&& objc_msgSend(v5, "execute:", @"DROP TRIGGER IF EXISTS \"server_items/learn_parent_sharing_state\"")&& objc_msgSend(v5, "execute:", @"DROP TRIGGER IF EXISTS \"server_items/sharing_state_insertion\"")&& objc_msgSend(v5, "execute:", @"CREATE TRIGGER \"server_items/sharing_state_propagation\" AFTER UPDATE OF item_sharing_options ON server_items BEGIN UPDATE server_items SET item_sharing_options = (item_sharing_options & (~124)) | (new.item_sharing_options & 120) WHERE new.item_sharing_options != old.item_sharing_options AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND (item_sharing_options & 120) != (new.item_sharing_options & 120); END")
      && [v5 execute:@"CREATE TRIGGER \"server_items/learn_parent_sharing_state\" AFTER UPDATE OF item_parent_id ON server_items BEGIN UPDATE server_items SET item_sharing_options = ((item_sharing_options & (~124)) | IFNULL((SELECT item_sharing_options & 120 FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), 0)) WHERE new.item_parent_id != old.item_parent_id AND item_id = new.item_id AND zone_rowid = new.zone_rowid AND item_state = 0 AND (item_sharing_options & 4) == 0; END"])
    {
      uint64_t v6 = [v5 execute:@"CREATE TRIGGER \"server_items/sharing_state_insertion\" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_sharing_options = ((item_sharing_options & (~124)) | IFNULL((SELECT item_sharing_options & 120 FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), 0)) WHERE (new.item_sharing_options & 4) == 0 AND item_id = new.item_id AND zone_rowid = new.zone_rowid; UPDATE server_items SET item_sharing_options = (item_sharing_options & (~124)) | (new.item_sharing_options & 120) WHERE (new.item_sharing_options & 4) != 0 AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND (item_sharing_options & 120) != (new.item_sharing_options & 120); END"];
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t br_update_tables_16_011(void *a1, void *a2, int a3, void **a4)
{
  if (!a3) {
    return 1;
  }
  id v6 = a2;
  id v7 = a1;
  id v8 = +[BRCMigrationQueryOperation folderShareAliasesMigrationKey];
  uint64_t v9 = _br_setupMigrationQueryOnServerTruth(v8, v7, v6, a4);

  return v9;
}

uint64_t br_update_tables_16_012(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return item_errors_recreate_schema(a2, 0);
  }
}

uint64_t br_update_tables_16_013()
{
  return 1;
}

uint64_t br_update_tables_16_014(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return objc_msgSend(a2, "execute:", @"UPDATE client_items AS parent SET visible_child_count = (SELECT COUNT(*) FROM client_items AS child WHERE child.item_parent_id = parent.item_id AND child.item_parent_zone_rowid = parent.zone_rowid AND (child.item_user_visible = 1 OR (child.item_scope == 3 AND child.item_filename != \".Trash\"))) WHERE parent.item_type in (0, 9, 10, 4)");
  }
}

uint64_t br_update_tables_16_015()
{
  return 1;
}

uint64_t br_update_tables_16_016(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"CREATE TABLE telemetry_events(rowid integer PRIMARY KEY, payload blob NOT NULL)"])
  {
    uint64_t v8 = [v7 execute:@"CREATE TABLE telemetry_failure_counts(item_id integer NOT NULL, zone_rowid integer NOT NULL, retry_count integer NOT NULL, PRIMARY KEY (item_id, zone_rowid))"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_16_017(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"CREATE INDEX \"server_items/share_root\" ON server_items(item_rank) WHERE (item_sharing_options & 4) != 0"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_16_018(void *a1, void *a2, char a3)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v24 = a2;
  if (a3)
  {
    char v6 = 1;
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    id obj = [v5 _privateClientZonesEnumerator];
    uint64_t v7 = [obj countByEnumeratingWithState:&v33 objects:v38 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v34;
      char v26 = 1;
      do
      {
        uint64_t v10 = 0;
        uint64_t v23 = v8;
        do
        {
          if (*(void *)v34 != v9) {
            objc_enumerationMutation(obj);
          }
          int v11 = *(void **)(*((void *)&v33 + 1) + 8 * v10);
          if ([v11 isSyncBlockedBecauseAppNotInstalled])
          {
            uint64_t v12 = [v11 dbRowID];
            uint64_t v13 = (void *)[v24 fetch:@"SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE zone_rowid = %@", v12];

            v31[0] = MEMORY[0x263EF8330];
            v31[1] = 3221225472;
            v31[2] = __br_update_tables_16_018_block_invoke;
            v31[3] = &unk_26507F1E8;
            id v14 = v5;
            id v32 = v14;
            id v15 = [v13 enumerateObjects:v31];
            long long v27 = 0u;
            long long v28 = 0u;
            long long v29 = 0u;
            long long v30 = 0u;
            id v16 = v15;
            uint64_t v17 = [v16 countByEnumeratingWithState:&v27 objects:v37 count:16];
            if (v17)
            {
              uint64_t v18 = v17;
              id v19 = v5;
              uint64_t v20 = *(void *)v28;
              while (2)
              {
                for (uint64_t i = 0; i != v18; ++i)
                {
                  if (*(void *)v28 != v20) {
                    objc_enumerationMutation(v16);
                  }
                  if ([*(id *)(*((void *)&v27 + 1) + 8 * i) hasLocalChanges])
                  {
                    [v11 clearStateBits:4096];
                    if (v26) {
                      char v26 = [v14 saveClientZoneToDB:v11];
                    }
                    else {
                      char v26 = 0;
                    }
                    goto LABEL_21;
                  }
                }
                uint64_t v18 = [v16 countByEnumeratingWithState:&v27 objects:v37 count:16];
                if (v18) {
                  continue;
                }
                break;
              }
LABEL_21:
              id v5 = v19;
              uint64_t v8 = v23;
            }
          }
          ++v10;
        }
        while (v10 != v8);
        uint64_t v8 = [obj countByEnumeratingWithState:&v33 objects:v38 count:16];
      }
      while (v8);
    }
    else
    {
      char v26 = 1;
    }

    char v6 = v26;
  }

  return v6 & 1;
}

uint64_t br_update_tables_16_019(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = (void *)[a2 numberWithSQL:@"SELECT 1 FROM client_items WHERE item_bouncedname LIKE '%%.icloud'"];
  uint64_t v3 = [v4 BOOLValue] ^ 1;

  return v3;
}

uint64_t br_update_tables_16_020(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP TRIGGER IF EXISTS \"visible_child_count/reparent\""] {
         && [v7 execute:@"DROP TRIGGER IF EXISTS \"visible_child_count/visibility\""]&& objc_msgSend(v7, "execute:", @"CREATE TRIGGER \"visible_child_count/reparent\" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items WHEN (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid) BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count - 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = old.item_parent_id AND zone_rowid = old.item_parent_zone_rowid AND old.item_filename != \".Trash\" ; UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != \".Trash\" ; END"))
  }
  {
    uint64_t v8 = [v7 execute:@"CREATE TRIGGER \"visible_child_count/visibility\" AFTER UPDATE OF item_user_visible, item_scope ON client_items WHEN (new.item_user_visible != old.item_user_visible OR new.item_scope != old.item_scope) BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + (new.item_user_visible | (new.item_scope == 3)) - (old.item_user_visible | (old.item_scope == 3)) WHERE item_id == new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != \".Trash\" ; END"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_16_022(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"CREATE INDEX \"client_items/sync_state_job_recovery\" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate != 0"])
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/download_job\" ON client_items(rowid) WHERE desired_version IS NOT NULL"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_17_000()
{
  return 1;
}

uint64_t br_update_tables_17_001()
{
  return 1;
}

uint64_t br_update_tables_18_000(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX IF EXISTS \"client_items/shared_item_library\""]&& objc_msgSend(v7, "execute:", @"UPDATE client_downloads SET transfer_queue = '_retry' WHERE transfer_queue = 'com.apple.SharedDocs'"))
  {
    uint64_t v8 = [v7 execute:@"UPDATE client_uploads SET transfer_queue = '_retry' WHERE transfer_queue = 'com.apple.SharedDocs'"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_19_000(uint64_t a1, void *a2, int a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v4 = a2;
  if (a3)
  {
    id v5 = [MEMORY[0x263F841B0] sharedManager];
    id v6 = [v5 currentPersona];
    char v7 = [v6 isDataSeparatedPersona];

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = (void *)[v4 fetch:@"SELECT config_plist FROM server_state WHERE config_plist IS NOT NULL"];
      if ([v8 next])
      {
        uint64_t v9 = (void *)MEMORY[0x263EFFA08];
        uint64_t v10 = objc_opt_class();
        uint64_t v11 = objc_opt_class();
        uint64_t v12 = objc_opt_class();
        uint64_t v13 = objc_opt_class();
        uint64_t v14 = objc_opt_class();
        id v15 = objc_msgSend(v9, "setWithObjects:", v10, v11, v12, v13, v14, objc_opt_class(), 0);
        id v16 = [v8 unarchivedObjectOfClasses:v15 atIndex:0];
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v17 = +[BRCUserDefaults cachedServerConfigurationPath];
          [v16 writeToFile:v17 atomically:1];
        }
        else
        {
          uint64_t v17 = brc_bread_crumbs();
          id v19 = brc_default_log();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            int v22 = v17;
            _os_log_impl(&dword_23FA42000, v19, OS_LOG_TYPE_DEFAULT, "[WARNING] Cannot decode configuration plist from the database%@", buf, 0xCu);
          }
        }
      }
    }
    if ([v4 execute:@"CREATE TABLE server_state_tmp (state)"]
      && [v4 execute:@"INSERT INTO server_state_tmp (state) SELECT state FROM server_state"]&& objc_msgSend(v4, "execute:", @"DROP TABLE server_state"))
    {
      uint64_t v18 = [v4 execute:@"ALTER TABLE server_state_tmp RENAME TO server_state"];
    }
    else
    {
      uint64_t v18 = 0;
    }
  }
  else
  {
    uint64_t v18 = 1;
  }

  return v18;
}

uint64_t br_update_tables_19_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  char v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN version_old_zone_item_id blob"]&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_items ADD COLUMN version_old_zone_rowid integer"))
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/version_old_zone_rowid\" ON client_items (version_old_zone_rowid)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_20_000()
{
  return 1;
}

uint64_t br_update_tables_20_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  char v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE client_items ADD COLUMN version_block_sync_until_timestamp integer default null"]&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_items ADD COLUMN version_block_sync_until_bundle_id text default null")&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_items ADD COLUMN version_block_sync_until_resuming integer default null"))
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/version_block_sync_timestamp\" ON client_items (version_block_sync_until_timestamp)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_20_002()
{
  return 1;
}

uint64_t br_update_tables_20_003(void *a1, void *a2, int a3)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  char v7 = v6;
  if (a3)
  {
    if ([v6 execute:@"CREATE TRIGGER \"server_items/orphan_reschedule\" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_depth = 0 WHERE new.item_type IN (0, 9, 10)   AND item_parent_id = new.item_id   AND zone_rowid = new.zone_rowid   AND item_depth = -2   AND item_rank IS NULL; END"]) {
      char v8 = [v7 execute:@"CREATE TRIGGER \"server_items/orphan_reschedule_propagation\" AFTER UPDATE OF item_depth ON server_items BEGIN UPDATE server_items SET item_depth = 0 WHERE new.item_depth = 0 AND old.item_depth = -2   AND new.item_type IN (0, 9, 10)   AND item_parent_id = new.item_id   AND zone_rowid = new.zone_rowid   AND item_depth = -2   AND item_rank IS NULL; END"];
    }
    else {
      char v8 = 0;
    }
    long long v52 = 0u;
    long long v53 = 0u;
    long long v50 = 0u;
    long long v51 = 0u;
    uint64_t v17 = [v5 _privateServerZonesEnumerator:v7];
    uint64_t v18 = [v17 countByEnumeratingWithState:&v50 objects:v57 count:16];
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)v51;
      do
      {
        for (uint64_t i = 0; i != v19; ++i)
        {
          if (*(void *)v51 != v20) {
            objc_enumerationMutation(v17);
          }
          int v22 = *(void **)(*((void *)&v50 + 1) + 8 * i);
          uint64_t v23 = [v22 changeState];
          id v24 = [v23 changeToken];

          if (v24) {
            [v22 setStateBits:60];
          }
          if (v8) {
            char v8 = [v5 saveServerZone:v22 toDB:v7];
          }
          else {
            char v8 = 0;
          }
        }
        uint64_t v19 = [v17 countByEnumeratingWithState:&v50 objects:v57 count:16];
      }
      while (v19);
    }
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v37 = v5;
    uint64_t v9 = [v5 _appLibrariesEnumerator:v6 version:2];
    uint64_t v10 = [v9 countByEnumeratingWithState:&v46 objects:v56 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v47;
      char v8 = 1;
      do
      {
        for (uint64_t j = 0; j != v11; ++j)
        {
          if (*(void *)v47 != v12) {
            objc_enumerationMutation(v9);
          }
          uint64_t v14 = *(void **)(*((void *)&v46 + 1) + 8 * j);
          id v15 = [v14 dbRowID];
          id v16 = (void *)[v7 numberWithSQL:@"SELECT 1 FROM client_items WHERE app_library_rowid = %@ AND item_stat_ckinfo IS NOT NULL LIMIT 1", v15];

          if ([v16 BOOLValue])
          {
            [v14 setStateBits:369098752];
            if (v8) {
              char v8 = [v37 saveAppLibrary:v14 toDB:v7 supportsEnhancedDrivePrivacy:0];
            }
            else {
              char v8 = 0;
            }
          }
        }
        uint64_t v11 = [v9 countByEnumeratingWithState:&v46 objects:v56 count:16];
      }
      while (v11);
    }
    else
    {
      char v8 = 1;
    }

    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    id v5 = v37;
    int v25 = [v37 _privateClientZonesEnumerator];
    uint64_t v26 = [v25 countByEnumeratingWithState:&v42 objects:v55 count:16];
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = *(void *)v43;
      do
      {
        for (uint64_t k = 0; k != v27; ++k)
        {
          if (*(void *)v43 != v28) {
            objc_enumerationMutation(v25);
          }
          long long v30 = *(void **)(*((void *)&v42 + 1) + 8 * k);
          if (([v30 state] & 0x10000) != 0)
          {
            [v30 setStateBits:256];
            [v30 clearStateBits:0x10000];
            if (v8) {
              char v8 = [v37 saveClientZoneToDB:v30];
            }
            else {
              char v8 = 0;
            }
          }
        }
        uint64_t v27 = [v25 countByEnumeratingWithState:&v42 objects:v55 count:16];
      }
      while (v27);
    }

    long long v40 = 0u;
    long long v41 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    uint64_t v17 = [v37 _sharedClientZonesEnumerator];
    uint64_t v31 = [v17 countByEnumeratingWithState:&v38 objects:v54 count:16];
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v33 = *(void *)v39;
      do
      {
        for (uint64_t m = 0; m != v32; ++m)
        {
          if (*(void *)v39 != v33) {
            objc_enumerationMutation(v17);
          }
          long long v35 = *(void **)(*((void *)&v38 + 1) + 8 * m);
          if (([v35 state] & 0x10000) != 0)
          {
            [v35 setStateBits:256];
            [v35 clearStateBits:0x10000];
            if (v8) {
              char v8 = [v37 saveClientZoneToDB:v35];
            }
            else {
              char v8 = 0;
            }
          }
        }
        uint64_t v32 = [v17 countByEnumeratingWithState:&v38 objects:v54 count:16];
      }
      while (v32);
    }
  }

  return v8 & 1;
}

uint64_t br_update_tables_20_004(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"CREATE INDEX \"server_items/item_lastusedtime\" ON server_items(item_lastusedtime DESC)"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_20_005(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return recursive_table_recreate_schema(a2);
  }
}

uint64_t br_update_tables_20_006(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE TABLE IF NOT EXISTS ciconia_history(date integer NOT NULL, os text NOT NULL, br text NOT NULL, bird_schema integer NOT NULL, db_schema integer NOT NULL, ciconia_version integer NOT NULL, last_error text, duration real NOT NULL, uuid text NOT NULL, PRIMARY KEY (uuid))"];
  }
}

uint64_t br_update_tables_21_000(void *a1, void *a2, char a3)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  if ([MEMORY[0x263F32590] hasDaemonicParts])
  {
    char v7 = [v5 stageRegistry];
  }
  else
  {
    char v7 = 0;
  }
  uint64_t v8 = objc_opt_new();
  uint64_t v9 = (void *)v8;
  if (a3)
  {
    uint64_t v10 = (void *)[v6 fetch:@"SELECT signature, data FROM server_xattr_blobs"];
    if ([v10 next])
    {
      do
      {
        uint64_t v11 = (void *)MEMORY[0x2455D97F0]();
        uint64_t v12 = [v10 dataAtIndex:0];
        uint64_t v13 = [v10 dataAtIndex:1];
        id v20 = 0;
        if (([v9 containsObject:v12] & 1) == 0)
        {
          if (v7 && ([v7 saveXattrBlob:v13 forSignature:v12 error:&v20] & 1) == 0)
          {
            uint64_t v14 = brc_bread_crumbs();
            id v15 = brc_default_log();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)buf = 138412802;
              int v25 = v12;
              __int16 v26 = 2112;
              id v27 = v20;
              __int16 v28 = 2112;
              long long v29 = v14;
              _os_log_fault_impl(&dword_23FA42000, v15, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: Couldn't save xattr blob for signature %@.  Continuing anyway - %@%@", buf, 0x20u);
            }
          }
          else if ((unint64_t)[v9 count] <= 0x7F)
          {
            [v9 addObject:v12];
          }
        }
      }
      while (([v10 next] & 1) != 0);
    }
    uint64_t v18 = [v6 execute:@"DROP TABLE server_xattr_blobs"];
  }
  else
  {
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    v21[2] = __br_update_tables_21_000_block_invoke;
    v21[3] = &unk_265081508;
    int v22 = (void *)v8;
    id v23 = v7;
    id v16 = v9;
    uint64_t v17 = (void *)MEMORY[0x2455D9A50](v21);
    [v6 execute:@"UPDATE client_pkg_items SET xattrs = call_block(%p, xattrs) WHERE xattrs IS NOT NULL", v17];

    uint64_t v18 = 1;
    uint64_t v10 = v22;
  }

  return v18;
}

uint64_t br_update_tables_21_001(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  char v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"CREATE INDEX \"client_items/share_id\" on client_items(app_library_rowid) WHERE (item_sharing_options & 4) != 0"])
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"client_items/oob_sync_ack\" on client_items(zone_rowid) WHERE (item_local_diffs & 1152921504606846976) != 0"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_21_002(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX \"ciconia_history/counting_index\" ON ciconia_history(ciconia_version)"];
  }
}

uint64_t br_update_tables_21_003(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  char v7 = v6;
  if ((a3 & 1) == 0)
  {
    if ([v6 execute:@"CREATE INDEX \"client_items/item_xattr_signature\" ON client_items(item_xattr_signature)"])
    {
      uint64_t v8 = @"CREATE INDEX \"client_items/version_xattr_signature\" ON client_items(version_xattr_signature)";
      goto LABEL_8;
    }
LABEL_9:
    uint64_t v9 = 0;
    goto LABEL_10;
  }
  if (![v6 execute:@"DROP INDEX IF EXISTS \"server_items/item_xattr_signature\""]
    || ![v7 execute:@"DROP INDEX IF EXISTS \"server_items/version_xattr_signature\""]|| !objc_msgSend(v7, "execute:", @"CREATE INDEX \"server_items/item_xattr_signature\" ON server_items(item_xattr_signature)"))
  {
    goto LABEL_9;
  }
  uint64_t v8 = @"CREATE INDEX \"server_items/version_xattr_signature\" ON server_items(version_xattr_signature)";
LABEL_8:
  uint64_t v9 = [v7 execute:v8];
LABEL_10:

  return v9;
}

uint64_t br_update_tables_21_004(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  char v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"ALTER TABLE telemetry_events ADD COLUMN priority integer not null default 0"])
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"telemetry_events/priority\" ON telemetry_events (priority) WHERE priority = 1"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_21_005(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  char v7 = v6;
  if ((a3 & 1) == 0)
  {
    if ([v6 execute:@"DROP INDEX \"client_document_access/modify_access_item\""]
      && [v7 execute:@"DROP INDEX \"tombstones/notif_rank\""]
      && [v7 execute:@"CREATE INDEX \"tombstones/notif_rank\" ON tombstones (notif_rank)"]&& objc_msgSend(v7, "execute:", @"DROP INDEX \"client_items/version_block_sync_timestamp\"")&& objc_msgSend(v7, "execute:", @"CREATE INDEX \"client_items/version_block_sync_until_timestamp\" ON client_items (version_block_sync_until_timestamp) WHERE version_block_sync_until_timestamp IS NOT NULL")&& (objc_msgSend(v7, "execute:", @"CREATE INDEX \"telemetry_events/priority__rowid\" ON telemetry_events (priority, rowid)") & 1) != 0)
    {
      uint64_t v8 = @"CREATE INDEX \"client_items/item_type_dir-fault\" ON client_items (item_type) WHERE item_type IN (9, 10)";
      goto LABEL_4;
    }
LABEL_12:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
  if (![v6 execute:@"CREATE INDEX \"server_items/item_type_dir-fault\" ON server_items (item_type) WHERE item_type IN (9, 10)"])goto LABEL_12; {
  uint64_t v8 = @"CREATE INDEX \"server_items/item_type_folder\" ON server_items (item_type) WHERE item_type IN (0, 9, 10)";
  }
LABEL_4:
  uint64_t v9 = [v7 execute:v8];
LABEL_13:

  return v9;
}

uint64_t br_update_tables_21_006(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"ALTER TABLE ciconia_history ADD COLUMN last_originator integer default 0"];
  }
}

uint64_t br_update_tables_30_000(void *a1, void *a2, char a3, void **a4)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  id v68 = a1;
  id v6 = a2;
  char v7 = +[BRCUserDefaults defaultsForMangledID:0];
  uint64_t v8 = [v7 dbMigrationBatchSize];

  if ((a3 & 1) == 0)
  {
    long long v67 = (void *)[v6 numberWithSQL:@"SELECT COUNT(*) FROM client_items"];
    if ([MEMORY[0x263F32590] hasDaemonicParts]
      && ([v68 stageRegistry], (uint64_t v10 = objc_claimAutoreleasedReturnValue()) != 0))
    {
      v70[0] = MEMORY[0x263EF8330];
      v70[1] = 3221225472;
      v70[2] = __br_update_tables_30_000_block_invoke;
      v70[3] = &unk_26507F148;
      id v65 = v10;
      id v71 = v65;
      uint64_t v11 = (void *)MEMORY[0x2455D9A50](v70);
      char v12 = [v6 execute:@"UPDATE client_items SET item_localsyncupstate = call_block(%p, rowid, item_file_id, item_localsyncupstate) WHERE item_type NOT IN (0, 4, 9, 10) AND item_scope = 3 AND (item_stat_ckinfo IS NULL OR item_localsyncupstate IN (2, 3, 4))", v11];
    }
    else
    {
      id v65 = 0;
      char v12 = 1;
    }
    uint64_t v13 = 0;
    while ((v12 & 1) != 0)
    {
      int v14 = objc_msgSend(v6, "execute:", @"UPDATE client_items AS ci SET item_stat_ckinfo = (SELECT item_stat_ckinfo from server_items WHERE item_id = ci.item_id) WHERE ci.item_stat_ckinfo IS NULL AND ci.zone_rowid IN (SELECT rowid FROM client_zones AS cz WHERE cz.zone_owner = \"__defaultOwner__\") AND item_type NOT IN (0, 4, 9, 10) AND item_localsyncupstate < 100 AND EXISTS (SELECT item_stat_ckinfo from server_items WHERE item_id = ci.item_id) LIMIT %llu", v8);
      v13 += [v6 changes];
      if (v14)
      {
        char v12 = 1;
        if ([v6 changes] >= v8) {
          continue;
        }
      }
      goto LABEL_13;
    }
    [v6 changes];
    LOBYTE(v14) = 0;
LABEL_13:
    id v15 = brc_bread_crumbs();
    id v16 = brc_default_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG)) {
      br_update_tables_30_000_cold_7();
    }

    uint64_t v17 = 0;
    while ((v14 & 1) != 0)
    {
      int v18 = objc_msgSend(v6, "execute:", @"DELETE FROM client_items AS ci WHERE ci.item_stat_ckinfo IS NULL AND ci.zone_rowid IN (SELECT rowid FROM client_zones AS cz WHERE cz.zone_owner = \"__defaultOwner__\") AND item_type NOT IN (0, 4, 9, 10) AND item_localsyncupstate < 100 LIMIT %llu", v8);
      v17 += [v6 changes];
      if (v18)
      {
        LOBYTE(v14) = 1;
        if ([v6 changes] >= v8) {
          continue;
        }
      }
      goto LABEL_21;
    }
    [v6 changes];
    LOBYTE(v1_Block_object_dispose(&STACK[0x280], 8) = 0;
LABEL_21:
    uint64_t v19 = brc_bread_crumbs();
    id v20 = brc_default_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG)) {
      br_update_tables_30_000_cold_6();
    }

    uint64_t v21 = 0;
    while ((v18 & 1) != 0)
    {
      int v22 = objc_msgSend(v6, "execute:", @"DELETE FROM client_items WHERE item_type = 3 LIMIT %llu", v8);
      v21 += [v6 changes];
      if (v22)
      {
        LOBYTE(v1_Block_object_dispose(&STACK[0x280], 8) = 1;
        if ([v6 changes] >= v8) {
          continue;
        }
      }
      goto LABEL_29;
    }
    [v6 changes];
    int v22 = 0;
LABEL_29:
    id v23 = brc_bread_crumbs();
    id v24 = brc_default_log();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG)) {
      br_update_tables_30_000_cold_5();
    }

    if (v22)
    {
      while (1)
      {
        int v25 = [v6 execute:@"DELETE FROM client_downloads"];
        [v6 changes];
        if (!v25) {
          break;
        }
        if ([v6 changes] < v8)
        {
          if ([v6 execute:@"DROP INDEX IF EXISTS \"client_items/lostzombie_scan_index\""]&& objc_msgSend(v6, "execute:", @"DROP INDEX IF EXISTS \"client_items/item_tmpbounceno\"")&& objc_msgSend(v6, "execute:", @"DROP INDEX IF EXISTS \"client_items/item_notifs_rank_children\"")&& objc_msgSend(v6, "execute:", @"DROP INDEX IF EXISTS \"client_items/doc_sync_state\"")&& objc_msgSend(v6, "execute:", @"DROP INDEX IF EXISTS \"client_sync_up/zone_rowid\"")&& objc_msgSend(v6, "execute:", @"DROP INDEX IF EXISTS \"client_sync_up/sync_state_index\"")&& objc_msgSend(v6, "execute:", @"DROP INDEX IF EXISTS \"client_sync_up/throttle_id\"")&& objc_msgSend(
                               v6,
                               "execute:",
                               @"DROP INDEX IF EXISTS \"client_downloads/zone_rowid__throttle_state\"")
            && [v6 execute:@"DROP INDEX IF EXISTS \"client_uploads/zone_rowid__throttle_state\""]&& objc_msgSend(v6, "execute:", @"DROP INDEX IF EXISTS \"client_uploads/group_by\"")&& objc_msgSend(v6, "execute:", @"DROP INDEX IF EXISTS \"client_downloads/group_by\""))
          {
            char v26 = [v6 execute:@"DROP INDEX IF EXISTS \"client_items/working_set_index\""];
            goto LABEL_48;
          }
          break;
        }
      }
    }
    else
    {
      [v6 changes];
    }
    char v26 = 0;
LABEL_48:
    uint64_t v27 = 0;
    do
    {
      __int16 v28 = (void *)MEMORY[0x2455D97F0]();
      uint64_t v76 = 0;
      long long v77 = &v76;
      uint64_t v78 = 0x2020000000;
      uint64_t v79 = v27;
      if ((v26 & 1) == 0)
      {
        _Block_object_dispose(&v76, 8);
LABEL_61:
        uint64_t v64 = [v6 changes];
        goto LABEL_62;
      }
      v69[0] = MEMORY[0x263EF8330];
      v69[1] = 3221225472;
      v69[2] = __br_update_tables_30_000_block_invoke_1806;
      v69[3] = &unk_2650825B8;
      v69[4] = &v76;
      long long v29 = (void *)MEMORY[0x2455D9A50](v69);
      int v30 = [v6 execute:@"UPDATE client_items SET item_localsyncupstate = call_block(%p, item_localsyncupstate, item_file_id, rowid) WHERE item_state IN (0, -1) AND item_type NOT IN (2, 7) AND item_scope != 3 AND rowid > %llu ORDER BY rowid ASC LIMIT %llu", v29, v27, v8];

      uint64_t v27 = v77[3];
      _Block_object_dispose(&v76, 8);
      if (!v30) {
        goto LABEL_61;
      }
      char v26 = 1;
    }
    while ([v6 changes] >= v8);
    uint64_t v64 = [v6 changes];
    if ([v6 execute:@"UPDATE client_items SET item_file_id = NULL, item_generation = NULL, item_doc_id = NULL WHERE item_state IN (0, -1) AND (item_type IN (2, 7) OR item_scope = 3) AND item_localsyncupstate NOT IN (888, 999)"]&& objc_msgSend(v6, "execute:", @"UPDATE client_items SET desired_version = NULL, item_localname = NULL, item_tmpbounceno = NULL, item_thumb_greedy = NULL, item_thumb_live_signature = NULL")&& objc_msgSend(v6, "execute:", @"UPDATE client_items SET item_scope = 2 WHERE item_scope = 1 AND call_block(%p, item_id)", &__block_literal_global_1818))
    {
      while (objc_msgSend(v6, "execute:", @"UPDATE client_items SET item_type = 1 WHERE item_type = 2 LIMIT %llu", v8))
      {
        if ([v6 changes] < v8)
        {
          do
            int v31 = objc_msgSend(v6, "execute:", @"UPDATE client_items SET item_type = 6 WHERE item_type = 7 LIMIT %llu", v8);
          while (v31 && [v6 changes] >= v8);
          goto LABEL_63;
        }
      }
    }
LABEL_62:
    int v31 = 0;
LABEL_63:
    if (v31)
    {
      while ([v6 execute:@"UPDATE client_items SET item_state = 0, item_scope = IFNULL((        WITH RECURSIVE item_parents_scopes (item_scope, item_id, zone_rowid) AS(           SELECT ci.item_scope, ci.item_parent_id, ci.item_parent_zone_rowid            FROM client_items AS ci            WHERE ci.item_id = client_items.item_parent_id                AND ci.zone_rowid = client_items.item_parent_zone_rowid            UNION ALL            SELECT li.item_scope, li.item_parent_id, li.item_parent_zone_rowid            FROM client_items as li                 INNER JOIN item_parents_scopes AS p USING (item_id, zone_rowid)       )        SELECT item_scope        FROM item_parents_scopes        WHERE item_scope > 0        LIMIT 1 ), call_block(%p, item_parent_id, (SELECT al.app_library_name FROM app_libraries AS al WHERE al.rowid = app_library_rowid)))WHERE item_state IN (-1, -2) AND item_scope = 0 LIMIT %llu", &__block_literal_global_1826, v8])
      {
        if ([v6 changes] < v8)
        {
          while ([v6 execute:@"UPDATE client_items SET item_state = 0 WHERE item_state IN (-1, -2) LIMIT %llu", v8])
          {
            if ([v6 changes] < v8)
            {
              while (objc_msgSend(v6, "execute:", @"UPDATE client_items SET item_state = 1 WHERE item_state = -3 LIMIT %llu", v8))
              {
                if ([v6 changes] < v8)
                {
                  if ([v6 execute:@"UPDATE client_items SET item_processing_stamp = NULL WHERE item_type NOT IN (0, 4, 9, 10) AND item_processing_stamp IS NOT NULL"]&& objc_msgSend(v6, "execute:", @"UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state IN (18, 26, 29)")&& objc_msgSend(v6, "execute:", @"DROP TRIGGER IF EXISTS \"client_pkg_items/increase_pkg_size\"")&& objc_msgSend(v6, "execute:", @"DROP TRIGGER IF EXISTS \"client_pkg_items/update_pkg_size\"")&& objc_msgSend(v6, "execute:", @"DROP TRIGGER IF EXISTS \"client_pkg_items/reduce_pkg_size\"")
                    && [v6 execute:@" CREATE TABLE client_pkg_upload_items(item_rowid integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, xattr_signature blob, PRIMARY KEY (item_rowid, rel_path ASC))"]&& objc_msgSend(v6, "execute:", @"CREATE TRIGGER \"client_pkg_upload_items/item_delete\" AFTER DELETE ON client_items BEGIN DELETE FROM client_pkg_upload_items WHERE item_rowid = old.rowid ; END")
                    && [v6 execute:@"CREATE TRIGGER \"client_pkg_upload_items/sync_idle_delete\" AFTER UPDATE OF item_localsyncupstate, item_state ON client_items BEGIN DELETE FROM client_pkg_upload_items WHERE (new.item_state = 1 OR new.item_localsyncupstate IN (1, 0)) AND item_rowid = new.rowid ; END"]
                    && [v6 execute:@"CREATE TABLE client_pkg_upload_sizes (item_rowid integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)"]&& objc_msgSend(v6, "execute:", @"CREATE TRIGGER \"client_pkg_upload_items/increase_pkg_size\" AFTER INSERT ON client_pkg_upload_items BEGIN INSERT OR IGNORE INTO client_pkg_upload_sizes VALUES (new.item_rowid, 0, 0); UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END")
                    && [v6 execute:@"CREATE TRIGGER \"client_pkg_upload_items/update_pkg_size\" AFTER UPDATE OF size ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END"]
                    && [v6 execute:@"CREATE TRIGGER \"client_pkg_upload_items/reduce_pkg_size\"  BEFORE DELETE ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_rowid = old.item_rowid; END"]
                    && [v6 execute:@"DROP TRIGGER IF EXISTS insert_version_sum_size"]&& objc_msgSend(v6, "execute:", @"DROP TRIGGER IF EXISTS update_version_sum_size")&& objc_msgSend(v6, "execute:", @"DROP TRIGGER IF EXISTS delete_version_sum_size")&& objc_msgSend(v6, "execute:", @"DROP TABLE IF EXISTS client_reader_throttle")&& objc_msgSend(v6, "execute:", @"DROP TABLE IF EXISTS mark_children_lost_progress")&& objc_msgSend(v6, "execute:", @"DROP TABLE IF EXISTS client_pkg_items")&& objc_msgSend(v6, "execute:", @"DROP TABLE IF EXISTS client_pkg_sizes")&& objc_msgSend(v6, "execute:", @"DROP TABLE IF EXISTS client_document_access")
                    && [v6 execute:@"DROP TABLE IF EXISTS aggregates"]
                    && [v6 execute:@"DELETE FROM client_uploads"]
                    && [v6 execute:@"DELETE FROM client_sync_up"]
                    && [v6 execute:@"DELETE FROM tombstones"]
                    && [v6 execute:@"ALTER TABLE client_items ADD COLUMN item_local_change_count integer"]&& objc_msgSend(v6, "execute:", @"ALTER TABLE client_items ADD COLUMN item_old_version_identifier text")&& objc_msgSend(v6, "execute:", @"ALTER TABLE client_items ADD COLUMN version_local_change_count integer")&& objc_msgSend(v6, "execute:", @"ALTER TABLE client_items ADD COLUMN version_old_version_identifier text")&& objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/next_propagation\" ON client_items(item_processing_stamp) WHERE item_processing_stamp IS NOT NULL")
                    && [v6 execute:@"CREATE INDEX \"client_items/item_notifs_rank\" ON client_items (item_notifs_rank)"]&& objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/items_needing_sync\" ON client_items(item_localsyncupstate, zone_rowid) WHERE item_localsyncupstate IN (3,4)")&& objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/lost_file_id\" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate = 7")&& objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_items/items_pending_fpfs_migration\" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate IN (5,6)")&& objc_msgSend(v6, "execute:", @"CREATE INDEX \"client_sync_up/sync_state_index\" ON client_sync_up (zone_rowid, throttle_state) WHERE throttle_state != 0"))
                  {
                    int v32 = [v6 execute:@"CREATE INDEX \"client_sync_up/throttle_id\" ON client_sync_up(throttle_id) WHERE throttle_state != 0"];
                    goto LABEL_106;
                  }
                  goto LABEL_105;
                }
              }
              goto LABEL_105;
            }
          }
          break;
        }
      }
    }
LABEL_105:
    int v32 = 0;
LABEL_106:
    uint64_t v33 = (void *)[v6 numberWithSQL:@"SELECT 1 from client_items LIMIT 1"];
    int v34 = [v33 BOOLValue];

    if ((v34 & v32) == 1)
    {
      long long v35 = brc_bread_crumbs();
      long long v36 = brc_default_log();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG)) {
        br_update_tables_30_000_cold_2();
      }

      uint64_t v37 = [v67 unsignedLongLongValue];
      id v38 = v6;
      long long v39 = currentClientStateDictionary(v38);
      long long v40 = objc_opt_new();
      long long v74 = 0u;
      long long v75 = 0u;
      long long v72 = 0u;
      long long v73 = 0u;
      id v41 = v39;
      uint64_t v42 = [v41 countByEnumeratingWithState:&v72 objects:&v76 count:16];
      if (v42)
      {
        uint64_t v43 = *(void *)v73;
        do
        {
          for (uint64_t i = 0; i != v42; ++i)
          {
            if (*(void *)v73 != v43) {
              objc_enumerationMutation(v41);
            }
            long long v45 = *(void **)(*((void *)&v72 + 1) + 8 * i);
            if ([v45 hasPrefix:@"fsevents"]) {
              [v40 addObject:v45];
            }
          }
          uint64_t v42 = [v41 countByEnumeratingWithState:&v72 objects:&v76 count:16];
        }
        while (v42);
      }

      [v41 removeObjectsForKeys:v40];
      [v41 setObject:&unk_26F3DD238 forKeyedSubscript:@"kBRCFPFSMigrationStateKey"];
      long long v46 = objc_opt_new();
      long long v47 = [v46 UUIDString];
      [v41 setObject:v47 forKeyedSubscript:@"kBRCFPFSMigrationUUIDKey"];

      long long v48 = [MEMORY[0x263EFF910] now];
      [v41 setObject:v48 forKeyedSubscript:@"kBRCFPFSMigrationStartTimeKey"];

      long long v49 = [NSNumber numberWithUnsignedLongLong:v37];
      [v41 setObject:v49 forKeyedSubscript:@"kBRCFPFSMigrationInitialItemCountKey"];

      long long v50 = [NSNumber numberWithUnsignedLongLong:v64];
      [v41 setObject:v50 forKeyedSubscript:@"kBRCFPFSMigrationInitialItemsNeedMigratingCountKey"];

      [v41 setObject:&unk_26F3DD250 forKeyedSubscript:@"kBRCFPFSMigrationMigratedTypesStatKey"];
      [v41 setObject:&unk_26F3DD250 forKeyedSubscript:@"kBRCFPFSMigrationNonMigratedTypesStatKey"];
      [v41 setObject:&unk_26F3DD250 forKeyedSubscript:@"kBRCFPFSMigrationBouncedItemCountStatKey"];
      [v41 setObject:&unk_26F3DD250 forKeyedSubscript:@"kBRCFPFSMigrationBouncedMatrixStatKey"];
      [v41 setObject:&unk_26F3DD250 forKeyedSubscript:@"kBRCFPFSMigrationNewItemsInDBStatKey"];
      char v51 = [v38 execute:@"UPDATE client_state SET v = %@", v41];
      long long v52 = brc_bread_crumbs();
      long long v53 = brc_default_log();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_DEBUG)) {
        br_update_tables_30_000_cold_1();
      }

      if ((v51 & 1) == 0) {
        goto LABEL_137;
      }
    }
    else
    {
      uint64_t v54 = [v6 lastError];
      if (v54)
      {
        uint64_t v55 = [v6 lastError];
        char v56 = [v55 isSqliteErrorCode:12];

        if ((v56 & 1) == 0)
        {
          uint64_t v59 = brc_bread_crumbs();
          unint64_t v60 = brc_default_log();
          if (os_log_type_enabled(v60, (os_log_type_t)0x90u)) {
            br_update_tables_30_000_cold_4();
          }

          if (a4)
          {
            uint64_t v61 = [v6 lastError];
            id v62 = *a4;
            *a4 = (void *)v61;
          }
          goto LABEL_137;
        }
      }
      char v57 = brc_bread_crumbs();
      uint64_t v58 = brc_default_log();
      if (os_log_type_enabled(v58, OS_LOG_TYPE_DEBUG)) {
        br_update_tables_30_000_cold_3();
      }

      if (!v32 || !dropFPFSMigrationTablesWithDB(v6))
      {
LABEL_137:
        uint64_t v9 = 0;
        goto LABEL_138;
      }
    }
    if ([v6 execute:@"INSERT INTO client_uploads  (throttle_id, zone_rowid, app_library_rowid, throttle_state, transfer_queue, transfer_size) SELECT rowid, zone_rowid, app_library_rowid, 1, '_prepare', version_size + version_thumb_size FROM client_items WHERE item_localsyncupstate == %d", 999]&& objc_msgSend(v6, "execute:", @"UPDATE client_items SET item_localsyncupstate = 3 WHERE item_localsyncupstate = %d", 999)&& objc_msgSend(v6, "execute:", @"UPDATE client_items SET item_localsyncupstate = 4 WHERE item_localsyncupstate = %d", 888)&& recursive_table_recreate_schema(v6))
    {
      uint64_t v9 = [v6 execute:@"CREATE TABLE IF NOT EXISTS fpfs_folders_not_migrated(item_id blob NOT NULL, zone_rowid integer NOT NULL, PRIMARY KEY (item_id, zone_rowid))"];
LABEL_138:

      goto LABEL_139;
    }
    goto LABEL_137;
  }
  uint64_t v9 = 1;
LABEL_139:

  return v9;
}

void sub_23FB45214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

uint64_t br_update_tables_30_001(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"ALTER TABLE client_items ADD COLUMN fp_creation_item_identifier text default null"];
  }
}

uint64_t br_update_tables_30_002()
{
  return 1;
}

uint64_t br_update_tables_30_003()
{
  return 1;
}

uint64_t br_update_tables_30_004(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    uint64_t v3 = @"ALTER TABLE server_boot_history ADD COLUMN device_id integer DEFAULT NULL";
  }
  else {
    uint64_t v3 = @"ALTER TABLE boot_history ADD COLUMN device_id integer DEFAULT NULL";
  }
  return [a2 execute:v3];
}

uint64_t br_update_tables_30_005(uint64_t a1, void *a2, char a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v6 = [v4 execute:@"DROP INDEX \"client_items/download_job\""];
    char v7 = currentClientStateDictionary(v5);
    uint64_t v8 = v7;
    if (v6
      && ([v7 objectForKeyedSubscript:@"kBRCFPFSMigrationStateKey"],
          uint64_t v9 = objc_claimAutoreleasedReturnValue(),
          int v10 = [v9 integerValue],
          v9,
          v10 == 1))
    {
      uint64_t v11 = brc_bread_crumbs();
      char v12 = brc_default_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
        br_update_tables_30_005_cold_1();
      }

      uint64_t v6 = [v5 execute:@"CREATE INDEX \"client_items/trashed_items_migration\" ON client_items(item_localsyncupstate) WHERE item_scope = 3 AND item_localsyncupstate = 5"];
    }
    else
    {
      uint64_t v13 = brc_bread_crumbs();
      int v14 = brc_default_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
        br_update_tables_30_005_cold_2();
      }
    }
  }

  return v6;
}

uint64_t br_update_tables_30_006()
{
  return 1;
}

uint64_t br_update_tables_30_007()
{
  return 1;
}

uint64_t br_update_tables_30_008()
{
  return 1;
}

uint64_t br_update_tables_30_009(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX \"client_items/trashed_items_enumerator\" ON client_items (item_notifs_rank) WHERE item_scope = 3 AND item_user_visible = 1"];
  }
}

uint64_t br_update_tables_30_010(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = [v4 execute:@"DROP INDEX IF EXISTS \"client_sync_up/sync_state_index\""];
  int v6 = v5 & [v4 execute:@"CREATE INDEX IF NOT EXISTS \"client_sync_up/throttle_state_index\" ON client_sync_up (throttle_state, zone_rowid) WHERE throttle_state != 0"];
  int v7 = [v4 execute:@"DROP INDEX IF EXISTS \"client_uploads/blocked_on_sync_up_state_index\""];
  unsigned int v8 = [v4 execute:@"CREATE INDEX \"client_uploads/blocked_on_sync_up_state_index\" ON client_uploads (throttle_state) WHERE throttle_state = 31"];

  return v6 & v7 & v8;
}

uint64_t br_update_tables_30_011()
{
  return 1;
}

uint64_t br_update_tables_30_012(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"UPDATE client_uploads AS cu SET throttle_state = 1 WHERE cu.throttle_state = 33 AND (SELECT 1 from client_zones AS cz WHERE cz.rowid = cu.zone_rowid AND cz.zone_owner != %@)", *MEMORY[0x263EFD488]];
  }
}

uint64_t br_update_tables_30_013(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"DELETE FROM \"client_items\" AS ci WHERE ci.item_file_id = 0 AND ci.item_localsyncupstate IN (5, 6) AND ci.item_filename IS NULL AND ci.item_bouncedname IS NULL AND ci.item_stat_ckinfo IS NULL AND NOT EXISTS (SELECT 1 FROM \"server_items\" AS si WHERE si.item_id = ci.item_id)"];
  }
}

uint64_t br_update_tables_30_014()
{
  return 1;
}

uint64_t br_update_tables_30_015(uint64_t a1, void *a2, char a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v4 = a2;
  int v5 = v4;
  if (a3)
  {
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v6 = [v4 execute:@"UPDATE client_uploads SET transfer_queue = '_prepare', transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL WHERE throttle_state = 1 AND upload_error LIKE '%%(16/3002)%%'"];
    int v7 = brc_bread_crumbs();
    unsigned int v8 = brc_default_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 134218242;
      uint64_t v11 = [v5 changes];
      __int16 v12 = 2112;
      uint64_t v13 = v7;
      _os_log_impl(&dword_23FA42000, v8, OS_LOG_TYPE_DEFAULT, "[NOTICE] Recovered %lld stuck upload jobs%@", (uint8_t *)&v10, 0x16u);
    }
  }
  return v6;
}

uint64_t br_update_tables_30_016(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX \"client_items/corrupt_sharing_options\" ON client_items(rowid) WHERE zone_rowid != item_parent_zone_rowid AND (item_sharing_options & 4) = 0"];
  }
}

uint64_t br_update_tables_30_017(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX IF EXISTS \"ciconia_history/counting_index\""])
  {
    uint64_t v8 = [v7 execute:@"DROP TABLE IF EXISTS ciconia_history"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_30_018(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"ALTER TABLE server_items ADD COLUMN content_boundary_key blob"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_30_019(uint64_t a1, void *a2)
{
  return [a2 execute:@"CREATE TABLE completed_db_fixups(fixup_version integer PRIMARY KEY)"];
}

uint64_t br_update_tables_30_020(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (!a3)
  {
    if ([v6 execute:@"ALTER TABLE app_libraries ADD COLUMN child_basehash_salt blob default null"])
    {
      uint64_t v8 = @"ALTER TABLE app_libraries ADD COLUMN salting_state integer default 1";
      goto LABEL_7;
    }
LABEL_8:
    uint64_t v9 = 0;
    goto LABEL_9;
  }
  if (![v6 execute:@"ALTER TABLE server_items ADD COLUMN child_basehash_salt blob default null"]|| (objc_msgSend(v7, "execute:", @"ALTER TABLE server_items ADD COLUMN basehash_salt_validation_key blob default null") & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v8 = @"ALTER TABLE server_items ADD COLUMN salting_state integer default 1";
LABEL_7:
  uint64_t v9 = [v7 execute:v8];
LABEL_9:

  return v9;
}

uint64_t br_update_tables_31_000(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP TABLE IF EXISTS telemetry_events"] {
         && [v7 execute:@"DROP INDEX IF EXISTS \"telemetry_events/priority\""])
  }
  {
    uint64_t v8 = [v7 execute:@"DROP INDEX IF EXISTS \"telemetry_events/priority__rowid\""];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_31_001(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX \"client_items/fp_creation_item_identifier\" ON client_items (fp_creation_item_identifier) WHERE fp_creation_item_identifier IS NOT NULL"];
  }
}

uint64_t br_update_tables_31_002(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = [v4 execute:@"ALTER TABLE item_errors RENAME TO temp_item_errors"];
  int v6 = v5 & item_errors_recreate_schema(v4, 1);
  int v7 = [v4 execute:@"INSERT OR REPLACE INTO item_errors SELECT * FROM temp_item_errors"];
  unsigned int v8 = [v4 execute:@"DROP TABLE temp_item_errors"];

  return v6 & v7 & v8;
}

uint64_t br_update_tables_31_003(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE TABLE aggregated_daily_telemetry(app_telemetry_identifier integer NOT NULL, zone_mangled_id text NOT NULL, item_id text NOT NULL, advanced_data_protection_enabled text NOT NULL, error_domain text NOT NULL, error_code int NOT NULL, error_description text NOT NULL, count int NOT NULL DEFAULT 1, PRIMARY KEY (app_telemetry_identifier, zone_mangled_id, item_id, advanced_data_protection_enabled, error_domain, error_code))"];
  }
}

uint64_t br_update_tables_31_004(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"ALTER TABLE aggregated_daily_telemetry RENAME advanced_data_protection_enabled TO enhanced_drive_privacy_enabled"];
  }
}

uint64_t br_update_tables_31_005(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = [v4 execute:@"CREATE TABLE named_throttles_history(throttle_id text NOT NULL, sub_category text NOT NULL, last_run integer NOT NULL, os_version text NOT NULL, expiration integer NOT NULL, allow_same_build integer NOT NULL, PRIMARY KEY (throttle_id, sub_category))"];
  int v6 = v5 & [v4 execute:@"CREATE INDEX \"named_throttles_history/throttle_id\"ON named_throttles_history (throttle_id)"];
  unsigned int v7 = [v4 execute:@"CREATE INDEX \"named_throttles_history/expiration\"ON named_throttles_history (expiration)"];

  return v6 & v7;
}

uint64_t br_update_tables_31_006(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX IF NOT EXISTS \"client_uploads/throttle_state\" ON client_uploads (throttle_state)"];
  }
}

uint64_t br_update_tables_31_100()
{
  return 1;
}

uint64_t br_update_tables_31_101()
{
  return 1;
}

uint64_t br_update_tables_31_102(uint64_t a1, void *a2, int a3, void **a4)
{
  id v6 = a2;
  unsigned int v7 = v6;
  if (!a3)
  {
    id v16 = currentClientStateDictionary(v6);
    [v16 removeObjectForKey:@"localMigrationKey"];
    uint64_t v15 = [v7 execute:@"UPDATE client_state SET v = %@", v16];

    goto LABEL_13;
  }
  unsigned int v8 = (void *)[v6 fetch:@"SELECT state FROM server_state"];
  if (![v8 next])
  {
    int v10 = 0;
LABEL_12:

    uint64_t v15 = 1;
    goto LABEL_13;
  }
  uint64_t v9 = [v8 unarchivedObjectOfClass:objc_opt_class() atIndex:0];
  int v10 = v9;
  if (!v9) {
    goto LABEL_12;
  }
  [v9 abortMigrationsOfMigrationKey:@"private-zones-document-additional-resources"];
  if ([v7 execute:@"UPDATE server_state SET state = %@", v10]) {
    goto LABEL_12;
  }
  if (a4)
  {
    uint64_t v11 = [v7 lastError];
    __int16 v12 = *a4;
    *a4 = (void *)v11;
  }
  uint64_t v13 = brc_bread_crumbs();
  uint64_t v14 = brc_default_log();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
    br_create_tables_initial_cold_1();
  }

  uint64_t v15 = 0;
LABEL_13:

  return v15;
}

uint64_t br_update_tables_31_103(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  unsigned int v7 = v6;
  if ((a3 & 1) == 0)
  {
    [v6 execute:@"UPDATE client_uploads SET throttle_state = 1, next_retry_stamp = 0  WHERE throttle_id IN (SELECT cu.throttle_id from client_uploads AS cu LEFT JOIN client_items AS ci                       ON cu.throttle_id = ci.rowid                        WHERE cu.throttle_state = 33                         AND call_block(%p, ci.version_upload_error))", &__block_literal_global_2113];
    if ([v7 changes])
    {
      unsigned int v8 = brc_bread_crumbs();
      uint64_t v9 = brc_default_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
        br_update_tables_31_103_cold_1();
      }
    }
  }

  return 1;
}

uint64_t br_update_tables_31_104(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"CREATE INDEX \"tombstones/file_object_id\"ON tombstones (file_object_id)"];
  }
}

uint64_t br_update_tables_31_105(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  unsigned int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP TRIGGER IF EXISTS \"client_pkg_upload_items/reduce_pkg_size\""]&& objc_msgSend(v7, "execute:", @"DROP TRIGGER IF EXISTS \"client_pkg_upload_items/increase_pkg_size\"")&& objc_msgSend(v7, "execute:", @"DROP TRIGGER IF EXISTS \"client_pkg_upload_items/update_pkg_size\"")&& objc_msgSend(v7, "execute:", @"ALTER TABLE client_pkg_upload_sizes DROP COLUMN aggregate_size")&& objc_msgSend(v7, "execute:", @"CREATE TRIGGER \"client_pkg_upload_items/increase_pkg_size\" AFTER INSERT ON client_pkg_upload_items BEGIN INSERT OR IGNORE INTO client_pkg_upload_sizes VALUES (new.item_rowid, 0); UPDATE client_pkg_upload_sizes SET largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END"))
  {
    uint64_t v8 = [v7 execute:@"CREATE TRIGGER \"client_pkg_upload_items/update_pkg_size\" AFTER UPDATE OF size ON client_pkg_upload_items BEGIN UPDATE client_pkg_upload_sizes SET largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_rowid = new.item_rowid; END"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_31_106(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  unsigned int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP TRIGGER IF EXISTS \"item_errors/disk-insertion\""] {
         && [v7 execute:@"DROP TRIGGER IF EXISTS \"item_errors/disk-deletion\""]
  }
         && [v7 execute:@"DROP TRIGGER IF EXISTS \"item_errors/disk-update-away\""])
  {
    uint64_t v8 = [v7 execute:@"DROP TRIGGER IF EXISTS \"item_errors/disk-update-into\""];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_32_000(void *a1, void *a2, char a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  if ((a3 & 1) == 0)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    unsigned int v7 = [v5 _privateClientZonesEnumerator];
    uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v27 count:16];
    if (v8)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(void *)v22;
      *(void *)&long long v9 = 138412290;
      long long v20 = v9;
      do
      {
        uint64_t v12 = 0;
        do
        {
          if (*(void *)v22 != v11) {
            objc_enumerationMutation(v7);
          }
          uint64_t v13 = *(void **)(*((void *)&v21 + 1) + 8 * v12);
          if ((objc_msgSend(v13, "state", v20) & 0x400) != 0)
          {
            uint64_t v14 = [v13 zoneName];
            uint64_t v15 = [v5 _appLibraryByName:v14 db:v6];

            if (!v15)
            {
              id v16 = brc_bread_crumbs();
              uint64_t v17 = brc_default_log();
              if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
              {
                *(_DWORD *)buf = v20;
                char v26 = v16;
                _os_log_fault_impl(&dword_23FA42000, v17, OS_LOG_TYPE_FAULT, "[CRIT] Assertion failed: appLibrary%@", buf, 0xCu);
              }
            }
            [v15 setStateBits:2];
            [v13 clearStateBits:1024];
            [v5 saveAppLibraryToDB:v15];
            [v5 saveClientZoneToDB:v13];
          }
          ++v12;
        }
        while (v10 != v12);
        uint64_t v18 = [v7 countByEnumeratingWithState:&v21 objects:v27 count:16];
        uint64_t v10 = v18;
      }
      while (v18);
    }
  }
  return 1;
}

uint64_t br_update_tables_32_001(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = 23"];
  }
}

uint64_t br_update_tables_32_002(uint64_t a1, void *a2, char a3)
{
  id v4 = a2;
  id v5 = v4;
  if (a3)
  {
    uint64_t v6 = 1;
  }
  else
  {
    if ([v4 execute:@"DROP TRIGGER IF EXISTS \"client_items/update_size\""]
      && [v5 execute:@"DROP TRIGGER IF EXISTS \"client_items/update_app_library\""]
      && [v5 execute:@"DROP TRIGGER IF EXISTS \"client_items/insert_item\""]
      && [v5 execute:@"DROP TRIGGER IF EXISTS \"client_items/delete_item\""]
      && [v5 execute:@"ALTER TABLE app_libraries DROP COLUMN auto_document_count"]
      && [v5 execute:@"ALTER TABLE app_libraries DROP COLUMN auto_aggregate_size"])
    {
      int v7 = [v5 execute:@"ALTER TABLE app_libraries DROP COLUMN auto_client_item_count"];
    }
    else
    {
      int v7 = 0;
    }
    int v8 = v7 & [v5 execute:@"CREATE TRIGGER IF NOT EXISTS \"client_items/update_app_library\" AFTER UPDATE OF app_library_rowid ON client_items WHEN new.app_library_rowid <> old.app_library_rowid BEGIN  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END"];
    int v9 = [v5 execute:@"CREATE TRIGGER \"client_items/insert_item\" AFTER INSERT ON client_items BEGIN  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END"];
    uint64_t v6 = v8 & v9 & [v5 execute:@"CREATE TRIGGER \"client_items/delete_item\" BEFORE delete ON client_items BEGIN  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2; END"];
  }

  return v6;
}

uint64_t br_update_tables_32_003(uint64_t a1, void *a2, int a3)
{
  if (a3) {
    return [a2 execute:@"CREATE INDEX \"server_items/partially_salted_folders\" ON server_items (zone_rowid, item_id) WHERE item_type IN (0, 9, 10) AND salting_state = 2"];
  }
  else {
    return 1;
  }
}

uint64_t br_update_tables_32_004(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  int v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"DROP INDEX IF EXISTS \"tombstones/notif_rank\""] {
         && [v7 execute:@"ALTER TABLE tombstones ADD COLUMN expiration integer"])
  }
  {
    uint64_t v8 = [v7 execute:@"CREATE INDEX \"tombstones/expiration\" ON tombstones (notif_rank, expiration)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_update_tables_32_005(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = [v4 execute:@"ALTER TABLE aggregated_daily_telemetry RENAME TO temp_aggregated_daily_telemetry"];
  int v6 = v5 & [v4 execute:@"CREATE TABLE aggregated_daily_telemetry( app_telemetry_identifier integer NOT NULL, zone_mangled_id text NOT NULL, item_id text NOT NULL, enhanced_drive_privacy_enabled text NOT NULL, error_domain text NOT NULL, error_code int NOT NULL, error_description text NOT NULL, underlying_error_domain text NOT NULL DEFAULT '', underlying_error_code int NOT NULL DEFAULT 0, count int NOT NULL DEFAULT 1, PRIMARY KEY (app_telemetry_identifier, zone_mangled_id, item_id, enhanced_drive_privacy_enabled, error_domain, error_code, underlying_error_domain, underlying_error_code))"];
  int v7 = [v4 execute:@"INSERT OR REPLACE INTO aggregated_daily_telemetry SELECT app_telemetry_identifier, zone_mangled_id, item_id, enhanced_drive_privacy_enabled, error_domain, error_code, error_description, '', 0, count FROM temp_aggregated_daily_telemetry"];
  int v8 = v6 & v7 & [v4 execute:@"DROP TABLE temp_aggregated_daily_telemetry"];
  int v9 = [v4 execute:@"ALTER TABLE item_errors RENAME TO temp_item_errors"];
  int v10 = v9 & item_errors_recreate_schema(v4, 2);
  int v11 = v8 & v10 & [v4 execute:@"INSERT OR REPLACE INTO item_errors SELECT item_rowid, error_domain, error_code, error_message, error_timestamp, '', 0, service FROM temp_item_errors"];
  unsigned int v12 = [v4 execute:@"DROP TABLE temp_item_errors"];

  return v11 & v12;
}

uint64_t br_internal_fixup_10_000(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  int v5 = (void *)[v4 fetchObjectOfClass:objc_opt_class(), @"SELECT 1 FROM client_items WHERE item_state in (0, -1)  AND NOT EXISTS (SELECT 1 FROM app_libraries WHERE client_items.app_library_rowid = app_libraries.rowid)" sql];

  uint64_t v3 = [v5 BOOLValue] ^ 1;
  return v3;
}

uint64_t br_internal_fixup_20_005(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return recursive_table_recreate_schema(a2);
  }
}

uint64_t br_fixup_tables_4_013(void *a1, void *a2, char a3)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  if (a3)
  {
    uint64_t v7 = 1;
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    int v8 = [v5 _privateClientZonesEnumerator];
    uint64_t v9 = [v8 countByEnumeratingWithState:&v23 objects:v28 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v24;
      LOBYTE(v7) = 1;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v24 != v11) {
            objc_enumerationMutation(v8);
          }
          if (v7) {
            uint64_t v7 = upgradeItemScopesForClientZone(*(void **)(*((void *)&v23 + 1) + 8 * i), v6);
          }
          else {
            uint64_t v7 = 0;
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v23 objects:v28 count:16];
      }
      while (v10);
    }
    else
    {
      uint64_t v7 = 1;
    }

    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    uint64_t v13 = objc_msgSend(v5, "_sharedClientZonesEnumerator", 0);
    uint64_t v14 = [v13 countByEnumeratingWithState:&v19 objects:v27 count:16];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)v20;
      do
      {
        for (uint64_t j = 0; j != v15; ++j)
        {
          if (*(void *)v20 != v16) {
            objc_enumerationMutation(v13);
          }
          if (v7) {
            uint64_t v7 = upgradeItemScopesForClientZone(*(void **)(*((void *)&v19 + 1) + 8 * j), v6);
          }
          else {
            uint64_t v7 = 0;
          }
        }
        uint64_t v15 = [v13 countByEnumeratingWithState:&v19 objects:v27 count:16];
      }
      while (v15);
    }
  }
  return v7;
}

uint64_t br_fixup_tables_4_017()
{
  return 1;
}

uint64_t br_fixup_tables_4_019(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (!a3)
  {
    if ([v6 execute:@"UPDATE client_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)", &__block_literal_global_2208, &__block_literal_global_2208]&& objc_msgSend(v7, "execute:", @"UPDATE client_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)", &__block_literal_global_2208, &__block_literal_global_2208)&& objc_msgSend(v7, "execute:", @"UPDATE client_items SET item_localname = call_block(%@, item_localname) WHERE item_localname IS NOT NULL AND item_localname != call_block(%@, item_localname)", &__block_literal_global_2208, &__block_literal_global_2208))
    {
      int v8 = @"UPDATE client_items SET item_bouncedname = call_block(%@, item_bouncedname) WHERE item_bouncedname IS NOT NULL AND item_bouncedname != call_block(%@, item_bouncedname)";
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v9 = 0;
    goto LABEL_11;
  }
  if (![v6 execute:@"UPDATE server_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)", &__block_literal_global_2208, &__block_literal_global_2208]|| (objc_msgSend(v7, "execute:", @"UPDATE server_items SET item_origname = call_block(%@, item_origname) WHERE item_origname IS NOT NULL AND item_origname != call_block(%@, item_origname)", &__block_literal_global_2208, &__block_literal_global_2208) & 1) == 0)
  {
    goto LABEL_10;
  }
  int v8 = @"UPDATE server_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)";
LABEL_9:
  uint64_t v9 = objc_msgSend(v7, "execute:", v8, &__block_literal_global_2208, &__block_literal_global_2208);
LABEL_11:

  return v9;
}

uint64_t br_fixup_tables_4_020(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"UPDATE client_document_access     SET evictable = call_block(%@, access_time, (SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid))  WHERE evictable > 0", &__block_literal_global_2234];
  }
}

uint64_t br_fixup_tables_7_001(void *a1, void *a2, int a3, void **a4)
{
  if (!a3) {
    return 1;
  }
  id v6 = a2;
  id v7 = a1;
  int v8 = +[BRCMigrationQueryOperation documentSharesMigrationKey];
  uint64_t v9 = _br_setupMigrationQueryOnServerTruth(v8, v7, v6, a4);

  return v9;
}

uint64_t br_fixup_tables_7_002(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else if ([v6 execute:@"UPDATE client_uploads SET throttle_state = 1 WHERE throttle_id in (SELECT throttle_id FROM client_items, client_uploads WHERE client_items.rowid = client_uploads.throttle_id AND item_localsyncupstate = 3)"])
  {
    uint64_t v8 = [v7 execute:@"INSERT INTO client_uploads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp, app_library_rowid) SELECT client_items.rowid, zone_rowid, 1, 0, 0, 0, 0, item_id, \"_prepare\", version_size + version_thumb_size, NULL, NULL, NULL, NULL, -1, 0, app_library_rowid FROM client_items WHERE item_type IN (1, 6) AND item_localsyncupstate = 3 AND rowid NOT IN (SELECT throttle_id from client_uploads)"];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t br_fixup_tables_15_004(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  else {
    return [a2 execute:@"INSERT OR REPLACE INTO client_uploads  (throttle_id, zone_rowid, app_library_rowid, transfer_size, throttle_state, transfer_queue) SELECT rowid, zone_rowid, app_library_rowid, version_size + version_thumb_size, 1, %s FROM client_items WHERE item_localsyncupstate == 3 AND rowid NOT IN (SELECT throttle_id FROM client_uploads WHERE throttle_state != 0)", "_prepare"];
  }
}

uint64_t br_unmigrated_items_fixup(void *a1, void *a2, char a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (a3)
  {
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t v9 = (void *)[v6 numberWithSQL:@"SELECT 1 FROM client_items WHERE item_localsyncupstate IN (5, 6) LIMIT 1"];
    if ([v9 BOOLValue])
    {
      uint64_t v10 = (void *)[v7 fetch:@"SELECT * FROM client_state"];
      uint64_t v11 = +[BRCAccountSessionFPFS _classesForClientState];
      if ([v10 next])
      {
        unsigned int v12 = [v10 unarchivedObjectOfClasses:v11 atIndex:0];
        uint64_t v13 = (void *)[v12 mutableCopy];

        [v10 close];
        uint64_t v14 = [v13 objectForKeyedSubscript:@"kBRCFPFSMigrationStateKey"];
        int v15 = [v14 intValue];
        if (v15 && v15 != 3)
        {
          uint64_t v8 = 1;
        }
        else
        {
          [v13 setObject:&unk_26F3DD268 forKeyedSubscript:@"kBRCFPFSMigrationStateKey"];
          uint64_t v8 = [v7 execute:@"UPDATE client_state SET v = %@", v13];
          uint64_t v16 = brc_bread_crumbs();
          uint64_t v17 = brc_default_log();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            long long v20 = v13;
            __int16 v21 = 2112;
            long long v22 = v16;
            _os_log_impl(&dword_23FA42000, v17, OS_LOG_TYPE_DEFAULT, "[WARNING] Updated client state to %@%@", buf, 0x16u);
          }
        }
      }
      else
      {
        uint64_t v13 = brc_bread_crumbs();
        uint64_t v14 = brc_default_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
          br_unmigrated_items_fixup_cold_1();
        }
        uint64_t v8 = 0;
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
  }
  return v8;
}

uint64_t br_resolve_fp_cannot_synchronize_error()
{
  uint64_t v0 = objc_msgSend(MEMORY[0x263F055B8], "br_sharedProviderManager");
  if (v0)
  {
    id v1 = [MEMORY[0x263F087E8] errorWithDomain:*MEMORY[0x263F05370] code:-2005 userInfo:MEMORY[0x263EFFA78]];
    [v0 signalErrorResolved:v1 completionHandler:&__block_literal_global_2253];
  }
  return 1;
}

uint64_t br_optimize_storage_settings_fixup(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    +[BRCImportUtil forceIngestionForItemID:*MEMORY[0x263F053F0] completionHandler:&__block_literal_global_2256];
  }
  return 1;
}

uint64_t br_reindex_file_provider_items_fixup(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return 1;
  }
  id v4 = a2;
  id v5 = objc_opt_new();
  id v6 = [v5 UUIDString];
  uint64_t v7 = [v4 execute:@"UPDATE backup_detector SET uuid = %@", v6];

  return v7;
}

uint64_t br_db_fixup_0(uint64_t a1, void *a2, char a3)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v4 = a2;
  if (a3)
  {
    uint64_t v5 = 1;
  }
  else
  {
    id v6 = brc_bread_crumbs();
    uint64_t v7 = brc_default_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412290;
      uint64_t v13 = (uint64_t)v6;
      _os_log_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEFAULT, "[NOTICE] Recovering symbolic links%@", (uint8_t *)&v12, 0xCu);
    }

    uint64_t v5 = [v4 execute:@"UPDATE client_items SET item_notifs_rank = bump_notifs_rank_and_trigger_notifs(rowid) WHERE item_type = 5"];
    uint64_t v8 = brc_bread_crumbs();
    uint64_t v9 = brc_default_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = [v4 changes];
      int v12 = 134218242;
      uint64_t v13 = v10;
      __int16 v14 = 2112;
      int v15 = v8;
      _os_log_impl(&dword_23FA42000, v9, OS_LOG_TYPE_DEFAULT, "[NOTICE] Recovered %lld symbolic links%@", (uint8_t *)&v12, 0x16u);
    }
  }
  return v5;
}

uint64_t br_db_fixup_1(uint64_t a1, void *a2, char a3)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v4 = a2;
  if (a3)
  {
    uint64_t v5 = 1;
  }
  else
  {
    id v6 = brc_bread_crumbs();
    uint64_t v7 = brc_default_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412290;
      uint64_t v13 = (uint64_t)v6;
      _os_log_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEFAULT, "[NOTICE] Recovering packages%@", (uint8_t *)&v12, 0xCu);
    }

    uint64_t v5 = [v4 execute:@"UPDATE client_items SET item_notifs_rank = bump_notifs_rank_and_trigger_notifs(rowid) WHERE item_type IN (1, 2, 8) AND HEX(SUBSTR(version_content_signature, 1, 1)) = '1B'"];
    uint64_t v8 = brc_bread_crumbs();
    uint64_t v9 = brc_default_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = [v4 changes];
      int v12 = 134218242;
      uint64_t v13 = v10;
      __int16 v14 = 2112;
      int v15 = v8;
      _os_log_impl(&dword_23FA42000, v9, OS_LOG_TYPE_DEFAULT, "[NOTICE] Recovered %lld packages%@", (uint8_t *)&v12, 0x16u);
    }
  }
  return v5;
}

uint64_t br_db_fixup_2(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  uint64_t v5 = v4;
  if ((a3 & 1) == 0)
  {
    id v6 = v4;
    uint64_t v7 = +[BRCUserDefaults defaultsForMangledID:0];
    [v7 dbFixupContentPolicyRecoverAfterTimeInterval];
    dispatch_time_t v9 = dispatch_time(0, (uint64_t)(v8 * 1000000000.0));
    uint64_t v10 = [v6 dbFixupQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __br_fixup_contentPolicy_block_invoke;
    block[3] = &unk_26507ED70;
    id v14 = v6;
    id v11 = v6;
    dispatch_after(v9, v10, block);
  }
  return 1;
}

void __br_update_tables_1_000_block_invoke(uint64_t a1, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  v15[1] = *MEMORY[0x263EF8340];
  uint64_t v5 = *a4;
  id v6 = (void *)MEMORY[0x263EFFA08];
  uint64_t v7 = objc_opt_class();
  double v8 = objc_msgSend(v6, "setWithObjects:", v7, objc_opt_class(), 0);
  dispatch_time_t v9 = _unarchivedSqliteValue(v5, v8);

  if ([v9 count])
  {
    id v14 = @"l";
    v15[0] = v9;
    id v10 = [NSDictionary dictionaryWithObjects:v15 forKeys:&v14 count:1];
    id v11 = (void *)MEMORY[0x2455D97F0]();
    int v12 = (void *)[objc_alloc(MEMORY[0x263F08910]) initRequiringSecureCoding:1];
    [v12 encodeObject:v10 forKey:*MEMORY[0x263F081D0]];
    id v13 = [v12 encodedData];
    sqlite3_result_blob(a2, (const void *)[v13 bytes], objc_msgSend(v13, "length"), (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
  }
  else
  {
    sqlite3_result_null(a2);
  }
}

id _unarchivedSqliteValue(sqlite3_value *a1, void *a2)
{
  uint64_t v3 = (objc_class *)MEMORY[0x263EFF8F8];
  id v4 = a2;
  id v5 = [v3 alloc];
  id v6 = sqlite3_value_blob(a1);
  uint64_t v7 = (void *)[v5 initWithBytesNoCopy:v6 length:sqlite3_value_bytes(a1) freeWhenDone:0];
  double v8 = (void *)[objc_alloc(MEMORY[0x263F08928]) initForReadingFromData:v7 error:0];
  dispatch_time_t v9 = [v8 decodeObjectOfClasses:v4 forKey:*MEMORY[0x263F081D0]];

  return v9;
}

void __br_update_tables_2_000_block_invoke(uint64_t a1, sqlite3_context *a2, uint64_t a3, void *a4)
{
  id v6 = *(void **)(a1 + 32);
  uint64_t v7 = (void *)[NSString newFromSqliteValue:*a4];
  id v10 = [v6 objectForKeyedSubscript:v7];

  if (v10)
  {
    sqlite3_int64 v8 = [v10 unsignedLongLongValue];
  }
  else
  {
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
    sqlite3_int64 v8 = *(void *)(v9 + 24);
    *(void *)(v9 + 24) = v8 + 1;
  }
  sqlite3_result_int64(a2, v8);
}

void __br_update_tables_3_002_block_invoke(uint64_t a1, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  if (sqlite3_value_type(*a4) == 4)
  {
    _unarchivedSqliteValue(*a4, *(void **)(a1 + 32));
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      sqlite3_result_int(a2, [v7 options]);

      return;
    }
  }
  sqlite3_result_int(a2, 0);
}

void __br_update_tables_7_000_block_invoke(uint64_t a1, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v7 = (unsigned __int8 *)sqlite3_value_blob(*a4);
  int v8 = sqlite3_value_bytes(*a4);
  int v9 = v8;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    if (v8 != 5)
    {
      id v14 = brc_bread_crumbs();
      int v15 = brc_default_log();
      if (os_log_type_enabled(v15, (os_log_type_t)0x90u)) {
        __br_update_tables_7_000_block_invoke_cold_2();
      }

      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
      int v12 = a2;
      id v11 = v7;
      int v13 = v9;
      goto LABEL_19;
    }
    id v10 = (unsigned __int8 *)sqlite3_value_blob(a4[1]);
    if (sqlite3_value_bytes(a4[1]) == 21)
    {
      if (*v7 == 1)
      {
        v22[0] = 5;
        *(_DWORD *)&v22[1] = *(_DWORD *)(v7 + 1);
        *(_OWORD *)&v22[5] = *(_OWORD *)(v10 + 5);
        id v11 = v22;
        int v12 = a2;
        int v13 = 21;
LABEL_19:
        sqlite3_result_blob(v12, v11, v13, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
        return;
      }
      uint64_t v18 = brc_bread_crumbs();
      long long v19 = brc_default_log();
      if (os_log_type_enabled(v19, (os_log_type_t)0x90u))
      {
        int v20 = *v7;
        int v21 = *v10;
        *(_DWORD *)long long v22 = 67109634;
        *(_DWORD *)&v22[4] = v20;
        *(_WORD *)&v22[8] = 1024;
        *(_DWORD *)&v22[10] = v21;
        *(_WORD *)&v22[14] = 2112;
        *(void *)&v22[16] = v18;
        _os_log_error_impl(&dword_23FA42000, v19, (os_log_type_t)0x90u, "[ERROR] type mismatch with parent %d or item %d%@", v22, 0x18u);
      }
    }
    else
    {
      uint64_t v16 = brc_bread_crumbs();
      uint64_t v17 = brc_default_log();
      if (os_log_type_enabled(v17, (os_log_type_t)0x90u)) {
        __br_update_tables_7_000_block_invoke_cold_1();
      }
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    int v12 = a2;
    id v11 = v7;
    int v13 = 5;
    goto LABEL_19;
  }
  sqlite3_result_blob(a2, v7, v8, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
}

void __br_update_tables_14_000_block_invoke(uint64_t a1, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  id v5 = [NSString stringWithUTF8String:sqlite3_value_text(*a4)];
  if (_CFURLCStringIsPromiseName())
  {
    uint64_t v6 = objc_msgSend(v5, "substringWithRange:", 1, objc_msgSend(v5, "length") - 8);

    id v5 = (void *)v6;
  }
  sqlite3_int64 v11 = 0;
  id v7 = (id)objc_msgSend(v5, "br_stringByDeletingPathBounceNo:", &v11);
  sqlite3_int64 v8 = v11;
  if ((unint64_t)v11 > 1) {
    goto LABEL_4;
  }
  int v9 = brc_bread_crumbs();
  id v10 = brc_default_log();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
    __br_update_tables_14_000_block_invoke_cold_1();
  }

  sqlite3_int64 v8 = v11;
  if (v11) {
LABEL_4:
  }
    sqlite3_result_int64(a2, v8);
  else {
    sqlite3_result_null(a2);
  }
}

void __br_update_tables_14_000_block_invoke_1171(uint64_t a1, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  uint64_t v6 = sqlite3_value_text(*a4);
  id v7 = sqlite3_value_text(a4[1]);
  if (_CFURLCStringIsPromiseName())
  {
    sqlite3_int64 v8 = (void *)MEMORY[0x2455D97F0]();
    int v9 = [NSString stringWithUTF8String:v7];
    id v10 = [NSString stringWithUTF8String:v6];
    sqlite3_int64 v11 = objc_msgSend(v9, "substringWithRange:", 1, objc_msgSend(v9, "length") - 8);

    unint64_t v23 = 0;
    uint64_t v24 = 0;
    id v22 = 0;
    int v12 = objc_msgSend(v10, "br_stringByDeletingPathBounceNo:andPathExtension:", &v24, &v22);
    id v13 = v22;
    id v14 = (id)objc_msgSend(v11, "br_stringByDeletingPathBounceNo:", &v23);
    if (v24 == v23) {
      goto LABEL_3;
    }
    if (v23 > 1) {
      goto LABEL_8;
    }
    int v20 = brc_bread_crumbs();
    int v21 = brc_default_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_FAULT)) {
      __br_update_tables_14_000_block_invoke_cold_1();
    }

    if (v23)
    {
LABEL_8:
      int v15 = NSString;
      uint64_t v16 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:");
      uint64_t v17 = [v16 stringValue];
      uint64_t v18 = objc_msgSend(v15, "br_representableHFSFileNameWithBase:suffix:extension:makeDotFile:", v12, v17, v13, 0);

      id v19 = v18;
      sqlite3_result_text(a2, (const char *)[v19 fileSystemRepresentation], -1, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
    }
    else
    {
LABEL_3:

      sqlite3_result_null(a2);
    }
  }
  else
  {
    sqlite3_result_text(a2, (const char *)v7, -1, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
  }
}

uint64_t _br_setupMigrationQueryOnServerTruth(void *a1, void *a2, void *a3, void **a4)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id v29 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = objc_alloc_init(MEMORY[0x263EFF9C0]);
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  int v9 = [v6 _privateServerZonesEnumerator:v7];
  uint64_t v10 = [v9 countByEnumeratingWithState:&v30 objects:v34 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v31;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v31 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v30 + 1) + 8 * i);
        int v15 = [v14 changeState];
        uint64_t v16 = [v15 changeToken];

        if (v16)
        {
          uint64_t v17 = [v14 mangledID];
          [v8 addObject:v17];
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v30 objects:v34 count:16];
    }
    while (v11);
  }

  if ([v8 count])
  {
    uint64_t v18 = (void *)[v7 fetch:@"SELECT state FROM server_state"];
    if ([v18 next])
    {
      id v19 = [v18 unarchivedObjectOfClass:objc_opt_class() atIndex:0];
      int v20 = v29;
      if (v19
        && ([v8 allObjects],
            int v21 = objc_claimAutoreleasedReturnValue(),
            [v19 initiateMigrationQueryForMangledIDs:v21 key:v29],
            v21,
            ([v7 execute:@"UPDATE server_state SET state = %@", v19] & 1) == 0))
      {
        if (a4)
        {
          uint64_t v23 = [v7 lastError];
          uint64_t v24 = *a4;
          *a4 = (void *)v23;
        }
        long long v25 = brc_bread_crumbs();
        long long v26 = brc_default_log();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_FAULT)) {
          br_create_tables_initial_cold_1();
        }

        uint64_t v22 = 0;
      }
      else
      {
        uint64_t v22 = 1;
      }
    }
    else
    {
      id v19 = 0;
      uint64_t v22 = 1;
      int v20 = v29;
    }
  }
  else
  {
    uint64_t v22 = 1;
    int v20 = v29;
  }

  return v22;
}

uint64_t item_errors_recreate_schema(void *a1, int a2)
{
  id v3 = a1;
  int v4 = [v3 execute:@"DROP TABLE IF EXISTS item_errors"];
  if (v4)
  {
    int v4 = [v3 execute:@"DROP INDEX IF EXISTS \"item_errors/error_group\""];
    if (v4)
    {
      int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/deletion\""];
      if (v4)
      {
        int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/upload-deletion\""];
        if (v4)
        {
          int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/upload-idle\""];
          if (v4)
          {
            int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/download-deletion\""];
            if (v4)
            {
              int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/download-idle\""];
              if (v4)
              {
                int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/quota-insertion\""];
                if (v4)
                {
                  int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/quota-deletion\""];
                  if (v4)
                  {
                    int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/quota-update-away\""];
                    if (v4)
                    {
                      int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/quota-update-into\""];
                      if (v4)
                      {
                        int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/disk-insertion\""];
                        if (v4)
                        {
                          int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/disk-deletion\""];
                          if (v4)
                          {
                            int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/disk-update-away\""];
                            if (v4) {
                              int v4 = [v3 execute:@"DROP TRIGGER IF EXISTS \"item_errors/disk-update-into\""];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (a2 == 1)
  {
    if (!v4) {
      goto LABEL_41;
    }
    id v5 = @"CREATE TABLE item_errors(item_rowid integer NOT NULL, error_domain TEXT NOT NULL default \"unknown\", error_code integer NOT NULL default 0, error_message TEXT, error_timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, service integer NOT NULL, PRIMARY KEY (item_rowid, error_domain, error_code, service))";
  }
  else
  {
    if (a2)
    {
      if (!v4) {
        goto LABEL_35;
      }
      int v4 = [v3 execute:@"CREATE TABLE item_errors(item_rowid integer NOT NULL, error_domain TEXT NOT NULL default \"unknown\", error_code integer NOT NULL default 0, error_message TEXT, error_timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, underlying_error_domain TEXT NOT NULL default '', underlying_error_code integer NOT NULL default 0, service integer NOT NULL, PRIMARY KEY (item_rowid, error_domain, error_code, underlying_error_domain, underlying_error_code, service))"];
      if (!v4) {
        goto LABEL_35;
      }
      goto LABEL_26;
    }
    if (!v4) {
      goto LABEL_41;
    }
    id v5 = @"CREATE TABLE item_errors(item_rowid integer NOT NULL, error_domain TEXT NOT NULL default \"unknown\", error_code integer NOT NULL default 0, error_message TEXT, error_timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, service integer NOT NULL, PRIMARY KEY (item_rowid, error_domain, error_code, error_message, service))";
  }
  if (([v3 execute:v5] & 1) == 0) {
    goto LABEL_41;
  }
LABEL_26:
  int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/deletion\" AFTER DELETE ON client_items BEGIN DELETE FROM item_errors WHERE item_rowid = old.rowid; END"];
  if (v4)
  {
    int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/upload-deletion\" AFTER DELETE ON client_uploads BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 1; END"];
    if (v4)
    {
      int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/upload-idle\" AFTER UPDATE OF throttle_state ON client_uploads WHEN (new.throttle_state = 0  AND old.throttle_state != 0) BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 1; END"];
      if (v4)
      {
        int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/download-deletion\" AFTER DELETE ON client_downloads BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 2; END"];
        if (v4)
        {
          int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/download-idle\" AFTER UPDATE OF throttle_state ON client_downloads WHEN (new.throttle_state = 0  AND old.throttle_state != 0) BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 2; END"];
          if (v4)
          {
            int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/quota-insertion\" AFTER INSERT ON client_uploads WHEN new.throttle_state = 32 BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, \"CKErrorDomain\", 25, 1); END"];
            if (v4)
            {
              int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/quota-deletion\" AFTER DELETE ON client_uploads WHEN old.throttle_state = 32 BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id    AND error_domain = \"CKErrorDomain\"    AND error_code = 25    AND service = 1; END"];
              if (v4)
              {
                int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/quota-update-away\" AFTER UPDATE OF throttle_state ON client_uploads WHEN (old.throttle_state = 32    AND new.throttle_state != 32) BEGIN DELETE FROM item_errors  WHERE item_rowid = old.throttle_id    AND error_domain = \"CKErrorDomain\"    AND error_code = 25    AND service = 1; END"];
                if (v4) {
                  int v4 = [v3 execute:@"CREATE TRIGGER \"item_errors/quota-update-into\" AFTER UPDATE OF throttle_state ON client_uploads WHEN (old.throttle_state != 32    AND new.throttle_state = 32) BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, \"CKErrorDomain\", 25, 1); END"];
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_35:
  if (a2 > 1)
  {
    if (v4) {
      goto LABEL_50;
    }
LABEL_41:
    uint64_t v6 = 0;
    goto LABEL_42;
  }
  if (!v4
    || ![v3 execute:@"CREATE TRIGGER \"item_errors/disk-insertion\" AFTER INSERT ON client_downloads WHEN new.throttle_state = 43 BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, \"BRCloudDocsErrorDomain\", 34, 2); END"]
    || ![v3 execute:@"CREATE TRIGGER \"item_errors/disk-deletion\" AFTER DELETE ON client_downloads WHEN old.throttle_state = 43 BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id    AND error_domain = \"BRCloudDocsErrorDomain\"    AND error_code = 34    AND service = 2; END"]
    || ![v3 execute:@"CREATE TRIGGER \"item_errors/disk-update-away\" AFTER UPDATE OF throttle_state ON client_downloads WHEN (old.throttle_state = 43  AND new.throttle_state != 43) BEGIN DELETE FROM item_errors  WHERE item_rowid = old.throttle_id    AND error_domain = \"BRCloudDocsErrorDomain\"    AND error_code = 34    AND service = 2; END"]
    || ([v3 execute:@"CREATE TRIGGER \"item_errors/disk-update-into\" AFTER UPDATE OF throttle_state ON client_downloads WHEN (old.throttle_state != 43  AND new.throttle_state = 43) BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, \"BRCloudDocsErrorDomain\", 34, 2); END"] & 1) == 0)
  {
    goto LABEL_41;
  }
LABEL_50:
  uint64_t v6 = [v3 execute:@"INSERT INTO item_errors (item_rowid, error_domain, error_code, service) SELECT throttle_id, \"CKErrorDomain\", 25, 1          FROM client_uploads WHERE throttle_state = 32"];
LABEL_42:
  id v7 = +[BRCUserDefaults defaultsForMangledID:0];
  id v8 = (void *)[v3 fetch:@"SELECT throttle_id, upload_error FROM client_uploads WHERE throttle_state != 32   AND throttle_state != 0   AND (retry_count > %llu OR throttle_state = 33)", objc_msgSend(v7, "uploadRetryCountForFailure")];
  if ([v8 next])
  {
    do
    {
      int v9 = (void *)MEMORY[0x2455D97F0]();
      uint64_t v10 = [v8 unsignedLongLongAtIndex:0];
      uint64_t v11 = [v8 objectOfClass:objc_opt_class() atIndex:1];
      uint64_t v12 = [v11 domain];
      [v3 execute:@"INSERT INTO item_errors (item_rowid, error_domain, error_code, service) VALUES (%llu, %@, %lu, 1)", v10, v12, objc_msgSend(v11, "code")];
    }
    while (([v8 next] & 1) != 0);
  }
  if (v6) {
    uint64_t v6 = [v3 execute:@"INSERT INTO item_errors (item_rowid, error_domain, error_code, service) SELECT throttle_id, \"BRCloudDocsErrorDomain\", 34, 2          FROM client_downloads WHERE throttle_state = 43"];
  }
  id v13 = (void *)[v3 fetch:@"SELECT throttle_id, download_error FROM client_downloads WHERE throttle_state != 43   AND throttle_state != 0   AND (retry_count > %llu OR throttle_state = 41)", objc_msgSend(v7, "downloadRetryCountForFailure")];

  if ([v13 next])
  {
    do
    {
      id v14 = (void *)MEMORY[0x2455D97F0]();
      uint64_t v15 = [v13 unsignedLongLongAtIndex:0];
      uint64_t v16 = [v13 objectOfClass:objc_opt_class() atIndex:1];
      uint64_t v17 = [v16 domain];
      [v3 execute:@"INSERT INTO item_errors (item_rowid, error_domain, error_code, service) VALUES (%llu, %@, %lu, 2)", v15, v17, objc_msgSend(v16, "code")];
    }
    while (([v13 next] & 1) != 0);
  }

  return v6;
}

id __br_update_tables_16_018_block_invoke(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)[*(id *)(a1 + 32) newAppLibraryFromPQLResultSet:a2 version:2];
  return v2;
}

uint64_t recursive_table_recreate_schema(void *a1)
{
  id v1 = a1;
  int v2 = [v1 execute:@"DROP TABLE IF EXISTS item_recursive_properties"];
  int v3 = v2 & [v1 execute:@"DROP INDEX IF EXISTS \"item_recursive_properties/item_id\""];
  int v4 = [v1 execute:@"DROP INDEX IF EXISTS \"item_recursive_properties/item_parent_id\""];
  int v5 = v3 & v4 & [v1 execute:@"DROP TRIGGER IF EXISTS \"item_recursive_properties/insertion\""];
  int v6 = [v1 execute:@"DROP TRIGGER IF EXISTS \"item_recursive_properties/deletion\""];
  int v7 = v6 & [v1 execute:@"DROP TRIGGER IF EXISTS\"item_recursive_properties/reparent\""];
  int v8 = v5 & v7 & [v1 execute:@"DROP TRIGGER IF EXISTS \"item_recursive_properties/recursive_update\""];
  int v9 = [v1 execute:@"DROP TRIGGER IF EXISTS \"item_recursive_properties/recursive_reparent\""];
  int v10 = v9 & [v1 execute:@"DROP TRIGGER IF EXISTS \"item_recursive_properties/recursive_delete\""];
  int v11 = v10 & [v1 execute:@"DROP TRIGGER IF EXISTS \"item_recursive_properties/item_id_update\""];
  int v12 = v8 & v11 & [v1 execute:@"CREATE TABLE item_recursive_properties( item_rowid integer not null primary key, item_id blob not null, item_parent_id blob, item_type integer not null, zone_rowid integer not null, item_parent_zone_rowid  integer not null, dir_faults_count integer not null default 0, over_quota_count integer not null default 0, shared_by_me_count integer not null default 0, shared_to_me_count integer not null default 0, uploaded_size integer not null default 0, uploaded_count integer not null default 0, needs_upload_size integer not null default 0, needs_upload_count integer not null default 0, synced_up_count integer not null default 0, needs_sync_up_count integer not null default 0, needs_delete_doc_count  integer not null default 0)"];
  int v13 = [v1 execute:@"CREATE UNIQUE INDEX \"item_recursive_properties/item_id_zone_rowid\"ON item_recursive_properties (item_id, zone_rowid)"];
  int v14 = v13 & [v1 execute:@"CREATE INDEX \"item_recursive_properties/item_parent_id_zone_rowid\"ON item_recursive_properties (item_parent_id, item_parent_zone_rowid)"];
  int v15 = v14 & [v1 execute:@"CREATE TRIGGER \"item_recursive_properties/item_id_update\" AFTER UPDATE OF item_id, zone_rowid ON client_items WHEN (new.item_id != old.item_id OR new.zone_rowid != old.zone_rowid)  AND new.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_id, item_parent_zone_rowid = new.zone_rowid WHERE item_parent_id == old.item_id   AND item_parent_zone_rowid = old.zone_rowid ; UPDATE OR IGNORE item_recursive_properties SET   item_id = new.item_id, zone_rowid = new.zone_rowid WHERE item_rowid == new.rowid ; END"];
  uint64_t v16 = [MEMORY[0x263F8C720] rawInjection:"" length:0];
  int v17 = v15 & [v1 execute:@"INSERT INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid)SELECT rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid FROM client_items WHERE item_type IN (0, 9, 10, 4) %@", v16];

  int v18 = v12 & v17 & [v1 execute:@"CREATE TRIGGER \"item_recursive_properties/insertion\" AFTER INSERT ON client_items WHEN new.item_filename != '.Trash' AND new.item_type IN (0, 9, 10, 4) BEGIN INSERT OR IGNORE INTO item_recursive_properties   (item_rowid, item_id, item_parent_id, item_type) VALUES   (new.rowid, new.item_id, new.item_parent_id, new.item_type); END"];
  LODWORD(v16) = [v1 execute:@"CREATE TRIGGER \"item_recursive_properties/deletion\" AFTER DELETE ON client_items WHEN old.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN DELETE FROM item_recursive_properties WHERE item_rowid == old.rowid ; END"];
  LODWORD(v16) = v16 & [v1 execute:@"CREATE TRIGGER \"item_recursive_properties/reparent\" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items WHEN (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid)  AND new.item_type IN (0, 9, 10, 4, 1, 2, 8) BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_parent_id, item_parent_zone_rowid = new.item_parent_zone_rowid WHERE item_rowid == new.rowid AND item_parent_id IS NOT NULL ; END"];
  LODWORD(v16) = v16 & [v1 execute:@"CREATE TRIGGER \"item_recursive_properties/recursive_update\" AFTER UPDATE OF dir_faults_count, over_quota_count, shared_by_me_count, shared_to_me_count, uploaded_size, uploaded_count, needs_upload_size, needs_upload_count, synced_up_count, needs_sync_up_count, needs_delete_doc_count ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count + new.dir_faults_count - old.dir_faults_count, over_quota_count = over_quota_count + new.over_quota_count - old.over_quota_count, shared_by_me_count = shared_by_me_count + new.shared_by_me_count - old.shared_by_me_count, shared_to_me_count = shared_to_me_count + new.shared_to_me_count - old.shared_to_me_count, needs_upload_size = needs_upload_size + new.needs_upload_size - old.needs_upload_size, needs_upload_count = needs_upload_count + new.needs_upload_count - old.needs_upload_count, needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count - old.needs_sync_up_count, needs_delete_doc_count = needs_delete_doc_count + new.needs_delete_doc_count - old.needs_delete_doc_count, uploaded_size = uploaded_size + MAX((new.uploaded_size - old.uploaded_size), 0), uploaded_count = uploaded_count + MAX((new.uploaded_count - old.uploaded_count), 0), synced_up_count = synced_up_count + MAX((new.synced_up_count - old.synced_up_count), 0)  WHERE item_id == old.item_parent_id AND  zone_rowid == old.item_parent_zone_rowid AND  new.item_parent_id == old.item_parent_id AND  new.item_parent_zone_rowid == old.item_parent_zone_rowid AND (new.dir_faults_count != old.dir_faults_count OR  new.over_quota_count != old.over_quota_count OR  new.shared_by_me_count != old.shared_by_me_count OR  new.shared_to_me_count != old.shared_to_me_count OR  new.needs_upload_size != old.needs_upload_size OR  new.needs_upload_count != old.needs_upload_count OR  new.needs_sync_up_count != old.needs_sync_up_count OR  new.needs_delete_doc_count != old.needs_delete_doc_count OR (new.uploaded_size != old.uploaded_size AND new.uploaded_size != 0) OR (new.uploaded_count != old.uploaded_count AND new.uploaded_count != 0) OR (new.synced_up_count != old.synced_up_count AND new.synced_up_count != 0)) ; UPDATE item_recursive_properties SET  uploaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_size == 0 AND needs_sync_up_count == 0) AND uploaded_size != 0; UPDATE item_recursive_properties SET  uploaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_count == 0 AND needs_sync_up_count == 0) AND uploaded_count != 0; UPDATE item_recursive_properties SET  synced_up_count = 0  WHERE item_rowid == old.item_rowid AND (needs_sync_up_count == 0) AND synced_up_count != 0;DELETE FROM item_recursive_properties WHERE  item_rowid == old.item_rowid AND uploaded_size == 0 AND needs_upload_size == 0 AND  uploaded_count == 0 AND needs_upload_count == 0 AND  synced_up_count  == 0 AND needs_sync_up_count == 0 AND  needs_delete_doc_count == 0 AND  over_quota_count == 0 AND shared_by_me_count == 0 AND  shared_to_me_count  == 0 AND item_type NOT IN (0, 9, 10, 4); END"];
  LODWORD(v16) = v16 & [v1 execute:@"CREATE TRIGGER \"item_recursive_properties/recursive_reparent\" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON item_recursive_properties WHEN ((new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid)        AND ((SELECT 1 FROM item_recursive_properties WHERE item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid LIMIT 1)              OR item_id_is_root(new.item_parent_id))) BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count - old.dir_faults_count, over_quota_count = over_quota_count - old.over_quota_count, shared_by_me_count = shared_by_me_count - old.shared_by_me_count, shared_to_me_count = shared_to_me_count - old.shared_to_me_count, needs_upload_size = needs_upload_size - old.needs_upload_size, needs_upload_count = needs_upload_count - old.needs_upload_count, needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count, needs_delete_doc_count = needs_delete_doc_count - old.needs_delete_doc_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid; UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count + new.dir_faults_count, over_quota_count = over_quota_count + new.over_quota_count, shared_by_me_count = shared_by_me_count + new.shared_by_me_count, shared_to_me_count = shared_to_me_count + new.shared_to_me_count, needs_upload_size = needs_upload_size + new.needs_upload_size, needs_upload_count = needs_upload_count + new.needs_upload_count, needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count, needs_delete_doc_count = needs_delete_doc_count + new.needs_delete_doc_count  WHERE item_id == new.item_parent_id AND  zone_rowid = new.item_parent_zone_rowid; END"];
  LODWORD(v16) = v16 & [v1 execute:@"CREATE TRIGGER \"item_recursive_properties/recursive_delete\" AFTER DELETE ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  dir_faults_count = dir_faults_count - old.dir_faults_count, over_quota_count = over_quota_count - old.over_quota_count, shared_by_me_count = shared_by_me_count - old.shared_by_me_count, shared_to_me_count = shared_to_me_count - old.shared_to_me_count, needs_upload_size = needs_upload_size - old.needs_upload_size, needs_upload_count = needs_upload_count - old.needs_upload_count, needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count, needs_delete_doc_count = needs_delete_doc_count - old.needs_delete_doc_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid AND(0 != old.dir_faults_count OR  0 != old.over_quota_count OR  0 != old.shared_by_me_count OR  0 != old.shared_to_me_count OR  0 != old.needs_upload_size OR  0 != old.needs_upload_count OR  0 != old.needs_sync_up_count OR  0 != old.needs_delete_doc_count); END"];
  int v19 = v18 & v16 & [v1 execute:@"INSERT OR IGNORE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) SELECT rowid, item_id, item_parent_id, call_block(%p, item_type), zone_rowid, item_parent_zone_rowid FROM client_items WHERE (item_sharing_options & 4) != 0 OR item_localsyncupstate IN (3,4) AND item_type IN (1, 2, 8)", &__block_literal_global_1660];
  LODWORD(v16) = [v1 execute:@"UPDATE item_recursive_properties SET shared_by_me_count = call_block(%p, shared_by_me_count, 1, (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = zone_rowid)), shared_to_me_count = call_block(%p, shared_to_me_count, 0, (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = zone_rowid)) WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0)", &__block_literal_global_1663, &__block_literal_global_1663];
  LODWORD(v16) = v16 & [v1 execute:@"UPDATE item_recursive_properties SET shared_to_me_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0 AND zone_rowid != item_parent_zone_rowid)"];
  LODWORD(v16) = v16 & [v1 execute:@"UPDATE item_recursive_properties SET dir_faults_count = dir_faults_count + 1 WHERE item_type IN (9, 10)"];
  LODWORD(v16) = v16 & [v1 execute:@"UPDATE item_recursive_properties AS ip SET needs_upload_size = (SELECT ci.version_size from client_items AS ci WHERE ci.rowid = ip.item_rowid), needs_upload_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_localsyncupstate = 3 AND item_type IN (1, 2, 8))"];
  int v20 = v16 & [v1 execute:@"UPDATE item_recursive_properties AS ip SET needs_sync_up_count = needs_sync_up_count + 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_localsyncupstate = 4 AND item_type IN (1, 2, 8))"];
  LODWORD(v16) = [v1 execute:@"UPDATE item_recursive_properties AS ip SET needs_delete_doc_count = needs_delete_doc_count + 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_state IN (1, -3) AND item_type IN (1, 2, 8))"];

  return v19 & v20 & v16;
}

void __recursive_table_recreate_schema_block_invoke(uint64_t a1, sqlite3_context *a2, int a3, sqlite3_value **a4)
{
  if (a3 != 1)
  {
    int v9 = brc_bread_crumbs();
    int v10 = brc_default_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
      __recursive_table_recreate_schema_block_invoke_cold_1();
    }
  }
  int v6 = sqlite3_value_int(*a4);
  if (v6 << 24 == 0x2000000 || v6 << 24 == 0x8000000) {
    char v8 = 1;
  }
  else {
    char v8 = v6;
  }
  if (v8 == 7) {
    char v8 = 6;
  }
  sqlite3_result_int(a2, v8);
}

void __recursive_table_recreate_schema_block_invoke_1661(uint64_t a1, sqlite3_context *a2, int a3, uint64_t a4)
{
  if (a3 != 3)
  {
    int v9 = brc_bread_crumbs();
    int v10 = brc_default_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
      __recursive_table_recreate_schema_block_invoke_1661_cold_1();
    }
  }
  sqlite3_int64 v6 = sqlite3_value_int64(*(sqlite3_value **)a4);
  BOOL v7 = sqlite3_value_int(*(sqlite3_value **)(a4 + 8)) == 0;
  char v8 = (void *)[NSString newFromSqliteValue:*(void *)(a4 + 16)];
  sqlite3_result_int64(a2, v6 + (v7 ^ [v8 isEqualToString:*MEMORY[0x263EFD488]]));
}

void __br_update_tables_21_000_block_invoke(uint64_t a1, sqlite3_context *a2, int a3, void *a4)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (a3 != 1)
  {
    int v13 = brc_bread_crumbs();
    int v14 = brc_default_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
      __recursive_table_recreate_schema_block_invoke_cold_1();
    }
  }
  BOOL v7 = (void *)[MEMORY[0x263EFF8F8] newFromSqliteValue:*a4];
  char v8 = objc_msgSend(v7, "brc_signature");
  id v15 = 0;
  if (([*(id *)(a1 + 32) containsObject:v8] & 1) == 0)
  {
    int v9 = *(void **)(a1 + 40);
    if (v9 && ([v9 saveXattrBlob:v7 forSignature:v8 error:&v15] & 1) == 0)
    {
      int v10 = brc_bread_crumbs();
      int v11 = brc_default_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 138412802;
        int v17 = v8;
        __int16 v18 = 2112;
        id v19 = v15;
        __int16 v20 = 2112;
        int v21 = v10;
        _os_log_fault_impl(&dword_23FA42000, v11, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: Couldn't save xattr blob for signature %@.  Continuing anyway - %@%@", buf, 0x20u);
      }
    }
    else if ((unint64_t)[*(id *)(a1 + 32) count] <= 0x7F)
    {
      [*(id *)(a1 + 32) addObject:v8];
    }
  }
  id v12 = v8;
  sqlite3_result_blob(a2, (const void *)[v12 bytes], objc_msgSend(v12, "length"), (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
}

void __br_update_tables_30_000_block_invoke(uint64_t a1, sqlite3_context *a2, int a3, sqlite3_value **a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (a3 != 3)
  {
    int v17 = brc_bread_crumbs();
    __int16 v18 = brc_default_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT)) {
      __recursive_table_recreate_schema_block_invoke_1661_cold_1();
    }
  }
  sqlite3_int64 v7 = sqlite3_value_int64(*a4);
  sqlite3_int64 v8 = sqlite3_value_int64(a4[1]);
  int v9 = sqlite3_value_int(a4[2]);
  int v10 = brc_bread_crumbs();
  int v11 = brc_default_log();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
    __br_update_tables_30_000_block_invoke_cold_1();
  }

  id v12 = *(void **)(a1 + 32);
  id v19 = 0;
  char v13 = [v12 rescueUnuploadedFile:v8 error:&v19];
  id v14 = v19;
  if (v13)
  {
    if (v9 == 3) {
      int v9 = 999;
    }
    else {
      int v9 = 888;
    }
  }
  else
  {
    id v15 = brc_bread_crumbs();
    uint64_t v16 = brc_default_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 138412802;
      id v21 = v14;
      __int16 v22 = 2048;
      sqlite3_int64 v23 = v7;
      __int16 v24 = 2112;
      long long v25 = v15;
      _os_log_fault_impl(&dword_23FA42000, v16, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: Failed rescuing unuploaded file %@ for rowid: %llu%@", buf, 0x20u);
    }
  }
  sqlite3_result_int(a2, v9);
}

void __br_update_tables_30_000_block_invoke_1806(uint64_t a1, sqlite3_context *a2, int a3, sqlite3_value **a4)
{
  if (a3 != 3)
  {
    char v13 = brc_bread_crumbs();
    id v14 = brc_default_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
      __recursive_table_recreate_schema_block_invoke_1661_cold_1();
    }
  }
  sqlite3_int64 v7 = sqlite3_value_int64(a4[1]);
  unint64_t v8 = sqlite3_value_int64(a4[2]);
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8);
  if (v8 > *(void *)(v9 + 24)) {
    *(void *)(v9 + 24) = v8;
  }
  if (v7)
  {
    if (sqlite3_value_int(*a4) == 1) {
      int v10 = 6;
    }
    else {
      int v10 = 5;
    }
  }
  else
  {
    int v11 = brc_bread_crumbs();
    id v12 = brc_default_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      __br_update_tables_30_000_block_invoke_1806_cold_1();
    }

    int v10 = 0;
  }
  sqlite3_result_int(a2, v10);
}

void __br_update_tables_30_000_block_invoke_1816(uint64_t a1, sqlite3_context *a2, uint64_t a3, void *a4)
{
  int v5 = +[BRCItemID isDocumentsItemIDWithSQLiteValue:*a4];
  sqlite3_result_int(a2, v5);
}

void __br_update_tables_30_000_block_invoke_2(uint64_t a1, sqlite3_context *a2, int a3, void *a4)
{
  if (a3 != 2)
  {
    int v11 = brc_bread_crumbs();
    id v12 = brc_default_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT)) {
      __br_update_tables_30_000_block_invoke_2_cold_2();
    }
  }
  id v6 = +[BRCItemID newFromSqliteValue:*a4];
  sqlite3_int64 v7 = (void *)[NSString newFromSqliteValue:a4[1]];
  if ([v6 isNonDesktopRoot])
  {
    if ([v7 isEqualToString:*MEMORY[0x263F324E8]]) {
      int v8 = 2;
    }
    else {
      int v8 = 1;
    }
  }
  else
  {
    uint64_t v9 = brc_bread_crumbs();
    int v10 = brc_default_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
      __br_update_tables_30_000_block_invoke_2_cold_1();
    }

    int v8 = 0;
  }
  sqlite3_result_int(a2, v8);
}

id currentClientStateDictionary(void *a1)
{
  id v1 = a1;
  int v2 = (void *)[v1 fetch:@"SELECT * FROM client_state"];
  int v3 = +[BRCAccountSessionFPFS _classesForClientState];
  if (![v2 next])
  {
    int v5 = brc_bread_crumbs();
    id v6 = brc_default_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT)) {
      br_unmigrated_items_fixup_cold_1();
    }
    goto LABEL_6;
  }
  if ([v2 isNullAtIndex:0])
  {
    int v4 = objc_opt_new();
    goto LABEL_8;
  }
  sqlite3_int64 v7 = [v2 unarchivedObjectOfClasses:v3 atIndex:0];
  int v4 = (void *)[v7 mutableCopy];

  [v2 close];
  if (!v4)
  {
    int v5 = brc_bread_crumbs();
    id v6 = brc_default_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT)) {
      currentClientStateDictionary_cold_1();
    }
LABEL_6:

    int v4 = 0;
  }
LABEL_8:

  return v4;
}

void __br_update_tables_31_103_block_invoke(uint64_t a1, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  if (sqlite3_value_type(*a4) == 4)
  {
    id v6 = objc_alloc(MEMORY[0x263EFF8F8]);
    sqlite3_int64 v7 = sqlite3_value_blob(*a4);
    int v8 = (void *)[v6 initWithBytesNoCopy:v7 length:sqlite3_value_bytes(*a4) freeWhenDone:0];
    uint64_t v9 = (void *)[objc_alloc(MEMORY[0x263F08928]) initForReadingFromData:v8 error:0];
    int v10 = [v9 decodeObjectOfClass:objc_opt_class() forKey:*MEMORY[0x263F081D0]];
    int v11 = v10;
    if (v10 && objc_msgSend(v10, "brc_isCloudKitRequestRejectedError")) {
      sqlite3_result_int(a2, 1);
    }
  }
  sqlite3_result_int(a2, 0);
}

uint64_t upgradeItemScopesForClientZone(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (([v3 isCloudDocsZone] & 1) != 0 || objc_msgSend(v3, "isSharedZone"))
  {
    int v5 = [v3 dbRowID];
    uint64_t v6 = [v4 execute:@"UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND item_state != -2", v5, v10];
  }
  else
  {
    uint64_t v9 = [v3 dbRowID];
    uint64_t v7 = [v4 execute:@"UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2", v9, v3];

    if (!v7) {
      goto LABEL_5;
    }
    int v5 = [v3 dbRowID];
    uint64_t v6 = [v4 execute:@"UPDATE client_items SET item_scope = 1 WHERE zone_rowid = %@ AND item_scope = 0 AND NOT migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2", v5, v3];
  }
  uint64_t v7 = v6;

LABEL_5:
  return v7;
}

void __br_fixup_tables_4_019_block_invoke(uint64_t a1, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  uint64_t v6 = (void *)MEMORY[0x2455D97F0]();
  objc_msgSend(NSString, "br_pathWithFileSystemRepresentation:", sqlite3_value_text(*a4));
  id v7 = objc_claimAutoreleasedReturnValue();
  int v8 = (const char *)[v7 fileSystemRepresentation];
  int v9 = strlen(v8);
  sqlite3_result_text(a2, v8, v9, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
}

void __br_fixup_tables_4_020_block_invoke(uint64_t a1, sqlite3_context *a2, uint64_t a3, sqlite3_value **a4)
{
  sqlite3_int64 v6 = sqlite3_value_int64(*a4);
  if (!v6)
  {
    unint64_t v7 = sqlite3_value_int64(a4[1]);
    if (v7 <= 1) {
      sqlite3_int64 v6 = 1;
    }
    else {
      sqlite3_int64 v6 = v7;
    }
  }
  sqlite3_result_int64(a2, v6);
}

void __br_resolve_fp_cannot_synchronize_error_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = brc_bread_crumbs();
  id v4 = brc_default_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    __br_resolve_fp_cannot_synchronize_error_block_invoke_cold_1();
  }
}

void __br_optimize_storage_settings_fixup_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = brc_bread_crumbs();
    id v4 = brc_default_log();
    if (os_log_type_enabled(v4, (os_log_type_t)0x90u)) {
      __br_optimize_storage_settings_fixup_block_invoke_cold_2();
    }
  }
  else
  {
    id v3 = brc_bread_crumbs();
    id v4 = brc_default_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      __br_optimize_storage_settings_fixup_block_invoke_cold_1();
    }
  }
}

uint64_t __br_fixup_contentPolicy_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) recoverAndReportContentPolicyWithCompletion:&__block_literal_global_2265];
}

void __br_fixup_contentPolicy_block_invoke_2()
{
  uint64_t v0 = brc_bread_crumbs();
  id v1 = brc_default_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    __br_fixup_contentPolicy_block_invoke_2_cold_1();
  }
}

void sub_23FB49490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB49794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FB4C190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__23(uint64_t a1)
{
}

uint64_t itemsHaveTheSameKind(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (([v3 isDirectory] & 1) != 0
    || ([v4 contentType],
        int v5 = objc_claimAutoreleasedReturnValue(),
        int v6 = objc_msgSend(v5, "br_isDirectoryType"),
        v5,
        v6))
  {
    int v7 = [v3 isDirectory];
    int v8 = [v4 contentType];
    int v9 = v7 ^ objc_msgSend(v8, "br_isDirectoryType");

    uint64_t v10 = v9 ^ 1u;
  }
  else if (([v3 isSymLink] & 1) != 0 {
         || ([v4 contentType],
  }
             int v11 = objc_claimAutoreleasedReturnValue(),
             int v12 = objc_msgSend(v11, "br_isSymbolicLinkType"),
             v11,
             v12))
  {
    int v13 = [v3 isSymLink];
    id v14 = [v4 contentType];
    uint64_t v10 = v13 ^ objc_msgSend(v14, "br_isSymbolicLinkType") ^ 1;
  }
  else
  {
    int v16 = [v3 isFinderBookmark];
    int v17 = [v4 contentType];
    int v18 = objc_msgSend(v17, "br_isAliasFileType");

    if (v16 == v18) {
      uint64_t v10 = [v3 isDocument];
    }
    else {
      uint64_t v10 = 0;
    }
  }

  return v10;
}

void sub_23FB4CE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_23FB4E6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_23FB4ECA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_23FB4F3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB52AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB531CC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_23FB548CC(_Unwind_Exception *a1)
{
}

void sub_23FB563B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose((const void *)(v38 - 232), 8);
  _Block_object_dispose((const void *)(v38 - 200), 8);
  _Block_object_dispose((const void *)(v38 - 168), 8);
  _Block_object_dispose((const void *)(v38 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_23FB56438()
{
}

void sub_23FB56440()
{
}

void sub_23FB56448()
{
}

void sub_23FB56AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
}

__CFString *BRCClientZoneStatePrettyPrint(unsigned int a1)
{
  return BRCPrettyPrintBitmapWithContext(a1, (uint64_t)&local_container_state_entries, 0);
}

__CFString *BRCClientZoneStatePrettyPrintWithContext(unsigned int a1, void *a2)
{
  return BRCPrettyPrintBitmapWithContext(a1, (uint64_t)&local_container_state_entries, a2);
}

uint64_t BRContainerStatusFromSyncState(char a1)
{
  if ((a1 & 0xA) != 0) {
    unsigned int v1 = (2 * ((a1 & 5) != 0)) | 4;
  }
  else {
    unsigned int v1 = 2 * ((a1 & 5) != 0);
  }
  if (v1 <= 1) {
    return 1;
  }
  else {
    return v1;
  }
}

void sub_23FB58A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB59500(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__24(uint64_t a1)
{
}

void checkErrorIsRetriable(sqlite3_context *a1, sqlite3_value **a2, id *a3)
{
  if (sqlite3_value_type(*a2) != 4)
  {
LABEL_5:
    sqlite3_result_int(a1, 1);
    return;
  }
  id v6 = objc_alloc(MEMORY[0x263EFF8F8]);
  int v7 = sqlite3_value_blob(*a2);
  id v11 = (id)[v6 initWithBytesNoCopy:v7 length:sqlite3_value_bytes(*a2) freeWhenDone:0];
  int v8 = (void *)[objc_alloc(MEMORY[0x263F08928]) initForReadingFromData:v11 error:0];
  int v9 = [v8 decodeObjectOfClass:objc_opt_class() forKey:*MEMORY[0x263F081D0]];
  uint64_t v10 = v9;
  if (!v9 || (objc_msgSend(v9, "brc_isEverRetriable") & 1) != 0)
  {

    goto LABEL_5;
  }
  if (a3) {
    objc_storeStrong(a3, v10);
  }
  sqlite3_result_int(a1, 0);
}

void sub_23FB5B688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB5BC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FB5E0F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_23FB5E3E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

BOOL -[BRCClientZone _blockExistingOperationIfNecessary:onNewOperation:considerPriority:](BRCClientZone *self, SEL a2, id a3, id a4, BOOL a5)
{
  BOOL v5 = a5;
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  if (([(NSMutableArray *)self->_blockedOperationsOnInitialSync containsObject:v8] & 1) == 0)
  {
    if (v5)
    {
      int v11 = [v8 nonDiscretionary];
      int v12 = [v9 nonDiscretionary];
      if (v11)
      {
        if (!v12) {
          goto LABEL_11;
        }
      }
    }
    if ([v8 isExecuting]) {
      goto LABEL_11;
    }
    uint64_t v13 = [v8 nextTryDate];
    [v13 timeIntervalSinceNow];
    double v15 = v14;
    uint64_t v16 = +[BRCUserDefaults defaultsForMangledID:0];
    [v16 throttleThresholdToBlockExistingOpOnNewOp];
    double v18 = v17;

    if (v15 <= v18)
    {
LABEL_11:
      BOOL v10 = 0;
      goto LABEL_12;
    }
    id v19 = brc_bread_crumbs();
    __int16 v20 = brc_default_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
    {
      int v22 = 138412802;
      id v23 = v8;
      __int16 v24 = 2112;
      id v25 = v9;
      __int16 v26 = 2112;
      uint64_t v27 = v19;
      _os_log_debug_impl(&dword_23FA42000, v20, OS_LOG_TYPE_DEBUG, "[DEBUG] Existing op %@ is heavily throttled. Blocking execution on incoming op %@%@", (uint8_t *)&v22, 0x20u);
    }

    [v8 addDependency:v9];
  }
  BOOL v10 = 1;
LABEL_12:

  return v10;
}

void -[BRCClientZone _blockSyncDownOnStitchingOperations](BRCClientZone *self, SEL a2)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  [(BRCPQLConnection *)self->_db assertOnQueue];
  id v3 = [(NSMutableDictionary *)self->_runningListOperations allValues];
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v61 objects:v72 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v62;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v62 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v61 + 1) + 8 * i);
        if (![(BRCClientZone *)self _blockExistingOperationIfNecessary:v8 onNewOperation:self->_syncDownOperation considerPriority:1])
        {
          BOOL v9 = [(_BRCOperation *)self->_syncDownOperation nonDiscretionary];
          int v10 = [v8 nonDiscretionary];
          if (v9 && !v10)
          {
            int v11 = brc_bread_crumbs();
            int v12 = brc_default_log();
            if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412546;
              long long v69 = v8;
              __int16 v70 = 2112;
              id v71 = v11;
              _os_log_debug_impl(&dword_23FA42000, v12, OS_LOG_TYPE_DEBUG, "[DEBUG] Sync down has greater priority than %@%@", buf, 0x16u);
            }

            id v13 = [(BRCClientZone *)self cancelListOperationAndReschedule:v8];
          }
          [(_BRCOperation *)self->_syncDownOperation addDependency:v8];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v61 objects:v72 count:16];
    }
    while (v5);
  }
  fetchRecentsOperation = self->_fetchRecentsOperation;
  if (fetchRecentsOperation
    && ![(BRCClientZone *)self _blockExistingOperationIfNecessary:fetchRecentsOperation onNewOperation:self->_syncDownOperation considerPriority:0])
  {
    BOOL v15 = [(_BRCOperation *)self->_syncDownOperation nonDiscretionary];
    BOOL v16 = [(_BRCOperation *)self->_fetchRecentsOperation nonDiscretionary];
    if (v15 && !v16)
    {
      double v17 = brc_bread_crumbs();
      double v18 = brc_default_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
        -[BRCClientZone _blockSyncDownOnStitchingOperations]();
      }

      [(_BRCOperation *)self->_fetchRecentsOperation cancel];
    }
    [(_BRCOperation *)self->_syncDownOperation addDependency:self->_fetchRecentsOperation];
  }
  long long v48 = v3;
  id v19 = [(NSMutableDictionary *)self->_fetchParentOperations allValues];
  long long v57 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  uint64_t v20 = [v19 countByEnumeratingWithState:&v57 objects:v67 count:16];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = *(void *)v58;
    do
    {
      for (uint64_t j = 0; j != v21; ++j)
      {
        if (*(void *)v58 != v22) {
          objc_enumerationMutation(v19);
        }
        __int16 v24 = *(void **)(*((void *)&v57 + 1) + 8 * j);
        if (![(BRCClientZone *)self _blockExistingOperationIfNecessary:v24 onNewOperation:self->_syncDownOperation considerPriority:1])
        {
          BOOL v25 = [(_BRCOperation *)self->_syncDownOperation nonDiscretionary];
          int v26 = [v24 nonDiscretionary];
          if (v25 && !v26)
          {
            uint64_t v27 = brc_bread_crumbs();
            uint64_t v28 = brc_default_log();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412546;
              long long v69 = v24;
              __int16 v70 = 2112;
              id v71 = v27;
              _os_log_debug_impl(&dword_23FA42000, v28, OS_LOG_TYPE_DEBUG, "[DEBUG] Sync down has greater priority than %@%@", buf, 0x16u);
            }

            id v29 = [(BRCClientZone *)self cancelFetchParentChainOperationAndReschedule:v24];
          }
          [(_BRCOperation *)self->_syncDownOperation addDependency:v24];
        }
      }
      uint64_t v21 = [v19 countByEnumeratingWithState:&v57 objects:v67 count:16];
    }
    while (v21);
  }
  long long v30 = [(NSMutableDictionary *)self->_locateRecordOperations allValues];
  long long v53 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v31 = [v30 countByEnumeratingWithState:&v53 objects:v66 count:16];
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)v54;
    do
    {
      for (uint64_t k = 0; k != v32; ++k)
      {
        if (*(void *)v54 != v33) {
          objc_enumerationMutation(v30);
        }
        uint64_t v35 = *(void **)(*((void *)&v53 + 1) + 8 * k);
        if (![(BRCClientZone *)self _blockExistingOperationIfNecessary:v35 onNewOperation:self->_syncDownOperation considerPriority:1])
        {
          BOOL v36 = [(_BRCOperation *)self->_syncDownOperation nonDiscretionary];
          int v37 = [v35 nonDiscretionary];
          if (v36 && !v37)
          {
            uint64_t v38 = brc_bread_crumbs();
            long long v39 = brc_default_log();
            if (os_log_type_enabled(v39, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412546;
              long long v69 = v35;
              __int16 v70 = 2112;
              id v71 = v38;
              _os_log_debug_impl(&dword_23FA42000, v39, OS_LOG_TYPE_DEBUG, "[DEBUG] Sync down has greater priority than %@%@", buf, 0x16u);
            }

            id v40 = [(BRCClientZone *)self cancelLocateRecordOperationAndReschedule:v35];
          }
          [(_BRCOperation *)self->_syncDownOperation addDependency:v35];
        }
      }
      uint64_t v32 = [v30 countByEnumeratingWithState:&v53 objects:v66 count:16];
    }
    while (v32);
  }
  if (![(_BRCOperation *)self->_syncDownOperation nonDiscretionary])
  {
    long long v51 = 0u;
    long long v52 = 0u;
    long long v49 = 0u;
    long long v50 = 0u;
    id v41 = self->_blockedOperationsOnInitialSync;
    uint64_t v42 = [(NSMutableArray *)v41 countByEnumeratingWithState:&v49 objects:v65 count:16];
    if (v42)
    {
      uint64_t v43 = v42;
      uint64_t v44 = *(void *)v50;
      do
      {
        for (uint64_t m = 0; m != v43; ++m)
        {
          if (*(void *)v50 != v44) {
            objc_enumerationMutation(v41);
          }
          if ([*(id *)(*((void *)&v49 + 1) + 8 * m) nonDiscretionary])
          {
            long long v46 = brc_bread_crumbs();
            long long v47 = brc_default_log();
            if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 138412290;
              long long v69 = v46;
              _os_log_debug_impl(&dword_23FA42000, v47, OS_LOG_TYPE_DEBUG, "[DEBUG] Boosting sync down op to be non-discretionary because we have blocked operations which are non-discretionary%@", buf, 0xCu);
            }

            [(_BRCOperation *)self->_syncDownOperation setNonDiscretionary:1];
          }
        }
        uint64_t v43 = [(NSMutableArray *)v41 countByEnumeratingWithState:&v49 objects:v65 count:16];
      }
      while (v43);
    }
  }
}

void sub_23FB5F5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB60124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_23FB60538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FB60B6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB60C08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB62820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_5(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  int v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_10;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  id v8 = v3;
  id v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FB63974(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_23FB63ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB63EF0(_Unwind_Exception *a1)
{
}

void sub_23FB64048(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB661D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
}

void sub_23FB66518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void -[BRCClientZone _blockLowPriorityStitchingOperationsForOperation:](BRCClientZone *self, SEL a2, id a3)
{
  uint64_t v77 = *MEMORY[0x263EF8340];
  id v4 = a3;
  [(BRCPQLConnection *)self->_db assertOnQueue];
  uint64_t v5 = [(BRCServerZone *)self->_serverZone changeState];
  uint64_t v6 = [v5 changeToken];

  if (v6)
  {
    long long v66 = 0u;
    long long v67 = 0u;
    long long v64 = 0u;
    long long v65 = 0u;
    int v7 = [(NSMutableDictionary *)self->_fetchParentOperations allValues];
    uint64_t v8 = [v7 countByEnumeratingWithState:&v64 objects:v76 count:16];
    long long v55 = self;
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v65;
      do
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v65 != v10) {
            objc_enumerationMutation(v7);
          }
          int v12 = *(void **)(*((void *)&v64 + 1) + 8 * i);
          if (([v12 isCancelled] & 1) == 0)
          {
            int v13 = [v4 nonDiscretionary];
            int v14 = [v12 nonDiscretionary];
            if (v13)
            {
              if (!v14)
              {
                long long v15 = brc_bread_crumbs();
                uint64_t v16 = brc_default_log();
                if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
                {
                  long long v17 = [v12 operationID];
                  uint64_t v18 = [v4 operationID];
                  *(_DWORD *)buf = 138412802;
                  id v71 = v17;
                  __int16 v72 = 2112;
                  uint64_t v73 = (uint64_t)v18;
                  __int16 v74 = 2112;
                  long long v75 = v15;
                  _os_log_debug_impl(&dword_23FA42000, v16, OS_LOG_TYPE_DEBUG, "[DEBUG] Blocking low-priority parent fetch operation %@ on %@%@", buf, 0x20u);

                  self = v55;
                }

                [v12 blockOnHighPriorityOperation:v4];
              }
            }
          }
        }
        uint64_t v9 = [v7 countByEnumeratingWithState:&v64 objects:v76 count:16];
      }
      while (v9);
    }

    long long v62 = 0u;
    long long v63 = 0u;
    long long v60 = 0u;
    long long v61 = 0u;
    id v19 = [(NSMutableDictionary *)self->_locateRecordOperations allValues];
    uint64_t v20 = [v19 countByEnumeratingWithState:&v60 objects:v69 count:16];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = *(void *)v61;
      do
      {
        for (uint64_t j = 0; j != v21; ++j)
        {
          if (*(void *)v61 != v22) {
            objc_enumerationMutation(v19);
          }
          __int16 v24 = *(void **)(*((void *)&v60 + 1) + 8 * j);
          if (([v24 isCancelled] & 1) == 0)
          {
            int v25 = [v4 nonDiscretionary];
            int v26 = [v24 nonDiscretionary];
            if (v25)
            {
              if (!v26)
              {
                uint64_t v27 = brc_bread_crumbs();
                uint64_t v28 = brc_default_log();
                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
                {
                  id v29 = [v24 operationID];
                  long long v30 = [v4 operationID];
                  *(_DWORD *)buf = 138412802;
                  id v71 = v29;
                  __int16 v72 = 2112;
                  uint64_t v73 = (uint64_t)v30;
                  __int16 v74 = 2112;
                  long long v75 = v27;
                  _os_log_debug_impl(&dword_23FA42000, v28, OS_LOG_TYPE_DEBUG, "[DEBUG] Blocking low-priority locate record operation %@ on %@%@", buf, 0x20u);

                  self = v55;
                }

                [v24 blockOnHighPriorityOperation:v4];
              }
            }
          }
        }
        uint64_t v21 = [v19 countByEnumeratingWithState:&v60 objects:v69 count:16];
      }
      while (v21);
    }

    BOOL v31 = [(_BRCOperation *)self->_fetchRecentsOperation nonDiscretionary];
    if ([v4 nonDiscretionary]
      && !v31
      && ([(BRCFetchRecentAndFavoriteDocumentsOperation *)self->_fetchRecentsOperation isCancelled] & 1) == 0
      && self->_fetchRecentsOperation)
    {
      uint64_t v32 = brc_bread_crumbs();
      uint64_t v33 = brc_default_log();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
      {
        long long v51 = [(_BRCOperation *)self->_fetchRecentsOperation operationID];
        long long v52 = [v4 operationID];
        *(_DWORD *)buf = 138412802;
        id v71 = v51;
        __int16 v72 = 2112;
        uint64_t v73 = (uint64_t)v52;
        __int16 v74 = 2112;
        long long v75 = v32;
        _os_log_debug_impl(&dword_23FA42000, v33, OS_LOG_TYPE_DEBUG, "[DEBUG] Blocking low-priority fetch recents operation %@ on %@%@", buf, 0x20u);

        self = v55;
      }

      [(_BRCOperation *)self->_fetchRecentsOperation blockOnHighPriorityOperation:v4];
    }
    long long v58 = 0u;
    long long v59 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    int v34 = [(NSMutableDictionary *)self->_runningListOperations allValues];
    uint64_t v35 = [v34 countByEnumeratingWithState:&v56 objects:v68 count:16];
    if (v35)
    {
      uint64_t v37 = v35;
      uint64_t v38 = *(void *)v57;
      *(void *)&long long v36 = 138412802;
      long long v53 = v36;
      do
      {
        for (uint64_t k = 0; k != v37; ++k)
        {
          if (*(void *)v57 != v38) {
            objc_enumerationMutation(v34);
          }
          id v40 = *(void **)(*((void *)&v56 + 1) + 8 * k);
          if ((objc_msgSend(v40, "isCancelled", v53) & 1) == 0)
          {
            if ([v40 hasObservers])
            {
              int v41 = [v4 nonDiscretionary];
              int v42 = [v40 nonDiscretionary];
              if (v41 && !v42)
              {
                uint64_t v43 = brc_bread_crumbs();
                uint64_t v44 = brc_default_log();
                if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
                {
                  long long v54 = [v40 operationID];
                  uint64_t v49 = [v4 operationID];
                  *(_DWORD *)buf = v53;
                  id v71 = v54;
                  __int16 v72 = 2112;
                  uint64_t v73 = v49;
                  long long v50 = (void *)v49;
                  __int16 v74 = 2112;
                  long long v75 = v43;
                  _os_log_debug_impl(&dword_23FA42000, v44, OS_LOG_TYPE_DEBUG, "[DEBUG] Blocking low-priority list operation %@ on %@%@", buf, 0x20u);

                  self = v55;
                }

                [v40 blockOnHighPriorityOperation:v4];
              }
            }
            else
            {
              long long v45 = brc_bread_crumbs();
              long long v46 = brc_default_log();
              if (os_log_type_enabled(v46, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)buf = 138412546;
                id v71 = v40;
                __int16 v72 = 2112;
                uint64_t v73 = (uint64_t)v45;
                _os_log_debug_impl(&dword_23FA42000, v46, OS_LOG_TYPE_DEBUG, "[DEBUG] Removing list operation with no observers %@%@", buf, 0x16u);
              }

              [v40 cancel];
              runningListOperations = self->_runningListOperations;
              long long v48 = [v40 folderToList];
              [(NSMutableDictionary *)runningListOperations removeObjectForKey:v48];
            }
          }
        }
        uint64_t v37 = [v34 countByEnumeratingWithState:&v56 objects:v68 count:16];
      }
      while (v37);
    }
  }
}

void sub_23FB697C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_23FB6A040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FB6A5B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FB6A940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FB6B31C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_23FB6B87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_23FB6BF00(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_23FB6DFE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB6EADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB6F638(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 64));
  _Unwind_Resume(a1);
}

void sub_23FB6F854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB6FC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB708A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
}

void sub_23FB70B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FB71080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB711E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB71350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB716E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB720D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

void __dispatch_async_with_logs_block_invoke_10(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  id v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    int v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FB73AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void OUTLINED_FUNCTION_12_1(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x3F0], 8) = a1;
}

uint64_t OUTLINED_FUNCTION_13_3(uint64_t result, uint64_t a2, double a3, float a4)
{
  *(float *)a2 = a4;
  *(double *)(a2 + 4) = a3;
  *(_WORD *)(a2 + 12) = 2112;
  *(void *)(a2 + 14) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_0(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t _brc_ipc_check_item_identifier_access(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return [a1 accessItemIdentifierLocalItem:a3 dbAccessKind:a4 synchronouslyIfPossible:0 handler:a5];
}

uint64_t _brc_ipc_check_item_identifier_access_server_item(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return [a1 accessItemIdentifierServerItem:a3 dbAccessKind:a4 synchronouslyIfPossible:0 handler:a5];
}

void sub_23FB74310(_Unwind_Exception *a1)
{
}

void sub_23FB74EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FB75640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB76010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB768F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB77714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  __brc_leave_section(&a44);
  _Block_object_dispose((const void *)(v44 - 224), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__25(uint64_t a1)
{
}

void sub_23FB78488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB788B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB7A934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB7B0DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB7BAE8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 176));
  _Unwind_Resume(a1);
}

void sub_23FB7C70C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
}

void sub_23FB7D184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
}

void sub_23FB7E1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _BRRestorePersona();
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB7E7A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
}

void sub_23FB7EFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB7F394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB7F904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB7FD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  _Block_object_dispose((const void *)(v34 - 192), 8);
  __brc_leave_section(&a34);
  _Unwind_Resume(a1);
}

void sub_23FB801A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB804D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB80874(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB80B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB810B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB8159C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB81AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB8210C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FB8272C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB82D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB831C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB84804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB855D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  __brc_leave_section((uint64_t *)va);
  __brc_leave_section((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_23FB85AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB8610C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB86A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  __brc_leave_section((uint64_t *)va);
  __brc_leave_section((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_23FB87124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB882D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB88A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  __brc_leave_section((uint64_t *)va);
  __brc_leave_section((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_23FB894BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB8A1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FB8AC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB8B2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
}

BOOL BRFieldXattrReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 8;
LABEL_22:
        id v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v1_Block_object_dispose(&STACK[0x3F0], 8) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadData();
    uint64_t v18 = 16;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t AppTelemetryTelemetryMessageReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v20 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_35:
        *(void *)(a1 + _Block_object_dispose(&STACK[0x3F0], 8) = v20;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(AppTelemetryTimeSeriesEvent);
        [(id)a1 addEvents:v17];
        if (!PBReaderPlaceMark() || (AppTelemetryTimeSeriesEventReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FB91B44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB91BD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB922C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
}

void sub_23FB9249C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB92948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FB92AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__26(uint64_t a1)
{
}

void sub_23FB93A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL BRCGenerateAPFSSnapshot(int a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v5 = a2;
  int v6 = fs_snapshot_create(a1, (const char *)[v5 UTF8String], 0);
  if (v6 < 0)
  {
    int v7 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
    char v8 = brc_bread_crumbs();
    unsigned int v9 = brc_default_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412802;
      id v12 = v5;
      __int16 v13 = 2112;
      BOOL v14 = v7;
      __int16 v15 = 2112;
      uint64_t v16 = v8;
      _os_log_impl(&dword_23FA42000, v9, OS_LOG_TYPE_DEFAULT, "[WARNING] Failed to create snapshot %@ - %@%@", (uint8_t *)&v11, 0x20u);
    }

    if (a3) {
      *a3 = v7;
    }
  }
  return v6 >= 0;
}

id BRCMountAPFSSnapshot(int a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v5 = a2;
  int v6 = BRCMountDirPath(v5);
  int v7 = [MEMORY[0x263F08850] defaultManager];
  id v21 = 0;
  char v8 = [v7 createDirectoryAtPath:v6 withIntermediateDirectories:1 attributes:0 error:&v21];
  id v9 = v21;

  if ((v8 & 1) == 0)
  {
    unint64_t v10 = brc_bread_crumbs();
    int v11 = brc_default_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412802;
      id v23 = v6;
      __int16 v24 = 2112;
      id v25 = v9;
      __int16 v26 = 2112;
      uint64_t v27 = v10;
      _os_log_debug_impl(&dword_23FA42000, v11, OS_LOG_TYPE_DEBUG, "[DEBUG] Failed to create directory at %@ - %@%@", buf, 0x20u);
    }
  }
  id v12 = v6;
  __int16 v13 = (const char *)[v12 fileSystemRepresentation];
  id v14 = v5;
  __int16 v15 = (const char *)[v14 UTF8String];

  if (fs_snapshot_mount(a1, v13, v15, 0x100000u) < 0)
  {
    objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
    id v17 = (id)objc_claimAutoreleasedReturnValue();

    char v18 = brc_bread_crumbs();
    unsigned int v19 = brc_default_log();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412802;
      id v23 = v12;
      __int16 v24 = 2112;
      id v25 = v17;
      __int16 v26 = 2112;
      uint64_t v27 = v18;
      _os_log_impl(&dword_23FA42000, v19, OS_LOG_TYPE_DEFAULT, "[WARNING] Failed to mount %@ - %@%@", buf, 0x20u);
    }

    if (a3)
    {
      id v17 = v17;
      id v16 = 0;
      *a3 = v17;
    }
    else
    {
      id v16 = 0;
    }
  }
  else
  {
    id v16 = v12;
    id v17 = v9;
  }

  return v16;
}

id BRCMountDirPath(void *a1)
{
  uint64_t v1 = NSString;
  id v2 = a1;
  id v3 = objc_msgSend(v1, "br_currentSupportDir");
  id v4 = [v3 stringByAppendingPathComponent:v2];

  return v4;
}

uint64_t BRCUnmountAPFSSnapshot(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  BRCMountDirPath(a1);
  id v3 = objc_claimAutoreleasedReturnValue();
  if (unmount((const char *)[v3 UTF8String], 0x80000) < 0 && *__error() != 2)
  {
    id v4 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
    id v5 = brc_bread_crumbs();
    int v6 = brc_default_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412802;
      id v12 = v3;
      __int16 v13 = 2112;
      id v14 = v4;
      __int16 v15 = 2112;
      id v16 = v5;
      _os_log_impl(&dword_23FA42000, v6, OS_LOG_TYPE_DEFAULT, "[WARNING] Failed to unmount %@ - %@%@", (uint8_t *)&v11, 0x20u);
    }

    if (a2) {
      *a2 = v4;
    }
  }
  id v7 = v3;
  if (rmdir((const char *)[v7 fileSystemRepresentation]) < 0 && *__error() != 2)
  {
    char v8 = brc_bread_crumbs();
    id v9 = brc_default_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
      BRCUnmountAPFSSnapshot_cold_1((uint64_t)v7, (uint64_t)v8, v9);
    }
  }
  return 1;
}

uint64_t BRCDeleteAPFSSnapshot(int a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v5 = a2;
  if (fs_snapshot_delete(a1, (const char *)[v5 UTF8String], 0) < 0 && *__error() != 2)
  {
    char v8 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
    id v9 = brc_bread_crumbs();
    unint64_t v10 = brc_default_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      int v11 = 138412802;
      id v12 = v5;
      __int16 v13 = 2112;
      id v14 = v8;
      __int16 v15 = 2112;
      id v16 = v9;
      _os_log_debug_impl(&dword_23FA42000, v10, OS_LOG_TYPE_DEBUG, "[DEBUG] Failed to delete snapshot %@ - %@%@", (uint8_t *)&v11, 0x20u);
    }

    if (a3) {
      *a3 = v8;
    }

    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

BOOL BRCHasAPFSSnapshot(uint64_t a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  int v3 = fs_snapshot_list(4096, 0, 0, 0, 0);
  if (v3 < 0)
  {
    id v4 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
    if (v4)
    {
      id v5 = brc_bread_crumbs();
      uint64_t v6 = brc_default_log();
      if (os_log_type_enabled(v6, (os_log_type_t)0x90u))
      {
        char v8 = "(passed to caller)";
        int v9 = 136315906;
        unint64_t v10 = "BRCHasAPFSSnapshot";
        __int16 v11 = 2080;
        if (!a2) {
          char v8 = "(ignored by caller)";
        }
        id v12 = v8;
        __int16 v13 = 2112;
        id v14 = v4;
        __int16 v15 = 2112;
        id v16 = v5;
        _os_log_error_impl(&dword_23FA42000, v6, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", (uint8_t *)&v9, 0x2Au);
      }
    }
    if (a2) {
      *a2 = v4;
    }
  }
  return v3 > 0;
}

void sub_23FB96168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_6(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  int v3 = a1;
  id v4 = a2;
  id v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  id v7 = brc_notifications_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[NOTIF] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_11;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  char v8 = v3;
  __int16 v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

uint64_t _computeDelta(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  if (a1 > a2)
  {
    uint64_t v10 = brc_bread_crumbs();
    __int16 v11 = brc_default_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
    {
      int v21 = 134218498;
      uint64_t v22 = a1;
      __int16 v23 = 2048;
      uint64_t v24 = a2;
      __int16 v25 = 2112;
      __int16 v26 = v10;
      _os_log_fault_impl(&dword_23FA42000, v11, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: from size %llu is bigger than to size %llu%@", (uint8_t *)&v21, 0x20u);
    }
  }
  if (a3 > a4)
  {
    id v12 = brc_bread_crumbs();
    __int16 v13 = brc_default_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
    {
      int v21 = 134218498;
      uint64_t v22 = a3;
      __int16 v23 = 2048;
      uint64_t v24 = a4;
      __int16 v25 = 2112;
      __int16 v26 = v12;
      _os_log_fault_impl(&dword_23FA42000, v13, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: version size %llu is greater than progress size %llu%@", (uint8_t *)&v21, 0x20u);
    }
  }
  if (a1 == a2) {
    return 0;
  }
  double v15 = (double)a3 / (double)a4;
  uint64_t v16 = (uint64_t)(v15 * (double)a2) - (uint64_t)(v15 * (double)a1);
  uint64_t v17 = a3 - (uint64_t)(v15 * (double)a4);
  if (!a5) {
    uint64_t v17 = 0;
  }
  uint64_t v14 = v17 + v16;
  if (v17 + v16 < 0)
  {
    unsigned int v19 = brc_bread_crumbs();
    uint64_t v20 = brc_default_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_FAULT)) {
      _computeDelta_cold_1();
    }
  }
  return v14;
}

void sub_23FB98C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FB9A06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_11(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  id v2 = brc_bread_crumbs();
  int v3 = brc_notifications_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    id v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[NOTIF] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FB9C694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void OUTLINED_FUNCTION_11_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x12u);
}

void sub_23FB9C818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB9C894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FB9D74C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FB9DC98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBA04D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBA36D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBA9958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__27(uint64_t a1)
{
}

void sub_23FBABE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

uint64_t __Block_byref_object_copy__28(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__28(uint64_t a1)
{
}

uint64_t AppTelemetryFPFSMigrationInvestigationReadFrom(uint64_t a1, uint64_t a2)
{
  int v3 = (int *)MEMORY[0x263F62298];
  uint64_t v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(void *)(a1 + 256) |= 0x40000000uLL;
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_253;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_255;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_253:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_255:
          BOOL v224 = v20 != 0;
          uint64_t v225 = 250;
          goto LABEL_361;
        case 2u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x400uLL;
          while (2)
          {
            uint64_t v29 = *v3;
            uint64_t v30 = *(void *)(a2 + v29);
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v31;
              v28 |= (unint64_t)(v32 & 0x7F) << v26;
              if (v32 < 0)
              {
                v26 += 7;
                BOOL v15 = v27++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_259;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_259:
          uint64_t v226 = 88;
          goto LABEL_382;
        case 3u:
          char v33 = 0;
          unsigned int v34 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x200000uLL;
          while (2)
          {
            uint64_t v35 = *v3;
            uint64_t v36 = *(void *)(a2 + v35);
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v37;
              v28 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v15 = v34++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_263;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_263:
          uint64_t v226 = 176;
          goto LABEL_382;
        case 4u:
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 1uLL;
          while (2)
          {
            uint64_t v41 = *v3;
            uint64_t v42 = *(void *)(a2 + v41);
            unint64_t v43 = v42 + 1;
            if (v42 == -1 || v43 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v44 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v43;
              v28 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v15 = v40++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_267;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_267:
          uint64_t v226 = 8;
          goto LABEL_382;
        case 5u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          *(void *)(a1 + 256) |= 0x10000000uLL;
          while (2)
          {
            uint64_t v48 = *v3;
            uint64_t v49 = *(void *)(a2 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
              *(void *)(a2 + v4_Block_object_dispose(&STACK[0x3F0], 8) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                BOOL v15 = v46++ >= 9;
                if (v15)
                {
                  uint64_t v47 = 0;
                  goto LABEL_271;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v47 = 0;
          }
LABEL_271:
          BOOL v224 = v47 != 0;
          uint64_t v225 = 248;
          goto LABEL_361;
        case 6u:
          *(void *)(a1 + 256) |= 0x80uLL;
          uint64_t v52 = *v3;
          unint64_t v53 = *(void *)(a2 + v52);
          if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)(a2 + *v4))
          {
            uint64_t v54 = *(void *)(*(void *)(a2 + *v7) + v53);
            *(void *)(a2 + v52) = v53 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + *v5) = 1;
            uint64_t v54 = 0;
          }
          *(void *)(a1 + 64) = v54;
          continue;
        case 7u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0;
          *(void *)(a1 + 256) |= 0x4000000uLL;
          while (2)
          {
            uint64_t v58 = *v3;
            uint64_t v59 = *(void *)(a2 + v58);
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v59);
              *(void *)(a2 + v5_Block_object_dispose(&STACK[0x3F0], 8) = v60;
              v57 |= (unint64_t)(v61 & 0x7F) << v55;
              if (v61 < 0)
              {
                v55 += 7;
                BOOL v15 = v56++ >= 9;
                if (v15)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_275;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v57) = 0;
          }
LABEL_275:
          uint64_t v227 = 240;
          goto LABEL_280;
        case 8u:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v57 = 0;
          *(void *)(a1 + 256) |= 0x8000000uLL;
          while (2)
          {
            uint64_t v64 = *v3;
            uint64_t v65 = *(void *)(a2 + v64);
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v65);
              *(void *)(a2 + v64) = v66;
              v57 |= (unint64_t)(v67 & 0x7F) << v62;
              if (v67 < 0)
              {
                v62 += 7;
                BOOL v15 = v63++ >= 9;
                if (v15)
                {
                  LODWORD(v57) = 0;
                  goto LABEL_279;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v57) = 0;
          }
LABEL_279:
          uint64_t v227 = 244;
LABEL_280:
          *(_DWORD *)(a1 + v227) = v57;
          continue;
        case 9u:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x200uLL;
          while (2)
          {
            uint64_t v70 = *v3;
            uint64_t v71 = *(void *)(a2 + v70);
            unint64_t v72 = v71 + 1;
            if (v71 == -1 || v72 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v73 = *(unsigned char *)(*(void *)(a2 + *v7) + v71);
              *(void *)(a2 + v70) = v72;
              v28 |= (unint64_t)(v73 & 0x7F) << v68;
              if (v73 < 0)
              {
                v68 += 7;
                BOOL v15 = v69++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_284;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_284:
          uint64_t v226 = 80;
          goto LABEL_382;
        case 0xAu:
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 2uLL;
          while (2)
          {
            uint64_t v76 = *v3;
            uint64_t v77 = *(void *)(a2 + v76);
            unint64_t v78 = v77 + 1;
            if (v77 == -1 || v78 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v79 = *(unsigned char *)(*(void *)(a2 + *v7) + v77);
              *(void *)(a2 + v76) = v78;
              v28 |= (unint64_t)(v79 & 0x7F) << v74;
              if (v79 < 0)
              {
                v74 += 7;
                BOOL v15 = v75++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_288;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_288:
          uint64_t v226 = 16;
          goto LABEL_382;
        case 0xBu:
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 4uLL;
          while (2)
          {
            uint64_t v82 = *v3;
            uint64_t v83 = *(void *)(a2 + v82);
            unint64_t v84 = v83 + 1;
            if (v83 == -1 || v84 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v85 = *(unsigned char *)(*(void *)(a2 + *v7) + v83);
              *(void *)(a2 + v82) = v84;
              v28 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                BOOL v15 = v81++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_292;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_292:
          uint64_t v226 = 24;
          goto LABEL_382;
        case 0xCu:
          uint64_t v86 = PBReaderReadString();
          uint64_t v87 = 232;
          goto LABEL_97;
        case 0xDu:
          uint64_t v86 = PBReaderReadString();
          uint64_t v87 = 216;
          goto LABEL_97;
        case 0xEu:
          uint64_t v86 = PBReaderReadString();
          uint64_t v87 = 224;
LABEL_97:
          BOOL v88 = *(void **)(a1 + v87);
          *(void *)(a1 + v87) = v86;

          continue;
        case 0xFu:
          char v89 = 0;
          unsigned int v90 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 8uLL;
          while (2)
          {
            uint64_t v91 = *v3;
            uint64_t v92 = *(void *)(a2 + v91);
            unint64_t v93 = v92 + 1;
            if (v92 == -1 || v93 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v94 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
              *(void *)(a2 + v91) = v93;
              v28 |= (unint64_t)(v94 & 0x7F) << v89;
              if (v94 < 0)
              {
                v89 += 7;
                BOOL v15 = v90++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_296;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_296:
          uint64_t v226 = 32;
          goto LABEL_382;
        case 0x10u:
          char v95 = 0;
          unsigned int v96 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x10uLL;
          while (2)
          {
            uint64_t v97 = *v3;
            uint64_t v98 = *(void *)(a2 + v97);
            unint64_t v99 = v98 + 1;
            if (v98 == -1 || v99 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v100 = *(unsigned char *)(*(void *)(a2 + *v7) + v98);
              *(void *)(a2 + v97) = v99;
              v28 |= (unint64_t)(v100 & 0x7F) << v95;
              if (v100 < 0)
              {
                v95 += 7;
                BOOL v15 = v96++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_300;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_300:
          uint64_t v226 = 40;
          goto LABEL_382;
        case 0x11u:
          char v101 = 0;
          unsigned int v102 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x40uLL;
          while (2)
          {
            uint64_t v103 = *v3;
            uint64_t v104 = *(void *)(a2 + v103);
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v106 = *(unsigned char *)(*(void *)(a2 + *v7) + v104);
              *(void *)(a2 + v103) = v105;
              v28 |= (unint64_t)(v106 & 0x7F) << v101;
              if (v106 < 0)
              {
                v101 += 7;
                BOOL v15 = v102++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_304;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_304:
          uint64_t v226 = 56;
          goto LABEL_382;
        case 0x12u:
          char v107 = 0;
          unsigned int v108 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x1000uLL;
          while (2)
          {
            uint64_t v109 = *v3;
            uint64_t v110 = *(void *)(a2 + v109);
            unint64_t v111 = v110 + 1;
            if (v110 == -1 || v111 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v112 = *(unsigned char *)(*(void *)(a2 + *v7) + v110);
              *(void *)(a2 + v109) = v111;
              v28 |= (unint64_t)(v112 & 0x7F) << v107;
              if (v112 < 0)
              {
                v107 += 7;
                BOOL v15 = v108++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_308;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_308:
          uint64_t v226 = 104;
          goto LABEL_382;
        case 0x13u:
          char v113 = 0;
          unsigned int v114 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x100uLL;
          while (2)
          {
            uint64_t v115 = *v3;
            uint64_t v116 = *(void *)(a2 + v115);
            unint64_t v117 = v116 + 1;
            if (v116 == -1 || v117 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v118 = *(unsigned char *)(*(void *)(a2 + *v7) + v116);
              *(void *)(a2 + v115) = v117;
              v28 |= (unint64_t)(v118 & 0x7F) << v113;
              if (v118 < 0)
              {
                v113 += 7;
                BOOL v15 = v114++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_312;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_312:
          uint64_t v226 = 72;
          goto LABEL_382;
        case 0x14u:
          char v119 = 0;
          unsigned int v120 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x20uLL;
          while (2)
          {
            uint64_t v121 = *v3;
            uint64_t v122 = *(void *)(a2 + v121);
            unint64_t v123 = v122 + 1;
            if (v122 == -1 || v123 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v124 = *(unsigned char *)(*(void *)(a2 + *v7) + v122);
              *(void *)(a2 + v121) = v123;
              v28 |= (unint64_t)(v124 & 0x7F) << v119;
              if (v124 < 0)
              {
                v119 += 7;
                BOOL v15 = v120++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_316;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_316:
          uint64_t v226 = 48;
          goto LABEL_382;
        case 0x15u:
          char v125 = 0;
          unsigned int v126 = 0;
          uint64_t v127 = 0;
          *(void *)(a1 + 256) |= 0x20000000uLL;
          while (2)
          {
            uint64_t v128 = *v3;
            uint64_t v129 = *(void *)(a2 + v128);
            unint64_t v130 = v129 + 1;
            if (v129 == -1 || v130 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v131 = *(unsigned char *)(*(void *)(a2 + *v7) + v129);
              *(void *)(a2 + v12_Block_object_dispose(&STACK[0x3F0], 8) = v130;
              v127 |= (unint64_t)(v131 & 0x7F) << v125;
              if (v131 < 0)
              {
                v125 += 7;
                BOOL v15 = v126++ >= 9;
                if (v15)
                {
                  uint64_t v127 = 0;
                  goto LABEL_320;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v127 = 0;
          }
LABEL_320:
          BOOL v224 = v127 != 0;
          uint64_t v225 = 249;
          goto LABEL_361;
        case 0x16u:
          char v132 = 0;
          unsigned int v133 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x40000uLL;
          while (2)
          {
            uint64_t v134 = *v3;
            uint64_t v135 = *(void *)(a2 + v134);
            unint64_t v136 = v135 + 1;
            if (v135 == -1 || v136 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v137 = *(unsigned char *)(*(void *)(a2 + *v7) + v135);
              *(void *)(a2 + v134) = v136;
              v28 |= (unint64_t)(v137 & 0x7F) << v132;
              if (v137 < 0)
              {
                v132 += 7;
                BOOL v15 = v133++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_324;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_324:
          uint64_t v226 = 152;
          goto LABEL_382;
        case 0x17u:
          char v138 = 0;
          unsigned int v139 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x100000uLL;
          while (2)
          {
            uint64_t v140 = *v3;
            uint64_t v141 = *(void *)(a2 + v140);
            unint64_t v142 = v141 + 1;
            if (v141 == -1 || v142 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v143 = *(unsigned char *)(*(void *)(a2 + *v7) + v141);
              *(void *)(a2 + v140) = v142;
              v28 |= (unint64_t)(v143 & 0x7F) << v138;
              if (v143 < 0)
              {
                v138 += 7;
                BOOL v15 = v139++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_328;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_328:
          uint64_t v226 = 168;
          goto LABEL_382;
        case 0x18u:
          char v144 = 0;
          unsigned int v145 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x80000uLL;
          while (2)
          {
            uint64_t v146 = *v3;
            uint64_t v147 = *(void *)(a2 + v146);
            unint64_t v148 = v147 + 1;
            if (v147 == -1 || v148 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v149 = *(unsigned char *)(*(void *)(a2 + *v7) + v147);
              *(void *)(a2 + v146) = v148;
              v28 |= (unint64_t)(v149 & 0x7F) << v144;
              if (v149 < 0)
              {
                v144 += 7;
                BOOL v15 = v145++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_332;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_332:
          uint64_t v226 = 160;
          goto LABEL_382;
        case 0x19u:
          char v150 = 0;
          unsigned int v151 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x4000uLL;
          while (2)
          {
            uint64_t v152 = *v3;
            uint64_t v153 = *(void *)(a2 + v152);
            unint64_t v154 = v153 + 1;
            if (v153 == -1 || v154 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v155 = *(unsigned char *)(*(void *)(a2 + *v7) + v153);
              *(void *)(a2 + v152) = v154;
              v28 |= (unint64_t)(v155 & 0x7F) << v150;
              if (v155 < 0)
              {
                v150 += 7;
                BOOL v15 = v151++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_336;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_336:
          uint64_t v226 = 120;
          goto LABEL_382;
        case 0x1Au:
          char v156 = 0;
          unsigned int v157 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x20000uLL;
          while (2)
          {
            uint64_t v158 = *v3;
            uint64_t v159 = *(void *)(a2 + v158);
            unint64_t v160 = v159 + 1;
            if (v159 == -1 || v160 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v161 = *(unsigned char *)(*(void *)(a2 + *v7) + v159);
              *(void *)(a2 + v15_Block_object_dispose(&STACK[0x3F0], 8) = v160;
              v28 |= (unint64_t)(v161 & 0x7F) << v156;
              if (v161 < 0)
              {
                v156 += 7;
                BOOL v15 = v157++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_340;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_340:
          uint64_t v226 = 144;
          goto LABEL_382;
        case 0x1Bu:
          char v162 = 0;
          unsigned int v163 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x8000uLL;
          while (2)
          {
            uint64_t v164 = *v3;
            uint64_t v165 = *(void *)(a2 + v164);
            unint64_t v166 = v165 + 1;
            if (v165 == -1 || v166 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v167 = *(unsigned char *)(*(void *)(a2 + *v7) + v165);
              *(void *)(a2 + v164) = v166;
              v28 |= (unint64_t)(v167 & 0x7F) << v162;
              if (v167 < 0)
              {
                v162 += 7;
                BOOL v15 = v163++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_344;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_344:
          uint64_t v226 = 128;
          goto LABEL_382;
        case 0x1Cu:
          char v168 = 0;
          unsigned int v169 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x10000uLL;
          while (2)
          {
            uint64_t v170 = *v3;
            uint64_t v171 = *(void *)(a2 + v170);
            unint64_t v172 = v171 + 1;
            if (v171 == -1 || v172 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v173 = *(unsigned char *)(*(void *)(a2 + *v7) + v171);
              *(void *)(a2 + v170) = v172;
              v28 |= (unint64_t)(v173 & 0x7F) << v168;
              if (v173 < 0)
              {
                v168 += 7;
                BOOL v15 = v169++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_348;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_348:
          uint64_t v226 = 136;
          goto LABEL_382;
        case 0x1Du:
          char v174 = 0;
          unsigned int v175 = 0;
          uint64_t v176 = 0;
          *(void *)(a1 + 256) |= 0x100000000uLL;
          while (2)
          {
            uint64_t v177 = *v3;
            uint64_t v178 = *(void *)(a2 + v177);
            unint64_t v179 = v178 + 1;
            if (v178 == -1 || v179 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v180 = *(unsigned char *)(*(void *)(a2 + *v7) + v178);
              *(void *)(a2 + v177) = v179;
              v176 |= (unint64_t)(v180 & 0x7F) << v174;
              if (v180 < 0)
              {
                v174 += 7;
                BOOL v15 = v175++ >= 9;
                if (v15)
                {
                  uint64_t v176 = 0;
                  goto LABEL_352;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v176 = 0;
          }
LABEL_352:
          BOOL v224 = v176 != 0;
          uint64_t v225 = 252;
          goto LABEL_361;
        case 0x1Eu:
          char v181 = 0;
          unsigned int v182 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x2000000uLL;
          while (2)
          {
            uint64_t v183 = *v3;
            uint64_t v184 = *(void *)(a2 + v183);
            unint64_t v185 = v184 + 1;
            if (v184 == -1 || v185 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v186 = *(unsigned char *)(*(void *)(a2 + *v7) + v184);
              *(void *)(a2 + v183) = v185;
              v28 |= (unint64_t)(v186 & 0x7F) << v181;
              if (v186 < 0)
              {
                v181 += 7;
                BOOL v15 = v182++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_356;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_356:
          uint64_t v226 = 208;
          goto LABEL_382;
        case 0x1Fu:
          char v187 = 0;
          unsigned int v188 = 0;
          uint64_t v189 = 0;
          *(void *)(a1 + 256) |= 0x80000000uLL;
          while (2)
          {
            uint64_t v190 = *v3;
            uint64_t v191 = *(void *)(a2 + v190);
            unint64_t v192 = v191 + 1;
            if (v191 == -1 || v192 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v193 = *(unsigned char *)(*(void *)(a2 + *v7) + v191);
              *(void *)(a2 + v190) = v192;
              v189 |= (unint64_t)(v193 & 0x7F) << v187;
              if (v193 < 0)
              {
                v187 += 7;
                BOOL v15 = v188++ >= 9;
                if (v15)
                {
                  uint64_t v189 = 0;
                  goto LABEL_360;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v189 = 0;
          }
LABEL_360:
          BOOL v224 = v189 != 0;
          uint64_t v225 = 251;
LABEL_361:
          *(unsigned char *)(a1 + v225) = v224;
          continue;
        case 0x20u:
          char v194 = 0;
          unsigned int v195 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x1000000uLL;
          while (2)
          {
            uint64_t v196 = *v3;
            uint64_t v197 = *(void *)(a2 + v196);
            unint64_t v198 = v197 + 1;
            if (v197 == -1 || v198 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v199 = *(unsigned char *)(*(void *)(a2 + *v7) + v197);
              *(void *)(a2 + v196) = v198;
              v28 |= (unint64_t)(v199 & 0x7F) << v194;
              if (v199 < 0)
              {
                v194 += 7;
                BOOL v15 = v195++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_365;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_365:
          uint64_t v226 = 200;
          goto LABEL_382;
        case 0x21u:
          char v200 = 0;
          unsigned int v201 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x400000uLL;
          while (2)
          {
            uint64_t v202 = *v3;
            uint64_t v203 = *(void *)(a2 + v202);
            unint64_t v204 = v203 + 1;
            if (v203 == -1 || v204 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v205 = *(unsigned char *)(*(void *)(a2 + *v7) + v203);
              *(void *)(a2 + v202) = v204;
              v28 |= (unint64_t)(v205 & 0x7F) << v200;
              if (v205 < 0)
              {
                v200 += 7;
                BOOL v15 = v201++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_369;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_369:
          uint64_t v226 = 184;
          goto LABEL_382;
        case 0x22u:
          char v206 = 0;
          unsigned int v207 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x800uLL;
          while (2)
          {
            uint64_t v208 = *v3;
            uint64_t v209 = *(void *)(a2 + v208);
            unint64_t v210 = v209 + 1;
            if (v209 == -1 || v210 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v211 = *(unsigned char *)(*(void *)(a2 + *v7) + v209);
              *(void *)(a2 + v20_Block_object_dispose(&STACK[0x3F0], 8) = v210;
              v28 |= (unint64_t)(v211 & 0x7F) << v206;
              if (v211 < 0)
              {
                v206 += 7;
                BOOL v15 = v207++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_373;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_373:
          uint64_t v226 = 96;
          goto LABEL_382;
        case 0x23u:
          char v212 = 0;
          unsigned int v213 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x2000uLL;
          while (2)
          {
            uint64_t v214 = *v3;
            uint64_t v215 = *(void *)(a2 + v214);
            unint64_t v216 = v215 + 1;
            if (v215 == -1 || v216 > *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v217 = *(unsigned char *)(*(void *)(a2 + *v7) + v215);
              *(void *)(a2 + v214) = v216;
              v28 |= (unint64_t)(v217 & 0x7F) << v212;
              if (v217 < 0)
              {
                v212 += 7;
                BOOL v15 = v213++ >= 9;
                if (v15)
                {
                  uint64_t v28 = 0;
                  goto LABEL_377;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v28 = 0;
          }
LABEL_377:
          uint64_t v226 = 112;
          goto LABEL_382;
        case 0x24u:
          char v218 = 0;
          unsigned int v219 = 0;
          uint64_t v28 = 0;
          *(void *)(a1 + 256) |= 0x800000uLL;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v220 = *v3;
        uint64_t v221 = *(void *)(a2 + v220);
        unint64_t v222 = v221 + 1;
        if (v221 == -1 || v222 > *(void *)(a2 + *v4)) {
          break;
        }
        char v223 = *(unsigned char *)(*(void *)(a2 + *v7) + v221);
        *(void *)(a2 + v220) = v222;
        v28 |= (unint64_t)(v223 & 0x7F) << v218;
        if ((v223 & 0x80) == 0) {
          goto LABEL_379;
        }
        v218 += 7;
        BOOL v15 = v219++ >= 9;
        if (v15)
        {
          uint64_t v28 = 0;
          goto LABEL_381;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_379:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v28 = 0;
      }
LABEL_381:
      uint64_t v226 = 192;
LABEL_382:
      *(void *)(a1 + v226) = v28;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FBB8444(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBB8960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__29(uint64_t a1)
{
}

void sub_23FBB97B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FBB9888(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23FBBABD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FBBB7E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC0D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_23FBC1434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_23FBC1BC8(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 184));
  _Unwind_Resume(a1);
}

void sub_23FBC1DB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBC20D8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__30(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__30(uint64_t a1)
{
}

void sub_23FBC25D8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_23FBC2E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBC30D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBC384C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC39B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t BRFieldContentSignatureReadFrom(uint64_t a1, uint64_t a2)
{
  int v3 = (int *)MEMORY[0x263F62298];
  uint64_t v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_24;
        case 2u:
          uint64_t v17 = PBReaderReadData();
          uint64_t v18 = 16;
          goto LABEL_24;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
LABEL_24:
          uint64_t v20 = *(void **)(a1 + v18);
          *(void *)(a1 + v1_Block_object_dispose(&STACK[0x3F0], 8) = v17;

          continue;
        case 4u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
        *(void *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0) {
          goto LABEL_33;
        }
        v21 += 7;
        BOOL v14 = v22++ >= 9;
        if (v14)
        {
          uint64_t v23 = 0;
          goto LABEL_35;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v23 = 0;
      }
LABEL_35:
      *(void *)(a1 + _Block_object_dispose(&STACK[0x3F0], 8) = v23;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FBC4858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC48C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC4C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC519C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC53DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_7(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  int v3 = a1;
  id v4 = a2;
  long long v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  id v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_12;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  char v8 = v3;
  char v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FBC5998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBC5B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_12(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  id v2 = brc_bread_crumbs();
  int v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FBC6584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t brc_index_for_folder_type(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  if (a1 != 1)
  {
    int v3 = brc_bread_crumbs();
    id v4 = brc_default_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      brc_index_for_folder_type_cold_1((uint64_t)v3, v4);
    }
  }
  return v1;
}

uint64_t brc_folder_type_name(uint64_t a1)
{
  if (a1 != 1)
  {
    id v2 = brc_bread_crumbs();
    int v3 = brc_default_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT)) {
      brc_index_for_folder_type_cold_1((uint64_t)v2, v3);
    }
  }
  return 0;
}

uint64_t brc_enumerate_all_folder_types(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 16))(a1, 1);
}

id BRCGetAccountDSIDForMobileDocsRoot(void *a1, char a2)
{
  int v3 = [a1 path];
  id v4 = v3;
  if (!v3)
  {
    uint64_t v8 = 0;
    goto LABEL_13;
  }
  long long v5 = BRCGetXattrValueForKeyOnPath(v3, @"com.apple.ubd.prsid");
  uint64_t v6 = v5;
  if (v5)
  {
    if ([v5 hasSuffix:@".CloudDocs"])
    {
      id v7 = [v6 substringToIndex:objc_msgSend(v6, "length") - objc_msgSend(@".CloudDocs", "length")];
LABEL_11:
      uint64_t v8 = v7;
      goto LABEL_12;
    }
    __int16 v9 = brc_bread_crumbs();
    uint64_t v10 = brc_default_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
      BRCGetAccountDSIDForMobileDocsRoot_cold_1((uint64_t)v6, (uint64_t)v9, v10);
    }

    if ((a2 & 1) == 0)
    {
      id v7 = v6;
      goto LABEL_11;
    }
  }
  uint64_t v8 = 0;
LABEL_12:

LABEL_13:
  return v8;
}

id BRCGetAccountDSIDForiCloudDesktopRoot(void *a1)
{
  uint64_t v1 = [a1 path];
  id v2 = v1;
  if (v1)
  {
    int v3 = BRCGetXattrValueForKeyOnPath(v1, (void *)*MEMORY[0x263F32558]);
  }
  else
  {
    int v3 = 0;
  }

  return v3;
}

void sub_23FBC68B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC6DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBC7618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_23FBC78AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC7938(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC7E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_8(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  int v3 = a1;
  id v4 = a2;
  long long v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  id v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_13;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  uint64_t v8 = v3;
  uint64_t v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FBC8240(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBC86E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

uint64_t __Block_byref_object_copy__31(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__31(uint64_t a1)
{
}

void __dispatch_async_with_logs_block_invoke_13(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  id v2 = brc_bread_crumbs();
  int v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FBC8A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id BRCExecutableNameForProcessIdentifier()
{
  int v0 = MEMORY[0x270FA5388]();
  uint64_t v5 = *MEMORY[0x263EF8340];
  if (proc_pidpath(v0, buffer, 0x1000u) < 1)
  {
    id v2 = 0;
  }
  else
  {
    uint64_t v1 = [NSURL fileURLWithFileSystemRepresentation:buffer isDirectory:0 relativeToURL:0];
    id v2 = [v1 lastPathComponent];
  }
  return v2;
}

uint64_t BRFieldXattrBlobReadFrom(void *a1, uint64_t a2)
{
  int v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        long long v17 = objc_alloc_init(BRFieldXattr);
        [a1 addXattrs:v17];
        if (!PBReaderPlaceMark() || !BRFieldXattrReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FBCA710(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBCA94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FBCABE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBCAE88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FBCB104(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBCB758(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_23FBCD2FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBCD410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBCD694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBCDB34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _fstatItem(int a1, void *a2, _DWORD *a3, void *a4, void *a5)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  long long v15 = xmmword_23FD34430;
  uint64_t v16 = 0;
  if (!a5) {
    DWORD1(v15) = 101187584;
  }
  memset(v23, 0, 512);
  if (fgetattrlist(a1, &v15, v23, 0x420uLL, 0x20u) < 0)
  {
    int v12 = *__error();
    char v13 = brc_bread_crumbs();
    id v14 = brc_default_log();
    if (os_log_type_enabled(v14, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 67109634;
      int v18 = a1;
      __int16 v19 = 1024;
      int v20 = v12;
      __int16 v21 = 2112;
      unsigned int v22 = v13;
      _os_log_error_impl(&dword_23FA42000, v14, (os_log_type_t)0x90u, "[ERROR] fgetattrlist(%d) failed %{errno}d%@", buf, 0x18u);
    }

    *__error() = v12;
    return 0xFFFFFFFFLL;
  }
  else
  {
    if (a3) {
      *a3 = DWORD1(v23[0]);
    }
    if (a2) {
      *a2 = *((void *)&v23[0] + 1);
    }
    if (a4) {
      *a4 = *(void *)&v23[1];
    }
    if (a5)
    {
      objc_msgSend(NSString, "br_pathWithFileSystemRepresentation:", (char *)&v23[1] + SDWORD2(v23[1]) + 8, v15, v16);
      id v10 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t result = 0;
      *a5 = v10;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_23FBD00C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_23FBD01AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBD18BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD1AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD1DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD1F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD21D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD2474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD2608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD29CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD2D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD310C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD3318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD3CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD3FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD42B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_23FBD4700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FBD4900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_23FBD5338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FBD5CF0(_Unwind_Exception *a1)
{
}

void setTypeFieldFromDBType(int a1, int a2, __int16 *a3)
{
  switch(a1)
  {
    case -1:
      id v4 = brc_bread_crumbs();
      uint64_t v5 = brc_default_log();
      if (os_log_type_enabled(v5, (os_log_type_t)0x90u)) {
        setTypeFieldFromDBType_cold_1((uint64_t)v4, v5);
      }

      return;
    case 0:
      __int16 v3 = *a3 | 8;
      goto LABEL_16;
    case 1:
      __int16 v6 = *a3;
      if (a2) {
        __int16 v3 = v6 | 0x200;
      }
      else {
        __int16 v3 = v6 | 1;
      }
      goto LABEL_16;
    case 2:
      __int16 v3 = *a3 | 0x10;
      goto LABEL_16;
    case 3:
      __int16 v3 = *a3 | 2;
      goto LABEL_16;
    case 4:
      __int16 v3 = *a3 | 0x20;
      goto LABEL_16;
    case 5:
      __int16 v3 = *a3 | 4;
      goto LABEL_16;
    case 6:
      __int16 v3 = *a3 | 0x40;
      goto LABEL_16;
    case 7:
      __int16 v3 = *a3 | 0x80;
      goto LABEL_16;
    case 8:
    case 9:
    case 10:
      __int16 v3 = *a3 | 0x100;
LABEL_16:
      *a3 = v3;
      break;
    default:
      return;
  }
}

void sub_23FBD8F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__32(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__32(uint64_t a1)
{
}

void sub_23FBD957C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

uint64_t AppTelemetryItemStatsInvestigationReadFrom(uint64_t a1, uint64_t a2)
{
  __int16 v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x2000000uLL;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_555;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_557;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_555:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_557:
          uint64_t v427 = 208;
          goto LABEL_856;
        case 2u:
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          *(void *)(a1 + 452) |= 0x80000000000uLL;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                BOOL v14 = v25++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_561;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v26) = 0;
          }
LABEL_561:
          uint64_t v428 = 384;
          goto LABEL_614;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          *(void *)(a1 + 452) |= 0x40000000000uLL;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
              *(void *)(a2 + v32) = v33 + 1;
              v26 |= (unint64_t)(v34 & 0x7F) << v30;
              if (v34 < 0)
              {
                v30 += 7;
                BOOL v14 = v31++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_565;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v26) = 0;
          }
LABEL_565:
          uint64_t v428 = 340;
          goto LABEL_614;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          *(void *)(a1 + 452) |= 0x800000000000000uLL;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v3_Block_object_dispose(&STACK[0x3F0], 8) = v39 + 1;
              v37 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v14 = v36++ >= 9;
                if (v14)
                {
                  uint64_t v37 = 0;
                  goto LABEL_569;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v37 = 0;
          }
LABEL_569:
          BOOL v429 = v37 != 0;
          uint64_t v430 = 433;
          goto LABEL_839;
        case 5u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          *(void *)(a1 + 452) |= 0x1000000000000000uLL;
          while (2)
          {
            uint64_t v44 = *v3;
            unint64_t v45 = *(void *)(a2 + v44);
            if (v45 == -1 || v45 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
              *(void *)(a2 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                BOOL v14 = v42++ >= 9;
                if (v14)
                {
                  uint64_t v43 = 0;
                  goto LABEL_573;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v43 = 0;
          }
LABEL_573:
          BOOL v429 = v43 != 0;
          uint64_t v430 = 434;
          goto LABEL_839;
        case 6u:
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v26 = 0;
          *(void *)(a1 + 452) |= 0x200000000000uLL;
          while (2)
          {
            uint64_t v49 = *v3;
            unint64_t v50 = *(void *)(a2 + v49);
            if (v50 == -1 || v50 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
              *(void *)(a2 + v49) = v50 + 1;
              v26 |= (unint64_t)(v51 & 0x7F) << v47;
              if (v51 < 0)
              {
                v47 += 7;
                BOOL v14 = v48++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_577;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v26) = 0;
          }
LABEL_577:
          uint64_t v428 = 416;
          goto LABEL_614;
        case 7u:
          char v52 = 0;
          unsigned int v53 = 0;
          uint64_t v54 = 0;
          *(void *)(a1 + 452) |= 0x100000000000000uLL;
          while (2)
          {
            uint64_t v55 = *v3;
            unint64_t v56 = *(void *)(a2 + v55);
            if (v56 == -1 || v56 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v57 = *(unsigned char *)(*(void *)(a2 + *v7) + v56);
              *(void *)(a2 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                BOOL v14 = v53++ >= 9;
                if (v14)
                {
                  uint64_t v54 = 0;
                  goto LABEL_581;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v54 = 0;
          }
LABEL_581:
          BOOL v429 = v54 != 0;
          uint64_t v430 = 430;
          goto LABEL_839;
        case 8u:
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          *(void *)(a1 + 452) |= 0x8000000000000000;
          while (2)
          {
            uint64_t v61 = *v3;
            unint64_t v62 = *(void *)(a2 + v61);
            if (v62 == -1 || v62 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v63 = *(unsigned char *)(*(void *)(a2 + *v7) + v62);
              *(void *)(a2 + v61) = v62 + 1;
              v60 |= (unint64_t)(v63 & 0x7F) << v58;
              if (v63 < 0)
              {
                v58 += 7;
                BOOL v14 = v59++ >= 9;
                if (v14)
                {
                  uint64_t v60 = 0;
                  goto LABEL_585;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v60 = 0;
          }
LABEL_585:
          BOOL v429 = v60 != 0;
          uint64_t v430 = 437;
          goto LABEL_839;
        case 9u:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          *(void *)(a1 + 452) |= 0x4000000000000000uLL;
          while (2)
          {
            uint64_t v67 = *v3;
            unint64_t v68 = *(void *)(a2 + v67);
            if (v68 == -1 || v68 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v69 = *(unsigned char *)(*(void *)(a2 + *v7) + v68);
              *(void *)(a2 + v67) = v68 + 1;
              v66 |= (unint64_t)(v69 & 0x7F) << v64;
              if (v69 < 0)
              {
                v64 += 7;
                BOOL v14 = v65++ >= 9;
                if (v14)
                {
                  uint64_t v66 = 0;
                  goto LABEL_589;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v66 = 0;
          }
LABEL_589:
          BOOL v429 = v66 != 0;
          uint64_t v430 = 436;
          goto LABEL_839;
        case 0xAu:
          uint64_t v70 = PBReaderReadString();
          uint64_t v71 = 408;
          goto LABEL_490;
        case 0xBu:
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v74 = 0;
          *(void *)(a1 + 452) |= 0x200000000000000uLL;
          while (2)
          {
            uint64_t v75 = *v3;
            unint64_t v76 = *(void *)(a2 + v75);
            if (v76 == -1 || v76 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v77 = *(unsigned char *)(*(void *)(a2 + *v7) + v76);
              *(void *)(a2 + v75) = v76 + 1;
              v74 |= (unint64_t)(v77 & 0x7F) << v72;
              if (v77 < 0)
              {
                v72 += 7;
                BOOL v14 = v73++ >= 9;
                if (v14)
                {
                  uint64_t v74 = 0;
                  goto LABEL_593;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v74 = 0;
          }
LABEL_593:
          BOOL v429 = v74 != 0;
          uint64_t v430 = 431;
          goto LABEL_839;
        case 0xCu:
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v80 = 0;
          *(_WORD *)(a1 + 460) |= 1u;
          while (2)
          {
            uint64_t v81 = *v3;
            unint64_t v82 = *(void *)(a2 + v81);
            if (v82 == -1 || v82 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v83 = *(unsigned char *)(*(void *)(a2 + *v7) + v82);
              *(void *)(a2 + v81) = v82 + 1;
              v80 |= (unint64_t)(v83 & 0x7F) << v78;
              if (v83 < 0)
              {
                v78 += 7;
                BOOL v14 = v79++ >= 9;
                if (v14)
                {
                  uint64_t v80 = 0;
                  goto LABEL_597;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v80 = 0;
          }
LABEL_597:
          BOOL v429 = v80 != 0;
          uint64_t v430 = 438;
          goto LABEL_839;
        case 0xDu:
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v26 = 0;
          *(void *)(a1 + 452) |= 0x20000000000uLL;
          while (2)
          {
            uint64_t v86 = *v3;
            unint64_t v87 = *(void *)(a2 + v86);
            if (v87 == -1 || v87 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v88 = *(unsigned char *)(*(void *)(a2 + *v7) + v87);
              *(void *)(a2 + v86) = v87 + 1;
              v26 |= (unint64_t)(v88 & 0x7F) << v84;
              if (v88 < 0)
              {
                v84 += 7;
                BOOL v14 = v85++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_601;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v26) = 0;
          }
LABEL_601:
          uint64_t v428 = 336;
          goto LABEL_614;
        case 0xEu:
          char v89 = 0;
          unsigned int v90 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x100000000uLL;
          while (2)
          {
            uint64_t v91 = *v3;
            unint64_t v92 = *(void *)(a2 + v91);
            if (v92 == -1 || v92 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v93 = *(unsigned char *)(*(void *)(a2 + *v7) + v92);
              *(void *)(a2 + v91) = v92 + 1;
              v19 |= (unint64_t)(v93 & 0x7F) << v89;
              if (v93 < 0)
              {
                v89 += 7;
                BOOL v14 = v90++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_605;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_605:
          uint64_t v427 = 264;
          goto LABEL_856;
        case 0xFu:
          char v94 = 0;
          unsigned int v95 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x20uLL;
          while (2)
          {
            uint64_t v96 = *v3;
            unint64_t v97 = *(void *)(a2 + v96);
            if (v97 == -1 || v97 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v98 = *(unsigned char *)(*(void *)(a2 + *v7) + v97);
              *(void *)(a2 + v96) = v97 + 1;
              v19 |= (unint64_t)(v98 & 0x7F) << v94;
              if (v98 < 0)
              {
                v94 += 7;
                BOOL v14 = v95++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_609;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_609:
          uint64_t v427 = 48;
          goto LABEL_856;
        case 0x10u:
          char v99 = 0;
          unsigned int v100 = 0;
          uint64_t v26 = 0;
          *(void *)(a1 + 452) |= 0x100000000000uLL;
          while (2)
          {
            uint64_t v101 = *v3;
            unint64_t v102 = *(void *)(a2 + v101);
            if (v102 == -1 || v102 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v103 = *(unsigned char *)(*(void *)(a2 + *v7) + v102);
              *(void *)(a2 + v101) = v102 + 1;
              v26 |= (unint64_t)(v103 & 0x7F) << v99;
              if (v103 < 0)
              {
                v99 += 7;
                BOOL v14 = v100++ >= 9;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_613;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v26) = 0;
          }
LABEL_613:
          uint64_t v428 = 400;
LABEL_614:
          *(_DWORD *)(a1 + v42_Block_object_dispose(&STACK[0x3F0], 8) = v26;
          continue;
        case 0x11u:
          char v104 = 0;
          unsigned int v105 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x10000000uLL;
          while (2)
          {
            uint64_t v106 = *v3;
            unint64_t v107 = *(void *)(a2 + v106);
            if (v107 == -1 || v107 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v108 = *(unsigned char *)(*(void *)(a2 + *v7) + v107);
              *(void *)(a2 + v106) = v107 + 1;
              v19 |= (unint64_t)(v108 & 0x7F) << v104;
              if (v108 < 0)
              {
                v104 += 7;
                BOOL v14 = v105++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_618;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_618:
          uint64_t v427 = 232;
          goto LABEL_856;
        case 0x12u:
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x200000uLL;
          while (2)
          {
            uint64_t v111 = *v3;
            unint64_t v112 = *(void *)(a2 + v111);
            if (v112 == -1 || v112 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v113 = *(unsigned char *)(*(void *)(a2 + *v7) + v112);
              *(void *)(a2 + v111) = v112 + 1;
              v19 |= (unint64_t)(v113 & 0x7F) << v109;
              if (v113 < 0)
              {
                v109 += 7;
                BOOL v14 = v110++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_622;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_622:
          uint64_t v427 = 176;
          goto LABEL_856;
        case 0x13u:
          char v114 = 0;
          unsigned int v115 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x400000000uLL;
          while (2)
          {
            uint64_t v116 = *v3;
            unint64_t v117 = *(void *)(a2 + v116);
            if (v117 == -1 || v117 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v118 = *(unsigned char *)(*(void *)(a2 + *v7) + v117);
              *(void *)(a2 + v116) = v117 + 1;
              v19 |= (unint64_t)(v118 & 0x7F) << v114;
              if (v118 < 0)
              {
                v114 += 7;
                BOOL v14 = v115++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_626;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_626:
          uint64_t v427 = 280;
          goto LABEL_856;
        case 0x14u:
          char v119 = 0;
          unsigned int v120 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x200000000uLL;
          while (2)
          {
            uint64_t v121 = *v3;
            unint64_t v122 = *(void *)(a2 + v121);
            if (v122 == -1 || v122 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v123 = *(unsigned char *)(*(void *)(a2 + *v7) + v122);
              *(void *)(a2 + v121) = v122 + 1;
              v19 |= (unint64_t)(v123 & 0x7F) << v119;
              if (v123 < 0)
              {
                v119 += 7;
                BOOL v14 = v120++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_630;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_630:
          uint64_t v427 = 272;
          goto LABEL_856;
        case 0x15u:
          char v124 = 0;
          unsigned int v125 = 0;
          uint64_t v126 = 0;
          *(void *)(a1 + 452) |= 0x40000000000000uLL;
          while (2)
          {
            uint64_t v127 = *v3;
            unint64_t v128 = *(void *)(a2 + v127);
            if (v128 == -1 || v128 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v129 = *(unsigned char *)(*(void *)(a2 + *v7) + v128);
              *(void *)(a2 + v127) = v128 + 1;
              v126 |= (unint64_t)(v129 & 0x7F) << v124;
              if (v129 < 0)
              {
                v124 += 7;
                BOOL v14 = v125++ >= 9;
                if (v14)
                {
                  uint64_t v126 = 0;
                  goto LABEL_634;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v126 = 0;
          }
LABEL_634:
          BOOL v429 = v126 != 0;
          uint64_t v430 = 428;
          goto LABEL_839;
        case 0x16u:
          char v130 = 0;
          unsigned int v131 = 0;
          uint64_t v132 = 0;
          *(_WORD *)(a1 + 460) |= 0x20u;
          while (2)
          {
            uint64_t v133 = *v3;
            unint64_t v134 = *(void *)(a2 + v133);
            if (v134 == -1 || v134 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v135 = *(unsigned char *)(*(void *)(a2 + *v7) + v134);
              *(void *)(a2 + v133) = v134 + 1;
              v132 |= (unint64_t)(v135 & 0x7F) << v130;
              if (v135 < 0)
              {
                v130 += 7;
                BOOL v14 = v131++ >= 9;
                if (v14)
                {
                  uint64_t v132 = 0;
                  goto LABEL_638;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v132 = 0;
          }
LABEL_638:
          BOOL v429 = v132 != 0;
          uint64_t v430 = 443;
          goto LABEL_839;
        case 0x17u:
          char v136 = 0;
          unsigned int v137 = 0;
          uint64_t v138 = 0;
          *(void *)(a1 + 452) |= 0x2000000000000000uLL;
          while (2)
          {
            uint64_t v139 = *v3;
            unint64_t v140 = *(void *)(a2 + v139);
            if (v140 == -1 || v140 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v141 = *(unsigned char *)(*(void *)(a2 + *v7) + v140);
              *(void *)(a2 + v139) = v140 + 1;
              v138 |= (unint64_t)(v141 & 0x7F) << v136;
              if (v141 < 0)
              {
                v136 += 7;
                BOOL v14 = v137++ >= 9;
                if (v14)
                {
                  uint64_t v138 = 0;
                  goto LABEL_642;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v138 = 0;
          }
LABEL_642:
          BOOL v429 = v138 != 0;
          uint64_t v430 = 435;
          goto LABEL_839;
        case 0x18u:
          char v142 = 0;
          unsigned int v143 = 0;
          uint64_t v144 = 0;
          *(_WORD *)(a1 + 460) |= 4u;
          while (2)
          {
            uint64_t v145 = *v3;
            unint64_t v146 = *(void *)(a2 + v145);
            if (v146 == -1 || v146 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v147 = *(unsigned char *)(*(void *)(a2 + *v7) + v146);
              *(void *)(a2 + v145) = v146 + 1;
              v144 |= (unint64_t)(v147 & 0x7F) << v142;
              if (v147 < 0)
              {
                v142 += 7;
                BOOL v14 = v143++ >= 9;
                if (v14)
                {
                  uint64_t v144 = 0;
                  goto LABEL_646;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v144 = 0;
          }
LABEL_646:
          BOOL v429 = v144 != 0;
          uint64_t v430 = 440;
          goto LABEL_839;
        case 0x19u:
          char v148 = 0;
          unsigned int v149 = 0;
          uint64_t v150 = 0;
          *(_WORD *)(a1 + 460) |= 2u;
          while (2)
          {
            uint64_t v151 = *v3;
            unint64_t v152 = *(void *)(a2 + v151);
            if (v152 == -1 || v152 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v153 = *(unsigned char *)(*(void *)(a2 + *v7) + v152);
              *(void *)(a2 + v151) = v152 + 1;
              v150 |= (unint64_t)(v153 & 0x7F) << v148;
              if (v153 < 0)
              {
                v148 += 7;
                BOOL v14 = v149++ >= 9;
                if (v14)
                {
                  uint64_t v150 = 0;
                  goto LABEL_650;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v150 = 0;
          }
LABEL_650:
          BOOL v429 = v150 != 0;
          uint64_t v430 = 439;
          goto LABEL_839;
        case 0x1Au:
          char v154 = 0;
          unsigned int v155 = 0;
          uint64_t v156 = 0;
          *(void *)(a1 + 452) |= 0x400000000000000uLL;
          while (2)
          {
            uint64_t v157 = *v3;
            unint64_t v158 = *(void *)(a2 + v157);
            if (v158 == -1 || v158 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v159 = *(unsigned char *)(*(void *)(a2 + *v7) + v158);
              *(void *)(a2 + v157) = v158 + 1;
              v156 |= (unint64_t)(v159 & 0x7F) << v154;
              if (v159 < 0)
              {
                v154 += 7;
                BOOL v14 = v155++ >= 9;
                if (v14)
                {
                  uint64_t v156 = 0;
                  goto LABEL_654;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v156 = 0;
          }
LABEL_654:
          BOOL v429 = v156 != 0;
          uint64_t v430 = 432;
          goto LABEL_839;
        case 0x1Bu:
          uint64_t v70 = PBReaderReadString();
          uint64_t v71 = 376;
          goto LABEL_490;
        case 0x1Cu:
          char v160 = 0;
          unsigned int v161 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x1000000uLL;
          while (2)
          {
            uint64_t v162 = *v3;
            unint64_t v163 = *(void *)(a2 + v162);
            if (v163 == -1 || v163 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v164 = *(unsigned char *)(*(void *)(a2 + *v7) + v163);
              *(void *)(a2 + v162) = v163 + 1;
              v19 |= (unint64_t)(v164 & 0x7F) << v160;
              if (v164 < 0)
              {
                v160 += 7;
                BOOL v14 = v161++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_658;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_658:
          uint64_t v427 = 200;
          goto LABEL_856;
        case 0x1Du:
          char v165 = 0;
          unsigned int v166 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x400000uLL;
          while (2)
          {
            uint64_t v167 = *v3;
            unint64_t v168 = *(void *)(a2 + v167);
            if (v168 == -1 || v168 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v169 = *(unsigned char *)(*(void *)(a2 + *v7) + v168);
              *(void *)(a2 + v167) = v168 + 1;
              v19 |= (unint64_t)(v169 & 0x7F) << v165;
              if (v169 < 0)
              {
                v165 += 7;
                BOOL v14 = v166++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_662;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_662:
          uint64_t v427 = 184;
          goto LABEL_856;
        case 0x1Eu:
          char v170 = 0;
          unsigned int v171 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x8000uLL;
          while (2)
          {
            uint64_t v172 = *v3;
            unint64_t v173 = *(void *)(a2 + v172);
            if (v173 == -1 || v173 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v174 = *(unsigned char *)(*(void *)(a2 + *v7) + v173);
              *(void *)(a2 + v172) = v173 + 1;
              v19 |= (unint64_t)(v174 & 0x7F) << v170;
              if (v174 < 0)
              {
                v170 += 7;
                BOOL v14 = v171++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_666;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_666:
          uint64_t v427 = 128;
          goto LABEL_856;
        case 0x1Fu:
          char v175 = 0;
          unsigned int v176 = 0;
          uint64_t v177 = 0;
          *(void *)(a1 + 452) |= 0x80000000000000uLL;
          while (2)
          {
            uint64_t v178 = *v3;
            unint64_t v179 = *(void *)(a2 + v178);
            if (v179 == -1 || v179 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v180 = *(unsigned char *)(*(void *)(a2 + *v7) + v179);
              *(void *)(a2 + v17_Block_object_dispose(&STACK[0x3F0], 8) = v179 + 1;
              v177 |= (unint64_t)(v180 & 0x7F) << v175;
              if (v180 < 0)
              {
                v175 += 7;
                BOOL v14 = v176++ >= 9;
                if (v14)
                {
                  uint64_t v177 = 0;
                  goto LABEL_670;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v177 = 0;
          }
LABEL_670:
          BOOL v429 = v177 != 0;
          uint64_t v430 = 429;
          goto LABEL_839;
        case 0x20u:
          char v181 = 0;
          unsigned int v182 = 0;
          uint64_t v183 = 0;
          *(void *)(a1 + 452) |= 0x10000000000000uLL;
          while (2)
          {
            uint64_t v184 = *v3;
            unint64_t v185 = *(void *)(a2 + v184);
            if (v185 == -1 || v185 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v186 = *(unsigned char *)(*(void *)(a2 + *v7) + v185);
              *(void *)(a2 + v184) = v185 + 1;
              v183 |= (unint64_t)(v186 & 0x7F) << v181;
              if (v186 < 0)
              {
                v181 += 7;
                BOOL v14 = v182++ >= 9;
                if (v14)
                {
                  uint64_t v183 = 0;
                  goto LABEL_674;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v183 = 0;
          }
LABEL_674:
          BOOL v429 = v183 != 0;
          uint64_t v430 = 426;
          goto LABEL_839;
        case 0x21u:
          uint64_t v70 = PBReaderReadString();
          uint64_t v71 = 368;
          goto LABEL_490;
        case 0x22u:
          char v187 = 0;
          unsigned int v188 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x8000000uLL;
          while (2)
          {
            uint64_t v189 = *v3;
            unint64_t v190 = *(void *)(a2 + v189);
            if (v190 == -1 || v190 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v191 = *(unsigned char *)(*(void *)(a2 + *v7) + v190);
              *(void *)(a2 + v189) = v190 + 1;
              v19 |= (unint64_t)(v191 & 0x7F) << v187;
              if (v191 < 0)
              {
                v187 += 7;
                BOOL v14 = v188++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_678;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_678:
          uint64_t v427 = 224;
          goto LABEL_856;
        case 0x23u:
          char v192 = 0;
          unsigned int v193 = 0;
          uint64_t v194 = 0;
          *(_WORD *)(a1 + 460) |= 0x200u;
          while (2)
          {
            uint64_t v195 = *v3;
            unint64_t v196 = *(void *)(a2 + v195);
            if (v196 == -1 || v196 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v197 = *(unsigned char *)(*(void *)(a2 + *v7) + v196);
              *(void *)(a2 + v195) = v196 + 1;
              v194 |= (unint64_t)(v197 & 0x7F) << v192;
              if (v197 < 0)
              {
                v192 += 7;
                BOOL v14 = v193++ >= 9;
                if (v14)
                {
                  uint64_t v194 = 0;
                  goto LABEL_682;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v194 = 0;
          }
LABEL_682:
          BOOL v429 = v194 != 0;
          uint64_t v430 = 447;
          goto LABEL_839;
        case 0x24u:
          char v198 = 0;
          unsigned int v199 = 0;
          uint64_t v200 = 0;
          *(_WORD *)(a1 + 460) |= 0x400u;
          while (2)
          {
            uint64_t v201 = *v3;
            unint64_t v202 = *(void *)(a2 + v201);
            if (v202 == -1 || v202 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v203 = *(unsigned char *)(*(void *)(a2 + *v7) + v202);
              *(void *)(a2 + v201) = v202 + 1;
              v200 |= (unint64_t)(v203 & 0x7F) << v198;
              if (v203 < 0)
              {
                v198 += 7;
                BOOL v14 = v199++ >= 9;
                if (v14)
                {
                  uint64_t v200 = 0;
                  goto LABEL_686;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v200 = 0;
          }
LABEL_686:
          BOOL v429 = v200 != 0;
          uint64_t v430 = 448;
          goto LABEL_839;
        case 0x25u:
          uint64_t v70 = PBReaderReadString();
          uint64_t v71 = 344;
          goto LABEL_490;
        case 0x26u:
          char v204 = 0;
          unsigned int v205 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x100uLL;
          while (2)
          {
            uint64_t v206 = *v3;
            unint64_t v207 = *(void *)(a2 + v206);
            if (v207 == -1 || v207 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v208 = *(unsigned char *)(*(void *)(a2 + *v7) + v207);
              *(void *)(a2 + v206) = v207 + 1;
              v19 |= (unint64_t)(v208 & 0x7F) << v204;
              if (v208 < 0)
              {
                v204 += 7;
                BOOL v14 = v205++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_690;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_690:
          uint64_t v427 = 72;
          goto LABEL_856;
        case 0x27u:
          char v209 = 0;
          unsigned int v210 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x40uLL;
          while (2)
          {
            uint64_t v211 = *v3;
            unint64_t v212 = *(void *)(a2 + v211);
            if (v212 == -1 || v212 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v213 = *(unsigned char *)(*(void *)(a2 + *v7) + v212);
              *(void *)(a2 + v211) = v212 + 1;
              v19 |= (unint64_t)(v213 & 0x7F) << v209;
              if (v213 < 0)
              {
                v209 += 7;
                BOOL v14 = v210++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_694;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_694:
          uint64_t v427 = 56;
          goto LABEL_856;
        case 0x28u:
          char v214 = 0;
          unsigned int v215 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x20000uLL;
          while (2)
          {
            uint64_t v216 = *v3;
            unint64_t v217 = *(void *)(a2 + v216);
            if (v217 == -1 || v217 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v218 = *(unsigned char *)(*(void *)(a2 + *v7) + v217);
              *(void *)(a2 + v216) = v217 + 1;
              v19 |= (unint64_t)(v218 & 0x7F) << v214;
              if (v218 < 0)
              {
                v214 += 7;
                BOOL v14 = v215++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_698;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_698:
          uint64_t v427 = 144;
          goto LABEL_856;
        case 0x29u:
          char v219 = 0;
          unsigned int v220 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x10000uLL;
          while (2)
          {
            uint64_t v221 = *v3;
            unint64_t v222 = *(void *)(a2 + v221);
            if (v222 == -1 || v222 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v223 = *(unsigned char *)(*(void *)(a2 + *v7) + v222);
              *(void *)(a2 + v221) = v222 + 1;
              v19 |= (unint64_t)(v223 & 0x7F) << v219;
              if (v223 < 0)
              {
                v219 += 7;
                BOOL v14 = v220++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_702;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_702:
          uint64_t v427 = 136;
          goto LABEL_856;
        case 0x2Au:
          char v224 = 0;
          unsigned int v225 = 0;
          uint64_t v226 = 0;
          *(void *)(a1 + 452) |= 0x2000000000000uLL;
          while (2)
          {
            uint64_t v227 = *v3;
            unint64_t v228 = *(void *)(a2 + v227);
            if (v228 == -1 || v228 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v229 = *(unsigned char *)(*(void *)(a2 + *v7) + v228);
              *(void *)(a2 + v227) = v228 + 1;
              v226 |= (unint64_t)(v229 & 0x7F) << v224;
              if (v229 < 0)
              {
                v224 += 7;
                BOOL v14 = v225++ >= 9;
                if (v14)
                {
                  uint64_t v226 = 0;
                  goto LABEL_706;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v226 = 0;
          }
LABEL_706:
          BOOL v429 = v226 != 0;
          uint64_t v430 = 423;
          goto LABEL_839;
        case 0x2Bu:
          char v230 = 0;
          unsigned int v231 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x80uLL;
          while (2)
          {
            uint64_t v232 = *v3;
            unint64_t v233 = *(void *)(a2 + v232);
            if (v233 == -1 || v233 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v234 = *(unsigned char *)(*(void *)(a2 + *v7) + v233);
              *(void *)(a2 + v232) = v233 + 1;
              v19 |= (unint64_t)(v234 & 0x7F) << v230;
              if (v234 < 0)
              {
                v230 += 7;
                BOOL v14 = v231++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_710;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_710:
          uint64_t v427 = 64;
          goto LABEL_856;
        case 0x2Cu:
          char v235 = 0;
          unsigned int v236 = 0;
          uint64_t v237 = 0;
          *(void *)(a1 + 452) |= 0x4000000000000uLL;
          while (2)
          {
            uint64_t v238 = *v3;
            unint64_t v239 = *(void *)(a2 + v238);
            if (v239 == -1 || v239 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v240 = *(unsigned char *)(*(void *)(a2 + *v7) + v239);
              *(void *)(a2 + v23_Block_object_dispose(&STACK[0x3F0], 8) = v239 + 1;
              v237 |= (unint64_t)(v240 & 0x7F) << v235;
              if (v240 < 0)
              {
                v235 += 7;
                BOOL v14 = v236++ >= 9;
                if (v14)
                {
                  uint64_t v237 = 0;
                  goto LABEL_714;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v237 = 0;
          }
LABEL_714:
          BOOL v429 = v237 != 0;
          uint64_t v430 = 424;
          goto LABEL_839;
        case 0x2Du:
          char v241 = 0;
          unsigned int v242 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x1000uLL;
          while (2)
          {
            uint64_t v243 = *v3;
            unint64_t v244 = *(void *)(a2 + v243);
            if (v244 == -1 || v244 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v245 = *(unsigned char *)(*(void *)(a2 + *v7) + v244);
              *(void *)(a2 + v243) = v244 + 1;
              v19 |= (unint64_t)(v245 & 0x7F) << v241;
              if (v245 < 0)
              {
                v241 += 7;
                BOOL v14 = v242++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_718;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_718:
          uint64_t v427 = 104;
          goto LABEL_856;
        case 0x2Eu:
          char v246 = 0;
          unsigned int v247 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x200uLL;
          while (2)
          {
            uint64_t v248 = *v3;
            unint64_t v249 = *(void *)(a2 + v248);
            if (v249 == -1 || v249 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v250 = *(unsigned char *)(*(void *)(a2 + *v7) + v249);
              *(void *)(a2 + v24_Block_object_dispose(&STACK[0x3F0], 8) = v249 + 1;
              v19 |= (unint64_t)(v250 & 0x7F) << v246;
              if (v250 < 0)
              {
                v246 += 7;
                BOOL v14 = v247++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_722;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_722:
          uint64_t v427 = 80;
          goto LABEL_856;
        case 0x2Fu:
          char v251 = 0;
          unsigned int v252 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x2000uLL;
          while (2)
          {
            uint64_t v253 = *v3;
            unint64_t v254 = *(void *)(a2 + v253);
            if (v254 == -1 || v254 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v255 = *(unsigned char *)(*(void *)(a2 + *v7) + v254);
              *(void *)(a2 + v253) = v254 + 1;
              v19 |= (unint64_t)(v255 & 0x7F) << v251;
              if (v255 < 0)
              {
                v251 += 7;
                BOOL v14 = v252++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_726;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_726:
          uint64_t v427 = 112;
          goto LABEL_856;
        case 0x30u:
          char v256 = 0;
          unsigned int v257 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x400uLL;
          while (2)
          {
            uint64_t v258 = *v3;
            unint64_t v259 = *(void *)(a2 + v258);
            if (v259 == -1 || v259 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v260 = *(unsigned char *)(*(void *)(a2 + *v7) + v259);
              *(void *)(a2 + v25_Block_object_dispose(&STACK[0x3F0], 8) = v259 + 1;
              v19 |= (unint64_t)(v260 & 0x7F) << v256;
              if (v260 < 0)
              {
                v256 += 7;
                BOOL v14 = v257++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_730;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_730:
          uint64_t v427 = 88;
          goto LABEL_856;
        case 0x31u:
          char v261 = 0;
          unsigned int v262 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x4000uLL;
          while (2)
          {
            uint64_t v263 = *v3;
            unint64_t v264 = *(void *)(a2 + v263);
            if (v264 == -1 || v264 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v265 = *(unsigned char *)(*(void *)(a2 + *v7) + v264);
              *(void *)(a2 + v263) = v264 + 1;
              v19 |= (unint64_t)(v265 & 0x7F) << v261;
              if (v265 < 0)
              {
                v261 += 7;
                BOOL v14 = v262++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_734;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_734:
          uint64_t v427 = 120;
          goto LABEL_856;
        case 0x32u:
          char v266 = 0;
          unsigned int v267 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x800uLL;
          while (2)
          {
            uint64_t v268 = *v3;
            unint64_t v269 = *(void *)(a2 + v268);
            if (v269 == -1 || v269 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v270 = *(unsigned char *)(*(void *)(a2 + *v7) + v269);
              *(void *)(a2 + v26_Block_object_dispose(&STACK[0x3F0], 8) = v269 + 1;
              v19 |= (unint64_t)(v270 & 0x7F) << v266;
              if (v270 < 0)
              {
                v266 += 7;
                BOOL v14 = v267++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_738;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_738:
          uint64_t v427 = 96;
          goto LABEL_856;
        case 0x33u:
          char v271 = 0;
          unsigned int v272 = 0;
          uint64_t v273 = 0;
          *(void *)(a1 + 452) |= 0x8000000000000uLL;
          while (2)
          {
            uint64_t v274 = *v3;
            unint64_t v275 = *(void *)(a2 + v274);
            if (v275 == -1 || v275 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v276 = *(unsigned char *)(*(void *)(a2 + *v7) + v275);
              *(void *)(a2 + v274) = v275 + 1;
              v273 |= (unint64_t)(v276 & 0x7F) << v271;
              if (v276 < 0)
              {
                v271 += 7;
                BOOL v14 = v272++ >= 9;
                if (v14)
                {
                  uint64_t v273 = 0;
                  goto LABEL_742;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v273 = 0;
          }
LABEL_742:
          BOOL v429 = v273 != 0;
          uint64_t v430 = 425;
          goto LABEL_839;
        case 0x34u:
          char v277 = 0;
          unsigned int v278 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x800000uLL;
          while (2)
          {
            uint64_t v279 = *v3;
            unint64_t v280 = *(void *)(a2 + v279);
            if (v280 == -1 || v280 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v281 = *(unsigned char *)(*(void *)(a2 + *v7) + v280);
              *(void *)(a2 + v279) = v280 + 1;
              v19 |= (unint64_t)(v281 & 0x7F) << v277;
              if (v281 < 0)
              {
                v277 += 7;
                BOOL v14 = v278++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_746;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_746:
          uint64_t v427 = 192;
          goto LABEL_856;
        case 0x35u:
          char v282 = 0;
          unsigned int v283 = 0;
          uint64_t v284 = 0;
          *(_WORD *)(a1 + 460) |= 0x40u;
          while (2)
          {
            uint64_t v285 = *v3;
            unint64_t v286 = *(void *)(a2 + v285);
            if (v286 == -1 || v286 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v287 = *(unsigned char *)(*(void *)(a2 + *v7) + v286);
              *(void *)(a2 + v285) = v286 + 1;
              v284 |= (unint64_t)(v287 & 0x7F) << v282;
              if (v287 < 0)
              {
                v282 += 7;
                BOOL v14 = v283++ >= 9;
                if (v14)
                {
                  uint64_t v284 = 0;
                  goto LABEL_750;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v284 = 0;
          }
LABEL_750:
          BOOL v429 = v284 != 0;
          uint64_t v430 = 444;
          goto LABEL_839;
        case 0x36u:
          char v288 = 0;
          unsigned int v289 = 0;
          uint64_t v290 = 0;
          *(void *)(a1 + 452) |= 0x800000000000uLL;
          while (2)
          {
            uint64_t v291 = *v3;
            unint64_t v292 = *(void *)(a2 + v291);
            if (v292 == -1 || v292 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v293 = *(unsigned char *)(*(void *)(a2 + *v7) + v292);
              *(void *)(a2 + v291) = v292 + 1;
              v290 |= (unint64_t)(v293 & 0x7F) << v288;
              if (v293 < 0)
              {
                v288 += 7;
                BOOL v14 = v289++ >= 9;
                if (v14)
                {
                  uint64_t v290 = 0;
                  goto LABEL_754;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v290 = 0;
          }
LABEL_754:
          BOOL v429 = v290 != 0;
          uint64_t v430 = 421;
          goto LABEL_839;
        case 0x37u:
          char v294 = 0;
          unsigned int v295 = 0;
          uint64_t v296 = 0;
          *(_WORD *)(a1 + 460) |= 8u;
          while (2)
          {
            uint64_t v297 = *v3;
            unint64_t v298 = *(void *)(a2 + v297);
            if (v298 == -1 || v298 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v299 = *(unsigned char *)(*(void *)(a2 + *v7) + v298);
              *(void *)(a2 + v297) = v298 + 1;
              v296 |= (unint64_t)(v299 & 0x7F) << v294;
              if (v299 < 0)
              {
                v294 += 7;
                BOOL v14 = v295++ >= 9;
                if (v14)
                {
                  uint64_t v296 = 0;
                  goto LABEL_758;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v296 = 0;
          }
LABEL_758:
          BOOL v429 = v296 != 0;
          uint64_t v430 = 441;
          goto LABEL_839;
        case 0x38u:
          char v300 = 0;
          unsigned int v301 = 0;
          uint64_t v302 = 0;
          *(void *)(a1 + 452) |= 0x20000000000000uLL;
          while (2)
          {
            uint64_t v303 = *v3;
            unint64_t v304 = *(void *)(a2 + v303);
            if (v304 == -1 || v304 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v305 = *(unsigned char *)(*(void *)(a2 + *v7) + v304);
              *(void *)(a2 + v303) = v304 + 1;
              v302 |= (unint64_t)(v305 & 0x7F) << v300;
              if (v305 < 0)
              {
                v300 += 7;
                BOOL v14 = v301++ >= 9;
                if (v14)
                {
                  uint64_t v302 = 0;
                  goto LABEL_762;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v302 = 0;
          }
LABEL_762:
          BOOL v429 = v302 != 0;
          uint64_t v430 = 427;
          goto LABEL_839;
        case 0x39u:
          char v306 = 0;
          unsigned int v307 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x4000000uLL;
          while (2)
          {
            uint64_t v308 = *v3;
            unint64_t v309 = *(void *)(a2 + v308);
            if (v309 == -1 || v309 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v310 = *(unsigned char *)(*(void *)(a2 + *v7) + v309);
              *(void *)(a2 + v30_Block_object_dispose(&STACK[0x3F0], 8) = v309 + 1;
              v19 |= (unint64_t)(v310 & 0x7F) << v306;
              if (v310 < 0)
              {
                v306 += 7;
                BOOL v14 = v307++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_766;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_766:
          uint64_t v427 = 216;
          goto LABEL_856;
        case 0x3Au:
          char v311 = 0;
          unsigned int v312 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x10uLL;
          while (2)
          {
            uint64_t v313 = *v3;
            unint64_t v314 = *(void *)(a2 + v313);
            if (v314 == -1 || v314 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v315 = *(unsigned char *)(*(void *)(a2 + *v7) + v314);
              *(void *)(a2 + v313) = v314 + 1;
              v19 |= (unint64_t)(v315 & 0x7F) << v311;
              if (v315 < 0)
              {
                v311 += 7;
                BOOL v14 = v312++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_770;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_770:
          uint64_t v427 = 40;
          goto LABEL_856;
        case 0x3Bu:
          char v316 = 0;
          unsigned int v317 = 0;
          uint64_t v318 = 0;
          *(void *)(a1 + 452) |= 0x1000000000000uLL;
          while (2)
          {
            uint64_t v319 = *v3;
            unint64_t v320 = *(void *)(a2 + v319);
            if (v320 == -1 || v320 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v321 = *(unsigned char *)(*(void *)(a2 + *v7) + v320);
              *(void *)(a2 + v319) = v320 + 1;
              v318 |= (unint64_t)(v321 & 0x7F) << v316;
              if (v321 < 0)
              {
                v316 += 7;
                BOOL v14 = v317++ >= 9;
                if (v14)
                {
                  uint64_t v318 = 0;
                  goto LABEL_774;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v318 = 0;
          }
LABEL_774:
          BOOL v429 = v318 != 0;
          uint64_t v430 = 422;
          goto LABEL_839;
        case 0x3Cu:
          char v322 = 0;
          unsigned int v323 = 0;
          uint64_t v324 = 0;
          *(_WORD *)(a1 + 460) |= 0x100u;
          while (2)
          {
            uint64_t v325 = *v3;
            unint64_t v326 = *(void *)(a2 + v325);
            if (v326 == -1 || v326 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v327 = *(unsigned char *)(*(void *)(a2 + *v7) + v326);
              *(void *)(a2 + v325) = v326 + 1;
              v324 |= (unint64_t)(v327 & 0x7F) << v322;
              if (v327 < 0)
              {
                v322 += 7;
                BOOL v14 = v323++ >= 9;
                if (v14)
                {
                  uint64_t v324 = 0;
                  goto LABEL_778;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v324 = 0;
          }
LABEL_778:
          BOOL v429 = v324 != 0;
          uint64_t v430 = 446;
          goto LABEL_839;
        case 0x3Du:
          uint64_t v70 = PBReaderReadString();
          uint64_t v71 = 392;
          goto LABEL_490;
        case 0x3Eu:
          char v328 = 0;
          unsigned int v329 = 0;
          uint64_t v330 = 0;
          *(_WORD *)(a1 + 460) |= 0x10u;
          while (2)
          {
            uint64_t v331 = *v3;
            unint64_t v332 = *(void *)(a2 + v331);
            if (v332 == -1 || v332 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v333 = *(unsigned char *)(*(void *)(a2 + *v7) + v332);
              *(void *)(a2 + v331) = v332 + 1;
              v330 |= (unint64_t)(v333 & 0x7F) << v328;
              if (v333 < 0)
              {
                v328 += 7;
                BOOL v14 = v329++ >= 9;
                if (v14)
                {
                  uint64_t v330 = 0;
                  goto LABEL_782;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v330 = 0;
          }
LABEL_782:
          BOOL v429 = v330 != 0;
          uint64_t v430 = 442;
          goto LABEL_839;
        case 0x3Fu:
          char v334 = 0;
          unsigned int v335 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x8000000000uLL;
          while (2)
          {
            uint64_t v336 = *v3;
            unint64_t v337 = *(void *)(a2 + v336);
            if (v337 == -1 || v337 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v338 = *(unsigned char *)(*(void *)(a2 + *v7) + v337);
              *(void *)(a2 + v336) = v337 + 1;
              v19 |= (unint64_t)(v338 & 0x7F) << v334;
              if (v338 < 0)
              {
                v334 += 7;
                BOOL v14 = v335++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_786;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_786:
          uint64_t v427 = 320;
          goto LABEL_856;
        case 0x40u:
          char v339 = 0;
          unsigned int v340 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x10000000000uLL;
          while (2)
          {
            uint64_t v341 = *v3;
            unint64_t v342 = *(void *)(a2 + v341);
            if (v342 == -1 || v342 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v343 = *(unsigned char *)(*(void *)(a2 + *v7) + v342);
              *(void *)(a2 + v341) = v342 + 1;
              v19 |= (unint64_t)(v343 & 0x7F) << v339;
              if (v343 < 0)
              {
                v339 += 7;
                BOOL v14 = v340++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_790;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_790:
          uint64_t v427 = 328;
          goto LABEL_856;
        case 0x41u:
          char v344 = 0;
          unsigned int v345 = 0;
          uint64_t v346 = 0;
          *(_WORD *)(a1 + 460) |= 0x80u;
          while (2)
          {
            uint64_t v347 = *v3;
            unint64_t v348 = *(void *)(a2 + v347);
            if (v348 == -1 || v348 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v349 = *(unsigned char *)(*(void *)(a2 + *v7) + v348);
              *(void *)(a2 + v347) = v348 + 1;
              v346 |= (unint64_t)(v349 & 0x7F) << v344;
              if (v349 < 0)
              {
                v344 += 7;
                BOOL v14 = v345++ >= 9;
                if (v14)
                {
                  uint64_t v346 = 0;
                  goto LABEL_794;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v346 = 0;
          }
LABEL_794:
          BOOL v429 = v346 != 0;
          uint64_t v430 = 445;
          goto LABEL_839;
        case 0x42u:
          char v350 = 0;
          unsigned int v351 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x40000000uLL;
          while (2)
          {
            uint64_t v352 = *v3;
            unint64_t v353 = *(void *)(a2 + v352);
            if (v353 == -1 || v353 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v354 = *(unsigned char *)(*(void *)(a2 + *v7) + v353);
              *(void *)(a2 + v352) = v353 + 1;
              v19 |= (unint64_t)(v354 & 0x7F) << v350;
              if (v354 < 0)
              {
                v350 += 7;
                BOOL v14 = v351++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_798;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_798:
          uint64_t v427 = 248;
          goto LABEL_856;
        case 0x43u:
          char v355 = 0;
          unsigned int v356 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x20000000uLL;
          while (2)
          {
            uint64_t v357 = *v3;
            unint64_t v358 = *(void *)(a2 + v357);
            if (v358 == -1 || v358 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v359 = *(unsigned char *)(*(void *)(a2 + *v7) + v358);
              *(void *)(a2 + v357) = v358 + 1;
              v19 |= (unint64_t)(v359 & 0x7F) << v355;
              if (v359 < 0)
              {
                v355 += 7;
                BOOL v14 = v356++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_802;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_802:
          uint64_t v427 = 240;
          goto LABEL_856;
        case 0x44u:
          char v360 = 0;
          unsigned int v361 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x80000000uLL;
          while (2)
          {
            uint64_t v362 = *v3;
            unint64_t v363 = *(void *)(a2 + v362);
            if (v363 == -1 || v363 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v364 = *(unsigned char *)(*(void *)(a2 + *v7) + v363);
              *(void *)(a2 + v362) = v363 + 1;
              v19 |= (unint64_t)(v364 & 0x7F) << v360;
              if (v364 < 0)
              {
                v360 += 7;
                BOOL v14 = v361++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_806;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_806:
          uint64_t v427 = 256;
          goto LABEL_856;
        case 0x45u:
          char v365 = 0;
          unsigned int v366 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x80000uLL;
          while (2)
          {
            uint64_t v367 = *v3;
            unint64_t v368 = *(void *)(a2 + v367);
            if (v368 == -1 || v368 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v369 = *(unsigned char *)(*(void *)(a2 + *v7) + v368);
              *(void *)(a2 + v367) = v368 + 1;
              v19 |= (unint64_t)(v369 & 0x7F) << v365;
              if (v369 < 0)
              {
                v365 += 7;
                BOOL v14 = v366++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_810;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_810:
          uint64_t v427 = 160;
          goto LABEL_856;
        case 0x46u:
          char v370 = 0;
          unsigned int v371 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x40000uLL;
          while (2)
          {
            uint64_t v372 = *v3;
            unint64_t v373 = *(void *)(a2 + v372);
            if (v373 == -1 || v373 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v374 = *(unsigned char *)(*(void *)(a2 + *v7) + v373);
              *(void *)(a2 + v372) = v373 + 1;
              v19 |= (unint64_t)(v374 & 0x7F) << v370;
              if (v374 < 0)
              {
                v370 += 7;
                BOOL v14 = v371++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_814;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_814:
          uint64_t v427 = 152;
          goto LABEL_856;
        case 0x47u:
          char v375 = 0;
          unsigned int v376 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x100000uLL;
          while (2)
          {
            uint64_t v377 = *v3;
            unint64_t v378 = *(void *)(a2 + v377);
            if (v378 == -1 || v378 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v379 = *(unsigned char *)(*(void *)(a2 + *v7) + v378);
              *(void *)(a2 + v377) = v378 + 1;
              v19 |= (unint64_t)(v379 & 0x7F) << v375;
              if (v379 < 0)
              {
                v375 += 7;
                BOOL v14 = v376++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_818;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_818:
          uint64_t v427 = 168;
          goto LABEL_856;
        case 0x48u:
          uint64_t v70 = PBReaderReadString();
          uint64_t v71 = 352;
          goto LABEL_490;
        case 0x49u:
          uint64_t v70 = PBReaderReadString();
          uint64_t v71 = 360;
LABEL_490:
          v380 = *(void **)(a1 + v71);
          *(void *)(a1 + v71) = v70;

          continue;
        case 0x4Au:
          char v381 = 0;
          unsigned int v382 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 1uLL;
          while (2)
          {
            uint64_t v383 = *v3;
            unint64_t v384 = *(void *)(a2 + v383);
            if (v384 == -1 || v384 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v385 = *(unsigned char *)(*(void *)(a2 + *v7) + v384);
              *(void *)(a2 + v383) = v384 + 1;
              v19 |= (unint64_t)(v385 & 0x7F) << v381;
              if (v385 < 0)
              {
                v381 += 7;
                BOOL v14 = v382++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_822;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_822:
          uint64_t v427 = 8;
          goto LABEL_856;
        case 0x4Bu:
          char v386 = 0;
          unsigned int v387 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 4uLL;
          while (2)
          {
            uint64_t v388 = *v3;
            unint64_t v389 = *(void *)(a2 + v388);
            if (v389 == -1 || v389 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v390 = *(unsigned char *)(*(void *)(a2 + *v7) + v389);
              *(void *)(a2 + v38_Block_object_dispose(&STACK[0x3F0], 8) = v389 + 1;
              v19 |= (unint64_t)(v390 & 0x7F) << v386;
              if (v390 < 0)
              {
                v386 += 7;
                BOOL v14 = v387++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_826;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_826:
          uint64_t v427 = 24;
          goto LABEL_856;
        case 0x4Cu:
          char v391 = 0;
          unsigned int v392 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 2uLL;
          while (2)
          {
            uint64_t v393 = *v3;
            unint64_t v394 = *(void *)(a2 + v393);
            if (v394 == -1 || v394 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v395 = *(unsigned char *)(*(void *)(a2 + *v7) + v394);
              *(void *)(a2 + v393) = v394 + 1;
              v19 |= (unint64_t)(v395 & 0x7F) << v391;
              if (v395 < 0)
              {
                v391 += 7;
                BOOL v14 = v392++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_830;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_830:
          uint64_t v427 = 16;
          goto LABEL_856;
        case 0x4Du:
          char v396 = 0;
          unsigned int v397 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 8uLL;
          while (2)
          {
            uint64_t v398 = *v3;
            unint64_t v399 = *(void *)(a2 + v398);
            if (v399 == -1 || v399 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v400 = *(unsigned char *)(*(void *)(a2 + *v7) + v399);
              *(void *)(a2 + v39_Block_object_dispose(&STACK[0x3F0], 8) = v399 + 1;
              v19 |= (unint64_t)(v400 & 0x7F) << v396;
              if (v400 < 0)
              {
                v396 += 7;
                BOOL v14 = v397++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_834;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_834:
          uint64_t v427 = 32;
          goto LABEL_856;
        case 0x4Eu:
          char v401 = 0;
          unsigned int v402 = 0;
          uint64_t v403 = 0;
          *(void *)(a1 + 452) |= 0x400000000000uLL;
          while (2)
          {
            uint64_t v404 = *v3;
            unint64_t v405 = *(void *)(a2 + v404);
            if (v405 == -1 || v405 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v406 = *(unsigned char *)(*(void *)(a2 + *v7) + v405);
              *(void *)(a2 + v404) = v405 + 1;
              v403 |= (unint64_t)(v406 & 0x7F) << v401;
              if (v406 < 0)
              {
                v401 += 7;
                BOOL v14 = v402++ >= 9;
                if (v14)
                {
                  uint64_t v403 = 0;
                  goto LABEL_838;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v403 = 0;
          }
LABEL_838:
          BOOL v429 = v403 != 0;
          uint64_t v430 = 420;
LABEL_839:
          *(unsigned char *)(a1 + v430) = v429;
          continue;
        case 0x4Fu:
          char v407 = 0;
          unsigned int v408 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x1000000000uLL;
          while (2)
          {
            uint64_t v409 = *v3;
            unint64_t v410 = *(void *)(a2 + v409);
            if (v410 == -1 || v410 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v411 = *(unsigned char *)(*(void *)(a2 + *v7) + v410);
              *(void *)(a2 + v409) = v410 + 1;
              v19 |= (unint64_t)(v411 & 0x7F) << v407;
              if (v411 < 0)
              {
                v407 += 7;
                BOOL v14 = v408++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_843;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_843:
          uint64_t v427 = 296;
          goto LABEL_856;
        case 0x50u:
          char v412 = 0;
          unsigned int v413 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x2000000000uLL;
          while (2)
          {
            uint64_t v414 = *v3;
            unint64_t v415 = *(void *)(a2 + v414);
            if (v415 == -1 || v415 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v416 = *(unsigned char *)(*(void *)(a2 + *v7) + v415);
              *(void *)(a2 + v414) = v415 + 1;
              v19 |= (unint64_t)(v416 & 0x7F) << v412;
              if (v416 < 0)
              {
                v412 += 7;
                BOOL v14 = v413++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_847;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_847:
          uint64_t v427 = 304;
          goto LABEL_856;
        case 0x51u:
          char v417 = 0;
          unsigned int v418 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x4000000000uLL;
          while (2)
          {
            uint64_t v419 = *v3;
            unint64_t v420 = *(void *)(a2 + v419);
            if (v420 == -1 || v420 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v421 = *(unsigned char *)(*(void *)(a2 + *v7) + v420);
              *(void *)(a2 + v419) = v420 + 1;
              v19 |= (unint64_t)(v421 & 0x7F) << v417;
              if (v421 < 0)
              {
                v417 += 7;
                BOOL v14 = v418++ >= 9;
                if (v14)
                {
                  uint64_t v19 = 0;
                  goto LABEL_851;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v19 = 0;
          }
LABEL_851:
          uint64_t v427 = 312;
          goto LABEL_856;
        case 0x52u:
          char v422 = 0;
          unsigned int v423 = 0;
          uint64_t v19 = 0;
          *(void *)(a1 + 452) |= 0x800000000uLL;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v424 = *v3;
        unint64_t v425 = *(void *)(a2 + v424);
        if (v425 == -1 || v425 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v426 = *(unsigned char *)(*(void *)(a2 + *v7) + v425);
        *(void *)(a2 + v424) = v425 + 1;
        v19 |= (unint64_t)(v426 & 0x7F) << v422;
        if ((v426 & 0x80) == 0) {
          goto LABEL_853;
        }
        v422 += 7;
        BOOL v14 = v423++ >= 9;
        if (v14)
        {
          uint64_t v19 = 0;
          goto LABEL_855;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_853:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v19 = 0;
      }
LABEL_855:
      uint64_t v427 = 288;
LABEL_856:
      *(void *)(a1 + v427) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t _BRCWritePackageExtensions()
{
  if (_BRCWritePackageExtensions_onceToken != -1) {
    dispatch_once(&_BRCWritePackageExtensions_onceToken, &__block_literal_global_14_0);
  }
  return br_pacer_signal();
}

id extension_array_path()
{
  int v0 = objc_msgSend(NSString, "br_currentSupportDir");
  uint64_t v1 = [v0 stringByAppendingPathComponent:@"pkg_extensions.plist"];

  return v1;
}

id __old_extension_manager_bundle_path()
{
  int v0 = objc_msgSend(NSString, "br_currentSupportDir");
  uint64_t v1 = [v0 stringByAppendingPathComponent:@"SharedPackageExtensions.app"];

  return v1;
}

id __very_old_extension_manager_bundle_path()
{
  int v0 = objc_msgSend(NSString, "br_currentSupportDir");
  uint64_t v1 = [v0 stringByAppendingPathComponent:*MEMORY[0x263F32468]];
  uint64_t v2 = [v1 stringByAppendingPathComponent:@"SharedPackageExtensions.app"];

  return v2;
}

void sub_23FBE8CF8(_Unwind_Exception *a1)
{
}

void sub_23FBE9C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FBEA990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

uint64_t __Block_byref_object_copy__33(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__33(uint64_t a1)
{
}

void sub_23FBED254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__34(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__34(uint64_t a1)
{
}

void __dispatch_async_with_logs_block_invoke_14(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  __int16 v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    unint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FBEDA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FBEF850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBEFB24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBEFE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  objc_sync_exit(v20);
  _Unwind_Resume(a1);
}

void sub_23FBF0D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF0E54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF0F90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF10CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF1224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF1374(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF14BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF164C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF1774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF189C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FBF25E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF371C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v13 - 128));
  _Unwind_Resume(a1);
}

void sub_23FBF3A08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF4D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
}

void sub_23FBF507C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF5348(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF5440(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF551C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF55F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF5D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF643C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FBF66E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF8DB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBF92C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBFB32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void dispatch_async_with_logs_9(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  __int16 v3 = a1;
  id v4 = a2;
  long long v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  id v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_15;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  uint64_t v8 = v3;
  uint64_t v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FBFDA18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBFDB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__35(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__35(uint64_t a1)
{
}

void sub_23FBFDF9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBFE260(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FBFF528(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_23FBFFFB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a41);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose((const void *)(v61 - 248), 8);
  _Block_object_dispose((const void *)(v61 - 200), 8);
  _Block_object_dispose((const void *)(v61 - 152), 8);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_15(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  __int16 v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FC010EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FC04620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t __Block_byref_object_copy__36(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__36(uint64_t a1)
{
}

void sub_23FC06F20(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__37(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__37(uint64_t a1)
{
}

void sub_23FC080F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint8_t buf)
{
  if (a2 == 1)
  {
    id v17 = objc_begin_catch(exception_object);
    uint64_t v18 = brc_bread_crumbs();
    uint64_t v19 = brc_default_log();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
    {
      uint64_t v20 = [v17 debugDescription];
      [(BRCLocalVersion(BRCFPFSAdditions) *)v20 initFromResultSet:&buf pos:v19];
    }

    uint64_t v21 = objc_msgSend(*(id *)(v16 + 1992), "brc_fakeRecordWithErrorMarkerFor20716676");
    char v22 = *(void **)(v15 + 136);
    *(void *)(v15 + 136) = v21;

    objc_end_catch();
    JUMPOUT(0x23FC07EECLL);
  }
  _Unwind_Resume(exception_object);
}

void ___allowedClassesForEtags_block_invoke()
{
  id v0 = objc_alloc(MEMORY[0x263EFFA08]);
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_msgSend(v0, "initWithObjects:", v1, v2, v3, objc_opt_class(), 0);
  long long v5 = (void *)_allowedClassesForEtags_allowedClasses;
  _allowedClassesForEtags_allowedClasses = v4;
}

void ___allowedClassesForErrors_block_invoke()
{
  id v0 = objc_alloc(MEMORY[0x263EFFA08]);
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = objc_opt_class();
  uint64_t v9 = objc_msgSend(v0, "initWithObjects:", v1, v2, v3, v4, v5, v6, v7, v8, objc_opt_class(), 0);
  uint64_t v10 = (void *)_allowedClassesForErrors_allowedClasses;
  _allowedClassesForErrors_allowedClasses = v9;
}

void sub_23FC08A64(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_23FC09138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC09A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
}

id _BRBlockRememberPersona(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x263F841B0] sharedManager];
  uint64_t v3 = [v2 currentPersona];
  uint64_t v4 = [v3 userPersonaUniqueString];

  if (v4)
  {
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 3221225472;
    v7[2] = ___BRBlockRememberPersona_block_invoke;
    v7[3] = &unk_26507F850;
    id v8 = v4;
    id v9 = v1;
    uint64_t v5 = (void *)[v7 copy];
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x2455D9A50](v1);
  }

  return v5;
}

id _BRActivityBlockRememberPersona(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x263F841B0] sharedManager];
  uint64_t v3 = [v2 currentPersona];
  uint64_t v4 = [v3 userPersonaUniqueString];

  if (v4)
  {
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 3221225472;
    v7[2] = ___BRActivityBlockRememberPersona_block_invoke;
    v7[3] = &unk_265084978;
    id v8 = v4;
    id v9 = v1;
    uint64_t v5 = (void *)[v7 copy];
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x2455D9A50](v1);
  }

  return v5;
}

void sub_23FC0AF10(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy__38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__38(uint64_t a1)
{
}

void sub_23FC0BCEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_23FC0BD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FC0C2C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  objc_sync_exit(v16);
  _Block_object_dispose(&a16, 8);
  _Unwind_Resume(a1);
}

void sub_23FC0C940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC0CCEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23FC0D16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC0D5E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC0D980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_23FC0DC24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC0DF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC0E630(_Unwind_Exception *a1)
{
}

void sub_23FC0EB00(_Unwind_Exception *a1)
{
}

void __br_notify_register_dispatch_block_invoke_0(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  if (([*(id *)(a1 + 32) isEqualToString:@"__defaultPersonaID__"] & 1) != 0
    || (id v2 = *(id *)(a1 + 32)) == 0)
  {
    if (_block_invoke_3___personaOnceToken != -1) {
      dispatch_once(&_block_invoke_3___personaOnceToken, &__block_literal_global_199);
    }
    id v3 = (id)_block_invoke_3___personalPersona;
    int v4 = 1;
  }
  else
  {
    id v3 = v2;
    int v4 = 0;
  }
  uint64_t v5 = [MEMORY[0x263F841B0] sharedManager];
  uint64_t v6 = [v5 currentPersona];

  id v25 = 0;
  id v7 = [v6 userPersonaUniqueString];
  id v8 = v7;
  if (v7 == v3 || ([v7 isEqualToString:v3] & 1) != 0) {
    goto LABEL_9;
  }
  if (!voucher_process_can_use_arbitrary_personas())
  {
    if (v4 && ([v6 isDataSeparatedPersona] & 1) == 0)
    {
      uint64_t v21 = brc_bread_crumbs();
      char v22 = brc_default_log();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
        __br_notify_register_dispatch_block_invoke_cold_4();
      }
    }
    else
    {
      id v17 = brc_bread_crumbs();
      uint64_t v18 = brc_default_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
        __br_notify_register_dispatch_block_invoke_cold_3();
      }

      id v14 = [MEMORY[0x263F087E8] errorWithDomain:*MEMORY[0x263F08438] code:22 userInfo:0];
      if (v14) {
        goto LABEL_25;
      }
    }
LABEL_9:
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    goto LABEL_10;
  }
  id v24 = 0;
  id v9 = (void *)[v6 copyCurrentPersonaContextWithError:&v24];
  id v10 = v24;
  id v11 = v25;
  id v25 = v9;

  if (v10)
  {
    unint64_t v12 = brc_bread_crumbs();
    uint64_t v13 = brc_default_log();
    if (os_log_type_enabled(v13, (os_log_type_t)0x90u)) {
      -[BRCContainerScheduler syncContextDidBecomeForeground:]((uint64_t)v10);
    }
  }
  id v14 = [v6 generateAndRestorePersonaContextWithPersonaUniqueString:v3];

  if (!v14) {
    goto LABEL_9;
  }
  uint64_t v15 = brc_bread_crumbs();
  uint64_t v16 = brc_default_log();
  if (os_log_type_enabled(v16, (os_log_type_t)0x90u))
  {
    uint64_t v23 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    uint64_t v27 = v23;
    __int16 v28 = 2112;
    char v29 = v14;
    __int16 v30 = 2112;
    unsigned int v31 = v15;
    _os_log_error_impl(&dword_23FA42000, v16, (os_log_type_t)0x90u, "[ERROR] Can't adopt persona %@: %@%@", buf, 0x20u);
  }

LABEL_25:
  uint64_t v19 = brc_bread_crumbs();
  uint64_t v20 = brc_default_log();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_FAULT)) {
    __br_notify_register_dispatch_block_invoke_cold_1_0(a1);
  }

LABEL_10:
  _BRRestorePersona();
}

void sub_23FC0EF60(_Unwind_Exception *a1)
{
}

void __br_notify_register_dispatch_block_invoke_2_0()
{
  id v2 = [MEMORY[0x263F841C0] personaAttributesForPersonaType:0];
  uint64_t v0 = [v2 userPersonaUniqueString];
  id v1 = (void *)_block_invoke_3___personalPersona;
  _block_invoke_3___personalPersona = v0;
}

uint64_t BRFieldPkgLocalItemReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  int v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          id v17 = objc_alloc_init(BRFieldPkgItem);
          objc_storeStrong((id *)(a1 + 32), v17);
          if PBReaderPlaceMark() && (BRFieldPkgItemReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();

            continue;
          }

          return 0;
        case 2u:
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v3;
            unint64_t v23 = *(void *)(a2 + v22);
            if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_47;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              uint64_t v21 = 0;
              goto LABEL_49;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v21 = 0;
          }
LABEL_49:
          uint64_t v38 = 8;
          goto LABEL_58;
        case 3u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 48) |= 2u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v2_Block_object_dispose(&STACK[0x210], 8) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (v14)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_53;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v27) = 0;
          }
LABEL_53:
          *(_DWORD *)(a1 + 24) = v27;
          continue;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          break;
        case 5u:
          uint64_t v36 = PBReaderReadData();
          uint64_t v37 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v36;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v33 = *v3;
        unint64_t v34 = *(void *)(a2 + v33);
        if (v34 == -1 || v34 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
        *(void *)(a2 + v33) = v34 + 1;
        v21 |= (unint64_t)(v35 & 0x7F) << v31;
        if ((v35 & 0x80) == 0) {
          goto LABEL_55;
        }
        v31 += 7;
        BOOL v14 = v32++ >= 9;
        if (v14)
        {
          uint64_t v21 = 0;
          goto LABEL_57;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v21 = 0;
      }
LABEL_57:
      uint64_t v38 = 16;
LABEL_58:
      *(void *)(a1 + v3_Block_object_dispose(&STACK[0x210], 8) = v21;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FC1128C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC11C00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_23FC11F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__39(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__39(uint64_t a1)
{
}

id BRCBundleServiceConnection()
{
  uint64_t v0 = +[BRCAccountsManager sharedManager];
  int v1 = [v0 isInSyncBubble];

  if (v1)
  {
    int v4 = brc_bread_crumbs();
    uint64_t v5 = brc_default_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT)) {
      BRCBundleServiceConnection_cold_1();
    }
  }
  uint64_t v2 = (void *)[objc_alloc(MEMORY[0x263F08D68]) initWithServiceName:@"com.apple.CloudDocsDaemon.container-metadata-extractor"];
  if (BRCBundleServiceInterface_onceToken != -1) {
    dispatch_once(&BRCBundleServiceInterface_onceToken, &__block_literal_global_878);
  }
  [v2 setRemoteObjectInterface:BRCBundleServiceInterface_interface];
  [v2 resume];
  return v2;
}

void sub_23FC13150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  objc_sync_exit(v25);
  __brc_leave_section(&a25);
  _Unwind_Resume(a1);
}

void sub_23FC13CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC14964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 240), 8);
  _Block_object_dispose((const void *)(v37 - 208), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__40(uint64_t a1)
{
}

void sub_23FC16438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC179A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
}

void sub_23FC17C38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC17EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC18344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC18A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC18CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC190A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC1A024(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23FC1A758(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23FC1AEE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_23FC1B3C8(_Unwind_Exception *a1)
{
}

void sub_23FC1B994(_Unwind_Exception *a1)
{
}

void sub_23FC1BFBC(_Unwind_Exception *a1)
{
}

void sub_23FC1C52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose(&a61, 8);
  __brc_leave_section((uint64_t *)(v61 - 256));
  _Unwind_Resume(a1);
}

void sub_23FC1CB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC1CDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
}

void sub_23FC1DA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC1DEA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_23FC1FDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
}

void sub_23FC20358(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC21528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC218C0(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 120));
  _Unwind_Resume(a1);
}

void sub_23FC21DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
}

void sub_23FC22F34(_Unwind_Exception *a1)
{
}

void sub_23FC26794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  __brc_leave_section(&a30);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_23FC27054(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_23FC27744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23FC279E0(_Unwind_Exception *a1)
{
}

void sub_23FC27B18(_Unwind_Exception *a1)
{
}

void sub_23FC27DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  __brc_leave_section((uint64_t *)va);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v14 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_23FC27FF4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_23FC28418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC28A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC28E64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC293AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __BRCBundleServiceInterface_block_invoke()
{
  uint64_t v0 = [MEMORY[0x263F08D80] interfaceWithProtocol:&unk_26F435268];
  uint64_t v1 = (void *)BRCBundleServiceInterface_interface;
  BRCBundleServiceInterface_interface = v0;

  uint64_t v2 = (void *)BRCBundleServiceInterface_interface;
  id v3 = (void *)MEMORY[0x263EFFA08];
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  char v8 = objc_msgSend(v3, "setWithObjects:", v4, v5, v6, v7, objc_opt_class(), 0);
  [v2 setClasses:v8 forSelector:sel_extractMetadataForContainerID_bundleID_minimumBundleVersion_reply_ argumentIndex:0 ofReply:1];

  unsigned int v9 = (void *)BRCBundleServiceInterface_interface;
  unint64_t v10 = (void *)MEMORY[0x263EFFA08];
  uint64_t v11 = objc_opt_class();
  objc_msgSend(v10, "setWithObjects:", v11, objc_opt_class(), 0);
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  [v9 setClasses:v12 forSelector:sel_extractMetadataForContainerID_bundleID_minimumBundleVersion_reply_ argumentIndex:1 ofReply:1];
}

void sub_23FC2C274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC2CE68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC2D9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_10(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  uint64_t v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    unsigned int v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_16;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  char v8 = v3;
  char v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FC2DE30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC2E314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC2E7DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC2EA5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC2ED0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC2F8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC2FE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC301E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FC304FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC30DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC31374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC31A38(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_23FC32E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC33228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC34190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC3467C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC34AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC351B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_16(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  id v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    id v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FC355B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void dispatch_async_with_logs_11(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  long long v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  uint64_t v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    unsigned int v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __dispatch_async_with_logs_block_invoke_17;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  uint64_t v8 = v3;
  uint64_t v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FC36068(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC36E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__41(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__41(uint64_t a1)
{
}

void sub_23FC37404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_23FC37968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_17(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  id v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    id v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FC37BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

__CFString *zoneHealthStateDescriptionForCode(unsigned int a1)
{
  if (a1 > 2) {
    return @"unknown";
  }
  else {
    return off_2650851B0[a1];
  }
}

uint64_t shouldReportProblemToHealthZone(uint64_t a1)
{
  uint64_t v2 = +[BRCUserDefaults defaultsForMangledID:0];
  id v3 = [v2 healthErrorsToReport];
  id v4 = [NSNumber numberWithInt:a1];
  uint64_t v5 = [v3 containsObject:v4];

  return v5;
}

uint64_t BRCSetSharedSpotlightAttributeAtURL()
{
  return 0;
}

uint64_t BRCSetAllShareAttributesAtURL(void *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id v1 = a1;
  int v2 = *__error();
  id v3 = brc_bread_crumbs();
  id v4 = brc_default_log();
  if (os_log_type_enabled(v4, (os_log_type_t)0x90u))
  {
    uint64_t v6 = [v1 path];
    int v7 = 138412802;
    uint64_t v8 = v6;
    __int16 v9 = 1024;
    int v10 = v2;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_error_impl(&dword_23FA42000, v4, (os_log_type_t)0x90u, "[ERROR] could not set Spotlight attribute for share at path: %@ %{errno}d%@", (uint8_t *)&v7, 0x1Cu);
  }
  *__error() = v2;

  return 0;
}

uint64_t BRCReadlinkAt(int a1, const char *a2, char *a3, uint64_t a4)
{
  ssize_t v5 = readlinkat(a1, a2, a3, a4 - 1);
  if (v5 < 0) {
    return 0xFFFFFFFFLL;
  }
  ssize_t v6 = v5;
  uint64_t result = 0;
  a3[v6] = 0;
  return result;
}

uint64_t BRCUnlinkAt(int a1, void *a2, int a3)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v5 = a2;
  uint64_t v6 = unlinkat(a1, (const char *)[v5 fileSystemRepresentation], a3);
  if (v6)
  {
    int v7 = brc_bread_crumbs();
    uint64_t v8 = brc_default_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      int v10 = __error();
      __int16 v11 = strerror(*v10);
      v12[0] = 67110146;
      v12[1] = a1;
      __int16 v13 = 2112;
      id v14 = v5;
      __int16 v15 = 1024;
      int v16 = a3;
      __int16 v17 = 2080;
      uint64_t v18 = v11;
      __int16 v19 = 2112;
      unsigned int v20 = v7;
      _os_log_debug_impl(&dword_23FA42000, v8, OS_LOG_TYPE_DEBUG, "[DEBUG] unlinkat(%d, '%@', %d) failed: %s%@", (uint8_t *)v12, 0x2Cu);
    }
  }
  return v6;
}

uint64_t BRCMkdirAt(int a1, void *a2, int a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v5 = a2;
  uint64_t v6 = mkdirat(a1, (const char *)[v5 fileSystemRepresentation], a3);
  uint64_t v7 = v6;
  if (v6) {
    BOOL v8 = v6 == 17;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8)
  {
    __int16 v9 = brc_bread_crumbs();
    int v10 = brc_default_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      id v12 = __error();
      __int16 v13 = strerror(*v12);
      v14[0] = 67110146;
      v14[1] = a1;
      __int16 v15 = 2112;
      id v16 = v5;
      __int16 v17 = 1024;
      int v18 = a3;
      __int16 v19 = 2080;
      unsigned int v20 = v13;
      __int16 v21 = 2112;
      uint64_t v22 = v9;
      _os_log_debug_impl(&dword_23FA42000, v10, OS_LOG_TYPE_DEBUG, "[DEBUG] mkdirat(%d, '%@', 0%3o) failed: %s%@", (uint8_t *)v14, 0x2Cu);
    }
  }
  return v7;
}

uint64_t BRCSymlinkAt(void *a1, int a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a3;
  if (![v5 length])
  {
    int v13 = *__error();
    id v14 = brc_bread_crumbs();
    __int16 v15 = brc_default_log();
    if (os_log_type_enabled(v15, (os_log_type_t)0x90u)) {
      BRCSymlinkAt_cold_1();
    }
    goto LABEL_11;
  }
  if (![v6 length])
  {
    int v13 = *__error();
    id v14 = brc_bread_crumbs();
    __int16 v15 = brc_default_log();
    if (os_log_type_enabled(v15, (os_log_type_t)0x90u)) {
      BRCSymlinkAt_cold_2();
    }
LABEL_11:

    *__error() = v13;
    *__error() = 22;
    uint64_t v10 = 0xFFFFFFFFLL;
    goto LABEL_12;
  }
  id v7 = v5;
  BOOL v8 = (const char *)[v7 fileSystemRepresentation];
  id v9 = v6;
  uint64_t v10 = symlinkat(v8, a2, (const char *)[v9 fileSystemRepresentation]);
  if (v10)
  {
    __int16 v11 = brc_bread_crumbs();
    id v12 = brc_default_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      __int16 v17 = __error();
      int v18 = strerror(*v17);
      v19[0] = 67110146;
      v19[1] = a2;
      __int16 v20 = 2112;
      id v21 = v9;
      __int16 v22 = 2112;
      id v23 = v7;
      __int16 v24 = 2080;
      char v25 = v18;
      __int16 v26 = 2112;
      uint64_t v27 = v11;
      _os_log_debug_impl(&dword_23FA42000, v12, OS_LOG_TYPE_DEBUG, "[DEBUG] symlinkat(%d, '%@', '%@') failed: %s%@", (uint8_t *)v19, 0x30u);
    }
  }
LABEL_12:

  return v10;
}

uint64_t BRCMkContainerComponent(int a1, void *a2, unsigned char *a3)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  long long v26 = xmmword_23FD34518;
  uint64_t v27 = 0;
  uint64_t v25 = 0;
  id v5 = a2;
  if (!getattrlistat(a1, (const char *)[v5 fileSystemRepresentation], &v26, &v25, 8uLL, 0x21uLL)
    && (WORD2(v25) & 0xF1D2) == 0x41C0)
  {
    goto LABEL_15;
  }
  if ((BRCMkdirAt(a1, v5, 493) & 0x80000000) == 0)
  {
    id v6 = brc_bread_crumbs();
    id v7 = brc_default_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
      BRCMkContainerComponent_cold_4();
    }

    goto LABEL_7;
  }
  if (*__error() != 17)
  {
    int v14 = *__error();
    __int16 v15 = brc_bread_crumbs();
    id v16 = brc_default_log();
    if (os_log_type_enabled(v16, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 67109890;
      int v29 = a1;
      __int16 v30 = 2112;
      id v31 = v5;
      __int16 v32 = 1024;
      int v33 = v14;
      __int16 v34 = 2112;
      char v35 = v15;
      _os_log_error_impl(&dword_23FA42000, v16, (os_log_type_t)0x90u, "[ERROR] mkdirat(%d, '%@') failed %{errno}d%@", buf, 0x22u);
    }

    *__error() = v14;
    if (*__error()) {
      goto LABEL_21;
    }
    id v23 = brc_bread_crumbs();
    __int16 v24 = brc_default_log();
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_FAULT)) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  id v9 = v5;
  if (unlinkat(a1, (const char *)[v9 fileSystemRepresentation], 0))
  {
    id v10 = v9;
    if (fchmodat(a1, (const char *)objc_msgSend(v10, "br_fileSystemRepresentation"), 0x1EDu, 32) < 0)
    {
      int v11 = *__error();
      id v12 = brc_bread_crumbs();
      int v13 = brc_default_log();
      if (os_log_type_enabled(v13, (os_log_type_t)0x90u))
      {
        *(_DWORD *)buf = 67109890;
        int v29 = a1;
        __int16 v30 = 2112;
        id v31 = v10;
        __int16 v32 = 1024;
        int v33 = v11;
        __int16 v34 = 2112;
        char v35 = v12;
        _os_log_error_impl(&dword_23FA42000, v13, (os_log_type_t)0x90u, "[ERROR] fchmodat(%d, '%@') failed %{errno}d%@", buf, 0x22u);
      }

      *__error() = v11;
    }
LABEL_15:
    if (a3)
    {
      uint64_t v8 = 0;
      *a3 = 0;
      goto LABEL_22;
    }
LABEL_17:
    uint64_t v8 = 0;
    goto LABEL_22;
  }
  int v18 = brc_bread_crumbs();
  __int16 v19 = brc_default_log();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG)) {
    BRCMkContainerComponent_cold_2();
  }

  if ((BRCMkdirAt(a1, v9, 511) & 0x80000000) != 0)
  {
    int v20 = *__error();
    id v21 = brc_bread_crumbs();
    __int16 v22 = brc_default_log();
    if (os_log_type_enabled(v22, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 67109890;
      int v29 = a1;
      __int16 v30 = 2112;
      id v31 = v9;
      __int16 v32 = 1024;
      int v33 = v20;
      __int16 v34 = 2112;
      char v35 = v21;
      _os_log_error_impl(&dword_23FA42000, v22, (os_log_type_t)0x90u, "[ERROR] mkdirat(%d, '%@') failed %{errno}d%@", buf, 0x22u);
    }

    *__error() = v20;
    if (*__error()) {
      goto LABEL_21;
    }
    id v23 = brc_bread_crumbs();
    __int16 v24 = brc_default_log();
    if (!os_log_type_enabled(v24, OS_LOG_TYPE_FAULT))
    {
LABEL_33:

LABEL_21:
      uint64_t v8 = 0xFFFFFFFFLL;
      goto LABEL_22;
    }
LABEL_32:
    BRCMkContainerComponent_cold_1();
    goto LABEL_33;
  }
LABEL_7:
  if (!a3) {
    goto LABEL_17;
  }
  uint64_t v8 = 0;
  *a3 = 1;
LABEL_22:

  return v8;
}

uint64_t BRCRenameAt(int a1, void *a2, int a3, void *a4, unsigned int a5)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v9 = a2;
  id v10 = a4;
  id v11 = v9;
  id v12 = (const char *)[v11 fileSystemRepresentation];
  id v13 = v10;
  uint64_t v14 = renameatx_np(a1, v12, a3, (const char *)[v13 fileSystemRepresentation], a5);
  if (v14)
  {
    __int16 v15 = brc_bread_crumbs();
    id v16 = brc_default_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
    {
      int v18 = __error();
      __int16 v19 = strerror(*v18);
      v20[0] = 67110658;
      v20[1] = a1;
      __int16 v21 = 2112;
      id v22 = v11;
      __int16 v23 = 1024;
      int v24 = a3;
      __int16 v25 = 2112;
      id v26 = v13;
      __int16 v27 = 1024;
      unsigned int v28 = a5;
      __int16 v29 = 2080;
      __int16 v30 = v19;
      __int16 v31 = 2112;
      __int16 v32 = v15;
      _os_log_debug_impl(&dword_23FA42000, v16, OS_LOG_TYPE_DEBUG, "[DEBUG] renameatx_np(%d, '%@', %d, '%@', %u) failed: %s%@", (uint8_t *)v20, 0x3Cu);
    }
  }
  return v14;
}

uint64_t BRCCloneAt(int a1, void *a2, int a3, void *a4)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v7 = a2;
  id v8 = a4;
  memset(&v27, 0, sizeof(v27));
  id v9 = v7;
  if (fstatat(a1, (const char *)[v9 fileSystemRepresentation], &v27, 32) < 0)
  {
    int v20 = *__error();
    __int16 v21 = brc_bread_crumbs();
    id v22 = brc_default_log();
    if (os_log_type_enabled(v22, (os_log_type_t)0x90u)) {
      BRCCloneAt_cold_1();
    }

    *__error() = v20;
    uint64_t v18 = 0xFFFFFFFFLL;
  }
  else if ((v27.st_mode & 0xF000) == 0x4000)
  {
    int src = 0;
    id v10 = copyfile_state_alloc();
    copyfile_state_set(v10, 6u, brc_copyfileat_status_cb);
    copyfile_state_set(v10, 7u, &src);
    id v11 = BRCPathAt(a1, v9);
    id v12 = BRCPathAt(a3, v8);
    id v13 = brc_bread_crumbs();
    uint64_t v14 = brc_default_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      int v24 = objc_msgSend(v11, "fp_prettyPath");
      __int16 v25 = objc_msgSend(v12, "fp_prettyPath");
      *(_DWORD *)buf = 138412802;
      __int16 v29 = v24;
      __int16 v30 = 2112;
      __int16 v31 = v25;
      __int16 v32 = 2112;
      uint64_t v33 = v13;
      _os_log_debug_impl(&dword_23FA42000, v14, OS_LOG_TYPE_DEBUG, "[DEBUG] Cloning %@ to %@%@", buf, 0x20u);
    }
    id v15 = v11;
    id v16 = (const char *)[v15 fileSystemRepresentation];
    id v17 = v12;
    uint64_t v18 = copyfile(v16, (const char *)[v17 fileSystemRepresentation], v10, 0x10C8000u);
    copyfile_state_free(v10);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = src;
      if (src) {
        *__error() = v19;
      }
    }
  }
  else
  {
    uint64_t v18 = clonefileat(a1, (const char *)[v9 fileSystemRepresentation], a3, (const char *)objc_msgSend(objc_retainAutorelease(v8), "fileSystemRepresentation"), 1u);
  }

  return v18;
}

uint64_t brc_copyfileat_status_cb(int a1, int a2, uint64_t a3, const char *a4, uint64_t a5, int *a6)
{
  uint64_t result = 0;
  if (a1 == 1 && a2 == 3)
  {
    uint64_t v19 = v6;
    uint64_t v20 = v7;
    int v12 = *__error();
    memset(&v18, 0, sizeof(v18));
    if ((lstat(a4, &v18) & 0x80000000) == 0)
    {
      int v13 = v18.st_mode & 0xF000;
      if (v13 != 0x4000)
      {
        if (v13 == 0x8000)
        {
          if ((v18.st_flags & 0x20) != 0 && v12 == 9)
          {
            uint64_t v14 = brc_bread_crumbs();
            id v15 = brc_default_log();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
              brc_copyfileat_status_cb_cold_2();
            }
            goto LABEL_13;
          }
        }
        else if (v13 != 40960)
        {
          uint64_t v14 = brc_bread_crumbs();
          id v15 = brc_default_log();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
            brc_copyfileat_status_cb_cold_1();
          }
LABEL_13:

          return 1;
        }
      }
    }
    id v16 = brc_bread_crumbs();
    id v17 = brc_default_log();
    if (os_log_type_enabled(v17, (os_log_type_t)0x90u)) {
      brc_copyfileat_status_cb_cold_3();
    }

    *a6 = *__error();
    return 2;
  }
  return result;
}

id BRCPathAt(int a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = v3;
  if (a1 == -1)
  {
    id v6 = v3;
  }
  else if (fcntl(a1, 50, v8) < 0)
  {
    id v6 = 0;
  }
  else
  {
    id v5 = objc_msgSend(NSString, "br_pathWithFileSystemRepresentation:", v8);
    id v6 = [v5 stringByAppendingPathComponent:v4];
  }
  return v6;
}

uint64_t BRCFSetAttrList(int a1, void *a2, void *a3, size_t a4)
{
  uint64_t v4 = fsetattrlist(a1, a2, a3, a4, 1u);
  if (v4)
  {
    id v5 = brc_bread_crumbs();
    id v6 = brc_default_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      BRCFSetAttrList_cold_1((uint64_t)v5, v6);
    }
  }
  return v4;
}

BOOL BRCSetXattrValueForKeyOnPath(void *a1, void *a2, void *a3)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = v5;
  int v9 = open((const char *)[v8 fileSystemRepresentation], 33028);
  if (v9 < 0)
  {
    if (*__error() == 2)
    {
      BOOL v11 = 0;
    }
    else
    {
      int v12 = *__error();
      int v13 = brc_bread_crumbs();
      uint64_t v14 = brc_default_log();
      if (os_log_type_enabled(v14, (os_log_type_t)0x90u))
      {
        int v16 = 138412802;
        id v17 = v8;
        __int16 v18 = 1024;
        int v19 = v12;
        __int16 v20 = 2112;
        __int16 v21 = v13;
        _os_log_error_impl(&dword_23FA42000, v14, (os_log_type_t)0x90u, "[ERROR] can't open '%@' %{errno}d%@", (uint8_t *)&v16, 0x1Cu);
      }

      BOOL v11 = 0;
      *__error() = v12;
    }
  }
  else
  {
    int v10 = v9;
    BOOL v11 = BRCSetXattrValueForKeyOnFD(v9, v8, v6, v7);
    close(v10);
  }

  return v11;
}

BOOL BRCSetXattrValueForKeyOnFD(int a1, void *a2, void *a3, void *a4)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  int v10 = (const char *)[v8 UTF8String];
  id v11 = v9;
  int v12 = (const void *)[v11 UTF8String];
  size_t v13 = [v11 length];

  int v14 = fsetxattr(a1, v10, v12, v13, 0, 0);
  if (v14 < 0)
  {
    int v15 = *__error();
    int v16 = brc_bread_crumbs();
    id v17 = brc_default_log();
    if (os_log_type_enabled(v17, (os_log_type_t)0x90u))
    {
      int v19 = 136316162;
      __int16 v20 = v10;
      __int16 v21 = 2080;
      uint64_t v22 = v12;
      __int16 v23 = 2112;
      id v24 = v7;
      __int16 v25 = 1024;
      int v26 = v15;
      __int16 v27 = 2112;
      unsigned int v28 = v16;
      _os_log_error_impl(&dword_23FA42000, v17, (os_log_type_t)0x90u, "[ERROR] can't set xattr %s to %s at '%@' %{errno}d%@", (uint8_t *)&v19, 0x30u);
    }

    *__error() = v15;
  }

  return v14 >= 0;
}

id BRCGetXattrValueForKeyOnPath(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = v3;
  int v6 = open((const char *)[v5 fileSystemRepresentation], 33028);
  if (v6 < 0)
  {
    if (*__error() == 2)
    {
      id v8 = 0;
    }
    else
    {
      int v9 = *__error();
      int v10 = brc_bread_crumbs();
      id v11 = brc_default_log();
      if (os_log_type_enabled(v11, (os_log_type_t)0x90u))
      {
        int v13 = 138412802;
        id v14 = v5;
        __int16 v15 = 1024;
        int v16 = v9;
        __int16 v17 = 2112;
        __int16 v18 = v10;
        _os_log_error_impl(&dword_23FA42000, v11, (os_log_type_t)0x90u, "[ERROR] can't open '%@' %{errno}d%@", (uint8_t *)&v13, 0x1Cu);
      }

      id v8 = 0;
      *__error() = v9;
    }
  }
  else
  {
    int v7 = v6;
    id v8 = BRCGetXattrValueForKeyOnFD(v6, v5, v4);
    close(v7);
  }

  return v8;
}

id BRCGetXattrValueForKeyOnFD(int a1, void *a2, void *a3)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  int v7 = v6;
  if (a1 < 0) {
    goto LABEL_32;
  }
  id v8 = v6;
  ssize_t v9 = fgetxattr(a1, (const char *)[v8 UTF8String], 0, 0, 0, 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    size_t v10 = v9;
    if (v9)
    {
      id v11 = (unsigned __int8 *)malloc_type_calloc(1uLL, v9 + 1, 0x75FFCE5uLL);
      id v12 = v8;
      if (fgetxattr(a1, (const char *)[v12 UTF8String], v11, v10, 0, 0) < 0)
      {
        int v24 = *__error();
        __int16 v25 = brc_bread_crumbs();
        int v26 = brc_default_log();
        if (os_log_type_enabled(v26, (os_log_type_t)0x90u))
        {
          int v28 = 134219010;
          size_t v29 = v10;
          __int16 v30 = 2112;
          id v31 = v12;
          __int16 v32 = 2112;
          *(void *)uint64_t v33 = v5;
          *(_WORD *)&v33[8] = 1024;
          *(_DWORD *)&v33[10] = v24;
          *(_WORD *)&v33[14] = 2112;
          *(void *)&v33[16] = v25;
          _os_log_error_impl(&dword_23FA42000, v26, (os_log_type_t)0x90u, "[ERROR] can't read %lu-byte xattr %@ at '%@' %{errno}d%@", (uint8_t *)&v28, 0x30u);
        }

        *__error() = v24;
      }
      else
      {
        unsigned __int8 v13 = *v11;
        if (!*v11)
        {
LABEL_27:
          __int16 v21 = [NSString stringWithCString:v11 encoding:4];
          free(v11);
          goto LABEL_33;
        }
        uint64_t v14 = 1;
        while (1)
        {
          BOOL v15 = (v13 - 48) >= 0xAu && ((v13 & 0xDF) - 65) >= 0x1Au;
          if (v15 && (v13 - 32 > 0x3F || ((1 << (v13 - 32)) & 0x800000000400E001) == 0) && v13 != 10) {
            break;
          }
          unsigned __int8 v13 = v11[v14++];
          if (!v13) {
            goto LABEL_27;
          }
        }
        int v16 = brc_bread_crumbs();
        __int16 v17 = brc_default_log();
        if (os_log_type_enabled(v17, (os_log_type_t)0x90u))
        {
          int v28 = 138413058;
          size_t v29 = (size_t)v12;
          __int16 v30 = 2112;
          id v31 = v5;
          __int16 v32 = 2080;
          *(void *)uint64_t v33 = v11;
          *(_WORD *)&v33[8] = 2112;
          *(void *)&v33[10] = v16;
          _os_log_error_impl(&dword_23FA42000, v17, (os_log_type_t)0x90u, "[ERROR] invalid xattr %@ at '%@': %s%@", (uint8_t *)&v28, 0x2Au);
        }
      }
      free(v11);
    }
    else
    {
      uint64_t v22 = brc_bread_crumbs();
      __int16 v23 = brc_default_log();
      if (os_log_type_enabled(v23, (os_log_type_t)0x90u))
      {
        int v28 = 138412802;
        size_t v29 = (size_t)v8;
        __int16 v30 = 2112;
        id v31 = v5;
        __int16 v32 = 2112;
        *(void *)uint64_t v33 = v22;
        _os_log_error_impl(&dword_23FA42000, v23, (os_log_type_t)0x90u, "[ERROR] empty xattr %@ at '%@'%@", (uint8_t *)&v28, 0x20u);
      }
    }
    goto LABEL_32;
  }
  if (*__error() == 93)
  {
LABEL_32:
    __int16 v21 = 0;
    goto LABEL_33;
  }
  int v18 = *__error();
  uint64_t v19 = brc_bread_crumbs();
  __int16 v20 = brc_default_log();
  if (os_log_type_enabled(v20, (os_log_type_t)0x90u))
  {
    int v28 = 138413058;
    size_t v29 = (size_t)v8;
    __int16 v30 = 2112;
    id v31 = v5;
    __int16 v32 = 1024;
    *(_DWORD *)uint64_t v33 = v18;
    *(_WORD *)&v33[4] = 2112;
    *(void *)&v33[6] = v19;
    _os_log_error_impl(&dword_23FA42000, v20, (os_log_type_t)0x90u, "[ERROR] can't read the size of xattr %@ at '%@' %{errno}d%@", (uint8_t *)&v28, 0x26u);
  }

  __int16 v21 = 0;
  *__error() = v18;
LABEL_33:

  return v21;
}

uint64_t BRCOpenAt(uint64_t a1, const char *a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int16 a9)
{
  if ((a3 & 0x200) != 0) {
    unsigned __int16 v9 = a9;
  }
  else {
    unsigned __int16 v9 = 0;
  }
  return BRCOpenAtAndGetProtectionStatus(a1, a2, a3, v9, 0);
}

uint64_t BRCOpenAtAndGetProtectionStatus(uint64_t a1, const char *a2, int a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v190 = *MEMORY[0x263EF8340];
  memset(&v145, 0, sizeof(v145));
  uint64_t v10 = openat(a1, a2, a3, a4);
  if ((v10 & 0x80000000) == 0)
  {
LABEL_2:
    if (!fstat(v10, &v145) && (v145.st_mode & 0xF040) == 0x4000)
    {
      if (fchmod(v10, v145.st_mode | 0x1C0) < 0)
      {
        id v11 = brc_bread_crumbs();
        id v12 = brc_default_log();
        if (os_log_type_enabled(v12, (os_log_type_t)0x90u))
        {
          if ((~v145.st_mode & 0x100) != 0) {
            int v74 = 114;
          }
          else {
            int v74 = 45;
          }
          if ((~v145.st_mode & 0x80) != 0) {
            int v75 = 119;
          }
          else {
            int v75 = 45;
          }
          if ((~v145.st_mode & 0x40) != 0 && (v145.st_mode & 0xF000) == 0x4000) {
            int v77 = 120;
          }
          else {
            int v77 = 45;
          }
          dev_t st_dev = v145.st_dev;
          __darwin_ino64_t st_ino = v145.st_ino;
          if ((v145.st_mode & 0x100) != 0) {
            int v78 = 114;
          }
          else {
            int v78 = 45;
          }
          uid_t v124 = v78;
          int v126 = aPcDBLSW[(unint64_t)v145.st_mode >> 12];
          if ((v145.st_mode & 0x80) != 0) {
            int v79 = 119;
          }
          else {
            int v79 = 45;
          }
          if ((v145.st_mode & 0x40) != 0) {
            int v80 = 120;
          }
          else {
            int v80 = 45;
          }
          int v120 = v80;
          gid_t v122 = v79;
          if ((v145.st_mode & 0x20) != 0) {
            int v81 = 114;
          }
          else {
            int v81 = 45;
          }
          if ((v145.st_mode & 0x10) != 0) {
            int v82 = 119;
          }
          else {
            int v82 = 45;
          }
          int v116 = v82;
          int v118 = v81;
          if ((v145.st_mode & 8) != 0) {
            int v83 = 120;
          }
          else {
            int v83 = 45;
          }
          if ((v145.st_mode & 4) != 0) {
            int v84 = 114;
          }
          else {
            int v84 = 45;
          }
          int v112 = v84;
          int v114 = v83;
          if ((v145.st_mode & 2) != 0) {
            int v85 = 119;
          }
          else {
            int v85 = 45;
          }
          if (v145.st_mode) {
            int v86 = 120;
          }
          else {
            int v86 = 45;
          }
          int v108 = v86;
          int v110 = v85;
          st_nlinuint64_t k = v145.st_nlink;
          uid_t st_uid = v145.st_uid;
          gid_t st_gid = v145.st_gid;
          __darwin_time_t tv_sec = v145.st_atimespec.tv_sec;
          __darwin_time_t v138 = v145.st_mtimespec.tv_sec;
          __darwin_time_t v140 = v145.st_ctimespec.tv_sec;
          off_t st_size = v145.st_size;
          __uint32_t st_flags = v145.st_flags;
          int v87 = *__error();
          *(_DWORD *)buf = 67117570;
          int v147 = a1;
          __int16 v148 = 2080;
          unsigned int v149 = a2;
          __int16 v150 = 1024;
          dev_t v151 = 35;
          __int16 v152 = 1024;
          *(_DWORD *)char v153 = v74;
          *(_WORD *)&v153[4] = 1024;
          *(_DWORD *)&v153[6] = v75;
          *(_WORD *)char v154 = 1024;
          *(_DWORD *)&v154[2] = v77;
          *(_WORD *)unsigned int v155 = 1024;
          *(_DWORD *)&v155[2] = 45;
          *(_WORD *)uint64_t v156 = 1024;
          *(_DWORD *)&v156[2] = 45;
          *(_WORD *)uint64_t v157 = 1024;
          *(_DWORD *)&v157[2] = 45;
          *(_WORD *)unint64_t v158 = 1024;
          *(_DWORD *)&v158[2] = 45;
          *(_WORD *)char v159 = 1024;
          *(_DWORD *)&v159[2] = 45;
          *(_WORD *)char v160 = 1024;
          *(_DWORD *)&v160[2] = 45;
          *(_WORD *)unsigned int v161 = 1024;
          *(_DWORD *)&v161[2] = st_dev;
          *(_WORD *)uint64_t v162 = 2048;
          *(void *)&v162[2] = st_ino;
          __int16 v163 = 1024;
          int v164 = v126;
          __int16 v165 = 1024;
          uid_t v166 = v124;
          __int16 v167 = 1024;
          gid_t v168 = v122;
          __int16 v169 = 1024;
          *(_DWORD *)char v170 = v120;
          *(_WORD *)&v170[4] = 1024;
          *(_DWORD *)&v170[6] = v118;
          LOWORD(v171) = 1024;
          *(_DWORD *)((char *)&v171 + 2) = v116;
          HIWORD(v171) = 1024;
          *(_DWORD *)uint64_t v172 = v114;
          *(_WORD *)&v172[4] = 1024;
          *(_DWORD *)&v172[6] = v112;
          __int16 v173 = 1024;
          *(_DWORD *)char v174 = v110;
          *(_WORD *)&v174[4] = 1024;
          *(_DWORD *)&v174[6] = v108;
          *(_WORD *)char v175 = 1024;
          *(_DWORD *)&v175[2] = st_nlink;
          LOWORD(v176) = 1024;
          *(_DWORD *)((char *)&v176 + 2) = st_uid;
          HIWORD(v176) = 1024;
          gid_t v177 = st_gid;
          __int16 v178 = 2048;
          __darwin_time_t v179 = tv_sec;
          __int16 v180 = 2048;
          __darwin_time_t v181 = v138;
          __int16 v182 = 2048;
          __darwin_time_t v183 = v140;
          __int16 v184 = 2048;
          off_t v185 = st_size;
          __int16 v186 = 1024;
          __uint32_t v187 = st_flags;
          __int16 v188 = 1024;
          *(_DWORD *)uint64_t v189 = v87;
          *(_WORD *)&v189[4] = 2112;
          *(void *)&v189[6] = v11;
          _os_log_error_impl(&dword_23FA42000, v12, (os_log_type_t)0x90u, "[ERROR] failed fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d%@", buf, 0xEAu);
        }
      }
      else
      {
        id v11 = brc_bread_crumbs();
        id v12 = brc_default_log();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          int v13 = aPcDBLSW[(unint64_t)v145.st_mode >> 12];
          if ((~v145.st_mode & 0x100) != 0) {
            int v14 = 114;
          }
          else {
            int v14 = 45;
          }
          if ((~v145.st_mode & 0x80) != 0) {
            int v15 = 119;
          }
          else {
            int v15 = 45;
          }
          if ((~v145.st_mode & 0x40) != 0 && (v145.st_mode & 0xF000) == 0x4000) {
            int v17 = 120;
          }
          else {
            int v17 = 45;
          }
          if ((v145.st_mode & 0x100) != 0) {
            int v18 = 114;
          }
          else {
            int v18 = 45;
          }
          if ((v145.st_mode & 0x80) != 0) {
            int v19 = 119;
          }
          else {
            int v19 = 45;
          }
          if ((v145.st_mode & 0x40) != 0) {
            int v20 = 120;
          }
          else {
            int v20 = 45;
          }
          *(_DWORD *)buf = 67117314;
          if ((v145.st_mode & 0x20) != 0) {
            int v21 = 114;
          }
          else {
            int v21 = 45;
          }
          int v147 = a1;
          __int16 v148 = 2080;
          if ((v145.st_mode & 0x10) != 0) {
            int v22 = 119;
          }
          else {
            int v22 = 45;
          }
          unsigned int v149 = a2;
          if ((v145.st_mode & 8) != 0) {
            int v23 = 120;
          }
          else {
            int v23 = 45;
          }
          __int16 v150 = 1024;
          dev_t v151 = 35;
          if ((v145.st_mode & 4) != 0) {
            int v24 = 114;
          }
          else {
            int v24 = 45;
          }
          __int16 v152 = 1024;
          if ((v145.st_mode & 2) != 0) {
            int v25 = 119;
          }
          else {
            int v25 = 45;
          }
          *(_DWORD *)char v153 = v14;
          if (v145.st_mode) {
            int v26 = 120;
          }
          else {
            int v26 = 45;
          }
          *(_WORD *)&v153[4] = 1024;
          *(_DWORD *)&v153[6] = v15;
          *(_WORD *)char v154 = 1024;
          *(_DWORD *)&v154[2] = v17;
          *(_WORD *)unsigned int v155 = 1024;
          *(_DWORD *)&v155[2] = 45;
          *(_WORD *)uint64_t v156 = 1024;
          *(_DWORD *)&v156[2] = 45;
          *(_WORD *)uint64_t v157 = 1024;
          *(_DWORD *)&v157[2] = 45;
          *(_WORD *)unint64_t v158 = 1024;
          *(_DWORD *)&v158[2] = 45;
          *(_WORD *)char v159 = 1024;
          *(_DWORD *)&v159[2] = 45;
          *(_WORD *)char v160 = 1024;
          *(_DWORD *)&v160[2] = 45;
          *(_WORD *)unsigned int v161 = 1024;
          *(_DWORD *)&v161[2] = v145.st_dev;
          *(_WORD *)uint64_t v162 = 2048;
          *(void *)&v162[2] = v145.st_ino;
          __int16 v163 = 1024;
          int v164 = v13;
          __int16 v165 = 1024;
          uid_t v166 = v18;
          __int16 v167 = 1024;
          gid_t v168 = v19;
          __int16 v169 = 1024;
          *(_DWORD *)char v170 = v20;
          *(_WORD *)&v170[4] = 1024;
          *(_DWORD *)&v170[6] = v21;
          LOWORD(v171) = 1024;
          *(_DWORD *)((char *)&v171 + 2) = v22;
          HIWORD(v171) = 1024;
          *(_DWORD *)uint64_t v172 = v23;
          *(_WORD *)&v172[4] = 1024;
          *(_DWORD *)&v172[6] = v24;
          __int16 v173 = 1024;
          *(_DWORD *)char v174 = v25;
          *(_WORD *)&v174[4] = 1024;
          *(_DWORD *)&v174[6] = v26;
          *(_WORD *)char v175 = 1024;
          *(_DWORD *)&v175[2] = v145.st_nlink;
          LOWORD(v176) = 1024;
          *(_DWORD *)((char *)&v176 + 2) = v145.st_uid;
          HIWORD(v176) = 1024;
          gid_t v177 = v145.st_gid;
          __int16 v178 = 2048;
          __darwin_time_t v179 = v145.st_atimespec.tv_sec;
          __int16 v180 = 2048;
          __darwin_time_t v181 = v145.st_mtimespec.tv_sec;
          __int16 v182 = 2048;
          __darwin_time_t v183 = v145.st_ctimespec.tv_sec;
          __int16 v184 = 2048;
          off_t v185 = v145.st_size;
          __int16 v186 = 1024;
          __uint32_t v187 = v145.st_flags;
          __int16 v188 = 2112;
          *(void *)uint64_t v189 = v11;
          _os_log_debug_impl(&dword_23FA42000, v12, OS_LOG_TYPE_DEBUG, "[DEBUG] openat(%d, '%s'): added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", buf, 0xE4u);
        }
      }
    }
    return v10;
  }
  if (*__error() == 13)
  {
    if (!strcmp(a2, "."))
    {
      int v27 = fstat(a1, &v145);
      if (!(v27 | v145.st_uid))
      {
        objc_msgSend(NSURL, "brc_fileURLWithFileDescriptor:", a1);
        id v28 = objc_claimAutoreleasedReturnValue();
        uint64_t v10 = open((const char *)[v28 fileSystemRepresentation], a3, a4);
        if ((v10 & 0x80000000) != 0)
        {
          char v72 = brc_bread_crumbs();
          unsigned int v73 = brc_default_log();
          if (os_log_type_enabled(v73, (os_log_type_t)0x90u))
          {
            int v102 = *__error();
            *(_DWORD *)buf = 67109890;
            int v147 = a1;
            __int16 v148 = 2112;
            unsigned int v149 = (const char *)v28;
            __int16 v150 = 1024;
            dev_t v151 = v102;
            __int16 v152 = 2112;
            *(void *)char v153 = v72;
            _os_log_error_impl(&dword_23FA42000, v73, (os_log_type_t)0x90u, "[ERROR] Failed to open fd %d by relpath %@ %{errno}d%@", buf, 0x22u);
          }

          *__error() = 13;
        }
        else
        {
          brc_bread_crumbs();
          size_t v29 = (char *)objc_claimAutoreleasedReturnValue();
          __int16 v30 = brc_default_log();
          if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109378;
            int v147 = a1;
            __int16 v148 = 2112;
            unsigned int v149 = v29;
            _os_log_impl(&dword_23FA42000, v30, OS_LOG_TYPE_DEFAULT, "[WARNING] Fixed up openat(%d, '.') for inaccessible folder%@", buf, 0x12u);
          }
        }
        goto LABEL_159;
      }
    }
    if (fstatat(a1, a2, &v145, 32) < 0)
    {
      uint64_t v34 = brc_bread_crumbs();
      char v35 = brc_default_log();
      if (os_log_type_enabled(v35, (os_log_type_t)0x90u))
      {
        int v36 = *__error();
        *(_DWORD *)buf = 67109890;
        int v147 = a1;
        __int16 v148 = 2080;
        unsigned int v149 = a2;
        __int16 v150 = 1024;
        dev_t v151 = v36;
        __int16 v152 = 2112;
        *(void *)char v153 = v34;
        uint64_t v37 = "[ERROR] failed openat with EACCES and fstatat(%d, '%s') %{errno}d%@";
        uint64_t v38 = v35;
        uint32_t v39 = 34;
LABEL_135:
        _os_log_error_impl(&dword_23FA42000, v38, (os_log_type_t)0x90u, v37, buf, v39);
      }
    }
    else if ((v145.st_mode & 0x100) != 0)
    {
      uint64_t v34 = brc_bread_crumbs();
      char v35 = brc_default_log();
      if (os_log_type_enabled(v35, (os_log_type_t)0x90u))
      {
        int v40 = aPcDBLSW[(unint64_t)v145.st_mode >> 12];
        if ((v145.st_mode & 0x100) != 0) {
          int v41 = 114;
        }
        else {
          int v41 = 45;
        }
        if ((v145.st_mode & 0x80) != 0) {
          int v42 = 119;
        }
        else {
          int v42 = 45;
        }
        if ((v145.st_mode & 0x40) != 0) {
          int v43 = 120;
        }
        else {
          int v43 = 45;
        }
        if ((v145.st_mode & 0x20) != 0) {
          int v44 = 114;
        }
        else {
          int v44 = 45;
        }
        if ((v145.st_mode & 0x10) != 0) {
          int v45 = 119;
        }
        else {
          int v45 = 45;
        }
        if ((v145.st_mode & 8) != 0) {
          int v46 = 120;
        }
        else {
          int v46 = 45;
        }
        if ((v145.st_mode & 4) != 0) {
          int v47 = 114;
        }
        else {
          int v47 = 45;
        }
        if ((v145.st_mode & 2) != 0) {
          int v48 = 119;
        }
        else {
          int v48 = 45;
        }
        if (v145.st_mode) {
          int v49 = 120;
        }
        else {
          int v49 = 45;
        }
        *(_DWORD *)buf = 67114754;
        int v147 = a1;
        __int16 v148 = 2080;
        unsigned int v149 = a2;
        __int16 v150 = 1024;
        dev_t v151 = v145.st_dev;
        __int16 v152 = 2048;
        *(void *)char v153 = v145.st_ino;
        *(_WORD *)&v153[8] = 1024;
        *(_DWORD *)char v154 = v40;
        *(_WORD *)&v154[4] = 1024;
        *(_DWORD *)unsigned int v155 = v41;
        *(_WORD *)&v155[4] = 1024;
        *(_DWORD *)uint64_t v156 = v42;
        *(_WORD *)&v156[4] = 1024;
        *(_DWORD *)uint64_t v157 = v43;
        *(_WORD *)&v157[4] = 1024;
        *(_DWORD *)unint64_t v158 = v44;
        *(_WORD *)&v158[4] = 1024;
        *(_DWORD *)char v159 = v45;
        *(_WORD *)&v159[4] = 1024;
        *(_DWORD *)char v160 = v46;
        *(_WORD *)&v160[4] = 1024;
        *(_DWORD *)unsigned int v161 = v47;
        *(_WORD *)&v161[4] = 1024;
        *(_DWORD *)uint64_t v162 = v48;
        *(_WORD *)&v162[4] = 1024;
        *(_DWORD *)&v162[6] = v49;
        __int16 v163 = 1024;
        int v164 = v145.st_nlink;
        __int16 v165 = 1024;
        uid_t v166 = v145.st_uid;
        __int16 v167 = 1024;
        gid_t v168 = v145.st_gid;
        __int16 v169 = 2048;
        *(void *)char v170 = v145.st_atimespec.tv_sec;
        *(_WORD *)&v170[8] = 2048;
        __darwin_time_t v171 = v145.st_mtimespec.tv_sec;
        *(_WORD *)uint64_t v172 = 2048;
        *(void *)&v172[2] = v145.st_ctimespec.tv_sec;
        __int16 v173 = 2048;
        *(void *)char v174 = v145.st_size;
        *(_WORD *)&v174[8] = 1024;
        *(_DWORD *)char v175 = v145.st_flags;
        *(_WORD *)&v175[4] = 2112;
        unsigned int v176 = v34;
        uint64_t v37 = "[ERROR] failed openat(%d, '%s') with EACCES, but the item is readable: deviceID:%u fileID:%llu mode:%c%c%c"
              "%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@";
        uint64_t v38 = v35;
        uint32_t v39 = 168;
        goto LABEL_135;
      }
    }
    else
    {
      if ((v145.st_mode & 0xF000) == 0x4000) {
        __int16 v31 = 448;
      }
      else {
        __int16 v31 = 384;
      }
      if ((fchmodat(a1, a2, v31 | v145.st_mode, 32) & 0x80000000) == 0)
      {
        __int16 v32 = brc_bread_crumbs();
        uint64_t v33 = brc_default_log();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
        {
          int v88 = aPcDBLSW[(unint64_t)v145.st_mode >> 12];
          if ((~v145.st_mode & 0x100) != 0) {
            int v89 = 114;
          }
          else {
            int v89 = 45;
          }
          if ((~v145.st_mode & 0x80) != 0) {
            int v90 = 119;
          }
          else {
            int v90 = 45;
          }
          if ((~v145.st_mode & 0x40) != 0 && (v145.st_mode & 0xF000) == 0x4000) {
            int v92 = 120;
          }
          else {
            int v92 = 45;
          }
          if ((v145.st_mode & 0x100) != 0) {
            int v93 = 114;
          }
          else {
            int v93 = 45;
          }
          if ((v145.st_mode & 0x80) != 0) {
            int v94 = 119;
          }
          else {
            int v94 = 45;
          }
          if ((v145.st_mode & 0x40) != 0) {
            int v95 = 120;
          }
          else {
            int v95 = 45;
          }
          *(_DWORD *)buf = 67117314;
          if ((v145.st_mode & 0x20) != 0) {
            int v96 = 114;
          }
          else {
            int v96 = 45;
          }
          int v147 = a1;
          __int16 v148 = 2080;
          if ((v145.st_mode & 0x10) != 0) {
            int v97 = 119;
          }
          else {
            int v97 = 45;
          }
          unsigned int v149 = a2;
          if ((v145.st_mode & 8) != 0) {
            int v98 = 120;
          }
          else {
            int v98 = 45;
          }
          dev_t v151 = 35;
          __int16 v150 = 1024;
          if ((v145.st_mode & 4) != 0) {
            int v99 = 114;
          }
          else {
            int v99 = 45;
          }
          __int16 v152 = 1024;
          if ((v145.st_mode & 2) != 0) {
            int v100 = 119;
          }
          else {
            int v100 = 45;
          }
          *(_DWORD *)char v153 = v89;
          if (v145.st_mode) {
            int v101 = 120;
          }
          else {
            int v101 = 45;
          }
          *(_WORD *)&v153[4] = 1024;
          *(_DWORD *)&v153[6] = v90;
          *(_WORD *)char v154 = 1024;
          *(_DWORD *)&v154[2] = v92;
          *(_WORD *)unsigned int v155 = 1024;
          *(_DWORD *)&v155[2] = 45;
          *(_WORD *)uint64_t v156 = 1024;
          *(_DWORD *)&v156[2] = 45;
          *(_WORD *)uint64_t v157 = 1024;
          *(_DWORD *)&v157[2] = 45;
          *(_WORD *)unint64_t v158 = 1024;
          *(_DWORD *)&v158[2] = 45;
          *(_WORD *)char v159 = 1024;
          *(_DWORD *)&v159[2] = 45;
          *(_WORD *)char v160 = 1024;
          *(_DWORD *)&v160[2] = 45;
          *(_WORD *)unsigned int v161 = 1024;
          *(_DWORD *)&v161[2] = v145.st_dev;
          *(_WORD *)uint64_t v162 = 2048;
          *(void *)&v162[2] = v145.st_ino;
          __int16 v163 = 1024;
          int v164 = v88;
          __int16 v165 = 1024;
          uid_t v166 = v93;
          __int16 v167 = 1024;
          gid_t v168 = v94;
          __int16 v169 = 1024;
          *(_DWORD *)char v170 = v95;
          *(_WORD *)&v170[4] = 1024;
          *(_DWORD *)&v170[6] = v96;
          LOWORD(v171) = 1024;
          *(_DWORD *)((char *)&v171 + 2) = v97;
          HIWORD(v171) = 1024;
          *(_DWORD *)uint64_t v172 = v98;
          *(_WORD *)&v172[4] = 1024;
          *(_DWORD *)&v172[6] = v99;
          __int16 v173 = 1024;
          *(_DWORD *)char v174 = v100;
          *(_WORD *)&v174[4] = 1024;
          *(_DWORD *)&v174[6] = v101;
          *(_WORD *)char v175 = 1024;
          *(_DWORD *)&v175[2] = v145.st_nlink;
          LOWORD(v176) = 1024;
          *(_DWORD *)((char *)&v176 + 2) = v145.st_uid;
          HIWORD(v176) = 1024;
          gid_t v177 = v145.st_gid;
          __int16 v178 = 2048;
          __darwin_time_t v179 = v145.st_atimespec.tv_sec;
          __int16 v180 = 2048;
          __darwin_time_t v181 = v145.st_mtimespec.tv_sec;
          __int16 v182 = 2048;
          __darwin_time_t v183 = v145.st_ctimespec.tv_sec;
          __int16 v184 = 2048;
          off_t v185 = v145.st_size;
          __int16 v186 = 1024;
          __uint32_t v187 = v145.st_flags;
          __int16 v188 = 2112;
          *(void *)uint64_t v189 = v32;
          _os_log_debug_impl(&dword_23FA42000, v33, OS_LOG_TYPE_DEBUG, "[DEBUG] failed openat(%d, '%s') with EACCES: added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", buf, 0xE4u);
        }

        uint64_t v10 = openat(a1, a2, a3, a4);
LABEL_159:
        if ((v10 & 0x80000000) == 0) {
          goto LABEL_2;
        }
        goto LABEL_137;
      }
      uint64_t v34 = brc_bread_crumbs();
      char v35 = brc_default_log();
      if (os_log_type_enabled(v35, (os_log_type_t)0x90u))
      {
        if ((~v145.st_mode & 0x100) != 0) {
          int v50 = 114;
        }
        else {
          int v50 = 45;
        }
        int v104 = v50;
        if ((~v145.st_mode & 0x80) != 0) {
          int v51 = 119;
        }
        else {
          int v51 = 45;
        }
        int v103 = v51;
        if ((~v145.st_mode & 0x40) != 0 && (v145.st_mode & 0xF000) == 0x4000) {
          int v53 = 120;
        }
        else {
          int v53 = 45;
        }
        dev_t v105 = v145.st_dev;
        __darwin_ino64_t v129 = v145.st_ino;
        if ((v145.st_mode & 0x100) != 0) {
          int v54 = 114;
        }
        else {
          int v54 = 45;
        }
        uid_t v123 = v54;
        int v125 = aPcDBLSW[(unint64_t)v145.st_mode >> 12];
        if ((v145.st_mode & 0x80) != 0) {
          int v55 = 119;
        }
        else {
          int v55 = 45;
        }
        if ((v145.st_mode & 0x40) != 0) {
          int v56 = 120;
        }
        else {
          int v56 = 45;
        }
        int v119 = v56;
        gid_t v121 = v55;
        if ((v145.st_mode & 0x20) != 0) {
          int v57 = 114;
        }
        else {
          int v57 = 45;
        }
        if ((v145.st_mode & 0x10) != 0) {
          int v58 = 119;
        }
        else {
          int v58 = 45;
        }
        int v115 = v58;
        int v117 = v57;
        if ((v145.st_mode & 8) != 0) {
          int v59 = 120;
        }
        else {
          int v59 = 45;
        }
        if ((v145.st_mode & 4) != 0) {
          int v60 = 114;
        }
        else {
          int v60 = 45;
        }
        int v111 = v60;
        int v113 = v59;
        if ((v145.st_mode & 2) != 0) {
          int v61 = 119;
        }
        else {
          int v61 = 45;
        }
        if (v145.st_mode) {
          int v62 = 120;
        }
        else {
          int v62 = 45;
        }
        int v107 = v62;
        int v109 = v61;
        int v127 = v145.st_nlink;
        uid_t v131 = v145.st_uid;
        gid_t v133 = v145.st_gid;
        __darwin_time_t v135 = v145.st_atimespec.tv_sec;
        __darwin_time_t v137 = v145.st_mtimespec.tv_sec;
        __darwin_time_t v139 = v145.st_ctimespec.tv_sec;
        off_t v141 = v145.st_size;
        __uint32_t v143 = v145.st_flags;
        int v63 = *__error();
        *(_DWORD *)buf = 67117570;
        int v147 = a1;
        __int16 v148 = 2080;
        unsigned int v149 = a2;
        __int16 v150 = 1024;
        dev_t v151 = 35;
        __int16 v152 = 1024;
        *(_DWORD *)char v153 = v104;
        *(_WORD *)&v153[4] = 1024;
        *(_DWORD *)&v153[6] = v103;
        *(_WORD *)char v154 = 1024;
        *(_DWORD *)&v154[2] = v53;
        *(_WORD *)unsigned int v155 = 1024;
        *(_DWORD *)&v155[2] = 45;
        *(_WORD *)uint64_t v156 = 1024;
        *(_DWORD *)&v156[2] = 45;
        *(_WORD *)uint64_t v157 = 1024;
        *(_DWORD *)&v157[2] = 45;
        *(_WORD *)unint64_t v158 = 1024;
        *(_DWORD *)&v158[2] = 45;
        *(_WORD *)char v159 = 1024;
        *(_DWORD *)&v159[2] = 45;
        *(_WORD *)char v160 = 1024;
        *(_DWORD *)&v160[2] = 45;
        *(_WORD *)unsigned int v161 = 1024;
        *(_DWORD *)&v161[2] = v105;
        *(_WORD *)uint64_t v162 = 2048;
        *(void *)&v162[2] = v129;
        __int16 v163 = 1024;
        int v164 = v125;
        __int16 v165 = 1024;
        uid_t v166 = v123;
        __int16 v167 = 1024;
        gid_t v168 = v121;
        __int16 v169 = 1024;
        *(_DWORD *)char v170 = v119;
        *(_WORD *)&v170[4] = 1024;
        *(_DWORD *)&v170[6] = v117;
        LOWORD(v171) = 1024;
        *(_DWORD *)((char *)&v171 + 2) = v115;
        HIWORD(v171) = 1024;
        *(_DWORD *)uint64_t v172 = v113;
        *(_WORD *)&v172[4] = 1024;
        *(_DWORD *)&v172[6] = v111;
        __int16 v173 = 1024;
        *(_DWORD *)char v174 = v109;
        *(_WORD *)&v174[4] = 1024;
        *(_DWORD *)&v174[6] = v107;
        *(_WORD *)char v175 = 1024;
        *(_DWORD *)&v175[2] = v127;
        LOWORD(v176) = 1024;
        *(_DWORD *)((char *)&v176 + 2) = v131;
        HIWORD(v176) = 1024;
        gid_t v177 = v133;
        __int16 v178 = 2048;
        __darwin_time_t v179 = v135;
        __int16 v180 = 2048;
        __darwin_time_t v181 = v137;
        __int16 v182 = 2048;
        __darwin_time_t v183 = v139;
        __int16 v184 = 2048;
        off_t v185 = v141;
        __int16 v186 = 1024;
        __uint32_t v187 = v143;
        __int16 v188 = 1024;
        *(_DWORD *)uint64_t v189 = v63;
        *(_WORD *)&v189[4] = 2112;
        *(void *)&v189[6] = v34;
        uint64_t v37 = "[ERROR] failed openat with EACCES and fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mod"
              "e:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d%@";
        uint64_t v38 = v35;
        uint32_t v39 = 234;
        goto LABEL_135;
      }
    }

    *__error() = 13;
  }
LABEL_137:
  char v64 = __error();
  if ((a3 & 3) != 0 || *v64 != 1) {
    return v10;
  }
  int v65 = -1;
  if ((a1 & 0x80000000) == 0 && *a2 != 47)
  {
    int v65 = open(".", 33028);
    if (__pthread_fchdir() != -1 || v65 < 0)
    {
      if ((__pthread_fchdir() & 0x80000000) != 0)
      {
        if ((v65 & 0x80000000) == 0)
        {
          int v70 = *__error();
          __pthread_fchdir();
          *__error() = v70;
          int v71 = *__error();
          close(v65);
          *__error() = v71;
        }
        return v10;
      }
    }
    else
    {
      close(v65);
      if ((__pthread_fchdir() & 0x80000000) != 0) {
        return v10;
      }
      int v65 = -1;
    }
  }
  uint64_t v66 = open_dprotected_np(a2, a3, 0, 1);
  uint64_t v10 = v66;
  if (a5 && (v66 & 0x80000000) == 0) {
    *a5 = 1;
  }
  if ((v65 & 0x80000000) == 0)
  {
    int v67 = *__error();
    __pthread_fchdir();
    *__error() = v67;
    int v68 = *__error();
    close(v65);
    *__error() = v68;
  }
  if ((v10 & 0x80000000) == 0) {
    goto LABEL_2;
  }
  return v10;
}

uint64_t BRCOpenByID(int32_t a1, uint64_t a2, int a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  v13.val[0] = a1;
  v13.val[1] = 0;
  if ((fsgetpath(v17, 0x400uLL, &v13, a2) & 0x8000000000000000) == 0 && !__sandbox_allowed()) {
    return 0xFFFFFFFFLL;
  }
  *(void *)&long long v15 = a2;
  uint64_t v5 = openbyid_np();
  if ((v5 & 0x80000000) != 0)
  {
    id v6 = __error();
    if ((a3 & 3) == 0 && *v6 == 1)
    {
      int v7 = -5;
      while ((fsgetpath(v17, 0x400uLL, &v13, a2) & 0x8000000000000000) == 0)
      {
        if (!__sandbox_allowed()) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v8 = open_dprotected_np(v17, a3, 0, 1);
        uint64_t v5 = v8;
        if ((v8 & 0x80000000) == 0)
        {
          uint64_t v16 = 0;
          long long v15 = xmmword_23FD34530;
          memset(v14, 0, 12);
          int v9 = fgetattrlist(v8, &v15, v14, 0xCuLL, 0x20u);
          uint64_t v10 = *(void *)((char *)v14 + 4);
          if (v9 < 0) {
            uint64_t v10 = 0;
          }
          if (v10 == a2) {
            return v5;
          }
          close(v5);
          *__error() = 2;
          uint64_t v5 = 0xFFFFFFFFLL;
        }
        if (__CFADD__(v7++, 1)) {
          return v5;
        }
      }
    }
  }
  return v5;
}

BOOL __sandbox_allowed()
{
  getpid();
  int v0 = sandbox_check();
  if (v0) {
    *__error() = 1;
  }
  return v0 == 0;
}

uint64_t BRCUnlinkFileID(int32_t a1, uint64_t a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  v4.val[0] = a1;
  v4.val[1] = 0;
  if (fsgetpath((char *)&__p, 0x400uLL, &v4, a2) < 0 || !__sandbox_allowed()) {
    return 0xFFFFFFFFLL;
  }
  else {
    return remove(&__p, v2);
  }
}

uint64_t BRCIsFileIDLocked(int32_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v8 = brc_bread_crumbs();
    int v9 = brc_default_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT)) {
      BRCIsFileIDLocked_cold_1();
    }
  }
  int v4 = BRCOpenByID(a1, a2, 33028);
  if (v4 < 0) {
    return 0;
  }
  int v5 = v4;
  unsigned int v6 = flock(v4, 6);
  close(v5);
  return v6 >> 31;
}

uint64_t BRCSetMtime(int a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  memset(&v9, 0, sizeof(v9));
  if (fstat(a1, &v9) < 0)
  {
    int v6 = *__error();
    int v7 = brc_bread_crumbs();
    uint64_t v8 = brc_default_log();
    if (os_log_type_enabled(v8, (os_log_type_t)0x90u)) {
      BRCCloneAt_cold_1();
    }
  }
  else
  {
    v10.__darwin_time_t tv_sec = v9.st_atimespec.tv_sec;
    v10.tv_usec = v9.st_atimespec.tv_nsec;
    uint64_t v11 = a2;
    int v12 = 0;
    int v4 = futimes(a1, &v10);
    uint64_t result = 0;
    if ((v4 & 0x80000000) == 0) {
      return result;
    }
    int v6 = *__error();
    int v7 = brc_bread_crumbs();
    uint64_t v8 = brc_default_log();
    if (os_log_type_enabled(v8, (os_log_type_t)0x90u)) {
      BRCSetMtime_cold_2();
    }
  }

  *__error() = v6;
  return 0xFFFFFFFFLL;
}

uint64_t BRCRemoveFolderInAutoreleasepool(void *a1, void *a2, int a3, int a4)
{
  id v7 = a2;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = __BRCRemoveFolderInAutoreleasepool_block_invoke;
  v11[3] = &unk_2650851D0;
  id v12 = v7;
  id v8 = v7;
  uint64_t v9 = BRCRemoveFolder(a1, v11, a3, a4);

  return v9;
}

uint64_t BRCRemoveFolder(void *a1, void *a2, int a3, int a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  if ([v7 length])
  {
    if (a3) {
      int v9 = 3;
    }
    else {
      int v9 = 1;
    }
    if (a4) {
      int v10 = 256;
    }
    else {
      int v10 = 0;
    }
    removefile_flags_t v11 = v10 | v9;
    id v12 = removefile_state_alloc();
    int value = 0;
    removefile_state_set(v12, 1u, _brc_removefile_confirm_callback);
    removefile_state_set(v12, 2u, v8);
    removefile_state_set(v12, 3u, _brc_removefile_error_callback);
    removefile_state_set(v12, 4u, &value);
    id v13 = v7;
    removefile((const char *)[v13 fileSystemRepresentation], v12, v11);
    removefile_state_free(v12);
    int v14 = value;
    *__error() = v14;
    if (value)
    {
      int v15 = *__error();
      uint64_t v16 = brc_bread_crumbs();
      int v17 = brc_default_log();
      if (os_log_type_enabled(v17, (os_log_type_t)0x90u))
      {
        int v22 = objc_msgSend(v13, "fp_obfuscatedPath");
        *(_DWORD *)buf = 138412802;
        int v25 = v22;
        __int16 v26 = 1024;
        int v27 = v15;
        __int16 v28 = 2112;
        size_t v29 = v16;
        _os_log_error_impl(&dword_23FA42000, v17, (os_log_type_t)0x90u, "[ERROR] Failed to remove folder at path %@ %{errno}d%@", buf, 0x1Cu);
      }
      *__error() = v15;
      if (value) {
        uint64_t v18 = 0xFFFFFFFFLL;
      }
      else {
        uint64_t v18 = 0;
      }
    }
    else
    {
      uint64_t v18 = 0;
    }
  }
  else
  {
    int v19 = brc_bread_crumbs();
    int v20 = brc_default_log();
    if (os_log_type_enabled(v20, (os_log_type_t)0x90u)) {
      BRCRemoveFolder_cold_1((uint64_t)v19, v20);
    }

    *__error() = 22;
    uint64_t v18 = 0xFFFFFFFFLL;
  }

  return v18;
}

uint64_t __BRCRemoveFolderInAutoreleasepool_block_invoke(uint64_t a1)
{
  int v2 = (void *)MEMORY[0x2455D97F0]();
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  return v3;
}

_acl *_brc_removefile_confirm_callback(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  int ProtectionStatus = BRCOpenAtAndGetProtectionStatus(0xFFFFFFFFLL, a2, 2129924, 0, 0);
  memset(&v26, 0, sizeof(v26));
  int v6 = (uint64_t (**)(void, void, void))MEMORY[0x2455D9A50](a3);
  if ((ProtectionStatus & 0x80000000) == 0)
  {
    if (fstat(ProtectionStatus, &v26))
    {
      int v7 = *__error();
      id v8 = brc_bread_crumbs();
      int v9 = brc_default_log();
      if (os_log_type_enabled(v9, (os_log_type_t)0x90u))
      {
        *(_DWORD *)buf = 136315650;
        __int16 v28 = a2;
        __int16 v29 = 1024;
        int v30 = v7;
        __int16 v31 = 2112;
        __int16 v32 = v8;
        _os_log_error_impl(&dword_23FA42000, v9, (os_log_type_t)0x90u, "[ERROR] Couldn't stat %s %{errno}d%@", buf, 0x1Cu);
      }

      *__error() = v7;
      if (v6)
      {
        int v10 = (_acl *)((uint64_t (**)(void, const char *, void))v6)[2](v6, a2, 0);
        if (v10) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      if (v6)
      {
        int v10 = (_acl *)((uint64_t (**)(void, const char *, stat *))v6)[2](v6, a2, &v26);
        if (v10) {
          goto LABEL_33;
        }
      }
      if ((v26.st_flags & 6) != 0 && fchflags(ProtectionStatus, v26.st_flags & 0xFFF9))
      {
        int v11 = *__error();
        id v12 = brc_bread_crumbs();
        id v13 = brc_default_log();
        if (os_log_type_enabled(v13, (os_log_type_t)0x90u))
        {
          *(_DWORD *)buf = 136315650;
          __int16 v28 = a2;
          __int16 v29 = 1024;
          int v30 = v11;
          __int16 v31 = 2112;
          __int16 v32 = v12;
          _os_log_error_impl(&dword_23FA42000, v13, (os_log_type_t)0x90u, "[ERROR] Unable to strip UF_IMMUTABLE and UF_APPEND to %s %{errno}d%@", buf, 0x1Cu);
        }

        *__error() = v11;
      }
      if ((v26.st_mode & 0xF000) == 0x4000) {
        int v14 = 448;
      }
      else {
        int v14 = 384;
      }
      if ((v14 & ~v26.st_mode) != 0 && fchmod(ProtectionStatus, v26.st_mode | v14))
      {
        int v15 = *__error();
        uint64_t v16 = brc_bread_crumbs();
        int v17 = brc_default_log();
        if (os_log_type_enabled(v17, (os_log_type_t)0x90u))
        {
          *(_DWORD *)buf = 136315650;
          __int16 v28 = a2;
          __int16 v29 = 1024;
          int v30 = v15;
          __int16 v31 = 2112;
          __int16 v32 = v16;
          _os_log_error_impl(&dword_23FA42000, v17, (os_log_type_t)0x90u, "[ERROR] Failed setting permissions of %s %{errno}d%@", buf, 0x1Cu);
        }

        *__error() = v15;
      }
    }
    acl_t fd_np = acl_get_fd_np(ProtectionStatus, ACL_TYPE_EXTENDED);
    if (fd_np)
    {
      acl_free(fd_np);
      int v10 = acl_init(0);
      if (!v10)
      {
LABEL_33:
        close(ProtectionStatus);
        goto LABEL_37;
      }
      if (acl_set_fd_np(ProtectionStatus, v10, ACL_TYPE_EXTENDED))
      {
        int v19 = *__error();
        int v20 = brc_bread_crumbs();
        int v21 = brc_default_log();
        if (os_log_type_enabled(v21, (os_log_type_t)0x90u))
        {
          *(_DWORD *)buf = 136315650;
          __int16 v28 = a2;
          __int16 v29 = 1024;
          int v30 = v19;
          __int16 v31 = 2112;
          __int16 v32 = v20;
          _os_log_error_impl(&dword_23FA42000, v21, (os_log_type_t)0x90u, "[ERROR] Failed stripping acls of %s %{errno}d%@", buf, 0x1Cu);
        }

        *__error() = v19;
      }
      acl_free(v10);
    }
    int v10 = 0;
    goto LABEL_33;
  }
  if (*__error() == 2)
  {
    int v10 = 0;
  }
  else
  {
    int v22 = *__error();
    int v23 = brc_bread_crumbs();
    int v24 = brc_default_log();
    if (os_log_type_enabled(v24, (os_log_type_t)0x90u))
    {
      *(_DWORD *)buf = 136315650;
      __int16 v28 = a2;
      __int16 v29 = 1024;
      int v30 = v22;
      __int16 v31 = 2112;
      __int16 v32 = v23;
      _os_log_error_impl(&dword_23FA42000, v24, (os_log_type_t)0x90u, "[ERROR] Failed opening %s %{errno}d%@", buf, 0x1Cu);
    }

    int v10 = 0;
    *__error() = v22;
  }
LABEL_37:

  return v10;
}

uint64_t _brc_removefile_error_callback(_removefile_state *a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  int dst = 0;
  removefile_state_get(a1, 5u, &dst);
  if (dst == 66)
  {
    int v5 = brc_bread_crumbs();
    int v6 = brc_default_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      int v7 = strerror(dst);
      *(_DWORD *)buf = 136315906;
      uint64_t v12 = a2;
      __int16 v13 = 2080;
      int v14 = v7;
      __int16 v15 = 1024;
      int v16 = dst;
      __int16 v17 = 2112;
      uint64_t v18 = v5;
      _os_log_debug_impl(&dword_23FA42000, v6, OS_LOG_TYPE_DEBUG, "[DEBUG] Can't delete %s: %s(%d)%@", buf, 0x26u);
    }
  }
  else
  {
    int v5 = brc_bread_crumbs();
    int v6 = brc_default_log();
    if (os_log_type_enabled(v6, (os_log_type_t)0x90u))
    {
      int v9 = strerror(dst);
      *(_DWORD *)buf = 136315906;
      uint64_t v12 = a2;
      __int16 v13 = 2080;
      int v14 = v9;
      __int16 v15 = 1024;
      int v16 = dst;
      __int16 v17 = 2112;
      uint64_t v18 = v5;
      _os_log_error_impl(&dword_23FA42000, v6, (os_log_type_t)0x90u, "[ERROR] Can't delete %s: %s(%d)%@", buf, 0x26u);
    }
  }

  if (a3 && !*a3) {
    *a3 = dst;
  }
  return 1;
}

uint64_t BRCRecursiveRemove(void *a1)
{
  return BRCRemoveFolder(a1, 0, 0, 0);
}

uint64_t BRCRecursiveRemoveBelow(void *a1)
{
  return BRCRemoveFolder(a1, 0, 1, 0);
}

id BRCCopyFakeQuarantineInfo(int a1, void *a2)
{
  id v10 = 0;
  int v4 = BRCGetXattrValue(a1, "com.apple.quarantine", -1, &v10);
  id v5 = v10;
  int v6 = v5;
  if (v5)
  {
    int v7 = 0;
    if (a2) {
      *a2 = v5;
    }
  }
  else
  {
    if (v4)
    {
      id v8 = v4;
    }
    else
    {
      BRCGetXattrValue(a1, "com.apple.private.bird.fake-qtn", -1, a2);
      id v8 = (id)objc_claimAutoreleasedReturnValue();
    }
    int v7 = v8;
  }

  return v7;
}

id BRCGetXattrValue(int a1, const char *a2, ssize_t a3, void *a4)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  ssize_t v8 = fgetxattr(a1, a2, 0, 0, 0, 0);
  if (!v8)
  {
    id v16 = (id)objc_opt_new();
    goto LABEL_30;
  }
  size_t v9 = v8;
  if (v8 < 0)
  {
    if (*__error() == 93)
    {
LABEL_20:
      id v16 = 0;
      goto LABEL_30;
    }
    uint64_t v12 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
    if (!v12)
    {
LABEL_17:
      if (a4) {
        *a4 = v12;
      }

      goto LABEL_20;
    }
    __int16 v13 = brc_bread_crumbs();
    int v14 = brc_default_log();
    if (!os_log_type_enabled(v14, (os_log_type_t)0x90u))
    {
LABEL_16:

      goto LABEL_17;
    }
    __int16 v15 = "(passed to caller)";
    int v23 = 136315906;
    int v24 = "BRCGetXattrValue";
    __int16 v25 = 2080;
    if (!a4) {
      __int16 v15 = "(ignored by caller)";
    }
LABEL_35:
    size_t v26 = (size_t)v15;
    __int16 v27 = 2112;
    ssize_t v28 = (ssize_t)v12;
    __int16 v29 = 2112;
    int v30 = v13;
    _os_log_error_impl(&dword_23FA42000, v14, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", (uint8_t *)&v23, 0x2Au);
    goto LABEL_16;
  }
  if ((a3 & 0x8000000000000000) == 0 && v8 > a3)
  {
    id v10 = brc_bread_crumbs();
    int v11 = brc_default_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v23 = 136315906;
      int v24 = a2;
      __int16 v25 = 2048;
      size_t v26 = v9;
      __int16 v27 = 2048;
      ssize_t v28 = a3;
      __int16 v29 = 2112;
      int v30 = v10;
      _os_log_impl(&dword_23FA42000, v11, OS_LOG_TYPE_DEFAULT, "[WARNING] Extended attribute %s size %ld is greater than size limit %ld%@", (uint8_t *)&v23, 0x2Au);
    }

    uint64_t v12 = objc_msgSend(MEMORY[0x263F087E8], "br_errorWithPOSIXCode:", 27);
    if (!v12) {
      goto LABEL_17;
    }
    __int16 v13 = brc_bread_crumbs();
    int v14 = brc_default_log();
    if (!os_log_type_enabled(v14, (os_log_type_t)0x90u)) {
      goto LABEL_16;
    }
    __int16 v15 = "(passed to caller)";
    int v23 = 136315906;
    int v24 = "BRCGetXattrValue";
    __int16 v25 = 2080;
    if (!a4) {
      __int16 v15 = "(ignored by caller)";
    }
    goto LABEL_35;
  }
  id v17 = (id) [objc_alloc(MEMORY[0x263EFF990]) initWithLength:v8];
  if (fgetxattr(a1, a2, (void *)[v17 mutableBytes], v9, 0, 0) == v9)
  {
    id v16 = v17;
  }
  else
  {
    uint64_t v18 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
    if (v18)
    {
      uint64_t v19 = brc_bread_crumbs();
      int v20 = brc_default_log();
      if (os_log_type_enabled(v20, (os_log_type_t)0x90u))
      {
        int v22 = "(passed to caller)";
        int v23 = 136315906;
        int v24 = "BRCGetXattrValue";
        __int16 v25 = 2080;
        if (!a4) {
          int v22 = "(ignored by caller)";
        }
        size_t v26 = (size_t)v22;
        __int16 v27 = 2112;
        ssize_t v28 = (ssize_t)v18;
        __int16 v29 = 2112;
        int v30 = v19;
        _os_log_error_impl(&dword_23FA42000, v20, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", (uint8_t *)&v23, 0x2Au);
      }
    }
    if (a4) {
      *a4 = v18;
    }

    id v16 = 0;
  }

LABEL_30:
  return v16;
}

uint64_t BRCSetFakeQuarantineInfo(int a1, void *a2, void *a3)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v5 = a2;
  int v6 = v5;
  if (v5)
  {
    id v7 = v5;
    if (fsetxattr(a1, "com.apple.quarantine", (const void *)[v7 bytes], objc_msgSend(v7, "length"), 0, 0) < 0)
    {
      ssize_t v8 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
      if (v8)
      {
        size_t v9 = brc_bread_crumbs();
        id v10 = brc_default_log();
        if (os_log_type_enabled(v10, (os_log_type_t)0x90u))
        {
          int v11 = "(passed to caller)";
          int v14 = 136315906;
          __int16 v15 = "BRCSetFakeQuarantineInfo";
          __int16 v16 = 2080;
          if (!a3) {
            int v11 = "(ignored by caller)";
          }
LABEL_15:
          id v17 = v11;
          __int16 v18 = 2112;
          uint64_t v19 = v8;
          __int16 v20 = 2112;
          int v21 = v9;
          _os_log_error_impl(&dword_23FA42000, v10, (os_log_type_t)0x90u, "[ERROR] %s: %s error: %@%@", (uint8_t *)&v14, 0x2Au);
          goto LABEL_16;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
LABEL_10:
    fremovexattr(a1, "com.apple.private.bird.fake-qtn", 0);
    uint64_t v12 = 1;
    goto LABEL_20;
  }
  if ((fremovexattr(a1, "com.apple.quarantine", 0) & 0x80000000) == 0 || *__error() == 93) {
    goto LABEL_10;
  }
  ssize_t v8 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
  if (v8)
  {
    size_t v9 = brc_bread_crumbs();
    id v10 = brc_default_log();
    if (os_log_type_enabled(v10, (os_log_type_t)0x90u))
    {
      int v11 = "(passed to caller)";
      int v14 = 136315906;
      __int16 v15 = "BRCSetFakeQuarantineInfo";
      __int16 v16 = 2080;
      if (!a3) {
        int v11 = "(ignored by caller)";
      }
      goto LABEL_15;
    }
LABEL_16:
  }
LABEL_17:
  if (a3) {
    *a3 = v8;
  }

  uint64_t v12 = 0;
LABEL_20:

  return v12;
}

BOOL BRCQuarantineInfoIsEqual(void *a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = a1;
  id v5 = +[BRCUserDefaults defaultsForMangledID:0];
  int v6 = [v5 ignoredQuarantineMask];

  int v7 = objc_msgSend(v4, "br_qtnFlags");
  int v8 = objc_msgSend(v3, "br_qtnFlags");

  int v9 = (v8 ^ v7) & ~v6;
  if (v9)
  {
    id v10 = brc_bread_crumbs();
    int v11 = brc_default_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      v13[0] = 67109890;
      v13[1] = v7;
      __int16 v14 = 1024;
      int v15 = v8;
      __int16 v16 = 1024;
      int v17 = v6;
      __int16 v18 = 2112;
      uint64_t v19 = v10;
      _os_log_debug_impl(&dword_23FA42000, v11, OS_LOG_TYPE_DEBUG, "[DEBUG] Quarantine info differs in flags %u vs %u ignoring %u%@", (uint8_t *)v13, 0x1Eu);
    }
  }
  return v9 == 0;
}

uint64_t BRCSetupVNodeRapidAging(int a1)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  *(void *)id v4 = 0x4400000001;
  if (a1) {
    int v1 = 1;
  }
  else {
    int v1 = 3;
  }
  int v3 = v1;
  return sysctl(v4, 2u, 0, 0, &v3, 4uLL);
}

unint64_t BRCRoundedTimestamp(unint64_t a1)
{
  int v2 = +[BRCUserDefaults defaultsForMangledID:0];
  unsigned int v3 = [v2 timestampRoundingAmount];

  return a1 / v3 * v3;
}

xattr_flags_t brc_xattr_flags_from_name(char *a1)
{
  if (brc_xattr_flags_from_name_onceToken != -1) {
    dispatch_once(&brc_xattr_flags_from_name_onceToken, &__block_literal_global_51);
  }
  xattr_flags_t v2 = xattr_flags_from_name(a1);
  unsigned int v3 = xattr_name_without_flags(a1);
  id v4 = brc_xattr_flags_from_name_xattr_mods;
  if (brc_xattr_flags_from_name_xattr_mods)
  {
    uint64_t v5 = &unk_268C622B0;
    while (strcmp(v3, v4))
    {
      id v4 = (const char *)v5[1];
      v5 += 3;
      if (!v4) {
        goto LABEL_9;
      }
    }
    xattr_flags_t v2 = (*(v5 - 1) | v2) & ~*v5;
  }
LABEL_9:
  free(v3);
  return v2;
}

const char *__brc_xattr_flags_from_name_block_invoke()
{
  uint64_t result = brc_xattr_flags_from_name_xattr_mods;
  if (brc_xattr_flags_from_name_xattr_mods)
  {
    int v1 = &brc_xattr_flags_from_name_xattr_mods;
    do
    {
      void *v1 = xattr_name_without_flags(result);
      xattr_flags_t v2 = v1[3];
      v1 += 3;
      uint64_t result = v2;
    }
    while (v2);
  }
  return result;
}

BOOL BRCFileMightHaveChangedByFileName(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  int ProtectionStatus = BRCOpenAtAndGetProtectionStatus(a1, a2, 256, 0, 0);
  if (ProtectionStatus < 0) {
    return 1;
  }
  int v13 = ProtectionStatus;
  uint64_t v22 = a4;
  uint64_t v14 = a3;
  ssize_t v15 = flistxattr(ProtectionStatus, namebuff, 0x100uLL, 0);
  if (v15 < 0) {
    goto LABEL_7;
  }
  *(void *)&v23[0] = MEMORY[0x263EF8330];
  *((void *)&v23[0] + 1) = 3221225472;
  *(void *)&v23[1] = __countSyncableXattrs_block_invoke;
  *((void *)&v23[1] + 1) = &__block_descriptor_33_e9_B16__0r_8l;
  LOBYTE(v23[2]) = 1;
  if (v15)
  {
    int v16 = 0;
    int v17 = &namebuff[v15];
    __int16 v18 = namebuff;
    do
    {
      v16 += (*(uint64_t (**)(_OWORD *, char *))&v23[1])(v23, v18);
      v18 += strlen(v18) + 1;
    }
    while (v18 < v17);
    if (v16)
    {
LABEL_7:
      close(v13);
      return 1;
    }
  }
  memset(v23, 0, 36);
  int v20 = fgetattrlist(v13, &BRCFileMightHaveChangedByFileName_al, v23, 0x24uLL, 0x20u);
  close(v13);
  if (v20 < 0) {
    return 1;
  }
  if ((a7 - 1) >= 2)
  {
    if (a7 == 3)
    {
LABEL_17:
      int v21 = 0;
      a5 = *(void *)((char *)v23 + 4);
      goto LABEL_19;
    }
    if (a7 != 8)
    {
LABEL_18:
      int v21 = 61632;
      goto LABEL_19;
    }
  }
  if (!_CFURLCStringIsPromiseName())
  {
    if (a7 == 3) {
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  int v21 = 61568;
LABEL_19:
  BOOL result = 1;
  if (((DWORD1(v23[1]) ^ a6) & v21) == 0 && DWORD2(v23[1]) == v22 && a5 == *(void *)((char *)v23 + 4)) {
    return *(void *)((char *)&v23[1] + 12) != v14;
  }
  return result;
}

BOOL __countSyncableXattrs_block_invoke(uint64_t a1, char *a2)
{
  xattr_flags_t v3 = brc_xattr_flags_from_name(a2);
  return *(unsigned char *)(a1 + 32) == (xattr_intent_with_flags(4u, v3) != 0);
}

uint64_t __sort_strings_block_invoke(uint64_t a1, const char **a2, const char **a3)
{
  return strcmp(*a2, *a3);
}

void sub_23FC3F190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC3F790(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC4054C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC406BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC4087C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL BRFieldStructureSignatureReadFrom(uint64_t a1, uint64_t a2)
{
  xattr_flags_t v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    int v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 16;
LABEL_22:
        uint64_t v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v1_Block_object_dispose(&STACK[0x210], 8) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadString();
    uint64_t v18 = 8;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void __dispatch_async_with_logs_block_invoke_18(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  xattr_flags_t v2 = brc_bread_crumbs();
  xattr_flags_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    unint64_t v10 = label;
    __int16 v11 = 2112;
    unint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FC41BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FC449BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__42(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__42(uint64_t a1)
{
}

void sub_23FC44DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void brc_task_tracker_async_with_logs_and_qos(void *a1, void *a2, dispatch_block_flags_t a3, dispatch_qos_class_t a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a5;
  id v14 = a6;
  if (!v11)
  {
    int v23 = brc_bread_crumbs();
    int v24 = brc_default_log();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_FAULT)) {
      brc_task_tracker_async_with_logs_and_qos_cold_1();
    }
  }
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  v29[2] = __brc_task_tracker_async_with_logs_and_qos_block_invoke;
  v29[3] = &unk_26507F850;
  int v15 = v11;
  id v30 = v15;
  id v31 = v14;
  int v16 = (void *)MEMORY[0x2455D9A50](v29);
  char is_cancelled = brc_task_tracker_is_cancelled(v15);
  uint64_t v18 = (void *)v15[2];
  if (is_cancelled)
  {
    if (a3 != DISPATCH_BLOCK_INHERIT_QOS_CLASS || a4) {
      dispatch_block_t v19 = dispatch_block_create_with_qos_class(a3, a4, 0, v16);
    }
    else {
      dispatch_block_t v19 = (dispatch_block_t)MEMORY[0x2455D9A50](v16);
    }
    int v21 = v19;
    dispatch_group_async_with_logs(v18, v12, v19);
  }
  else
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __brc_task_tracker_async_with_logs_and_qos_block_invoke_11;
    block[3] = &unk_265085328;
    size_t v26 = v15;
    id v27 = v13;
    id v28 = v16;
    if (a3 != DISPATCH_BLOCK_INHERIT_QOS_CLASS || a4) {
      dispatch_block_t v20 = dispatch_block_create_with_qos_class(a3, a4, 0, block);
    }
    else {
      dispatch_block_t v20 = (dispatch_block_t)MEMORY[0x2455D9A50](block);
    }
    uint64_t v22 = v20;
    dispatch_group_async_with_logs(v18, v12, v20);

    int v21 = v26;
  }
}

uint64_t __brc_task_tracker_async_with_logs_and_qos_block_invoke(uint64_t a1)
{
  xattr_flags_t v2 = brc_bread_crumbs();
  xattr_flags_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
    __brc_task_tracker_async_with_logs_and_qos_block_invoke_cold_1(a1, (uint64_t)v2, v3);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t brc_task_tracker_is_cancelled(void *a1)
{
  int v1 = a1;
  if (!v1)
  {
    long long v5 = brc_bread_crumbs();
    uint64_t v6 = brc_default_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT)) {
      brc_task_tracker_async_with_logs_and_qos_cold_1();
    }
  }
  unsigned __int8 v2 = atomic_load(v1 + 24);
  uint64_t v3 = v2 & 1;

  return v3;
}

void dispatch_group_async_with_logs(void *a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  long long v5 = a1;
  uint64_t v6 = a2;
  id v7 = a3;
  uint64_t v8 = (void *)MEMORY[0x2455D97F0]();
  long long v20 = 0uLL;
  uint64_t v21 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_group_async_with_logs", 293, &v20);
  __int16 v9 = brc_bread_crumbs();
  unint64_t v10 = brc_default_log();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v13 = v20;
    label = dispatch_queue_get_label(v6);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v13;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    int v23 = v9;
    _os_log_debug_impl(&dword_23FA42000, v10, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v21;
  *(_OWORD *)buf = v20;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 3221225472;
  void v15[2] = __dispatch_group_async_with_logs_block_invoke_0;
  v15[3] = &unk_26507EE60;
  long long v18 = v20;
  uint64_t v19 = v21;
  id v11 = v6;
  int v16 = v11;
  id v12 = v7;
  id v17 = v12;
  dispatch_group_async(v5, v11, v15);
}

uint64_t __brc_task_tracker_async_with_logs_and_qos_block_invoke_11(uint64_t a1)
{
  int is_cancelled = brc_task_tracker_is_cancelled(*(void **)(a1 + 32));
  uint64_t v3 = 40;
  if (is_cancelled) {
    uint64_t v3 = 48;
  }
  id v4 = *(uint64_t (**)(void))(*(void *)(a1 + v3) + 16);
  return v4();
}

void brc_task_tracker_async_with_logs(void *a1, void *a2, void *a3, void *a4)
{
}

intptr_t brc_task_tracker_wait_timeout(uint64_t a1, dispatch_time_t a2)
{
  return dispatch_group_wait(*(dispatch_group_t *)(a1 + 16), a2);
}

intptr_t brc_task_tracker_wait(uint64_t a1)
{
  return dispatch_group_wait(*(dispatch_group_t *)(a1 + 16), 0xFFFFFFFFFFFFFFFFLL);
}

void brc_task_tracker_sync(void *a1, void *a2, void *a3)
{
  long long v5 = a1;
  uint64_t v6 = a2;
  id v7 = a3;
  if (!v5)
  {
    __int16 v9 = brc_bread_crumbs();
    unint64_t v10 = brc_default_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
      brc_task_tracker_async_with_logs_and_qos_cold_1();
    }
  }
  dispatch_group_enter(v5[2]);
  if (brc_task_tracker_is_cancelled(v5)) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = v6;
  }
  v8[2]();
  dispatch_group_leave(v5[2]);
}

void __dispatch_group_async_with_logs_block_invoke_0(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  unsigned __int8 v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    unint64_t v10 = label;
    __int16 v11 = 2112;
    id v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FC4629C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t __Block_byref_object_copy__43(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__43(uint64_t a1)
{
}

void sub_23FC46E28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC4705C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC47170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FC473D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC4800C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
}

void sub_23FC4858C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC4A9D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC4C818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_10(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x210], 8) = a1;
}

uint64_t BRFieldUserIdentityReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadData();
        long long v18 = *(void **)(a1 + 8);
        *(void *)(a1 + _Block_object_dispose(&STACK[0x210], 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FC508C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC51684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC535EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC53B40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC553D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC55528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC56F28(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__44(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__44(uint64_t a1)
{
}

void sub_23FC57C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id *location)
{
  _Block_object_dispose((const void *)(v16 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_23FC57EE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC57F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

uint64_t AppTelemetryTimeSeriesEventReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  long long v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x263F62268];
  char v8 = &OBJC_IVAR___BRCRecentsEnumeratorBatch__deletedItemIDs;
  unsigned int v9 = &OBJC_IVAR___BRCRecentsEnumeratorBatch__deletedItemIDs;
  unint64_t v10 = &OBJC_IVAR___BRCRecentsEnumeratorBatch__deletedItemIDs;
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v11 = 0;
    unsigned int v12 = 0;
    unint64_t v13 = 0;
    while (1)
    {
      uint64_t v14 = *v3;
      uint64_t v15 = *(void *)(a2 + v14);
      unint64_t v16 = v15 + 1;
      if (v15 == -1 || v16 > *(void *)(a2 + *v4)) {
        break;
      }
      char v17 = *(unsigned char *)(*(void *)(a2 + *v7) + v15);
      *(void *)(a2 + v14) = v16;
      v13 |= (unint64_t)(v17 & 0x7F) << v11;
      if ((v17 & 0x80) == 0) {
        goto LABEL_12;
      }
      v11 += 7;
      BOOL v18 = v12++ >= 9;
      if (v18)
      {
        unint64_t v13 = 0;
        int v19 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v19 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v13 = 0;
    }
LABEL_14:
    if (v19 || (v13 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v13 >> 3))
    {
      case 0u:
        unsigned int v21 = 0;
        do
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
            goto LABEL_99;
          }
          int v25 = *(char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          if ((v25 & 0x80000000) == 0) {
            break;
          }
        }
        while (v21++ <= 8);
        goto LABEL_99;
      case 1u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        while (2)
        {
          uint64_t v30 = *v3;
          uint64_t v31 = *(void *)(a2 + v30);
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if (v33 < 0)
            {
              v27 += 7;
              BOOL v18 = v28++ >= 9;
              if (v18)
              {
                LODWORD(v29) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v29) = 0;
        }
LABEL_76:
        uint64_t v71 = v8[354];
        goto LABEL_81;
      case 2u:
        [(id)a1 clearOneofValuesForMagnitude];
        *(unsigned char *)(a1 + v9[345]) |= 8u;
        *(_DWORD *)(a1 + v10[346]) = 1;
        *(unsigned char *)(a1 + v9[345]) |= 0x10u;
        uint64_t v34 = *v3;
        unint64_t v35 = *(void *)(a2 + v34);
        if (v35 <= 0xFFFFFFFFFFFFFFFBLL && v35 + 4 <= *(void *)(a2 + *v4))
        {
          int v36 = *(_DWORD *)(*(void *)(a2 + *v7) + v35);
          *(void *)(a2 + v34) = v35 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v36 = 0;
        }
        *(_DWORD *)(a1 + 44) = v36;
        goto LABEL_99;
      case 3u:
        [(id)a1 clearOneofValuesForMagnitude];
        *(unsigned char *)(a1 + v9[345]) |= 8u;
        *(_DWORD *)(a1 + v10[346]) = 2;
        *(unsigned char *)(a1 + v9[345]) |= 1u;
        uint64_t v37 = *v3;
        unint64_t v38 = *(void *)(a2 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v39 = *(void *)(*(void *)(a2 + *v7) + v38);
          *(void *)(a2 + v37) = v38 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v39 = 0;
        }
        *(void *)(a1 + _Block_object_dispose(&STACK[0x210], 8) = v39;
        goto LABEL_99;
      case 4u:
        [(id)a1 clearOneofValuesForMagnitude];
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v29 = 0;
        *(unsigned char *)(a1 + v9[345]) |= 8u;
        *(_DWORD *)(a1 + v10[346]) = 3;
        *(unsigned char *)(a1 + v9[345]) |= 0x20u;
        while (2)
        {
          uint64_t v42 = *v3;
          uint64_t v43 = *(void *)(a2 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v43);
            *(void *)(a2 + v42) = v44;
            v29 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v18 = v41++ >= 9;
              if (v18)
              {
                LODWORD(v29) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v29) = 0;
        }
LABEL_80:
        uint64_t v71 = 48;
LABEL_81:
        *(_DWORD *)(a1 + v71) = v29;
        goto LABEL_99;
      case 5u:
        [(id)a1 clearOneofValuesForMagnitude];
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + v9[345]) |= 8u;
        *(_DWORD *)(a1 + v10[346]) = 4;
        *(unsigned char *)(a1 + v9[345]) |= 0x40u;
        while (2)
        {
          uint64_t v49 = *v3;
          uint64_t v50 = *(void *)(a2 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v18 = v47++ >= 9;
              if (v18)
              {
                uint64_t v48 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v48 = 0;
        }
LABEL_85:
        *(unsigned char *)(a1 + 56) = v48 != 0;
        goto LABEL_99;
      case 6u:
        [(id)a1 clearOneofValuesForMagnitude];
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(unsigned char *)(a1 + v9[345]) |= 8u;
        *(_DWORD *)(a1 + v10[346]) = 5;
        *(unsigned char *)(a1 + v9[345]) |= 2u;
        while (2)
        {
          uint64_t v56 = *v3;
          uint64_t v57 = *(void *)(a2 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v18 = v54++ >= 9;
              if (v18)
              {
                uint64_t v55 = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v55 = 0;
        }
LABEL_89:
        uint64_t v72 = 16;
        goto LABEL_94;
      case 0xAu:
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v55 = 0;
        *(unsigned char *)(a1 + v9[345]) |= 4u;
        while (2)
        {
          uint64_t v63 = *v3;
          uint64_t v64 = *(void *)(a2 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
            *(void *)(a2 + v63) = v65;
            v55 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v18 = v62++ >= 9;
              if (v18)
              {
                uint64_t v55 = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v55 = 0;
        }
LABEL_93:
        uint64_t v72 = 24;
LABEL_94:
        *(void *)(a1 + v72) = v55;
        goto LABEL_99;
      case 0xBu:
        int v67 = v9;
        int v68 = v10;
        char v69 = v8;
        int v70 = objc_alloc_init(AppTelemetryInvestigation);
        objc_storeStrong((id *)(a1 + 32), v70);
        if PBReaderPlaceMark() && (AppTelemetryInvestigationReadFrom((uint64_t)v70, a2))
        {
          PBReaderRecallMark();

          char v8 = v69;
          unint64_t v10 = v68;
          unsigned int v9 = v67;
LABEL_99:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_99;
    }
  }
}

void sub_23FC5B208(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC5C2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
}

void sub_23FC5C9C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_23FC5CF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__45(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__45(uint64_t a1)
{
}

void sub_23FC5D87C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_23FC61FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__46(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__46(uint64_t a1)
{
}

void sub_23FC62554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC6274C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC62858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC62FCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC63F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
}

uint64_t __Block_byref_object_copy__47(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__47(uint64_t a1)
{
}

void sub_23FC640B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC6478C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC6491C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC64EE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC650B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC65748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC6591C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC65CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC662AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC66330(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC66450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _brc_ipc_spi(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  uint64_t v8 = a4;
  if (v7)
  {
    if (_brc_ipc_check_logged_status(v7, a2, v8))
    {
      id v12 = 0;
      uint64_t v9 = [v7 _hasPrivateIPCEntitlementForSelector:a3 error:&v12];
      id v10 = v12;
      if ((v9 & 1) == 0) {
        v8[2](v8, v10);
      }
    }
    else
    {
      uint64_t v9 = 0;
    }
  }
  else
  {
    uint64_t v9 = 1;
  }

  return v9;
}

uint64_t _brc_ipc_check_applibraries_access(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  if (!v5) {
    goto LABEL_11;
  }
  if (!_brc_ipc_check_logged_status(v5, a2, v6))
  {
LABEL_13:
    uint64_t v11 = 0;
    goto LABEL_14;
  }
  if (([v5 _isAppLibraryProxyEntitled] & 1) == 0)
  {
    id v7 = [v5 entitledAppLibraryIDs];
    uint64_t v8 = [v7 count];

    if (!v8 && ([v5 isSandboxed] & 1) == 0 && objc_msgSend(v5, "checkTCCAccess"))
    {
      uint64_t v9 = brc_bread_crumbs();
      id v10 = brc_default_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
        _brc_ipc_check_applibraries_access_cold_1();
      }

      goto LABEL_11;
    }
    if ([v5 cloudEnabledStatus] != 1)
    {
      id v12 = objc_msgSend(MEMORY[0x263F087E8], "brc_daemonAccessDisabledError");
      (*((void (**)(id, void *))v6 + 2))(v6, v12);

      goto LABEL_13;
    }
  }
LABEL_11:
  uint64_t v11 = 1;
LABEL_14:

  return v11;
}

uint64_t _brc_ipc_check_applibrary_proxy(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  if (v5)
  {
    if (_brc_ipc_check_logged_status(v5, a2, v6))
    {
      id v10 = 0;
      uint64_t v7 = [v5 _isAppLibraryProxyWithError:&v10];
      id v8 = v10;
      if ((v7 & 1) == 0) {
        v6[2](v6, v8);
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 1;
  }

  return v7;
}

uint64_t _brc_ipc_check_entitlement(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = a3;
  if (([v5 _entitlementBooleanValueForKey:*MEMORY[0x263F323E0]] & 1) != 0
    || ([v5 _entitlementBooleanValueForKey:v6] & 1) != 0)
  {
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t v9 = objc_msgSend(MEMORY[0x263F087E8], "br_errorWithDomain:code:description:", *MEMORY[0x263F32360], 1, @"%@ entitlement required", v6);
    v7[2](v7, v9);

    id v10 = brc_bread_crumbs();
    uint64_t v11 = brc_default_log();
    if (os_log_type_enabled(v11, (os_log_type_t)0x90u)) {
      _brc_ipc_check_entitlement_cold_1();
    }

    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t _brc_ipc_check_entitlement_and_logged_status(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  if (v7)
  {
    if (_brc_ipc_check_logged_status(v7, a2, v9)) {
      uint64_t v10 = _brc_ipc_check_entitlement(v7, v8, v9);
    }
    else {
      uint64_t v10 = 0;
    }
  }
  else
  {
    uint64_t v10 = 1;
  }

  return v10;
}

uint64_t _brc_ipc_check_client_privilege(void *a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  id v9 = a1;
  id v10 = a5;
  if (!v9)
  {
    uint64_t v11 = 1;
    goto LABEL_10;
  }
  if (!_brc_ipc_check_logged_status(v9, a2, v10)) {
    goto LABEL_8;
  }
  uint64_t v11 = 1;
  if (([v9 _entitlementBooleanValueForKey:*MEMORY[0x263F323E0]] & 1) == 0 && (a3 & 1) == 0)
  {
    id v12 = objc_msgSend(MEMORY[0x263F087E8], "br_errorWithDomain:code:description:", *MEMORY[0x263F32360], 26, @"%s privilege required", a4);
    (*((void (**)(id, void *))v10 + 2))(v10, v12);

    uint64_t v13 = brc_bread_crumbs();
    uint64_t v14 = brc_default_log();
    if (os_log_type_enabled(v14, (os_log_type_t)0x90u)) {
      _brc_ipc_check_client_privilege_cold_1();
    }

LABEL_8:
    uint64_t v11 = 0;
  }
LABEL_10:

  return v11;
}

uint64_t _brc_ipc_check_account_access(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  if (!v5) {
    goto LABEL_6;
  }
  if (!_brc_ipc_check_logged_status(v5, a2, v6))
  {
LABEL_10:
    uint64_t v8 = 0;
    goto LABEL_11;
  }
  uint64_t v7 = *MEMORY[0x263F323D0];
  if (([v5 _entitlementBooleanValueForKey:*MEMORY[0x263F323D0]] & 1) == 0
    && ([v5 _entitlementBooleanValueForKey:*MEMORY[0x263F323D8]] & 1) == 0
    && ([v5 _entitlementBooleanValueForKey:*MEMORY[0x263F323F8]] & 1) == 0)
  {
    id v9 = objc_msgSend(MEMORY[0x263F087E8], "br_errorWithDomain:code:description:", *MEMORY[0x263F32360], 1, @"%@ entitlement required", v7);
    (*((void (**)(id, void *))v6 + 2))(v6, v9);

    id v10 = brc_bread_crumbs();
    uint64_t v11 = brc_default_log();
    if (os_log_type_enabled(v11, (os_log_type_t)0x90u)) {
      _brc_ipc_check_entitlement_cold_1();
    }

    goto LABEL_10;
  }
LABEL_6:
  uint64_t v8 = 1;
LABEL_11:

  return v8;
}

uint64_t _brc_ipc_check_tcc_access(void *a1, uint64_t a2, void *a3)
{
  if (a1) {
    return _brc_ipc_check_logged_status(a1, 1, a3);
  }
  else {
    return 1;
  }
}

void sub_23FC67238(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC6793C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC679AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC67A04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC67A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC67AB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id _cocoaDomainPermissionError(uint64_t a1, void *a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)MEMORY[0x263F087E8];
  uint64_t v3 = *MEMORY[0x263F07F70];
  if (a1) {
    uint64_t v4 = 257;
  }
  else {
    uint64_t v4 = 513;
  }
  uint64_t v12 = *MEMORY[0x263F08320];
  id v5 = NSString;
  if (a1) {
    id v6 = "read";
  }
  else {
    id v6 = "write";
  }
  uint64_t v7 = [a2 path];
  uint64_t v8 = [v5 stringWithFormat:@"No permission to %s at \"%@\"", v6, v7];
  v13[0] = v8;
  id v9 = [NSDictionary dictionaryWithObjects:v13 forKeys:&v12 count:1];
  id v10 = [v2 errorWithDomain:v3 code:v4 userInfo:v9];

  return v10;
}

void sub_23FC6813C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__48(uint64_t a1)
{
}

void sub_23FC68444(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23FC69244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC69754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC69F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6A334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6A728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6AB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6AEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6B654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6C2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __brc_leave_section(&a63);
  __brc_leave_section(&a66);
  _Unwind_Resume(a1);
}

void sub_23FC6C8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6D164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
}

void sub_23FC6D924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6E30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
}

void sub_23FC6E8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6ECC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6F100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6F6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC6FB94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC70354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC70B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC70ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC712BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC71A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC71EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
}

void sub_23FC72584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7302C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FC736BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
}

void sub_23FC73EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC74320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FC751E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
}

void sub_23FC75C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FC76488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  __brc_leave_section((uint64_t *)va);
  __brc_leave_section((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_23FC76CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  objc_sync_exit(v33);
  __brc_leave_section(&a9);
  _Block_object_dispose((const void *)(v34 - 160), 8);
  _Block_object_dispose(&a33, 8);
  __brc_leave_section((uint64_t *)(v34 - 216));
  _Unwind_Resume(a1);
}

void sub_23FC76F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FC77168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_sync_exit(v9);
  __brc_leave_section(&a9);
  _Unwind_Resume(a1);
}

void sub_23FC77B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  objc_sync_exit(v64);
  __brc_leave_section(&a13);
  _Block_object_dispose((const void *)(v65 - 256), 8);
  _Block_object_dispose(&a52, 8);
  _Block_object_dispose((const void *)(v65 - 176), 8);
  __brc_leave_section(&a64);
  _Unwind_Resume(a1);
}

void sub_23FC77E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FC78030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FC7826C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_sync_exit(v9);
  __brc_leave_section(&a9);
  _Unwind_Resume(a1);
}

void sub_23FC78F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __brc_leave_section(&a58);
  __brc_leave_section(&a66);
  _Block_object_dispose(&a69, 8);
  _Unwind_Resume(a1);
}

void sub_23FC79710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  __brc_leave_section((uint64_t *)va);
  __brc_leave_section((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_23FC79BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7A060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7A5C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7A9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7AFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
}

void sub_23FC7B6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7BAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FC7C0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7C4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7C920(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7CDAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7D4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7D910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7DED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7E32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7E758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC7EB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FC7F3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FC7FB1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC80348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
}

void sub_23FC8105C(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 200));
  _Unwind_Resume(a1);
}

void sub_23FC81898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_23FC823F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC82810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC82C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC834C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC83A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC84034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC843F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC84A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
}

void sub_23FC857B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
}

void sub_23FC891A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC89774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC89D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC8A5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC8AC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
}

void sub_23FC8B420(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_23FC8C90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC8CFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
}

void sub_23FC8D5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC8DB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC8E25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC8EFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC8FE3C(_Unwind_Exception *a1)
{
  __brc_leave_section((uint64_t *)(v1 - 200));
  _Unwind_Resume(a1);
}

void sub_23FC90BDC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  __brc_leave_section((uint64_t *)(v1 - 200));
  _Unwind_Resume(a1);
}

void sub_23FC9132C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC91F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC9293C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC932E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC93844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC94214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FC949C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC94FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC9572C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
}

void sub_23FC962BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC96854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
}

void sub_23FC96F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC97434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC97C30(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  __brc_leave_section((uint64_t *)(v1 - 232));
  _Unwind_Resume(a1);
}

void sub_23FC9847C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC98D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  _Block_object_dispose((const void *)(v42 - 176), 8);
  __brc_leave_section(&a42);
  _Unwind_Resume(a1);
}

void sub_23FC99338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC9972C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC99B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC99F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC9A37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC9AE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose((const void *)(v70 - 176), 8);
  __brc_leave_section(&a61);
  __brc_leave_section(&a70);
  _Unwind_Resume(a1);
}

void sub_23FC9B2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void __dispatch_async_with_logs_block_invoke_19(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    uint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FC9B3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FC9BD30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC9C538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FC9C854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FC9CC74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC9CFD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC9E5C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC9E81C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC9EA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FC9EFB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC9F0CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC9F13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FC9F1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FC9F2C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FC9FDC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_23FC9FFBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCA01AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCA0598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA0998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
}

void sub_23FCA1474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA1774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
}

void sub_23FCA1ABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA1D68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA1F1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA1FA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA200C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA2094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FCA2194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void dispatch_async_with_logs_12(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v3 = a1;
  id v4 = a2;
  long long v5 = (void *)MEMORY[0x2455D97F0]();
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  __brc_create_section(0, (uint64_t)"dispatch_async_with_logs", 262, &v17);
  uint64_t v6 = brc_bread_crumbs();
  uint64_t v7 = brc_default_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v17;
    label = dispatch_queue_get_label(v3);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = label;
    *(_WORD *)&buf[22] = 2112;
    long long v20 = v6;
    _os_log_debug_impl(&dword_23FA42000, v7, OS_LOG_TYPE_DEBUG, "[DEBUG] ┣%llx dispatching to %s%@", buf, 0x20u);
  }

  *(void *)&buf[16] = v18;
  *(_OWORD *)buf = v17;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  _DWORD v12[2] = __dispatch_async_with_logs_block_invoke_20;
  v12[3] = &unk_26507EE60;
  long long v15 = v17;
  uint64_t v16 = v18;
  uint64_t v8 = v3;
  uint64_t v13 = v8;
  id v9 = v4;
  id v14 = v9;
  dispatch_async(v8, v12);
}

void sub_23FCA267C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FCA28B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_20(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  uint64_t v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    uint64_t v10 = label;
    __int16 v11 = 2112;
    uint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FCA2D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void OUTLINED_FUNCTION_4_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x12u);
}

void sub_23FCA6B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__49(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__49(uint64_t a1)
{
}

void sub_23FCA7398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA7704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA7A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA7CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA7DA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA7EE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA8050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCA8BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FCA8FE4(_Unwind_Exception *a1)
{
}

void sub_23FCA9344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_23FCA95F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCA9A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCA9EF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCAA230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCAA4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCAA6E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FCAB428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t validateUserDouble(void *a1, double *a2, double *a3, double *a4)
{
  id v7 = a1;
  if (v7)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
      || ([v7 doubleValue], a2) && v10 < *a2
      || a3 && v10 > *a3)
    {
      uint64_t v8 = 2;
    }
    else
    {
      *a4 = v10;
      uint64_t v8 = 1;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t validateUserBool(void *a1, unsigned char *a2)
{
  id v3 = a1;
  if (v3)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      *a2 = [v3 BOOLValue];
      uint64_t v4 = 1;
    }
    else
    {
      uint64_t v4 = 2;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id _stringSetFromDefaultValue(void *a1, int a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = objc_opt_new();
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v15;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v15 != v8) {
            objc_enumerationMutation(v5);
          }
          double v10 = *(void **)(*((void *)&v14 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v11 = v10;
            if (objc_msgSend(v11, "length", (void)v14))
            {
              if (a2
                && [v11 characterAtIndex:0] == 46
                && (unint64_t)[v11 length] >= 2)
              {
                uint64_t v12 = [v11 substringFromIndex:1];
                [v4 addObject:v12];
              }
              else
              {
                [v4 addObject:v11];
              }
            }
          }
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v7);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id _validateThrottleDefaults(void *a1, void *a2)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (!v3)
  {
    id v30 = v4;
    goto LABEL_32;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v6 = 0;
    goto LABEL_28;
  }
  id v43 = v3;
  uint64_t v6 = (void *)[objc_alloc(MEMORY[0x263EFF9A0]) initWithDictionary:v3];
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  v54[0] = @"start-after";
  v54[1] = @"give-up-after";
  v54[2] = @"wait-at-least";
  v54[3] = @"wait-at-most";
  v54[4] = @"forget-after";
  v54[5] = @"max-elemnt-count";
  uint64_t v7 = [MEMORY[0x263EFF8C0] arrayWithObjects:v54 count:6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v44 objects:v55 count:16];
  if (!v8) {
    goto LABEL_21;
  }
  uint64_t v10 = v8;
  uint64_t v11 = *(void *)v45;
  *(void *)&long long v9 = 138412290;
  long long v42 = v9;
  do
  {
    uint64_t v12 = 0;
    do
    {
      if (*(void *)v45 != v11) {
        objc_enumerationMutation(v7);
      }
      uint64_t v13 = *(void *)(*((void *)&v44 + 1) + 8 * v12);
      long long v14 = objc_msgSend(v5, "objectForKeyedSubscript:", v13, v42);

      if (!v14)
      {
        uint64_t v19 = brc_bread_crumbs();
        long long v20 = brc_default_log();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)buf = v42;
          id v49 = v19;
          _os_log_fault_impl(&dword_23FA42000, v20, OS_LOG_TYPE_FAULT, "[CRIT] Assertion failed: defaultValues[key] != nil%@", buf, 0xCu);
        }
      }
      long long v15 = [v6 objectForKeyedSubscript:v13];

      if (!v15)
      {
        long long v16 = [v5 objectForKeyedSubscript:v13];
        [v6 setObject:v16 forKeyedSubscript:v13];
LABEL_14:

        goto LABEL_15;
      }
      long long v16 = [v6 objectForKeyedSubscript:v13];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        goto LABEL_14;
      }
      long long v17 = [v6 objectForKeyedSubscript:v13];
      objc_opt_class();
      isKindOfClass Class = objc_opt_isKindOfClass();

      if ((isKindOfClass & 1) == 0) {
        goto LABEL_27;
      }
LABEL_15:
      ++v12;
    }
    while (v10 != v12);
    uint64_t v21 = [v7 countByEnumeratingWithState:&v44 objects:v55 count:16];
    uint64_t v10 = v21;
  }
  while (v21);
LABEL_21:

  uint64_t v7 = [v6 objectForKeyedSubscript:@"start-after"];
  int v22 = [v7 intValue];
  uint64_t v23 = [v6 objectForKeyedSubscript:@"give-up-after"];
  if (v22 >= (int)[v23 intValue])
  {

LABEL_27:
    id v3 = v43;
  }
  else
  {
    unint64_t v24 = [v6 objectForKeyedSubscript:@"wait-at-least"];
    [v24 doubleValue];
    double v26 = v25;
    char v27 = [v6 objectForKeyedSubscript:@"wait-at-most"];
    [v27 doubleValue];
    if (v26 <= v28)
    {
      unint64_t v35 = [v6 objectForKeyedSubscript:@"wait-at-most"];
      [v35 doubleValue];
      if (v36 <= 0.0)
      {
        BOOL v29 = 1;
      }
      else
      {
        uint64_t v37 = [v6 objectForKeyedSubscript:@"wait-at-most"];
        [v37 doubleValue];
        double v39 = v38;
        char v40 = [v6 objectForKeyedSubscript:@"forget-after"];
        [v40 doubleValue];
        BOOL v29 = v39 > v41;
      }
    }
    else
    {
      BOOL v29 = 1;
    }

    char v33 = v6;
    id v3 = v43;
    if (!v29) {
      goto LABEL_31;
    }
  }
LABEL_28:
  uint64_t v31 = brc_bread_crumbs();
  unint64_t v32 = brc_default_log();
  if (os_log_type_enabled(v32, (os_log_type_t)0x90u))
  {
    *(_DWORD *)buf = 138412802;
    id v49 = v3;
    __int16 v50 = 2112;
    unint64_t v51 = v5;
    __int16 v52 = 2112;
    char v53 = v31;
    _os_log_error_impl(&dword_23FA42000, v32, (os_log_type_t)0x90u, "[ERROR] invalid user default %@; using:%@%@",
      buf,
      0x20u);
  }

  char v33 = v5;
LABEL_31:
  id v30 = v33;

LABEL_32:
  return v30;
}

id _numberSetFromDefaultValue(void *a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v2 = objc_opt_new();
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v11;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v11 != v6) {
            objc_enumerationMutation(v3);
          }
          uint64_t v8 = *(void *)(*((void *)&v10 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            objc_msgSend(v2, "addObject:", v8, (void)v10);
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v5);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id _validateNamedThrottleDefaults(void *a1, void *a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v3)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v6 = (void *)[objc_alloc(MEMORY[0x263EFF9A0]) initWithDictionary:v3];
      long long v22 = 0u;
      long long v23 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      uint64_t v7 = [&unk_26F3DDC88 countByEnumeratingWithState:&v22 objects:v32 count:16];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v21 = v5;
        uint64_t v9 = *(void *)v23;
        while (2)
        {
          for (uint64_t i = 0; i != v8; ++i)
          {
            if (*(void *)v23 != v9) {
              objc_enumerationMutation(&unk_26F3DDC88);
            }
            uint64_t v11 = *(void *)(*((void *)&v22 + 1) + 8 * i);
            uint64_t v12 = [v6 objectForKeyedSubscript:v11];
            if (v12)
            {
              long long v13 = (void *)v12;
              long long v14 = [v6 objectForKeyedSubscript:v11];
              objc_opt_class();
              isKindOfClass Class = objc_opt_isKindOfClass();

              if ((isKindOfClass & 1) == 0)
              {
                uint64_t v5 = v21;
                goto LABEL_16;
              }
            }
          }
          uint64_t v8 = [&unk_26F3DDC88 countByEnumeratingWithState:&v22 objects:v32 count:16];
          if (v8) {
            continue;
          }
          break;
        }
        long long v16 = v6;
        uint64_t v5 = v21;
      }
      else
      {
        long long v16 = v6;
      }
    }
    else
    {
      uint64_t v6 = 0;
LABEL_16:
      uint64_t v18 = brc_bread_crumbs();
      uint64_t v19 = brc_default_log();
      if (os_log_type_enabled(v19, (os_log_type_t)0x90u))
      {
        *(_DWORD *)buf = 138412802;
        id v27 = v3;
        __int16 v28 = 2112;
        BOOL v29 = v5;
        __int16 v30 = 2112;
        uint64_t v31 = v18;
        _os_log_error_impl(&dword_23FA42000, v19, (os_log_type_t)0x90u, "[ERROR] invalid user default %@; using:%@%@",
          buf,
          0x20u);
      }

      long long v16 = v5;
    }
    id v17 = v16;
  }
  else
  {
    id v17 = v4;
  }

  return v17;
}

void ____brc_create_section_block_invoke()
{
  id v3 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UNSPECIFIED, 0);
  int v0 = dispatch_queue_attr_make_with_autorelease_frequency(v3, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("create-log-section", v0);

  uint64_t v2 = (void *)__brc_create_section_queue;
  __brc_create_section_queue = (uint64_t)v1;
}

void sub_23FCB5CD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCB5EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FCB6060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCB62A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCB6FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id *a9, id *a10, id *location)
{
  objc_destroyWeak(v11);
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  _Block_object_dispose((const void *)(v13 - 176), 8);
  objc_destroyWeak(a10);
  objc_destroyWeak(a9);
  objc_destroyWeak((id *)&STACK[0x238]);
  _Block_object_dispose(&STACK[0x298], 8);
  _Block_object_dispose((const void *)(v13 - 248), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__50(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__50(uint64_t a1)
{
}

void sub_23FCB76AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FCB7900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23FCB7CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCB7F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCB8500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCB9148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Block_object_dispose((const void *)(v20 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23FCB95CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t BRFieldPkgHeaderReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    uint64_t v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_29;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_31;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_29:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_31:
        *(_DWORD *)(a1 + _Block_object_dispose(&STACK[0x210], 8) = v19;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23FCBDFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
}

void sub_23FCBE47C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCBE624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__51(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__51(uint64_t a1)
{
}

void sub_23FCBE990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va1, 8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCBEC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va1, 8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCBEEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  __brc_leave_section((uint64_t *)(v8 - 56));
  _Unwind_Resume(a1);
}

void sub_23FCBF264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __dispatch_async_with_logs_block_invoke_21(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v2 = brc_bread_crumbs();
  id v3 = brc_default_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32));
    *(_DWORD *)buf = 134218498;
    uint64_t v8 = v5;
    __int16 v9 = 2080;
    unint64_t v10 = label;
    __int16 v11 = 2112;
    uint64_t v12 = v2;
    _os_log_debug_impl(&dword_23FA42000, v3, OS_LOG_TYPE_DEBUG, "[DEBUG] ┳%llx continuing on %s%@", buf, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  __brc_leave_section((uint64_t *)&v5);
}

void sub_23FCBF668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void OUTLINED_FUNCTION_2_2(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x210], 8) = a1;
}

void sub_23FCC12E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void register_error_in_dictionary(void *a1, void *a2)
{
  id v14 = a1;
  id v3 = a2;
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = objc_msgSend(v3, "brc_telemetryReportableErrorWithRecordName:", 0);
    uint64_t v6 = (void *)v5;
    if (v5) {
      uint64_t v7 = (void *)v5;
    }
    else {
      uint64_t v7 = v4;
    }
    id v8 = v7;

    __int16 v9 = NSString;
    unint64_t v10 = [v8 domain];
    __int16 v11 = [v9 stringWithFormat:@"%@.%ld", v10, objc_msgSend(v8, "code")];
    [v14 setObject:v11 forKey:@"error"];

    uint64_t v12 = objc_msgSend(v8, "brc_cloudKitErrorMessage");

    if (v12)
    {
      uint64_t v13 = objc_msgSend(v8, "brc_cloudKitErrorMessage");
      [v14 setObject:v13 forKey:@"errorMessage"];
    }
  }
  else
  {
    id v8 = 0;
  }
}

void sub_23FCC25F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_23FCC2764(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCC28D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23FCC6394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_23FCC788C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
}

void sub_23FCC8278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
}

void sub_23FCC8E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a69, 8);
  _Unwind_Resume(a1);
}

void sub_23FCCA93C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_23FCCAF80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCCB098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCCB164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FCCB878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__52(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__52(uint64_t a1)
{
}

void sub_23FCCBC00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23FCCC6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _Block_object_dispose((const void *)(v28 - 144), 8);
  __brc_leave_section(&a28);
  _Unwind_Resume(a1);
}

void sub_23FCCCDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FCCCF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FCCD5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_23FCCEDD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_sync_exit(v18);
  _Unwind_Resume(a1);
}

void sub_23FCCEEF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCCEF80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__53(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__53(uint64_t a1)
{
}

void sub_23FCD0000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCD0094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCD0114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t brc_power_is_ok()
{
  brc_notify_get_state();
  int v0 = brc_bread_crumbs();
  uint64_t v1 = brc_default_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    brc_power_is_ok_cold_1();
  }

  return 0;
}

BOOL brc_device_has_enough_space(uint64_t a1)
{
  int v1 = a1;
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v8 = 0;
  objc_msgSend(NSString, "br_pathWithDeviceID:fileID:", a1, 2);
  id v2 = objc_claimAutoreleasedReturnValue();
  id v3 = (const char *)[v2 fileSystemRepresentation];

  if ((fsctl(v3, 0x40046818uLL, &v8, 0) & 0x80000000) == 0) {
    return (v8 & 0x1204) == 0;
  }
  int v5 = *__error();
  uint64_t v6 = brc_bread_crumbs();
  uint64_t v7 = brc_default_log();
  if (os_log_type_enabled(v7, (os_log_type_t)0x90u))
  {
    *(_DWORD *)buf = 67109634;
    int v10 = v1;
    __int16 v11 = 1024;
    int v12 = v5;
    __int16 v13 = 2112;
    id v14 = v6;
    _os_log_error_impl(&dword_23FA42000, v7, (os_log_type_t)0x90u, "[ERROR] fsctl(dev=%d) failed %{errno}d%@", buf, 0x18u);
  }

  *__error() = v5;
  return 1;
}

void __br_notify_register_dispatch_block_invoke_1(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  if (([*(id *)(a1 + 32) isEqualToString:@"__defaultPersonaID__"] & 1) != 0
    || (id v2 = *(id *)(a1 + 32)) == 0)
  {
    if (_block_invoke___personaOnceToken_4 != -1) {
      dispatch_once(&_block_invoke___personaOnceToken_4, &__block_literal_global_168);
    }
    id v3 = (id)_block_invoke___personalPersona_4;
    int v4 = 1;
  }
  else
  {
    id v3 = v2;
    int v4 = 0;
  }
  int v5 = [MEMORY[0x263F841B0] sharedManager];
  uint64_t v6 = [v5 currentPersona];

  id v25 = 0;
  id v7 = [v6 userPersonaUniqueString];
  int v8 = v7;
  if (v7 == v3 || ([v7 isEqualToString:v3] & 1) != 0) {
    goto LABEL_9;
  }
  if (!voucher_process_can_use_arbitrary_personas())
  {
    if (v4 && ([v6 isDataSeparatedPersona] & 1) == 0)
    {
      unint64_t v21 = brc_bread_crumbs();
      char v22 = brc_default_log();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
        __br_notify_register_dispatch_block_invoke_cold_4();
      }
    }
    else
    {
      char v17 = brc_bread_crumbs();
      unsigned int v18 = brc_default_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
        __br_notify_register_dispatch_block_invoke_cold_3();
      }

      id v14 = [MEMORY[0x263F087E8] errorWithDomain:*MEMORY[0x263F08438] code:22 userInfo:0];
      if (v14) {
        goto LABEL_25;
      }
    }
LABEL_9:
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    goto LABEL_10;
  }
  id v24 = 0;
  __int16 v9 = (void *)[v6 copyCurrentPersonaContextWithError:&v24];
  id v10 = v24;
  id v11 = v25;
  id v25 = v9;

  if (v10)
  {
    int v12 = brc_bread_crumbs();
    __int16 v13 = brc_default_log();
    if (os_log_type_enabled(v13, (os_log_type_t)0x90u)) {
      __br_notify_register_dispatch_block_invoke_cold_2((uint64_t)v10, (uint64_t)v12, v13);
    }
  }
  id v14 = [v6 generateAndRestorePersonaContextWithPersonaUniqueString:v3];

  if (!v14) {
    goto LABEL_9;
  }
  uint64_t v15 = brc_bread_crumbs();
  long long v16 = brc_default_log();
  if (os_log_type_enabled(v16, (os_log_type_t)0x90u))
  {
    uint64_t v23 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    uint64_t v27 = v23;
    __int16 v28 = 2112;
    BOOL v29 = v14;
    __int16 v30 = 2112;
    uint64_t v31 = v15;
    _os_log_error_impl(&dword_23FA42000, v16, (os_log_type_t)0x90u, "[ERROR] Can't adopt persona %@: %@%@", buf, 0x20u);
  }

LABEL_25:
  uint64_t v19 = brc_bread_crumbs();
  uint64_t v20 = brc_default_log();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_FAULT)) {
    __br_notify_register_dispatch_block_invoke_cold_1_1();
  }

LABEL_10:
  _BRRestorePersona();
}

void sub_23FCD2E78(_Unwind_Exception *a1)
{
}

void __br_notify_register_dispatch_block_invoke_2_1()
{
  id v2 = [MEMORY[0x263F841C0] personaAttributesForPersonaType:0];
  uint64_t v0 = [v2 userPersonaUniqueString];
  int v1 = (void *)_block_invoke___personalPersona_4;
  _block_invoke___personalPersona_4 = v0;
}

id OUTLINED_FUNCTION_1_4(id a1)
{
  return a1;
}

void sub_23FCD3AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FCD4778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCD489C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCD4AB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23FCD5E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FCD6168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_23FCD7938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23FCDBC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  __brc_leave_section((uint64_t *)va);
  _Unwind_Resume(a1);
}

void _issueReadWriteSandboxExtensionForURL_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0();
  _os_log_debug_impl(&dword_23FA42000, v0, OS_LOG_TYPE_DEBUG, "[NOTIF] issued sandbox extension for %@%@", v1, 0x16u);
}

void __br_notify_register_dispatch_block_invoke_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 48);
  int v4 = 136315394;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_fault_impl(&dword_23FA42000, log, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: Failed to adopt persona for notification %s%@", (uint8_t *)&v4, 0x16u);
}

void __br_notify_register_dispatch_block_invoke_cold_3()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] Not allowed to adopt persona - should fallback persona%@", v2, v3, v4, v5, v6);
}

void __br_notify_register_dispatch_block_invoke_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] Not allowed to adopt persona but data-separatedness matches%@", v2, v3, v4, v5, v6);
}

void file_id_from_control_file_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_4(&dword_23FA42000, v0, v1, "[ERROR] failed closing '%s'%@");
}

void _notificationCallback_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0();
  _os_log_error_impl(&dword_23FA42000, v0, (os_log_type_t)0x90u, "[ERROR] No completion block for notification %@%@", v1, 0x16u);
}

void _notificationCallback_cold_2()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] User picked %s response%@");
}

void BRCPrettyPrintEnumWithContext_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_23FA42000, a2, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: unknown color%@", (uint8_t *)&v2, 0xCu);
}

void BRCMigrateLegacyUbiquityRoot_cold_1()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] ┏%llx deleting ubd's support files%@");
}

void BRCMigrateLegacyUbiquityRoot_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] UNREACHABLE: Failed removing root folder from the wrong account%@", v2, v3, v4, v5, v6);
}

void BRCMigrateLegacyUbiquityRoot_cold_3()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] ┏%llx deleting root folder%@");
}

void BRCMigrateLegacyUbiquityRoot_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] We own both the root and had an old one renamed away\nWe have purged the old one, and will now reset%@", v2, v3, v4, v5, v6);
}

void BRCMigrateLegacyUbiquityRoot_cold_5()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] UNREACHABLE: Failed to remove mobile documents directory not belonging to us%@", v2, v3, v4, v5, v6);
}

void BRCMigrateLegacyUbiquityRoot_cold_6()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] ┏%llx migrating legacy ubiquity root%@");
}

void BRCRootIsOwnedByUbd_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] root has accountString %@%@");
}

void BRCRootIsOwnedByUbd_cold_2(int *a1, uint64_t a2, os_log_t log)
{
  uint64_t v66 = *MEMORY[0x263EF8340];
  int v3 = *a1;
  unint64_t v4 = *((unsigned __int16 *)a1 + 2);
  int v5 = aPcDBLSW[v4 >> 12];
  uint64_t v6 = *((void *)a1 + 1);
  int v7 = *((unsigned __int16 *)a1 + 3);
  if ((v4 & 0x100) != 0) {
    int v8 = 114;
  }
  else {
    int v8 = 45;
  }
  if ((v4 & 0x80) != 0) {
    int v9 = 119;
  }
  else {
    int v9 = 45;
  }
  int v10 = a1[4];
  int v11 = a1[5];
  uint64_t v12 = *((void *)a1 + 4);
  if ((v4 & 0x40) != 0) {
    int v13 = 120;
  }
  else {
    int v13 = 45;
  }
  uint64_t v14 = *((void *)a1 + 6);
  if ((v4 & 0x20) != 0) {
    int v15 = 114;
  }
  else {
    int v15 = 45;
  }
  uint64_t v16 = *((void *)a1 + 8);
  if ((v4 & 0x10) != 0) {
    int v17 = 119;
  }
  else {
    int v17 = 45;
  }
  if ((v4 & 8) != 0) {
    int v18 = 120;
  }
  else {
    int v18 = 45;
  }
  if ((v4 & 4) != 0) {
    int v19 = 114;
  }
  else {
    int v19 = 45;
  }
  if ((v4 & 2) != 0) {
    int v20 = 119;
  }
  else {
    int v20 = 45;
  }
  BOOL v21 = (v4 & 1) == 0;
  uint64_t v22 = *((void *)a1 + 12);
  int v23 = a1[29];
  v25[0] = 67114242;
  if (v21) {
    int v24 = 45;
  }
  else {
    int v24 = 120;
  }
  v25[1] = v3;
  __int16 v26 = 2048;
  uint64_t v27 = v6;
  __int16 v28 = 1024;
  int v29 = v5;
  __int16 v30 = 1024;
  int v31 = v8;
  __int16 v32 = 1024;
  int v33 = v9;
  __int16 v34 = 1024;
  int v35 = v13;
  __int16 v36 = 1024;
  int v37 = v15;
  __int16 v38 = 1024;
  int v39 = v17;
  __int16 v40 = 1024;
  int v41 = v18;
  __int16 v42 = 1024;
  int v43 = v19;
  __int16 v44 = 1024;
  int v45 = v20;
  __int16 v46 = 1024;
  int v47 = v24;
  __int16 v48 = 1024;
  int v49 = v7;
  __int16 v50 = 1024;
  int v51 = v10;
  __int16 v52 = 1024;
  int v53 = v11;
  __int16 v54 = 2048;
  uint64_t v55 = v12;
  __int16 v56 = 2048;
  uint64_t v57 = v14;
  __int16 v58 = 2048;
  uint64_t v59 = v16;
  __int16 v60 = 2048;
  uint64_t v61 = v22;
  __int16 v62 = 1024;
  int v63 = v23;
  __int16 v64 = 2112;
  uint64_t v65 = a2;
  _os_log_debug_impl(&dword_23FA42000, log, OS_LOG_TYPE_DEBUG, "[DEBUG] root has a .ubd folder: deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x%@", (uint8_t *)v25, 0x98u);
}

void ubiquitousSharedItemOwnerNameComponents_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_23FA42000, a2, OS_LOG_TYPE_FAULT, "[CRIT] Assertion failed: ownerIdentity%@", (uint8_t *)&v2, 0xCu);
}

void initUIDevice_cold_1()
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v0 = brc_bread_crumbs();
  os_log_t v1 = brc_default_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    int v2 = 136315394;
    uint64_t v3 = dlerror();
    __int16 v4 = 2112;
    int v5 = v0;
    _os_log_impl(&dword_23FA42000, v1, OS_LOG_TYPE_DEFAULT, "[WARNING] Can't open UIKit : %s%@", (uint8_t *)&v2, 0x16u);
  }

  __assert_rtn("UIKitLibrary", "/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins/core/shared/containers/BRCContainerScheduler.m", 72, "Can't open UIKit");
}

void initUIDevice_cold_2()
{
}

void reuploadItemInContainer_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] We shouldn't re-upload in case of structure records failures%@", v2, v3, v4, v5, v6);
}

void reuploadItemInContainer_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] item %@ doesn't need to be reuploaded%@");
}

void reuploadItemInContainer_cold_3()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] item %@ needs to be re-uploaded%@");
}

void markRecordNeedingRemapToNewParent_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2_0(&dword_23FA42000, v0, v1, "[CRIT] UNREACHABLE: Couldn't find parentID for record %@%@");
}

void handleErrorForRecord_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] handling error for %@%@");
}

void handleErrorForRecord_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2_0(&dword_23FA42000, v0, v1, "[CRIT] UNREACHABLE: target item %@ is idle, should not throtlle it%@");
}

void remapItemIDToNewItemID_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] We already remapped %@%@");
}

void __remapItemIDToNewItemID_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: !item.isKnownByServer%@", v2, v3, v4, v5, v6);
}

void br_create_tables_initial_cold_1()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = [v0 lastError];
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5(&dword_23FA42000, v2, v3, "[CRIT] UNREACHABLE: migration should work: %@%@", v4, v5, v6, v7, v8);
}

void br_update_tables_2_000_cold_1()
{
  OUTLINED_FUNCTION_13_2();
  uint64_t v1 = [v0 lastError];
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_5(&dword_23FA42000, v2, v3, "[CRIT] UNREACHABLE: migration should work: %@%@", v4, v5, v6, v7, v8);
}

void br_update_tables_2_000_cold_2()
{
  OUTLINED_FUNCTION_13_2();
  uint64_t v1 = [v0 lastError];
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_5(&dword_23FA42000, v2, v3, "[CRIT] UNREACHABLE: migration should work: %@%@", v4, v5, v6, v7, v8);
}

void br_update_tables_2_000_cold_3()
{
  OUTLINED_FUNCTION_13_2();
  uint64_t v1 = [v0 lastError];
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_5(&dword_23FA42000, v2, v3, "[CRIT] UNREACHABLE: migration should work: %@%@", v4, v5, v6, v7, v8);
}

void br_update_tables_2_000_cold_4(void *a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_7((uint64_t)a1, a2, a3, 5.778e-34);
  OUTLINED_FUNCTION_8(&dword_23FA42000, v6, v4, "[CRIT] UNREACHABLE: migration should work: %@%@", v5);
}

void br_update_tables_2_000_cold_6()
{
  OUTLINED_FUNCTION_13_2();
  uint64_t v1 = [v0 lastError];
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_5(&dword_23FA42000, v2, v3, "[CRIT] UNREACHABLE: migration should work: %@%@", v4, v5, v6, v7, v8);
}

void br_update_tables_4_004_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Not need to remove %@ as it was not created yet%@");
}

void br_update_tables_5_011_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_3();
  _os_log_error_impl(&dword_23FA42000, v0, (os_log_type_t)0x90u, "[ERROR] invalid owner in rowid_reservations, resetting%@", v1, 0xCu);
}

void br_update_tables_5_011_cold_2()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_3();
  _os_log_error_impl(&dword_23FA42000, v0, (os_log_type_t)0x90u, "[ERROR] found duplicate app library, resetting%@", v1, 0xCu);
}

void br_update_tables_6_004_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] UNREACHABLE: incomplete migration for client_downloads%@", v2, v3, v4, v5, v6);
}

void br_update_tables_6_004_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] UNREACHABLE: incomplete migration for client_uploads%@", v2, v3, v4, v5, v6);
}

void br_update_tables_6_013_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Corrupt DB state: some items belong to non-existing zones!%@", v2, v3, v4, v5, v6);
}

void br_update_tables_30_000_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Updated client state to %@%@");
}

void br_update_tables_30_000_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] We have items to migrate to fpfs%@", v2, v3, v4, v5, v6);
}

void br_update_tables_30_000_cold_3()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] We don't have items to migrate to fpfs%@", v2, v3, v4, v5, v6);
}

void br_update_tables_30_000_cold_4()
{
  OUTLINED_FUNCTION_13_2();
  uint64_t v4 = *MEMORY[0x263EF8340];
  uint64_t v2 = [v1 lastError];
  OUTLINED_FUNCTION_8_2();
  _os_log_error_impl(&dword_23FA42000, v0, (os_log_type_t)0x90u, "[ERROR] Failed determining if we have items - %@%@", v3, 0x16u);
}

void br_update_tables_30_000_cold_5()
{
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Deleted %llu br aliases from client truth%@");
}

void br_update_tables_30_000_cold_6()
{
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Deleted %llu items from client truth which haven't been synced to the server%@");
}

void br_update_tables_30_000_cold_7()
{
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Updated %llu items from server truth%@");
}

void br_update_tables_30_005_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] We have started to migrate to fpfs, add missing migration index%@", v2, v3, v4, v5, v6);
}

void br_update_tables_30_005_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] We are not currently migrating to fpfs, not adding missing migration index%@", v2, v3, v4, v5, v6);
}

void br_update_tables_31_103_cold_1()
{
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Scheduling %lld upload jobs that where in request rejected state%@");
}

void br_unmigrated_items_fixup_cold_1()
{
  OUTLINED_FUNCTION_12();
  os_log_t v1 = [v0 lastError];
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5(&dword_23FA42000, v2, v3, "[CRIT] UNREACHABLE: there should always be one row in client_state {%@}%@", v4, v5, v6, v7, v8);
}

void __br_update_tables_7_000_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_13_0(&dword_23FA42000, v0, v1, "[ERROR] itemID of unexpected length %d%@");
}

void __br_update_tables_7_000_block_invoke_cold_2()
{
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_13_0(&dword_23FA42000, v0, v1, "[ERROR] parentID of unexpected length %d%@");
}

void __br_update_tables_14_000_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: physicalBounceNo && physicalBounceNo >= 2%@", v2, v3, v4, v5, v6);
}

void __recursive_table_recreate_schema_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: argc == 1%@", v2, v3, v4, v5, v6);
}

void __recursive_table_recreate_schema_block_invoke_1661_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: argc == 3%@", v2, v3, v4, v5, v6);
}

void __br_update_tables_30_000_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Handling unuploaded trash item: %llu%@");
}

void __br_update_tables_30_000_block_invoke_1806_cold_1()
{
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Item with rowid %llu doesn't have file id. Not marking as needs migrating%@");
}

void __br_update_tables_30_000_block_invoke_2_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_8(&dword_23FA42000, v0, (uint64_t)v0, "[CRIT] UNREACHABLE: Orphan detected %@%@", v1);
}

void __br_update_tables_30_000_block_invoke_2_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: argc == 2%@", v2, v3, v4, v5, v6);
}

void currentClientStateDictionary_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: clientStateDictionary Client state should not be nil%@", v2, v3, v4, v5, v6);
}

void __br_resolve_fp_cannot_synchronize_error_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Signaled FP to resolve NSFileProviderErrorCannotSynchronize errors - %@%@");
}

void __br_optimize_storage_settings_fixup_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] Done Force Ingestion root container to update the contentPolicy%@", v2, v3, v4, v5, v6);
}

void __br_optimize_storage_settings_fixup_block_invoke_cold_2()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0();
  _os_log_error_impl(&dword_23FA42000, v0, (os_log_type_t)0x90u, "[ERROR] Force Ingestion root container failed with error %@%@", v1, 0x16u);
}

void __br_fixup_contentPolicy_block_invoke_2_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_9_0();
  _os_log_debug_impl(&dword_23FA42000, v0, OS_LOG_TYPE_DEBUG, "[DEBUG] Finished fixing content policy after upgrade with %d problems%@", v1, 0x12u);
}

void BRCUnmountAPFSSnapshot_cold_1(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint8_t v6 = objc_msgSend(MEMORY[0x263F087E8], "br_errorFromErrno");
  int v7 = 138412802;
  uint64_t v8 = a1;
  __int16 v9 = 2112;
  int v10 = v6;
  __int16 v11 = 2112;
  uint64_t v12 = a2;
  _os_log_debug_impl(&dword_23FA42000, a3, OS_LOG_TYPE_DEBUG, "[DEBUG] Can't rmdir %@ - %@%@", (uint8_t *)&v7, 0x20u);
}

void _computeDelta_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: delta >= 0%@", v2, v3, v4, v5, v6);
}

void brc_index_for_folder_type_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_23FA42000, a2, OS_LOG_TYPE_FAULT, "[CRIT] Assertion failed: folderType >= BRCSyncedFolderTypeMin && folderType <= BRCSyncedFolderTypeMax%@", (uint8_t *)&v2, 0xCu);
}

void BRCGetAccountDSIDForMobileDocsRoot_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  int v3 = 136315650;
  uint64_t v4 = "com.apple.ubd.prsid";
  __int16 v5 = 2112;
  uint64_t v6 = a1;
  __int16 v7 = 2112;
  uint64_t v8 = a2;
  _os_log_fault_impl(&dword_23FA42000, log, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: %s xattr value '%@' has the wrong format%@", (uint8_t *)&v3, 0x20u);
}

void setTypeFieldFromDBType_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_23FA42000, a2, (os_log_type_t)0x90u, "[ERROR] Unexpected type!%@", (uint8_t *)&v2, 0xCu);
}

void __br_notify_register_dispatch_block_invoke_cold_1_0(uint64_t a1)
{
  LODWORD(v3) = 136315394;
  *(void *)((char *)&v3 + 4) = *(void *)(a1 + 48);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_2_0(&dword_23FA42000, v1, v2, "[CRIT] UNREACHABLE: Failed to adopt persona for notification %s%@", (void)v3, DWORD2(v3));
}

void BRCBundleServiceConnection_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: ![BRCAccountsManager sharedManager].isInSyncBubble%@", v2, v3, v4, v5, v6);
}

void BRCSymlinkAt_cold_1()
{
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_13_0(&dword_23FA42000, v0, v1, "[ERROR] refusing to create a symlink with an empty target %{errno}d%@");
}

void BRCSymlinkAt_cold_2()
{
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_13_0(&dword_23FA42000, v0, v1, "[ERROR] refusing to create a symlink with an empty name %{errno}d%@");
}

void BRCMkContainerComponent_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: errno != 0%@", v2, v3, v4, v5, v6);
}

void BRCMkContainerComponent_cold_2()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] unlinked unexpected file at '%@'%@");
}

void BRCMkContainerComponent_cold_4()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] created '%@'%@");
}

void BRCCloneAt_cold_1()
{
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_13_0(&dword_23FA42000, v0, v1, "[ERROR] Couldn't stat to set mtime %{errno}d%@");
}

void brc_copyfileat_status_cb_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_3();
  _os_log_debug_impl(&dword_23FA42000, v0, OS_LOG_TYPE_DEBUG, "[DEBUG] skipping unsupported object in package%@", v1, 0xCu);
}

void brc_copyfileat_status_cb_cold_2()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_3();
  _os_log_debug_impl(&dword_23FA42000, v0, OS_LOG_TYPE_DEBUG, "[DEBUG] skipping compressed / unreadable object in package%@", v1, 0xCu);
}

void brc_copyfileat_status_cb_cold_3()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_3();
  _os_log_error_impl(&dword_23FA42000, v0, (os_log_type_t)0x90u, "[ERROR] Couldn't clone package%@", v1, 0xCu);
}

void BRCFSetAttrList_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  uint64_t v3 = __error();
  strerror(*v3);
  OUTLINED_FUNCTION_3_0();
  _os_log_debug_impl(&dword_23FA42000, a2, OS_LOG_TYPE_DEBUG, "[DEBUG] fsetattrlist failed: %s%@", v4, 0x16u);
}

void BRCIsFileIDLocked_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: fileID%@", v2, v3, v4, v5, v6);
}

void BRCSetMtime_cold_2()
{
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_13_0(&dword_23FA42000, v0, v1, "[ERROR] Couldn't set mtime %{errno}d%@");
}

void BRCRemoveFolder_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  int v2 = 136315394;
  uint64_t v3 = "BRCRemoveFolder";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl(&dword_23FA42000, a2, (os_log_type_t)0x90u, "[ERROR] Invalid call to %s with empty path%@", (uint8_t *)&v2, 0x16u);
}

void brc_task_tracker_create_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] UNREACHABLE: task tracker created with nil label%@", v2, v3, v4, v5, v6);
}

void brc_task_tracker_async_with_logs_and_qos_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: task_tracker%@", v2, v3, v4, v5, v6);
}

void __brc_task_tracker_async_with_logs_and_qos_block_invoke_cold_1(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  uint8_t v6 = (void *)MEMORY[0x2455D9A50](*(void *)(a1 + 40));
  int v7 = 136315650;
  uint64_t v8 = v5;
  __int16 v9 = 2048;
  int v10 = v6;
  __int16 v11 = 2112;
  uint64_t v12 = a2;
  _os_log_debug_impl(&dword_23FA42000, a3, OS_LOG_TYPE_DEBUG, "[DEBUG] task tracker (%s) has been cancelled, calling cancellation block <%p>%@", (uint8_t *)&v7, 0x20u);
}

void _brc_ipc_check_logged_status_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] UNREACHABLE: there should be a client%@", v2, v3, v4, v5, v6);
}

void _brc_ipc_check_logged_status_cold_3()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_4(&dword_23FA42000, v0, v1, "[ERROR] Finishing Loading all accounts but %@ is still not loaded .. restarting bird%@");
}

void _brc_ipc_check_logged_status_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] Notifying clients of account change because we could have denied xpc during low disk space%@", v2, v3, v4, v5, v6);
}

void _brc_ipc_check_logged_status_cold_5()
{
  OUTLINED_FUNCTION_11_0(*MEMORY[0x263EF8340]);
  LODWORD(v3) = 134218242;
  *(void *)((char *)&v3 + 4) = v0;
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v1, v2, "[DEBUG] ┏%llx there is now enough disk space to work%@", (void)v3, DWORD2(v3));
}

void _brc_ipc_check_logged_status_cold_6()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2(&dword_23FA42000, v0, v1, "[CRIT] Assertion failed: session.accountHandler == handler%@", v2, v3, v4, v5, v6);
}

void _brc_ipc_check_logged_status_cold_7()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_4_0(&dword_23FA42000, v0, v1, "[DEBUG] Couldn't find the account for the current persona. We may be in the middle of a log out request%@", v2, v3, v4, v5, v6);
}

void _brc_ipc_check_applibraries_access_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] granting TCC access to non-sandboxed app %@%@");
}

void _brc_ipc_check_entitlement_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_4(&dword_23FA42000, v0, v1, "[ERROR] invalid entitlement for %@%@");
}

void _brc_ipc_check_client_privilege_cold_1()
{
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_4(&dword_23FA42000, v0, v1, "[ERROR] %@ is missing privilege%@");
}

void __brc_leave_section_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  int v3 = 134218242;
  uint64_t v4 = a2;
  __int16 v5 = 2112;
  uint64_t v6 = a1;
  _os_log_debug_impl(&dword_23FA42000, log, OS_LOG_TYPE_DEBUG, "[DEBUG] ┗%llx %@", (uint8_t *)&v3, 0x16u);
}

void brc_power_is_ok_cold_1()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1(&dword_23FA42000, v0, v1, "[DEBUG] Power level is now %s%@");
}

void __br_notify_register_dispatch_block_invoke_cold_1_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_1_1();
  _os_log_fault_impl(&dword_23FA42000, v0, OS_LOG_TYPE_FAULT, "[CRIT] UNREACHABLE: Failed to adopt persona for notification %s%@", v1, 0x16u);
}

void __br_notify_register_dispatch_block_invoke_cold_2(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl(&dword_23FA42000, log, (os_log_type_t)0x90u, "[ERROR] won't restore persona: %@%@", (uint8_t *)&v3, 0x16u);
}

uint64_t AnalyticsIsEventUsed()
{
  return MEMORY[0x270F18A30]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x270F18A38]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x270F18A48]();
}

uint64_t BKSTerminateApplicationForReasonAndReportWithDescription()
{
  return MEMORY[0x270F10578]();
}

uint64_t BRCPrettyPrintBitmap()
{
  return MEMORY[0x270F16AC8]();
}

uint64_t BRCPrettyPrintEnum()
{
  return MEMORY[0x270F16AD0]();
}

uint64_t BRCXPCInterface()
{
  return MEMORY[0x270F16AD8]();
}

uint64_t BRCXPCTokenInterface()
{
  return MEMORY[0x270F16AE0]();
}

uint64_t BRContainerIconCKAssetKeyForName()
{
  return MEMORY[0x270F16AE8]();
}

uint64_t BRContainerIconCKAssetKeys()
{
  return MEMORY[0x270F16AF0]();
}

uint64_t BRContainerIconNameForCKAssetKey()
{
  return MEMORY[0x270F16AF8]();
}

uint64_t BRCopyEntitlementsForAuditToken()
{
  return MEMORY[0x270F16B00]();
}

uint64_t BRCurrentPersonaIsDataSeparated()
{
  return MEMORY[0x270F16B08]();
}

uint64_t BRCurrentPersonaMatchesID()
{
  return MEMORY[0x270F16B10]();
}

uint64_t BREntitledApplicationIdentifier()
{
  return MEMORY[0x270F16B18]();
}

uint64_t BREntitledContainerIdentifiers()
{
  return MEMORY[0x270F16B20]();
}

uint64_t BREntitledContainerIdentifiersForProxy()
{
  return MEMORY[0x270F16B28]();
}

uint64_t BRGetMigrationStatusForDSID()
{
  return MEMORY[0x270F16B38]();
}

uint64_t BRIsDefaultDomain()
{
  return MEMORY[0x270F16B48]();
}

uint64_t BRIsEntitledForAnyiCloudService()
{
  return MEMORY[0x270F16B50]();
}

uint64_t BRIsFPFSEnabled()
{
  return MEMORY[0x270F16B58]();
}

uint64_t BRLocalizedFileSizeDescription()
{
  return MEMORY[0x270F16B60]();
}

uint64_t BRMakeiWorkSharingOptions()
{
  return MEMORY[0x270F16B68]();
}

uint64_t BRNotificationNameForServerAvailabilityChanges()
{
  return MEMORY[0x270F16B70]();
}

uint64_t BRNotifyNameForForegroundChangeWithContainerID()
{
  return MEMORY[0x270F16B78]();
}

uint64_t BRPerformWithPersonaAndError()
{
  return MEMORY[0x270F16B80]();
}

uint64_t BRPersonaSpecificName()
{
  return MEMORY[0x270F16B88]();
}

uint64_t BRPlatform()
{
  return MEMORY[0x270F16B90]();
}

uint64_t BRPostAccountTokenChangedNotification()
{
  return MEMORY[0x270F16B98]();
}

uint64_t BRSetMigrationStatusForDSIDInPref()
{
  return MEMORY[0x270F16BA8]();
}

uint64_t BRVersion()
{
  return MEMORY[0x270F16BB8]();
}

void CCHmac(CCHmacAlgorithm algorithm, const void *key, size_t keyLength, const void *data, size_t dataLength, void *macOut)
{
}

void CCHmacFinal(CCHmacContext *ctx, void *macOut)
{
}

void CCHmacInit(CCHmacContext *ctx, CCHmacAlgorithm algorithm, const void *key, size_t keyLength)
{
}

void CCHmacUpdate(CCHmacContext *ctx, const void *data, size_t dataLength)
{
}

int CC_MD5_Final(unsigned __int8 *md, CC_MD5_CTX *c)
{
  return MEMORY[0x270ED7AD8](md, c);
}

int CC_MD5_Init(CC_MD5_CTX *c)
{
  return MEMORY[0x270ED7AE0](c);
}

int CC_MD5_Update(CC_MD5_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x270ED7AE8](c, data, *(void *)&len);
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return MEMORY[0x270ED7AF8](md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return MEMORY[0x270ED7B00](c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x270ED7B08](c, data, *(void *)&len);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x270ED7B28](data, *(void *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x270EE4278]();
  return result;
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x270EE4B88]();
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x270EE4C90](applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x270EE4CD0](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x270EE4E10](cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopMode CFRunLoopCopyCurrentMode(CFRunLoopRef rl)
{
  return (CFRunLoopMode)MEMORY[0x270EE4E50](rl);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x270EE4E58]();
}

void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source)
{
}

void CFStringAppendCString(CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding)
{
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return MEMORY[0x270EE54B8](userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x270EE54C8](allocator, flags, error, dictionary, timeout);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return (CFRunLoopSourceRef)MEMORY[0x270EE54D0](allocator, userNotification, callout, order);
}

SInt32 CFUserNotificationUpdate(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags flags, CFDictionaryRef dictionary)
{
  return MEMORY[0x270EE5508](userNotification, flags, dictionary, timeout);
}

uint64_t CKRetryAfterSecondsForError()
{
  return MEMORY[0x270EE37A8]();
}

uint64_t CacheDeleteRegisterInfoCallbacks()
{
  return MEMORY[0x270F130B0]();
}

uint64_t FPExtendBookmarkForDocumentURL()
{
  return MEMORY[0x270EEBAA8]();
}

uint64_t FPGetTagsFromTagsData()
{
  return MEMORY[0x270EEBAF8]();
}

uint64_t GSLibraryGetOrAllocateDocumentId()
{
  return MEMORY[0x270F2E958]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x270F4AE20]();
}

NSArray *__cdecl NSAllMapTableKeys(NSMapTable *table)
{
  return (NSArray *)MEMORY[0x270EF2A20](table);
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x270EF2A50](aClassName);
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x270EF2AD0]();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x270EF2BD8](directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x270EF2BE8](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x270EF2C08](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x270EF2C38](aSelector);
}

NSString *NSUserName(void)
{
  return (NSString *)MEMORY[0x270EF2C70]();
}

uint64_t OSVersion()
{
  return MEMORY[0x270F16BC0]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x270F58538]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x270F58540]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x270F58548]();
}

uint64_t PBDataWriterWriteFloatField()
{
  return MEMORY[0x270F58558]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x270F58560]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x270F58568]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x270F58590]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x270F585A0]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x270F585B0]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x270F585B8]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x270F585D8]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x270F585E0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x270F585E8]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x270F585F8]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x270F58600]();
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x270EFDC20](rnd, count, bytes);
}

uint64_t TCCAccessCheckAuditToken()
{
  return MEMORY[0x270F795A8]();
}

uint64_t TCCAccessCopyBundleIdentifiersDisabledForService()
{
  return MEMORY[0x270F795B0]();
}

uint64_t TCCAccessCopyBundleIdentifiersForService()
{
  return MEMORY[0x270F795B8]();
}

uint64_t TCCAccessReset()
{
  return MEMORY[0x270F79628]();
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return MEMORY[0x270EE8548](inUTI, inConformsToUTI);
}

CFStringRef UTTypeCreatePreferredIdentifierForTag(CFStringRef inTagClass, CFStringRef inTag, CFStringRef inConformingToUTI)
{
  return (CFStringRef)MEMORY[0x270EE8580](inTagClass, inTag, inConformingToUTI);
}

uint64_t _BRLocalizedStringWithFormat()
{
  return MEMORY[0x270F16BC8]();
}

uint64_t _BRRestorePersona()
{
  return MEMORY[0x270F16BD0]();
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

uint64_t _CFHTTPCookieStorageCreateWithProperties()
{
  return MEMORY[0x270EE29B8]();
}

uint64_t _CFURLCStringIsPromiseName()
{
  return MEMORY[0x270EE5728]();
}

uint64_t _CFURLIsPromiseName()
{
  return MEMORY[0x270EE5770]();
}

void _Exit(int a1)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x270ED7DC0]();
}

uint64_t __pthread_fchdir()
{
  return MEMORY[0x270ED7E70]();
}

uint64_t _br_parseUUIDString()
{
  return MEMORY[0x270F16BD8]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x270ED8028](dso, description, activity, *(void *)&flags);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x270ED8070]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return MEMORY[0x270ED8150]();
}

uint64_t abc_report_assert_with_signature()
{
  return MEMORY[0x270F16BE0]();
}

uint64_t abc_report_panic_with_signature()
{
  return MEMORY[0x270F16BE8]();
}

int access(const char *a1, int a2)
{
  return MEMORY[0x270ED8480](a1, *(void *)&a2);
}

int acl_free(void *obj_p)
{
  return MEMORY[0x270ED84C8](obj_p);
}

acl_t acl_get_fd_np(int fd, acl_type_t type)
{
  return (acl_t)MEMORY[0x270ED84E8](*(void *)&fd, *(void *)&type);
}

acl_t acl_init(int count)
{
  return (acl_t)MEMORY[0x270ED8538](*(void *)&count);
}

int acl_set_fd_np(int fd, acl_t acl, acl_type_t acl_type)
{
  return MEMORY[0x270ED8548](*(void *)&fd, acl, *(void *)&acl_type);
}

uint64_t br_pacer_cancel()
{
  return MEMORY[0x270F16BF0]();
}

uint64_t br_pacer_create()
{
  return MEMORY[0x270F16BF8]();
}

uint64_t br_pacer_pretend_event_handler_fired()
{
  return MEMORY[0x270F16C00]();
}

uint64_t br_pacer_resume()
{
  return MEMORY[0x270F16C08]();
}

uint64_t br_pacer_set_event_handler()
{
  return MEMORY[0x270F16C10]();
}

uint64_t br_pacer_signal()
{
  return MEMORY[0x270F16C18]();
}

uint64_t br_pacer_signal_at_most_after_min_interval()
{
  return MEMORY[0x270F16C20]();
}

uint64_t br_pacer_suspend()
{
  return MEMORY[0x270F16C28]();
}

uint64_t br_pacer_test_cancel()
{
  return MEMORY[0x270F16C30]();
}

uint64_t brc_append_system_info_to_message()
{
  return MEMORY[0x270F16C38]();
}

uint64_t brc_bread_crumbs()
{
  return MEMORY[0x270F16C40]();
}

uint64_t brc_current_date_nsec()
{
  return MEMORY[0x270F16C48]();
}

uint64_t brc_default_log()
{
  return MEMORY[0x270F16C50]();
}

uint64_t brc_interval_from_nsec()
{
  return MEMORY[0x270F16C58]();
}

uint64_t brc_interval_to_nsec()
{
  return MEMORY[0x270F16C60]();
}

uint64_t brc_is_before_deadline()
{
  return MEMORY[0x270F16C68]();
}

uint64_t brc_monotonic_time_diff_to_interval()
{
  return MEMORY[0x270F16C70]();
}

uint64_t brc_monotonic_time_now()
{
  return MEMORY[0x270F16C78]();
}

uint64_t brc_notifications_log()
{
  return MEMORY[0x270F16C80]();
}

uint64_t brc_notify_get_state()
{
  return MEMORY[0x270F16C88]();
}

uint64_t brc_notify_register_check()
{
  return MEMORY[0x270F16C90]();
}

uint64_t brc_notify_set_state_and_post()
{
  return MEMORY[0x270F16C98]();
}

void bzero(void *a1, size_t a2)
{
}

int chflags(const char *a1, __uint32_t a2)
{
  return MEMORY[0x270ED8EC0](a1, *(void *)&a2);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x270F9A460](cls, name);
}

int clonefileat(int a1, const char *a2, int a3, const char *a4, uint32_t a5)
{
  return MEMORY[0x270ED8F10](*(void *)&a1, a2, *(void *)&a3, a4, *(void *)&a5);
}

int close(int a1)
{
  return MEMORY[0x270ED8F18](*(void *)&a1);
}

uint64_t container_create_or_lookup_path_for_current_user()
{
  return MEMORY[0x270ED8F98]();
}

int copyfile(const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags)
{
  return MEMORY[0x270ED9100](from, to, state, *(void *)&flags);
}

copyfile_state_t copyfile_state_alloc(void)
{
  return (copyfile_state_t)MEMORY[0x270ED9108]();
}

int copyfile_state_free(copyfile_state_t a1)
{
  return MEMORY[0x270ED9110](a1);
}

int copyfile_state_set(copyfile_state_t s, uint32_t flag, const void *src)
{
  return MEMORY[0x270ED9120](s, *(void *)&flag, src);
}

uint64_t dirstat_np()
{
  return MEMORY[0x270ED91A0]();
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async_and_wait(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x270ED9278](flags, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x270ED9280](flags, *(void *)&qos_class, *(void *)&relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x270ED9318](identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x270ED9378](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_initially_inactive(dispatch_queue_attr_t attr)
{
  return (dispatch_queue_attr_t)MEMORY[0x270ED9440](attr);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x270ED9448](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x270ED9458](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x270ED9460](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x270ED9468](label, attr, target);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return (const char *)MEMORY[0x270ED9470](queue);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x270ED94C8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x270ED94D0](dsema, timeout);
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x270ED9510](type, handle, mask, queue);
}

uintptr_t dispatch_source_get_data(dispatch_source_t source)
{
  return MEMORY[0x270ED9518](source);
}

void dispatch_source_merge_data(dispatch_source_t source, uintptr_t value)
{
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

intptr_t dispatch_source_testcancel(dispatch_source_t source)
{
  return MEMORY[0x270ED9580](source);
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x270ED95A8](when, delta);
}

dispatch_workloop_t dispatch_workloop_create(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x270ED95C8](label);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x270ED9620]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x270ED9628](__path, *(void *)&__mode);
}

int dup(int a1)
{
  return MEMORY[0x270ED9678](*(void *)&a1);
}

uint64_t dyld_get_active_platform()
{
  return MEMORY[0x270ED9698]();
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x270ED9718]();
}

void exit(int a1)
{
}

int fchflags(int a1, __uint32_t a2)
{
  return MEMORY[0x270ED9898](*(void *)&a1, *(void *)&a2);
}

int fchmod(int a1, mode_t a2)
{
  return MEMORY[0x270ED98A0](*(void *)&a1, a2);
}

int fchmodat(int a1, const char *a2, mode_t a3, int a4)
{
  return MEMORY[0x270ED98A8](*(void *)&a1, a2, a3, *(void *)&a4);
}

int fclose(FILE *a1)
{
  return MEMORY[0x270ED98C8](a1);
}

int fcntl(int a1, int a2, ...)
{
  return MEMORY[0x270ED98D0](*(void *)&a1, *(void *)&a2);
}

int fcopyfile(int from_fd, int to_fd, copyfile_state_t a3, copyfile_flags_t flags)
{
  return MEMORY[0x270ED98D8](*(void *)&from_fd, *(void *)&to_fd, a3, *(void *)&flags);
}

FILE *__cdecl fdopen(int a1, const char *a2)
{
  return (FILE *)MEMORY[0x270ED98E8](*(void *)&a1, a2);
}

int ffsctl(int a1, unint64_t a2, void *a3, unsigned int a4)
{
  return MEMORY[0x270ED9940](*(void *)&a1, a2, a3, *(void *)&a4);
}

int fgetattrlist(int a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x270ED9948](*(void *)&a1, a2, a3, a4, *(void *)&a5);
}

ssize_t fgetxattr(int fd, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x270ED9970](*(void *)&fd, name, value, size, *(void *)&position, *(void *)&options);
}

ssize_t flistxattr(int fd, char *namebuff, size_t size, int options)
{
  return MEMORY[0x270ED9990](*(void *)&fd, namebuff, size, *(void *)&options);
}

int flock(int a1, int a2)
{
  return MEMORY[0x270ED9998](*(void *)&a1, *(void *)&a2);
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x270ED99D0](__x, __y);
  return result;
}

float fmodf(float a1, float a2)
{
  MEMORY[0x270ED99D8](a1, a2);
  return result;
}

uint64_t fp_shouldObfuscateFilenames()
{
  return MEMORY[0x270EEBBD0]();
}

uint64_t fpfs_enable_fault_handling()
{
  return MEMORY[0x270EEBC38]();
}

uint64_t fpfs_recursive_prune_fault_ciconia()
{
  return MEMORY[0x270EEBEE0]();
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x270ED9A08](a1, a2);
}

int fputc(int a1, FILE *a2)
{
  return MEMORY[0x270ED9A18](*(void *)&a1, a2);
}

int fputs(const char *a1, FILE *a2)
{
  return MEMORY[0x270ED9A20](a1, a2);
}

void free(void *a1)
{
}

int fremovexattr(int fd, const char *name, int options)
{
  return MEMORY[0x270ED9A60](*(void *)&fd, name, *(void *)&options);
}

int fs_snapshot_create(int a1, const char *a2, uint32_t a3)
{
  return MEMORY[0x270ED9A78](*(void *)&a1, a2, *(void *)&a3);
}

int fs_snapshot_delete(int a1, const char *a2, uint32_t a3)
{
  return MEMORY[0x270ED9A80](*(void *)&a1, a2, *(void *)&a3);
}

int fs_snapshot_list(int a1, attrlist *a2, void *a3, size_t a4, uint32_t a5)
{
  return MEMORY[0x270ED9A88](*(void *)&a1, a2, a3, a4, *(void *)&a5);
}

int fs_snapshot_mount(int a1, const char *a2, const char *a3, uint32_t a4)
{
  return MEMORY[0x270ED9A90](*(void *)&a1, a2, a3, *(void *)&a4);
}

int fsctl(const char *a1, unint64_t a2, void *a3, unsigned int a4)
{
  return MEMORY[0x270ED9AB8](a1, a2, a3, *(void *)&a4);
}

int fsetattrlist(int a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x270ED9AD0](*(void *)&a1, a2, a3, a4, *(void *)&a5);
}

int fsetxattr(int fd, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x270ED9AE0](*(void *)&fd, name, value, size, *(void *)&position, *(void *)&options);
}

ssize_t fsgetpath(char *a1, size_t a2, fsid_t *a3, uint64_t a4)
{
  return MEMORY[0x270ED9AE8](a1, a2, a3, a4);
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x270ED9AF0](*(void *)&a1, a2);
}

int fstatat(int a1, const char *a2, stat *a3, int a4)
{
  return MEMORY[0x270ED9AF8](*(void *)&a1, a2, a3, *(void *)&a4);
}

int fts_close(FTS *a1)
{
  return MEMORY[0x270ED9B48](a1);
}

FTS *__cdecl fts_open(char *const *a1, int a2, int (__cdecl *a3)(const FTSENT **, const FTSENT **))
{
  return (FTS *)MEMORY[0x270ED9B50](a1, *(void *)&a2, a3);
}

FTSENT *__cdecl fts_read(FTS *a1)
{
  return (FTSENT *)MEMORY[0x270ED9B60](a1);
}

int fts_set(FTS *a1, FTSENT *a2, int a3)
{
  return MEMORY[0x270ED9B68](a1, a2, *(void *)&a3);
}

int futimes(int a1, const timeval *a2)
{
  return MEMORY[0x270ED9B80](*(void *)&a1, a2);
}

int getattrlist(const char *a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x270ED9BA0](a1, a2, a3, a4, *(void *)&a5);
}

int getattrlistat(int a1, const char *a2, void *a3, void *a4, size_t a5, unint64_t a6)
{
  return MEMORY[0x270ED9BA8](*(void *)&a1, a2, a3, a4, a5, a6);
}

uid_t geteuid(void)
{
  return MEMORY[0x270ED9BF0]();
}

int getiopolicy_np(int a1, int a2)
{
  return MEMORY[0x270ED9C70](*(void *)&a1, *(void *)&a2);
}

pid_t getpid(void)
{
  return MEMORY[0x270ED9CE0]();
}

uid_t getuid(void)
{
  return MEMORY[0x270ED9DA0]();
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x270ED9DC0](path, name, value, size, *(void *)&position, *(void *)&options);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x270ED9F50]();
}

int lstat(const char *a1, stat *a2)
{
  return MEMORY[0x270EDA120](a1, a2);
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x270EDA138]();
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA388](count, size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA3A0](ptr, size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void method_exchangeImplementations(Method m1, Method m2)
{
}

int mkdir(const char *a1, mode_t a2)
{
  return MEMORY[0x270EDA518](a1, a2);
}

int mkdirat(int a1, const char *a2, mode_t a3)
{
  return MEMORY[0x270EDA520](*(void *)&a1, a2, a3);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x270EDA738](*(void *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x270EDA770](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

{
  MEMORY[0x270F9A570](context);
}

{
  return (void *)MEMORY[0x270F9A588]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x270F9A598](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x270F9A678](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x270F9A688](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x270F9A6B0](location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x270F9A728]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x270F9A898](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x270F9A9F8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x270F9AA18](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x270F9AA20](obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9AA38](a1);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x270EDA828](a1, *(void *)&a2);
}

int open_dprotected_np(const char *a1, int a2, int a3, int a4, ...)
{
  return MEMORY[0x270EDA830](a1, *(void *)&a2, *(void *)&a3, *(void *)&a4);
}

int openat(int a1, const char *a2, int a3, ...)
{
  return MEMORY[0x270EDA840](*(void *)&a1, a2, *(void *)&a3);
}

uint64_t openbyid_np()
{
  return MEMORY[0x270EDA850]();
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x270EDAA90]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x270EDAB30]();
}

uint64_t pql_sqlite3_value_object()
{
  return MEMORY[0x270F9AC00]();
}

uint64_t pql_sqlite3_value_pointer()
{
  return MEMORY[0x270F9AC08]();
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x270EDAD88](*(void *)&pid, buffer, *(void *)&buffersize);
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF50](a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x270EDAF58](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF60](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF70](a1);
}

int pthread_mutexattr_destroy(pthread_mutexattr_t *a1)
{
  return MEMORY[0x270EDAF78](a1);
}

int pthread_mutexattr_init(pthread_mutexattr_t *a1)
{
  return MEMORY[0x270EDAF80](a1);
}

int pthread_mutexattr_settype(pthread_mutexattr_t *a1, int a2)
{
  return MEMORY[0x270EDAF98](a1, *(void *)&a2);
}

int pthread_rwlock_rdlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x270EDAFD8](a1);
}

int pthread_rwlock_unlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x270EDAFF0](a1);
}

int pthread_rwlock_wrlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x270EDAFF8](a1);
}

qos_class_t qos_class_self(void)
{
  return MEMORY[0x270EDB0B0]();
}

void qsort_b(void *__base, size_t __nel, size_t __width, void *__compar)
{
}

ssize_t readlinkat(int a1, const char *a2, char *a3, size_t a4)
{
  return MEMORY[0x270EDB140](*(void *)&a1, a2, a3, a4);
}

BOOL remove(const std::__fs::filesystem::path *__p, std::error_code *__ec)
{
  return MEMORY[0x270EDB1E8](__p, __ec);
}

int removefile(const char *path, removefile_state_t state, removefile_flags_t flags)
{
  return MEMORY[0x270EDB1F0](path, state, *(void *)&flags);
}

removefile_state_t removefile_state_alloc(void)
{
  return (removefile_state_t)MEMORY[0x270EDB1F8]();
}

int removefile_state_free(removefile_state_t a1)
{
  return MEMORY[0x270EDB200](a1);
}

int removefile_state_get(removefile_state_t state, uint32_t key, void *dst)
{
  return MEMORY[0x270EDB208](state, *(void *)&key, dst);
}

int removefile_state_set(removefile_state_t state, uint32_t key, const void *value)
{
  return MEMORY[0x270EDB210](state, *(void *)&key, value);
}

int renameatx_np(int a1, const char *a2, int a3, const char *a4, unsigned int a5)
{
  return MEMORY[0x270EDB240](*(void *)&a1, a2, *(void *)&a3, a4, *(void *)&a5);
}

int rmdir(const char *a1)
{
  return MEMORY[0x270EDB268](a1);
}

uint64_t sandbox_check()
{
  return MEMORY[0x270EDB290]();
}

uint64_t sandbox_check_by_audit_token()
{
  return MEMORY[0x270EDB298]();
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x270EDB460](path, name, value, size, *(void *)&position, *(void *)&options);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return (void (__cdecl *)(int))MEMORY[0x270EDB4D0](*(void *)&a1, a2);
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x270EDB508](*(void *)&a1);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B490](a1, *(void *)&a2, a3, *(void *)&n, a5);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x270F9B4B0](a1, *(void *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x270F9B4B8](a1, *(void *)&a2);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B4C0](a1);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B4E0](a1, *(void *)&a2, a3, *(void *)&a4, a5);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x270F9B568](a1, *(void *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B570](a1, *(void *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B580](pStmt);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5A0](a1, *(void *)&iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B5C0](a1, *(void *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5D0](a1, *(void *)&iCol);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x270F9B658](a1);
}

int sqlite3_file_control(sqlite3 *a1, const char *zDbName, int op, void *a4)
{
  return MEMORY[0x270F9B688](a1, zDbName, *(void *)&op, a4);
}

void sqlite3_result_blob(sqlite3_context *a1, const void *a2, int a3, void (__cdecl *a4)(void *))
{
}

void sqlite3_result_int(sqlite3_context *a1, int a2)
{
}

void sqlite3_result_int64(sqlite3_context *a1, sqlite3_int64 a2)
{
}

void sqlite3_result_null(sqlite3_context *a1)
{
}

void sqlite3_result_text(sqlite3_context *a1, const char *a2, int a3, void (__cdecl *a4)(void *))
{
}

void sqlite3_result_value(sqlite3_context *a1, sqlite3_value *a2)
{
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x270F9B7F8](pStmt);
}

int sqlite3_stmt_status(sqlite3_stmt *a1, int op, int resetFlg)
{
  return MEMORY[0x270F9B818](a1, *(void *)&op, *(void *)&resetFlg);
}

const void *__cdecl sqlite3_value_blob(sqlite3_value *a1)
{
  return (const void *)MEMORY[0x270F9B870](a1);
}

int sqlite3_value_bytes(sqlite3_value *a1)
{
  return MEMORY[0x270F9B878](a1);
}

int sqlite3_value_int(sqlite3_value *a1)
{
  return MEMORY[0x270F9B8A0](a1);
}

sqlite3_int64 sqlite3_value_int64(sqlite3_value *a1)
{
  return MEMORY[0x270F9B8A8](a1);
}

const unsigned __int8 *__cdecl sqlite3_value_text(sqlite3_value *a1)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B8C0](a1);
}

int sqlite3_value_type(sqlite3_value *a1)
{
  return MEMORY[0x270F9B8D0](a1);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x270EDB568](a1, a2);
}

int statfs(const char *a1, statfs *a2)
{
  return MEMORY[0x270EDB570](a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x270EDB5D0](__s1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x270EDB5D8](*(void *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x270EDB638](__s1, __s2, __n);
}

char *__cdecl strsignal(int __sig)
{
  return (char *)MEMORY[0x270EDB690](*(void *)&__sig);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x270EDB6D8](__str, __endptr, *(void *)&__base);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x270EDB708](__str, __endptr, *(void *)&__base);
}

int symlinkat(const char *a1, int a2, const char *a3)
{
  return MEMORY[0x270EDB778](a1, *(void *)&a2, a3);
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return MEMORY[0x270EDB7D0](a1, *(void *)&a2, a3, a4, a5, a6);
}

void syslog(int a1, const char *a2, ...)
{
}

time_t time(time_t *a1)
{
  return MEMORY[0x270EDB930](a1);
}

int unlink(const char *a1)
{
  return MEMORY[0x270EDB9A8](a1);
}

int unlinkat(int a1, const char *a2, int a3)
{
  return MEMORY[0x270EDB9B0](*(void *)&a1, a2, *(void *)&a3);
}

int unmount(const char *a1, int a2)
{
  return MEMORY[0x270EDB9C0](a1, *(void *)&a2);
}

int usleep(useconds_t a1)
{
  return MEMORY[0x270EDB9E8](*(void *)&a1);
}

void uuid_generate(uuid_t out)
{
}

void uuid_generate_random(uuid_t out)
{
}

void uuid_unparse(const uuid_t uu, uuid_string_t out)
{
}

void uuid_unparse_upper(const uuid_t uu, uuid_string_t out)
{
}

uint64_t voucher_process_can_use_arbitrary_personas()
{
  return MEMORY[0x270EDBAF8]();
}

xattr_flags_t xattr_flags_from_name(const char *a1)
{
  return MEMORY[0x270EDBC40](a1);
}

int xattr_intent_with_flags(xattr_operation_intent_t a1, xattr_flags_t a2)
{
  return MEMORY[0x270EDBC48](*(void *)&a1, a2);
}

char *__cdecl xattr_name_without_flags(const char *a1)
{
  return (char *)MEMORY[0x270EDBC58](a1);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCB8](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x270EDBCE8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCF0](activity);
}

void xpc_activity_unregister(const char *identifier)
{
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x270EDBDE0](xBOOL);
}

uint64_t xpc_copy_entitlement_for_token()
{
  return MEMORY[0x270EDBF50]();
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x270EDC008](keys, values, count);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x270EDC088](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x270EDC200](object);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}