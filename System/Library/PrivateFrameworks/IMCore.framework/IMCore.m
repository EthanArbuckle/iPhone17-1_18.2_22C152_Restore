void sub_1A4AFAB24(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, id);
  id v6;
  uint64_t vars8;

  v5 = *(void (**)(uint64_t, id))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, v6);
  swift_release();
}

void sub_1A4AFAC84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_setAppPolicyMonitor_(WeakRetained, v2, *(void *)(a1 + 32), v3);
}

id sub_1A4AFACD4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (objc_msgSend_isContactLimitsFeatureEnabled(IMDowntimeController, a2, a3, a4))
  {
    if (qword_1EB3F2288 != -1) {
      dispatch_once(&qword_1EB3F2288, &unk_1EF8E5558);
    }
    id v4 = (id)qword_1EB3F2280;
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

uint64_t sub_1A4AFAD44()
{
  if (IMIsRunningInIMDPersistenceAgent())
  {
    uint64_t v3 = IMLogHandleForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT)) {
      sub_1A4CB8F78(v3);
    }

    abort();
  }
  v0 = [IMChatRegistry alloc];
  qword_1EB3F2350 = objc_msgSend_initAsListener_(v0, v1, 1, v2);

  return MEMORY[0x1F41817F8]();
}

void sub_1A4AFAFE8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_1A4CBB09C();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1A4AFB1D8(uint64_t a1)
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = sub_1A4AFC6C0;
  v3[3] = &unk_1E5B7B220;
  id v2 = *(id *)(a1 + 40);
  v3[4] = *(void *)(a1 + 32);
  id v4 = v2;
  dispatch_async(MEMORY[0x1E4F14428], v3);
}

unint64_t sub_1A4AFB26C(uint64_t a1, uint64_t a2)
{
  sub_1A4CBB63C();
  sub_1A4CBB0EC();
  uint64_t v4 = sub_1A4CBB65C();

  return sub_1A4B3503C(a1, a2, v4);
}

void sub_1A4AFB2E4(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "TUConversationManager registered", buf, 2u);
    }
  }
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4B08DA0;
  block[3] = &unk_1E5B7ACD0;
  block[4] = *(void *)(a1 + 32);
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void sub_1A4AFBA88(uint64_t a1)
{
  id v2 = objc_alloc(MEMORY[0x1E4F1CA80]);
  v19 = objc_msgSend_initWithObjects_(v2, v3, @"com.apple.ExtensionTester.NullMessagesAppExtension", v4, @"com.apple.hellbender.messagesextension", @"com.apple.PPTPong.MessagesExtension", @"com.apple.PPTTimeLabel.MessagesExtension", 0);
  if (_IMIsRunningInCameraClient()) {
    objc_msgSend_addObject_(v19, v5, *MEMORY[0x1E4F6CAF8], v7);
  }
  if (objc_msgSend__shouldAddSafetyMonitorToBlockList(*(void **)(a1 + 32), v5, v6, v7)) {
    objc_msgSend_addObject_(v19, v8, *MEMORY[0x1E4F6CB28], v10);
  }
  if (objc_msgSend__shouldAddFindMyToBlockList(*(void **)(a1 + 32), v8, v9, v10)) {
    objc_msgSend_addObject_(v19, v11, *MEMORY[0x1E4F6CB30], v13);
  }
  if (objc_msgSend__shouldAddGenPlaygroundToBlockList(*(void **)(a1 + 32), v11, v12, v13)) {
    objc_msgSend_addObject_(v19, v14, *MEMORY[0x1E4F6CBC8], v16);
  }
  uint64_t v17 = objc_msgSend_copy(v19, v14, v15, v16);
  v18 = (void *)qword_1EB3F21A0;
  qword_1EB3F21A0 = v17;
}

id sub_1A4AFBB94()
{
  id result = objc_msgSend(objc_allocWithZone((Class)IMKeyTransparencyController), sel_init);
  qword_1E965B648 = (uint64_t)result;
  return result;
}

uint64_t sub_1A4AFBF0C()
{
  uint64_t v0 = sub_1A4CBB03C();
  sub_1A4AFFB14(v0, qword_1E965B6E0);
  sub_1A4B0C4D8(v0, (uint64_t)qword_1E965B6E0);
  sub_1A4CBB00C();
  return sub_1A4CBB02C();
}

id sub_1A4AFC074(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return (id)objc_msgSend_deviceSalt(*(void **)(a1 + 32), a2, a3, a4);
}

void sub_1A4AFC098(uint64_t a1, void *a2, void *a3)
{
  id v22 = a2;
  v5 = *(void **)(a1 + 32);
  uint64_t v9 = objc_msgSend_startDate(a3, v6, v7, v8);
  objc_msgSend_timeIntervalSinceDate_(v5, v10, (uint64_t)v9, v11);
  double v13 = v12;

  if (v13 > 10.0)
  {
    uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v15 = *(void **)(v14 + 40);
    if (v15)
    {
      id v16 = v15;
      uint64_t v17 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v16;
    }
    else
    {
      id v18 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      uint64_t v19 = *(void *)(*(void *)(a1 + 40) + 8);
      uint64_t v17 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;
    }

    objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v20, (uint64_t)v22, v21);
  }
}

void sub_1A4AFC464(uint64_t a1)
{
}

id sub_1A4AFC5A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = (id)objc_msgSend_sharedInstance(MEMORY[0x1E4F61748], a2, a3, a4);
  return (id)objc_msgSend_sharedInstance(MEMORY[0x1E4F61740], v5, v6, v7);
}

void sub_1A4AFC6C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 40);
  objc_msgSend_emergencyNumbers(*(void **)(a1 + 32), a2, a3, a4);
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v9 = objc_msgSend_STConversation(*(void **)(a1 + 32), v6, v7, v8);
  (*(void (**)(uint64_t, id, void *))(v5 + 16))(v5, v10, v9);
}

void sub_1A4AFC790(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_1A4AFC800(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A4B0E048(&qword_1E965B690);
  id v2 = (void *)sub_1A4CBB4FC();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A4AFB26C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v2[6] + 16 * result);
    *id v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1A4AFCA48(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  char v7 = objc_msgSend_listener(WeakRetained, v4, v5, v6);
  objc_msgSend_setupComplete_info_(v7, v8, 1, (uint64_t)v3);
}

uint64_t sub_1A4AFCB40(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_mainBundle(MEMORY[0x1E4F28B50], a2, a3, a4);
  uint64_t v8 = objc_msgSend_bundleIdentifier(v4, v5, v6, v7);
  if (__IMIsIdentifierInPluginCapableClient(v8)) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = IMIsRunningInUnitTesting();
  }

  return v9;
}

void sub_1A4AFCEB4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_mainBundle(MEMORY[0x1E4F28B50], a2, a3, a4);
  objc_msgSend_bundleIdentifier(v4, v5, v6, v7);
  id v17 = (id)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend_isEqualToString_(v17, v8, *MEMORY[0x1E4F6C440], v9) & 1) != 0
    || (objc_msgSend_isEqualToString_(v17, v10, @"com.apple.MobileSMS", v11) & 1) != 0
    || (objc_msgSend_isEqualToString_(v17, v12, @"com.apple.iChat", v13) & 1) != 0)
  {
    char isEqualToString = 1;
  }
  else
  {
    char isEqualToString = objc_msgSend_isEqualToString_(v17, v14, @"com.apple.systemuiserver", v15);
  }
  byte_1E965E7D8 = isEqualToString;
}

void sub_1A4AFD100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, int a10, __int16 a11, __int16 a12, uint64_t a13, long long a14)
{
  if (a2 == 1)
  {
    id v14 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v14, v16, v17, v18);
        id v19 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v14, v20, v21, v22);
        id v23 = (id)objc_claimAutoreleasedReturnValue();
        v27 = objc_msgSend_userInfo(v14, v24, v25, v26);
        LODWORD(a9) = 138413314;
        *(void *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(void *)((char *)&a9 + 14) = v19;
        a12 = 2112;
        a13 = (uint64_t)v23;
        LOWORD(a14) = 2112;
        *(void *)((char *)&a14 + 2) = v27;
        WORD5(a14) = 2080;
        *(void *)((char *)&a14 + 12) = "-[IMChatRegistry(Blackhole_Internal) _updateBlackholedChatsExist:]";
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4AFD0CCLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4AFD39C()
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  qword_1EB3F2238 = MEMORY[0x1A6263B40](@"STConversation", @"ScreenTimeCore");
  uint64_t v0 = MEMORY[0x1A6263B40](@"STConversationContext", @"ScreenTimeCore");
  qword_1EB3F2240 = v0;
  if (qword_1EB3F2238)
  {
    if (v0) {
      goto LABEL_18;
    }
    goto LABEL_11;
  }
  uint64_t v1 = NSString;
  uint64_t v2 = IMFileLocationTrimFileName();
  uint64_t v5 = objc_msgSend_stringWithFormat_(NSString, v3, (uint64_t)&stru_1EF8E78C8, v4);
  uint64_t v8 = objc_msgSend_stringWithFormat_(v1, v6, @"Unexpected nil '%@' in %s at %s:%d. %@", v7, @"IMSTConversationClass", "STConversation *_createSTConversation(void)_block_invoke", v2, 242, v5);

  uint64_t v9 = (void (*)(void *))IMGetAssertionFailureHandler();
  if (v9)
  {
    v9(v8);
  }
  else if (IMOSLoggingEnabled())
  {
    id v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v38 = v8;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
    }
  }
  if (!qword_1EB3F2240)
  {
LABEL_11:
    uint64_t v11 = NSString;
    uint64_t v12 = IMFileLocationTrimFileName();
    uint64_t v15 = objc_msgSend_stringWithFormat_(NSString, v13, (uint64_t)&stru_1EF8E78C8, v14);
    uint64_t v18 = objc_msgSend_stringWithFormat_(v11, v16, @"Unexpected nil '%@' in %s at %s:%d. %@", v17, @"IMSTConversationContextClass", "STConversation *_createSTConversation(void)_block_invoke", v12, 243, v15);

    id v19 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v19)
    {
      v19(v18);
    }
    else if (IMOSLoggingEnabled())
    {
      v20 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v38 = v18;
        _os_log_impl(&dword_1A4AF7000, v20, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
LABEL_18:
  qword_1EB3F2248 = MEMORY[0x1A6263B50]("STManagementStateStateDidChange", @"ScreenTimeCore");
  if (!qword_1EB3F2248)
  {
    uint64_t v21 = NSString;
    uint64_t v22 = IMFileLocationTrimFileName();
    uint64_t v25 = objc_msgSend_stringWithFormat_(NSString, v23, (uint64_t)&stru_1EF8E78C8, v24);
    v28 = objc_msgSend_stringWithFormat_(v21, v26, @"Unexpected nil '%@' in %s at %s:%d. %@", v27, @"IMSTManagementStateStateDidChangeNotificationName", "STConversation *_createSTConversation(void)_block_invoke", v22, 245, v25);

    v29 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v29)
    {
      v29(v28);
    }
    else if (IMOSLoggingEnabled())
    {
      v30 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v38 = v28;
        _os_log_impl(&dword_1A4AF7000, v30, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  int v31 = IMIsRunningInMessages();
  id v32 = objc_alloc((Class)qword_1EB3F2238);
  if (v31) {
    uint64_t inited = objc_msgSend_initWithBundleIdentifier_(v32, v33, @"com.apple.MobileSMS", v34);
  }
  else {
    uint64_t inited = objc_msgSend_initSynchronouslyWithBundleIdentifier_(v32, v33, @"com.apple.MobileSMS", v34);
  }
  v36 = (void *)qword_1EB3F2280;
  qword_1EB3F2280 = inited;
}

uint64_t sub_1A4AFD980(uint64_t result, id a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    uint64_t v4 = (uint64_t *)(a3 + 16);
    uint64_t v5 = (unsigned char *)(a4 + 16);
    id v6 = objc_msgSend(a2, sel_dictionaryForKey_, "setupInfo");
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_1A4CBB0AC();
    }
    else
    {
      uint64_t v8 = 0;
    }
    swift_beginAccess();
    *uint64_t v4 = v8;
    swift_bridgeObjectRelease();
    unint64_t result = swift_beginAccess();
    unsigned char *v5 = 1;
  }
  return result;
}

void sub_1A4AFDBA8(uint64_t a1)
{
  id obj = *(id *)(a1 + 32);
  objc_sync_enter(obj);
  if (!qword_1E965E768)
  {
    uint64_t v5 = *(void **)(a1 + 32);
    id v6 = objc_msgSend__createSingleton__im(v5, v2, v3, v4);
    objc_msgSend___setSingleton__im_(v5, v7, (uint64_t)v6, v8);
  }
  objc_sync_exit(obj);
}

void sub_1A4AFDC2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A4AFDC40(uint64_t a1)
{
  id obj = *(id *)(a1 + 32);
  objc_sync_enter(obj);
  if (!qword_1EB3F2320)
  {
    uint64_t v5 = *(void **)(a1 + 32);
    id v6 = objc_msgSend__createSingleton__im(v5, v2, v3, v4);
    objc_msgSend___setSingleton__im_(v5, v7, (uint64_t)v6, v8);
  }
  objc_sync_exit(obj);
}

void sub_1A4AFDCC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A4AFE0B8(uint64_t a1, const char *a2)
{
  v14[6] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *MEMORY[0x1E4F6CBB8];
  v14[0] = *MEMORY[0x1E4F6CB98];
  v14[1] = v2;
  v14[2] = @"com.apple.InCallService";
  v14[3] = @"com.apple.iMessageAppsBrowserTest";
  v14[4] = @"com.apple.CameraEffectsDemo";
  v14[5] = @"com.apple.facetime";
  uint64_t v3 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], a2, (uint64_t)v14, 6);
  uint64_t v7 = objc_msgSend_mainBundle(MEMORY[0x1E4F28B50], v4, v5, v6);
  uint64_t v11 = objc_msgSend_bundleIdentifier(v7, v8, v9, v10);
  byte_1E965DDB8 = objc_msgSend_containsObject_(v3, v12, (uint64_t)v11, v13);
}

void sub_1A4AFE43C(id *a1)
{
  id v2 = objc_alloc(MEMORY[0x1E4F5F3A0]);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = sub_1A4BFC300;
  v10[3] = &unk_1E5B7ADC8;
  a1 += 4;
  objc_copyWeak(&v11, a1);
  uint64_t v5 = objc_msgSend_initWithPolicyChangeHandler_(v2, v3, (uint64_t)v10, v4);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4AFAC84;
  block[3] = &unk_1E5B7B420;
  objc_copyWeak(&v9, a1);
  id v8 = v5;
  id v6 = v5;
  dispatch_async(MEMORY[0x1E4F14428], block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&v11);
}

void sub_1A4AFE570(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t ___IMIsIdentifierInPluginCapableClient(void *a1)
{
  v19[18] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = IMBundleIdentifiersShowingMessagesTranscript();
  id v6 = objc_msgSend_mutableCopy(v2, v3, v4, v5);

  v19[0] = @"com.apple.iChat";
  v19[1] = @"com.apple.springboard";
  v19[2] = @"com.apple.messages.AssistantExtension";
  v19[3] = @"com.apple.MobileSMS.MessagesAssistantExtension";
  uint64_t v7 = *MEMORY[0x1E4F6CB98];
  v19[4] = @"com.apple.PassKit.PassKitIntentsExtension";
  v19[5] = v7;
  v19[6] = *MEMORY[0x1E4F6CBB8];
  v19[7] = @"com.apple.iMessageAppsBrowserTest";
  v19[8] = @"com.apple.CameraEffectsDemo";
  v19[9] = @"com.apple.MobileSMS.iMessageAppsHost";
  uint64_t v8 = *MEMORY[0x1E4F6CAF8];
  v19[10] = *MEMORY[0x1E4F6E540];
  v19[11] = v8;
  v19[12] = @"com.apple.Safari.SandboxBroker";
  v19[13] = @"com.apple.siri";
  v19[14] = @"com.apple.imtranscoding.IMTranscoderAgent";
  v19[15] = @"com.apple.TapToRadar";
  v19[16] = @"com.apple.ActivityMonitorApp";
  v19[17] = @"com.apple.Sharing.AirDropUI";
  uint64_t v10 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v9, (uint64_t)v19, 18);
  objc_msgSend_addObjectsFromArray_(v6, v11, (uint64_t)v10, v12);

  objc_msgSend_addObjectsFromArray_(v6, v13, (uint64_t)&unk_1EF9146F8, v14);
  uint64_t v17 = objc_msgSend_containsObject_(v6, v15, (uint64_t)v1, v16);

  return v17;
}

uint64_t sub_1A4AFF3C8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A4AFFAAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1A4CBB03C();
  sub_1A4AFFB14(v3, a2);
  sub_1A4B0C4D8(v3, (uint64_t)a2);
  sub_1A4CBB00C();
  return sub_1A4CBB02C();
}

uint64_t *sub_1A4AFFB14(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_1A4B0034C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B00310);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B00AB8(char a1)
{
  id v2 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v3 = IMKeyTransparencySelfOptInStateChangedNotification;
  sub_1A4B0E048(&qword_1E965B6D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4CD16F0;
  *(void *)(inited + 32) = sub_1A4CBB0CC();
  *(void *)(inited + 40) = v5;
  *(unsigned char *)(inited + 48) = a1;
  sub_1A4AFC800(inited);
  id v6 = (void *)sub_1A4CBB09C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_postNotificationName_object_, v3, v6);
}

void sub_1A4B00DA0(uint64_t a1)
{
  id v2 = objc_opt_class();
  uint64_t v5 = objc_msgSend_fetchEmergencyNumbersSetWithProviderManager_(v2, v3, *(void *)(*(void *)(a1 + 32) + 40), v4);
  id v9 = sub_1A4AFACD4((uint64_t)v5, v6, v7, v8);
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8));
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(void **)(v10 + 24);
  *(void *)(v10 + 24) = v5;
  id v15 = v5;

  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void **)(v12 + 16);
  *(void *)(v12 + 16) = v9;
  id v14 = v9;

  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8));
}

void sub_1A4B0125C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_sharedController(IMDaemonController, a2, a3, a4);
  int isConnected = objc_msgSend_isConnected(v4, v5, v6, v7);

  if (isConnected)
  {
    objc_msgSend_sharedController(IMDaemonController, v9, v10, v11);
    id v19 = (id)objc_claimAutoreleasedReturnValue();
    id v15 = objc_msgSend_remoteDaemon(v19, v12, v13, v14);
    objc_msgSend_broadcastCloudKitStateAfterFetchingAccountStatus(v15, v16, v17, v18);
  }
}

void sub_1A4B012F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = a2;
  if (v7 != a2) {
    *(unsigned char *)(a1 + 24) = 1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a3;
  if (a4) {
    *(unsigned char *)(a1 + 24) = 1;
  }
  sub_1A4B07B7C(a1);
}

void sub_1A4B01378(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  objc_msgSend_addObserver_selector_name_object_(v4, v5, qword_1EB3F2520, (uint64_t)sel__handleAddContactChangeHistoryEvent_, *MEMORY[0x1E4F6CC90], 0);

  id v9 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v6, v7, v8);
  objc_msgSend_addObserver_selector_name_object_(v9, v10, qword_1EB3F2520, (uint64_t)sel__handleDeleteContactChangeHistoryEvent_, *MEMORY[0x1E4F6CCA8], 0);

  uint64_t v14 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v11, v12, v13);
  objc_msgSend_addObserver_selector_name_object_(v14, v15, qword_1EB3F2520, (uint64_t)sel__handleUpdateContactChangeHistoryEvent_, *MEMORY[0x1E4F6CCC0], 0);

  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v16, v17, v18);
  id v20 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObserver_selector_name_object_(v20, v19, qword_1EB3F2520, (uint64_t)sel__handleDropEverythingChangeHistoryEvent, *MEMORY[0x1E4F6CCB0], 0);
}

id sub_1A4B01C70(uint64_t a1)
{
  uint64_t v16 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = sub_1A4CBB2FC();
  uint64_t v2 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4CBB2EC();
  MEMORY[0x1F4188790]();
  sub_1A4CBB06C();
  MEMORY[0x1F4188790]();
  uint64_t v14 = OBJC_IVAR___IMDaemonConnection_queue;
  uint64_t v5 = v1;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v13[0] = sub_1A4B35210(MEMORY[0x1E4FBC860]);
  sub_1A4CBB05C();
  uint64_t v19 = v6;
  v13[3] = sub_1A4B0C59C(&qword_1EB3F2128, MEMORY[0x1E4FBCC10]);
  v13[2] = sub_1A4B0E048(&qword_1EB3F2110);
  sub_1A4B0C54C(&qword_1EB3F2118, &qword_1EB3F2110);
  sub_1A4CBB3BC();
  uint64_t v7 = *MEMORY[0x1E4FBCC58];
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v13[1] = v2 + 104;
  id v9 = v4;
  uint64_t v10 = v4;
  uint64_t v11 = v15;
  v8(v10, v7, v15);
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  char v22 = 1;
  uint64_t v23 = 0;
  uint64_t v24 = v13[0];
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_1A4B0E048((uint64_t *)&unk_1EB3F20A0);
  swift_allocObject();
  *(void *)(v13[4] + v14) = sub_1A4CBAFFC();
  uint64_t v14 = OBJC_IVAR___IMDaemonConnection_setupQueue;
  sub_1A4CBB05C();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1A4CBB3BC();
  v8(v9, v7, v11);
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  sub_1A4B0E048(&qword_1EB3F2098);
  swift_allocObject();
  *(void *)&v5[v14] = sub_1A4CBAFFC();
  LOBYTE(v19) = 0;
  sub_1A4CBAFAC();
  *(void *)&v5[OBJC_IVAR___IMDaemonConnection_listener] = v16;
  swift_unknownObjectRetain();

  v18.receiver = v5;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

void sub_1A4B02178(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A4B02A18(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2) {
      JUMPOUT(0x1A4B029A8);
    }
    JUMPOUT(0x1A4B02954);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B02AA0(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v2, (uint64_t)&v8, (uint64_t)v12, 16);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8 * v6) + 16))(*(void *)(*((void *)&v8 + 1) + 8 * v6));
        ++v6;
      }
      while (v4 != v6);
      uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v7, (uint64_t)&v8, (uint64_t)v12, 16);
    }
    while (v4);
  }
}

void sub_1A4B02B9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    if (v3)
    {
      objc_msgSend_setSuggestedName_(WeakRetained, v5, (uint64_t)v3, v6);
      if (!*(void *)(*(void *)(a1 + 32) + 64))
      {
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = sub_1A4B55B40;
        block[3] = &unk_1E5B7B5A8;
        objc_copyWeak(&v18, (id *)(a1 + 40));
        id v8 = v7;
        uint64_t v9 = *(void *)(a1 + 32);
        id v16 = v8;
        uint64_t v17 = v9;
        *(void *)(*(void *)(a1 + 32) + 64) = CFRunLoopObserverCreateWithHandler(0, 0x20uLL, 0, 0, block);
        Main = CFRunLoopGetMain();
        CFRunLoopAddObserver(Main, *(CFRunLoopObserverRef *)(*(void *)(a1 + 32) + 64), (CFRunLoopMode)*MEMORY[0x1E4F1D418]);

        objc_destroyWeak(&v18);
      }
    }
    else
    {
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = *(NSObject **)(v11 + 24);
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 3221225472;
      v13[2] = sub_1A4B346E0;
      v13[3] = &unk_1E5B7B130;
      v13[4] = v11;
      id v14 = WeakRetained;
      dispatch_async(v12, v13);
    }
  }
}

void sub_1A4B02D30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B02D48(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1A4B02D8C()
{
  return sub_1A4B0BA20(*(const char **)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

id sub_1A4B0313C()
{
  id v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t v3 = sub_1A4B35348(MEMORY[0x1E4FBC860]);
  unint64_t v4 = sub_1A4B35354(v2);
  sub_1A4B0E048(&qword_1E965B5A8);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 40) = 0;
  *(_WORD *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = v3;
  *(void *)(v5 + 32) = v4;
  *(void *)&v1[OBJC_IVAR___IMKeyTransparencyController_state] = v5;
  sub_1A4CBB0CC();
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB0018]);
  uint64_t v7 = (void *)sub_1A4CBB0BC();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithApplication_, v7);

  *(void *)&v1[OBJC_IVAR___IMKeyTransparencyController_verifier] = v8;
  v15.receiver = v1;
  v15.super_class = (Class)IMKeyTransparencyController;
  id v9 = objc_msgSendSuper2(&v15, sel_init);
  long long v10 = self;
  id v11 = v9;
  id v12 = objc_msgSend(v10, sel_sharedController);
  id v13 = objc_msgSend(v12, sel_listener);

  objc_msgSend(v13, sel_addHandler_, v11);
  return v11;
}

unint64_t sub_1A4B032BC(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A4B0E048(a2);
  unint64_t v3 = (void *)sub_1A4CBB4FC();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    id v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1A4AFB26C(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v12 = (uint64_t *)(v3[6] + 16 * result);
    *id v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1A4B03920(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *exc_buf)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B03610);
  }
  JUMPOUT(0x1A4B03918);
}

void sub_1A4B04274(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B041D8);
  }
  objc_destroyWeak(v24);
  objc_destroyWeak(location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(exc_buf);
}

void sub_1A4B042C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_objectForKey_(*(void **)(*(void *)(a1 + 32) + 32), a2, *(void *)(a1 + 40), a4);
  objc_msgSend_removeObjectForKey_(*(void **)(*(void *)(a1 + 32) + 32), v6, *(void *)(a1 + 40), v7);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(void **)(v10 + 16);
  uint64_t v12 = *(void *)(a1 + 48);
  if (v12)
  {
    objc_msgSend_setObject_forKey_(*(void **)(v10 + 16), v8, v12, *(void *)(a1 + 40));
  }
  else
  {
    uint64_t v13 = objc_msgSend_null(MEMORY[0x1E4F1CA98], v8, 0, v9);
    objc_msgSend_setObject_forKey_(v11, v14, (uint64_t)v13, *(void *)(a1 + 40));
  }
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = sub_1A4B02AA0;
  v17[3] = &unk_1E5B7B130;
  id v18 = v5;
  uint64_t v15 = *(NSObject **)(a1 + 56);
  id v19 = *(id *)(a1 + 48);
  id v16 = v5;
  dispatch_async(v15, v17);
}

void sub_1A4B04724()
{
}

void sub_1A4B04E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A4B04E64(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 40);
  if (v6)
  {
    uint64_t v10 = objc_msgSend_objectForKey_(v6, a2, *(void *)(a1 + 40), a4);
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void **)(v11 + 16);
    if (v10)
    {
      objc_msgSend_setObject_forKey_(*(void **)(v11 + 16), v7, (uint64_t)v10, *(void *)(a1 + 40));
    }
    else
    {
      uint64_t v20 = objc_msgSend_null(MEMORY[0x1E4F1CA98], v7, v8, v9);
      objc_msgSend_setObject_forKey_(v12, v21, (uint64_t)v20, *(void *)(a1 + 40));
    }
    char v22 = *(NSObject **)(a1 + 48);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4B55B2C;
    block[3] = &unk_1E5B7B220;
    id v23 = *(id *)(a1 + 64);
    id v35 = v10;
    id v36 = v23;
    id v24 = v10;
    dispatch_async(v22, block);
  }
  else
  {
    objc_msgSend_objectForKey_(*(void **)(v5 + 32), a2, *(void *)(a1 + 40), a4);
    id v33 = (id)objc_claimAutoreleasedReturnValue();
    id v16 = objc_msgSend_copy(*(void **)(a1 + 64), v13, v14, v15);
    if (v33)
    {
      uint64_t v17 = _Block_copy(v16);
      objc_msgSend_addObject_(v33, v18, (uint64_t)v17, v19);
    }
    else
    {
      uint64_t v25 = *(void **)(*(void *)(a1 + 32) + 32);
      uint64_t v26 = (void *)MEMORY[0x1E4F1CA48];
      uint64_t v27 = _Block_copy(v16);
      v30 = objc_msgSend_arrayWithObject_(v26, v28, (uint64_t)v27, v29);
      objc_msgSend_setObject_forKey_(v25, v31, (uint64_t)v30, *(void *)(a1 + 40));

      objc_msgSend__startRequestForDisplayName_messageUID_queue_(*(void **)(a1 + 32), v32, *(void *)(a1 + 40), *(void *)(a1 + 56), *(void *)(a1 + 48));
    }
  }
}

void sub_1A4B051A4(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = a1[4];
      int v16 = 138412546;
      uint64_t v17 = v11;
      __int16 v18 = 2112;
      id v19 = v5;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "displayName %@ names %@", (uint8_t *)&v16, 0x16u);
    }
  }
  if (v6 && IMOSLoggingEnabled())
  {
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      int v16 = 138412290;
      uint64_t v17 = (uint64_t)v6;
      _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "Error getting names for phone number: %@", (uint8_t *)&v16, 0xCu);
    }
  }
  uint64_t v13 = (void *)a1[5];
  uint64_t v14 = objc_msgSend_firstObject(v5, v7, v8, v9);
  objc_msgSend__startRequestForDisplayNameCallbackWithSuggestedName_displayName_queue_(v13, v15, (uint64_t)v14, a1[4], a1[6]);
}

void sub_1A4B05438(uint64_t a1, void *a2, void *a3)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  objc_msgSend_stopTimingForKey_(*(void **)(a1 + 32), v7, *(void *)(a1 + 40), v8);
  if (v6)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = *(void *)(a1 + 48);
        *(_DWORD *)buf = 138412546;
        uint64_t v26 = v10;
        __int16 v27 = 2112;
        id v28 = v6;
        _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "IMBalloonPluginManager encountered error discovering extensions (%@): %@", buf, 0x16u);
      }
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    uint64_t v12 = objc_opt_class();
    uint64_t v15 = objc_msgSend_precacheBalloonAppExtensionsForExtensions_(v12, v13, (uint64_t)v5, v14);

    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = sub_1A4B0E5B8;
    v18[3] = &unk_1E5B7CBD8;
    id v19 = *(id *)(a1 + 48);
    id v20 = v5;
    id v21 = *(id *)(a1 + 32);
    objc_copyWeak(&v24, (id *)(a1 + 64));
    uint64_t v16 = *(void *)(a1 + 56);
    id v22 = v15;
    uint64_t v23 = v16;
    id v17 = v15;
    dispatch_async(MEMORY[0x1E4F14428], v18);

    objc_destroyWeak(&v24);
  }
}

uint64_t sub_1A4B05D18@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  char v4 = *(unsigned char *)(a1 + 24);
  id v5 = *(void **)a1;
  if ((a2 & 1) == 0)
  {
    if (v5)
    {
      uint64_t v12 = sub_1A4C8D560;
      uint64_t v13 = 0;
      *(void *)&long long v10 = MEMORY[0x1E4F143A8];
      *((void *)&v10 + 1) = 1107296256;
      *(void *)&long long v11 = sub_1A4C8D300;
      *((void *)&v11 + 1) = &unk_1EF8E71C8;
      id v6 = _Block_copy(&v10);
      id v7 = objc_msgSend(v5, sel_remoteObjectProxyWithErrorHandler_, v6);
      goto LABEL_6;
    }
LABEL_7:
    long long v10 = 0u;
    long long v11 = 0u;
    goto LABEL_8;
  }
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v12 = sub_1A4C8D554;
  uint64_t v13 = 0;
  *(void *)&long long v10 = MEMORY[0x1E4F143A8];
  *((void *)&v10 + 1) = 1107296256;
  *(void *)&long long v11 = sub_1A4C8D300;
  *((void *)&v11 + 1) = &unk_1EF8E71F0;
  id v6 = _Block_copy(&v10);
  id v7 = objc_msgSend(v5, sel_synchronousRemoteObjectProxyWithErrorHandler_, v6);
LABEL_6:
  id v8 = v7;
  _Block_release(v6);
  sub_1A4CBB39C();
  swift_unknownObjectRelease();
LABEL_8:
  *a3 = v4;
  return sub_1A4B0B9B8((uint64_t)&v10, (uint64_t)(a3 + 8));
}

void sub_1A4B05EE4(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v3 = (id *)(a1 + 32);
  char v4 = a3;
  id WeakRetained = (void **)objc_loadWeakRetained(v3);
  id v8 = objc_msgSend_remoteObjectProxy(WeakRetained[10], v5, v6, v7);
  v4[2](v4, v8);
}

id sub_1A4B05F60(void *a1)
{
  id v1 = a1;
  sub_1A4B0E048(&qword_1EB3F20E0);
  sub_1A4CBAFDC();

  return v3;
}

uint64_t sub_1A4B06030(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v61 = a8;
  id v70 = a5;
  v62 = a1;
  uint64_t v13 = sub_1A4CBB04C();
  uint64_t v67 = *(void *)(v13 - 8);
  uint64_t v68 = v13;
  MEMORY[0x1F4188790]();
  v65 = &v54[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v66 = sub_1A4CBB06C();
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790]();
  v63 = &v54[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 0;
  v72 = (unsigned char *)(v16 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v69 = v17 + 16;
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1A4CBB03C();
  uint64_t v19 = sub_1A4B0C4D8(v18, (uint64_t)qword_1EB3F2588);
  swift_bridgeObjectRetain_n();
  uint64_t v71 = v19;
  id v20 = sub_1A4CBB01C();
  os_log_type_t v21 = sub_1A4CBB24C();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v59 = v17;
    uint64_t v24 = v23;
    uint64_t v57 = swift_slowAlloc();
    uint64_t aBlock = v57;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v60 = v16;
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_1A4B0BCCC(a2, a3, &aBlock);
    uint64_t v58 = a2;
    sub_1A4CBB36C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v56 = v24 + 14;
    uint64_t v25 = a4;
    uint64_t v26 = a7;
    id v27 = (id)IMStringFromClientCapabilities();
    uint64_t v28 = sub_1A4CBB0CC();
    int v55 = v22;
    unint64_t v30 = v29;

    a7 = v26;
    a4 = v25;
    uint64_t v74 = sub_1A4B0BCCC(v28, v30, &aBlock);
    uint64_t v16 = v60;
    sub_1A4CBB36C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4AF7000, v20, (os_log_type_t)v55, "Requesting setup with id: %s capabilities: %s", (uint8_t *)v24, 0x16u);
    uint64_t v31 = v57;
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v31, -1, -1);
    uint64_t v32 = v24;
    uint64_t v17 = v59;
    MEMORY[0x1A6264920](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v33 = (void *)sub_1A4CBB0BC();
  uint64_t v34 = (void *)sub_1A4CBB09C();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v17;
  *(void *)(v35 + 24) = v16;
  v79 = sub_1A4B354D8;
  uint64_t v80 = v35;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v76 = 1107296256;
  v77 = sub_1A4AFAB24;
  v78 = &unk_1EF8E6EF8;
  id v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v70, sel_requestSetupXPCObjectWithClientID_capabilities_context_reply_, v33, a4, v34, v36);
  _Block_release(v36);

  swift_beginAccess();
  uint64_t v37 = *(void *)(v17 + 16);
  v38 = v72;
  if (v37)
  {
    swift_beginAccess();
    if (*v38 == 1)
    {
      id v70 = a9;
      uint64_t v39 = (void *)swift_allocObject();
      v39[2] = a7;
      v39[3] = v61;
      v39[4] = v37;
      v40 = v62;
      uint64_t v41 = *v62;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A4B35388(v41);
      uint64_t *v40 = (uint64_t)sub_1A4B354A4;
      v40[1] = (uint64_t)v39;
      sub_1A4B0C510(0, (unint64_t *)&qword_1EB3F20E8);
      v42 = (void *)sub_1A4CBB30C();
      uint64_t v43 = swift_allocObject();
      id v44 = v70;
      *(void *)(v43 + 16) = v70;
      v79 = (uint64_t (*)(uint64_t, void *))sub_1A4B354D4;
      uint64_t v80 = v43;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v76 = 1107296256;
      v77 = sub_1A4B02D48;
      v78 = &unk_1EF8E6F70;
      v45 = _Block_copy(&aBlock);
      id v46 = v44;
      swift_release();
      v47 = v63;
      sub_1A4CBB05C();
      uint64_t aBlock = MEMORY[0x1E4FBC860];
      sub_1A4B0C59C((unint64_t *)&qword_1EB3F20F0, MEMORY[0x1E4FBCB00]);
      sub_1A4B0E048(&qword_1EB3F20F8);
      sub_1A4B0C54C((unint64_t *)&qword_1EB3F2100, &qword_1EB3F20F8);
      v48 = v65;
      uint64_t v49 = v68;
      sub_1A4CBB3BC();
      MEMORY[0x1A6262830](0, v47, v48, v45);
      _Block_release(v45);

      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v48, v49);
      (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v47, v66);
    }
  }
  swift_retain();
  v50 = sub_1A4CBB01C();
  os_log_type_t v51 = sub_1A4CBB24C();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v52 = 67109120;
    swift_beginAccess();
    int v73 = *(unsigned __int8 *)(v16 + 16);
    sub_1A4CBB36C();
    swift_release();
    _os_log_impl(&dword_1A4AF7000, v50, v51, "Setup request concluded with success: %{BOOL}d", v52, 8u);
    MEMORY[0x1A6264920](v52, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_release();
  }
  return swift_release();
}

uint64_t sub_1A4B06874(void *a1, uint64_t a2)
{
  id v3 = v2;
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v5, (uint64_t)qword_1EB3F2588);
  id v6 = a1;
  uint64_t v7 = sub_1A4CBB01C();
  os_log_type_t v8 = sub_1A4CBB24C();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67109120;
    LODWORD(aBlock) = objc_msgSend(v6, sel_processIdentifier);
    sub_1A4CBB36C();

    _os_log_impl(&dword_1A4AF7000, v7, v8, "Configuring XPC connection to PID %d", v9, 8u);
    MEMORY[0x1A6264920](v9, -1, -1);
  }
  else
  {
  }
  sub_1A4B0C510(0, &qword_1EB3F2120);
  long long v10 = (void *)sub_1A4CBB2AC();
  objc_msgSend(v6, sel_setExportedInterface_, v10);

  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = objc_allocWithZone(MEMORY[0x1E4F6E7E8]);
  v40 = sub_1A4B0B11C;
  uint64_t v41 = v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  v38 = sub_1A4B0B078;
  uint64_t v39 = &unk_1EF8E6FC0;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  id v14 = objc_msgSend(v12, sel_initWithProtocol_forwardingHandler_, &unk_1EF968580, v13);
  _Block_release(v13);
  swift_release();
  swift_release();
  objc_msgSend(v6, sel_setExportedObject_, swift_dynamicCastObjCProtocolUnconditional());

  uint64_t v15 = (void *)sub_1A4CBB29C();
  objc_msgSend(v6, sel_setRemoteObjectInterface_, v15);

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v6;
  *(void *)(v16 + 24) = v3;
  v40 = sub_1A4C90734;
  uint64_t v41 = v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  v38 = sub_1A4B02D48;
  uint64_t v39 = &unk_1EF8E7010;
  uint64_t v17 = _Block_copy(&aBlock);
  id v18 = v6;
  id v19 = v3;
  swift_release();
  objc_msgSend(v18, sel_setInterruptionHandler_, v17);
  _Block_release(v17);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = v19;
  v40 = sub_1A4C9073C;
  uint64_t v41 = v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  v38 = sub_1A4B02D48;
  uint64_t v39 = &unk_1EF8E7060;
  os_log_type_t v21 = _Block_copy(&aBlock);
  id v22 = v18;
  id v23 = v19;
  swift_release();
  objc_msgSend(v22, sel_setInvalidationHandler_, v21);
  _Block_release(v21);
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = v24;
  id v26 = objc_allocWithZone(MEMORY[0x1E4F6E7E8]);
  v40 = sub_1A4B0B124;
  uint64_t v41 = v25;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  v38 = sub_1A4B0B078;
  uint64_t v39 = &unk_1EF8E70B0;
  id v27 = _Block_copy(&aBlock);
  swift_retain();
  objc_msgSend(v26, sel_initWithProtocol_forwardingHandler_, &unk_1EF968410, v27);
  _Block_release(v27);
  swift_release();
  swift_release();
  uint64_t v28 = swift_dynamicCastObjCProtocolUnconditional();
  swift_unknownObjectRelease();
  *(void *)(a2 + 8) = v28;
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = 1;
  *(void *)(v30 + 24) = v29;
  id v31 = objc_allocWithZone(MEMORY[0x1E4F6E7E8]);
  v40 = sub_1A4C908EC;
  uint64_t v41 = v30;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  v38 = sub_1A4B0B078;
  uint64_t v39 = &unk_1EF8E7100;
  uint64_t v32 = _Block_copy(&aBlock);
  swift_retain();
  objc_msgSend(v31, sel_initWithProtocol_forwardingHandler_, &unk_1EF968410, v32);
  _Block_release(v32);
  swift_release();
  swift_release();
  uint64_t v33 = swift_dynamicCastObjCProtocolUnconditional();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(a2 + 16) = v33;
  return result;
}

void sub_1A4B06F08(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_allowableByContactsHandles_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = sub_1A4B3464C;
  v8[3] = &unk_1E5B7B1D0;
  id v6 = *(void **)(a1 + 56);
  v8[4] = *(void *)(a1 + 48);
  id v9 = v5;
  id v10 = v6;
  id v11 = *(id *)(a1 + 64);
  id v7 = v5;
  dispatch_async(MEMORY[0x1E4F14428], v8);
}

uint64_t sub_1A4B06FD8(uint64_t a1, uint64_t a2, void *a3)
{
  id v18 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = objc_msgSend_extension(v18, (const char *)v18, v4, v5);
    id v10 = v6;
    if (v6)
    {
      id v11 = objc_msgSend_extensionPointIdentifier(v6, v7, v8, v9);
      char isEqualToString = objc_msgSend_isEqualToString_(v11, v12, *(void *)(a1 + 32), v13);

      if ((isEqualToString & 1) == 0) {
        objc_msgSend_addObject_(*(void **)(a1 + 40), v15, (uint64_t)v10, v16);
      }
    }
  }

  return MEMORY[0x1F41817F8]();
}

void sub_1A4B0709C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_fetchScreenTimeAppPolicy(WeakRetained, v1, v2, v3);
}

void sub_1A4B07460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B07B30@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1A4B08264((void **)a1);
  *a2 = *(void *)(a1 + 8);

  return swift_unknownObjectRetain();
}

void sub_1A4B07B7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A4CBB07C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  id v7 = (uint64_t *)((char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v7 = sub_1A4CBAFCC();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  char v8 = sub_1A4CBB08C();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
LABEL_13:
    uint64_t v40 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v40, (uint64_t)qword_1EB3F2588);
    uint64_t v41 = sub_1A4CBB01C();
    os_log_type_t v42 = sub_1A4CBB26C();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_1A4AF7000, v41, v42, "Setup not requested due to missing remote proxy", v43, 2u);
      MEMORY[0x1A6264920](v43, -1, -1);
    }
    goto LABEL_15;
  }
  sub_1A4B08264(a1);
  if (*(unsigned char *)(a1 + 24) != 1) {
    return;
  }
  uint64_t v9 = *(void **)a1;
  if (!*(void *)a1) {
    goto LABEL_12;
  }
  aBlock[4] = (uint64_t)sub_1A4C8D2F4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A4C8D300;
  aBlock[3] = (uint64_t)&unk_1EF8E6E30;
  id v10 = _Block_copy(aBlock);
  swift_release();
  id v11 = objc_msgSend(v9, sel_synchronousRemoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1A4CBB39C();
  swift_unknownObjectRelease();
  sub_1A4B0E048(&qword_1EB3F20D8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    if (qword_1EB3F20D0 == -1) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
  uint64_t v12 = aBlock[0];
  id v13 = objc_msgSend(self, sel_mainBundle);
  id v14 = objc_msgSend(v13, sel_bundleIdentifier);

  if (!v14)
  {
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29128]), sel_init);
    id v14 = objc_msgSend(v15, sel_UUIDString);
  }
  uint64_t v16 = sub_1A4CBB0CC();
  unint64_t v18 = v17;

  uint64_t v19 = *(void *)(a1 + 48);
  if (v19)
  {
    uint64_t v20 = *(void *)(a1 + 40);
    uint64_t v55 = *(void *)(a1 + 32);
    uint64_t v21 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v54 = v21;
    sub_1A4B08658(v19);
    if (qword_1EB3F20D0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v22, (uint64_t)qword_1EB3F2588);
    swift_bridgeObjectRetain_n();
    id v23 = sub_1A4CBB01C();
    os_log_type_t v24 = sub_1A4CBB24C();
    int v53 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v51 = v20;
      uint64_t v26 = v25;
      uint64_t v50 = swift_slowAlloc();
      aBlock[0] = v50;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v27 = v16;
      uint64_t v57 = sub_1A4B0BCCC(v16, v18, aBlock);
      v49[2] = (os_log_t)&v58;
      sub_1A4CBB36C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      v49[1] = (os_log_t)(v26 + 14);
      uint64_t v28 = v55;
      id v29 = (id)IMStringFromClientCapabilities();
      uint64_t v30 = sub_1A4CBB0CC();
      v49[0] = v23;
      uint64_t v31 = v12;
      uint64_t v32 = v30;
      uint64_t v52 = v27;
      unint64_t v34 = v33;

      uint64_t v35 = v28;
      uint64_t v36 = v32;
      uint64_t v12 = v31;
      uint64_t v57 = sub_1A4B0BCCC(v36, v34, aBlock);
      sub_1A4CBB36C();
      uint64_t v16 = v52;
      swift_bridgeObjectRelease();
      os_log_t v37 = v49[0];
      _os_log_impl(&dword_1A4AF7000, v49[0], (os_log_type_t)v53, "Dispatching setup request with id: %s capabilities: %s", (uint8_t *)v26, 0x16u);
      uint64_t v38 = v50;
      swift_arrayDestroy();
      MEMORY[0x1A6264920](v38, -1, -1);
      uint64_t v39 = v26;
      uint64_t v20 = v51;
      MEMORY[0x1A6264920](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v35 = v55;
    }
    *(unsigned char *)(a1 + 24) = 0;
    v47 = (void *)swift_allocObject();
    v47[2] = v16;
    v47[3] = v18;
    v47[4] = v35;
    v47[5] = v12;
    v47[6] = v20;
    v47[7] = v19;
    v47[8] = v54;
    v47[9] = v2;
    sub_1A4B08658(v19);
    swift_unknownObjectRetain();
    id v48 = v2;
    sub_1A4CBAFEC();
    swift_release();
    sub_1A4B35388(v19);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v44, (uint64_t)qword_1EB3F2588);
  uint64_t v41 = sub_1A4CBB01C();
  os_log_type_t v45 = sub_1A4CBB26C();
  if (os_log_type_enabled(v41, v45))
  {
    id v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v46 = 0;
    _os_log_impl(&dword_1A4AF7000, v41, v45, "No closure to handle setup complete, not requesting setup", v46, 2u);
    MEMORY[0x1A6264920](v46, -1, -1);
    swift_unknownObjectRelease();
LABEL_15:

    return;
  }

LABEL_23:
  swift_unknownObjectRelease();
}

void sub_1A4B08264(void **a1)
{
  uint64_t v2 = sub_1A4CBB07C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v5 = sub_1A4CBAFCC();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v6 = sub_1A4CBB08C();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  if (*a1) {
    return;
  }
  if (qword_1EB3F20D0 != -1) {
    goto LABEL_12;
  }
LABEL_4:
  uint64_t v7 = sub_1A4CBB03C();
  uint64_t v8 = sub_1A4B0C4D8(v7, (uint64_t)qword_1EB3F2588);
  uint64_t v9 = sub_1A4CBB01C();
  os_log_type_t v10 = sub_1A4CBB24C();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v25[1] = v8;
    uint64_t v13 = v12;
    *(_DWORD *)id v11 = 136315138;
    uint64_t v26 = v12;
    uint64_t v14 = sub_1A4CBB0CC();
    v25[2] = sub_1A4B0BCCC(v14, v15, &v26);
    sub_1A4CBB36C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4AF7000, v9, v10, "Attempting to connect to daemon with mach service %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v13, -1, -1);
    MEMORY[0x1A6264920](v11, -1, -1);
  }

  sub_1A4CBB0CC();
  id v16 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  unint64_t v17 = (void *)sub_1A4CBB0BC();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v16, sel_initWithMachServiceName_options_, v17, 0);

  sub_1A4B06874(v18, (uint64_t)a1);
  uint64_t v19 = *a1;
  id v20 = v18;

  *a1 = v18;
  objc_msgSend(v20, sel_resume);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1A4CBB01C();
  os_log_type_t v23 = sub_1A4CBB24C();
  if (os_log_type_enabled(v22, v23))
  {
    os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v24 = 67109120;
    LODWORD(v26) = [v21 processIdentifier];
    sub_1A4CBB36C();

    _os_log_impl(&dword_1A4AF7000, v22, v23, "Resumed connection for %d", v24, 8u);
    MEMORY[0x1A6264920](v24, -1, -1);
  }
  else
  {

    uint64_t v22 = v21;
  }
}

uint64_t sub_1A4B08658(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void sub_1A4B08DA0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (uint64_t *)(a1 + 32);
  char v6 = objc_msgSend_conversationManager(*(void **)(a1 + 32), a2, a3, a4);
  objc_msgSend_addDelegate_queue_(v6, v7, *v5, MEMORY[0x1E4F14428]);

  if (IMOSLoggingEnabled())
  {
    id v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Posting TUConversations loaded notification for all active conversation we have", buf, 2u);
    }
  }
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v12 = objc_msgSend_conversationManager(*(void **)(a1 + 32), v8, v9, v10, 0);
  id v16 = objc_msgSend_activeConversations(v12, v13, v14, v15);

  uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v23, (uint64_t)v28, 16);
  if (v20)
  {
    uint64_t v21 = *(void *)v24;
    do
    {
      uint64_t v22 = 0;
      do
      {
        if (*(void *)v24 != v21) {
          objc_enumerationMutation(v16);
        }
        objc_msgSend__postMultiWayStateChangedNotification_(*(void **)(a1 + 32), v18, *(void *)(*((void *)&v23 + 1) + 8 * v22++), v19);
      }
      while (v20 != v22);
      uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v18, (uint64_t)&v23, (uint64_t)v28, 16);
    }
    while (v20);
  }
}

uint64_t sub_1A4B0909C(uint64_t a1, uint64_t a2, void *a3)
{
  id v28 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char v6 = objc_msgSend_proxy(v28, (const char *)v28, v4, v5);
    uint64_t v10 = objc_msgSend_bundleIdentifier(v6, v7, v8, v9);

    uint64_t v14 = objc_msgSend_identifier(v28, v11, v12, v13);
    if (objc_msgSend_length(v14, v15, v16, v17) && objc_msgSend_length(v10, v18, v19, v20))
    {
      long long v24 = *(void **)(a1 + 32);
      long long v25 = objc_msgSend_identifier(v28, v21, v22, v23);
      objc_msgSend_setObject_forKey_(v24, v26, (uint64_t)v25, (uint64_t)v10);
    }
  }

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B0917C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v9 = objc_msgSend_chatResolutionPriority(v4, v6, v7, v8);
  if (v9 <= objc_msgSend_chatResolutionPriority(v5, v10, v11, v12))
  {
    uint64_t v17 = objc_msgSend_chatResolutionPriority(v4, v13, v14, v15);
    uint64_t v16 = v17 < objc_msgSend_chatResolutionPriority(v5, v18, v19, v20);
  }
  else
  {
    uint64_t v16 = -1;
  }

  return v16;
}

void sub_1A4B092C0(uint64_t a1)
{
  char v22 = 0;
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = (id)objc_msgSend_immediateNameWithNeedsSuggestedNameFetch_useSuggestedName_(WeakRetained, v4, (uint64_t)&v22, 1);

  if (v22)
  {
    char v6 = *(void **)(a1 + 32);
    id v7 = objc_loadWeakRetained(v2);
    uint64_t v11 = objc_msgSend_displayID(v7, v8, v9, v10);
    id v12 = objc_loadWeakRetained(v2);
    uint64_t v16 = objc_msgSend_ID(v12, v13, v14, v15);
    uint64_t v17 = MEMORY[0x1E4F14428];
    id v18 = MEMORY[0x1E4F14428];
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    v20[2] = sub_1A4B02B9C;
    v20[3] = &unk_1E5B7B5D0;
    objc_copyWeak(&v21, v2);
    v20[4] = *(void *)(a1 + 32);
    objc_msgSend_fetchSuggestedRealNameForDisplayName_messageUID_queue_block_(v6, v19, (uint64_t)v11, (uint64_t)v16, v17, v20);

    objc_destroyWeak(&v21);
  }
}

void sub_1A4B09414(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

Swift::Void __swiftcall DaemonConnection.waitForSetup()()
{
  id v1 = v0;
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_isMainThread);
  if (v3)
  {
    swift_beginAccess();
    sub_1A4B0E048((uint64_t *)&unk_1EB3F2058);
    sub_1A4CBAF8C();
    id v3 = (id)swift_endAccess();
    if (v25 == 1)
    {
      if (qword_1EB3F20D0 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v4, (uint64_t)qword_1EB3F2588);
      id v5 = sub_1A4CBB01C();
      os_log_type_t v6 = sub_1A4CBB24C();
      if (!os_log_type_enabled(v5, v6)) {
        goto LABEL_16;
      }
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      uint64_t v8 = "Already invoking setup on this thread, not blocking";
LABEL_15:
      _os_log_impl(&dword_1A4AF7000, v5, v6, v8, v7, 2u);
      MEMORY[0x1A6264920](v7, -1, -1);
LABEL_16:

      return;
    }
  }
  MEMORY[0x1F4188790](v3);
  sub_1A4CBAFDC();
  sub_1A4B0E048((uint64_t *)&unk_1EB3F20C0);
  sub_1A4CBAFDC();
  uint64_t v9 = (void (*)(uint64_t))aBlock[0];
  if (aBlock[0])
  {
    if (objc_msgSend(v2, sel_isMainThread))
    {
      if (qword_1EB3F20D0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v10, (uint64_t)qword_1EB3F2588);
      uint64_t v11 = sub_1A4CBB01C();
      os_log_type_t v12 = sub_1A4CBB24C();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_1A4AF7000, v11, v12, "Starting to handle setup message", v13, 2u);
        MEMORY[0x1A6264920](v13, -1, -1);
      }

      swift_beginAccess();
      sub_1A4B0E048((uint64_t *)&unk_1EB3F2058);
      sub_1A4CBAF9C();
      uint64_t v14 = swift_endAccess();
      v9(v14);
      sub_1A4B35388((uint64_t)v9);
      swift_beginAccess();
      sub_1A4CBAF9C();
      swift_endAccess();
      sub_1A4CBAFDC();
      id v5 = sub_1A4CBB01C();
      os_log_type_t v6 = sub_1A4CBB24C();
      if (!os_log_type_enabled(v5, v6)) {
        goto LABEL_16;
      }
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      uint64_t v8 = "Finished handling setup message";
      goto LABEL_15;
    }
    sub_1A4B35388(aBlock[0]);
    if (qword_1EB3F20D0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v15, (uint64_t)qword_1EB3F2588);
    uint64_t v16 = sub_1A4CBB01C();
    os_log_type_t v17 = sub_1A4CBB24C();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_1A4AF7000, v16, v17, "Caller needs main queue to wait for setup", v18, 2u);
      MEMORY[0x1A6264920](v18, -1, -1);
    }

    sub_1A4B0C510(0, (unint64_t *)&qword_1EB3F20E8);
    uint64_t v19 = sub_1A4CBB30C();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v1;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_1A4B3556C;
    *(void *)(v21 + 24) = v20;
    aBlock[4] = (uint64_t)sub_1A4B35360;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A4C8E964;
    aBlock[3] = (uint64_t)&unk_1EF8E60D8;
    char v22 = _Block_copy(aBlock);
    id v23 = v1;
    swift_retain();
    swift_release();
    dispatch_sync(v19, v22);

    _Block_release(v22);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
}

id sub_1A4B0AFF0(uint64_t a1, void *a2)
{
  id v2 = a2;
  os_log_type_t v6 = objc_msgSend_lastPathComponent(v2, v3, v4, v5);
  int hasSuffix = objc_msgSend_hasSuffix_(v6, v7, @".bundle", v8);

  if (hasSuffix)
  {
    os_log_type_t v12 = objc_msgSend_bundleWithURL_(MEMORY[0x1E4F28B50], v10, (uint64_t)v2, v11);
  }
  else
  {
    os_log_type_t v12 = 0;
  }

  return v12;
}

uint64_t sub_1A4B0B078(uint64_t a1, uint64_t a2, void *aBlock)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t (*)(void *), uint64_t))(a1 + 32);
  uint64_t v5 = _Block_copy(aBlock);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  swift_retain();
  v4(a2, sub_1A4B0BC20, v6);
  swift_release();

  return swift_release();
}

void sub_1A4B0B11C(const char *a1, uint64_t a2, uint64_t a3)
{
  sub_1A4B0BFAC(a1, a2, a3, v3);
}

void sub_1A4B0B124(const char *a1, void (*a2)(_OWORD *), uint64_t a3)
{
  sub_1A4B0B380(a1, a2, a3, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24));
}

void sub_1A4B0B130(uint64_t a1)
{
  id v2 = v1;
  uint64_t v13 = sub_1A4CBB0CC();
  sub_1A4CBB3FC();
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1A4B0E08C((uint64_t)v15), (v5 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1A4B0E198((uint64_t)v15);
  if (*((void *)&v17 + 1))
  {
    sub_1A4B0E048((uint64_t *)&unk_1E965B5F0);
    if (swift_dynamicCast())
    {
      uint64_t v6 = v13;
      unsigned __int8 v14 = sub_1A4CBB0CC();
      sub_1A4CBB3FC();
      if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1A4B0E08C((uint64_t)v15), (v8 & 1) != 0))
      {
        sub_1A4B0E248(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v16);
      }
      else
      {
        long long v16 = 0u;
        long long v17 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1A4B0E198((uint64_t)v15);
      if (*((void *)&v17 + 1))
      {
        if (swift_dynamicCast()) {
          objc_msgSend(v2, sel_keyTransparencyOptInStateChanged_, v14);
        }
      }
      else
      {
        sub_1A4B0C5F4((uint64_t)&v16);
      }
      return;
    }
  }
  else
  {
    sub_1A4B0C5F4((uint64_t)&v16);
  }
  if (qword_1E965B700 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v9, (uint64_t)qword_1E965B6E0);
  uint64_t v10 = sub_1A4CBB01C();
  os_log_type_t v11 = sub_1A4CBB26C();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v12 = 0;
    _os_log_impl(&dword_1A4AF7000, v10, v11, "Received setup info but it did not contain KT info", v12, 2u);
    MEMORY[0x1A6264920](v12, -1, -1);
  }
}

void sub_1A4B0B380(const char *a1, void (*a2)(_OWORD *), uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = a5 + 16;
  unint64_t v7 = NSStringFromSelector(a1);
  uint64_t v33 = sub_1A4CBB0CC();
  unint64_t v9 = v8;

  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v10, (uint64_t)qword_1EB3F2588);
  swift_bridgeObjectRetain_n();
  os_log_type_t v11 = sub_1A4CBB01C();
  os_log_type_t v12 = sub_1A4CBB25C();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v31 = a3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(void *)&v37[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    if (a4) {
      uint64_t v15 = 0x6E6F7268636E7973;
    }
    else {
      uint64_t v15 = 0x6F7268636E797361;
    }
    if (a4) {
      unint64_t v16 = 0xEB0000000073756FLL;
    }
    else {
      unint64_t v16 = 0xEC00000073756F6ELL;
    }
    v38[0] = sub_1A4B0BCCC(v15, v16, (uint64_t *)v37);
    sub_1A4CBB36C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    v38[0] = sub_1A4B0BCCC(v33, v9, (uint64_t *)v37);
    sub_1A4CBB36C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A4AF7000, v11, v12, "Sending %s message to daemon %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v14, -1, -1);
    uint64_t v17 = v13;
    a3 = v31;
    MEMORY[0x1A6264920](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x1A62649D0](v6);
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    ((void (*)(void))MEMORY[0x1F4188790])();
    swift_retain();
    sub_1A4B0E048((uint64_t *)&unk_1EB3F2048);
    sub_1A4CBAFDC();
    swift_release();
    int v20 = LOBYTE(v37[0]);
    sub_1A4B0B9B8((uint64_t)v37 + 8, (uint64_t)v38);
    sub_1A4B0C654((uint64_t)v38, (uint64_t)&v35);
    if (v36)
    {
      sub_1A4B0C5E4(&v35, v37);
      if (v20)
      {
        sub_1A4B0E248((uint64_t)v37, (uint64_t)&v35);
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v33;
        *(void *)(v21 + 24) = v9;
        *(void *)(v21 + 32) = a2;
        *(void *)(v21 + 40) = a3;
        char v22 = sub_1A4B0C5E4(&v35, (_OWORD *)(v21 + 48));
        MEMORY[0x1F4188790](v22);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_1A4CBAFDC();
        swift_release();
        uint64_t v23 = swift_bridgeObjectRelease();
        if (a4)
        {
          MEMORY[0x1F4188790](v23);
          sub_1A4CBAFDC();
          sub_1A4B0BDA0((uint64_t)v37);
          sub_1A4B0C5F4((uint64_t)v38);

          swift_release();
        }
        else
        {
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = sub_1A4C907C4;
          *(void *)(v30 + 24) = v21;
          swift_retain();
          sub_1A4CBAFEC();
          swift_release();
          swift_release();
          sub_1A4B0BDA0((uint64_t)v37);
          sub_1A4B0C5F4((uint64_t)v38);
        }
        return;
      }
      swift_bridgeObjectRelease();
      a2(v37);

      sub_1A4B0BDA0((uint64_t)v37);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1A4B0C5F4((uint64_t)&v35);
      uint64_t v27 = sub_1A4CBB01C();
      os_log_type_t v28 = sub_1A4CBB26C();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1A4AF7000, v27, v28, "Attempted to send daemon request but proxy unavailable!", v29, 2u);
        MEMORY[0x1A6264920](v29, -1, -1);
      }
    }
    sub_1A4B0C5F4((uint64_t)v38);
    return;
  }
  swift_bridgeObjectRelease();
  long long v24 = sub_1A4CBB01C();
  os_log_type_t v25 = sub_1A4CBB26C();
  if (os_log_type_enabled(v24, v25))
  {
    long long v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v26 = 0;
    _os_log_impl(&dword_1A4AF7000, v24, v25, "Attempted to send daemon request but daemon connection no longer exists!", v26, 2u);
    MEMORY[0x1A6264920](v26, -1, -1);
  }
}

uint64_t sub_1A4B0B9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4B0E048(&qword_1EB3F2040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A4B0BA20(const char *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v7, (uint64_t)qword_1EB3F2588);
  unint64_t v8 = sub_1A4CBB01C();
  os_log_type_t v9 = sub_1A4CBB24C();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v20 = a4;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v21[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    os_log_type_t v12 = NSStringFromSelector(a1);
    uint64_t v13 = sub_1A4CBB0CC();
    uint64_t v14 = a2;
    unint64_t v16 = v15;

    uint64_t v17 = v13;
    a4 = v20;
    sub_1A4B0BCCC(v17, v16, v21);
    sub_1A4CBB36C();
    a2 = v14;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4AF7000, v8, v9, "Processing message from daemon %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v11, -1, -1);
    MEMORY[0x1A6264920](v10, -1, -1);
  }

  uint64_t v18 = *(void *)(a4 + OBJC_IVAR___IMDaemonConnection_listener);
  v21[3] = swift_getObjectType();
  v21[0] = v18;
  swift_unknownObjectRetain();
  a2(v21);
  return sub_1A4B0BDA0((uint64_t)v21);
}

uint64_t sub_1A4B0BC20(void *a1)
{
  return sub_1A4B0BC28(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A4B0BC28(void *a1, uint64_t a2)
{
  sub_1A4B0BC88(a1, a1[3]);
  uint64_t v3 = sub_1A4CBB5DC();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, v3);

  return swift_unknownObjectRelease();
}

void *sub_1A4B0BC88(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1A4B0BCCC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1A4B0BDF0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1A4B0E248((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1A4B0E248((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1A4B0BDA0((uint64_t)v12);
  return v7;
}

uint64_t sub_1A4B0BDA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1A4B0BDF0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A4CBB37C();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1A4CA631C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1A4CBB46C();
  if (!v8)
  {
    sub_1A4CBB4BC();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1A4CBB50C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void sub_1A4B0BFAC(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1A4CBB04C();
  uint64_t v50 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v49 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A4CBB06C();
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790]();
  v47 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a4 + 16;
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1A4CBB03C();
  uint64_t v14 = sub_1A4B0C4D8(v13, (uint64_t)qword_1EB3F2588);
  unint64_t v15 = sub_1A4CBB01C();
  os_log_type_t v16 = sub_1A4CBB25C();
  BOOL v17 = os_log_type_enabled(v15, v16);
  id v46 = a1;
  if (v17)
  {
    uint64_t v44 = a2;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v45 = v10;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v43 = v12;
    uint64_t v21 = v20;
    aBlock[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    v42[0] = v19 + 4;
    v42[1] = v14;
    uint64_t v22 = a3;
    uint64_t v23 = NSStringFromSelector(a1);
    uint64_t v24 = v8;
    uint64_t v25 = sub_1A4CBB0CC();
    unint64_t v27 = v26;

    a3 = v22;
    uint64_t v28 = v25;
    uint64_t v8 = v24;
    a2 = v44;
    uint64_t aBlock[6] = sub_1A4B0BCCC(v28, v27, aBlock);
    sub_1A4CBB36C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A4AF7000, v15, v16, "Receiving message from daemon %s, dispatching to main queue", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v29 = v21;
    uint64_t v12 = v43;
    MEMORY[0x1A6264920](v29, -1, -1);
    uint64_t v30 = v19;
    uint64_t v10 = v45;
    MEMORY[0x1A6264920](v30, -1, -1);
  }

  swift_beginAccess();
  uint64_t v31 = MEMORY[0x1A62649D0](v12);
  if (v31)
  {
    uint64_t v32 = (void *)v31;
    sub_1A4B0C510(0, (unint64_t *)&qword_1EB3F20E8);
    uint64_t v33 = (void *)sub_1A4CBB30C();
    unint64_t v34 = (void *)swift_allocObject();
    v34[2] = v46;
    v34[3] = a2;
    v34[4] = a3;
    v34[5] = v32;
    aBlock[4] = (uint64_t)sub_1A4B02D8C;
    aBlock[5] = (uint64_t)v34;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A4B02D48;
    aBlock[3] = (uint64_t)&unk_1EF8E7290;
    long long v35 = _Block_copy(aBlock);
    swift_retain();
    id v36 = v32;
    swift_release();
    os_log_t v37 = v47;
    sub_1A4CBB05C();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1A4B0C59C((unint64_t *)&qword_1EB3F20F0, MEMORY[0x1E4FBCB00]);
    sub_1A4B0E048(&qword_1EB3F20F8);
    sub_1A4B0C54C((unint64_t *)&qword_1EB3F2100, &qword_1EB3F20F8);
    uint64_t v38 = v49;
    sub_1A4CBB3BC();
    MEMORY[0x1A6262830](0, v37, v38, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v8);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v10);
  }
  else
  {
    uint64_t v39 = sub_1A4CBB01C();
    os_log_type_t v40 = sub_1A4CBB26C();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_1A4AF7000, v39, v40, "Got daemon request but daemon connection no longer exists!", v41, 2u);
      MEMORY[0x1A6264920](v41, -1, -1);
    }
  }
}

uint64_t sub_1A4B0C4D8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1A4B0C510(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1A4B0C54C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A4B0E364(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4B0C59C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_1A4B0C5E4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A4B0C5F4(uint64_t a1)
{
  uint64_t v2 = sub_1A4B0E048(&qword_1EB3F2040);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A4B0C654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4B0E048(&qword_1EB3F2040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1A4B0C6BC(int a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v7 = qword_1E965B478;
    uint64_t v8 = v3;
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v9, (uint64_t)qword_1E9660AD0);
    uint64_t v10 = sub_1A4CBB01C();
    os_log_type_t v11 = sub_1A4CBB26C();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1A4AF7000, v10, v11, "state dictionary is nil when creating CloudKitSyncState", v12, 2u);
      MEMORY[0x1A6264920](v12, -1, -1);
    }
  }
  v3[OBJC_IVAR___IMCloudKitSyncState_accountEnabled] = a1 & 1;
  uint64_t v13 = sub_1A4CBB0CC();
  if (a2)
  {
    *(void *)&long long v162 = v13;
    *((void *)&v162 + 1) = v14;
    sub_1A4CBB3FC();
    if (*(void *)(a2 + 16) && (unint64_t v15 = sub_1A4B0E08C((uint64_t)v160), (v16 & 1) != 0))
    {
      sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v15, (uint64_t)&v162);
    }
    else
    {
      long long v162 = 0u;
      long long v163 = 0u;
    }
    sub_1A4B0E198((uint64_t)v160);
    sub_1A4B0E048(&qword_1EB3F2040);
    int v17 = swift_dynamicCast();
    uint64_t v18 = v158;
    if (!v17) {
      uint64_t v18 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
  }
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_accountStatus] = v18;
  uint64_t v19 = sub_1A4CBB0CC();
  if (a2)
  {
    *(void *)&long long v162 = v19;
    *((void *)&v162 + 1) = v20;
    sub_1A4CBB3FC();
    if (*(void *)(a2 + 16) && (unint64_t v21 = sub_1A4B0E08C((uint64_t)v160), (v22 & 1) != 0))
    {
      sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v21, (uint64_t)&v162);
    }
    else
    {
      long long v162 = 0u;
      long long v163 = 0u;
    }
    sub_1A4B0E198((uint64_t)v160);
    sub_1A4B0E048(&qword_1EB3F2040);
    char v23 = swift_dynamicCast() & v158;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v23 = 0;
  }
  v3[OBJC_IVAR___IMCloudKitSyncState_hasExited] = v23;
  uint64_t v24 = sub_1A4CBB0CC();
  int v157 = a1;
  if (a2)
  {
    *(void *)&long long v162 = v24;
    *((void *)&v162 + 1) = v25;
    sub_1A4CBB3FC();
    if (*(void *)(a2 + 16) && (unint64_t v26 = sub_1A4B0E08C((uint64_t)v160), (v27 & 1) != 0))
    {
      sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v26, (uint64_t)&v162);
    }
    else
    {
      long long v162 = 0u;
      long long v163 = 0u;
    }
    sub_1A4B0E198((uint64_t)v160);
    sub_1A4B0E048(&qword_1EB3F2040);
    sub_1A4B0E048(&qword_1E965B498);
    if (swift_dynamicCast()) {
      uint64_t v28 = (void *)v158;
    }
    else {
      uint64_t v28 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = 0;
  }
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState__exitDate] = v28;
  uint64_t v29 = sub_1A4CBB0CC();
  if (!a2)
  {
    id v43 = v28;
    swift_bridgeObjectRelease();
    unint64_t v34 = 0;
    *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastSyncDate] = 0;
    long long v162 = 0u;
    long long v163 = 0u;
LABEL_51:
    sub_1A4B0E2A4((uint64_t)&v162, &qword_1EB3F2040);
    goto LABEL_52;
  }
  *(void *)&long long v162 = v29;
  *((void *)&v162 + 1) = v30;
  id v31 = v28;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v32 = sub_1A4B0E08C((uint64_t)v160), (v33 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v32, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  sub_1A4B0E048(&qword_1E965B498);
  if (swift_dynamicCast()) {
    unint64_t v34 = (void *)v158;
  }
  else {
    unint64_t v34 = 0;
  }
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastSyncDate] = v34;
  uint64_t v158 = sub_1A4CBB0CC();
  char v159 = v35;
  id v36 = v34;
  swift_bridgeObjectRetain();
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v37 = sub_1A4B0E08C((uint64_t)v160), (v38 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v37, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A4B0E198((uint64_t)v160);
  if (!*((void *)&v163 + 1)) {
    goto LABEL_51;
  }
  sub_1A4B0E048((uint64_t *)&unk_1E965B5F0);
  if (swift_dynamicCast())
  {
    uint64_t v39 = v160[0];
    *(void *)&long long v162 = sub_1A4CBB0CC();
    *((void *)&v162 + 1) = v40;
    swift_bridgeObjectRetain();
    sub_1A4CBB3FC();
    v155 = v34;
    if (*(void *)(v39 + 16) && (unint64_t v41 = sub_1A4B0E08C((uint64_t)v160), (v42 & 1) != 0))
    {
      sub_1A4B0E248(*(void *)(v39 + 56) + 32 * v41, (uint64_t)&v162);
    }
    else
    {
      long long v162 = 0u;
      long long v163 = 0u;
    }
    sub_1A4B0E198((uint64_t)v160);
    sub_1A4B0E048(&qword_1EB3F2040);
    sub_1A4B0E048(&qword_1E965B490);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      if ((v159 & 1) == 0)
      {
        id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9C8]), sel_initWithTimeIntervalSince1970_, *(double *)&v158);
LABEL_60:
        *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastFullSyncDate] = v47;
        *(void *)&long long v162 = sub_1A4CBB0CC();
        *((void *)&v162 + 1) = v48;
        swift_bridgeObjectRetain();
        sub_1A4CBB3FC();
        if (*(void *)(v39 + 16) && (unint64_t v49 = sub_1A4B0E08C((uint64_t)v160), (v50 & 1) != 0))
        {
          sub_1A4B0E248(*(void *)(v39 + 56) + 32 * v49, (uint64_t)&v162);
        }
        else
        {
          long long v162 = 0u;
          long long v163 = 0u;
        }
        sub_1A4B0E198((uint64_t)v160);
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          if ((v159 & 1) == 0)
          {
            id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9C8]), sel_initWithTimeIntervalSince1970_, *(double *)&v158);
LABEL_69:
            *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastFullPartialSyncDate] = v51;
            *(void *)&long long v162 = sub_1A4CBB0CC();
            *((void *)&v162 + 1) = v52;
            swift_bridgeObjectRetain();
            sub_1A4CBB3FC();
            if (*(void *)(v39 + 16) && (unint64_t v53 = sub_1A4B0E08C((uint64_t)v160), (v54 & 1) != 0))
            {
              sub_1A4B0E248(*(void *)(v39 + 56) + 32 * v53, (uint64_t)&v162);
            }
            else
            {
              long long v162 = 0u;
              long long v163 = 0u;
            }
            sub_1A4B0E198((uint64_t)v160);
            sub_1A4B0E048(&qword_1E965B4A0);
            if (swift_dynamicCast())
            {
              uint64_t v55 = (void *)v158;
            }
            else
            {
              uint64_t v55 = 0;
              uint64_t v158 = 1;
            }
            swift_bridgeObjectRelease();
            *(void *)&long long v162 = sub_1A4CBB0CC();
            *((void *)&v162 + 1) = v56;
            sub_1A4CBB3FC();
            if (*(void *)(v39 + 16) && (unint64_t v57 = sub_1A4B0E08C((uint64_t)v160), (v58 & 1) != 0))
            {
              sub_1A4B0E248(*(void *)(v39 + 56) + 32 * v57, (uint64_t)&v162);
            }
            else
            {
              long long v162 = 0u;
              long long v163 = 0u;
            }
            sub_1A4B0E198((uint64_t)v160);
            if (swift_dynamicCast())
            {
              uint64_t v59 = (void *)v158;
              swift_bridgeObjectRelease();
              if (v55)
              {

                if (!v158)
                {
                  char v60 = 1;
LABEL_88:
                  v3[OBJC_IVAR___IMCloudKitSyncState__isBetweenInitialAndFullSync] = v60;
                  uint64_t v44 = sub_1A4CBB0CC();
                  unint64_t v34 = v155;
                  goto LABEL_89;
                }
              }
            }
            else
            {
              char v60 = 1;
              uint64_t v158 = 1;
              swift_bridgeObjectRelease();
              if (v55)
              {
LABEL_87:

                goto LABEL_88;
              }
              uint64_t v59 = 0;
            }
            char v60 = 0;
            uint64_t v55 = v59;
            goto LABEL_87;
          }
        }
        else
        {
          uint64_t v158 = 0;
          swift_bridgeObjectRelease();
        }
        id v51 = 0;
        goto LABEL_69;
      }
    }
    else
    {
      uint64_t v158 = 0;
      char v159 = 0;
      swift_bridgeObjectRelease();
    }
    id v47 = 0;
    goto LABEL_60;
  }
LABEL_52:
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastFullSyncDate] = 0;
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState__lastFullPartialSyncDate] = 0;
  v3[OBJC_IVAR___IMCloudKitSyncState__isBetweenInitialAndFullSync] = 0;
  uint64_t v44 = sub_1A4CBB0CC();
  if (!a2)
  {
    swift_bridgeObjectRelease();
    char v46 = 0;
    goto LABEL_94;
  }
LABEL_89:
  *(void *)&long long v162 = v44;
  *((void *)&v162 + 1) = v45;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v61 = sub_1A4B0E08C((uint64_t)v160), (v62 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v61, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  char v46 = swift_dynamicCast() & v158;
LABEL_94:
  v3[OBJC_IVAR___IMCloudKitSyncState_isDisablingDevices] = v46;
  uint64_t v63 = sub_1A4CBB0CC();
  if (!a2)
  {
    swift_bridgeObjectRelease();
LABEL_103:
    uint64_t v67 = 0;
    goto LABEL_104;
  }
  *(void *)&long long v162 = v63;
  *((void *)&v162 + 1) = v64;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v65 = sub_1A4B0E08C((uint64_t)v160), (v66 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v65, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_103;
  }
  uint64_t v67 = v158;
  if (v158 < 0)
  {
LABEL_207:
    sub_1A4CBB4BC();
    __break(1u);
    goto LABEL_208;
  }
LABEL_104:
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncControllerSyncState] = v67;
  uint64_t v68 = sub_1A4CBB0CC();
  if (a2)
  {
    *(void *)&long long v162 = v68;
    *((void *)&v162 + 1) = v69;
    sub_1A4CBB3FC();
    if (*(void *)(a2 + 16) && (unint64_t v70 = sub_1A4B0E08C((uint64_t)v160), (v71 & 1) != 0))
    {
      sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v70, (uint64_t)&v162);
    }
    else
    {
      long long v162 = 0u;
      long long v163 = 0u;
    }
    sub_1A4B0E198((uint64_t)v160);
    sub_1A4B0E048(&qword_1EB3F2040);
    int v72 = swift_dynamicCast();
    uint64_t v73 = v158;
    if (!v72) {
      uint64_t v73 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v73 = 0;
  }
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncControllerRecordType] = v73;
  uint64_t v74 = sub_1A4CBB0CC();
  if (!a2)
  {
    swift_bridgeObjectRelease();
    *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncControllerSyncType] = 0;
    if ((v46 & 1) == 0)
    {
      sub_1A4CBB0CC();
      swift_bridgeObjectRelease();
      uint64_t v83 = 0;
      goto LABEL_131;
    }
LABEL_125:
    uint64_t v83 = 2;
    goto LABEL_131;
  }
  *(void *)&long long v162 = v74;
  *((void *)&v162 + 1) = v75;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v76 = sub_1A4B0E08C((uint64_t)v160), (v77 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v76, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  int v78 = swift_dynamicCast();
  uint64_t v79 = v158;
  if (!v78) {
    uint64_t v79 = 0;
  }
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncControllerSyncType] = v79;
  if (v46) {
    goto LABEL_125;
  }
  *(void *)&long long v162 = sub_1A4CBB0CC();
  *((void *)&v162 + 1) = v80;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v81 = sub_1A4B0E08C((uint64_t)v160), (v82 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v81, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  int v84 = swift_dynamicCast();
  uint64_t v83 = v158;
  if (!v84) {
    uint64_t v83 = 0;
  }
LABEL_131:
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_changingEnabledState] = v83;
  uint64_t v85 = sub_1A4CBB0CC();
  if (!a2)
  {
    swift_bridgeObjectRelease();
    sub_1A4CBB0CC();
    swift_bridgeObjectRelease();
    sub_1A4CBB0CC();
    swift_bridgeObjectRelease();
    sub_1A4CBB0CC();
    swift_bridgeObjectRelease();
    sub_1A4CBB0CC();
    swift_bridgeObjectRelease();
    sub_1A4CBB0CC();
    swift_bridgeObjectRelease();
    LOBYTE(v103) = 0;
    char v108 = 0;
    char v110 = v157;
    goto LABEL_162;
  }
  *(void *)&long long v162 = v85;
  *((void *)&v162 + 1) = v86;
  sub_1A4CBB3FC();
  v156 = v34;
  if (*(void *)(a2 + 16) && (unint64_t v87 = sub_1A4B0E08C((uint64_t)v160), (v88 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v87, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  char v89 = swift_dynamicCast();
  *(void *)&long long v162 = sub_1A4CBB0CC();
  *((void *)&v162 + 1) = v90;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v91 = sub_1A4B0E08C((uint64_t)v160), (v92 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v91, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  unsigned __int8 v93 = swift_dynamicCast();
  *(void *)&long long v162 = sub_1A4CBB0CC();
  *((void *)&v162 + 1) = v94;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v95 = sub_1A4B0E08C((uint64_t)v160), (v96 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v95, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  unsigned __int8 v154 = swift_dynamicCast();
  *(void *)&long long v162 = sub_1A4CBB0CC();
  *((void *)&v162 + 1) = v97;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v98 = sub_1A4B0E08C((uint64_t)v160), (v99 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v98, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  char v153 = swift_dynamicCast();
  *(void *)&long long v162 = sub_1A4CBB0CC();
  *((void *)&v162 + 1) = v100;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v101 = sub_1A4B0E08C((uint64_t)v160), (v102 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v101, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  int v103 = (v89 & v158);
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  char v104 = swift_dynamicCast();
  *(void *)&long long v162 = sub_1A4CBB0CC();
  *((void *)&v162 + 1) = v105;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v106 = sub_1A4B0E08C((uint64_t)v160), (v107 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v106, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  char v108 = v93 & v158;
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  char v109 = swift_dynamicCast();
  char v110 = v157;
  if ((v157 & v103 & 1) == 0)
  {
    unint64_t v34 = v156;
LABEL_162:
    v3[OBJC_IVAR___IMCloudKitSyncState_syncState] = 1;
    if (v110) {
      goto LABEL_163;
    }
LABEL_183:
    if (qword_1E965B478 != -1) {
      swift_once();
    }
    uint64_t v123 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v123, (uint64_t)qword_1E9660AD0);
    v118 = sub_1A4CBB01C();
    os_log_type_t v119 = sub_1A4CBB26C();
    if (!os_log_type_enabled(v118, v119)) {
      goto LABEL_188;
    }
    v120 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v120 = 0;
    v121 = "Account not enabled or not eligible for truth zone, setting sync status to stopped";
LABEL_187:
    _os_log_impl(&dword_1A4AF7000, v118, v119, v121, v120, 2u);
    MEMORY[0x1A6264920](v120, -1, -1);
LABEL_188:

    goto LABEL_189;
  }
  if ((v93 & v158) == 0)
  {
    v3[OBJC_IVAR___IMCloudKitSyncState_syncState] = 2;
    unint64_t v34 = v156;
    if (v157) {
      goto LABEL_170;
    }
    goto LABEL_183;
  }
  if ((v154 & v158) != 0)
  {
    uint64_t v111 = OBJC_IVAR___IMCloudKitSyncState_syncState;
    char v112 = 4;
  }
  else
  {
    uint64_t v111 = OBJC_IVAR___IMCloudKitSyncState_syncState;
    if (((v153 & v158) | (v104 & v158) | (v109 & v158)) == 1) {
      char v112 = 5;
    }
    else {
      char v112 = 3;
    }
  }
  v3[v111] = v112;
  char v108 = 1;
  LOBYTE(v103) = 1;
  unint64_t v34 = v156;
  if ((v157 & 1) == 0) {
    goto LABEL_183;
  }
LABEL_163:
  if ((v103 & 1) == 0) {
    goto LABEL_183;
  }
  if ((v108 & 1) == 0)
  {
LABEL_170:
    if (qword_1E965B478 != -1) {
      swift_once();
    }
    uint64_t v117 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v117, (uint64_t)qword_1E9660AD0);
    v118 = sub_1A4CBB01C();
    os_log_type_t v119 = sub_1A4CBB26C();
    if (!os_log_type_enabled(v118, v119)) {
      goto LABEL_188;
    }
    v120 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v120 = 0;
    v121 = "Syncing disabled, setting sync status to stopped";
    goto LABEL_187;
  }
  uint64_t v113 = sub_1A4CBB0CC();
  if (!a2)
  {
    swift_bridgeObjectRelease();
LABEL_189:
    uint64_t v122 = 0;
    goto LABEL_190;
  }
  *(void *)&long long v162 = v113;
  *((void *)&v162 + 1) = v114;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v115 = sub_1A4B0E08C((uint64_t)v160), (v116 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v115, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_189;
  }
  uint64_t v122 = v158;
  if (v158 < 0) {
    goto LABEL_207;
  }
LABEL_190:
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncStatus] = v122;
  uint64_t v124 = sub_1A4CBB0CC();
  if (!a2)
  {
    swift_bridgeObjectRelease();
LABEL_199:
    uint64_t v128 = 0;
    goto LABEL_200;
  }
  *(void *)&long long v162 = v124;
  *((void *)&v162 + 1) = v125;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v126 = sub_1A4B0E08C((uint64_t)v160), (v127 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v126, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_199;
  }
  uint64_t v128 = v158;
  if (v158 < 0) {
    goto LABEL_207;
  }
LABEL_200:
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncJobState] = v128;
  uint64_t v129 = sub_1A4CBB0CC();
  if (a2)
  {
    *(void *)&long long v162 = v129;
    *((void *)&v162 + 1) = v130;
    sub_1A4CBB3FC();
    if (*(void *)(a2 + 16) && (unint64_t v131 = sub_1A4B0E08C((uint64_t)v160), (v132 & 1) != 0))
    {
      sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v131, (uint64_t)&v162);
    }
    else
    {
      long long v162 = 0u;
      long long v163 = 0u;
    }
    sub_1A4B0E198((uint64_t)v160);
    sub_1A4B0E048(&qword_1EB3F2040);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_209;
    }
    uint64_t v133 = v158;
    if ((v158 & 0x8000000000000000) == 0) {
      goto LABEL_210;
    }
    goto LABEL_207;
  }
LABEL_208:
  swift_bridgeObjectRelease();
LABEL_209:
  uint64_t v133 = 0;
LABEL_210:
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_syncType] = v133;
  uint64_t v134 = sub_1A4CBB0CC();
  if (a2)
  {
    *(void *)&long long v162 = v134;
    *((void *)&v162 + 1) = v135;
    sub_1A4CBB3FC();
    if (*(void *)(a2 + 16) && (unint64_t v136 = sub_1A4B0E08C((uint64_t)v160), (v137 & 1) != 0))
    {
      sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v136, (uint64_t)&v162);
    }
    else
    {
      long long v162 = 0u;
      long long v163 = 0u;
    }
    sub_1A4B0E198((uint64_t)v160);
    sub_1A4B0E048(&qword_1EB3F2040);
    char v138 = swift_dynamicCast() & v158;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v138 = 0;
  }
  v3[OBJC_IVAR___IMCloudKitSyncState_hasAvailableRecordsToDownload] = v138;
  uint64_t v139 = sub_1A4CBB0CC();
  if (!a2)
  {
    swift_bridgeObjectRelease();
    *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_errors] = 0;
    long long v162 = 0u;
    long long v163 = 0u;
    sub_1A4B0E2A4((uint64_t)&v162, &qword_1EB3F2040);
    *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_statistics] = 0;
    long long v162 = 0u;
    long long v163 = 0u;
LABEL_235:
    sub_1A4B0E2A4((uint64_t)&v162, &qword_1EB3F2040);
    goto LABEL_236;
  }
  *(void *)&long long v162 = v139;
  *((void *)&v162 + 1) = v140;
  sub_1A4CBB3FC();
  if (*(void *)(a2 + 16) && (unint64_t v141 = sub_1A4B0E08C((uint64_t)v160), (v142 & 1) != 0))
  {
    sub_1A4B0E248(*(void *)(a2 + 56) + 32 * v141, (uint64_t)&v162);
  }
  else
  {
    long long v162 = 0u;
    long long v163 = 0u;
  }
  sub_1A4B0E198((uint64_t)v160);
  sub_1A4B0E048(&qword_1EB3F2040);
  sub_1A4B0E048(&qword_1E965B488);
  if ((swift_dynamicCast() & 1) != 0 && v158)
  {
    v143 = self;
    sub_1A4B0E048(&qword_1E965B480);
    v144 = (void *)sub_1A4CBB14C();
    sub_1A4C974D0(v158);
    id v145 = objc_msgSend(v143, sel_errorArrayFromSerializedErrorArray_im_, v144);

    sub_1A4B0E048(&qword_1E965B4A8);
    uint64_t v146 = sub_1A4CBB15C();

    *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_errors] = v146;
  }
  else
  {
    *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_errors] = 0;
  }
  sub_1A4CBB0CC();
  swift_bridgeObjectRetain();
  sub_1A4CBB3FC();
  sub_1A4B0E300((uint64_t)v160, a2, &v162);
  swift_bridgeObjectRelease();
  sub_1A4B0E198((uint64_t)v160);
  if (*((void *)&v163 + 1))
  {
    sub_1A4B0E048((uint64_t *)&unk_1E965B5F0);
    if (swift_dynamicCast())
    {
      id v147 = objc_allocWithZone((Class)IMCloudKitSyncStatistics);
      v148 = (void *)sub_1A4CBB09C();
      swift_bridgeObjectRelease();
      id v149 = objc_msgSend(v147, sel_initWithStatisticsDictionary_, v148);

      *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_statistics] = v149;
      goto LABEL_232;
    }
  }
  else
  {
    sub_1A4B0E2A4((uint64_t)&v162, &qword_1EB3F2040);
  }
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_statistics] = 0;
LABEL_232:
  sub_1A4CBB0CC();
  sub_1A4CBB3FC();
  sub_1A4B0E300((uint64_t)v160, a2, &v162);
  swift_bridgeObjectRelease();
  sub_1A4B0E198((uint64_t)v160);
  if (!*((void *)&v163 + 1)) {
    goto LABEL_235;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_236:
    uint64_t v150 = 0;
    goto LABEL_237;
  }
  uint64_t v150 = v160[0];
LABEL_237:
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncState_lastDownloadProgress] = v150;

  v161.receiver = v3;
  v161.super_class = (Class)IMCloudKitSyncState;
  id v151 = objc_msgSendSuper2(&v161, sel_init);

  return v151;
}

uint64_t sub_1A4B0E048(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1A4B0E08C(uint64_t a1)
{
  uint64_t v2 = sub_1A4CBB3DC();

  return sub_1A4B0E0D0(a1, v2);
}

unint64_t sub_1A4B0E0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1A4B0E1EC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1A6262900](v9, a1);
      sub_1A4B0E198((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1A4B0E198(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A4B0E1EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A4B0E248(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A4B0E2A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1A4B0E048(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_1A4B0E300@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_1A4B0E08C(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_1A4B0E248(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1A4B0E364(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void sub_1A4B0E400(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___IMKeyTransparencyController_state);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 40));
  int v5 = *(unsigned __int8 *)(v4 + 17);
  *(unsigned char *)(v4 + 17) = a1;
  char v6 = *(unsigned char *)(v4 + 16) ^ 1;
  *(unsigned char *)(v4 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 40));
  swift_release();
  if (v5 != v3 || (v6 & 1) != 0)
  {
    if (qword_1E965B700 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v7, (uint64_t)qword_1E965B6E0);
    uint64_t v8 = sub_1A4CBB01C();
    os_log_type_t v9 = sub_1A4CBB25C();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 67174913;
      sub_1A4CBB36C();
      *(_WORD *)(v10 + 8) = 1026;
      swift_beginAccess();
      sub_1A4CBB36C();
      _os_log_impl(&dword_1A4AF7000, v8, v9, "Key transparency opt-in state changed to %{BOOL,private}d. Initial load? %{BOOL,public}d", (uint8_t *)v10, 0xEu);
      MEMORY[0x1A6264920](v10, -1, -1);
    }

    sub_1A4B00AB8(a1 & 1);
  }
}

void sub_1A4B0E5B8(uint64_t a1)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = objc_msgSend_count(*(void **)(a1 + 40), v5, v6, v7);
      *(_DWORD *)buf = 138412546;
      uint64_t v25 = v8;
      __int16 v26 = 2048;
      uint64_t v27 = v9;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Matching extensions (%@): %lu", buf, 0x16u);
    }
  }
  uint64_t v10 = objc_msgSend_stringWithFormat_(NSString, v2, @"loadAppExtensionForProxies_%@", v3, *(void *)(a1 + 32));
  objc_msgSend_startTimingForKey_(*(void **)(a1 + 48), v11, (uint64_t)v10, v12);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  objc_msgSend__updatePluginsForExtensions_extensionPoint_precachedBalloonAppExtensions_(WeakRetained, v14, *(void *)(a1 + 40), *(void *)(a1 + 32), *(void *)(a1 + 56));

  objc_msgSend_stopTimingForKey_(*(void **)(a1 + 48), v15, (uint64_t)v10, v16);
  uint64_t v20 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v17, v18, v19);
  objc_msgSend_postNotificationName_object_(v20, v21, @"__kIMBalloonPluginExtensionsLoaded", *(void *)(a1 + 64));

  if (IMOSLoggingEnabled())
  {
    char v22 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      uint64_t v23 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 138412290;
      uint64_t v25 = v23;
      _os_log_impl(&dword_1A4AF7000, v22, OS_LOG_TYPE_INFO, "3rd party app discovery time: %@", buf, 0xCu);
    }
  }
}

void sub_1A4B0FA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B0FF68(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_map(*(void **)(a1 + 32), a2, a3, a4);
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = objc_msgSend_allValues(v11, v5, v6, v7);
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
}

void sub_1A4B0FFD0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_map(*(void **)(a1 + 32), a2, a3, a4);
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = objc_msgSend_allKeys(v11, v5, v6, v7);
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
}

void sub_1A4B10038(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_map(*(void **)(a1 + 32), a2, a3, a4);
  id v13 = (id)objc_claimAutoreleasedReturnValue();
  id v11 = objc_msgSend_copy(v13, v5, v6, v7);
  uint64_t v12 = v11;
  if (!v11)
  {
    uint64_t v12 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v8, v9, v10);
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v12);
  if (!v11) {
}
  }

void sub_1A4B100D0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  objc_msgSend_map(v4, v7, v8, v9);
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKey_(v11, v10, (uint64_t)v5, (uint64_t)v6);
}

void sub_1A4B1014C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_map(*(void **)(a1 + 32), a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKey_(v6, v5, *(void *)(a1 + 40), *(void *)(a1 + 48));
}

void sub_1A4B101A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_map(*(void **)(a1 + 32), a2, a3, a4);
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = objc_msgSend_objectForKey_(v10, v5, *(void *)(a1 + 40), v6);
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_1A4B10554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B119DC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long buf, int a14, __int16 a15, __int16 a16, id a17, long long a18)
{
  if (a2 == 1)
  {
    id v18 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v18, v20, v21, v22);
        id v23 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v18, v24, v25, v26);
        id v27 = (id)objc_claimAutoreleasedReturnValue();
        id v31 = objc_msgSend_userInfo(v18, v28, v29, v30);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v18;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v23;
        a16 = 2112;
        a17 = v27;
        LOWORD(a18) = 2112;
        *(void *)((char *)&a18 + 2) = v31;
        WORD5(a18) = 2080;
        *(void *)((char *)&a18 + 12) = "-[IMAccount updateCapabilities:]";
        _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B119A0);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B124C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long buf, int a14, __int16 a15, __int16 a16, uint64_t a17, long long a18)
{
  if (a2 == 1)
  {
    id v18 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v18, v20, v21, v22);
        id v31 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v18, v23, v24, v25);
        id v29 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v30 = objc_msgSend_userInfo(v18, v26, v27, v28);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v18;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v31;
        a16 = 2112;
        a17 = (uint64_t)v29;
        LOWORD(a18) = 2112;
        *(void *)((char *)&a18 + 2) = v30;
        WORD5(a18) = 2080;
        *(void *)((char *)&a18 + 12) = "-[IMAccount setCurrentAccountStatus:]";
        _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B123CCLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4B12DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A4B13480(uint64_t a1, void *a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v8 = objc_msgSend_daemonController(v3, v5, v6, v7);
  uint64_t v12 = v8;
  if (v2) {
    objc_msgSend_synchronousReplyingRemoteDaemon(v8, v9, v10, v11);
  }
  else {
    objc_msgSend_replyingRemoteDaemon(v8, v9, v10, v11);
  }
  id v15 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_loadRecoverableMessagesMetadataWithQueryID_(v15, v13, (uint64_t)v4, v14);
}

void sub_1A4B137C0(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A4B135D8);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4B13AE4(uint64_t a1, int a2, void *a3, void *a4)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  uint64_t v11 = v8;
  if (a2)
  {
    uint64_t v12 = objc_msgSend_objectForKeyedSubscript_(v8, v9, @"recoverableMessagesMetadata", v10);
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v20 = 0x2020000000;
    char v21 = 0;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    v17[2] = sub_1A4B88468;
    v17[3] = &unk_1E5B7C488;
    char v18 = *(unsigned char *)(a1 + 48);
    void v17[4] = *(void *)(a1 + 32);
    v17[5] = &buf;
    objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v12, v13, (uint64_t)v17, v14);
    _Block_object_dispose(&buf, 8);
  }
  else if (IMOSLoggingEnabled())
  {
    id v15 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v7;
      _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to retrieve recoverable message count: %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v16 = *(void *)(a1 + 40);
  if (v16) {
    (*(void (**)(void))(v16 + 16))();
  }
}

uint64_t sub_1A4B13DE4(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend_muteIdentifiersForChat_(a1, a2, a3, a4);
  uint64_t isMutedChatForMuteIdentifiers = objc_msgSend_isMutedChatForMuteIdentifiers_(a1, v6, (uint64_t)v5, v7);

  return isMutedChatForMuteIdentifiers;
}

id sub_1A4B13E28(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_chatStyle(v4, v5, v6, v7);
  uint64_t v12 = objc_msgSend_groupID(v4, v9, v10, v11);
  uint64_t v16 = objc_msgSend_participants(v4, v13, v14, v15);
  uint64_t v19 = objc_msgSend_arrayByApplyingSelector_(v16, v17, (uint64_t)&sel_ID, v18);

  id v23 = objc_msgSend_lastAddressedHandleID(v4, v20, v21, v22);
  uint64_t v27 = objc_msgSend_originalGroupID(v4, v24, v25, v26);
  id v31 = objc_msgSend_chatIdentifier(v4, v28, v29, v30);

  char v33 = objc_msgSend_muteIdentifiersForChatStyle_groupID_participantIDs_lastAddressedHandleID_originalGroupID_chatIdentifier_(a1, v32, v8, (uint64_t)v12, v19, v23, v27, v31);

  return v33;
}

void sub_1A4B146C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1A4B147B0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v5 = objc_msgSend_policyCache(*(void **)(a1 + 32), a2, a3, a4);
  uint64_t v8 = objc_msgSend_chatForConversationContext_(v5, v6, *(void *)(a1 + 40), v7);

  if (v8)
  {
    uint64_t v12 = objc_msgSend_allowedByScreenTime(*(void **)(a1 + 40), v9, v10, v11);
    if (IMOSLoggingEnabled())
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        uint64_t v16 = @"NO";
        if (v12) {
          uint64_t v16 = @"YES";
        }
        int v22 = 138412546;
        id v23 = v8;
        __int16 v24 = 2112;
        uint64_t v25 = v16;
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Updating chat %@ because Comm Limit policy changed to allowed = %@", (uint8_t *)&v22, 0x16u);
      }
    }
    objc_msgSend_setAllowedByScreenTime_(v8, v13, v12, v14);
  }
  else if (IMOSLoggingEnabled())
  {
    int v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      uint64_t v21 = objc_msgSend_allowedByContactsHandle(*(void **)(a1 + 40), v18, v19, v20);
      int v22 = 138412290;
      id v23 = v21;
      _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Could not find chat for conversation context with allowed by contacts handle: %@. unregistering for Communication Limit tracking for that chat identifier.", (uint8_t *)&v22, 0xCu);
    }
  }
}

uint64_t sub_1A4B1497C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    long long v74 = xmmword_1E5B7DDF8;
    long long v75 = *(_OWORD *)off_1E5B7DE08;
    uint64_t v76 = 446;
    uint64_t v7 = NSString;
    uint64_t v8 = IMFileLocationTrimFileName();
    uint64_t v11 = objc_msgSend_stringWithFormat_(NSString, v9, (uint64_t)&stru_1EF8E78C8, v10);
    uint64_t v14 = objc_msgSend_stringWithFormat_(v7, v12, @"Unexpected nil '%@' in %s at %s:%d. %@", v13, @"emergencyNumbers", "-[IMDowntimeController _allowedToShowConversationWithHandleIDs:sync:context:participantIDsHash:trackingChat:]_block_invoke", v8, 446, v11);

    uint64_t v15 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v15)
    {
      v15(v14);
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v79 = v14;
        _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  if (!v6)
  {
    long long v74 = xmmword_1E5B7DE20;
    long long v75 = *(_OWORD *)off_1E5B7DE30;
    uint64_t v76 = 447;
    int v17 = NSString;
    uint64_t v18 = IMFileLocationTrimFileName();
    uint64_t v21 = objc_msgSend_stringWithFormat_(NSString, v19, (uint64_t)&stru_1EF8E78C8, v20);
    __int16 v24 = objc_msgSend_stringWithFormat_(v17, v22, @"Unexpected nil '%@' in %s at %s:%d. %@", v23, @"conversation", "-[IMDowntimeController _allowedToShowConversationWithHandleIDs:sync:context:participantIDsHash:trackingChat:]_block_invoke", v18, 447, v21);

    uint64_t v25 = (void (*)(void *))IMGetAssertionFailureHandler();
    if (v25)
    {
      v25(v24);
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v26 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v79 = v24;
        _os_log_impl(&dword_1A4AF7000, v26, OS_LOG_TYPE_INFO, "ASSERTION FAILED: %@", buf, 0xCu);
      }
    }
  }
  long long v72 = 0u;
  long long v73 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  id v27 = *(id *)(a1 + 32);
  uint64_t v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v27, v28, (uint64_t)&v70, (uint64_t)v77, 16);
  if (v31)
  {
    uint64_t v32 = *(void *)v71;
LABEL_19:
    uint64_t v33 = 0;
    while (1)
    {
      if (*(void *)v71 != v32) {
        objc_enumerationMutation(v27);
      }
      if (v5 && (objc_msgSend_containsObject_(v5, v29, *(void *)(*((void *)&v70 + 1) + 8 * v33), v30) & 1) != 0) {
        goto LABEL_36;
      }
      if (v31 == ++v33)
      {
        uint64_t v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v27, v29, (uint64_t)&v70, (uint64_t)v77, 16);
        if (v31) {
          goto LABEL_19;
        }
        break;
      }
    }
  }

  if (*(void *)(a1 + 40))
  {
    unint64_t v37 = objc_msgSend_policyCache(*(void **)(a1 + 48), v34, v35, v36);
    objc_msgSend_contextForParticipantIDsHash_(v37, v38, *(void *)(a1 + 40), v39);
    id v27 = (id)objc_claimAutoreleasedReturnValue();

    if (!v27
      || (objc_msgSend_null(MEMORY[0x1E4F1CA98], v40, v41, v42),
          id v43 = (id)objc_claimAutoreleasedReturnValue(),
          BOOL v44 = v27 == v43,
          v43,
          v44))
    {
      unint64_t v49 = *(unsigned char **)(a1 + 48);
      if (v49[12]) {
        objc_msgSend__doRegisterForScreenTimeNotifications(v49, v40, v41, v42);
      }
      if (!*(unsigned char *)(a1 + 80))
      {
        uint64_t v55 = objc_msgSend_policyCache(*(void **)(a1 + 48), v40, v41, v42);
        objc_msgSend_addSentinelContextForParticipantIDsHash_(v55, v56, *(void *)(a1 + 40), v57);

        unint64_t v61 = objc_msgSend_screenTimeDispatchQueue(*(void **)(a1 + 48), v58, v59, v60);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = sub_1A4B06F08;
        block[3] = &unk_1E5B7D730;
        id v66 = v6;
        id v67 = *(id *)(a1 + 32);
        int8x16_t v64 = *(int8x16_t *)(a1 + 40);
        id v62 = (id)v64.i64[0];
        int8x16_t v68 = vextq_s8(v64, v64, 8uLL);
        id v69 = *(id *)(a1 + 56);
        dispatch_async(v61, block);

LABEL_36:
        uint64_t v48 = 1;
        goto LABEL_37;
      }
      char v50 = objc_msgSend_allowableByContactsHandles_(v6, v40, *(void *)(a1 + 32), v42);

      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v50);
      objc_msgSend_initializeContext_participantIDsHash_trackingChat_(*(void **)(a1 + 48), v51, (uint64_t)v50, *(void *)(a1 + 40), *(void *)(a1 + 56));
      uint64_t v48 = objc_msgSend_allowedByScreenTime(v50, v52, v53, v54);
      id v27 = v50;
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v27);
      uint64_t v48 = objc_msgSend_allowedByScreenTime(v27, v45, v46, v47);
    }
LABEL_37:

    goto LABEL_38;
  }
  uint64_t v48 = 1;
LABEL_38:

  return v48;
}

void sub_1A4B15708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B15788(uint64_t a1, void *a2)
{
}

void sub_1A4B163C8(void *a1, void *a2, int a3)
{
  uint64_t v221 = *MEMORY[0x1E4F143B8];
  id v190 = a2;
  v202 = a1;
  if (a1)
  {
    if (IMOSLoggingEnabled())
    {
      id v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        uint64_t v8 = NSNumber;
        uint64_t v9 = objc_msgSend_count(v190, v5, v6, v7);
        objc_msgSend_numberWithUnsignedInteger_(v8, v10, v9, v11);
        uint64_t v12 = (__CFString *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)long long buf = 138412290;
        v215 = v12;
        _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Total number of IMChats we expect to create %@", buf, 0xCu);
      }
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        int isFirstLoad = objc_msgSend_isFirstLoad(v202, v17, v18, v19);
        uint64_t v21 = @"NO";
        if (isFirstLoad) {
          int v22 = @"YES";
        }
        else {
          int v22 = @"NO";
        }
        if (a3) {
          uint64_t v21 = @"YES";
        }
        *(_DWORD *)long long buf = 138412546;
        v215 = v22;
        __int16 v216 = 2112;
        v217 = v21;
        _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "First Load: %@, Full Reload: %@", buf, 0x16u);
      }
    }
    if (a3) {
      objc_msgSend__resetChatRegistry(v202, v13, v14, v15);
    }
    int v188 = objc_msgSend_isFirstLoad(v202, v13, v14, v15);
    id v193 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    uint64_t v26 = objc_msgSend_contactStore(v202, v23, v24, v25);
    char isBatchFetchingForLaunchCompleted = objc_msgSend_isBatchFetchingForLaunchCompleted(v26, v27, v28, v29);

    if (isBatchFetchingForLaunchCompleted)
    {
      uint64_t v192 = 0;
    }
    else if ((unint64_t)objc_msgSend_count(v190, v31, v32, v33) > 0x18)
    {
      uint64_t v192 = 25;
    }
    else
    {
      uint64_t v192 = objc_msgSend_count(v190, v34, v35, v36);
    }
    id v191 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    long long v212 = 0u;
    long long v213 = 0u;
    long long v210 = 0u;
    long long v211 = 0u;
    id obj = v190;
    uint64_t v197 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v37, (uint64_t)&v210, (uint64_t)v220, 16);
    if (v197)
    {
      uint64_t v196 = *(void *)v211;
      do
      {
        for (uint64_t i = 0; i != v197; ++i)
        {
          if (*(void *)v211 != v196) {
            objc_enumerationMutation(obj);
          }
          uint64_t v39 = *(void **)(*((void *)&v210 + 1) + 8 * i);
          context = (void *)MEMORY[0x1A6264150]();
          id v43 = objc_msgSend_first(v39, v40, v41, v42);
          v200 = objc_msgSend_second(v39, v44, v45, v46);
          char v209 = 0;
          if (objc_msgSend_count(v43, v47, v48, v49))
          {
            objc_msgSend_firstObject(v43, v50, v51, v52);
            uint64_t v53 = (__CFString *)objc_claimAutoreleasedReturnValue();
            v201 = objc_msgSend__lastMessageItemForChatDictionary_(v202, v54, (uint64_t)v53, v55);
            if (v209)
            {
              id v198 = 0;
              uint64_t v59 = 0;
              goto LABEL_30;
            }
            if (v201)
            {
              v219 = v201;
              v194 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v56, (uint64_t)&v219, 1);
              unint64_t v61 = v194;
            }
            else
            {
              unint64_t v61 = 0;
            }
            id v208 = 0;
            uint64_t v59 = sub_1A4B19928(v202, v53, v61, 1, &v209, &v208);
            id v198 = v208;
            if (v201) {

            }
            if (v59)
            {
              id v62 = NSNumber;
              uint64_t isFiltered = objc_msgSend_isFiltered(v59, v56, v57, v58);
              id v66 = objc_msgSend_numberWithInteger_(v62, v64, isFiltered, v65);
              id v69 = objc_msgSend_objectForKeyedSubscript_(v191, v67, (uint64_t)v66, v68);

              long long v73 = objc_msgSend_lastFinishedMessageDate(v59, v70, v71, v72);
              uint64_t v76 = objc_msgSend_compare_(v73, v74, (uint64_t)v69, v75);
              uint64_t v79 = objc_msgSend_objectForKey_(v53, v77, @"unreadCount", v78);
              uint64_t v83 = objc_msgSend_unsignedIntegerValue(v79, v80, v81, v82);

              BOOL v87 = v76 == -1 || v69 == 0;
              if (v87 && !v83)
              {
                char v88 = NSNumber;
                uint64_t v89 = objc_msgSend_isFiltered(v59, v84, v85, v86);
                char v92 = objc_msgSend_numberWithInteger_(v88, v90, v89, v91);
                objc_msgSend_setObject_forKeyedSubscript_(v191, v93, (uint64_t)v73, (uint64_t)v92);
              }
              char v60 = 0;
            }
            else
            {
LABEL_30:
              char v60 = 1;
            }
            char v207 = 0;
            uint64_t v94 = objc_msgSend_service(v201, v56, v57, v58);
            unint64_t v98 = objc_msgSend_iMessageService(IMServiceImpl, v95, v96, v97);
            char v102 = objc_msgSend_internalName(v98, v99, v100, v101);
            int isEqualToIgnoringCase = objc_msgSend_isEqualToIgnoringCase_(v94, v103, (uint64_t)v102, v104);

            if (isEqualToIgnoringCase)
            {
              char v109 = objc_msgSend_sharedRegistry(IMChatRegistry, v106, v107, v108);
              objc_msgSend__setChatHasCommunicatedOveriMessage_(v109, v110, (uint64_t)v59, v111);

              char v207 = 1;
            }
            if (v60)
            {
              if (IMOSLoggingEnabled())
              {
                unint64_t v115 = OSLogHandleForIMFoundationCategory();
                if (os_log_type_enabled(v115, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)long long buf = 138412290;
                  v215 = v53;
                  _os_log_impl(&dword_1A4AF7000, v115, OS_LOG_TYPE_INFO, "*********** Error creating chat with %@", buf, 0xCu);
                }
              }
            }
            else
            {
              objc_msgSend_addObject_(v193, v106, (uint64_t)v59, v108);
              objc_msgSend__updatePersonCentricIDToChatMapForChat_toNewPersonCentricID_(v202, v116, (uint64_t)v59, (uint64_t)v200);
              uint64_t v118 = objc_msgSend__winningJoinStateForExistingChat_incomingDictionary_(v202, v117, (uint64_t)v59, (uint64_t)v53);
              objc_msgSend__setJoinState_(v59, v119, v118, v120);
              objc_msgSend__registerChatDictionary_forChat_isIncoming_newGUID_shouldPostNotification_(v202, v121, (uint64_t)v53, (uint64_t)v59, 0, v198, 0);
              objc_msgSend__updateInfo_forGUID_updatingUnreadCount_shouldPostNotifications_(v202, v122, (uint64_t)v53, (uint64_t)v198, 1, 0);
              uint64_t v126 = objc_msgSend_joinState(v59, v123, v124, v125);
              objc_msgSend_updateChatDictionaryArray_createdChat_joinstate_setHasCommunicatedOveriMessage_(v202, v127, (uint64_t)v43, (uint64_t)v59, v126, &v207);
            }
            uint64_t v128 = objc_msgSend_contactStore(v202, v112, v113, v114);
            char v132 = objc_msgSend_isBatchFetchingForLaunchCompleted(v128, v129, v130, v131);

            if ((v132 & 1) == 0)
            {
              unint64_t v136 = objc_msgSend_sharedRegistry(IMChatRegistry, v133, v134, v135);
              uint64_t v140 = objc_msgSend_cachedChats(v136, v137, v138, v139);
              BOOL v144 = objc_msgSend_count(v140, v141, v142, v143) == v192;

              if (v144) {
                objc_msgSend__fetchInitialBatchOfContactsOnLaunch(v202, v145, v146, v147);
              }
            }
          }
        }
        uint64_t v197 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v148, (uint64_t)&v210, (uint64_t)v220, 16);
      }
      while (v197);
    }

    objc_msgSend_setFilterCategoryToEarliestInitiallyFetchedLastMessageDate_(v202, v149, (uint64_t)v191, v150);
    objc_msgSend__resetChatReconstructionGroupMaps(v202, v151, v152, v153);
    long long v205 = 0u;
    long long v206 = 0u;
    long long v203 = 0u;
    long long v204 = 0u;
    id v154 = v193;
    uint64_t v158 = objc_msgSend_countByEnumeratingWithState_objects_count_(v154, v155, (uint64_t)&v203, (uint64_t)v218, 16);
    if (v158)
    {
      uint64_t v159 = *(void *)v204;
      do
      {
        for (uint64_t j = 0; j != v158; ++j)
        {
          if (*(void *)v204 != v159) {
            objc_enumerationMutation(v154);
          }
          objc_msgSend__updateUnreadCountForChat_(v202, v156, *(void *)(*((void *)&v203 + 1) + 8 * j), v157);
        }
        uint64_t v158 = objc_msgSend_countByEnumeratingWithState_objects_count_(v154, v156, (uint64_t)&v203, (uint64_t)v218, 16);
      }
      while (v158);
    }

    objc_msgSend_setLoading_(v202, v161, 0, v162);
    objc_msgSend_setFirstLoad_(v202, v163, 0, v164);
    v168 = objc_msgSend_contactStore(v202, v165, v166, v167);
    char v172 = objc_msgSend_isBatchFetchingForLaunchCompleted(v168, v169, v170, v171);

    if ((v172 & 1) == 0) {
      objc_msgSend__batchFetchRemainingContactsOnLaunch(v202, v173, v174, v175);
    }
    if (IMOSLoggingEnabled())
    {
      v176 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v176, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v176, OS_LOG_TYPE_INFO, "Done restoring chats", buf, 2u);
      }
    }
    if (IMOSLoggingEnabled())
    {
      v180 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v180, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v180, OS_LOG_TYPE_INFO, "** Posting did load notification", buf, 2u);
      }
    }
    if (v188 & a3)
    {
      v181 = 0;
    }
    else
    {
      v182 = (void *)MEMORY[0x1E4F1CA60];
      v183 = objc_msgSend_numberWithBool_(NSNumber, v177, 1, v179);
      v181 = objc_msgSend_dictionaryWithObjectsAndKeys_(v182, v184, (uint64_t)v183, v185, @"__kIMChatRegistryDidLoadIsRefreshKey", 0);
    }
    v186 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v177, v178, v179);
    objc_msgSend___mainThreadPostNotificationName_object_userInfo_(v186, v187, @"__kIMChatRegistryDidLoadNotification", (uint64_t)v202, v181);
  }
}

void sub_1A4B16CC0(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B1653CLL);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A4B16D18(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B164A0);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A4B18258(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B1821CLL);
  }
  _Unwind_Resume(a1);
}

id sub_1A4B19534(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  uint64_t v15 = objc_msgSend__stripFZIDPrefix(a3, v10, v11, v12);
  if (!v9
    || (objc_msgSend_accountForUniqueID_(v7, v13, (uint64_t)v9, v14),
        (id v16 = (id)objc_claimAutoreleasedReturnValue()) == 0))
  {
    char v39 = 0;
    int v17 = sub_1A4B20E20(v7, v8, v15, &v39);
    uint64_t v18 = v17;
    if (v39)
    {
      id v16 = v17;
LABEL_14:

      goto LABEL_15;
    }
    uint64_t v19 = sub_1A4B21248(v7, v8, v15, &v39);
    uint64_t v20 = v19;
    if (v39)
    {
      id v16 = v19;
LABEL_13:

      goto LABEL_14;
    }
    uint64_t v21 = sub_1A4B21034(v7, v8, v15, &v39);
    uint64_t v24 = v21;
    if (!v39)
    {
      if (v18)
      {
        id v25 = v18;
        goto LABEL_11;
      }
      if (!v21)
      {
        id v27 = objc_msgSend_accountsForService_(v7, v22, (uint64_t)v8, v23);
        if (objc_msgSend_count(v27, v28, v29, v30))
        {
          objc_msgSend___imFirstObject(v27, v31, v32, v33);
          id v16 = (id)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          if (IMOSLoggingEnabled())
          {
            unint64_t v34 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
            {
              char v38 = objc_msgSend_accounts(v7, v35, v36, v37);
              *(_DWORD *)long long buf = 138413058;
              id v41 = v8;
              __int16 v42 = 2112;
              id v43 = v15;
              __int16 v44 = 2112;
              id v45 = v9;
              __int16 v46 = 2112;
              uint64_t v47 = v38;
              _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "Couldn't find any account for service: %@, login: %@, guid: %@, accounts: %@", buf, 0x2Au);
            }
          }
          id v16 = 0;
        }

        goto LABEL_12;
      }
    }
    id v25 = v21;
LABEL_11:
    id v16 = v25;
LABEL_12:

    goto LABEL_13;
  }
LABEL_15:

  return v16;
}

id sub_1A4B19928(void *a1, void *a2, void *a3, int a4, unsigned char *a5, void *a6)
{
  uint64_t v170 = *MEMORY[0x1E4F143B8];
  id v9 = a2;
  id v162 = a3;
  if (a1)
  {
    long long v163 = objc_msgSend__participantsForChatDictionary_(a1, v10, (uint64_t)v9, v11);
    uint64_t v12 = (uint64_t)v163;
    if ((unint64_t)objc_msgSend_count(v163, v13, v14, v15) < 2)
    {
      uint64_t v18 = 0;
    }
    else
    {
      objc_msgSend__sortedParticipantIDHashForParticipants_(a1, v16, (uint64_t)v163, v17);
      v18 = uint64_t v12 = (uint64_t)v163;
    }
    v160 = (void *)v18;
    int v22 = objc_msgSend__cachedChatForChatDictionary_participants_participantHash_(a1, v16, (uint64_t)v9, v12);
    if (v22)
    {
      uint64_t v23 = objc_msgSend_objectForKeyedSubscript_(v9, v19, @"isFiltered", v21);
      uint64_t v26 = objc_msgSend_objectForKeyedSubscript_(v9, v24, *MEMORY[0x1E4F6CDD8], v25);
      uint64_t v32 = objc_msgSend_objectForKeyedSubscript_(v9, v27, @"hasHadSuccessfulQuery", v28);
      if (v23)
      {
        uint64_t v33 = objc_msgSend_integerValue(v23, v29, v30, v31);
        objc_msgSend_setIsFiltered_(v22, v34, v33, v35);
      }
      if (objc_msgSend_count(v26, v29, v30, v31))
      {
        char v39 = objc_msgSend_setWithArray_(MEMORY[0x1E4F1CAD0], v36, (uint64_t)v26, v38);
        objc_msgSend_setMergedPinningIdentifiers_(v22, v40, (uint64_t)v39, v41);
      }
      if (v32)
      {
        uint64_t v42 = objc_msgSend_BOOLValue(v32, v36, v37, v38);
        objc_msgSend_setHasHadSuccessfulQuery_(v22, v43, v42, v44);
      }
      uint64_t v45 = objc_msgSend__winningJoinStateForExistingChat_incomingDictionary_(a1, v36, (uint64_t)v22, (uint64_t)v9);
      objc_msgSend__setJoinState_(v22, v46, v45, v47);
      objc_msgSend__mergeItems_(v22, v48, (uint64_t)v162, v49);
      uint64_t v53 = objc_msgSend_displayName(v22, v50, v51, v52);
      uint64_t v157 = v23;
      if (objc_msgSend_length(v53, v54, v55, v56)
        || (uint64_t v132 = *MEMORY[0x1E4F6CD20],
            objc_msgSend_objectForKey_(v9, v57, *MEMORY[0x1E4F6CD20], v58),
            (unint64_t v136 = objc_claimAutoreleasedReturnValue()) == 0))
      {
      }
      else
      {
        char v137 = objc_msgSend_account(v22, v133, v134, v135);
        unint64_t v141 = objc_msgSend_serviceName(v137, v138, v139, v140);
        char isEqualToString = objc_msgSend_isEqualToString_(v141, v142, *MEMORY[0x1E4F6E1B0], v143);

        if ((isEqualToString & 1) == 0)
        {
          uint64_t v147 = objc_msgSend_objectForKey_(v9, v145, v132, v146);
          if (IMOSLoggingEnabled())
          {
            uint64_t v150 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v150, OS_LOG_TYPE_INFO))
            {
              id v154 = objc_msgSend_chatIdentifier(v22, v151, v152, v153);
              *(_DWORD *)long long buf = 138412546;
              uint64_t v165 = (uint64_t)v154;
              __int16 v166 = 2112;
              uint64_t v167 = v147;
              _os_log_impl(&dword_1A4AF7000, v150, OS_LOG_TYPE_INFO, "Updating chat %@ empty display name to %@", buf, 0x16u);
            }
          }
          objc_msgSend_setDisplayName_(v22, v148, (uint64_t)v147, v149);
        }
      }
      if (a5) {
        *a5 = 0;
      }
    }
    else if (a4)
    {
      uint64_t v59 = objc_msgSend_sharedInstance(IMAccountController, v19, v20, v21);
      id v62 = objc_msgSend_objectForKeyedSubscript_(v9, v60, @"accountID", v61);
      uint64_t v65 = objc_msgSend_accountForUniqueID_(v59, v63, (uint64_t)v62, v64);

      uint64_t v68 = objc_msgSend_objectForKeyedSubscript_(v9, v66, @"style", v67);
      LOBYTE(v59) = objc_msgSend_intValue(v68, v69, v70, v71);

      objc_msgSend_objectForKeyedSubscript_(v9, v72, @"groupID", v73);
      id v74 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v75 = [IMChat alloc];
      int v22 = objc_msgSend__initWithDictionaryRepresentation_items_participantsHint_accountHint_(v75, v76, (uint64_t)v9, (uint64_t)v162, v163, v65);
      if (v59 == 43)
      {
        if (v74 || (id v74 = v160, objc_msgSend_setGroupID_(v22, v80, (uint64_t)v74, v81), v74))
        {
          uint64_t v82 = objc_msgSend_groupIDToChatMap(a1, v77, v78, v79);
          objc_msgSend_setObject_forKeyedSubscript_(v82, v83, (uint64_t)v22, (uint64_t)v74);
        }
        objc_msgSend__addChat_participantSet_(a1, v77, (uint64_t)v22, (uint64_t)v160);
        BOOL v87 = objc_msgSend_personCentricID(v22, v84, v85, v86);

        if (v87)
        {
          uint64_t v91 = objc_msgSend_chatPersonIDToChatMap(a1, v88, v89, v90);
          unint64_t v95 = objc_msgSend_personCentricID(v22, v92, v93, v94);
          unint64_t v98 = objc_msgSend_objectForKeyedSubscript_(v91, v96, (uint64_t)v95, v97);

          if (v98 && IMOSLoggingEnabled())
          {
            char v102 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v102, OS_LOG_TYPE_INFO))
            {
              uint64_t v106 = objc_msgSend_personCentricID(v22, v103, v104, v105);
              v156 = objc_msgSend_guid(v22, v107, v108, v109);
              uint64_t v158 = objc_msgSend_chatPersonIDToChatMap(a1, v110, v111, v112);
              char v116 = objc_msgSend_personCentricID(v22, v113, v114, v115);
              os_log_type_t v119 = objc_msgSend_objectForKeyedSubscript_(v158, v117, (uint64_t)v116, v118);
              objc_msgSend_guid(v119, v120, v121, v122);
              *(_DWORD *)long long buf = 138412802;
              uint64_t v123 = (void *)v106;
              uint64_t v165 = v106;
              __int16 v166 = 2112;
              uint64_t v167 = v156;
              uint64_t v124 = v168 = 2112;
              v169 = v124;
              _os_log_impl(&dword_1A4AF7000, v102, OS_LOG_TYPE_INFO, "Person centric (%@) collision for chats %@ and %@", buf, 0x20u);
            }
          }
          uint64_t v125 = objc_msgSend_chatPersonIDToChatMap(a1, v99, v100, v101);
          uint64_t v129 = objc_msgSend_personCentricID(v22, v126, v127, v128);
          objc_msgSend_setObject_forKeyedSubscript_(v125, v130, (uint64_t)v22, (uint64_t)v129);
        }
        if (IMAdditionalChatRegistryLoggingEnabled() && IMOSLoggingEnabled())
        {
          uint64_t v131 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v131, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            uint64_t v165 = (uint64_t)v160;
            _os_log_impl(&dword_1A4AF7000, v131, OS_LOG_TYPE_INFO, "Did not find an existing chat so creating a new one with participatIDHash %@", buf, 0xCu);
          }
        }
      }
      if (a5) {
        *a5 = 1;
      }
    }
    else
    {
      int v22 = 0;
      if (a5) {
        *a5 = 0;
      }
    }
    if (a6)
    {
      objc_msgSend_objectForKeyedSubscript_(v9, v19, @"guid", v21);
      *a6 = (id)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    int v22 = 0;
  }

  return v22;
}

void sub_1A4B19FE4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B19F1CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B1A750(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A4B1C1FC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *exc_buf)
{
  if (a2 == 1)
  {

    objc_end_catch();
    JUMPOUT(0x1A4B1BE1CLL);
  }
  _Unwind_Resume(v11);
}

void sub_1A4B1C8F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1A4B1DAFC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_context(a1, a2, a3, a4);
  id v8 = v4;
  if (v4)
  {
    id v9 = objc_msgSend_senderHandle(v4, v5, v6, v7);
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

void sub_1A4B1EB98(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B1EA84);
  }
  _Unwind_Resume(a1);
}

id sub_1A4B1ED7C()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_account);
  id v3 = objc_msgSend(v2, sel_service);

  id v4 = self;
  id v5 = objc_msgSend(v4, sel_rcsService);
  uint64_t v6 = v5;
  if (!v3)
  {
    if (!v5) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  if (!v5)
  {
    uint64_t v6 = v3;
LABEL_8:

    goto LABEL_9;
  }
  sub_1A4B1EF94();
  id v7 = v3;
  char v8 = sub_1A4CBB35C();

  if (v8) {
    goto LABEL_15;
  }
LABEL_9:
  id v9 = objc_msgSend(v1, sel_account);
  id v10 = objc_msgSend(v9, sel_service);

  id v11 = objc_msgSend(v4, sel_smsService);
  uint64_t v12 = v11;
  if (!v10)
  {
    if (!v11) {
      goto LABEL_15;
    }
    id v15 = 0;
    id v10 = v11;
LABEL_19:

    return v15;
  }
  if (!v11)
  {
    id v15 = 0;
    goto LABEL_19;
  }
  sub_1A4B1EF94();
  id v13 = v10;
  char v14 = sub_1A4CBB35C();

  if (v14)
  {
LABEL_15:
    id v10 = [v1 ID];
    if (!v10)
    {
      sub_1A4CBB0CC();
      id v10 = (id)sub_1A4CBB0BC();
      swift_bridgeObjectRelease();
    }
    id v15 = objc_msgSend(v10, sel___im_isChatBot);
    goto LABEL_19;
  }
  return 0;
}

unint64_t sub_1A4B1EF94()
{
  unint64_t result = qword_1EB3F1FE8;
  if (!qword_1EB3F1FE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB3F1FE8);
  }
  return result;
}

void sub_1A4B1F608(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B1F4C0);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B20088(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B20048);
  }
  objc_sync_exit(v2);
  _Unwind_Resume(exc_buf);
}

id sub_1A4B20448()
{
  if (qword_1EB3F23A8 != -1) {
    dispatch_once(&qword_1EB3F23A8, &unk_1EF8E3468);
  }
  uint64_t v0 = (void *)qword_1EB3F23B0;

  return v0;
}

void sub_1A4B20948(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B208E4);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B20BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

id sub_1A4B20E20(void *a1, void *a2, void *a3, unsigned char *a4)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v12 = objc_msgSend_connectedAccountsForService_(v7, v10, (uint64_t)v8, v11);
  if (objc_msgSend_count(v12, v13, v14, v15))
  {
    if (objc_msgSend_length(v9, v16, v17, v18))
    {
      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v22 = v12;
      uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v22, v23, (uint64_t)&v48, (uint64_t)v52, 16);
      if (v24)
      {
        uint64_t v28 = v24;
        uint64_t v29 = *(void *)v49;
        id v46 = v8;
        id v47 = v7;
        uint64_t v45 = a4;
        while (2)
        {
          for (uint64_t i = 0; i != v28; ++i)
          {
            if (*(void *)v49 != v29) {
              objc_enumerationMutation(v22);
            }
            uint64_t v31 = *(void **)(*((void *)&v48 + 1) + 8 * i);
            uint64_t v32 = objc_msgSend_strippedLogin(v31, v25, v26, v27);
            if (objc_msgSend_isEqualToIgnoringCase_(v32, v33, (uint64_t)v9, v34))
            {

LABEL_17:
              if (v45) {
                unsigned char *v45 = 1;
              }
              id v43 = v31;

              id v8 = v46;
              id v7 = v47;
              goto LABEL_20;
            }
            uint64_t v38 = objc_msgSend_aliases(v31, v35, v36, v37);
            int v41 = objc_msgSend_containsObject_(v38, v39, (uint64_t)v9, v40);

            if (v41) {
              goto LABEL_17;
            }
          }
          uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v22, v25, (uint64_t)&v48, (uint64_t)v52, 16);
          id v8 = v46;
          id v7 = v47;
          a4 = v45;
          if (v28) {
            continue;
          }
          break;
        }
      }

      uint64_t v42 = sub_1A4B20E20(v7, v8, 0, a4);
    }
    else
    {
      uint64_t v42 = objc_msgSend___imFirstObject(v12, v19, v20, v21);
    }
    id v43 = (id)v42;
  }
  else
  {
    id v43 = 0;
  }
LABEL_20:

  return v43;
}

id sub_1A4B21034(void *a1, void *a2, void *a3, unsigned char *a4)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v12 = objc_msgSend_activeAccountsForService_(v7, v10, (uint64_t)v8, v11);
  if (objc_msgSend_count(v12, v13, v14, v15))
  {
    if (objc_msgSend_length(v9, v16, v17, v18))
    {
      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v22 = v12;
      uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v22, v23, (uint64_t)&v48, (uint64_t)v52, 16);
      if (v24)
      {
        uint64_t v28 = v24;
        uint64_t v29 = *(void *)v49;
        id v46 = v8;
        id v47 = v7;
        uint64_t v45 = a4;
        while (2)
        {
          for (uint64_t i = 0; i != v28; ++i)
          {
            if (*(void *)v49 != v29) {
              objc_enumerationMutation(v22);
            }
            uint64_t v31 = *(void **)(*((void *)&v48 + 1) + 8 * i);
            uint64_t v32 = objc_msgSend_strippedLogin(v31, v25, v26, v27);
            if (objc_msgSend_isEqualToIgnoringCase_(v32, v33, (uint64_t)v9, v34))
            {

LABEL_17:
              if (v45) {
                unsigned char *v45 = 1;
              }
              id v43 = v31;

              id v8 = v46;
              id v7 = v47;
              goto LABEL_20;
            }
            uint64_t v38 = objc_msgSend_aliases(v31, v35, v36, v37);
            int v41 = objc_msgSend_containsObject_(v38, v39, (uint64_t)v9, v40);

            if (v41) {
              goto LABEL_17;
            }
          }
          uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v22, v25, (uint64_t)&v48, (uint64_t)v52, 16);
          id v8 = v46;
          id v7 = v47;
          a4 = v45;
          if (v28) {
            continue;
          }
          break;
        }
      }

      uint64_t v42 = sub_1A4B21034(v7, v8, 0, a4);
    }
    else
    {
      uint64_t v42 = objc_msgSend___imFirstObject(v12, v19, v20, v21);
    }
    id v43 = (id)v42;
  }
  else
  {
    id v43 = 0;
  }
LABEL_20:

  return v43;
}

id sub_1A4B21248(void *a1, void *a2, void *a3, unsigned char *a4)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v12 = objc_msgSend_operationalAccountsForService_(v7, v10, (uint64_t)v8, v11);
  if (objc_msgSend_count(v12, v13, v14, v15))
  {
    if (objc_msgSend_length(v9, v16, v17, v18))
    {
      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v22 = v12;
      uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v22, v23, (uint64_t)&v48, (uint64_t)v52, 16);
      if (v24)
      {
        uint64_t v28 = v24;
        uint64_t v29 = *(void *)v49;
        id v46 = v8;
        id v47 = v7;
        uint64_t v45 = a4;
        while (2)
        {
          for (uint64_t i = 0; i != v28; ++i)
          {
            if (*(void *)v49 != v29) {
              objc_enumerationMutation(v22);
            }
            uint64_t v31 = *(void **)(*((void *)&v48 + 1) + 8 * i);
            uint64_t v32 = objc_msgSend_strippedLogin(v31, v25, v26, v27);
            if (objc_msgSend_isEqualToIgnoringCase_(v32, v33, (uint64_t)v9, v34))
            {

LABEL_17:
              if (v45) {
                unsigned char *v45 = 1;
              }
              id v43 = v31;

              id v8 = v46;
              id v7 = v47;
              goto LABEL_20;
            }
            uint64_t v38 = objc_msgSend_aliases(v31, v35, v36, v37);
            int v41 = objc_msgSend_containsObject_(v38, v39, (uint64_t)v9, v40);

            if (v41) {
              goto LABEL_17;
            }
          }
          uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v22, v25, (uint64_t)&v48, (uint64_t)v52, 16);
          id v8 = v46;
          id v7 = v47;
          a4 = v45;
          if (v28) {
            continue;
          }
          break;
        }
      }

      uint64_t v42 = sub_1A4B21248(v7, v8, 0, a4);
    }
    else
    {
      uint64_t v42 = objc_msgSend___imFirstObject(v12, v19, v20, v21);
    }
    id v43 = (id)v42;
  }
  else
  {
    id v43 = 0;
  }
LABEL_20:

  return v43;
}

uint64_t sub_1A4B21674(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_context(a1, a2, a3, a4);
  uint64_t v8 = objc_msgSend_invitation(v4, v5, v6, v7);

  return v8;
}

void sub_1A4B2189C(uint64_t a1, const char *a2, BOOL *a3, uint64_t a4)
{
  uint64_t v6 = objc_msgSend__cachedChatWithGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  *a3 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) != 0;
}

void sub_1A4B21D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B25418()
{
  objc_destroyWeak(v0);
  JUMPOUT(0x1A4B25474);
}

void sub_1A4B25428()
{
}

void sub_1A4B26304(uint64_t a1, const char *a2, BOOL *a3, uint64_t a4)
{
  uint64_t v6 = objc_msgSend__cachedChatWithGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  *a3 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) != 0;
}

id _IMBestAccountForIMItem(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v19 = objc_msgSend_accountID(v9, v13, v14, v15);
  uint64_t v20 = &off_1E5B79000;
  if (!v19
    || (objc_msgSend_sharedInstance(IMAccountController, v16, v17, v18),
        uint64_t v21 = objc_claimAutoreleasedReturnValue(),
        objc_msgSend_accountForUniqueID_(v21, v22, (uint64_t)v19, v23),
        id v24 = (id)objc_claimAutoreleasedReturnValue(),
        v21,
        !v24))
  {
    uint64_t v25 = objc_msgSend_service(v9, v16, v17, v18);
    uint64_t v28 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v26, (uint64_t)v25, v27);
    uint64_t v32 = objc_msgSend_service(v12, v29, v30, v31);

    if (v32 == v28)
    {
      if (a5) {
        *a5 = v12;
      }
      id v24 = v12;
    }
    else
    {
      uint64_t v36 = objc_msgSend_sharedInstance(IMAccountController, v33, v34, v35);
      objc_msgSend_bestAccountForService_(v36, v37, (uint64_t)v28, v38);
      id v24 = (id)objc_claimAutoreleasedReturnValue();

      if (a5)
      {
        id v24 = v24;
        *a5 = v24;
      }
      uint64_t v20 = &off_1E5B79000;
    }

    if (!v24)
    {
      objc_msgSend_account(v10, v39, v40, v41);
      id v24 = (id)objc_claimAutoreleasedReturnValue();
      if (!v24)
      {
        uint64_t v45 = objc_msgSend_sharedInstance(v20[345], v42, v43, v44);
        objc_msgSend_accountForUniqueID_(v45, v46, (uint64_t)v11, v47);
        id v24 = (id)objc_claimAutoreleasedReturnValue();

        if (!v24)
        {
          long long v51 = objc_msgSend_sharedInstance(v20[345], v48, v49, v50);
          objc_msgSend_bestAccountForService_(v51, v52, 0, v53);
          id v24 = (id)objc_claimAutoreleasedReturnValue();
        }
      }
    }
  }

  return v24;
}

uint64_t _CreateIMMessageFromIMItem(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  id v10 = v6;
  uint64_t v11 = 0;
  if (v5 && v6)
  {
    if (!objc_msgSend_type(v5, v7, v8, v9))
    {
      if (objc_msgSend_isFromMe(v5, v12, v13, v14))
      {
        uint64_t v15 = objc_msgSend_loginIMHandle(v10, v24, v25, v26);
        uint64_t v30 = objc_msgSend_handle(v5, v27, v28, v29);
        uint64_t v32 = objc_msgSend_imHandleWithID_alreadyCanonical_(v10, v31, (uint64_t)v30, a3);
      }
      else
      {
        uint64_t v37 = objc_msgSend_sender(v5, v24, v25, v26);
        uint64_t v15 = objc_msgSend_imHandleWithID_alreadyCanonical_(v10, v38, (uint64_t)v37, a3);

        uint64_t v32 = objc_msgSend_loginIMHandle(v10, v39, v40, v41);
      }
      objc_msgSend__updateContextWithSenderHandle_otherHandle_(v5, v33, (uint64_t)v15, (uint64_t)v32);
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v45 = v5;
        if ((objc_msgSend_hasUnseenMention(v45, v46, v47, v48) & 1) == 0)
        {
          uint64_t v52 = objc_msgSend_message(v45, v49, v50, v51);
          objc_msgSend_setHasMention_(v52, v53, 0, v54);
        }
      }
      uint64_t v11 = objc_msgSend_message(v5, v42, v43, v44);
      goto LABEL_21;
    }
    uint64_t v15 = objc_msgSend_sender(v5, v12, v13, v14);
    if (objc_msgSend_type(v5, v16, v17, v18) == 6) {
      objc_msgSend_handle(v5, v19, v20, v21);
    }
    else {
    uint64_t v22 = objc_msgSend_otherHandle(v5, v19, v20, v21);
    }
    uint64_t v32 = (void *)v22;
    if (v15)
    {
      uint64_t v34 = objc_msgSend_imHandleWithID_alreadyCanonical_(v10, v23, (uint64_t)v15, 1);
      if (v32)
      {
LABEL_11:
        uint64_t v35 = objc_msgSend_imHandleWithID_alreadyCanonical_(v10, v23, (uint64_t)v32, 1);
        objc_msgSend__updateContextWithSenderHandle_otherHandle_(v5, v36, (uint64_t)v34, (uint64_t)v35);
LABEL_14:

        uint64_t v11 = 0;
LABEL_21:

        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v34 = 0;
      if (v22) {
        goto LABEL_11;
      }
    }
    uint64_t v35 = 0;
    objc_msgSend__updateContextWithSenderHandle_otherHandle_(v5, v23, (uint64_t)v34, 0);
    goto LABEL_14;
  }
LABEL_22:

  return v11;
}

id sub_1A4B26EE4(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend_context(a1, a2, a3, a4);
  uint64_t v9 = v5;
  if (v5)
  {
    id v10 = objc_msgSend_message(v5, v6, v7, v8);

    if (!v10)
    {
      uint64_t v14 = objc_msgSend_senderHandle(v9, v11, v12, v13);
      uint64_t v18 = objc_msgSend_otherHandle(v9, v15, v16, v17);
      uint64_t v20 = objc_msgSend_messageFromIMMessageItem_sender_subject_(IMMessage, v19, (uint64_t)a1, (uint64_t)v14, v18);
      objc_msgSend_setMessage_(v9, v21, (uint64_t)v20, v22);
    }
    uint64_t v23 = objc_msgSend_message(v9, v11, v12, v13);
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v24 = objc_msgSend_sortID(a1, v6, v7, v8);
  objc_msgSend_setSortID_(v23, v25, v24, v26);

  return v23;
}

void sub_1A4B28BE4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,long long buf,int a24,__int16 a25,__int16 a26,id a27,long long a28)
{
  if (a2 == 1)
  {
    id v28 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      uint64_t v29 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v28, v30, v31, v32);
        id v33 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v28, v34, v35, v36);
        id v37 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_userInfo(v28, v38, v39, v40);
        id v41 = (id)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v28;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v33;
        a26 = 2112;
        a27 = v37;
        LOWORD(a28) = 2112;
        *(void *)((char *)&a28 + 2) = v41;
        WORD5(a28) = 2080;
        *(void *)((char *)&a28 + 12) = "-[IMAccount _loadFromDictionary:force:]";
        _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B27F6CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B28D04(void *exc_buf, int a2)
{
  if (a2 == v2)
  {

    objc_end_catch();
    JUMPOUT(0x1A4B28CE8);
  }
  objc_end_catch();
  JUMPOUT(0x1A4B28D38);
}

void sub_1A4B29364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, uint64_t a10, __int16 a11, uint64_t a12, __int16 a13, uint64_t a14, __int16 a15, uint64_t a16, __int16 a17, uint64_t a18)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A4B291FCLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4B297F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long buf, int a20,__int16 a21,__int16 a22,uint64_t a23,long long a24)
{
  if (a2 == 1)
  {
    id v24 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      uint64_t v25 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v24, v26, v27, v28);
        id v37 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v24, v29, v30, v31);
        id v35 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v36 = objc_msgSend_userInfo(v24, v32, v33, v34);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v24;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v37;
        a22 = 2112;
        a23 = (uint64_t)v35;
        LOWORD(a24) = 2112;
        *(void *)((char *)&a24 + 2) = v36;
        WORD5(a24) = 2080;
        *(void *)((char *)&a24 + 12) = "-[IMAccount _updateProfileInfo:]";
        _os_log_impl(&dword_1A4AF7000, v25, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B29684);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4B2A0B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, int a10, __int16 a11, __int16 a12, uint64_t a13, long long a14)
{
  if (a2 == 1)
  {
    id v14 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v14, v16, v17, v18);
        id v19 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v14, v20, v21, v22);
        id v23 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v27 = objc_msgSend_userInfo(v14, v24, v25, v26);
        LODWORD(a9) = 138413314;
        *(void *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(void *)((char *)&a9 + 14) = v19;
        a12 = 2112;
        a13 = (uint64_t)v23;
        LOWORD(a14) = 2112;
        *(void *)((char *)&a14 + 2) = v27;
        WORD5(a14) = 2080;
        *(void *)((char *)&a14 + 12) = "-[IMAccount _updateDisplayName:]";
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B2A0ACLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4B2A898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B2A9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B2B510(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend_appBundle(a2, (const char *)a2, a3, a4);
  objc_msgSend_bundleIdentifier(v5, v6, v7, v8);
  id v12 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v11 = v12;
  if (v12)
  {
    objc_msgSend_addObject_(*(void **)(a1 + 32), v9, (uint64_t)v12, v10);
    uint64_t v11 = v12;
  }
}

void sub_1A4B2C514(uint64_t a1, void *a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v9 = objc_msgSend_bundleIdentifier(v3, v4, v5, v6);
  if (!v9)
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_24;
    }
    id v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v20 = objc_msgSend_bundlePath(v3, v17, v18, v19);
      int v61 = 138412290;
      id v62 = v20;
      _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "Skipping bundle with missing identifier at path:%@", (uint8_t *)&v61, 0xCu);
    }
    goto LABEL_6;
  }
  if (objc_msgSend__shouldSkipUpdatingPluginBundleIdentifier_(*(void **)(a1 + 32), v7, (uint64_t)v9, v8))
  {
    if (IMOSLoggingEnabled())
    {
      id v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        uint64_t v16 = objc_msgSend_bundlePath(v3, v13, v14, v15);
        int v61 = 138412546;
        id v62 = v9;
        __int16 v63 = 2112;
        uint64_t v64 = v16;
        _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "Skipping bundle with identifier:%@ at path:%@", (uint8_t *)&v61, 0x16u);
      }
LABEL_6:
    }
  }
  else
  {
    objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v10, (uint64_t)v9, v11);
    int v23 = objc_msgSend_containsObject_(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v21, (uint64_t)v9, v22);
    if (objc_msgSend_containsObject_(*(void **)(a1 + 40), v24, (uint64_t)v9, v25) && !v23) {
      goto LABEL_18;
    }
    if (!*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40))
    {
      uint64_t v29 = objc_opt_class();
      uint64_t v33 = objc_msgSend_balloonProviderBundlePathURL(v29, v30, v31, v32);
      uint64_t v34 = *(void *)(*(void *)(a1 + 72) + 8);
      id v35 = *(void **)(v34 + 40);
      *(void *)(v34 + 40) = v33;

      id v36 = objc_alloc(MEMORY[0x1E4F28B50]);
      uint64_t v39 = objc_msgSend_initWithURL_(v36, v37, *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v38);
      uint64_t v40 = *(void *)(*(void *)(a1 + 80) + 8);
      id v41 = *(void **)(v40 + 40);
      *(void *)(v40 + 40) = v39;
    }
    uint64_t v42 = objc_msgSend__insertPluginForAppBundle_balloonProviderBundle_(*(void **)(a1 + 32), v26, (uint64_t)v3, *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
    if (v23) {
      objc_msgSend_removeObject_(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v26, (uint64_t)v9, v28);
    }
    if (!v42)
    {
LABEL_18:
      uint64_t v43 = objc_msgSend_model(*(void **)(a1 + 32), v26, v27, v28);
      uint64_t v47 = objc_msgSend_pluginsMap(v43, v44, v45, v46);
      uint64_t v48 = *(void **)(a1 + 48);
      uint64_t v52 = objc_msgSend_bundleIdentifier(v3, v49, v50, v51);
      uint64_t v55 = objc_msgSend_objectForKeyedSubscript_(v48, v53, (uint64_t)v52, v54);
      uint64_t v42 = objc_msgSend_pluginForIdentifier_(v47, v56, (uint64_t)v55, v57);
    }
    if (objc_msgSend_isEnabled(v42, v26, v27, v28)) {
      ++*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
    }
    if (objc_msgSend_isStickerPackOnly(v42, v58, v59, v60)) {
      ++*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
    }
  }
LABEL_24:
}

void sub_1A4B2C838(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B2C7F8);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B2C85C(uint64_t a1, void *a2)
{
  id v53 = a2;
  uint64_t v6 = objc_msgSend_identifier(v53, v3, v4, v5);
  objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v7, (uint64_t)v6, v8);
  int v11 = objc_msgSend_containsObject_(*(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v9, (uint64_t)v6, v10);
  if (objc_msgSend_containsObject_(*(void **)(a1 + 32), v12, (uint64_t)v6, v13)) {
    BOOL v17 = v11 == 0;
  }
  else {
    BOOL v17 = 0;
  }
  if (v17) {
    goto LABEL_12;
  }
  if (!*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40))
  {
    id v18 = objc_alloc_init(MEMORY[0x1E4F6C3F8]);
    uint64_t v19 = *(void *)(*(void *)(a1 + 80) + 8);
    uint64_t v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;
  }
  if (!*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40))
  {
    uint64_t v21 = objc_opt_class();
    uint64_t v25 = objc_msgSend_balloonProviderBundlePathURL(v21, v22, v23, v24);
    uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8);
    uint64_t v27 = *(void **)(v26 + 40);
    *(void *)(v26 + 40) = v25;

    id v28 = objc_alloc(MEMORY[0x1E4F28B50]);
    uint64_t v31 = objc_msgSend_initWithURL_(v28, v29, *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40), v30);
    uint64_t v32 = *(void *)(*(void *)(a1 + 96) + 8);
    uint64_t v33 = *(void **)(v32 + 40);
    *(void *)(v32 + 40) = v31;
  }
  uint64_t v34 = objc_msgSend__insertPluginForExtension_balloonProviderBundle_precachedBalloonAppExtensions_timingCollection_(*(void **)(a1 + 40), v14, (uint64_t)v53, *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 40), *(void *)(a1 + 48), *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
  if (v11) {
    objc_msgSend_removeObject_(*(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v14, (uint64_t)v6, v16);
  }
  if (!v34)
  {
LABEL_12:
    id v35 = objc_msgSend_model(*(void **)(a1 + 40), v14, v15, v16);
    uint64_t v39 = objc_msgSend_pluginsMap(v35, v36, v37, v38);
    uint64_t v40 = *(void **)(a1 + 56);
    uint64_t v44 = objc_msgSend_identifier(v53, v41, v42, v43);
    uint64_t v47 = objc_msgSend_objectForKeyedSubscript_(v40, v45, (uint64_t)v44, v46);
    uint64_t v34 = objc_msgSend_pluginForIdentifier_(v39, v48, (uint64_t)v47, v49);
  }
  if (objc_msgSend_isEnabled(v34, v14, v15, v16)) {
    ++*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 24);
  }
  if (objc_msgSend_isStickerPackOnly(v34, v50, v51, v52)) {
    ++*(void *)(*(void *)(*(void *)(a1 + 112) + 8) + 24);
  }
}

id sub_1A4B2F224(uint64_t a1, unsigned char *a2)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v5 = (void *)v3;
  if (!a2 || v3)
  {
    if (v3)
    {
      v8[0] = v3;
      uint64_t v6 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v4, (uint64_t)v8, 1);
      goto LABEL_7;
    }
  }
  else
  {
    *a2 = 1;
  }
  uint64_t v6 = (void *)MEMORY[0x1E4F1CBF0];
LABEL_7:

  return v6;
}

uint64_t sub_1A4B2F2F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__cachedChatWithGUID_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

id sub_1A4B2F300(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = objc_msgSend__cachedChatWithIdentifier_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v7 = 138412290;
      uint64_t v8 = v4;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Returning cached chat %@", (uint8_t *)&v7, 0xCu);
    }
  }

  return v4;
}

void sub_1A4B2F4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B309EC(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == v2)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B309A0);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A4B3176C(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B31564);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A4B31F10(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B31BC8);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B32A64(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB3F2398 != -1) {
    dispatch_once(&qword_1EB3F2398, &unk_1EF8E5B58);
  }
  if (!qword_1EB3F2388)
  {
    uint64_t v5 = (void **)MEMORY[0x1A6263B50]("FaceTimeDeviceRegistrationCapabilityChangedNotification", @"FTServices");
    if (v5) {
      uint64_t v6 = *v5;
    }
    else {
      uint64_t v6 = 0;
    }
    objc_storeStrong((id *)&qword_1EB3F2388, v6);
  }
  if (!qword_1EB3F2380)
  {
    int v7 = (void **)MEMORY[0x1A6263B50]("FTCTRegistrationStatusChangedNotification", @"FTServices");
    if (v7) {
      uint64_t v8 = *v7;
    }
    else {
      uint64_t v8 = 0;
    }
    objc_storeStrong((id *)&qword_1EB3F2380, v8);
  }
  uint64_t v9 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  objc_msgSend_addObserver_selector_name_object_(v9, v10, *(void *)(a1 + 32), (uint64_t)sel__registrationStatusChanged_, qword_1EB3F2388, 0);

  uint64_t v14 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v11, v12, v13);
  objc_msgSend_addObserver_selector_name_object_(v14, v15, *(void *)(a1 + 32), (uint64_t)sel__registrationStatusChanged_, qword_1EB3F2380, 0);

  uint64_t v19 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v16, v17, v18);
  objc_msgSend_addObserver_selector_name_object_(v19, v20, *(void *)(a1 + 32), (uint64_t)sel__registrationStatusChanged_, @"NotificationActiveAccountChanged", 0);

  uint64_t v24 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v21, v22, v23);
  objc_msgSend_addObserver_selector_name_object_(v24, v25, *(void *)(a1 + 32), (uint64_t)sel__registrationStatusChanged_, @"__kIMAccountRegistrationStatusChangedNotification", 0);

  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v26, v27, v28);
  id v30 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObserver_selector_name_object_(v30, v29, *(void *)(a1 + 32), (uint64_t)sel__registrationStatusChanged_, @"__kIMAccountAliasesChangedNotification", 0);
}

id sub_1A4B330DC(void *a1)
{
  id v1 = a1;
  if (objc_msgSend_supportsCrossAccountIDSMessaging(v1, v2, v3, v4))
  {
    uint64_t v8 = objc_msgSend_idsServiceNames(v1, v5, v6, v7);
    uint64_t v12 = objc_msgSend_firstObject(v8, v9, v10, v11);
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

uint64_t sub_1A4B33B88(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_compare_(a2, (const char *)a2, a3, a4);
}

uint64_t sub_1A4B33BA0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_ID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_1A4B33BA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_displayNameForChat_(a2, (const char *)a2, *(void *)(a1 + 32), a4);
}

void sub_1A4B33BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 64);
  if (!v5)
  {
    uint64_t v6 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E6D8], 0, a3, a4);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void **)(v7 + 64);
    *(void *)(v7 + 64) = v6;

    uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 64);
  }
  uint64_t v9 = (id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);

  objc_storeStrong(v9, v5);
}

uint64_t sub_1A4B33C68(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__postNotification_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

uint64_t sub_1A4B33C74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_value(a2, (const char *)a2, a3, a4);
}

uint64_t IMIsOscarEnabled(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = qword_1EB3F1DE0;
  if (qword_1EB3F1DE0 == -1)
  {
    uint64_t v5 = objc_msgSend_sharedInstance(IMAccountController, a2, a3, a4);
    qword_1EB3F1DE0 = objc_msgSend_activeAccountsAreEligibleForiMessageJunk(v5, v6, v7, v8);

    objc_msgSend_setSupportsiMessageJunk_(MEMORY[0x1E4F6E730], v9, qword_1EB3F1DE0 == 1, v10);
    uint64_t v4 = qword_1EB3F1DE0;
  }
  if (v4 == 1) {
    return 1;
  }
  uint64_t v12 = objc_msgSend_sharedRegistry(IMChatRegistry, a2, a3, a4);
  uint64_t v16 = objc_msgSend_filterediMessageChatsExist(v12, v13, v14, v15);

  return v16;
}

void *_CreateIMMessageFromIMMessageItemDictionary(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v9 = a2;
  if (v9 && objc_msgSend_count(v5, v6, v7, v8))
  {
    uint64_t v12 = objc_msgSend_objectForKey_(v5, v10, @"type", v11);
    uint64_t v16 = objc_msgSend_longLongValue(v12, v13, v14, v15);

    id v19 = objc_alloc((Class)objc_msgSend_classForMessageItemDictionary_(MEMORY[0x1E4F6E7F0], v17, (uint64_t)v5, v18));
    uint64_t v22 = objc_msgSend_initWithDictionary_(v19, v20, (uint64_t)v5, v21);
    uint64_t v26 = v22;
    if (!v16)
    {
      uint64_t v33 = objc_msgSend_objectForKey_(v5, v23, @"flags", v25);
      char v37 = objc_msgSend_unsignedLongLongValue(v33, v34, v35, v36);

      uint64_t v40 = objc_msgSend_objectForKey_(v5, v38, @"senderInfo", v39);
      id v30 = objc_msgSend_objectForKey_(v40, v41, *MEMORY[0x1E4F6C5C8], v42);

      uint64_t v48 = objc_msgSend_objectForKey_(v5, v43, @"handle", v44);
      if ((v37 & 4) == 0)
      {
        uint64_t v49 = objc_msgSend_imHandleWithID_alreadyCanonical_(v9, v45, (uint64_t)v30, a3);
        uint64_t v53 = objc_msgSend_loginIMHandle(v9, v50, v51, v52);
LABEL_17:
        uint64_t v55 = (void *)v53;
        objc_msgSend__updateContextWithSenderHandle_otherHandle_(v26, v54, (uint64_t)v49, v53);
        goto LABEL_18;
      }
      uint64_t v49 = objc_msgSend_loginIMHandle(v9, v45, v46, v47);
      objc_msgSend_imHandleWithID_alreadyCanonical_(v9, v56, (uint64_t)v48, a3);
      uint64_t v53 = LABEL_16:;
      goto LABEL_17;
    }
    id v30 = objc_msgSend_sender(v22, v23, v24, v25);
    if (v16 == 6) {
      objc_msgSend_objectForKey_(v5, v27, @"handle", v29);
    }
    else {
    uint64_t v31 = objc_msgSend_otherHandle(v26, v27, v28, v29);
    }
    uint64_t v48 = (void *)v31;
    if (v30)
    {
      uint64_t v49 = objc_msgSend_imHandleWithID_alreadyCanonical_(v9, v32, (uint64_t)v30, 1);
      if (v48)
      {
LABEL_12:
        objc_msgSend_imHandleWithID_alreadyCanonical_(v9, v32, (uint64_t)v48, 1);
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v49 = 0;
      if (v31) {
        goto LABEL_12;
      }
    }
    uint64_t v55 = 0;
    objc_msgSend__updateContextWithSenderHandle_otherHandle_(v26, v32, (uint64_t)v49, 0);
LABEL_18:

    goto LABEL_19;
  }
  uint64_t v26 = 0;
LABEL_19:

  return v26;
}

void sub_1A4B33F48(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = objc_opt_class();
  id v18 = objc_alloc_init((Class)objc_msgSend_contextClass(v8, v9, v10, v11));
  objc_msgSend_setSenderHandle_(v18, v12, (uint64_t)v7, v13);

  objc_msgSend_setOtherHandle_(v18, v14, (uint64_t)v6, v15);
  objc_msgSend_setContext_(a1, v16, (uint64_t)v18, v17);
}

uint64_t sub_1A4B33FF4()
{
  return objc_opt_class();
}

uint64_t IMSharedDowntimeController(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_sharedInstance(IMDowntimeController, a2, a3, a4);
}

NSComparisonResult IMComparePersonStatus(IMPersonStatus status, IMPersonStatus compareTo)
{
  uint64_t v2 = qword_1A4CD0B08[status];
  uint64_t v3 = qword_1A4CD0B08[compareTo];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 <= v3;
  NSComparisonResult v6 = NSOrderedDescending;
  if (v5) {
    NSComparisonResult v6 = NSOrderedAscending;
  }
  if (v4) {
    return 0;
  }
  else {
    return v6;
  }
}

uint64_t IMCoreSimulatedEnvironmentEnabled(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  BOOL v4 = objc_msgSend_processInfo(MEMORY[0x1E4F28F80], a2, a3, a4);
  uint64_t v8 = objc_msgSend_environment(v4, v5, v6, v7);
  uint64_t v11 = objc_msgSend_valueForKey_(v8, v9, @"IMCoreSimulatedEnvironmentEnabled", v10);
  uint64_t v15 = objc_msgSend_BOOLValue(v11, v12, v13, v14);

  return v15;
}

uint64_t __IMIsIdentifierInPluginCapableClient(void *a1)
{
  id v1 = a1;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4B34964;
  block[3] = &unk_1E5B7ACD0;
  id v7 = v1;
  uint64_t v2 = qword_1EB3F21E8;
  id v3 = v1;
  if (v2 != -1) {
    dispatch_once(&qword_1EB3F21E8, block);
  }
  uint64_t v4 = byte_1EB3F21E0;

  return v4;
}

uint64_t _IMIsRunningInCameraClient()
{
  if (qword_1EB3F21A8 != -1) {
    dispatch_once(&qword_1EB3F21A8, &unk_1EF8E5E38);
  }
  return byte_1E965DDB8;
}

uint64_t sub_1A4B341E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4B341F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4B34200(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4B34210(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4B34220(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4B34230(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4B34240(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4B34250(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A4B34260(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (a2)
  {
    *(void *)(*(void *)(result + 32) + 72) |= 0x20000000uLL;
    *a5 = 1;
  }
  return result;
}

uint64_t sub_1A4B34288()
{
  return swift_release();
}

uint64_t sub_1A4B34290()
{
  return swift_release();
}

uint64_t sub_1A4B34298()
{
  return swift_release();
}

uint64_t sub_1A4B342A0()
{
  return swift_release();
}

uint64_t sub_1A4B342A8()
{
  return swift_release();
}

uint64_t sub_1A4B342B0()
{
  return swift_release();
}

uint64_t sub_1A4B342B8()
{
  return swift_release();
}

uint64_t sub_1A4B342C0()
{
  return swift_release();
}

void sub_1A4B342EC(uint64_t a1)
{
}

void sub_1A4B342F4(uint64_t a1)
{
}

void sub_1A4B342FC(uint64_t a1)
{
}

void sub_1A4B34304(uint64_t a1)
{
}

void sub_1A4B3430C(uint64_t a1)
{
}

void sub_1A4B34314(uint64_t a1)
{
}

void sub_1A4B3431C(uint64_t a1)
{
}

void sub_1A4B34324(uint64_t a1)
{
}

void sub_1A4B3432C(uint64_t a1)
{
}

void sub_1A4B34334(uint64_t a1)
{
}

void sub_1A4B3433C(uint64_t a1)
{
}

void sub_1A4B34344(uint64_t a1)
{
}

void sub_1A4B3434C(uint64_t a1)
{
}

void sub_1A4B34354(uint64_t a1)
{
}

void sub_1A4B3435C(uint64_t a1)
{
}

void sub_1A4B34364(uint64_t a1)
{
}

void sub_1A4B3436C(uint64_t a1)
{
}

void sub_1A4B34374(uint64_t a1)
{
}

void sub_1A4B3437C(uint64_t a1)
{
}

void sub_1A4B34384(uint64_t a1)
{
}

void sub_1A4B3438C(uint64_t a1)
{
}

void sub_1A4B34394(uint64_t a1)
{
}

void sub_1A4B3439C(uint64_t a1)
{
}

void sub_1A4B343A4(uint64_t a1)
{
}

void sub_1A4B343AC(uint64_t a1)
{
}

void sub_1A4B343B4(uint64_t a1)
{
}

void sub_1A4B343BC(uint64_t a1)
{
}

void sub_1A4B343C4(uint64_t a1)
{
}

void sub_1A4B343CC(uint64_t a1)
{
}

void sub_1A4B343D4(uint64_t a1)
{
}

void sub_1A4B343DC(uint64_t a1)
{
}

void sub_1A4B343E4(uint64_t a1)
{
}

void sub_1A4B343EC(uint64_t a1)
{
}

void sub_1A4B343F4(uint64_t a1)
{
}

void sub_1A4B343FC(uint64_t a1)
{
}

void sub_1A4B34404(uint64_t a1)
{
}

uint64_t sub_1A4B3440C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3441C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3442C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3443C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3444C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3445C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3446C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3447C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3448C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3449C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B344AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B344BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B344CC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B344DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B344EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B344FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3450C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3451C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3452C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3453C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3454C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3455C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3456C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3457C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3458C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3459C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B345AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B345BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B345CC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B345DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B345EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B345FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3460C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3461C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3462C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3463C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1A4B3464C(uint64_t a1, const char *a2)
{
  return objc_msgSend_initializeContext_participantIDsHash_trackingChat_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
}

uint64_t sub_1A4B34694(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_supportsCapability_(a2, (const char *)a2, *(void *)(a1 + 32), a4);
}

uint64_t sub_1A4B346A4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1A4B05D18(a1, *(unsigned char *)(v2 + 16), a2);
}

void sub_1A4B346B0(uint64_t a1)
{
  sub_1A4B012F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

void *sub_1A4B346C0@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_1A4B346E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_addObject_(*(void **)(*(void *)(a1 + 32) + 48), a2, *(void *)(a1 + 40), a4);
}

uint64_t sub_1A4B346EC@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1A4B35360;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;

  return sub_1A4B08658(v3);
}

id IMHashOfHashesForStringArray(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v4 = objc_msgSend_sortedArrayUsingComparator_(a1, a2, (uint64_t)&unk_1EF8E3D90, a4);
    uint64_t v5 = objc_opt_new();
    long long v31 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    id v6 = v4;
    uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v7, (uint64_t)&v31, (uint64_t)v35, 16);
    if (v8)
    {
      uint64_t v12 = v8;
      uint64_t v13 = *(void *)v32;
      do
      {
        for (uint64_t i = 0; i != v12; ++i)
        {
          if (*(void *)v32 != v13) {
            objc_enumerationMutation(v6);
          }
          uint64_t v15 = NSString;
          uint64_t v16 = objc_msgSend_hash(*(void **)(*((void *)&v31 + 1) + 8 * i), v9, v10, v11);
          id v19 = objc_msgSend_stringWithFormat_(v15, v17, @"%tu", v18, v16);;
          objc_msgSend_appendString_(v5, v20, (uint64_t)v19, v21);
        }
        uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v9, (uint64_t)&v31, (uint64_t)v35, 16);
      }
      while (v12);
    }

    uint64_t v22 = NSString;
    uint64_t v26 = objc_msgSend_hash(v5, v23, v24, v25);
    uint64_t v29 = objc_msgSend_stringWithFormat_(v22, v27, @"%tu", v28, v26);
  }
  else
  {
    uint64_t v29 = 0;
  }

  return v29;
}

__n128 initializeWithTake for DaemonConnection.State(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 initializeWithTake for DaemonConnection.SetupState(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1A4B34964(uint64_t a1)
{
  uint64_t result = ___IMIsIdentifierInPluginCapableClient(*(void **)(a1 + 32));
  byte_1EB3F21E0 = result;
  return result;
}

uint64_t sub_1A4B34988()
{
  uint64_t result = MEMORY[0x1A6263B40](@"SGSuggestionsService", @"CoreSuggestions");
  qword_1E965E708 = result;
  return result;
}

uint64_t sub_1A4B349B8()
{
  qword_1EB3F23B0 = (uint64_t)objc_alloc_init(MEMORY[0x1E4F6C3F8]);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B349F4(uint64_t a1)
{
  uint64_t v2 = [IMSWHighlightCenterController alloc];
  qword_1E965DE48 = objc_msgSend_initWithAppIdentifier_(v2, v3, *(void *)(a1 + 32), v4);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34A44(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    *(unsigned char *)(*(void *)(result + 32) + 12) = 1;
    *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = 1;
  }
  return result;
}

uint64_t sub_1A4B34A68()
{
  qword_1EB3F2498 = objc_alloc_init(IMPinnedConversationsController);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34AA4()
{
  qword_1E965E580 = objc_alloc_init(IMTextInputCryptographer);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34AE0()
{
  qword_1EB3F2308 = (uint64_t)os_log_create("com.apple.Messages", "iMessageCloudKitEvents");

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34B24(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = sub_1A4B100D0;
  v6[3] = &unk_1E5B7BE98;
  uint64_t v4 = *(void **)(a1 + 32);
  v6[4] = *(void *)(a1 + 40);
  return objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v4, a2, (uint64_t)v6, a4);
}

uint64_t sub_1A4B34B98()
{
  qword_1EB3F21B8 = (uint64_t)os_log_create("com.apple.Messages", "IMBalloonPluginManager");

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34BDC()
{
  qword_1EB3F2548 = objc_alloc_init(IMChatHistoryController);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34C18()
{
  qword_1EB3F2218 = objc_alloc_init(IMBalloonPluginManager);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34C54()
{
  qword_1EB3F2390 = (uint64_t)dispatch_queue_create("FTNotificationQueue", 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34C94()
{
  if ((sub_1A4B34FF8() & 1) != 0 || (uint64_t result = IMIsRunningInUnitTesting(), result))
  {
    qword_1E965E770 = objc_opt_new();
    return MEMORY[0x1F41817F8]();
  }
  return result;
}

uint64_t sub_1A4B34CEC()
{
  qword_1EB3F23D8 = objc_alloc_init(IMParentalControls);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34D2C()
{
  qword_1EB3F2538 = objc_alloc_init(IMDowntimeController);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34D68()
{
  qword_1EB3F2358 = objc_alloc_init(IMDaemonController);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34DA4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  int v4 = IMCoreSimulatedEnvironmentEnabled(a1, a2, a3, a4);
  uint64_t v5 = off_1E5B7A230;
  if (!v4) {
    uint64_t v5 = &off_1E5B79AC8;
  }
  qword_1EB3F24A0 = (uint64_t)objc_alloc_init(*v5);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34DF8()
{
  qword_1EB3F2520 = objc_alloc_init(IMHandleRegistrar);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34E38()
{
  qword_1E965E7C0 = (uint64_t)os_log_create("com.apple.Messages", "ChatItemUpdater");

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34E7C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(*(void *)(a1 + 32) + 64) = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E6D8], a2, a3, a4);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34EC8()
{
  qword_1EB3F2530 = objc_alloc_init(IMChorosMonitor);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34F04()
{
  qword_1EB3F2318 = (uint64_t)os_log_create("com.apple.Messages", "IMCloudKitHooks");

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1A4B34F48()
{
  uint64_t result = MEMORY[0x1A6263B40](@"FTDeviceSupport", @"FTServices");
  qword_1EB3F2220 = result;
  return result;
}

void sub_1A4B34F78(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedInstance(MEMORY[0x1E4F6E720], a2, a3, a4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  byte_1E965E7A8 = objc_msgSend_getBoolFromDomain_forKey_(v5, v4, *MEMORY[0x1E4F6DEE8], *MEMORY[0x1E4F6DEF0]);
}

void sub_1A4B34FE0()
{
  uint64_t v0 = (void *)qword_1EB3F21D8;
  qword_1EB3F21D8 = (uint64_t)&unk_1EF9144E8;
}

uint64_t sub_1A4B34FF8()
{
  if (qword_1EB3F2230 != -1) {
    dispatch_once(&qword_1EB3F2230, &unk_1EF8E5638);
  }
  return byte_1E965E7D8;
}

unint64_t sub_1A4B3503C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A4CBB5EC() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A4CBB5EC() & 1) == 0);
    }
  }
  return v6;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

void sub_1A4B351B4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

unint64_t sub_1A4B35210(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A4B0E048((uint64_t *)&unk_1E965B6B0);
  uint64_t v2 = sub_1A4CBB4FC();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A4C9D904(v6, (uint64_t)&v15, (uint64_t *)&unk_1E965B608);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1A4AFB26C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1A4B0C5E4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A4B35348(uint64_t a1)
{
  return sub_1A4B032BC(a1, &qword_1E965B6A0);
}

unint64_t sub_1A4B35354(uint64_t a1)
{
  return sub_1A4B032BC(a1, &qword_1E965B698);
}

uint64_t sub_1A4B35360()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A4B35388(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_1A4B35398()
{
  sub_1A4B35618();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for DaemonConnection()
{
  uint64_t result = qword_1EB3F2078;
  if (!qword_1EB3F2078) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A4B3548C()
{
  return type metadata accessor for DaemonConnection();
}

ValueMetadata *type metadata accessor for DaemonConnection.State()
{
  return &type metadata for DaemonConnection.State;
}

uint64_t sub_1A4B354A4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1A4B354D8(uint64_t a1, void *a2)
{
  return sub_1A4AFD980(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1A4B354E0(uint64_t *a1)
{
  return sub_1A4B06030(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72));
}

uint64_t sub_1A4B35514(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(a1 + 48);
  sub_1A4B08658(v4);
  uint64_t result = sub_1A4B35388(v5);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v3;
  return result;
}

void sub_1A4B3556C()
{
}

uint64_t sub_1A4B35590(uint64_t *a1)
{
  uint64_t result = sub_1A4B35388(*a1);
  *a1 = 0;
  a1[1] = 0;
  return result;
}

ValueMetadata *type metadata accessor for DaemonConnection.SetupState()
{
  return &type metadata for DaemonConnection.SetupState;
}

uint64_t sub_1A4B355D0(uint64_t a1)
{
  return sub_1A4AFFAAC(a1, qword_1EB3F2588);
}

uint64_t sub_1A4B355F4(uint64_t a1)
{
  return sub_1A4AFFAAC(a1, qword_1E9660AD0);
}

void sub_1A4B35618()
{
  if (!qword_1EB3F2088)
  {
    unint64_t v0 = sub_1A4CBAFBC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB3F2088);
    }
  }
}

void sub_1A4B356D4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObserver_selector_name_object_(v6, v5, a1, (uint64_t)sel__handleChatGroupIDDidChangeNotification_, @"__kIMChatRegistryGroupIDChangedNotification", 0);
}

__CFString *sub_1A4B35E04(int a1)
{
  uint64_t v1 = @"Unknown";
  if (a1 == 1) {
    uint64_t v1 = @"Downgraded";
  }
  if (a1 == 2) {
    return @"Upgraded";
  }
  else {
    return v1;
  }
}

id sub_1A4B363FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_ID(a2, (const char *)a2, a3, a4);
  uint64_t v8 = objc_msgSend__stripFZIDPrefix(v4, v5, v6, v7);
  uint64_t v9 = IMChatCanonicalIDSIDsForAddress();

  return v9;
}

void IMChatCalculateServiceForSendingWithKTData(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, unsigned __int8 a7, unsigned __int8 a8, void *a9, void *a10)
{
}

void sub_1A4B364A0(uint64_t a1, void *a2, int a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v175 = *MEMORY[0x1E4F143B8];
  id v159 = a2;
  id v160 = a4;
  id v162 = a5;
  id v161 = a6;
  if (IMOSLoggingEnabled())
  {
    long long v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Received kt data in serviceForSending", buf, 2u);
    }
  }
  if (!objc_msgSend_count(v162, v14, v15, v16) && IMOSLoggingEnabled())
  {
    uint64_t v21 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_INFO, "Received no kt data in serviceForSending", buf, 2u);
    }
  }
  uint64_t v22 = objc_msgSend_sharedController(IMKeyTransparencyController, v18, v19, v20);
  objc_msgSend_setKTVerifierResultsFromIDSInfoResultsDictionary_(v22, v23, (uint64_t)v162, v24);

  uint64_t v28 = objc_msgSend_sharedController(IMKeyTransparencyController, v25, v26, v27);
  objc_msgSend_setKTVerifierResultsFromIDSInfoResultsDictionary_(v28, v29, (uint64_t)v161, v30);

  long long v34 = objc_msgSend_account(*(void **)(a1 + 32), v31, v32, v33);
  objc_msgSend_service(v34, v35, v36, v37);
  long long v163 = (__CFString *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend_isInternationalSpamFilteringEnabled(MEMORY[0x1E4F6EA38], v38, v39, v40))
  {
    uint64_t v44 = objc_msgSend_valueForChatProperty_(*(void **)(a1 + 32), v41, @"smsHandshakeState", v43);
    uint64_t v48 = v44;
    if (a8 == 5 && (int)objc_msgSend_intValue(v44, v45, v46, v47) <= 0)
    {
      uint64_t v52 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E890], v49, v50, v51);
      objc_msgSend_trackSpamEvent_(v52, v53, 2, v54);

      objc_msgSend_setValue_forChatProperty_(*(void **)(a1 + 32), v55, (uint64_t)&unk_1EF9144B8, @"smsHandshakeState");
    }
  }
  objc_msgSend_iMessageService(IMServiceImpl, v41, v42, v43);
  uint64_t v59 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (v163 == v59)
  {
  }
  else
  {
    objc_msgSend_smsService(IMServiceImpl, v56, v57, v58);
    uint64_t v60 = (__CFString *)objc_claimAutoreleasedReturnValue();
    BOOL v61 = v163 == v60;

    if (!v61)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v65 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v65, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          v169 = v163;
          _os_log_impl(&dword_1A4AF7000, v65, OS_LOG_TYPE_INFO, "(-refreshServiceForSending) bailing, current account once we got the IDS callback service isn't useful: %@", buf, 0xCu);
        }
      }
      goto LABEL_101;
    }
  }
  if (a3) {
    objc_msgSend_setHasHadSuccessfulQuery_(*(void **)(a1 + 32), v62, 1, v64);
  }
  if (objc_msgSend_isDowngraded(*(void **)(a1 + 32), v62, v63, v64))
  {
    if (IMOSLoggingEnabled())
    {
      id v69 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v69, OS_LOG_TYPE_INFO))
      {
        uint64_t v70 = @"NO";
        uint64_t v71 = *(void **)(a1 + 32);
        if (a3) {
          uint64_t v70 = @"YES";
        }
        *(_DWORD *)long long buf = 138412546;
        v169 = v70;
        __int16 v170 = 2112;
        uint64_t v171 = v71;
        _os_log_impl(&dword_1A4AF7000, v69, OS_LOG_TYPE_INFO, "Chat is downgraded, overriding IDS: allAddressesiMessageCapable(%@), chat: %@", buf, 0x16u);
      }
    }
    a3 = 0;
  }
  if (objc_msgSend_shouldForceToSMS(*(void **)(a1 + 32), v66, v67, v68))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v75 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v75, OS_LOG_TYPE_INFO))
      {
        uint64_t v76 = @"NO";
        if (a3) {
          uint64_t v76 = @"YES";
        }
        *(_DWORD *)long long buf = 138412290;
        v169 = v76;
        _os_log_impl(&dword_1A4AF7000, v75, OS_LOG_TYPE_INFO, "Forcing SMS: allAddressesiMessageCapable(%@)", buf, 0xCu);
      }
    }
    a3 = 0;
  }
  if (objc_msgSend_forceMMS(*(void **)(a1 + 32), v72, v73, v74))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v80 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v80, OS_LOG_TYPE_INFO))
      {
        uint64_t v81 = @"NO";
        if (a3) {
          uint64_t v81 = @"YES";
        }
        *(_DWORD *)long long buf = 138412290;
        v169 = v81;
        _os_log_impl(&dword_1A4AF7000, v80, OS_LOG_TYPE_INFO, "Forcing MMS: allAddressesiMessageCapable(%@)", buf, 0xCu);
      }
    }
    a3 = 0;
  }
  objc_msgSend_account(*(void **)(a1 + 32), v77, v78, v79);
  uint64_t v157 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (!a3)
  {
    char v92 = objc_msgSend_smsService(IMServiceImpl, v82, v83, v84);
    if (objc_msgSend_isEqual_(v163, v93, (uint64_t)v92, v94))
    {
      char isUsableForSending = objc_msgSend__isUsableForSending(v157, v95, v96, v97);

      if (isUsableForSending) {
        goto LABEL_54;
      }
    }
    else
    {
    }
    long long v166 = 0u;
    long long v167 = 0u;
    long long v164 = 0u;
    long long v165 = 0u;
    uint64_t v113 = objc_msgSend_participants(*(void **)(a1 + 32), v99, v100, v101, v157, v159);
    uint64_t v118 = objc_msgSend_countByEnumeratingWithState_objects_count_(v113, v114, (uint64_t)&v164, (uint64_t)v174, 16);
    if (v118)
    {
      uint64_t v119 = *(void *)v165;
      uint64_t v120 = *MEMORY[0x1E4F6EB30];
      while (2)
      {
        for (uint64_t i = 0; i != v118; ++i)
        {
          if (*(void *)v165 != v119) {
            objc_enumerationMutation(v113);
          }
          uint64_t v122 = *(__CFString **)(*((void *)&v164 + 1) + 8 * i);
          uint64_t v123 = (void *)MEMORY[0x1E4F6EA38];
          uint64_t v124 = objc_msgSend_ID(v122, v115, v116, v117);
          uint64_t v126 = objc_msgSend_mapID_usingKey_(v123, v125, (uint64_t)v124, v120);

          if (IMStringIsEmail())
          {
            if (IMOSLoggingEnabled())
            {
              char v137 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v137, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                v169 = v122;
                _os_log_impl(&dword_1A4AF7000, v137, OS_LOG_TYPE_INFO, "%@ was an email, so not retargeting", buf, 0xCu);
              }
            }
            goto LABEL_87;
          }
        }
        uint64_t v118 = objc_msgSend_countByEnumeratingWithState_objects_count_(v113, v115, (uint64_t)&v164, (uint64_t)v174, 16);
        if (v118) {
          continue;
        }
        break;
      }
    }

    uint64_t v127 = (void *)MEMORY[0x1E4F6EA38];
    uint64_t v131 = objc_msgSend_lastAddressedHandleID(*(void **)(a1 + 32), v128, v129, v130);
    uint64_t v113 = objc_msgSend_mapID_usingKey_(v127, v132, (uint64_t)v131, *MEMORY[0x1E4F6EB38]);

    if (!v113)
    {
      uint64_t v113 = objc_msgSend_displayName(v157, v133, v134, v135);
    }
    if (IMStringIsEmail())
    {
      if (IMOSLoggingEnabled())
      {
        unint64_t v136 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v136, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v136, OS_LOG_TYPE_INFO, "my caller id was an email, so not retargeting", buf, 2u);
        }
      }
LABEL_87:

      if (IMOSLoggingEnabled())
      {
        uint64_t v138 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v138, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v138, OS_LOG_TYPE_INFO, "refresh, current service was iMessage, and a recipient/me was an email, so not retargeting", buf, 2u);
        }
      }
    }
    else
    {

      if (IMOSLoggingEnabled())
      {
        uint64_t v142 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v142, OS_LOG_TYPE_INFO))
        {
          uint64_t v143 = *(__CFString **)(a1 + 32);
          *(_DWORD *)long long buf = 138412290;
          v169 = v143;
          _os_log_impl(&dword_1A4AF7000, v142, OS_LOG_TYPE_INFO, "refresh, will retarget chat to SMS/MMS: %@", buf, 0xCu);
        }
      }
      BOOL v144 = *(void **)(a1 + 32);
      id v145 = objc_msgSend_smsService(IMServiceImpl, v139, v140, v141);
      objc_msgSend__targetToService_newComposition_(v144, v146, (uint64_t)v145, 0);
    }
    goto LABEL_96;
  }
  uint64_t v85 = objc_msgSend_iMessageService(IMServiceImpl, v82, v83, v84);
  if (objc_msgSend_isEqual_(v163, v86, (uint64_t)v85, v87))
  {
    char v91 = objc_msgSend__isUsableForSending(v157, v88, v89, v90);

    if ((v91 & 1) == 0) {
      goto LABEL_61;
    }
LABEL_54:
    if (IMOSLoggingEnabled())
    {
      char v102 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v102, OS_LOG_TYPE_INFO))
      {
        int v103 = @"NO";
        uint64_t v104 = *(void **)(a1 + 32);
        if (a3) {
          int v103 = @"YES";
        }
        *(_DWORD *)long long buf = 138412546;
        v169 = v103;
        __int16 v170 = 2112;
        uint64_t v171 = v104;
        _os_log_impl(&dword_1A4AF7000, v102, OS_LOG_TYPE_INFO, "Nothing to do, were on the service we wanted: allAddressesiMessageCapable(%@): chat: %@", buf, 0x16u);
      }
    }
    goto LABEL_96;
  }

LABEL_61:
  if (IMOSLoggingEnabled())
  {
    uint64_t v108 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v108, OS_LOG_TYPE_INFO))
    {
      uint64_t v109 = *(__CFString **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      v169 = v109;
      _os_log_impl(&dword_1A4AF7000, v108, OS_LOG_TYPE_INFO, "Targeting to iMessage because we weren't iMessage before: %@", buf, 0xCu);
    }
  }
  char v110 = *(void **)(a1 + 32);
  uint64_t v111 = objc_msgSend_iMessageService(IMServiceImpl, v105, v106, v107, v157, v159);
  objc_msgSend__targetToService_newComposition_(v110, v112, (uint64_t)v111, 0);

LABEL_96:
  if (IMOSLoggingEnabled())
  {
    uint64_t v149 = OSLogHandleForIMEventCategory();
    if (os_log_type_enabled(v149, OS_LOG_TYPE_INFO))
    {
      uint64_t v153 = objc_msgSend_account(*(void **)(a1 + 32), v150, v151, v152);
      uint64_t v154 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412802;
      v169 = v157;
      __int16 v170 = 2112;
      uint64_t v171 = v153;
      __int16 v172 = 2112;
      uint64_t v173 = v154;
      _os_log_impl(&dword_1A4AF7000, v149, OS_LOG_TYPE_INFO, "(-refreshServiceForSending) Old account: %@, new account: %@, chat: %@", buf, 0x20u);
    }
  }
  objc_msgSend_setHasRefreshedServiceForSending_(*(void **)(a1 + 32), v147, 1, v148, v157);
  objc_msgSend__updateHybridGroupStateWithPerParticipantIDSStatus_(*(void **)(a1 + 32), v155, (uint64_t)v160, v156);

LABEL_101:
}

void IMChatCalculateServiceForSendingNewComposeMaybeForceWithKTData(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, char a7, uint64_t a8, unsigned __int8 a9, unsigned __int8 a10, void *a11, void *a12)
{
  uint64_t v224 = *MEMORY[0x1E4F143B8];
  id v194 = a1;
  id v196 = a2;
  id v193 = a3;
  id v19 = a4;
  id v198 = a5;
  id v195 = a11;
  id v197 = a12;
  uint64_t v23 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v20, v21, v22);
  LODWORD(a2) = objc_msgSend_isServiceForSendingRefactorEnabled(v23, v24, v25, v26);

  if (a2)
  {
    id v27 = objc_alloc_init(MEMORY[0x1E4F6E970]);
    long long v31 = objc_msgSend_chatIdentifier(v196, v28, v29, v30);
    objc_msgSend_setChatIdentifier_(v27, v32, (uint64_t)v31, v33);

    uint64_t v37 = objc_msgSend_chatStyle(v196, v34, v35, v36);
    objc_msgSend_setChatStyle_(v27, v38, v37, v39);
    uint64_t v43 = objc_msgSend__stripFZIDPrefix(v19, v40, v41, v42);
    objc_msgSend_setSenderLastAddressedHandle_(v27, v44, (uint64_t)v43, v45);

    objc_msgSend_setSenderLastAddressedSIMID_(v27, v46, (uint64_t)v198, v47);
    objc_msgSend_setForceMMS_(v27, v48, a6, v49);
    objc_msgSend_setShouldForceServerStatusRefresh_(v27, v50, a8, v51);
    objc_msgSend_setConversationWasDowngraded_(v27, v52, a9, v53);
    objc_msgSend_setHasConversationHistory_(v27, v54, a10, v55);
    uint64_t v59 = objc_msgSend_internalName(v195, v56, v57, v58);
    objc_msgSend_setLastUsedServiceName_(v27, v60, (uint64_t)v59, v61);

    uint64_t v65 = objc_msgSend_sharedController(IMServiceReachabilityController, v62, v63, v64);
    v220[0] = MEMORY[0x1E4F143A8];
    v220[1] = 3221225472;
    v220[2] = sub_1A4B38DAC;
    v220[3] = &unk_1E5B7ABB8;
    id v221 = v197;
    objc_msgSend_calculateServiceForSendingToHandles_withContext_completionBlock_(v65, v66, (uint64_t)v194, (uint64_t)v27, v220);

    goto LABEL_28;
  }
  int v67 = IMSMSFallbackEnabled();
  uint64_t v71 = objc_msgSend_sharedInstance(IMAccountController, v68, v69, v70);
  int v75 = objc_msgSend_networkDataAvailable(v71, v72, v73, v74);

  if (IMOSLoggingEnabled())
  {
    uint64_t v79 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
    {
      uint64_t v80 = @"NO";
      if (v67) {
        uint64_t v81 = @"YES";
      }
      else {
        uint64_t v81 = @"NO";
      }
      if (v75) {
        uint64_t v80 = @"YES";
      }
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v81;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v80;
      _os_log_impl(&dword_1A4AF7000, v79, OS_LOG_TYPE_INFO, "isSMSFallBackEnabled %@, Network data available: %@", buf, 0x16u);
    }
  }
  uint64_t v82 = objc_msgSend_smsEnabled(IMServiceImpl, v76, v77, v78);
  char v192 = objc_msgSend_mmsEnabledforPhoneNumber_simID_(IMServiceImpl, v83, (uint64_t)v19, (uint64_t)v198);
  if (!(v75 | v67 ^ 1)
    || !objc_msgSend_iMessageEnabledForSenderLastAddressedHandle_simID_previousService_(IMServiceImpl, v84, (uint64_t)v19, (uint64_t)v198, v195))
  {
    int v102 = 0;
LABEL_20:
    if (IMOSLoggingEnabled())
    {
      uint64_t v106 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v106, OS_LOG_TYPE_INFO))
      {
        uint64_t v107 = @"NO";
        if (v102) {
          uint64_t v107 = @"YES";
        }
        *(_DWORD *)long long buf = 138412290;
        *(void *)&uint8_t buf[4] = v107;
        _os_log_impl(&dword_1A4AF7000, v106, OS_LOG_TYPE_INFO, "IMChatCalculateServiceForSending iMessage not available (%@) or no addresses, bailing", buf, 0xCu);
      }
    }
    if (v197)
    {
      uint64_t v108 = objc_msgSend_smsService(IMServiceImpl, v103, v104, v105);
      uint64_t v112 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v109, v110, v111);
      uint64_t v116 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v113, v114, v115);
      uint64_t v120 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v117, v118, v119);
      (*((void (**)(id, void *, void, void *, void *, void *, uint64_t, void))v197 + 2))(v197, v108, 0, v112, v116, v120, 1, 0);
    }
    goto LABEL_28;
  }
  if (!objc_msgSend_count(v194, v85, v86, v87))
  {
    int v102 = 1;
    goto LABEL_20;
  }
  if (objc_msgSend_isInternationalSpamFilteringEnabled(MEMORY[0x1E4F6EA38], v88, v89, v90)
    && objc_msgSend_count(v194, v91, v92, v93) == 1)
  {
    id v219 = v19;
    IMChatGetHandleForNilSender(&v219, v198);
    id v191 = v219;

    uint64_t v100 = objc_msgSend_firstObject(v194, v94, v95, v96);
    if (a9)
    {
      int shouldDowngradeToRecipient_fromSender_ifCapableOfSMS_withConversationDowngradeState_andConversationHistoryState = objc_msgSend_shouldDowngradeToRecipient_fromSender_ifCapableOfSMS_withConversationDowngradeState_andConversationHistoryState_(MEMORY[0x1E4F6EA38], v97, (uint64_t)v100, (uint64_t)v191, v82, 1, a10);
    }
    else
    {
      uint64_t v121 = objc_msgSend_name(v195, v97, v98, v99);
      uint64_t isEqualToString = objc_msgSend_isEqualToString_(v121, v122, *MEMORY[0x1E4F6E1A0], v123);

      int shouldDowngradeToRecipient_fromSender_ifCapableOfSMS_withConversationDowngradeState_andConversationHistoryState = objc_msgSend_shouldDowngradeToRecipient_fromSender_ifCapableOfSMS_withConversationDowngradeState_andConversationHistoryState_(MEMORY[0x1E4F6EA38], v125, (uint64_t)v100, (uint64_t)v191, v82, isEqualToString, a10);
    }
    if (shouldDowngradeToRecipient_fromSender_ifCapableOfSMS_withConversationDowngradeState_andConversationHistoryState)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v129 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v129, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v129, OS_LOG_TYPE_INFO, "Detected spam-filtered recipient and sender combination; downgrading conversation",
            buf,
            2u);
        }
      }
      if (v197)
      {
        uint64_t v130 = objc_msgSend_smsService(IMServiceImpl, v126, v127, v128);
        uint64_t v134 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v131, v132, v133);
        uint64_t v138 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v135, v136, v137);
        uint64_t v142 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v139, v140, v141);
        (*((void (**)(id, void *, void, void *, void *, void *, uint64_t, uint64_t))v197 + 2))(v197, v130, 0, v134, v138, v142, 1, 5);
      }
      id v19 = v191;
      goto LABEL_28;
    }

    id v19 = v191;
  }
  if (a6)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v146 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v146, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v146, OS_LOG_TYPE_INFO, "IMChatCalculateServiceForSending forcing MMS", buf, 2u);
      }
    }
    if (v197)
    {
      uint64_t v147 = objc_msgSend_smsService(IMServiceImpl, v143, v144, v145);
      uint64_t v151 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v148, v149, v150);
      v155 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v152, v153, v154);
      id v159 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v156, v157, v158);
      (*((void (**)(id, void *, void, void *, void *, void *, uint64_t, void))v197 + 2))(v197, v147, 0, v151, v155, v159, 1, 0);
    }
  }
  else
  {
    *(void *)long long buf = 0;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000;
    char v223 = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = sub_1A4B3912C;
    aBlock[3] = &unk_1E5B7AC30;
    id v160 = v194;
    id v209 = v160;
    id v161 = v193;
    id v210 = v161;
    id v211 = v195;
    v215 = buf;
    char v216 = v82;
    id v214 = v197;
    char v217 = a7;
    char v218 = v192;
    id v19 = v19;
    id v212 = v19;
    id v213 = v198;
    id v162 = _Block_copy(aBlock);
    id v163 = objc_alloc(MEMORY[0x1E4F1CA48]);
    long long v166 = objc_msgSend_initWithArray_(v163, v164, (uint64_t)v160, v165);
    v169 = v166;
    if (v161) {
      objc_msgSend_addObject_(v166, v167, (uint64_t)v161, v168);
    }
    if (a8)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v173 = OSLogHandleForIMEventCategory();
        if (os_log_type_enabled(v173, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)char v207 = 0;
          _os_log_impl(&dword_1A4AF7000, v173, OS_LOG_TYPE_INFO, "NewCompose: Last sent message was not delivered, force ID status refresh with the server", v207, 2u);
        }
      }
      uint64_t v174 = objc_msgSend_refreshIDInfo(MEMORY[0x1E4F6B4A0], v170, v171, v172);
      objc_msgSend_setForceRefresh_(v174, v175, 1, v176);
      v177 = (void *)MEMORY[0x1E4F6E7B8];
      uint64_t v178 = IMServiceNameForCanonicalIDSAddresses();
      uint64_t v179 = MEMORY[0x1E4F14428];
      id v180 = MEMORY[0x1E4F14428];
      v205[0] = MEMORY[0x1E4F143A8];
      v205[1] = 3221225472;
      v205[2] = sub_1A4B3A114;
      v205[3] = &unk_1E5B7AC58;
      id v206 = v162;
      objc_msgSend_idInfoForDestinations_service_fromID_infoTypes_options_listenerID_queue_completionBlock_(v177, v181, (uint64_t)v169, (uint64_t)v178, v19, 2, v174, @"__kIMChatServiceForSendingIDSQueryControllerListenerID", v179, v205);
    }
    else
    {
      v182 = (void *)MEMORY[0x1E4F6E7B8];
      v183 = IMServiceNameForCanonicalIDSAddresses();
      v187 = objc_msgSend_currentIDInfo(MEMORY[0x1E4F6B4A0], v184, v185, v186);
      uint64_t v188 = MEMORY[0x1E4F14428];
      id v189 = MEMORY[0x1E4F14428];
      v199[0] = MEMORY[0x1E4F143A8];
      v199[1] = 3221225472;
      v199[2] = sub_1A4B3A314;
      v199[3] = &unk_1E5B7AC80;
      id v203 = v162;
      long long v204 = buf;
      id v200 = v169;
      id v201 = v160;
      id v202 = v19;
      objc_msgSend_idInfoForDestinations_service_fromID_infoTypes_options_listenerID_queue_completionBlock_(v182, v190, (uint64_t)v200, (uint64_t)v183, v202, 2, v187, @"__kIMChatServiceForSendingIDSQueryControllerListenerID", v188, v199);

      uint64_t v174 = v203;
    }

    _Block_object_dispose(buf, 8);
  }
LABEL_28:
}

uint64_t _IMChatServiceForSendingAvailabilityErrorFromReachabilityResults(void *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v1 = a1;
  uint64_t v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v2, (uint64_t)&v27, (uint64_t)v31, 16);
  if (v3)
  {
    uint64_t v7 = v3;
    char v26 = 0;
    int v8 = 0;
    char v9 = 0;
    char v10 = 0;
    uint64_t v11 = *(void *)v28;
    uint64_t v12 = (uint64_t *)MEMORY[0x1E4F6E1A0];
LABEL_3:
    uint64_t v13 = 0;
    while (2)
    {
      if (*(void *)v28 != v11) {
        objc_enumerationMutation(v1);
      }
      uint64_t v14 = *(void **)(*((void *)&v27 + 1) + 8 * v13);
      uint64_t v15 = objc_msgSend_error(v14, v4, v5, v6);
      switch(v15)
      {
        case 0:
          v8 |= objc_msgSend_allAreReachable(v14, v4, v5, v6);
          goto LABEL_11;
        case 1:
          char v26 = 1;
          goto LABEL_11;
        case 3:
          uint64_t v16 = objc_msgSend_service(v14, v4, v5, v6);
          char isEqualToString = objc_msgSend_isEqualToString_(v16, v17, *v12, v18);

          v10 |= isEqualToString;
          goto LABEL_11;
        case 5:
          goto LABEL_22;
        case 6:
          uint64_t v20 = objc_msgSend_service(v14, v4, v5, v6);
          char v23 = objc_msgSend_isEqualToString_(v20, v21, *v12, v22);

          v9 |= v23;
          goto LABEL_11;
        case 7:
          uint64_t v15 = 6;
LABEL_22:

          break;
        default:
LABEL_11:
          if (v7 != ++v13) {
            continue;
          }
          uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v4, (uint64_t)&v27, (uint64_t)v31, 16);
          if (v7) {
            goto LABEL_3;
          }

          uint64_t v24 = 3;
          if ((v9 & 1) == 0) {
            uint64_t v24 = 0;
          }
          if (v10) {
            uint64_t v15 = 2;
          }
          else {
            uint64_t v15 = v24;
          }
          if ((v8 | v26)) {
            uint64_t v15 = ~v8 & 1;
          }
          break;
      }
      break;
    }
  }
  else
  {

    uint64_t v15 = 0;
  }

  return v15;
}

void sub_1A4B38DAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v7 = objc_msgSend_smsService(IMService, v4, v5, v6);
  uint64_t v11 = objc_msgSend_bestResult(v3, v8, v9, v10);

  if (v11)
  {
    uint64_t v15 = objc_msgSend_bestResult(v3, v12, v13, v14);
    id v19 = objc_msgSend_service(v15, v16, v17, v18);
    uint64_t v22 = objc_msgSend_serviceWithName_(IMService, v20, (uint64_t)v19, v21);

    uint64_t v7 = (void *)v22;
  }
  else
  {
    uint64_t v15 = objc_msgSend_resultsByAccountID(v3, v12, v13, v14);
    id v19 = objc_msgSend_allValues(v15, v23, v24, v25);
    _IMChatServiceForSendingAvailabilityErrorFromReachabilityResults(v19);
  }

  id v26 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  long long v29 = objc_msgSend_resultsForServiceName_(v3, v27, *MEMORY[0x1E4F6E1B0], v28);
  uint64_t v33 = objc_msgSend_firstObject(v29, v30, v31, v32);

  if (v33)
  {
    uint64_t v37 = objc_msgSend_ktData(v33, v34, v35, v36);
    v46[0] = MEMORY[0x1E4F143A8];
    v46[1] = 3221225472;
    v46[2] = sub_1A4B38FA4;
    v46[3] = &unk_1E5B7AB90;
    id v47 = v26;
    objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v37, v38, (uint64_t)v46, v39);

    objc_msgSend_didCheckServer(v33, v40, v41, v42);
    objc_msgSend_allAreReachable(v33, v43, v44, v45);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4B38FA4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = NSNumber;
  id v6 = a2;
  uint64_t v10 = objc_msgSend_status(a3, v7, v8, v9);
  objc_msgSend_numberWithInteger_(v5, v11, v10, v12);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v13, (uint64_t)v14, (uint64_t)v6);
}

uint64_t IMChatGetHandleForNilSender(void *a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (!*a1)
  {
    long long v30 = (char *)v3;
    uint64_t v7 = objc_msgSend_iMessageService(IMServiceImpl, v3, v4, v5);
    uint64_t v8 = IMPreferredAccountForService(v7);
    objc_msgSend_displayName(v8, v9, v10, v11);
    id v12 = (id)objc_claimAutoreleasedReturnValue();
    *a1 = v12;

    id v6 = v30;
    if (!v12)
    {
      id v3 = (const char *)objc_msgSend_length(v30, v30, v13, v14);
      id v6 = v30;
      if (v3)
      {
        id v15 = objc_alloc(MEMORY[0x1E4F6AB90]);
        uint64_t v18 = objc_msgSend_initWithService_(v15, v16, @"com.apple.madrid", v17);
        uint64_t v21 = objc_msgSend_accountMatchingSimIdentifier_(v18, v19, (uint64_t)v30, v20);
        uint64_t v25 = objc_msgSend_aliasStrings(v21, v22, v23, v24);
        objc_msgSend_firstObject(v25, v26, v27, v28);
        *a1 = (id)objc_claimAutoreleasedReturnValue();

        id v6 = v30;
      }
    }
  }

  return MEMORY[0x1F41817F8](v3, v6);
}

uint64_t sub_1A4B3912C(uint64_t a1, void *a2, unsigned int a3)
{
  v160[1] = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  uint64_t v9 = v5;
  uint64_t v122 = a1;
  unsigned int v116 = a3;
  if (v5 && objc_msgSend_count(v5, v6, v7, v8))
  {
    uint64_t v13 = 1;
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "IDS cache did not return any results", buf, 2u);
    }

    uint64_t v13 = 0;
    a1 = v122;
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v121 = (__CFString *)objc_msgSend_mutableCopy(*(void **)(a1 + 32), v10, v11, v12);
  uint64_t v119 = objc_opt_new();
  id v15 = objc_alloc(MEMORY[0x1E4F1CA60]);
  uint64_t v118 = objc_msgSend_initWithDictionary_(v15, v16, (uint64_t)v9, v17);
  uint64_t v20 = *(void *)(v122 + 40);
  if (v20)
  {
    uint64_t v21 = objc_msgSend_objectForKey_(v9, v18, v20, v19);
    uint64_t v23 = (void *)v21;
    if (v21)
    {
      uint64_t v159 = *(void *)(v122 + 40);
      v160[0] = v21;
      uint64_t v117 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v22, (uint64_t)v160, (uint64_t)&v159, 1);
      objc_msgSend_removeObjectForKey_(v118, v24, *(void *)(v122 + 40), v25);
    }
    else
    {
      uint64_t v117 = 0;
    }
  }
  else
  {
    uint64_t v117 = 0;
  }
  if (objc_msgSend_count(v118, v18, v20, v19))
  {
    id v29 = v118;

    uint64_t v27 = *(void *)(v122 + 40);
    if (v27) {
      objc_msgSend_removeObject_(v121, v26, v27, v28);
    }
    long long v30 = v29;
  }
  else
  {
    long long v30 = v9;
  }
  long long v150 = 0u;
  long long v151 = 0u;
  long long v148 = 0u;
  long long v149 = 0u;
  uint64_t v120 = v30;
  uint64_t v31 = objc_msgSend_allKeys(v30, v26, v27, v28);
  uint64_t v35 = objc_msgSend_countByEnumeratingWithState_objects_count_(v31, v32, (uint64_t)&v148, (uint64_t)v158, 16);
  if (v35)
  {
    uint64_t v36 = *(void *)v149;
    while (2)
    {
      for (uint64_t i = 0; i != v35; ++i)
      {
        if (*(void *)v149 != v36) {
          objc_enumerationMutation(v31);
        }
        uint64_t v38 = *(void *)(*((void *)&v148 + 1) + 8 * i);
        objc_msgSend_removeObject_(v121, v33, v38, v34);
        uint64_t v41 = objc_msgSend_objectForKey_(v120, v39, v38, v40);
        uint64_t v45 = objc_msgSend_status(v41, v42, v43, v44);
        uint64_t v48 = objc_msgSend_numberWithInteger_(NSNumber, v46, v45, v47);
        objc_msgSend_setObject_forKeyedSubscript_(v119, v49, (uint64_t)v48, v38);

        if (v45)
        {
          if (v45 == 2)
          {
            if (IMOSLoggingEnabled())
            {
              uint64_t v59 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                uint64_t v153 = (__CFString *)v38;
                _os_log_impl(&dword_1A4AF7000, v59, OS_LOG_TYPE_INFO, "Destination is invalid: %@", buf, 0xCu);
              }
            }
LABEL_48:

            uint64_t v13 = 0;
            goto LABEL_49;
          }
          if ((v13 & 1) == 0) {
            goto LABEL_48;
          }
        }
        else
        {
          if (IMOSLoggingEnabled())
          {
            uint64_t v53 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v53, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = 138412290;
              uint64_t v153 = (__CFString *)v38;
              _os_log_impl(&dword_1A4AF7000, v53, OS_LOG_TYPE_INFO, "Destination is unknown: %@", buf, 0xCu);
            }
          }
          uint64_t v54 = *(void **)(v122 + 48);
          if (!v54) {
            goto LABEL_48;
          }
          uint64_t v55 = objc_msgSend_iMessageService(IMServiceImpl, v50, v51, v52);
          char isEqual = objc_msgSend_isEqual_(v54, v56, (uint64_t)v55, v57);

          if ((isEqual & 1) == 0)
          {
            if (IMOSLoggingEnabled())
            {
              uint64_t v60 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v60, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)long long buf = 0;
                _os_log_impl(&dword_1A4AF7000, v60, OS_LOG_TYPE_INFO, "Previous service was not imessage, saying we aren't iMessage capable", buf, 2u);
              }
            }
            *(unsigned char *)(*(void *)(*(void *)(v122 + 80) + 8) + 24) = 1;
            goto LABEL_48;
          }
          *(unsigned char *)(*(void *)(*(void *)(v122 + 80) + 8) + 24) = 1;
          if ((v13 & 1) == 0) {
            goto LABEL_48;
          }
        }

        uint64_t v13 = 1;
      }
      uint64_t v35 = objc_msgSend_countByEnumeratingWithState_objects_count_(v31, v33, (uint64_t)&v148, (uint64_t)v158, 16);
      if (v35) {
        continue;
      }
      break;
    }
  }
LABEL_49:

  if (objc_msgSend_count(v121, v61, v62, v63))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v64 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v153 = v121;
        _os_log_impl(&dword_1A4AF7000, v64, OS_LOG_TYPE_INFO, "IDS didn't give us back all the results we asked about: %@", buf, 0xCu);
      }
    }
    uint64_t v13 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v68 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v68, OS_LOG_TYPE_INFO))
    {
      uint64_t v69 = @"NO";
      if (v13) {
        uint64_t v69 = @"YES";
      }
      *(_DWORD *)long long buf = 138412546;
      uint64_t v153 = v69;
      __int16 v154 = 2112;
      v155 = v120;
      _os_log_impl(&dword_1A4AF7000, v68, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@): ", buf, 0x16u);
    }
  }
  if (*(void *)(v122 + 48)) {
    char v70 = 1;
  }
  else {
    char v70 = v13;
  }
  if ((v70 & 1) == 0)
  {
    if (*(unsigned char *)(v122 + 88))
    {
      if (!*(unsigned char *)(v122 + 89) || *(unsigned char *)(v122 + 90)) {
        goto LABEL_65;
      }
      if (IMOSLoggingEnabled())
      {
        uint64_t v77 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412802;
          uint64_t v153 = @"NO";
          __int16 v154 = 2112;
          v155 = v119;
          __int16 v156 = 2048;
          uint64_t v157 = 3;
          _os_log_impl(&dword_1A4AF7000, v77, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): Not all iMessageable, email recipients, no MMS", buf, 0x20u);
        }
      }
      if (*(void *)(v122 + 72))
      {
        if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v74, v75, v76))
        {
          uint64_t v81 = *(void *)(v122 + 72);
          uint64_t v82 = objc_msgSend_smsService(IMServiceImpl, v78, v79, v80);
          (*(void (**)(uint64_t, void *, void, void *, void *, void *, void, uint64_t))(v81 + 16))(v81, v82, 0, v119, v120, v117, v116, 3);
          goto LABEL_111;
        }
        uint64_t v114 = v136;
        v136[0] = MEMORY[0x1E4F143A8];
        v136[1] = 3221225472;
        v136[2] = sub_1A4B39F8C;
        v136[3] = &unk_1E5B7ABE0;
        id v140 = *(id *)(v122 + 72);
        id v137 = v119;
        id v138 = v120;
        id v139 = v117;
        char v141 = v116;
        dispatch_async(MEMORY[0x1E4F14428], v136);

        goto LABEL_113;
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v86 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v86, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412802;
          uint64_t v153 = @"NO";
          __int16 v154 = 2112;
          v155 = v119;
          __int16 v156 = 2048;
          uint64_t v157 = 2;
          _os_log_impl(&dword_1A4AF7000, v86, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): No iMessage, no SMS, !allAddressesiMessageCapable", buf, 0x20u);
        }
      }
      if (*(void *)(v122 + 72))
      {
        if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v83, v84, v85))
        {
          uint64_t v90 = *(void *)(v122 + 72);
          uint64_t v82 = objc_msgSend_smsService(IMServiceImpl, v87, v88, v89);
          (*(void (**)(uint64_t, void *, void, void *, void *, void *, void, uint64_t))(v90 + 16))(v90, v82, 0, v119, v120, v117, v116, 2);
          goto LABEL_111;
        }
        uint64_t v114 = v142;
        v142[0] = MEMORY[0x1E4F143A8];
        v142[1] = 3221225472;
        v142[2] = sub_1A4B39F10;
        v142[3] = &unk_1E5B7ABE0;
        id v146 = *(id *)(v122 + 72);
        id v143 = v119;
        id v144 = v120;
        id v145 = v117;
        char v147 = v116;
        dispatch_async(MEMORY[0x1E4F14428], v142);

LABEL_113:
        uint64_t v13 = 0;
        goto LABEL_114;
      }
    }
    uint64_t v13 = 0;
    goto LABEL_116;
  }
LABEL_65:
  if ((unint64_t)objc_msgSend_count(*(void **)(v122 + 32), v65, v66, v67) >= 2)
  {
    if (v13) {
      objc_msgSend_iMessageService(IMServiceImpl, v71, v72, v73);
    }
    else {
    uint64_t v82 = objc_msgSend_smsService(IMServiceImpl, v71, v72, v73);
    }
    unint64_t v92 = objc_msgSend_maxChatParticipantsForHandle_simID_(v82, v91, *(void *)(v122 + 56), *(void *)(v122 + 64));
    if (objc_msgSend_count(*(void **)(v122 + 32), v93, v94, v95) > v92)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v99 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v99, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412802;
          uint64_t v153 = @"NO";
          __int16 v154 = 2112;
          v155 = v119;
          __int16 v156 = 2048;
          uint64_t v157 = 1;
          _os_log_impl(&dword_1A4AF7000, v99, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): Too many recipients", buf, 0x20u);
        }
      }
      if (*(void *)(v122 + 72))
      {
        if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v96, v97, v98))
        {
          uint64_t v103 = *(void *)(v122 + 72);
          uint64_t v104 = objc_msgSend_smsService(IMServiceImpl, v100, v101, v102);
          (*(void (**)(uint64_t, void *, void, void *, void *, void *, void, uint64_t))(v103 + 16))(v103, v104, 0, v119, v120, v117, v116, 1);
        }
        else
        {
          v130[0] = MEMORY[0x1E4F143A8];
          v130[1] = 3221225472;
          v130[2] = sub_1A4B3A008;
          v130[3] = &unk_1E5B7ABE0;
          id v134 = *(id *)(v122 + 72);
          id v131 = v119;
          id v132 = v120;
          id v133 = v117;
          char v135 = v116;
          dispatch_async(MEMORY[0x1E4F14428], v130);

          uint64_t v104 = v134;
        }
      }
      goto LABEL_111;
    }
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v108 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v108, OS_LOG_TYPE_INFO))
    {
      uint64_t v109 = @"NO";
      if (v13) {
        uint64_t v109 = @"YES";
      }
      *(_DWORD *)long long buf = 138412546;
      uint64_t v153 = v109;
      __int16 v154 = 2112;
      v155 = v119;
      _os_log_impl(&dword_1A4AF7000, v108, OS_LOG_TYPE_INFO, "Choosing all iMessageable(%@) perRecipientAvailability:(%@): Last chance to choose service", buf, 0x16u);
    }
  }
  if (*(void *)(v122 + 72))
  {
    if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v105, v106, v107))
    {
      uint64_t v113 = *(void *)(v122 + 72);
      if (v13)
      {
        uint64_t v82 = objc_msgSend_iMessageService(IMServiceImpl, v110, v111, v112);
        (*(void (**)(uint64_t, void *, uint64_t, void *, void *, void *, void, void))(v113 + 16))(v113, v82, 1, v119, v120, v117, v116, 0);
        uint64_t v13 = 1;
LABEL_115:

        goto LABEL_116;
      }
      uint64_t v82 = objc_msgSend_smsService(IMServiceImpl, v110, v111, v112);
      (*(void (**)(uint64_t, void *, void, void *, void *, void *, void, void))(v113 + 16))(v113, v82, 0, v119, v120, v117, v116, 0);
LABEL_111:
      uint64_t v13 = 0;
      goto LABEL_115;
    }
    uint64_t v114 = block;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4B3A084;
    block[3] = &unk_1E5B7AC08;
    id v127 = *(id *)(v122 + 72);
    char v128 = v13;
    id v124 = v119;
    id v125 = v120;
    id v126 = v117;
    char v129 = v116;
    dispatch_async(MEMORY[0x1E4F14428], block);

LABEL_114:
    uint64_t v82 = (void *)v114[7];
    goto LABEL_115;
  }
LABEL_116:

  return v13;
}

void sub_1A4B39F10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 56);
  objc_msgSend_smsService(IMServiceImpl, a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, void, void, void, void, void, uint64_t))(v5 + 16))(v5, v6, 0, *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 64), 2);
}

void sub_1A4B39F8C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 56);
  objc_msgSend_smsService(IMServiceImpl, a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, void, void, void, void, void, uint64_t))(v5 + 16))(v5, v6, 0, *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 64), 3);
}

void sub_1A4B3A008(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 56);
  objc_msgSend_smsService(IMServiceImpl, a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id, void, void, void, void, void, uint64_t))(v5 + 16))(v5, v6, 0, *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 64), 1);
}

void sub_1A4B3A084(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 56);
  if (*(unsigned char *)(a1 + 64)) {
    objc_msgSend_iMessageService(IMServiceImpl, a2, a3, a4);
  }
  else {
    objc_msgSend_smsService(IMServiceImpl, a2, a3, a4);
  }
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t))(v4 + 16))(v4);
}

void sub_1A4B3A114(uint64_t a1, void *a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  int v7 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v7)
    {
      uint64_t v8 = OSLogHandleForIMEventCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v12 = 138412290;
        uint64_t v13 = v6;
        _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Error with IDSIDQueryController query: %@", (uint8_t *)&v12, 0xCu);
      }
LABEL_15:
    }
  }
  else
  {
    if (v7)
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        int v12 = 138412290;
        uint64_t v13 = v5;
        _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "IDS force refresh server status complete: %@", (uint8_t *)&v12, 0xCu);
      }
    }
    int v10 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
    if (IMOSLoggingEnabled())
    {
      uint64_t v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        uint64_t v11 = @"NO";
        if (v10) {
          uint64_t v11 = @"YES";
        }
        int v12 = 138412290;
        uint64_t v13 = v11;
        _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Finished evaluating based on force refresh: allAddressesiMessageCapable(%@)", (uint8_t *)&v12, 0xCu);
      }
      goto LABEL_15;
    }
  }
}

void sub_1A4B3A314(uint64_t a1, void *a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  int v7 = (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16))();
  if (IMOSLoggingEnabled())
  {
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      id v22 = v5;
      __int16 v23 = 2112;
      id v24 = v6;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Finished calculating cached values: %@, error: %@", buf, 0x16u);
    }
  }
  if (v7 && !*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "NewCompose: Cache said we were capable of iMessage, not querying", buf, 2u);
      }
    }
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4F6E7B8];
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = IMServiceNameForCanonicalIDSAddresses();
    uint64_t v12 = *(void *)(a1 + 48);
    uint64_t v16 = objc_msgSend_refreshIDInfo(MEMORY[0x1E4F6B4A0], v13, v14, v15);
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    v19[2] = sub_1A4B3A58C;
    v19[3] = &unk_1E5B7AC58;
    id v20 = *(id *)(a1 + 56);
    objc_msgSend_idInfoForDestinations_service_fromID_infoTypes_options_listenerID_queue_completionBlock_(v9, v17, v10, (uint64_t)v11, v12, 2, v16, @"__kIMChatServiceForSendingIDSQueryControllerListenerID", MEMORY[0x1E4F14428], v19);
  }
}

void sub_1A4B3A58C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    int v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v11 = 138412546;
      uint64_t v12 = v5;
      __int16 v13 = 2112;
      id v14 = v6;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "IDS refresh server status complete: %@, error: %@", (uint8_t *)&v11, 0x16u);
    }
  }
  int v8 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (IMOSLoggingEnabled())
  {
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = @"NO";
      if (v8) {
        uint64_t v10 = @"YES";
      }
      int v11 = 138412290;
      uint64_t v12 = v10;
      _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Finished evaluating based on refresh: allAddressesiMessageCapable(%@)", (uint8_t *)&v11, 0xCu);
    }
  }
}

void IMChatCalculateServiceForSendingNewComposeMaybeForce(void *a1, void *a2, void *a3, void *a4, uint64_t a5, char a6, unsigned int a7, unsigned __int8 a8, unsigned __int8 a9, void *a10, void *a11)
{
  id v17 = a11;
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = sub_1A4B3A824;
  v21[3] = &unk_1E5B7ACA8;
  id v22 = v17;
  id v18 = v17;
  IMChatCalculateServiceForSendingNewComposeMaybeForceWithKTData(a1, a2, a3, a3, a4, a5, a6, a7, a8, a9, a10, v21);
}

void sub_1A4B3A824(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  id v33 = a2;
  id v10 = a4;
  id v11 = a5;
  id v12 = a6;
  uint64_t v16 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v13, v14, v15);
  char isServiceForSendingRefactorEnabled = objc_msgSend_isServiceForSendingRefactorEnabled(v16, v17, v18, v19);

  if ((isServiceForSendingRefactorEnabled & 1) == 0)
  {
    id v24 = objc_msgSend_sharedController(IMKeyTransparencyController, v21, v22, v23);
    objc_msgSend_setKTVerifierResultsFromIDSInfoResultsDictionary_(v24, v25, (uint64_t)v11, v26);

    long long v30 = objc_msgSend_sharedController(IMKeyTransparencyController, v27, v28, v29);
    objc_msgSend_setKTVerifierResultsFromIDSInfoResultsDictionary_(v30, v31, (uint64_t)v12, v32);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4B3A948(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedInstance(MEMORY[0x1E4F6C360], a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  byte_1E965E7B0 = objc_msgSend_isInternalInstall(v7, v4, v5, v6);
}

uint64_t sub_1A4B3AAFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1A4B3ABD0()
{
  if (qword_1E965E7F0 != -1) {
    dispatch_once(&qword_1E965E7F0, &unk_1EF8E5058);
  }
  unint64_t v0 = (void *)qword_1E965E7E8;

  return v0;
}

uint64_t sub_1A4B3AC24(uint64_t a1, const char *a2)
{
  uint64_t v2 = objc_msgSend_regularExpressionWithPattern_options_error_(MEMORY[0x1E4F28FD8], a2, @"\\$\\(([^\\$]|\\$[^\\(])*?\\)"), 0, 0;
  uint64_t v3 = qword_1E965E7E8;
  qword_1E965E7E8 = v2;

  return MEMORY[0x1F41817F8](v2, v3);
}

id sub_1A4B3AC74(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend___im_handleIdentifierRegex(NSString, a2, a3, a4);
  uint64_t v9 = objc_msgSend_length(a1, v6, v7, v8);
  id v11 = objc_msgSend_matchesInString_options_range_(v5, v10, (uint64_t)a1, 0, 0, v9);

  uint64_t v14 = objc_msgSend___imArrayByApplyingBlock_(v11, v12, (uint64_t)&unk_1EF8E3E50, v13);

  return v14;
}

uint64_t sub_1A4B3AD04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = (void *)MEMORY[0x1E4F29238];
  uint64_t v6 = objc_msgSend_range(a2, (const char *)a2, a3, a4);

  return objc_msgSend_valueWithRange_(v4, v5, v6, (uint64_t)v5);
}

id sub_1A4B3AD4C(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend___im_handleIdentifierRegex(NSString, a2, a3, a4);
  uint64_t v9 = objc_msgSend_length(a1, v6, v7, v8);
  id v11 = objc_msgSend_firstMatchInString_options_range_(v5, v10, (uint64_t)a1, 0, 0, v9);

  if (v11 && !objc_msgSend_range(v11, v12, v13, v14) && v15 == (const char *)objc_msgSend_length(a1, v15, v16, v17))
  {
    uint64_t v21 = objc_msgSend_length(a1, v18, v19, v20);
    uint64_t v23 = objc_msgSend_substringWithRange_(a1, v22, 2, v21 - 3);
  }
  else
  {
    uint64_t v23 = 0;
  }

  return v23;
}

id sub_1A4B3AE18(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend___im_handleIdentifierRegex(NSString, a2, a3, a4);
  uint64_t v9 = objc_msgSend_length(a1, v6, v7, v8);
  id v11 = objc_msgSend_matchesInString_options_range_(v5, v10, (uint64_t)a1, 0, 0, v9);

  uint64_t v15 = objc_msgSend_set(MEMORY[0x1E4F1CA80], v12, v13, v14);
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v16 = v11;
  uint64_t v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v35, (uint64_t)v39, 16);
  if (v18)
  {
    uint64_t v22 = v18;
    uint64_t v23 = *(void *)v36;
    do
    {
      for (uint64_t i = 0; i != v22; ++i)
      {
        if (*(void *)v36 != v23) {
          objc_enumerationMutation(v16);
        }
        uint64_t v25 = objc_msgSend_range(*(void **)(*((void *)&v35 + 1) + 8 * i), v19, v20, v21, (void)v35);
        uint64_t v27 = objc_msgSend_substringWithRange_(a1, v26, v25, (uint64_t)v26);
        objc_msgSend_addObject_(v15, v28, (uint64_t)v27, v29);
      }
      uint64_t v22 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v19, (uint64_t)&v35, (uint64_t)v39, 16);
    }
    while (v22);
  }

  id v33 = objc_msgSend_copy(v15, v30, v31, v32);

  return v33;
}

id sub_1A4B3AFB0(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v19[0] = 0;
  v19[1] = v19;
  v19[2] = 0x3032000000;
  v19[3] = sub_1A4B3440C;
  void v19[4] = sub_1A4B342EC;
  uint64_t v20 = &stru_1EF8E78C8;
  uint64_t v9 = objc_msgSend_length(a1, v6, v7, v8);
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = sub_1A4B3B10C;
  v14[3] = &unk_1E5B7AD40;
  uint64_t v17 = v19;
  uint64_t v18 = a3;
  id v10 = v5;
  id v15 = v10;
  id v16 = a1;
  objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(a1, v11, 0, v9, 2, v14);
  id v12 = v10;

  _Block_object_dispose(v19, 8);

  return v12;
}

void sub_1A4B3B0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B3B10C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v24 = a2;
  uint64_t v9 = objc_msgSend_lengthOfBytesUsingEncoding_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v7, 4, v8);
  if ((unint64_t)(objc_msgSend_lengthOfBytesUsingEncoding_(v24, v10, 4, v11) + v9) > *(void *)(a1 + 56))
  {
    objc_msgSend_addObject_(*(void **)(a1 + 32), v12, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v13);
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8);
    id v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = &stru_1EF8E78C8;
  }
  uint64_t v16 = objc_msgSend_stringByAppendingString_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v12, (uint64_t)v24, v13);
  uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v18 = *(void **)(v17 + 40);
  *(void *)(v17 + 40) = v16;

  if (a3 + a4 >= (unint64_t)objc_msgSend_length(*(void **)(a1 + 40), v19, v20, v21)) {
    objc_msgSend_addObject_(*(void **)(a1 + 32), v22, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v23);
  }
}

void sub_1A4B3B338()
{
  uint64_t v2 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.messages.pinning-ubiquity", v2);
  id v1 = (void *)qword_1E965E4F0;
  qword_1E965E4F0 = (uint64_t)v0;
}

void sub_1A4B3B45C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A4B3CFB4()
{
  uint64_t v2 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.messages.pinning-sync", v2);
  id v1 = (void *)qword_1E965E7F8;
  qword_1E965E7F8 = (uint64_t)v0;
}

void sub_1A4B3D298(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A4B3D2B4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  if (a3 == 2)
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_19;
    }
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 136315394;
      uint64_t v22 = "-[IMPinnedConversationsController synchronizeLocalDataStore]_block_invoke_2";
      __int16 v23 = 2112;
      id v24 = v5;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "%s Determined that the local store already has a more up-to-date pin config. localPinConfig: %@", buf, 0x16u);
    }
    goto LABEL_7;
  }
  if (a3 == 1)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v7 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v22 = v5;
        _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Syncing pin config from NSUbiquitousKeyValueStore to local store %@", buf, 0xCu);
      }
    }
    uint64_t v8 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained(v8);
    objc_msgSend__updateLocalStoreWithPinConfiguration_(WeakRetained, v10, (uint64_t)v5, v11);

    if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v12, v13, v14))
    {
      id v15 = objc_loadWeakRetained(v8);
      objc_msgSend_fetchPinnedConversationIdentifiersFromLocalStore(v15, v16, v17, v18);
    }
    else
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = sub_1A4B3D544;
      block[3] = &unk_1E5B7ADC8;
      objc_copyWeak(&v20, v8);
      dispatch_async(MEMORY[0x1E4F14428], block);
      objc_destroyWeak(&v20);
    }
  }
  else if (!a3 && IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Not synchronizing data stores because we could not determine which store has the more recent change.", buf, 2u);
    }
LABEL_7:
  }
LABEL_19:
}

void sub_1A4B3D544(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_fetchPinnedConversationIdentifiersFromLocalStore(WeakRetained, v1, v2, v3);
}

void sub_1A4B3D758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1A4B3D774(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v6 = objc_msgSend_dataStore(WeakRetained, v3, v4, v5);
  int v10 = objc_msgSend_synchronize(v6, v7, v8, v9);

  if (v10)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        __int16 v29 = 0;
        id v12 = "Ubiquitous data store synchronization completed successfully.";
        uint64_t v13 = (uint8_t *)&v29;
LABEL_12:
        _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, v12, v13, 2u);
        goto LABEL_13;
      }
      goto LABEL_13;
    }
  }
  else
  {
    id v14 = objc_loadWeakRetained(v1);
    uint64_t v18 = objc_msgSend_dataStore(v14, v15, v16, v17);

    int v19 = IMOSLoggingEnabled();
    if (v18)
    {
      if (v19)
      {
        uint64_t v11 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          __int16 v27 = 0;
          id v12 = "Ubiquitous data store synchronization failed for an unknown reason.";
          uint64_t v13 = (uint8_t *)&v27;
          goto LABEL_12;
        }
LABEL_13:
      }
    }
    else if (v19)
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        id v12 = "Ubiquitous data store synchronization failed because the store was nil.";
        uint64_t v13 = buf;
        goto LABEL_12;
      }
      goto LABEL_13;
    }
  }
  id v20 = objc_loadWeakRetained(v1);
  uint64_t v24 = objc_msgSend_numberOfPendingForceSyncs(v20, v21, v22, v23);
  objc_msgSend_setNumberOfPendingForceSyncs_(v20, v25, v24 - 1, v26);
}

void sub_1A4B3D8EC(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B3D8B8);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B3DDC4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B3DBC0);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B3DE3C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_synchronizeLocalDataStore(*(void **)(a1 + 32), a2, a3, a4);
}

void sub_1A4B3DFB8(uint64_t a1, char a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  if ((a2 & 1) == 0 && IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Did not update ubiquitous store for pin config when updating the stores %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_1A4B3E284(uint64_t a1, void *a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  int v6 = objc_msgSend_shouldWriteProposedPinConfiguration_toUbiquitousStoreWithExistingPinConfiguration_(WeakRetained, v5, *(void *)(a1 + 32), (uint64_t)v3);

  if (v6
    && (id v7 = objc_loadWeakRetained((id *)(a1 + 48)),
        int shouldUpdateExistingPinConfig_withProposedPinConfig = objc_msgSend_shouldUpdateExistingPinConfig_withProposedPinConfig_(v7, v8, (uint64_t)v3, *(void *)(a1 + 32)), v7, shouldUpdateExistingPinConfig_withProposedPinConfig))
  {
    if (IMOSLoggingEnabled())
    {
      int v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        int v28 = 138412290;
        __int16 v29 = v3;
        _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Saving new pin configuration to ubiquitous store. Old: %@ ", (uint8_t *)&v28, 0xCu);
      }
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        id v12 = *(const char **)(a1 + 32);
        int v28 = 138412290;
        __int16 v29 = v12;
        _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Saving new pin configuration to ubiquitous store. New: %@", (uint8_t *)&v28, 0xCu);
      }
    }
    if (IMIsRunningInUnitTesting())
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v13 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          int v28 = 136315138;
          __int16 v29 = "-[IMPinnedConversationsController _updateUbiquitousStoreWithPinConfiguration:completion:]_block_invoke";
          _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_INFO, "%s Didn't actually update ubiquitous store because we're running a unit test.", (uint8_t *)&v28, 0xCu);
        }
      }
    }
    else
    {
      id v17 = objc_loadWeakRetained((id *)(a1 + 48));
      uint64_t v21 = objc_msgSend_dataStore(v17, v18, v19, v20);
      objc_msgSend_setDictionary_forKey_(v21, v22, *(void *)(a1 + 32), @"pD");

      id v23 = objc_loadWeakRetained((id *)(a1 + 48));
      objc_msgSend_forceSynchronizeUbiquitousStore(v23, v24, v25, v26);
    }
    uint64_t v16 = 1;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        id v15 = *(const char **)(a1 + 32);
        int v28 = 138412290;
        __int16 v29 = v15;
        _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "shouldUpdate == NO. Not saving new pin configuration to ubiquitous store: %@", (uint8_t *)&v28, 0xCu);
      }
    }
    uint64_t v16 = 0;
  }
  uint64_t v27 = *(void *)(a1 + 40);
  if (v27) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v27, v16);
  }
}

void sub_1A4B3EEE0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B3EE04);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B3F714(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B3F638);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B3F844(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1A4B3F858(uint64_t a1)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v21 = 0;
  uint64_t v22 = &v21;
  uint64_t v23 = 0x3032000000;
  uint64_t v24 = sub_1A4B3441C;
  uint64_t v25 = sub_1A4B342F4;
  id v26 = 0;
  id v2 = objc_loadWeakRetained((id *)(a1 + 40));
  int v6 = objc_msgSend_dataStore(v2, v3, v4, v5);
  uint64_t v9 = objc_msgSend__ubiquitousPinConfigurationInStore_(v2, v7, (uint64_t)v6, v8);

  id v26 = v9;
  if (IMOSLoggingEnabled())
  {
    int v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = v22[5];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v28 = v11;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Got PinConfigurationInStore: %@", buf, 0xCu);
    }
  }
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A4B3FAF0;
  aBlock[3] = &unk_1E5B7AE68;
  id v19 = *(id *)(a1 + 32);
  uint64_t v20 = &v21;
  id v12 = (void (**)(void))_Block_copy(aBlock);
  if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v13, v14, v15))
  {
    v12[2](v12);
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4B3FB18;
    block[3] = &unk_1E5B7AE90;
    id v17 = v12;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
  _Block_object_dispose(&v21, 8);
}

uint64_t sub_1A4B3FAF0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
  return result;
}

uint64_t sub_1A4B3FB18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4B3FBBC(uint64_t a1, void *a2)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v7 = objc_msgSend__locallyStoredPinConfiguration(*(void **)(a1 + 32), v4, v5, v6);
  if (IMOSLoggingEnabled())
  {
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 136315394;
      *(void *)&uint8_t buf[4] = "-[IMPinnedConversationsController fetchMostUpToDatePinConfiguration:]_block_invoke";
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v3;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "%s ubiquitousPinConfig {%@}", buf, 0x16u);
    }
  }
  if (IMOSLoggingEnabled())
  {
    int v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 136315394;
      *(void *)&uint8_t buf[4] = "-[IMPinnedConversationsController fetchMostUpToDatePinConfiguration:]_block_invoke";
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v7;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "%s localPinConfig {%@}", buf, 0x16u);
    }
  }
  *(void *)long long buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x3032000000;
  id v33 = sub_1A4B3441C;
  uint64_t v34 = sub_1A4B342F4;
  id v35 = 0;
  objc_msgSend_mostUpToDatePinConfigurationByComparingPinConfiguration_toOtherPinConfiguration_(*(void **)(a1 + 32), v9, (uint64_t)v7, (uint64_t)v3);
  id v35 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v28 = 0;
  uint64_t v29 = &v28;
  uint64_t v30 = 0x2020000000;
  uint64_t v31 = 0;
  if (objc_msgSend_isEqualToDictionary_(*(void **)(*(void *)&buf[8] + 40), v11, (uint64_t)v7, v12))
  {
    uint64_t v15 = v29;
    uint64_t v16 = 2;
LABEL_13:
    v15[3] = v16;
    goto LABEL_15;
  }
  int isEqualToDictionary = objc_msgSend_isEqualToDictionary_(*(void **)(*(void *)&buf[8] + 40), v13, (uint64_t)v3, v14);
  uint64_t v15 = v29;
  if (isEqualToDictionary)
  {
    uint64_t v16 = 1;
    goto LABEL_13;
  }
  v29[3] = 0;
LABEL_15:
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A4B3FF6C;
  aBlock[3] = &unk_1E5B7AEE0;
  id v25 = *(id *)(a1 + 40);
  id v26 = buf;
  uint64_t v27 = &v28;
  uint64_t v18 = (void (**)(void))_Block_copy(aBlock);
  if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v19, v20, v21))
  {
    v18[2](v18);
  }
  else
  {
    v22[0] = MEMORY[0x1E4F143A8];
    v22[1] = 3221225472;
    v22[2] = sub_1A4B3FF9C;
    v22[3] = &unk_1E5B7AE90;
    uint64_t v23 = v18;
    dispatch_async(MEMORY[0x1E4F14428], v22);
  }
  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(buf, 8);
}

uint64_t sub_1A4B3FF6C(void *a1)
{
  uint64_t result = a1[4];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, *(void *)(*(void *)(a1[5] + 8) + 40), *(void *)(*(void *)(a1[6] + 8) + 24));
  }
  return result;
}

uint64_t sub_1A4B3FF9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4B40328(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_1A4B40994(uint64_t a1)
{
  IMLogHandleForCategory();
  id v2 = (char *)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_FAULT)) {
    sub_1A4CB70E4(a1, v2, v3, v4);
  }
}

void sub_1A4B41384(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B41350);
  }
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose((const void *)(v17 - 48), 8);
  _Unwind_Resume(exc_buf);
}

uint64_t sub_1A4B413C8(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  uint64_t result = objc_msgSend_integerValue(a3, a2, (uint64_t)a3, a4);
  if (result == 1) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = *(void *)(a1 + 40);
  }
  ++*(void *)(*(void *)(v6 + 8) + 24);
  return result;
}

BOOL IMPersonStatusIsOnline(unint64_t a1)
{
  return a1 > 1;
}

id IMPersonStatusComparator(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_copy((void *)qword_1E965B768, a2, a3, a4);
  uint64_t v5 = (void *)qword_1E965B768;
  qword_1E965B768 = v4;

  uint64_t v6 = _Block_copy((const void *)qword_1E965B768);

  return v6;
}

uint64_t sub_1A4B42648(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_status(a2, v5, v6, v7);
  uint64_t v12 = objc_msgSend_status(v4, v9, v10, v11);

  uint64_t v13 = qword_1A4CD0B08[v8];
  uint64_t v14 = qword_1A4CD0B08[v12];
  BOOL v15 = v13 == v14;
  BOOL v16 = v13 <= v14;
  uint64_t v17 = 1;
  if (v16) {
    uint64_t v17 = -1;
  }
  if (v15) {
    return 0;
  }
  else {
    return v17;
  }
}

id IMPersonStatusReverseComparator(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_copy((void *)qword_1E965B770, a2, a3, a4);
  uint64_t v5 = (void *)qword_1E965B770;
  qword_1E965B770 = v4;

  uint64_t v6 = _Block_copy((const void *)qword_1E965B770);

  return v6;
}

uint64_t sub_1A4B42700(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_status(a2, v5, v6, v7);
  uint64_t v12 = objc_msgSend_status(v4, v9, v10, v11);
  uint64_t v13 = qword_1A4CD0B08[v8];
  uint64_t v14 = qword_1A4CD0B08[v12];
  uint64_t v15 = 1;
  if (v13 <= v14) {
    uint64_t v15 = -1;
  }
  if (v13 == v14) {
    uint64_t v15 = 0;
  }
  if (v15 == -1) {
    uint64_t v15 = 1;
  }
  if (v13 > v14) {
    uint64_t v16 = -1;
  }
  else {
    uint64_t v16 = v15;
  }

  return v16;
}

id sub_1A4B43184(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_ID(a2, (const char *)a2, a3, a4);
  uint64_t v5 = IMChatCanonicalIDSIDsForAddress();

  return v5;
}

void sub_1A4B431D4(uint64_t a1, void *a2)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  uint64_t v7 = objc_msgSend_allKeys(v2, v4, v5, v6);
  uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v50, (uint64_t)v58, 16);
  if (v11)
  {
    uint64_t v12 = *(void *)v51;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v51 != v12) {
          objc_enumerationMutation(v7);
        }
        uint64_t v14 = *(void **)(*((void *)&v50 + 1) + 8 * i);
        uint64_t v15 = objc_msgSend_objectForKeyedSubscript_(v2, v9, (uint64_t)v14, v10);
        uint64_t v19 = objc_msgSend_integerValue(v15, v16, v17, v18);

        if (v19 == 1)
        {
          uint64_t v23 = (void *)MEMORY[0x1E4FADBD8];
          uint64_t v24 = objc_msgSend__stripFZIDPrefix(v14, v20, v21, v22);
          uint64_t v27 = objc_msgSend_normalizedHandleWithDestinationID_(v23, v25, (uint64_t)v24, v26);

          if (v27)
          {
            id v28 = objc_alloc(MEMORY[0x1E4FADB80]);
            uint64_t v31 = objc_msgSend_initWithHandle_(v28, v29, (uint64_t)v27, v30);
            objc_msgSend_addObject_(v3, v32, (uint64_t)v31, v33);
          }
        }
        else if (IMOSLoggingEnabled())
        {
          uint64_t v34 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412546;
            id v55 = v14;
            __int16 v56 = 2048;
            uint64_t v57 = v19;
            _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "Destination not registered for Group FaceTime: %@ (%ld)", buf, 0x16u);
          }
        }
      }
      uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v9, (uint64_t)&v50, (uint64_t)v58, 16);
    }
    while (v11);
  }

  if (objc_msgSend_count(v3, v35, v36, v37))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v41 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
      {
        uint64_t v42 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138412546;
        id v55 = v3;
        __int16 v56 = 2112;
        uint64_t v57 = v42;
        _os_log_impl(&dword_1A4AF7000, v41, OS_LOG_TYPE_INFO, "Adding member to Group FaceTime: %@ in conversaton %@", buf, 0x16u);
      }
    }
    uint64_t v43 = objc_msgSend_sharedRegistry(IMChatRegistry, v38, v39, v40);
    uint64_t v47 = objc_msgSend_conversationManager(v43, v44, v45, v46);
    objc_msgSend_addRemoteMembers_toConversation_(v47, v48, (uint64_t)v3, *(void *)(a1 + 32));
  }
}

void sub_1A4B43C24(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B43BF0);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B44818(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B44700);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A4B44874(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_checkForAllowedByScreenTime(WeakRetained, v1, v2, v3);
}

uint64_t sub_1A4B471A0(uint64_t a1, const char *a2)
{
  return objc_msgSend__handleIncomingItem_updateRecipient_suppressNotification_updateReplyCounts_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), 0, 0, 0);
}

void sub_1A4B48274()
{
}

id sub_1A4B48EE0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_sharedInstance(IMAccountController, a2, a3, a4);
  uint64_t v9 = objc_msgSend_activeAccounts(v5, v6, v7, v8);

  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v10 = v9;
  uint64_t v33 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v39, (uint64_t)v44, 16);
  if (v33)
  {
    uint64_t v15 = *(void *)v40;
    uint64_t v32 = *(void *)v40;
    do
    {
      for (uint64_t i = 0; i != v33; ++i)
      {
        if (*(void *)v40 != v15) {
          objc_enumerationMutation(v10);
        }
        uint64_t v17 = *(void **)(*((void *)&v39 + 1) + 8 * i);
        long long v35 = 0u;
        long long v36 = 0u;
        long long v37 = 0u;
        long long v38 = 0u;
        uint64_t v18 = objc_msgSend_aliases(v17, v12, v13, v14, v32);
        uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v19, (uint64_t)&v35, (uint64_t)v43, 16);
        if (v20)
        {
          uint64_t v21 = *(void *)v36;
          while (2)
          {
            for (uint64_t j = 0; j != v20; ++j)
            {
              if (*(void *)v36 != v21) {
                objc_enumerationMutation(v18);
              }
              uint64_t v23 = *(void **)(*((void *)&v35 + 1) + 8 * j);
              if (MEMORY[0x1A62639B0](v23))
              {
                IMCanonicalizeFormattedString();
                id v24 = (id)objc_claimAutoreleasedReturnValue();
              }
              else
              {
                id v24 = v23;
              }
              uint64_t v27 = v24;
              id v28 = objc_msgSend_objectForKey_(*(void **)(a1 + 32), v25, (uint64_t)v24, v26);

              if (v28)
              {

                goto LABEL_25;
              }
            }
            uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v29, (uint64_t)&v35, (uint64_t)v43, 16);
            if (v20) {
              continue;
            }
            break;
          }
        }

        uint64_t v15 = v32;
      }
      uint64_t v33 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v12, (uint64_t)&v39, (uint64_t)v44, 16);
      uint64_t v15 = v32;
    }
    while (v33);
  }

  if (IMOSLoggingEnabled())
  {
    uint64_t v30 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v30, OS_LOG_TYPE_INFO, "Unable to find handle in the token dictionary", buf, 2u);
    }
  }
  id v28 = 0;
LABEL_25:

  return v28;
}

BOOL sub_1A4B4A198(IMBalloonPluginDataSource *self, SEL a2)
{
  return self->_showingLatestMessageAsBreadcrumb;
}

uint64_t sub_1A4B4A2A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_setWithArray_(MEMORY[0x1E4F1CAD0], a2, (uint64_t)&unk_1EF914620, a4);
  uint64_t v5 = qword_1E965E810;
  qword_1E965E810 = v4;

  return MEMORY[0x1F41817F8](v4, v5);
}

void sub_1A4B4A4C8(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = sub_1A4B4A58C;
  v10[3] = &unk_1E5B7B1A8;
  id v11 = v5;
  id v12 = v4;
  id v6 = v4;
  id v7 = v5;
  objc_msgSend_fetchRecentStickersWithCompletion_(a1, v8, (uint64_t)v10, v9);
}

void sub_1A4B4A58C(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4B4A64C;
  block[3] = &unk_1E5B7B180;
  id v6 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = *(id *)(a1 + 40);
  id v4 = v3;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t sub_1A4B4A64C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_addObjectsFromArray_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
  id v5 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v5();
}

void sub_1A4B4A698(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  id v9 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = sub_1A4B4A778;
  v13[3] = &unk_1E5B7B248;
  double v16 = a2;
  double v17 = a3;
  id v14 = v9;
  id v15 = v8;
  id v10 = v8;
  id v11 = v9;
  objc_msgSend_fetchRecentItemsForDomain_completion_(a1, v12, @"com.apple.Handwriting.HandwritingProvider", (uint64_t)v13);
}

void sub_1A4B4A778(uint64_t a1, void *a2)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v4 = dispatch_group_create();
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id obj = v3;
  uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v5, (uint64_t)&v38, (uint64_t)v42, 16);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v31 = *(void *)v39;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v39 != v31) {
          objc_enumerationMutation(obj);
        }
        id v9 = *(void **)(*((void *)&v38 + 1) + 8 * v8);
        id v10 = (void *)MEMORY[0x1A6264150]();
        id v11 = objc_alloc_init(IMPluginPayload);
        id v15 = objc_msgSend_payloadData(v9, v12, v13, v14);
        objc_msgSend_setData_(v11, v16, (uint64_t)v15, v17);

        objc_msgSend_setPluginBundleID_(v11, v18, @"com.apple.Handwriting.HandwritingProvider", v19);
        uint64_t v23 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v20, v21, v22);
        uint64_t v26 = objc_msgSend_dataSourceForPluginPayload_(v23, v24, (uint64_t)v11, v25);

        dispatch_group_enter(v4);
        v35[0] = MEMORY[0x1E4F143A8];
        v35[1] = 3221225472;
        v35[2] = sub_1A4B4AA28;
        v35[3] = &unk_1E5B7B1F8;
        v35[4] = v9;
        id v36 = *(id *)(a1 + 32);
        long long v37 = v4;
        objc_msgSend_thumbnailURLWithSize_completion_(v26, v27, (uint64_t)v35, v28, *(double *)(a1 + 48), *(double *)(a1 + 56));

        ++v8;
      }
      while (v7 != v8);
      uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v29, (uint64_t)&v38, (uint64_t)v42, 16);
    }
    while (v7);
  }

  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4B4AB38;
  block[3] = &unk_1E5B7B220;
  id v34 = *(id *)(a1 + 40);
  id v33 = *(id *)(a1 + 32);
  dispatch_group_notify(v4, MEMORY[0x1E4F14428], block);
}

void sub_1A4B4AA28(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A4B4AAEC;
  v7[3] = &unk_1E5B7B1D0;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = v5;
  id v11 = *(id *)(a1 + 48);
  id v6 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v7);
}

void sub_1A4B4AAEC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5)
  {
    objc_msgSend_setFileURL_(*(void **)(a1 + 40), a2, v5, a4);
    objc_msgSend_addObject_(*(void **)(a1 + 48), v6, *(void *)(a1 + 40), v7);
  }
  id v8 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v8);
}

uint64_t sub_1A4B4AB38(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1A4B4AB4C(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x3032000000;
  v26[3] = sub_1A4B3442C;
  v26[4] = sub_1A4B342FC;
  id v27 = 0;
  id v27 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v9 = dispatch_group_create();
  dispatch_group_enter(v9);
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = sub_1A4B4AD68;
  v23[3] = &unk_1E5B7B270;
  uint64_t v25 = v26;
  id v10 = v9;
  id v24 = v10;
  objc_msgSend_loadRecentHandwritingsWithThumbnailSize_completion_(a1, v11, (uint64_t)v23, v12, a2, a3);
  dispatch_group_enter(v10);
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  v20[2] = sub_1A4B4ADB0;
  v20[3] = &unk_1E5B7B270;
  uint64_t v22 = v26;
  uint64_t v13 = v10;
  uint64_t v21 = v13;
  objc_msgSend_loadRecentStickers_(a1, v14, (uint64_t)v20, v15);
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = sub_1A4B4ADF8;
  v17[3] = &unk_1E5B7AE68;
  id v18 = v8;
  uint64_t v19 = v26;
  id v16 = v8;
  dispatch_group_notify(v13, MEMORY[0x1E4F14428], v17);

  _Block_object_dispose(v26, 8);
}

void sub_1A4B4AD50(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A4B4AD68(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_addObjectsFromArray_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2, (uint64_t)a2, a4);
  uint64_t v5 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v5);
}

void sub_1A4B4ADB0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_addObjectsFromArray_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2, (uint64_t)a2, a4);
  uint64_t v5 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v5);
}

uint64_t sub_1A4B4ADF8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

id IMAttributedStringByRemovingTrackingInformation(void *a1)
{
  id v1 = a1;
  if (!objc_msgSend_length(v1, v2, v3, v4)) {
    goto LABEL_7;
  }
  if (qword_1E965DDD8 != -1) {
    dispatch_once(&qword_1E965DDD8, &unk_1EF8E50F8);
  }
  if (byte_1E965DE30)
  {
    id v8 = objc_msgSend__wp_stringByRemovingTrackingInformationFromURLs(v1, v5, v6, v7);
    if (objc_msgSend_isEqual_(v8, v9, (uint64_t)v1, v10))
    {
      id v11 = v1;
    }
    else
    {
      id v18 = 0;
      uint64_t v12 = sub_1A4B4AF20(v8, &v18);
      id v13 = v18;
      id v11 = (id)objc_msgSend_mutableCopy(v8, v14, v15, v16);
      sub_1A4B4B100(v11, v12, v13);
    }
  }
  else
  {
LABEL_7:
    id v11 = v1;
  }

  return v11;
}

id sub_1A4B4AF20(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v25 = 0;
  uint64_t v26 = &v25;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = sub_1A4B3443C;
  uint64_t v29 = sub_1A4B34304;
  id v30 = 0;
  objc_msgSend_array(MEMORY[0x1E4F1CA48], v4, v5, v6);
  id v30 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v19 = 0;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x3032000000;
  uint64_t v22 = sub_1A4B3443C;
  uint64_t v23 = sub_1A4B34304;
  id v24 = 0;
  objc_msgSend_array(MEMORY[0x1E4F1CA48], v7, v8, v9);
  id v24 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v13 = objc_msgSend_length(v3, v10, v11, v12);
  uint64_t v14 = *MEMORY[0x1E4F6C1D0];
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = sub_1A4B4B520;
  v18[3] = &unk_1E5B7B2D0;
  void v18[4] = &v25;
  v18[5] = &v19;
  objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(v3, v15, v14, 0, v13, 0, v18);
  if (a2) {
    *a2 = (id) v26[5];
  }
  id v16 = (id)v20[5];
  _Block_object_dispose(&v19, 8);

  _Block_object_dispose(&v25, 8);

  return v16;
}

void sub_1A4B4B0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B4B100(void *a1, void *a2, void *a3)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (objc_msgSend_count(v6, v8, v9, v10))
  {
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v28 = v7;
    id obj = v7;
    uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v11, (uint64_t)&v30, (uint64_t)v34, 16);
    if (v12)
    {
      uint64_t v16 = v12;
      uint64_t v17 = 0;
      uint64_t v18 = *(void *)v31;
      uint64_t v19 = *MEMORY[0x1E4F6C1D0];
      do
      {
        uint64_t v20 = 0;
        do
        {
          if (*(void *)v31 != v18) {
            objc_enumerationMutation(obj);
          }
          uint64_t v21 = objc_msgSend_rangeValue(*(void **)(*((void *)&v30 + 1) + 8 * v20), v13, v14, v15, v28);
          uint64_t v23 = v22;
          objc_msgSend_removeAttribute_range_(v5, v22, v19, v21, v22);
          uint64_t v26 = objc_msgSend_objectAtIndexedSubscript_(v6, v24, v17 + v20, v25);
          objc_msgSend_addAttribute_value_range_(v5, v27, v19, (uint64_t)v26, v21, v23);

          ++v20;
        }
        while (v16 != v20);
        uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v13, (uint64_t)&v30, (uint64_t)v34, 16);
        v17 += v20;
      }
      while (v16);
    }

    id v7 = v28;
  }
}

void IMRemoveTrackingInformationFromMutableAttributedString(void *a1)
{
  id v1 = a1;
  if (objc_msgSend_length(v1, v2, v3, v4))
  {
    if (qword_1E965DDD8 != -1) {
      dispatch_once(&qword_1E965DDD8, &unk_1EF8E50F8);
    }
    if (byte_1E965DE30)
    {
      objc_msgSend__wp_removeTrackingInformationFromURLs(v1, v5, v6, v7);
      id v10 = 0;
      uint64_t v8 = sub_1A4B4AF20(v1, &v10);
      id v9 = v10;
      sub_1A4B4B100(v1, v8, v9);
    }
  }
}

uint64_t sub_1A4B4B358()
{
  uint64_t result = sub_1A4B4B378();
  byte_1E965DE30 = result;
  return result;
}

uint64_t sub_1A4B4B378()
{
  uint64_t result = sub_1A4B4B3DC();
  if (result)
  {
    uint64_t v4 = 0;
    if (!sub_1A4B4B3DC()) {
      sub_1A4CB72EC(&v4, v1, v2, v3);
    }
    return objc_msgSend_instancesRespondToSelector_(NSString, v1, (uint64_t)sel__wp_stringByRemovingTrackingInformationFromURLs, v3);
  }
  return result;
}

uint64_t sub_1A4B4B3DC()
{
  if (!qword_1E965DDC0) {
    qword_1E965DDC0 = _sl_dlopen();
  }
  return qword_1E965DDC0;
}

uint64_t sub_1A4B4B4AC()
{
  uint64_t result = _sl_dlopen();
  qword_1E965DDC0 = result;
  return result;
}

void sub_1A4B4B520(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v20 = a2;
  uint64_t v12 = objc_msgSend__wp_urlByRemovingTrackingInformation(v20, v7, v8, v9);
  if (v12 && (objc_msgSend_isEqual_(v20, v10, (uint64_t)v12, v11) & 1) == 0)
  {
    uint64_t v14 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    uint64_t v15 = objc_msgSend_valueWithRange_(MEMORY[0x1E4F29238], v13, a3, a4);
    objc_msgSend_addObject_(v14, v16, (uint64_t)v15, v17);

    objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v18, (uint64_t)v12, v19);
  }
}

void -[IMServiceImpl _blockUntilInitialSyncPerformed](IMServiceImpl *self, SEL a2)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if ((objc_msgSend_initialSyncPerformed(self, a2, v2, v3) & 1) == 0)
  {
    uint64_t v35 = objc_msgSend_currentRunLoop(MEMORY[0x1E4F1CAC0], v5, v6, v7);
    id v34 = objc_alloc_init(MEMORY[0x1E4F1C9C8]);
    uint64_t v11 = *MEMORY[0x1E4F6C270];
    do
    {
      uint64_t v12 = objc_msgSend_dateWithTimeIntervalSinceNow_(MEMORY[0x1E4F1C9C8], v8, v9, v10, 0.005, v34);
      objc_msgSend_runMode_beforeDate_(v35, v13, v11, (uint64_t)v12);

      if (objc_msgSend_initialSyncPerformed(self, v14, v15, v16)) {
        break;
      }
      objc_msgSend_timeIntervalSinceNow(v34, v8, v9, v10);
    }
    while (v17 > -1.0);
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    uint64_t v18 = objc_msgSend_sharedInstance(IMAccountController, v8, v9, v10);
    uint64_t v21 = objc_msgSend_activeAccountsForService_(v18, v19, (uint64_t)self, v20);

    uint64_t v26 = objc_msgSend_countByEnumeratingWithState_objects_count_(v21, v22, (uint64_t)&v36, (uint64_t)v42, 16);
    if (v26)
    {
      uint64_t v27 = *(void *)v37;
      do
      {
        for (uint64_t i = 0; i != v26; ++i)
        {
          if (*(void *)v37 != v27) {
            objc_enumerationMutation(v21);
          }
          uint64_t v29 = *(void **)(*((void *)&v36 + 1) + 8 * i);
          if ((objc_msgSend_hasSyncedWithRemoteBuddies(v29, v23, v24, v25) & 1) == 0)
          {
            if (IMOSLoggingEnabled())
            {
              long long v33 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                long long v41 = self;
                _os_log_impl(&dword_1A4AF7000, v33, OS_LOG_TYPE_INFO, "   *** Account %@  has not sync'd yet, forcing the mark", buf, 0xCu);
              }
            }
            objc_msgSend__markHasSyncedWithRemoteBuddies(v29, v30, v31, v32);
          }
        }
        uint64_t v26 = objc_msgSend_countByEnumeratingWithState_objects_count_(v21, v23, (uint64_t)&v36, (uint64_t)v42, 16);
      }
      while (v26);
    }
  }
}

uint64_t sub_1A4B4D9D8()
{
  id v0 = objc_alloc(MEMORY[0x1E4F6AB90]);
  uint64_t v3 = objc_msgSend_initWithService_(v0, v1, *MEMORY[0x1E4F6AA78], v2);
  uint64_t v4 = qword_1EB3F2200;
  qword_1EB3F2200 = v3;

  return MEMORY[0x1F41817F8](v3, v4);
}

uint64_t sub_1A4B4DB64()
{
  uint64_t result = MEMORY[0x1A6263B40](@"IDSServerBag", @"IDSFoundation");
  qword_1E965E780 = result;
  return result;
}

BOOL sub_1A4B4E2EC(IMServiceImpl *self, SEL a2)
{
  return self->_isDiscontinued;
}

id IMCoreMomentShareURLForMessage(void *a1)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  objc_msgSend_fileTransferGUIDs(v1, v2, v3, v4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v9 = objc_msgSend_sharedInstance(IMFileTransferCenter, v6, v7, v8);
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  id v10 = v5;
  uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v46, (uint64_t)v50, 16);
  if (v12)
  {
    uint64_t v15 = v12;
    uint64_t v16 = *(void *)v47;
    uint64_t v17 = *MEMORY[0x1E4F6D3E8];
    while (2)
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v47 != v16) {
          objc_enumerationMutation(v10);
        }
        uint64_t v19 = objc_msgSend_transferForGUID_(v9, v13, *(void *)(*((void *)&v46 + 1) + 8 * i), v14, (void)v46);
        uint64_t v23 = objc_msgSend_attributionInfo(v19, v20, v21, v22);
        uint64_t v26 = objc_msgSend_objectForKeyedSubscript_(v23, v24, v17, v25);
        if (v26)
        {
          long long v30 = (void *)v26;
          uint64_t v29 = objc_msgSend_URLWithString_(MEMORY[0x1E4F1CB10], v27, v26, v28);

          goto LABEL_11;
        }
      }
      uint64_t v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v13, (uint64_t)&v46, (uint64_t)v50, 16);
      if (v15) {
        continue;
      }
      break;
    }
  }
  uint64_t v29 = 0;
LABEL_11:

  if (!v29)
  {
    id v34 = objc_msgSend_balloonBundleID(v1, v31, v32, v33);
    long long v38 = objc_msgSend_text(v1, v35, v36, v37);
    long long v42 = objc_msgSend_payloadData(v1, v39, v40, v41);
    v50[0] = 0;
    uint64_t v44 = objc_msgSend_photoShareURLFromPluginBundleID_contentString_payload_shouldAccept_(MEMORY[0x1E4F6E898], v43, (uint64_t)v34, (uint64_t)v38, v42, v50);
    uint64_t v29 = v44;
    if (!v50[0])
    {

      uint64_t v29 = 0;
    }
  }

  return v29;
}

uint64_t sub_1A4B4FACC(void *a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = a2;
  uint64_t v7 = (void *)v4;
  if (v3 | v4)
  {
    uint64_t isEqualToAttributedString = 0;
    if (v3 && v4) {
      uint64_t isEqualToAttributedString = objc_msgSend_isEqualToAttributedString_((void *)v3, v5, v4, v6);
    }
  }
  else
  {
    uint64_t isEqualToAttributedString = 1;
  }

  return isEqualToAttributedString;
}

uint64_t sub_1A4B4FB3C(void *a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = a2;
  uint64_t v7 = (void *)v4;
  if (v3 | v4)
  {
    uint64_t isEqual = 0;
    if (v3 && v4) {
      uint64_t isEqual = objc_msgSend_isEqual_((void *)v3, v5, v4, v6);
    }
  }
  else
  {
    uint64_t isEqual = 1;
  }

  return isEqual;
}

uint64_t sub_1A4B4FBAC(void *a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = a2;
  uint64_t v7 = (void *)v4;
  if (v3 | v4)
  {
    uint64_t isEqualToString = 0;
    if (v3 && v4) {
      uint64_t isEqualToString = objc_msgSend_isEqualToString_((void *)v3, v5, v4, v6);
    }
  }
  else
  {
    uint64_t isEqualToString = 1;
  }

  return isEqualToString;
}

uint64_t sub_1A4B4FC1C(void *a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = a2;
  uint64_t v7 = (void *)v4;
  if (v3 | v4)
  {
    uint64_t isEqualToDictionary = 0;
    if (v3 && v4) {
      uint64_t isEqualToDictionary = objc_msgSend_isEqualToDictionary_((void *)v3, v5, v4, v6);
    }
  }
  else
  {
    uint64_t isEqualToDictionary = 1;
  }

  return isEqualToDictionary;
}

uint64_t sub_1A4B4FC8C(void *a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = a2;
  uint64_t v7 = (void *)v4;
  if (v3 | v4)
  {
    uint64_t isEqualToArray = 0;
    if (v3 && v4) {
      uint64_t isEqualToArray = objc_msgSend_isEqualToArray_((void *)v3, v5, v4, v6);
    }
  }
  else
  {
    uint64_t isEqualToArray = 1;
  }

  return isEqualToArray;
}

id sub_1A4B510AC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_length(a1, a2, a3, a4);
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x3032000000;
  uint64_t v14 = sub_1A4B3444C;
  uint64_t v15 = sub_1A4B3430C;
  id v16 = 0;
  uint64_t v6 = *MEMORY[0x1E4F6C1D0];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = sub_1A4B511D0;
  v10[3] = &unk_1E5B7B350;
  void v10[4] = &v11;
  objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(a1, v7, v6, 0, v5, 0, v10);
  id v8 = (id)v12[5];
  _Block_object_dispose(&v11, 8);

  return v8;
}

void sub_1A4B511B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B511D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v8 = a2;
  if (v8)
  {
    id v9 = v8;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    id v8 = v9;
    *a5 = 1;
  }
}

id IMWatermarkMessageIDCache()
{
  if (qword_1EB3F2260 != -1) {
    dispatch_once(&qword_1EB3F2260, &unk_1EF8E5138);
  }
  id v0 = (void *)qword_1EB3F2268;

  return v0;
}

uint64_t sub_1A4B51298()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v1 = qword_1EB3F2268;
  qword_1EB3F2268 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

id sub_1A4B512D4()
{
  if (qword_1EB3F2250 != -1) {
    dispatch_once(&qword_1EB3F2250, &unk_1EF8E5D78);
  }
  id v0 = (void *)qword_1EB3F2258;

  return v0;
}

uint64_t sub_1A4B51328()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v1 = qword_1EB3F2258;
  qword_1EB3F2258 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4B513BC()
{
  id v0 = (void *)qword_1E965E830;
  qword_1E965E830 = (uint64_t)&unk_1EF8E4130;
}

uint64_t sub_1A4B513D4(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  if ((objc_msgSend__hasJustSentAMessage(v4, v6, v7, v8) & 1) != 0
    || objc_msgSend__hasJustSentAMessage(v5, v9, v10, v11))
  {
    uint64_t v15 = objc_msgSend_watermarkDate(v4, v9, v10, v11);
    if (!v15)
    {
      uint64_t v15 = objc_msgSend_distantPast(MEMORY[0x1E4F1C9C8], v12, v13, v14);
    }
    uint64_t v19 = objc_msgSend_watermarkDate(v5, v12, v13, v14);
    if (!v19)
    {
      uint64_t v19 = objc_msgSend_distantPast(MEMORY[0x1E4F1C9C8], v16, v17, v18);
    }
    uint64_t v20 = objc_msgSend_compare_(v19, v16, (uint64_t)v15, v18);
  }
  else
  {
    uint64_t v20 = objc_msgSend_compareChatByDate_(v4, v9, (uint64_t)v5, v11);
  }

  return v20;
}

uint64_t sub_1A4B51DA0()
{
  uint64_t result = MEMORY[0x1A6263B40](@"NPSManager", @"NanoPreferencesSync");
  qword_1E965E840 = result;
  return result;
}

uint64_t sub_1A4B51E70()
{
  uint64_t result = IMGetDomainBoolForKey();
  byte_1E9660AC8 = result;
  return result;
}

uint64_t sub_1A4B51F44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_verifyFiltering(a2, (const char *)a2, a3, a4);
}

void sub_1A4B51F4C(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Daemon launch detected while process was running", v7, 2u);
    }
  }
  objc_msgSend__reconnectIfNeeded(v2, v3, v4, v5);
}

uint64_t sub_1A4B5215C(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Calling client completion handler after completing connection and setup", v4, 2u);
    }
  }
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1A4B527DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend__invalidateMultiplexedConnectionWithUniqueID_(WeakRetained, v2, *(void *)(a1 + 32), v3);
}

void sub_1A4B5282C(uint64_t a1)
{
  id v2 = dispatch_get_global_queue(21, 0);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4B528DC;
  block[3] = &unk_1E5B7ADC8;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_async(v2, block);

  objc_destroyWeak(&v4);
}

void sub_1A4B528DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend__capabilitiesDidChange(WeakRetained, v1, v2, v3);
}

BOOL -[IMDaemonController _blocksConnectionAtResume](IMDaemonController *self, SEL a2)
{
  return self->__blocksConnectionAtResume;
}

uint64_t sub_1A4B5352C()
{
  id v0 = objc_alloc_init(IMBalloonPluginAttributionController);
  uint64_t v1 = qword_1EB3F2510;
  qword_1EB3F2510 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

id sub_1A4B53784()
{
  if (qword_1E965E738 != -1) {
    dispatch_once(&qword_1E965E738, &unk_1EF8E6078);
  }
  id v0 = (void *)qword_1E965B590;

  return v0;
}

uint64_t sub_1A4B53A08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_containsString_(a2, (const char *)a2, *MEMORY[0x1E4F6CC18], a4) ^ 1;
}

void sub_1A4B53A34(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_array(MEMORY[0x1E4F1CA48], a2, a3, a4);
  long long v63 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  id v6 = *(id *)(a1 + 32);
  uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v7, (uint64_t)&v63, (uint64_t)v68, 16);
  if (v8)
  {
    uint64_t v12 = v8;
    uint64_t v13 = *(void *)v64;
    do
    {
      uint64_t v14 = 0;
      do
      {
        if (*(void *)v64 != v13) {
          objc_enumerationMutation(v6);
        }
        uint64_t v15 = *(void *)(*((void *)&v63 + 1) + 8 * v14);
        id v16 = objc_msgSend_bundleIDsDisplayingAttribution(*(void **)(a1 + 40), v9, v10, v11);
        uint64_t v19 = objc_msgSend_objectForKey_(v16, v17, v15, v18);
        int v23 = objc_msgSend_BOOLValue(v19, v20, v21, v22);

        if (v23)
        {
          uint64_t v24 = objc_msgSend_bundleIDsDisplayingAttribution(*(void **)(a1 + 40), v9, v10, v11);
          objc_msgSend_removeObjectForKey_(v24, v25, v15, v26);

          objc_msgSend_addObject_(v5, v27, v15, v28);
        }
        ++v14;
      }
      while (v12 != v14);
      uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v9, (uint64_t)&v63, (uint64_t)v68, 16);
    }
    while (v12);
  }

  if (objc_msgSend_count(v5, v29, v30, v31))
  {
    long long v61 = 0u;
    long long v62 = 0u;
    long long v59 = 0u;
    long long v60 = 0u;
    id v32 = v5;
    uint64_t v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v32, v33, (uint64_t)&v59, (uint64_t)v67, 16);
    if (v34)
    {
      uint64_t v38 = v34;
      uint64_t v39 = *(void *)v60;
      do
      {
        uint64_t v40 = 0;
        do
        {
          if (*(void *)v60 != v39) {
            objc_enumerationMutation(v32);
          }
          uint64_t v41 = *(void *)(*((void *)&v59 + 1) + 8 * v40);
          long long v42 = objc_msgSend_expiredBundleIDToTimestampMap(*(void **)(a1 + 40), v35, v36, v37, (void)v59);
          long long v46 = objc_msgSend__currentTimestamp(*(void **)(a1 + 40), v43, v44, v45);
          objc_msgSend_setObject_forKey_(v42, v47, (uint64_t)v46, v41);

          ++v40;
        }
        while (v38 != v40);
        uint64_t v38 = objc_msgSend_countByEnumeratingWithState_objects_count_(v32, v35, (uint64_t)&v59, (uint64_t)v67, 16);
      }
      while (v38);
    }

    objc_msgSend__purgeLeastRecentlySeenAppBundleIDsIfNecessary(*(void **)(a1 + 40), v48, v49, v50);
    objc_msgSend__saveToFile(*(void **)(a1 + 40), v51, v52, v53);
    uint64_t v57 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v54, v55, v56);
    objc_msgSend___mainThreadPostNotificationName_object_(v57, v58, @"__kIMBalloonPluginAttributionChangedNotification", 0);
  }
}

uint64_t sub_1A4B5423C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  uint64_t v11 = objc_msgSend_expiredBundleIDToTimestampMap(v5, v8, v9, v10);
  uint64_t v14 = objc_msgSend_objectForKey_(v11, v12, (uint64_t)v7, v13);

  objc_msgSend_doubleValue(v14, v15, v16, v17);
  double v19 = v18;

  int v23 = objc_msgSend_expiredBundleIDToTimestampMap(*(void **)(a1 + 32), v20, v21, v22);
  uint64_t v26 = objc_msgSend_objectForKey_(v23, v24, (uint64_t)v6, v25);

  objc_msgSend_doubleValue(v26, v27, v28, v29);
  double v31 = v30;

  uint64_t v32 = -1;
  if (v19 >= v31) {
    uint64_t v32 = 1;
  }
  if (v19 == v31) {
    return 0;
  }
  else {
    return v32;
  }
}

id sub_1A4B54578(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = objc_msgSend_identifier(v2, v3, v4, v5);
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

uint64_t sub_1A4B54664(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_stringByAppendingPathComponent_((void *)qword_1E965B590, a2, @"/", a4);
  uint64_t v5 = (void *)qword_1E965B590;
  qword_1E965B590 = v4;

  uint64_t v8 = objc_msgSend_stringByAppendingPathComponent_((void *)qword_1E965B590, v6, @"var", v7);
  uint64_t v9 = (void *)qword_1E965B590;
  qword_1E965B590 = v8;

  uint64_t v12 = objc_msgSend_stringByAppendingPathComponent_((void *)qword_1E965B590, v10, @"mobile", v11);
  uint64_t v13 = (void *)qword_1E965B590;
  qword_1E965B590 = v12;

  uint64_t v16 = objc_msgSend_stringByAppendingPathComponent_((void *)qword_1E965B590, v14, @"Library", v15);
  uint64_t v17 = (void *)qword_1E965B590;
  qword_1E965B590 = v16;

  uint64_t v20 = objc_msgSend_stringByAppendingPathComponent_((void *)qword_1E965B590, v18, @"SMS", v19);
  uint64_t v21 = (void *)qword_1E965B590;
  qword_1E965B590 = v20;

  uint64_t v24 = objc_msgSend_stringByAppendingPathComponent_((void *)qword_1E965B590, v22, @"AppAttributionRecord.plist", v23);
  uint64_t v25 = qword_1E965B590;
  qword_1E965B590 = v24;

  return MEMORY[0x1F41817F8](v24, v25);
}

uint64_t IMRichLinkUtilitiesHasKnownSchemesForRichLinkURL(void *a1, void *a2)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v8 = objc_msgSend_scheme(v3, v5, v6, v7);
  if (objc_msgSend_length(v8, v9, v10, v11))
  {
    uint64_t v15 = objc_msgSend_host(v3, v12, v13, v14);
    uint64_t v19 = objc_msgSend_length(v15, v16, v17, v18);

    if (v19)
    {
      uint64_t v23 = objc_msgSend_scheme(v3, v20, v21, v22);
      long long v40 = 0u;
      long long v41 = 0u;
      long long v42 = 0u;
      long long v43 = 0u;
      uint64_t v25 = objc_msgSend_countByEnumeratingWithState_objects_count_(&unk_1EF914638, v24, (uint64_t)&v40, (uint64_t)v45, 16);
      if (v25)
      {
        uint64_t v27 = v25;
        uint64_t v28 = *(void *)v41;
        while (2)
        {
          for (uint64_t i = 0; i != v27; ++i)
          {
            if (*(void *)v41 != v28) {
              objc_enumerationMutation(&unk_1EF914638);
            }
            if (!objc_msgSend_compare_options_(v23, v26, *(void *)(*((void *)&v40 + 1) + 8 * i), 3))
            {
              uint64_t v19 = 1;
              goto LABEL_24;
            }
          }
          uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(&unk_1EF914638, v26, (uint64_t)&v40, (uint64_t)v45, 16);
          if (v27) {
            continue;
          }
          break;
        }
      }
      long long v38 = 0u;
      long long v39 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      id v30 = v4;
      uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v31, (uint64_t)&v36, (uint64_t)v44, 16);
      if (v19)
      {
        uint64_t v33 = *(void *)v37;
        while (2)
        {
          for (uint64_t j = 0; j != v19; ++j)
          {
            if (*(void *)v37 != v33) {
              objc_enumerationMutation(v30);
            }
            if (!objc_msgSend_compare_options_(v23, v32, *(void *)(*((void *)&v36 + 1) + 8 * j), 3, (void)v36))
            {
              uint64_t v19 = 1;
              goto LABEL_23;
            }
          }
          uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v32, (uint64_t)&v36, (uint64_t)v44, 16);
          if (v19) {
            continue;
          }
          break;
        }
      }
LABEL_23:

LABEL_24:
    }
  }
  else
  {

    uint64_t v19 = 0;
  }

  return v19;
}

uint64_t IMRichLinkUtilitiesIsSupportedRichLinkURL(void *a1, void *a2)
{
  id v3 = a1;
  if (IMRichLinkUtilitiesHasKnownSchemesForRichLinkURL(v3, a2))
  {
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v8 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v4, v5, v6);
    uint64_t v11 = objc_msgSend_dataSourceClassForBundleID_(v8, v9, *MEMORY[0x1E4F6CC10], v10);

    id v12 = v11;
    uint64_t v7 = objc_msgSend_supportsURL_(v12, v13, (uint64_t)v3, v14);
  }

  return v7;
}

id IMRichLinkUtilitiesDetermineRichLinksInMessage(void *a1, void *a2)
{
  uint64_t v86 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v8 = objc_msgSend_length(v3, v5, v6, v7);
  id v12 = objc_msgSend_string(v3, v9, v10, v11);
  id v13 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v81[0] = MEMORY[0x1E4F143A8];
  v81[1] = 3221225472;
  v81[2] = sub_1A4B550A8;
  v81[3] = &unk_1E5B7B4B8;
  id v15 = v4;
  id v82 = v15;
  id v16 = v14;
  id v83 = v16;
  objc_msgSend_enumerateAttributesInRange_options_usingBlock_(v3, v17, 0, v8, 0, v81);
  if (objc_msgSend_count(v16, v18, v19, v20))
  {
    uint64_t v70 = v8;
    id v71 = v3;
    id v72 = v15;
    long long v79 = 0u;
    long long v80 = 0u;
    long long v77 = 0u;
    long long v78 = 0u;
    id v21 = v16;
    uint64_t v23 = objc_msgSend_countByEnumeratingWithState_objects_count_(v21, v22, (uint64_t)&v77, (uint64_t)v85, 16);
    if (v23)
    {
      uint64_t v27 = v23;
      uint64_t v28 = 0;
      uint64_t v29 = *(void *)v78;
      while (2)
      {
        for (uint64_t i = 0; i != v27; ++i)
        {
          if (*(void *)v78 != v29) {
            objc_enumerationMutation(v21);
          }
          uint64_t v31 = objc_msgSend_rangeValue(*(void **)(*((void *)&v77 + 1) + 8 * i), v24, v25, v26);
          uint64_t v33 = v32;
          if ((sub_1A4B551B8(v12, v28, v31 - (void)v28) & 1) == 0)
          {

            uint64_t v37 = v70;
            goto LABEL_22;
          }
          uint64_t v28 = (const char *)(v31 + v33);
        }
        uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v21, v24, (uint64_t)&v77, (uint64_t)v85, 16);
        if (v27) {
          continue;
        }
        break;
      }
    }
    else
    {
      uint64_t v28 = 0;
    }

    uint64_t v37 = v70;
    if (sub_1A4B551B8(v12, v28, v70 - (void)v28))
    {
      long long v75 = 0u;
      long long v76 = 0u;
      long long v73 = 0u;
      long long v74 = 0u;
      id v38 = v21;
      uint64_t v40 = objc_msgSend_countByEnumeratingWithState_objects_count_(v38, v39, (uint64_t)&v73, (uint64_t)v84, 16);
      id v15 = v72;
      if (v40)
      {
        uint64_t v44 = v40;
        uint64_t v45 = *(void *)v74;
        do
        {
          for (uint64_t j = 0; j != v44; ++j)
          {
            if (*(void *)v74 != v45) {
              objc_enumerationMutation(v38);
            }
            uint64_t v47 = objc_msgSend_rangeValue(*(void **)(*((void *)&v73 + 1) + 8 * j), v41, v42, v43);
            uint64_t v49 = objc_msgSend_valueWithRange_(MEMORY[0x1E4F29238], v48, v47, (uint64_t)v48);
            objc_msgSend_addObject_(v13, v50, (uint64_t)v49, v51);
          }
          uint64_t v44 = objc_msgSend_countByEnumeratingWithState_objects_count_(v38, v41, (uint64_t)&v73, (uint64_t)v84, 16);
        }
        while (v44);
      }
      id v3 = v71;
      goto LABEL_31;
    }
LABEL_22:
    id v3 = v71;
    id v15 = v72;
    if (objc_msgSend_count(v21, v34, v35, v36) != 1) {
      goto LABEL_32;
    }
    uint64_t v55 = objc_msgSend_firstObject(v21, v52, v53, v54);
    uint64_t v59 = objc_msgSend_rangeValue(v55, v56, v57, v58);
    uint64_t v61 = v60;

    id v62 = v12;
    id v38 = v62;
    if (!v61) {
      goto LABEL_31;
    }
    if (objc_msgSend_rangeOfString_options_range_(v62, v63, @"http://", 9, v59, v61) == 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v65 = objc_msgSend_rangeOfString_options_range_(v38, v64, @"https://", 9, v59, v61);

      id v15 = v72;
      if (v65 == 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_32;
      }
    }
    else
    {

      id v15 = v72;
    }
    if ((sub_1A4B551B8(v38, 0, v59) & 1) != 0
      || sub_1A4B551B8(v38, (const char *)(v59 + v61), v37 - (v59 + v61)))
    {
      objc_msgSend_valueWithRange_(MEMORY[0x1E4F29238], v66, v59, v61);
      id v38 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v13, v67, (uint64_t)v38, v68);
LABEL_31:
    }
  }
LABEL_32:

  return v13;
}

void sub_1A4B550A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v25 = a2;
  uint64_t v11 = objc_msgSend_objectForKeyedSubscript_(v25, v7, *MEMORY[0x1E4F6C1D0], v8);
  if (v11)
  {
    id v14 = objc_msgSend_objectForKeyedSubscript_(v25, v9, *MEMORY[0x1E4F6E400], v10);
    if (!v14)
    {
      id v15 = objc_msgSend_objectForKeyedSubscript_(v25, v12, *MEMORY[0x1E4F6D4F8], v13);
      uint64_t v19 = v15;
      if ((!v15 || objc_msgSend_BOOLValue(v15, v16, v17, v18))
        && IMRichLinkUtilitiesIsSupportedRichLinkURL(v11, *(void **)(a1 + 32)))
      {
        id v21 = *(void **)(a1 + 40);
        uint64_t v22 = objc_msgSend_valueWithRange_(MEMORY[0x1E4F29238], v20, a3, a4);
        objc_msgSend_addObject_(v21, v23, (uint64_t)v22, v24);
      }
    }
  }
}

uint64_t sub_1A4B551B8(void *a1, const char *a2, uint64_t a3)
{
  if (!a3) {
    return 1;
  }
  id v3 = objc_msgSend_substringWithRange_(a1, a2, (uint64_t)a2, a3);
  uint64_t v7 = objc_msgSend_whitespaceAndNewlineCharacterSet(MEMORY[0x1E4F28B88], v4, v5, v6);
  uint64_t v11 = objc_msgSend_invertedSet(v7, v8, v9, v10);
  objc_msgSend_rangeOfCharacterFromSet_(v3, v12, (uint64_t)v11, v13);
  BOOL v15 = v14 == 0;

  return v15;
}

void IMRichLinkUtilitiesEnumerateRichLinksInAttributedString(void *a1, char a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  id v10 = v5;
  uint64_t v11 = v10;
  if ((a2 & 1) == 0)
  {
    uint64_t v11 = v10;
    if (objc_msgSend_supportsDataDetectors(MEMORY[0x1E4F6E730], v7, v8, v9))
    {
      uint64_t v11 = objc_msgSend_mutableCopy(v10, v7, v8, v9);
      BOOL v15 = objc_msgSend_string(v10, v12, v13, v14);
      uint64_t v19 = objc_msgSend_stringGUID(NSString, v16, v17, v18);
      uint64_t v23 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v20, v21, v22);
      IMDDScanAttributedStringWithContext();
    }
  }
  uint64_t v24 = objc_msgSend_length(v11, v7, v8, v9);
  uint64_t v28 = objc_msgSend_mutableCopy(v11, v25, v26, v27);
  uint64_t v29 = IMRichLinkUtilitiesDetermineRichLinksInMessage(v11, 0);
  uint64_t v30 = *MEMORY[0x1E4F6C1D0];
  v38[0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  v38[2] = sub_1A4B5546C;
  v38[3] = &unk_1E5B7B4E0;
  id v39 = v29;
  id v40 = v28;
  id v31 = v28;
  id v32 = v29;
  objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(v11, v33, v30, 0, v24, 0, v38);
  v36[0] = MEMORY[0x1E4F143A8];
  v36[1] = 3221225472;
  v36[2] = sub_1A4B5552C;
  v36[3] = &unk_1E5B7B508;
  id v37 = v6;
  id v34 = v6;
  objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(v31, v35, v30, 0, v24, 0, v36);
}

void sub_1A4B5546C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  if (v7)
  {
    uint64_t v9 = *(void **)(a1 + 32);
    id v15 = v7;
    id v10 = objc_msgSend_valueWithRange_(MEMORY[0x1E4F29238], v8, a3, a4);
    uint64_t v13 = objc_msgSend_member_(v9, v11, (uint64_t)v10, v12);

    id v7 = v15;
    if (!v13)
    {
      objc_msgSend_removeAttribute_range_(*(void **)(a1 + 40), v14, *MEMORY[0x1E4F6C1D0], a3, a4);
      id v7 = v15;
    }
  }
}

uint64_t sub_1A4B5552C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

BOOL IMIsInternationalFilteringAccount(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = qword_1E965B5B0;
  if (qword_1E965B5B0 == -1)
  {
    id v5 = objc_msgSend_sharedInstance(IMAccountController, a2, a3, a4);
    qword_1E965B5B0 = objc_msgSend_activeAccountsAreEligibleForInternationalFiltering(v5, v6, v7, v8);

    uint64_t v4 = qword_1E965B5B0;
  }
  return v4 == 1;
}

void IMResetInternationalFilterEligibilityState()
{
  qword_1E965B5B0 = -1;
}

uint64_t IMKeyTransparencyStatusFromKTUIStatus(uint64_t a1, int a2)
{
  uint64_t result = 11;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0;
      break;
    case 2:
      uint64_t result = 1;
      break;
    case 3:
      uint64_t result = 2;
      break;
    case 4:
      uint64_t result = 3;
      break;
    case 5:
      BOOL v8 = a2 == 0;
      uint64_t v9 = 13;
      uint64_t v10 = 4;
      goto LABEL_14;
    case 6:
    case 12:
      uint64_t result = a1;
      break;
    case 7:
    case 13:
      uint64_t result = 5;
      break;
    case 8:
      uint64_t result = 7;
      break;
    case 9:
      BOOL v8 = a2 == 0;
      uint64_t v9 = 14;
      uint64_t v10 = 8;
LABEL_14:
      if (v8) {
        uint64_t result = v9;
      }
      else {
        uint64_t result = v10;
      }
      break;
    case 10:
      uint64_t result = 9;
      break;
    case 11:
      uint64_t result = 10;
      break;
    default:
      IMLogHandleForCategory();
      id v5 = (char *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR)) {
        sub_1A4CB736C(a1, v5, v6, v7);
      }

      uint64_t result = 11;
      break;
  }
  return result;
}

void sub_1A4B556D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (objc_msgSend_count(a2, (const char *)a2, a3, a4))
  {
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = v5[3];
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4B5576C;
    block[3] = &unk_1E5B7ACD0;
    BOOL v8 = v5;
    dispatch_async(v6, block);
  }
}

void sub_1A4B5576C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v5 = objc_msgSend_allObjects(*(void **)(*(void *)(a1 + 32) + 48), a2, a3, a4);
  objc_msgSend_removeAllObjects(*(void **)(*(void *)(a1 + 32) + 48), v6, v7, v8);
  objc_msgSend_removeAllObjects(*(void **)(*(void *)(a1 + 32) + 16), v9, v10, v11);
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v12 = v5;
  uint64_t v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v20, (uint64_t)v24, 16);
  if (v14)
  {
    uint64_t v17 = v14;
    uint64_t v18 = *(void *)v21;
    do
    {
      uint64_t v19 = 0;
      do
      {
        if (*(void *)v21 != v18) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend_scheduleFetchIfNecessaryForHandle_(*(void **)(a1 + 32), v15, *(void *)(*((void *)&v20 + 1) + 8 * v19++), v16, (void)v20);
      }
      while (v17 != v19);
      uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v15, (uint64_t)&v20, (uint64_t)v24, 16);
    }
    while (v17);
  }
}

uint64_t sub_1A4B5598C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_copy(*(void **)(a1 + 40), a2, a3, a4);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v11 = *(void **)(*(void *)(a1 + 32) + 16);

  return objc_msgSend_removeAllObjects(v11, v8, v9, v10);
}

uint64_t sub_1A4B55A50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 16);

  return objc_msgSend_removeAllObjects(v7, v4, v5, v6);
}

uint64_t sub_1A4B55A98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4B55AAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v6 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  objc_msgSend_null(MEMORY[0x1E4F1CA98], a2, a3, a4);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  if (v6 == v8) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *(void *)(a1 + 32);
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, v7);
}

uint64_t sub_1A4B55B2C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1A4B55B40(uint64_t a1)
{
  v20[2] = *MEMORY[0x1E4F143B8];
  v19[0] = *MEMORY[0x1E4F6CA90];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = objc_msgSend_ID(WeakRetained, v3, v4, v5);
  v19[1] = *MEMORY[0x1E4F6CA80];
  v20[0] = v6;
  v20[1] = *MEMORY[0x1E4F6CA88];
  id v8 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v7, (uint64_t)v20, (uint64_t)v19, 2);

  id v12 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v9, v10, v11);
  objc_msgSend___mainThreadPostNotificationName_object_userInfo_(v12, v13, *MEMORY[0x1E4F6CA98], *(void *)(a1 + 32), v8);

  uint64_t v17 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v14, v15, v16);
  objc_msgSend___mainThreadPostNotificationName_object_userInfo_(v17, v18, *MEMORY[0x1E4F6CA60], *(void *)(a1 + 32), v8);

  CFRelease(*(CFTypeRef *)(*(void *)(a1 + 40) + 64));
  *(void *)(*(void *)(a1 + 40) + 64) = 0;
}

uint64_t sub_1A4B55D10(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v9 = objc_msgSend_contact(v4, v6, v7, v8);
  uint64_t v13 = objc_msgSend_recordId(v9, v10, v11, v12);
  uint64_t v17 = objc_msgSend_numericValue(v13, v14, v15, v16);
  long long v21 = objc_msgSend_contact(v5, v18, v19, v20);
  uint64_t v25 = objc_msgSend_recordId(v21, v22, v23, v24);
  uint64_t v29 = objc_msgSend_numericValue(v25, v26, v27, v28);

  if (v17 >= v29)
  {
    id v34 = objc_msgSend_contact(v4, v30, v31, v32);
    id v38 = objc_msgSend_recordId(v34, v35, v36, v37);
    uint64_t v42 = objc_msgSend_numericValue(v38, v39, v40, v41);
    uint64_t v46 = objc_msgSend_contact(v5, v43, v44, v45);
    uint64_t v50 = objc_msgSend_recordId(v46, v47, v48, v49);
    uint64_t v33 = v42 > objc_msgSend_numericValue(v50, v51, v52, v53);
  }
  else
  {
    uint64_t v33 = -1;
  }

  return v33;
}

void sub_1A4B5683C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, int a10, __int16 a11, __int16 a12, uint64_t a13, long long a14)
{
  if (a2 == 1)
  {
    id v14 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v14, v16, v17, v18);
        id v19 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v14, v20, v21, v22);
        id v23 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v27 = objc_msgSend_userInfo(v14, v24, v25, v26);
        LODWORD(a9) = 138413314;
        *(void *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(void *)((char *)&a9 + 14) = v19;
        a12 = 2112;
        a13 = (uint64_t)v23;
        LOWORD(a14) = 2112;
        *(void *)((char *)&a14 + 2) = v27;
        WORD5(a14) = 2080;
        *(void *)((char *)&a14 + 12) = "-[IMAccount _updateMyStatus:message:]";
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B56800);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4B577E4(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  uint64_t v13 = objc_msgSend_registration(MEMORY[0x1E4F6C3B8], v10, v11, v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    if (a5) {
      id v14 = @"YES";
    }
    else {
      id v14 = @"NO";
    }
    uint64_t v15 = IMGetEnvironmentName();
    int v16 = 138413058;
    id v17 = v8;
    __int16 v18 = 2112;
    id v19 = v9;
    __int16 v20 = 2112;
    uint64_t v21 = v14;
    __int16 v22 = 2112;
    id v23 = v15;
    _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_DEFAULT, "Successfully updated password for account (%@:%@): %@  (Environment: %@)", (uint8_t *)&v16, 0x2Au);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1A4B57E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B57EA8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v12 = a7;
  int v16 = objc_msgSend_registration(MEMORY[0x1E4F6C3B8], v13, v14, v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    id v17 = @"YES";
    int v20 = 138412802;
    id v21 = v10;
    __int16 v22 = 2112;
    if (!v12) {
      id v17 = @"NO";
    }
    id v23 = v11;
    __int16 v24 = 2112;
    uint64_t v25 = v17;
    _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_DEFAULT, "Successfully read temporary password for account (%@:%@): %@", (uint8_t *)&v20, 0x20u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8);
  id v19 = *(void **)(v18 + 40);
  *(void *)(v18 + 40) = v12;
}

void sub_1A4B580FC(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  uint64_t v13 = objc_msgSend_registration(MEMORY[0x1E4F6C3B8], v10, v11, v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = @"NO";
    int v15 = 138412802;
    id v16 = v8;
    __int16 v17 = 2112;
    if (a5) {
      uint64_t v14 = @"YES";
    }
    id v18 = v9;
    __int16 v19 = 2112;
    int v20 = v14;
    _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_DEFAULT, "Successfully updated temporary password for account (%@:%@): %@", (uint8_t *)&v15, 0x20u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1A4B58520(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == v2)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B584D4);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A4B5926C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long buf, int a18, __int16 a19, __int16 a20,id a21,long long a22)
{
  if (a2 == 1)
  {
    id v22 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      id v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v22, v24, v25, v26);
        id v27 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v22, v28, v29, v30);
        id v31 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v35 = objc_msgSend_userInfo(v22, v32, v33, v34);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v22;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v27;
        a20 = 2112;
        a21 = v31;
        LOWORD(a22) = 2112;
        *(void *)((char *)&a22 + 2) = v35;
        WORD5(a22) = 2080;
        *(void *)((char *)&a22 + 12) = "-[IMAccount setCachedAllowList:]";
        _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B59228);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B59554(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long buf, int a18, __int16 a19, __int16 a20,id a21,long long a22)
{
  if (a2 == 1)
  {
    id v22 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      id v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v22, v24, v25, v26);
        id v27 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v22, v28, v29, v30);
        id v31 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v35 = objc_msgSend_userInfo(v22, v32, v33, v34);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v22;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v27;
        a20 = 2112;
        a21 = v31;
        LOWORD(a22) = 2112;
        *(void *)((char *)&a22 + 2) = v35;
        WORD5(a22) = 2080;
        *(void *)((char *)&a22 + 12) = "-[IMAccount setCachedBlockList:]";
        _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B59510);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B59784(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf, int a12, __int16 a13, __int16 a14, id a15, long long a16)
{
  if (a2 == 1)
  {
    id v16 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      __int16 v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v16, v18, v19, v20);
        id v21 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v16, v22, v23, v24);
        id v25 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v29 = objc_msgSend_userInfo(v16, v26, v27, v28);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v16;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v21;
        a14 = 2112;
        a15 = v25;
        LOWORD(a16) = 2112;
        *(void *)((char *)&a16 + 2) = v29;
        WORD5(a16) = 2080;
        *(void *)((char *)&a16 + 12) = "-[IMAccount setCachedBlockingMode:]";
        _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B596E0);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B599B8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf, int a12, __int16 a13, __int16 a14, id a15, long long a16)
{
  if (a2 == 1)
  {
    id v16 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      __int16 v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v16, v18, v19, v20);
        id v21 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v16, v22, v23, v24);
        id v25 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v29 = objc_msgSend_userInfo(v16, v26, v27, v28);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v16;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v21;
        a14 = 2112;
        a15 = v25;
        LOWORD(a16) = 2112;
        *(void *)((char *)&a16 + 2) = v29;
        WORD5(a16) = 2080;
        *(void *)((char *)&a16 + 12) = "-[IMAccount setCachedBlockIdleStatus:]";
        _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B59914);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B5CEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int buf,int a40,int a41,__int16 a42,int a43,__int16 a44,__int16 a45,uint64_t a46,__int16 a47,int a48,__int16 a49,__int16 a50,__int16 a51)
{
  if (a2 == 1)
  {
    id v52 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      uint64_t v53 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v52, v54, v55, v56);
        id v57 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v52, v58, v59, v60);
        id v61 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v65 = objc_msgSend_userInfo(v52, v62, v63, v64);
        long long buf = 138413314;
        *(void *)(v51 + 4) = v52;
        a42 = 2112;
        *(void *)(v51 + 14) = v57;
        a45 = 2112;
        a46 = (uint64_t)v61;
        a47 = 2112;
        *(void *)(v51 + 34) = v65;
        a50 = 2080;
        *(void *)(v51 + 44) = "-[IMAccount setBuddyProperties:buddyPictures:]";
        _os_log_impl(&dword_1A4AF7000, v53, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B5CE80);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4B5D6F8(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == v2)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B5D6ACLL);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A4B5E010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int buf,int a48,int a49,__int16 a50,int a51,__int16 a52,__int16 a53,uint64_t a54,__int16 a55,int a56,__int16 a57,__int16 a58,__int16 a59)
{
  if (a2 == 1)
  {
    id v60 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      id v61 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v60, v62, v63, v64);
        id v65 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v60, v66, v67, v68);
        id v69 = (id)objc_claimAutoreleasedReturnValue();
        long long v73 = objc_msgSend_userInfo(v60, v70, v71, v72);
        long long buf = 138413314;
        *(void *)(v59 + 4) = v60;
        a50 = 2112;
        *(void *)(v59 + 14) = v65;
        a53 = 2112;
        a54 = (uint64_t)v69;
        a55 = 2112;
        *(void *)(v59 + 34) = v73;
        a58 = 2080;
        *(void *)(v59 + 44) = "-[IMAccount groupsChanged:error:]";
        _os_log_impl(&dword_1A4AF7000, v61, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B5DF90);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4B5FCDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B5FCF4(uint64_t a1, int a2, int a3, int a4, int a5, int a6, id obj)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
  id v9 = obj;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1A4B60CAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend_typeForAlias_(*(void **)(a1 + 32), v4, (uint64_t)v3, v5) == *(void *)(a1 + 40)) {
    id v6 = v3;
  }
  else {
    id v6 = 0;
  }

  return v6;
}

id sub_1A4B6117C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_lowercaseString(a2, (const char *)a2, a3, a4);
  id v9 = objc_msgSend_sharedInstance(MEMORY[0x1E4F61740], v6, v7, v8);
  if (objc_msgSend_supportsSMS(v9, v10, v11, v12))
  {
  }
  else
  {
    char isEqualToIgnoringCase = objc_msgSend_isEqualToIgnoringCase_(v5, v13, *MEMORY[0x1E4F6B7D0], v14);

    if (isEqualToIgnoringCase)
    {
LABEL_8:
      id v27 = 0;
      goto LABEL_10;
    }
  }
  if (MEMORY[0x1A62639B0](v5))
  {
    uint64_t v19 = IMCanonicalizeFormattedString();

    uint64_t v5 = (void *)v19;
  }
  if (!objc_msgSend_length(v5, v16, v17, v18)) {
    goto LABEL_8;
  }
  uint64_t v23 = objc_msgSend_aliases(*(void **)(a1 + 32), v20, v21, v22);
  char v26 = objc_msgSend_containsObject_(v23, v24, (uint64_t)v5, v25);

  if (v26) {
    goto LABEL_8;
  }
  id v27 = v5;
  uint64_t v5 = v27;
LABEL_10:

  return v27;
}

id sub_1A4B6127C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_trimmedString(a2, (const char *)a2, a3, a4);
  id v9 = objc_msgSend_lowercaseString(v5, v6, v7, v8);

  if (objc_msgSend_containsObject_(*(void **)(a1 + 32), v10, (uint64_t)v9, v11)) {
    id v12 = 0;
  }
  else {
    id v12 = v9;
  }

  return v12;
}

id sub_1A4B61798(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (MEMORY[0x1A62639B0]())
  {
    uint64_t v3 = IMCanonicalizeFormattedString();

    id v2 = (id)v3;
  }

  return v2;
}

id sub_1A4B617F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = objc_msgSend_objectForKey_(v3, v4, *MEMORY[0x1E4F6C698], v5);
  if (MEMORY[0x1A62639B0]())
  {
    uint64_t v9 = IMCanonicalizeFormattedString();

    id v6 = (void *)v9;
  }
  if (objc_msgSend_containsObject_(*(void **)(a1 + 32), v7, (uint64_t)v6, v8)) {
    id v10 = 0;
  }
  else {
    id v10 = v3;
  }

  return v10;
}

id sub_1A4B61ABC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_lowercaseString(a2, (const char *)a2, a3, a4);
  if (!objc_msgSend_length(v4, v5, v6, v7)
    || IMStringIsEmail() && (IMAreEmailsLogicallyTheSame() & 1) != 0)
  {
    id v8 = 0;
  }
  else
  {
    id v8 = v4;
  }

  return v8;
}

id sub_1A4B61DA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_lowercaseString(a2, (const char *)a2, a3, a4);
  if (objc_msgSend_length(v4, v5, v6, v7)) {
    id v8 = v4;
  }
  else {
    id v8 = 0;
  }

  return v8;
}

uint64_t sub_1A4B62130()
{
  objc_msgSend_arrayWithObjects_(MEMORY[0x1E4F1C978], (const char *)*MEMORY[0x1E4F6C748], *MEMORY[0x1E4F6C6E8], *MEMORY[0x1E4F6C750], @"AccountSignedOut", *MEMORY[0x1E4F6C7D8], *MEMORY[0x1E4F6C7D0], *MEMORY[0x1E4F6C7C8], *MEMORY[0x1E4F6C7C0], *MEMORY[0x1E4F6C810], *MEMORY[0x1E4F6C6D0], *MEMORY[0x1E4F6C6C0], *MEMORY[0x1E4F6C7F0], *MEMORY[0x1E4F6C7E8], *MEMORY[0x1E4F6C728], *MEMORY[0x1E4F6C748], *MEMORY[0x1E4F6C750], *MEMORY[0x1E4F6C7F8], *MEMORY[0x1E4F6C820],
    *MEMORY[0x1E4F6C7B0],
    *MEMORY[0x1E4F6C718],
    *MEMORY[0x1E4F6C7E0],
    *MEMORY[0x1E4F6C800],
    *MEMORY[0x1E4F6C808],
    *MEMORY[0x1E4F6C770],
    *MEMORY[0x1E4F6C778],
    *MEMORY[0x1E4F6C780],
    *MEMORY[0x1E4F6C788],
  uint64_t v0 = 0);
  uint64_t v1 = qword_1E965E850;
  qword_1E965E850 = v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4B64AF4(void *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B64894);
  }
  JUMPOUT(0x1A4B64AECLL);
}

void sub_1A4B65A90(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,long long buf,int a22,__int16 a23,__int16 a24,id a25,long long a26)
{
  if (a2 == 1)
  {
    id v26 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      id v27 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v26, v28, v29, v30);
        id v39 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v26, v31, v32, v33);
        id v34 = (id)objc_claimAutoreleasedReturnValue();
        id v38 = objc_msgSend_userInfo(v26, v35, v36, v37);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v26;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v39;
        a24 = 2112;
        a25 = v34;
        LOWORD(a26) = 2112;
        *(void *)((char *)&a26 + 2) = v38;
        WORD5(a26) = 2080;
        *(void *)((char *)&a26 + 12) = "-[_IMLegacyDaemonListener pinCodeAlertCompleted:deviceName:deviceType:phoneNumb"
                                         "er:responseFromDevice:wasCancelled:]";
        _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B65A3CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B67848(void *exc_buf, int a2)
{
  if (a2 == 1)
  {
    id v3 = objc_begin_catch(exc_buf);
    if (IMOSLoggingEnabled())
    {
      id v4 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v3, v5, v6, v7);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v3, v9, v10, v11);
        id v12 = (id)objc_claimAutoreleasedReturnValue();
        id v16 = objc_msgSend_userInfo(v3, v13, v14, v15);
        *(_DWORD *)(v2 - 160) = 138413314;
        uint64_t v17 = v2 - 160;
        *(void *)(v17 + 4) = v3;
        *(_WORD *)(v2 - 148) = 2112;
        *(void *)(v17 + 14) = v8;
        *(_WORD *)(v2 - 138) = 2112;
        *(void *)(v2 - 136) = v12;
        *(_WORD *)(v2 - 128) = 2112;
        *(void *)(v17 + 34) = v16;
        *(_WORD *)(v2 - 118) = 2080;
        *(void *)(v17 + 44) = "-[_IMLegacyDaemonListener account:postedError:]";
        _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)(v2 - 160), 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B67648);
  }
  JUMPOUT(0x1A4B67840);
}

void sub_1A4B67968(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == v2)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B6794CLL);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A4B684CC()
{
}

void sub_1A4B68CC8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B68C5CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B696EC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (objc_class *)MEMORY[0x1E4F6E8B8];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  id v12 = (id)objc_msgSend_initWithDictionaryRepresentation_(v8, v9, (uint64_t)v6, v10);

  objc_msgSend_setObject_forKey_(*(void **)(a1 + 32), v11, (uint64_t)v12, (uint64_t)v7);
}

void sub_1A4B69778(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (objc_class *)MEMORY[0x1E4F6E8B8];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  id v12 = (id)objc_msgSend_initWithDictionaryRepresentation_(v8, v9, (uint64_t)v6, v10);

  objc_msgSend_setObject_forKey_(*(void **)(a1 + 32), v11, (uint64_t)v12, (uint64_t)v7);
}

void sub_1A4B69804(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (objc_class *)MEMORY[0x1E4F6E8B8];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  id v12 = (id)objc_msgSend_initWithDictionaryRepresentation_(v8, v9, (uint64_t)v6, v10);

  objc_msgSend_setObject_forKey_(*(void **)(a1 + 32), v11, (uint64_t)v12, (uint64_t)v7);
}

id sub_1A4B69F78(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_array(MEMORY[0x1E4F1CA48], a2, a3, a4);
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v9 = objc_msgSend_remoteMembers(a1, v6, v7, v8, 0);
  uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v10, (uint64_t)&v30, (uint64_t)v34, 16);
  if (v11)
  {
    uint64_t v15 = v11;
    uint64_t v16 = *(void *)v31;
    do
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v31 != v16) {
          objc_enumerationMutation(v9);
        }
        uint64_t v18 = objc_msgSend_handle(*(void **)(*((void *)&v30 + 1) + 8 * i), v12, v13, v14);
        uint64_t v25 = objc_msgSend_value(v18, v19, v20, v21);
        if (v25)
        {
          objc_msgSend_addObject_(v5, v22, (uint64_t)v25, v24);
        }
        else
        {
          id v26 = objc_msgSend_value(v18, v22, v23, v24);
          objc_msgSend_addObject_(v5, v27, (uint64_t)v26, v28);
        }
      }
      uint64_t v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v12, (uint64_t)&v30, (uint64_t)v34, 16);
    }
    while (v15);
  }

  return v5;
}

void sub_1A4B6A6D8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_cloudKitEventNotificationManager_syncStateDidChange_(v4, v3, *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
}

void sub_1A4B6A8C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_cloudKitHooks(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_broadcastCloudKitState(v7, v4, v5, v6);
}

void sub_1A4B6A908(uint64_t a1, const char *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = objc_msgSend_userInfo(a4, a2, a3, (uint64_t)a4);
  objc_msgSend_syncStateWithDictionary_(v5, v7, (uint64_t)v6, v8);
  id v10 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, id))(v9 + 16))(v9, v10);
  }
}

void sub_1A4B6AA70(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Fetching latest ramp state", v14, 2u);
    }
  }
  id v10 = objc_msgSend_cloudKitHooks(v4, v6, v7, v8);
  objc_msgSend_fetchLatestRampState(v10, v11, v12, v13);
}

void sub_1A4B6AB3C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (IMOSLoggingEnabled())
  {
    uint64_t v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_INFO, "Fetched latest ramp state", v19, 2u);
    }
  }
  uint64_t v14 = objc_msgSend_userInfo(v9, v10, v11, v12);
  uint64_t v17 = objc_msgSend_objectForKey_(v14, v15, @"IMCloudKitRampStateKey", v16);

  uint64_t v18 = *(void *)(a1 + 32);
  if (v18) {
    (*(void (**)(uint64_t, void *))(v18 + 16))(v18, v17);
  }
}

void sub_1A4B6ADF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_cloudKitHooks(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_broadcastCloudKitStateAfterClearingErrors(v7, v4, v5, v6);
}

void sub_1A4B6AE3C(uint64_t a1, const char *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = objc_msgSend_userInfo(a4, a2, a3, (uint64_t)a4);
  objc_msgSend_syncStateWithDictionary_(v5, v7, (uint64_t)v6, v8);
  id v10 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, id))(v9 + 16))(v9, v10);
  }
}

void sub_1A4B6B048(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  if (IMOSLoggingEnabled())
  {
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v16 = objc_msgSend_userInfo(v8, v13, v14, v15);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v37 = v16;
      _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "setEnabledDidReturned with response: %@", buf, 0xCu);
    }
  }
  if (objc_msgSend_didSucceed(v8, v9, v10, v11))
  {
    uint64_t v20 = objc_msgSend_userInfo(v8, v17, v18, v19);
    uint64_t v23 = objc_msgSend_objectForKeyedSubscript_(v20, v21, @"ResultSuccess", v22);
    char v27 = objc_msgSend_BOOLValue(v23, v24, v25, v26);
  }
  else
  {
    char v27 = 0;
  }
  v32[0] = MEMORY[0x1E4F143A8];
  v32[1] = 3221225472;
  v32[2] = sub_1A4B6B22C;
  v32[3] = &unk_1E5B7BA28;
  char v35 = v27;
  id v33 = v6;
  id v34 = v8;
  id v28 = v8;
  id v29 = v6;
  objc_msgSend_visitEventHandlers_(v29, v30, (uint64_t)v32, v31);
}

void sub_1A4B6B22C(uint64_t a1, void *a2)
{
  id v10 = a2;
  if (objc_opt_respondsToSelector())
  {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = objc_msgSend_error(*(void **)(a1 + 40), v3, v4, v5);
    objc_msgSend_cloudKitEventNotificationManager_didChangeEnabled_error_(v10, v9, v7, v6, v8);
  }
}

void sub_1A4B6B2B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_cloudKitHooks(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setEnabled_(v7, v5, *(unsigned __int8 *)(a1 + 32), v6);
}

void sub_1A4B6B4C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_cloudKitHooks(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setEnabled_(v7, v5, *(unsigned __int8 *)(a1 + 32), v6);
}

void sub_1A4B6B51C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    id v5 = a4;
    uint64_t v9 = objc_msgSend_didSucceed(v5, v6, v7, v8);
    objc_msgSend_error(v5, v10, v11, v12);
    id v13 = (id)objc_claimAutoreleasedReturnValue();

    (*(void (**)(uint64_t, uint64_t, id))(v4 + 16))(v4, v9, v13);
  }
}

void sub_1A4B6B99C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  if (IMOSLoggingEnabled())
  {
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v33 = v8;
      _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "tryToDisableAllDeviceReturned with response: %@", buf, 0xCu);
    }
  }
  if (objc_msgSend_didSucceed(v8, v9, v10, v11))
  {
    uint64_t v16 = objc_msgSend_userInfo(v8, v13, v14, v15);
    uint64_t v19 = objc_msgSend_objectForKeyedSubscript_(v16, v17, @"ResultSuccess", v18);
    char v23 = objc_msgSend_BOOLValue(v19, v20, v21, v22);
  }
  else
  {
    char v23 = 0;
  }
  v28[0] = MEMORY[0x1E4F143A8];
  v28[1] = 3221225472;
  v28[2] = sub_1A4B6BB68;
  v28[3] = &unk_1E5B7BA28;
  char v31 = v23;
  id v29 = v6;
  id v30 = v8;
  id v24 = v8;
  id v25 = v6;
  objc_msgSend_visitEventHandlers_(v25, v26, (uint64_t)v28, v27);
}

void sub_1A4B6BB68(uint64_t a1, void *a2)
{
  id v10 = a2;
  if (objc_opt_respondsToSelector())
  {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = objc_msgSend_error(*(void **)(a1 + 40), v3, v4, v5);
    objc_msgSend_cloudKitEventNotificationManager_didDisableAllDevices_error_(v10, v9, v7, v6, v8);
  }
}

void sub_1A4B6BBF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_cloudKitHooks(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_tryToDisableAllDevices(v7, v4, v5, v6);
}

void sub_1A4B6BD20(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  if (IMOSLoggingEnabled())
  {
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v45 = v8;
      _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "Did check if additional storage is required with response: %@", buf, 0xCu);
    }
  }
  int v13 = objc_msgSend_didSucceed(v8, v9, v10, v11);
  char v17 = v13;
  if (v13)
  {
    uint64_t v18 = objc_msgSend_userInfo(v8, v14, v15, v16);
    uint64_t v21 = objc_msgSend_objectForKeyedSubscript_(v18, v19, @"ResultAdditionalStorageRequired", v20);
    uint64_t v25 = objc_msgSend_longLongValue(v21, v22, v23, v24);

    id v29 = objc_msgSend_userInfo(v8, v26, v27, v28);
    long long v32 = objc_msgSend_objectForKeyedSubscript_(v29, v30, @"ResultiCloudAccountId", v31);
  }
  else
  {
    uint64_t v25 = 0;
    long long v32 = 0;
  }
  v38[0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  v38[2] = sub_1A4B6BF44;
  v38[3] = &unk_1E5B7BA90;
  char v43 = v17;
  id v39 = v6;
  id v40 = v32;
  id v41 = v8;
  uint64_t v42 = v25;
  id v33 = v8;
  id v34 = v32;
  id v35 = v6;
  objc_msgSend_visitEventHandlers_(v35, v36, (uint64_t)v38, v37);
}

void sub_1A4B6BF44(uint64_t a1, void *a2)
{
  id v12 = a2;
  if (objc_opt_respondsToSelector())
  {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 64);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = *(void *)(a1 + 56);
    uint64_t v10 = objc_msgSend_error(*(void **)(a1 + 48), v3, v4, v5);
    objc_msgSend_cloudKitEventNotificationManager_didPerformAdditionalStorageRequiredCheck_additionalStorageRequired_forAccountId_error_(v12, v11, v7, v6, v9, v8, v10);
  }
}

void sub_1A4B6BFE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_cloudKitHooks(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_performAdditionalStorageRequiredCheck(v7, v4, v5, v6);
}

void sub_1A4B6C148(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  if (objc_msgSend_didSucceed(v5, v6, v7, v8))
  {
    id v12 = objc_msgSend_userInfo(v5, v9, v10, v11);
    objc_msgSend_objectForKey_(v12, v13, @"IMCloudKitSyncStatisticsKey", v14);
    uint64_t v15 = (char *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      uint64_t v19 = [IMCloudKitSyncStatistics alloc];
      uint64_t v22 = objc_msgSend_initWithStatisticsDictionary_(v19, v20, (uint64_t)v15, v21);
      objc_msgSend_logHandle(*(void **)(a1 + 32), v23, v24, v25);
      uint64_t v26 = (char *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled((os_log_t)v26, OS_LOG_TYPE_DEBUG)) {
        sub_1A4CB7550(v22, v26, v27, v28);
      }
    }
    else
    {
      objc_msgSend_logHandle(*(void **)(a1 + 32), v16, v17, v18);
      uint64_t v26 = (char *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled((os_log_t)v26, OS_LOG_TYPE_ERROR)) {
        sub_1A4CB750C((os_log_t)v26);
      }
      uint64_t v22 = 0;
    }
  }
  else
  {
    objc_msgSend_logHandle(*(void **)(a1 + 32), v9, v10, v11);
    uint64_t v15 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB75E8(v5, v15, v29, v30);
    }
    uint64_t v22 = 0;
  }

  uint64_t v34 = *(void *)(a1 + 40);
  if (v34)
  {
    id v35 = objc_msgSend_error(v5, v31, v32, v33);
    (*(void (**)(uint64_t, void *, void *))(v34 + 16))(v34, v22, v35);
  }
}

void sub_1A4B6C2A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_cloudKitHooks(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_fetchSyncStateStatistics(v7, v4, v5, v6);
}

void sub_1A4B6C3A4(uint64_t *a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_cloudKitEventNotificationManager_didFetchSyncStatistics_error_(v4, v3, a1[4], a1[5], a1[6]);
  }
}

uint64_t sub_1A4B6C474(uint64_t a1, const char *a2, uint64_t a3)
{
  return objc_msgSend__sendSyncStatisticsToEventHandlers_error_(*(void **)(a1 + 32), a2, (uint64_t)a2, a3);
}

void sub_1A4B6C518(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  objc_msgSend__sendSyncStatisticsToEventHandlers_error_(*(void **)(a1 + 32), v5, (uint64_t)v7, a3);
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v7);
  }
}

uint64_t sub_1A4B6C664(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }
  return result;
}

void sub_1A4B6C954(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_cloudKitEventNotificationManager_syncProgressDidUpdate_(v4, v3, *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
}

void sub_1A4B6CC78(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  id v12 = objc_msgSend_userInfo(v8, v9, v10, v11);
  if (IMOSLoggingEnabled())
  {
    uint64_t v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v45 = v12;
      _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "Fetched sync state debugging info: %@", buf, 0xCu);
    }
  }
  uint64_t v17 = objc_msgSend_mutableCopy(v12, v13, v14, v15);
  uint64_t v22 = objc_msgSend_objectForKey_(v12, v18, @"sync-statistics-from-database", v19);
  if (v22)
  {
    uint64_t v23 = [IMCloudKitSyncStatistics alloc];
    uint64_t v26 = objc_msgSend_initWithStatisticsDictionary_(v23, v24, (uint64_t)v22, v25);
    objc_msgSend_setObject_forKey_(v17, v27, (uint64_t)v26, @"sync-statistics");
  }
  uint64_t v28 = objc_msgSend_objectForKey_(v12, v20, @"sync-state-user-defaults", v21);
  if (v28)
  {
    uint64_t v29 = [IMCloudKitSyncState alloc];
    uint64_t v33 = objc_msgSend_accountHasiMessageEnabled(v6, v30, v31, v32);
    id v35 = objc_msgSend_initWithAccountEnabled_stateDictionary_(v29, v34, v33, (uint64_t)v28);
    objc_msgSend_setObject_forKey_(v17, v36, (uint64_t)v35, @"sync-state");
  }
  v41[0] = MEMORY[0x1E4F143A8];
  v41[1] = 3221225472;
  v41[2] = sub_1A4B6CED0;
  v41[3] = &unk_1E5B7BB58;
  id v42 = v6;
  id v43 = v17;
  id v37 = v17;
  id v38 = v6;
  objc_msgSend_visitEventHandlers_(v38, v39, (uint64_t)v41, v40);
}

void sub_1A4B6CED0(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_cloudKitEventNotificationManager_didFetchSyncDebuggingInfo_(v4, v3, *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
}

void sub_1A4B6CF30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_cloudKitHooks(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_fetchCloudKitSyncStateDebuggingInfo_(v7, v5, *(void *)(a1 + 32), v6);
}

uint64_t sub_1A4B6D0D8(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v9 = objc_msgSend_time(v4, v6, v7, v8);
  int v13 = objc_msgSend_time(v5, v10, v11, v12);
  uint64_t v16 = objc_msgSend_compare_(v9, v14, (uint64_t)v13, v15);

  if (!v16)
  {
    uint64_t v20 = objc_msgSend_messageID(v4, v17, v18, v19);
    if (v20 >= objc_msgSend_messageID(v5, v21, v22, v23))
    {
      uint64_t v27 = objc_msgSend_messageID(v4, v24, v25, v26);
      uint64_t v16 = v27 > objc_msgSend_messageID(v5, v28, v29, v30);
    }
    else
    {
      uint64_t v16 = -1;
    }
  }

  return v16;
}

uint64_t sub_1A4B6E1D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_wasInterworked(a2, (const char *)a2, a3, a4);
}

void sub_1A4B6E650(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (!qword_1E965E728)
  {
    id v4 = (void *)MEMORY[0x1E4F28B88];
    objc_msgSend_stringByAppendingString_((void *)*MEMORY[0x1E4F6C110], a2, *MEMORY[0x1E4F6C130], a4);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v7 = objc_msgSend_characterSetWithCharactersInString_(v4, v5, (uint64_t)v9, v6);
    uint64_t v8 = (void *)qword_1E965E728;
    qword_1E965E728 = v7;
  }
}

uint64_t sub_1A4B6EAF4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_appendFormat_(*(void **)(a1 + 32), a2, @"%@\n", a4, a2);
}

uint64_t sub_1A4B6F0A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend_service(a2, (const char *)a2, a3, a4);
  uint64_t isEqualToString = objc_msgSend_isEqualToString_(v5, v6, *(void *)(a1 + 32), v7);

  return isEqualToString;
}

uint64_t sub_1A4B6F194(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend_service(a2, (const char *)a2, a3, a4);
  uint64_t v8 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v6, (uint64_t)v5, v7);

  uint64_t v11 = objc_msgSend_supportsCapability_(v8, v9, *(void *)(a1 + 32), v10);
  return v11;
}

id sub_1A4B6F21C(void *a1, const char *a2)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1A4B3446C;
  id v9 = sub_1A4B3431C;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4B6F320;
  v4[3] = &unk_1E5B7BC38;
  v4[4] = &v5;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(a1, a2, 0, (uint64_t)v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1A4B6F308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B6F320(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v10 = a2;
  if (!objc_msgSend_type(v10, v7, v8, v9))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

id sub_1A4B6F398(void *a1, const char *a2)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1A4B3446C;
  uint64_t v9 = sub_1A4B3431C;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4B6F49C;
  v4[3] = &unk_1E5B7BC38;
  v4[4] = &v5;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(a1, a2, 2, (uint64_t)v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1A4B6F484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B6F49C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v10 = a2;
  if (!objc_msgSend_type(v10, v7, v8, v9))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_1A4B6F514(void *a1, uint64_t a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v15 = a3;
  if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134218242;
      uint64_t v22 = a1;
      __int16 v23 = 2112;
      id v24 = v15;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Logging GUIDs of chat %p due to: %@", buf, 0x16u);
    }
  }
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v5 = a1;
  uint64_t v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(v5, v6, (uint64_t)&v16, (uint64_t)v20, 16);
  if (v10)
  {
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v5);
        }
        int v13 = objc_msgSend_guid(*(void **)(*((void *)&v16 + 1) + 8 * i), v7, v8, v9);
        if (IMOSLoggingEnabled())
        {
          uint64_t v14 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            uint64_t v22 = v13;
            _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "%@", buf, 0xCu);
          }
        }
      }
      uint64_t v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(v5, v7, (uint64_t)&v16, (uint64_t)v20, 16);
    }
    while (v10);
  }
}

void sub_1A4B6FA4C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedInstance(IMDaemonController, a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__agentDidLaunchNotification_(v6, v4, 0, v5);
}

uint64_t sub_1A4B6FCAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  os_unfair_recursive_lock_lock_with_options();
  v3[2](v3);

  return MEMORY[0x1F40CD628](a1);
}

void sub_1A4B6FD08(char a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  uint64_t v14 = a5;
  id v15 = a6;
  long long v19 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6C360], v16, v17, v18);
  int isNonUIInstall = objc_msgSend_isNonUIInstall(v19, v20, v21, v22);

  if (!isNonUIInstall)
  {
    if (a1 & 1) != 0 || (_IMDaemonIsRunning())
    {
      v27[0] = MEMORY[0x1E4F143A8];
      v27[1] = 3221225472;
      v27[2] = sub_1A4B6FF78;
      v27[3] = &unk_1E5B7BCE0;
      id v24 = &v28;
      id v28 = v11;
      id v29 = v12;
      id v30 = v13;
      id v31 = v15;
      uint64_t v25 = (void (**)(void))_Block_copy(v27);
      uint64_t v26 = v25;
      if (v14) {
        dispatch_async(v14, v25);
      }
      else {
        v25[2](v25);
      }

      goto LABEL_12;
    }
    uint64_t v32 = MEMORY[0x1E4F143A8];
    uint64_t v33 = 3221225472;
    uint64_t v34 = sub_1A4B6FF58;
    id v35 = &unk_1E5B7AE90;
    id v24 = (id *)v36;
    v36[0] = v15;
LABEL_11:
    im_dispatch_after();
LABEL_12:

    goto LABEL_13;
  }
  if (v15)
  {
    v36[1] = MEMORY[0x1E4F143A8];
    v36[2] = 3221225472;
    v36[3] = sub_1A4B6FF40;
    void v36[4] = &unk_1E5B7AE90;
    id v24 = &v37;
    id v37 = v15;
    goto LABEL_11;
  }
LABEL_13:
}

uint64_t sub_1A4B6FF40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A4B6FF58(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

void sub_1A4B6FF78(uint64_t a1)
{
  IMDaemonRequestConnectionWithSync = (void (*)(uint64_t, uint64_t, void *, uint64_t, void *))IMSharedHelperGet_IMDaemonRequestConnectionWithSync();
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8)
  {
    uint64_t v9 = objc_msgSend_connection(*(void **)(a1 + 48), v2, v3, v4);
  }
  else
  {
    uint64_t v9 = 0;
  }
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = sub_1A4B70054;
  v10[3] = &unk_1E5B7BCB8;
  id v11 = *(id *)(a1 + 56);
  IMDaemonRequestConnectionWithSync(v6, v7, v9, 1, v10);
  if (v8) {
}
  }

void sub_1A4B70054(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v9 = a3;
  if (v5)
  {
    id v10 = objc_alloc(MEMORY[0x1E4F6C3C0]);
    id v12 = objc_msgSend_initWithConnection_protocol_alreadyConfigured_forceSecureCoding_(v10, v11, (uint64_t)v5, (uint64_t)&unk_1EF968410, 1, 1);
  }
  else
  {
    id v12 = 0;
  }
  if (*(void *)(a1 + 32))
  {
    id v13 = objc_msgSend_mainThread(MEMORY[0x1E4F29060], v6, v7, v8);
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = sub_1A4B701A4;
    v15[3] = &unk_1E5B7BC90;
    id v18 = *(id *)(a1 + 32);
    id v16 = v12;
    id v17 = v9;
    objc_msgSend___im_performBlock_modes_(v13, v14, (uint64_t)v15, *MEMORY[0x1E4F6C278]);
  }
}

uint64_t sub_1A4B701A4(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A4B70A14(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
  IMTimingStartTimingForKey();
  char v2 = *(unsigned char *)(a1 + 64);
  uint64_t v6 = objc_msgSend_listenerID(*(void **)(a1 + 32), v3, v4, v5);
  uint64_t v7 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(a1 + 40);
  id v10 = *(void **)(v8 + 160);
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = sub_1A4B70B28;
  v11[3] = &unk_1E5B7BD08;
  v11[4] = v8;
  id v12 = *(id *)(a1 + 48);
  sub_1A4B6FD08(v2, v6, v9, v7, v10, v11);
}

void sub_1A4B70B28(uint64_t a1, void *a2, void *a3)
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  IMTimingStopTimingForKey();
  *(unsigned char *)(*(void *)(a1 + 32) + 8) = 0;
  objc_msgSend__remoteObjectCleanup(*(void **)(a1 + 32), v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = v10 + 144;
  v46[0] = MEMORY[0x1E4F143A8];
  v46[1] = 3221225472;
  v46[2] = sub_1A4B70F98;
  v46[3] = &unk_1E5B7B130;
  void v46[4] = v10;
  id v12 = v5;
  id v47 = v12;
  sub_1A4B6FCAC(v11, v46);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(NSObject **)(v13 + 152);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4B70FA4;
  block[3] = &unk_1E5B7ACD0;
  void block[4] = v13;
  dispatch_sync(v14, block);
  objc_msgSend__localObjectCleanup(*(void **)(a1 + 32), v15, v16, v17);
  uint64_t v18 = *(void *)(a1 + 32);
  long long v19 = *(NSObject **)(v18 + 152);
  v43[0] = MEMORY[0x1E4F143A8];
  v43[1] = 3221225472;
  v43[2] = sub_1A4B7100C;
  v43[3] = &unk_1E5B7B130;
  v43[4] = v18;
  id v20 = v12;
  id v44 = v20;
  dispatch_sync(v19, v43);
  if (objc_msgSend_remoteObjectExists(*(void **)(a1 + 32), v21, v22, v23))
  {
    uint64_t v24 = *(void *)(a1 + 32);
    v42[0] = MEMORY[0x1E4F143A8];
    v42[1] = 3221225472;
    void v42[2] = sub_1A4B71100;
    v42[3] = &unk_1E5B7ACD0;
    v42[4] = v24;
    sub_1A4B6FCAC(v24 + 144, v42);
    if (IMOSLoggingEnabled())
    {
      uint64_t v25 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v25, OS_LOG_TYPE_INFO, "Connection to daemon established", buf, 2u);
      }
    }
    uint64_t v26 = *(void *)(a1 + 32);
    v41[0] = MEMORY[0x1E4F143A8];
    v41[1] = 3221225472;
    v41[2] = sub_1A4B71204;
    v41[3] = &unk_1E5B7ACD0;
    void v41[4] = v26;
    sub_1A4B6FCAC(v26 + 144, v41);
    uint64_t v27 = *(void *)(a1 + 32);
    id v28 = *(NSObject **)(v27 + 152);
    v40[0] = MEMORY[0x1E4F143A8];
    v40[1] = 3221225472;
    v40[2] = sub_1A4B71274;
    v40[3] = &unk_1E5B7ACD0;
    v40[4] = v27;
    dispatch_sync(v28, v40);
    objc_msgSend_setupComplete_info_(*(void **)(*(void *)(a1 + 32) + 32), v29, 1, (uint64_t)v6);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v30 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        uint64_t v34 = objc_msgSend_listenerID(*(void **)(a1 + 32), v31, v32, v33);
        *(_DWORD *)long long buf = 138412290;
        uint64_t v49 = v34;
        _os_log_impl(&dword_1A4AF7000, v30, OS_LOG_TYPE_INFO, "  Failed to build remote object for listener: %@", buf, 0xCu);
      }
    }
    if (IMOSLoggingEnabled())
    {
      id v38 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v38, OS_LOG_TYPE_INFO, "Failed to launch and connect to daemon", buf, 2u);
      }
    }
    objc_msgSend__localObjectCleanup(*(void **)(a1 + 32), v35, v36, v37);
  }
  uint64_t v39 = *(void *)(a1 + 40);
  if (v39) {
    (*(void (**)(void))(v39 + 16))();
  }
}

void sub_1A4B70F98(uint64_t a1)
{
}

void sub_1A4B70FA4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_removeObserver_name_object_(v6, v5, *(void *)(a1 + 32), *MEMORY[0x1E4F6C1D8], *(void *)(*(void *)(a1 + 32) + 112));
}

void sub_1A4B7100C(uint64_t a1)
{
  v17[1] = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc(MEMORY[0x1E4F6C358]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 32);
  uint64_t v7 = objc_msgSend_connection(*(void **)(a1 + 40), v4, v5, v6);
  uint64_t v9 = objc_msgSend_initWithTarget_connection_protocol_forceSecureCoding_(v2, v8, v3, (uint64_t)v7, &unk_1EF968580, 1);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void **)(v10 + 112);
  *(void *)(v10 + 112) = v9;

  id v12 = *(void **)(*(void *)(a1 + 32) + 112);
  v17[0] = objc_opt_class();
  uint64_t v14 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v13, (uint64_t)v17, 1);
  objc_msgSend_setAllowlistedClasses_(v12, v15, (uint64_t)v14, v16);
}

void sub_1A4B71100(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 96);
      int v4 = 138412290;
      uint64_t v5 = v3;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "  Built object: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1A4B71204(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObserver_selector_name_object_(v6, v5, *(void *)(a1 + 32), (uint64_t)sel_remoteObjectDiedNotification_, *MEMORY[0x1E4F6C268], *(void *)(*(void *)(a1 + 32) + 96));
}

void sub_1A4B71274(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObserver_selector_name_object_(v6, v5, *(void *)(a1 + 32), (uint64_t)sel_localObjectDiedNotification_, *MEMORY[0x1E4F6C1D8], *(void *)(*(void *)(a1 + 32) + 112));
}

uint64_t sub_1A4B712E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4B712F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_mainThread(MEMORY[0x1E4F29060], a2, a3, a4);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = sub_1A4B71388;
  v8[3] = &unk_1E5B7ACD0;
  v8[4] = *(void *)(a1 + 32);
  objc_msgSend___im_performBlock_(v5, v6, (uint64_t)v8, v7);
}

id sub_1A4B71388(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id result = (id)objc_msgSend_capabilities(*(void **)(a1 + 32), a2, a3, a4);
  if ((*MEMORY[0x1E4F6C550] & result) == 0)
  {
    id v8 = (id)objc_msgSend_sharedInstance(IMHandleRegistrar, v5, v6, v7);
    id v12 = (id)objc_msgSend_standardControls(IMParentalControls, v9, v10, v11);
    id v16 = (id)objc_msgSend_sharedInstance(MEMORY[0x1E4F6C3E0], v13, v14, v15);
    id v20 = (id)objc_msgSend_sharedInstance(MEMORY[0x1E4F61748], v17, v18, v19);
    id v24 = (id)objc_msgSend_sharedInstance(MEMORY[0x1E4F61740], v21, v22, v23);
    id v27 = (id)objc_msgSend_sharedInstanceForBagType_(MEMORY[0x1E4F6B598], v25, 1, v26);
    return sub_1A4C0ACE4();
  }
  return result;
}

void sub_1A4B71500()
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v1 = 0;
      _os_log_impl(&dword_1A4AF7000, v0, OS_LOG_TYPE_INFO, "Flushed send queue", v1, 2u);
    }
  }
}

void sub_1A4B7184C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long buf, int a16, __int16 a17, __int16 a18, id a19, long long a20)
{
  if (a2 == 1)
  {
    id v20 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      uint64_t v21 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v20, v22, v23, v24);
        id v25 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v20, v26, v27, v28);
        id v29 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v33 = objc_msgSend_userInfo(v20, v30, v31, v32);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v20;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v25;
        a18 = 2112;
        a19 = v29;
        LOWORD(a20) = 2112;
        *(void *)((char *)&a20 + 2) = v33;
        WORD5(a20) = 2080;
        *(void *)((char *)&a20 + 12) = "-[_IMLegacyDaemonController _disconnectFromDaemonWithForce:]";
        _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B717B0);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B719A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v71 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (void **)(a1 + 32);
  uint64_t v6 = objc_msgSend_listener(*(void **)(a1 + 32), a2, a3, a4);
  objc_msgSend__setHidingDisconnect_(v6, v7, 0, v8);

  if ((objc_msgSend_isConnected(*v5, v9, v10, v11) & 1) != 0
    || (objc_msgSend_isConnecting(*(void **)(a1 + 32), v12, v13, v14) & 1) != 0)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "We're still connected, hiding the disconnect!", buf, 2u);
      }
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "We're still not connected, kicking off disconnect notification", buf, 2u);
      }
    }
    uint64_t v19 = (void *)MEMORY[0x1E4F1C9E8];
    id v20 = objc_msgSend_numberWithInt_(NSNumber, v16, 1, v17);
    uint64_t v23 = objc_msgSend_dictionaryWithObjectsAndKeys_(v19, v21, (uint64_t)v20, v22, *MEMORY[0x1E4F6C630], &stru_1EF8E78C8, *MEMORY[0x1E4F6C638], 0);

    long long v67 = 0u;
    long long v68 = 0u;
    long long v65 = 0u;
    long long v66 = 0u;
    uint64_t v27 = objc_msgSend_sharedInstance(IMAccountController, v24, v25, v26);
    id v30 = objc_msgSend_accountsForService_(v27, v28, 0, v29);

    uint64_t v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v31, (uint64_t)&v65, (uint64_t)v70, 16);
    if (v34)
    {
      uint64_t v35 = *(void *)v66;
      do
      {
        for (uint64_t i = 0; i != v34; ++i)
        {
          if (*(void *)v66 != v35) {
            objc_enumerationMutation(v30);
          }
          objc_msgSend_setCurrentAccountStatus_(*(void **)(*((void *)&v65 + 1) + 8 * i), v32, (uint64_t)v23, v33);
        }
        uint64_t v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v32, (uint64_t)&v65, (uint64_t)v70, 16);
      }
      while (v34);
    }

    uint64_t v40 = objc_msgSend_listener(*(void **)(a1 + 32), v37, v38, v39);
    id v44 = objc_msgSend_allServices(v40, v41, v42, v43);
    objc_msgSend_makeObjectsPerformSelector_(v44, v45, (uint64_t)sel_disconnect, v46);

    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
    char v48 = objc_opt_respondsToSelector();

    if (v48)
    {
      id v49 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
      objc_msgSend_performSelector_withObject_(v49, v50, (uint64_t)sel_daemonControllerDidDisconnect, 0);
    }
    id v51 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
    char v52 = objc_opt_respondsToSelector();

    if (v52)
    {
      id v56 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
      objc_msgSend_performSelector_withObject_(v56, v57, (uint64_t)sel_daemonConnectionLost, 0);
    }
    uint64_t v58 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v53, v54, v55);
    objc_msgSend___mainThreadPostNotificationName_object_(v58, v59, @"__kIMDaemonConnectionLostNotification", 0);

    uint64_t v63 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v60, v61, v62);
    objc_msgSend___mainThreadPostNotificationName_object_(v63, v64, @"__kIMDaemonDidDisconnectNotification", 0);

    if (qword_1E965DD90 != -1) {
      dispatch_once(&qword_1E965DD90, &unk_1EF8E6308);
    }
    if (byte_1E965E861) {
      im_dispatch_after();
    }
  }
}

void sub_1A4B71F74()
{
  IMGetMainBundleIdentifier();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  byte_1E965E861 = objc_msgSend_isEqualToIgnoringCase_(v2, v0, *MEMORY[0x1E4F6C830], v1);
}

uint64_t sub_1A4B71FC8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_connectToDaemon(*(void **)(a1 + 32), a2, a3, a4);
}

void sub_1A4B722E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_lock(*(void **)(*(void *)(a1 + 32) + 168), a2, a3, a4);
  uint64_t v8 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v8 + 13))
  {
    *(unsigned char *)(v8 + 13) = 0;
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 192));
    uint64_t v8 = *(void *)(a1 + 32);
  }
  objc_msgSend_unlock(*(void **)(v8 + 168), v5, v6, v7);
  if (objc_msgSend_remoteObjectExists(*(void **)(a1 + 32), v9, v10, v11))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
    char v13 = objc_opt_respondsToSelector();

    if (v13)
    {
      id v18 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
      objc_msgSend_performSelector_withObject_(v18, v14, (uint64_t)sel_daemonControllerDidConnect, 0);
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Tried to connect to daemon but we got no remote object ... handling as if the remote object died.", buf, 2u);
      }
    }
    objc_msgSend_remoteObjectDiedNotification_(*(void **)(a1 + 32), v15, 0, v16);
  }
}

void sub_1A4B728AC(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B72854);
  }
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(exc_buf);
}

uint64_t sub_1A4B7290C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = objc_msgSend_count(*(void **)(*(void *)(a1 + 32) + 104), a2, a3, a4);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result != 0;
  return result;
}

void sub_1A4B72A40(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(*(void *)(a1 + 32) + 104))
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(void **)(v3 + 104);
    *(void *)(v3 + 104) = v2;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = _IMStringFromFZListenerCapabilities();
      int v13 = 138412546;
      uint64_t v14 = v8;
      __int16 v15 = 2112;
      uint64_t v16 = v9;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Adding listener with ID: %@    capabilities: %@", (uint8_t *)&v13, 0x16u);
    }
  }
  uint64_t v10 = *(void **)(*(void *)(a1 + 32) + 104);
  uint64_t v11 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, *(unsigned int *)(a1 + 48), v6);
  objc_msgSend_setObject_forKey_(v10, v12, (uint64_t)v11, *(void *)(a1 + 40));
}

void sub_1A4B72C64(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_objectForKey_(*(void **)(a1[4] + 104), a2, a1[5], a4);
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = v5 != 0;
}

void sub_1A4B72DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B72DD8(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_objectForKey_(*(void **)(a1[4] + 104), a2, a1[5], a4);

  int v6 = IMOSLoggingEnabled();
  if (v5)
  {
    if (v6)
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = a1[5];
        int v13 = objc_msgSend_objectForKey_(*(void **)(a1[4] + 104), v10, v12, v11);
        objc_msgSend_unsignedIntValue(v13, v14, v15, v16);
        uint64_t v17 = _IMStringFromFZListenerCapabilities();
        int v20 = 138412546;
        uint64_t v21 = v12;
        __int16 v22 = 2112;
        uint64_t v23 = v17;
        _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Removing listener with ID: %@    capabilities: %@", (uint8_t *)&v20, 0x16u);
      }
    }
    objc_msgSend_removeObjectForKey_(*(void **)(a1[4] + 104), v7, a1[5], v8);
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
  }
  else if (v6)
  {
    id v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      uint64_t v19 = a1[5];
      int v20 = 138412290;
      uint64_t v21 = v19;
      _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Tried to remove non existent listener with ID: %@", (uint8_t *)&v20, 0xCu);
    }
  }
}

void sub_1A4B730CC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_objectForKey_(*(void **)(a1[4] + 104), a2, a1[5], a4);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)(*(void *)(a1[6] + 8) + 24) = objc_msgSend_unsignedIntValue(v8, v5, v6, v7);
}

void sub_1A4B732F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 104);
  objc_msgSend_numberWithUnsignedInt_(NSNumber, a2, *(unsigned int *)(a1 + 48), a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKey_(v5, v6, (uint64_t)v7, *(void *)(a1 + 40));
}

void sub_1A4B735E4(uint64_t a1, const char *a2)
{
  v20[2] = *MEMORY[0x1E4F143B8];
  v20[0] = @"QbQzuIbef01P4JeoL9EmKg";
  v20[1] = @"NUYAz1eq3Flzt7ZQxXC/ng";
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], a2, (uint64_t)v20, 2);
  id v2 = (void *)MGCopyMultipleAnswers();
  uint64_t v5 = objc_msgSend_objectForKey_(v2, v3, @"QbQzuIbef01P4JeoL9EmKg", v4);
  objc_msgSend_doubleValue(v5, v6, v7, v8);
  double v10 = v9 * 10.0;
  int v13 = objc_msgSend_objectForKey_(v2, v11, @"NUYAz1eq3Flzt7ZQxXC/ng", v12);
  objc_msgSend_doubleValue(v13, v14, v15, v16);
  double v18 = v10 * v17;

  double v19 = fmin(v18 + -0.5, 10.0);
  if (v19 <= 0.0) {
    double v19 = 10.0;
  }
  qword_1EB3F1F50 = *(void *)&v19;
}

uint64_t sub_1A4B73F40(uint64_t a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E08]);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(v3 + 184);
  *(void *)(v3 + 184) = v2;

  return MEMORY[0x1F41817F8](v2, v4);
}

void sub_1A4B740A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B740BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = objc_msgSend_isValid(*(void **)(*(void *)(a1 + 32) + 112), a2, a3, a4);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1A4B741B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B741C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = objc_msgSend_isValid(*(void **)(*(void *)(a1 + 32) + 96), a2, a3, a4);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1A4B742AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B742C4(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 96) != 0;
  return result;
}

uint64_t sub_1A4B743A0(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 112) != 0;
  return result;
}

void sub_1A4B74430(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_setTarget_(*(void **)(*(void *)(a1 + 32) + 112), a2, 0, a4);
  objc_msgSend_invalidate(*(void **)(*(void *)(a1 + 32) + 112), v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 32);
  double v9 = *(void **)(v8 + 112);
  *(void *)(v8 + 112) = 0;
}

void sub_1A4B744FC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_invalidate(*(void **)(*(void *)(a1 + 32) + 96), a2, a3, a4);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 96);
  *(void *)(v5 + 96) = 0;
}

uint64_t sub_1A4B74618(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = objc_msgSend_count(*(void **)(*(void *)(a1 + 32) + 104), a2, a3, a4);
  if (result)
  {
    uint64_t v8 = *(void **)(*(void *)(a1 + 32) + 104);
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = sub_1A4B746AC;
    v9[3] = &unk_1E5B7BDF8;
    v9[4] = *(void *)(a1 + 40);
    return objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v8, v6, (uint64_t)v9, v7);
  }
  return result;
}

void sub_1A4B746AC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  int v10 = objc_msgSend_unsignedIntValue(v6, v7, v8, v9);
  if (IMOSLoggingEnabled())
  {
    uint64_t v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = _IMStringFromFZListenerCapabilities();
      int v13 = 138412546;
      id v14 = v5;
      __int16 v15 = 2112;
      uint64_t v16 = v12;
      _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, " => Reading listener: %@    capabilities: %@", (uint8_t *)&v13, 0x16u);
    }
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) |= v10;
}

uint64_t sub_1A4B74AA4(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, " ... disconnection from agent (local) being handled by main thread", v7, 2u);
    }
  }
  objc_msgSend__disconnectFromDaemonWithForce_(*(void **)(a1 + 32), v2, 1, v3);
  uint64_t result = objc_msgSend__connectToDaemonWithLaunch_capabilities_(*(void **)(a1 + 32), v5, 1, 0);
  byte_1E965DD98 = 0;
  return result;
}

void sub_1A4B74C84(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, " ... disconnection from agent (remote) being handled by main thread", buf, 2u);
    }
  }
  objc_msgSend__disconnectFromDaemonWithForce_(*(void **)(a1 + 32), v2, 1, v3);
  uint64_t v8 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6C3E0], v5, v6, v7);
  if (objc_msgSend_systemIsShuttingDown(v8, v9, v10, v11)) {
    goto LABEL_16;
  }
  __int16 v15 = *(unsigned char **)(a1 + 32);
  if (v15[14])
  {
    if (objc_msgSend__blocksConnectionAtResume(v15, v12, v13, v14))
    {
LABEL_16:

      goto LABEL_17;
    }
    __int16 v15 = *(unsigned char **)(a1 + 32);
  }
  if (!objc_msgSend__autoReconnect(v15, v12, v13, v14)) {
    goto LABEL_16;
  }
  int v16 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 11);

  if (!v16)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Will auto reconnect...", buf, 2u);
      }
    }
    im_dispatch_after();
  }
LABEL_17:
  byte_1E965DD98 = 0;
}

uint64_t sub_1A4B74E48(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, " ...auto reconnecting", v7, 2u);
    }
  }
  return objc_msgSend_connectToDaemon(*(void **)(a1 + 32), v2, v3, v4);
}

void sub_1A4B753D4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend_currentThread(MEMORY[0x1E4F29060], a2, a3, a4);
  uint64_t v9 = objc_msgSend_threadDictionary(v5, v6, v7, v8);

  uint64_t v12 = objc_msgSend_objectForKeyedSubscript_(v9, v10, @"com.apple.IMDaemonControllerForwardingMessageKey", v11);
  objc_msgSend_setObject_forKeyedSubscript_(v9, v13, *(void *)(a1 + 32), @"com.apple.IMDaemonControllerForwardingMessageKey");
  if (objc_msgSend_connectToDaemon(*(void **)(a1 + 32), v14, v15, v16))
  {
    uint64_t v18 = *(void *)(a1 + 32);
    uint64_t v19 = v18 + 144;
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    v20[2] = sub_1A4B754F4;
    void v20[3] = &unk_1E5B7BE48;
    void v20[4] = v18;
    __int16 v22 = *(_WORD *)(a1 + 48);
    id v21 = *(id *)(a1 + 40);
    sub_1A4B6FCAC(v19, v20);
  }
  objc_msgSend_setObject_forKeyedSubscript_(v9, v17, (uint64_t)v12, @"com.apple.IMDaemonControllerForwardingMessageKey");
}

void sub_1A4B754F4(uint64_t a1)
{
  id v11 = *(id *)(*(void *)(a1 + 32) + 96);
  id v2 = objc_alloc_init(MEMORY[0x1E4F6C370]);
  if (objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector())
  {
    if (*(unsigned char *)(a1 + 48))
    {
      objc_msgSend_setSync_(v2, v3, 1, v5);
    }
    else if (*(unsigned char *)(a1 + 49))
    {
      objc_msgSend_setNeedReply_(v2, v3, 1, v5);
    }
  }
  uint64_t v6 = objc_msgSend_defaultBroadcaster(MEMORY[0x1E4F6C3C8], v3, v4, v5);
  uint64_t v8 = objc_msgSend_broadcastProxyForTarget_messageContext_protocol_(v6, v7, (uint64_t)v11, (uint64_t)v2, &unk_1EF968410);

  if (v8) {
    objc_msgSend_invokeWithTarget_(*(void **)(a1 + 40), v9, (uint64_t)v8, v10);
  }
}

void sub_1A4B75D78(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_map(*(void **)(a1 + 32), a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_removeObjectForKey_(v7, v5, *(void *)(a1 + 40), v6);
}

void sub_1A4B75E80(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v15, (uint64_t)v19, 16);
  if (v4)
  {
    uint64_t v8 = v4;
    uint64_t v9 = *(void *)v16;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v16 != v9) {
          objc_enumerationMutation(v2);
        }
        uint64_t v11 = *(void *)(*((void *)&v15 + 1) + 8 * v10);
        uint64_t v12 = objc_msgSend_map(*(void **)(a1 + 40), v5, v6, v7, (void)v15);
        objc_msgSend_removeObjectForKey_(v12, v13, v11, v14);

        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v5, (uint64_t)&v15, (uint64_t)v19, 16);
    }
    while (v8);
  }
}

void sub_1A4B76050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B76068(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_map(*(void **)(a1 + 32), a2, a3, a4);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = objc_msgSend_count(v8, v5, v6, v7);
}

void sub_1A4B76604(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2) {
      JUMPOUT(0x1A4B76598);
    }
    JUMPOUT(0x1A4B76584);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B76B6C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B76ADCLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B77248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, int a10, __int16 a11, __int16 a12, uint64_t a13, long long a14)
{
  if (a2 == 1)
  {
    id v14 = objc_begin_catch(exception_object);
    if (IMOSLoggingEnabled())
    {
      long long v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v14, v16, v17, v18);
        id v19 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v14, v20, v21, v22);
        id v23 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v27 = objc_msgSend_userInfo(v14, v24, v25, v26);
        LODWORD(a9) = 138413314;
        *(void *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(void *)((char *)&a9 + 14) = v19;
        a12 = 2112;
        a13 = (uint64_t)v23;
        LOWORD(a14) = 2112;
        *(void *)((char *)&a14 + 2) = v27;
        WORD5(a14) = 2080;
        *(void *)((char *)&a14 + 12) = "-[IMAccountController accountLoginComplete:]";
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B7720CLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A4B775C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_service(a2, (const char *)a2, a3, a4);
  uint64_t v8 = objc_msgSend_supportsCapability_(v5, v6, *(void *)(a1 + 32), v7);

  return v8;
}

uint64_t sub_1A4B776B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend_accountActive_(*(void **)(a1 + 32), v4, (uint64_t)v3, v5))
  {
    uint64_t v9 = objc_msgSend_service(v3, v6, v7, v8);
    uint64_t v12 = objc_msgSend_supportsCapability_(v9, v10, *(void *)(a1 + 40), v11);
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

uint64_t sub_1A4B7777C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_isConnected(a2, (const char *)a2, a3, a4);
}

void sub_1A4B778F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A4B77A90(_Unwind_Exception *exception_object)
{
}

void sub_1A4B7818C(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, int a10, __int16 a11, __int16 a12, uint64_t a13, long long a14)
{
  if (a2 == 1)
  {
    id v14 = objc_begin_catch(exc_buf);
    if (IMOSLoggingEnabled())
    {
      long long v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v14, v16, v17, v18);
        id v19 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v14, v20, v21, v22);
        id v23 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v27 = objc_msgSend_userInfo(v14, v24, v25, v26);
        LODWORD(a9) = 138413314;
        *(void *)((char *)&a9 + 4) = v14;
        WORD6(a9) = 2112;
        *(void *)((char *)&a9 + 14) = v19;
        a12 = 2112;
        a13 = (uint64_t)v23;
        LOWORD(a14) = 2112;
        *(void *)((char *)&a14 + 2) = v27;
        WORD5(a14) = 2080;
        *(void *)((char *)&a14 + 12) = "-[IMAccountController deleteAccount:locally:]";
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&a9, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4B77FB4);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A4B782A4(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, uint64_t a10, __int16 a11, uint64_t a12, __int16 a13, uint64_t a14, __int16 a15, uint64_t a16, __int16 a17, uint64_t a18)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4B78288);
  }
  objc_end_catch();
  _Unwind_Resume(exc_buf);
}

void sub_1A4B78420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A4B79E54(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B79D58);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1A4B7AEC0(id a1, uint64_t a2, void *a3)
{
  uint64_t v87 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  if (a1 == v6 || (objc_msgSend_isEqualToArray_(a1, v4, (uint64_t)v6, v5) & 1) != 0)
  {
    BOOL v10 = 1;
  }
  else
  {
    uint64_t v12 = objc_msgSend_count(a1, v7, v8, v9);
    if (v12 == objc_msgSend_count(v6, v13, v14, v15))
    {
      id v16 = objc_alloc(MEMORY[0x1E4F1CA80]);
      id v19 = objc_msgSend_initWithArray_(v16, v17, (uint64_t)a1, v18);
      id v20 = objc_alloc(MEMORY[0x1E4F1CA80]);
      id v23 = objc_msgSend_initWithArray_(v20, v21, (uint64_t)v6, v22);
      uint64_t v27 = objc_msgSend_count(v19, v24, v25, v26);
      if (v27 == objc_msgSend_count(v23, v28, v29, v30))
      {
        long long v78 = 0u;
        long long v79 = 0u;
        long long v76 = 0u;
        long long v77 = 0u;
        id v31 = a1;
        uint64_t v35 = objc_msgSend_countByEnumeratingWithState_objects_count_(v31, v32, (uint64_t)&v76, (uint64_t)v82, 16);
        if (v35)
        {
          uint64_t v36 = *(void *)v77;
          do
          {
            for (uint64_t i = 0; i != v35; ++i)
            {
              if (*(void *)v77 != v36) {
                objc_enumerationMutation(v31);
              }
              uint64_t v38 = *(void *)(*((void *)&v76 + 1) + 8 * i);
              if (objc_msgSend_containsObject_(v23, v33, v38, v34))
              {
                objc_msgSend_removeObject_(v23, v33, v38, v34);
                objc_msgSend_removeObject_(v19, v39, v38, v40);
              }
            }
            uint64_t v35 = objc_msgSend_countByEnumeratingWithState_objects_count_(v31, v33, (uint64_t)&v76, (uint64_t)v82, 16);
          }
          while (v35);
        }

        if (objc_msgSend_count(v19, v41, v42, v43))
        {
          long long v74 = 0u;
          long long v75 = 0u;
          long long v72 = 0u;
          long long v73 = 0u;
          objc_msgSend_allObjects(v19, v44, v45, v46);
          id obj = (id)objc_claimAutoreleasedReturnValue();
          uint64_t v67 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v47, (uint64_t)&v72, (uint64_t)v81, 16);
          if (v67)
          {
            uint64_t v66 = *(void *)v73;
            while (2)
            {
              for (uint64_t j = 0; j != v67; ++j)
              {
                if (*(void *)v73 != v66) {
                  objc_enumerationMutation(obj);
                }
                uint64_t v49 = *(void *)(*((void *)&v72 + 1) + 8 * j);
                long long v68 = 0u;
                long long v69 = 0u;
                long long v70 = 0u;
                long long v71 = 0u;
                id v50 = v23;
                uint64_t v54 = objc_msgSend_countByEnumeratingWithState_objects_count_(v50, v51, (uint64_t)&v68, (uint64_t)v80, 16);
                if (!v54)
                {
LABEL_41:

LABEL_42:
                  goto LABEL_43;
                }
                uint64_t v55 = *(void *)v69;
LABEL_24:
                uint64_t v56 = 0;
                while (1)
                {
                  if (*(void *)v69 != v55) {
                    objc_enumerationMutation(v50);
                  }
                  id v57 = *(void **)(*((void *)&v68 + 1) + 8 * v56);
                  if (objc_msgSend__isChatSiblingOf_(v57, v52, v49, v53)) {
                    break;
                  }
                  if (v54 == ++v56)
                  {
                    uint64_t v54 = objc_msgSend_countByEnumeratingWithState_objects_count_(v50, v52, (uint64_t)&v68, (uint64_t)v80, 16);
                    if (v54) {
                      goto LABEL_24;
                    }
                    goto LABEL_41;
                  }
                }
                id v58 = v57;

                if (!v58) {
                  goto LABEL_42;
                }
                objc_msgSend_removeObject_(v50, v59, (uint64_t)v58, v60);
                objc_msgSend_removeObject_(v19, v61, v49, v62);
              }
              uint64_t v67 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v63, (uint64_t)&v72, (uint64_t)v81, 16);
              if (v67) {
                continue;
              }
              break;
            }
          }
        }
        BOOL v10 = objc_msgSend_count(v19, v44, v45, v46) == 0;
      }
      else
      {
        if (IMOSLoggingEnabled())
        {
          uint64_t v64 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412546;
            id v84 = a1;
            __int16 v85 = 2112;
            id v86 = v6;
            _os_log_impl(&dword_1A4AF7000, v64, OS_LOG_TYPE_INFO, "IMHandle+Utilities: equivalentToRecipients - self or recipient array has duplicate values! self: %@; recipients: %@",
              buf,
              0x16u);
          }
        }
LABEL_43:
        BOOL v10 = 0;
      }
    }
    else
    {
      BOOL v10 = 0;
    }
  }

  return v10;
}

uint64_t sub_1A4B7B2FC()
{
  uint64_t v0 = objc_alloc_init(IMNicknameController);
  uint64_t v1 = qword_1EB3F2518;
  qword_1EB3F2518 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4B7D648(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B7D610);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B7D920(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B7D8E8);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B7E038(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4B7E0EC;
  block[3] = &unk_1E5B7BC90;
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v5;
  id v10 = v4;
  id v6 = v3;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t sub_1A4B7E0EC(void *a1)
{
  (*(void (**)(void))(a1[6] + 16))();
  uint64_t v5 = a1[4];
  id v4 = (void *)a1[5];

  return objc_msgSend_updatePersonalNickname_(v4, v2, v5, v3);
}

void sub_1A4B7FF54(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = sub_1A4B7FFF0;
  v5[3] = &unk_1E5B7B130;
  v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v5);
}

uint64_t sub_1A4B7FFF0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_updatePersonalNickname_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

void sub_1A4B7FFFC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = sub_1A4B800E4;
  v14[3] = &unk_1E5B7B1D0;
  id v15 = v7;
  id v16 = v8;
  uint64_t v10 = *(void *)(a1 + 32);
  id v17 = v9;
  uint64_t v18 = v10;
  id v11 = v9;
  id v12 = v8;
  id v13 = v7;
  dispatch_async(MEMORY[0x1E4F14428], v14);
}

void sub_1A4B800E4(void **a1)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      id v3 = a1[4];
      *(_DWORD *)long long buf = 138412290;
      char v52 = v3;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Got back pending nicknames %@", buf, 0xCu);
    }
  }
  id v4 = objc_alloc(MEMORY[0x1E4F1CA60]);
  uint64_t v8 = objc_msgSend_count(a1[4], v5, v6, v7);
  id v11 = objc_msgSend_initWithCapacity_(v4, v9, v8, v10);
  id v12 = a1[4];
  v49[0] = MEMORY[0x1E4F143A8];
  v49[1] = 3221225472;
  v49[2] = sub_1A4B80470;
  os_log_t v49[3] = &unk_1E5B7B920;
  id v13 = v11;
  id v50 = v13;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v12, v14, (uint64_t)v49, v15);
  if (IMOSLoggingEnabled())
  {
    id v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      id v17 = a1[5];
      *(_DWORD *)long long buf = 138412290;
      char v52 = v17;
      _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "Got back handled nicknames %@", buf, 0xCu);
    }
  }
  id v18 = objc_alloc(MEMORY[0x1E4F1CA60]);
  uint64_t v22 = objc_msgSend_count(a1[5], v19, v20, v21);
  uint64_t v25 = objc_msgSend_initWithCapacity_(v18, v23, v22, v24);
  uint64_t v26 = a1[5];
  v47[0] = MEMORY[0x1E4F143A8];
  v47[1] = 3221225472;
  v47[2] = sub_1A4B804FC;
  v47[3] = &unk_1E5B7B920;
  id v27 = v25;
  id v48 = v27;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v26, v28, (uint64_t)v47, v29);
  if (IMOSLoggingEnabled())
  {
    uint64_t v30 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      id v31 = a1[6];
      *(_DWORD *)long long buf = 138412290;
      char v52 = v31;
      _os_log_impl(&dword_1A4AF7000, v30, OS_LOG_TYPE_INFO, "Got back archived nicknames %@", buf, 0xCu);
    }
  }
  id v32 = objc_alloc(MEMORY[0x1E4F1CA60]);
  uint64_t v36 = objc_msgSend_count(a1[6], v33, v34, v35);
  uint64_t v39 = objc_msgSend_initWithCapacity_(v32, v37, v36, v38);
  uint64_t v40 = a1[6];
  v45[0] = MEMORY[0x1E4F143A8];
  v45[1] = 3221225472;
  v45[2] = sub_1A4B80588;
  v45[3] = &unk_1E5B7B920;
  id v46 = v39;
  id v41 = v39;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v40, v42, (uint64_t)v45, v43);
  objc_msgSend_updatePendingNicknames_handledNicknames_archivedNicknames_(a1[7], v44, (uint64_t)v13, (uint64_t)v27, v41);
}

void sub_1A4B80470(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (objc_class *)MEMORY[0x1E4F6E8B8];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  id v12 = (id)objc_msgSend_initWithDictionaryRepresentation_(v8, v9, (uint64_t)v6, v10);

  objc_msgSend_setObject_forKey_(*(void **)(a1 + 32), v11, (uint64_t)v12, (uint64_t)v7);
}

void sub_1A4B804FC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (objc_class *)MEMORY[0x1E4F6E8B8];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  id v12 = (id)objc_msgSend_initWithDictionaryRepresentation_(v8, v9, (uint64_t)v6, v10);

  objc_msgSend_setObject_forKey_(*(void **)(a1 + 32), v11, (uint64_t)v12, (uint64_t)v7);
}

void sub_1A4B80588(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (objc_class *)MEMORY[0x1E4F6E8B8];
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 alloc];
  id v12 = (id)objc_msgSend_initWithDictionaryRepresentation_(v8, v9, (uint64_t)v6, v10);

  objc_msgSend_setObject_forKey_(*(void **)(a1 + 32), v11, (uint64_t)v12, (uint64_t)v7);
}

void sub_1A4B80614(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4B806DC;
  block[3] = &unk_1E5B7BE70;
  void block[4] = *(void *)(a1 + 32);
  id v10 = v5;
  id v11 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t sub_1A4B806DC(uint64_t a1, const char *a2)
{
  return objc_msgSend_updateSharingAllowList_denyList_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), *(void *)(a1 + 48));
}

void sub_1A4B806EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = sub_1A4B80788;
  v5[3] = &unk_1E5B7B130;
  v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v5);
}

uint64_t sub_1A4B80788(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_updateTransitionedNicknameHandles_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

void sub_1A4B80794(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = sub_1A4B80830;
  v5[3] = &unk_1E5B7B130;
  v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v5);
}

uint64_t sub_1A4B80830(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_updateIsActiveList_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

void sub_1A4B8083C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = sub_1A4B808D8;
  v5[3] = &unk_1E5B7B130;
  v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v5);
}

uint64_t sub_1A4B808D8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_updateIsIgnoredList_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

void sub_1A4B808E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = sub_1A4B80980;
  v5[3] = &unk_1E5B7B130;
  v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v5);
}

uint64_t sub_1A4B80980(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_updateUnknownSenderRecords_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

void sub_1A4B82F64(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B82E24);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B830C4(uint64_t result, const char *a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(result + 32) == a3) {
    return objc_msgSend_addObject_(*(void **)(result + 40), a2, (uint64_t)a2, a4);
  }
  return result;
}

void sub_1A4B830E0(uint64_t a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (objc_msgSend_im_isWellFormedChatGUID(*(void **)(a1 + 32), v4, v5, v6))
  {
    id v10 = (void *)(a1 + 40);
    id v11 = objc_msgSend_daemonController(*(void **)(a1 + 40), v7, v8, v9);
    uint64_t v15 = objc_msgSend_synchronousRemoteDaemon(v11, v12, v13, v14);
    uint64_t v16 = *(void *)(a1 + 32);
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = sub_1A4B8328C;
    v21[3] = &unk_1E5B7C0D8;
    void v21[4] = *v10;
    id v22 = v3;
    objc_msgSend_loadChatWithGUID_reply_(v15, v17, v16, (uint64_t)v21);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        uint64_t v20 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138412290;
        uint64_t v24 = v20;
        _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "Not looking up existing chat due to malformed guid: %@", buf, 0xCu);
      }
    }
    objc_msgSend_loadedChats_queryID_(*(void **)(a1 + 40), v18, MEMORY[0x1E4F1CBF0], (uint64_t)v3);
  }
}

uint64_t sub_1A4B8328C(uint64_t a1, const char *a2)
{
  return objc_msgSend_loadedChats_queryID_(*(void **)(a1 + 32), a2, (uint64_t)a2, *(void *)(a1 + 40));
}

id sub_1A4B834A4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_array(MEMORY[0x1E4F1CA48], a2, a3, a4);
  uint64_t v9 = objc_msgSend_set(MEMORY[0x1E4F1CA80], v6, v7, v8);
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  id v10 = *(id *)(a1 + 32);
  uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v40, (uint64_t)v44, 16);
  if (v12)
  {
    uint64_t v15 = v12;
    uint64_t v16 = *(void *)v41;
    do
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v41 != v16) {
          objc_enumerationMutation(v10);
        }
        id v18 = objc_msgSend__cachedChatWithGUID_(*(void **)(a1 + 40), v13, *(void *)(*((void *)&v40 + 1) + 8 * i), v14);
        id v22 = objc_msgSend_guid(v18, v19, v20, v21);
        char v25 = objc_msgSend_containsObject_(v9, v23, (uint64_t)v22, v24);

        if ((v25 & 1) == 0)
        {
          if (v18)
          {
            uint64_t v29 = objc_msgSend_guid(v18, v26, v27, v28);
            objc_msgSend_addObject_(v9, v30, (uint64_t)v29, v31);

            objc_msgSend_addObject_(v5, v32, (uint64_t)v18, v33);
          }
          else if (a2)
          {
            *a2 = 1;
          }
        }
      }
      uint64_t v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v13, (uint64_t)&v40, (uint64_t)v44, 16);
    }
    while (v15);
  }

  uint64_t v37 = objc_msgSend_copy(v5, v34, v35, v36);

  return v37;
}

void sub_1A4B83674(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void **)(a1 + 32);
  v27[0] = MEMORY[0x1E4F143A8];
  v27[1] = 3221225472;
  v27[2] = sub_1A4B837E8;
  v27[3] = &unk_1E5B7C150;
  id v28 = v6;
  id v8 = v6;
  id v11 = objc_msgSend___imArrayByFilteringWithBlock_(v7, v9, (uint64_t)v27, v10);
  uint64_t v14 = objc_msgSend__chatPredicateForGUIDs_(*(void **)(a1 + 40), v12, (uint64_t)v11, v13);
  id v18 = objc_msgSend_daemonController(*(void **)(a1 + 40), v15, v16, v17);
  id v22 = objc_msgSend_synchronousRemoteDaemon(v18, v19, v20, v21);
  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = sub_1A4B8380C;
  void v25[3] = &unk_1E5B7C0D8;
  v25[4] = *(void *)(a1 + 40);
  id v26 = v5;
  id v23 = v5;
  objc_msgSend_loadChatsFilteredUsingPredicate_reply_(v22, v24, (uint64_t)v14, (uint64_t)v25);
}

uint64_t sub_1A4B837E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_containsObject_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4) ^ 1;
}

uint64_t sub_1A4B8380C(uint64_t a1, const char *a2)
{
  return objc_msgSend_loadedChats_queryID_(*(void **)(a1 + 32), a2, (uint64_t)a2, *(void *)(a1 + 40));
}

uint64_t sub_1A4B83880(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_predicateWithFormat_(MEMORY[0x1E4F28F60], a2, @"%K = %@", a4, *MEMORY[0x1E4F6CD38], a2);
}

uint64_t sub_1A4B83CC0(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__cachedChatWithHandles_allowAlternativeService_groupID_displayName_joinedChatsOnly_findMatchingNamedGroups_, *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 64));
}

void sub_1A4B83CDC(uint64_t a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    id v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = @"YES";
      if (*(unsigned char *)(a1 + 64)) {
        uint64_t v10 = @"YES";
      }
      else {
        uint64_t v10 = @"NO";
      }
      if (!*(unsigned char *)(a1 + 65)) {
        uint64_t v9 = @"NO";
      }
      uint64_t v11 = *(void *)(a1 + 48);
      *(_DWORD *)long long buf = 138413314;
      uint64_t v29 = v7;
      __int16 v30 = 2112;
      uint64_t v31 = v8;
      __int16 v32 = 2112;
      uint64_t v33 = v10;
      __int16 v34 = 2112;
      uint64_t v35 = v9;
      __int16 v36 = 2112;
      uint64_t v37 = v11;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Cache miss looking up chat with groupID: %@ displayName: %@ joinedChatsOnly: %@ allowAlternativeService: %@ handles: %@", buf, 0x34u);
    }
  }
  uint64_t v12 = objc_msgSend___imArrayByApplyingBlock_(*(void **)(a1 + 48), v4, (uint64_t)&unk_1EF8E6038, v5);
  uint64_t v13 = (void *)(a1 + 56);
  uint64_t v17 = objc_msgSend_daemonController(*(void **)(a1 + 56), v14, v15, v16);
  uint64_t v21 = objc_msgSend_synchronousRemoteDaemon(v17, v18, v19, v20);
  uint64_t v23 = *(void *)(a1 + 32);
  uint64_t v22 = *(void *)(a1 + 40);
  v26[0] = MEMORY[0x1E4F143A8];
  v26[1] = 3221225472;
  v26[2] = sub_1A4B83EEC;
  v26[3] = &unk_1E5B7C0D8;
  v26[4] = *v13;
  id v27 = v3;
  id v24 = v3;
  objc_msgSend_loadChatsWithHandleIDs_groupID_displayName_style_reply_(v21, v25, (uint64_t)v12, v23, v22, 43, v26);
}

uint64_t sub_1A4B83EE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_ID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_1A4B83EEC(uint64_t a1, const char *a2)
{
  return objc_msgSend_loadedChats_queryID_(*(void **)(a1 + 32), a2, (uint64_t)a2, *(void *)(a1 + 40));
}

void sub_1A4B83EFC(uint64_t a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v21 = v8;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Cache miss looking up chat with identifier: %@ ", buf, 0xCu);
    }
  }
  uint64_t v9 = (void *)(a1 + 40);
  uint64_t v10 = objc_msgSend_daemonController(*(void **)(a1 + 40), v4, v5, v6);
  uint64_t v14 = objc_msgSend_synchronousRemoteDaemon(v10, v11, v12, v13);
  uint64_t v15 = *(void *)(a1 + 32);
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = sub_1A4B84084;
  v18[3] = &unk_1E5B7C0D8;
  void v18[4] = *v9;
  id v19 = v3;
  id v16 = v3;
  objc_msgSend_loadChatsWithIdentifier_reply_(v14, v17, v15, (uint64_t)v18);
}

uint64_t sub_1A4B84084(uint64_t a1, const char *a2)
{
  return objc_msgSend_loadedChats_queryID_(*(void **)(a1 + 32), a2, (uint64_t)a2, *(void *)(a1 + 40));
}

uint64_t sub_1A4B841BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__cachedChatWithGroupID_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

void sub_1A4B841C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v7 = objc_msgSend_daemonController(*(void **)(a1 + 32), v4, v5, v6);
  uint64_t v11 = objc_msgSend_synchronousRemoteDaemon(v7, v8, v9, v10);
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = sub_1A4B8429C;
  v15[3] = &unk_1E5B7C0D8;
  uint64_t v12 = *(void *)(a1 + 40);
  void v15[4] = *(void *)(a1 + 32);
  id v16 = v3;
  id v13 = v3;
  objc_msgSend_loadChatsWithGroupID_reply_(v11, v14, v12, (uint64_t)v15);
}

uint64_t sub_1A4B8429C(uint64_t a1, const char *a2)
{
  return objc_msgSend_loadedChats_queryID_(*(void **)(a1 + 32), a2, (uint64_t)a2, *(void *)(a1 + 40));
}

uint64_t sub_1A4B84434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__cachedChatWithDisplayName_, *(void *)(a1 + 40), a4);
}

void sub_1A4B84440(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v6 = objc_msgSend_predicateWithFormat_(MEMORY[0x1E4F28F60], v4, @"%K = %@", v5, *MEMORY[0x1E4F6CD20], *(void *)(a1 + 32));
  uint64_t v10 = objc_msgSend_daemonController(*(void **)(a1 + 40), v7, v8, v9);
  uint64_t v14 = objc_msgSend_synchronousRemoteDaemon(v10, v11, v12, v13);
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  void v17[2] = sub_1A4B84548;
  v17[3] = &unk_1E5B7C0D8;
  void v17[4] = *(void *)(a1 + 40);
  id v18 = v3;
  id v15 = v3;
  objc_msgSend_loadChatsFilteredUsingPredicate_reply_(v14, v16, (uint64_t)v6, (uint64_t)v17);
}

uint64_t sub_1A4B84548(uint64_t a1, const char *a2)
{
  return objc_msgSend_loadedChats_queryID_(*(void **)(a1 + 32), a2, (uint64_t)a2, *(void *)(a1 + 40));
}

void sub_1A4B848F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend__processLoadedChatDictionaries_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = objc_msgSend_firstObject(v11, v5, v6, v7);
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
}

uint64_t sub_1A4B84A90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__cachedChatWithPersonID_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

void sub_1A4B84A9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v6 = objc_msgSend_predicateWithFormat_(MEMORY[0x1E4F28F60], v4, @"%K = %@ OR %K = %@", v5, *MEMORY[0x1E4F6CCF0], *(void *)(a1 + 32), *MEMORY[0x1E4F6CD40], *(void *)(a1 + 32));
  uint64_t v10 = objc_msgSend_daemonController(*(void **)(a1 + 40), v7, v8, v9);
  uint64_t v14 = objc_msgSend_synchronousRemoteDaemon(v10, v11, v12, v13);
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  void v17[2] = sub_1A4B84BB4;
  v17[3] = &unk_1E5B7C0D8;
  void v17[4] = *(void *)(a1 + 40);
  id v18 = v3;
  id v15 = v3;
  objc_msgSend_loadChatsFilteredUsingPredicate_reply_(v14, v16, (uint64_t)v6, (uint64_t)v17);
}

uint64_t sub_1A4B84BB4(uint64_t a1, const char *a2)
{
  return objc_msgSend_loadedChats_queryID_(*(void **)(a1 + 32), a2, (uint64_t)a2, *(void *)(a1 + 40));
}

void sub_1A4B850BC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v202 = *MEMORY[0x1E4F143B8];
  id v7 = a2;
  id v171 = a3;
  id v172 = a4;
  uint64_t v173 = a1;
  uint64_t v179 = v7;
  if (objc_msgSend_count(v7, v8, v9, v10))
  {
    uint64_t v14 = objc_msgSend_count(v7, v11, v12, v13);
    if (v14 == objc_msgSend_count(*(void **)(a1 + 32), v15, v16, v17))
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a4);
      if (*(void *)(a1 + 48))
      {
        objc_msgSend_allValues(v7, v18, v19, v20);
        **(void **)(a1 + 48) = (id)objc_claimAutoreleasedReturnValue();
      }
    }
    else
    {
      id v71 = objc_alloc(MEMORY[0x1E4F1CA48]);
      uint64_t v75 = objc_msgSend_count(*(void **)(a1 + 32), v72, v73, v74);
      uint64_t v178 = objc_msgSend_initWithCapacity_(v71, v76, v75, v77);
      id v78 = objc_alloc(MEMORY[0x1E4F1CA48]);
      uint64_t v82 = objc_msgSend_count(*(void **)(a1 + 32), v79, v80, v81);
      id obja = (id)objc_msgSend_initWithCapacity_(v78, v83, v82, v84);
      id v85 = objc_alloc(MEMORY[0x1E4F1CA48]);
      uint64_t v89 = objc_msgSend_count(*(void **)(a1 + 32), v86, v87, v88);
      unint64_t v92 = objc_msgSend_initWithCapacity_(v85, v90, v89, v91);
      long long v184 = 0u;
      long long v185 = 0u;
      long long v186 = 0u;
      long long v187 = 0u;
      id v93 = *(id *)(a1 + 32);
      uint64_t v98 = objc_msgSend_countByEnumeratingWithState_objects_count_(v93, v94, (uint64_t)&v184, (uint64_t)v197, 16);
      if (v98)
      {
        uint64_t v99 = *(void *)v185;
        do
        {
          for (uint64_t i = 0; i != v98; ++i)
          {
            if (*(void *)v185 != v99) {
              objc_enumerationMutation(v93);
            }
            uint64_t v101 = *(void **)(*((void *)&v184 + 1) + 8 * i);
            uint64_t v102 = objc_msgSend_identifier(v101, v95, v96, v97);
            uint64_t v105 = objc_msgSend_objectForKey_(v179, v103, (uint64_t)v102, v104);

            if (v105)
            {
              objc_msgSend_addObject_(v92, v106, (uint64_t)v105, v107);
              uint64_t v111 = objc_msgSend_ID(v105, v108, v109, v110);
              objc_msgSend_addObject_(v178, v112, (uint64_t)v111, v113);
            }
            else
            {
              uint64_t v111 = objc_msgSend_IDsFromCNContact_(MEMORY[0x1E4F6E6D8], v106, (uint64_t)v101, v107);
              uint64_t v114 = (void *)_IDSCopyOrderedAliasStrings();
              uint64_t v118 = objc_msgSend_firstObject(v114, v115, v116, v117);

              if (v118)
              {
                objc_msgSend_addObject_(v178, v119, (uint64_t)v118, v120);
                objc_msgSend_addObject_(obja, v121, (uint64_t)v118, v122);
              }
              else if (IMOSLoggingEnabled())
              {
                uint64_t v123 = OSLogHandleForIMFoundationCategory();
                if (os_log_type_enabled(v123, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)long long buf = 138412290;
                  id v200 = v101;
                  _os_log_impl(&dword_1A4AF7000, v123, OS_LOG_TYPE_INFO, "Failed to find best address for contact %@", buf, 0xCu);
                }
              }
            }
          }
          uint64_t v98 = objc_msgSend_countByEnumeratingWithState_objects_count_(v93, v95, (uint64_t)&v184, (uint64_t)v197, 16);
        }
        while (v98);
      }

      BOOL v127 = objc_msgSend_count(v178, v124, v125, v126) != 0;
      uint64_t v128 = IMFindExistingChatForAddresses(v178, 0, v127, 1);
      uint64_t v129 = *(void *)(*(void *)(v173 + 40) + 8);
      uint64_t v130 = *(void **)(v129 + 40);
      *(void *)(v129 + 40) = v128;

      if (*(void *)(v173 + 48))
      {
        if (objc_msgSend_count(obja, v131, v132, v133))
        {
          id v137 = objc_msgSend_iMessageService(IMServiceImpl, v134, v135, v136);
          id v138 = IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(v178, 1, v137);

          if ((objc_msgSend__isUsableForSending(v138, v139, v140, v141) & 1) == 0)
          {
            long long v148 = objc_msgSend_smsService(IMServiceImpl, v142, v143, v144);
            if (v148)
            {
              long long v149 = objc_msgSend_sharedInstance(IMAccountController, v145, v146, v147);
              uint64_t v152 = objc_msgSend_accountsForService_(v149, v150, (uint64_t)v148, v151);
              uint64_t v156 = objc_msgSend___imFirstObject(v152, v153, v154, v155);

              id v138 = (void *)v156;
            }
          }
          long long v182 = 0u;
          long long v183 = 0u;
          long long v180 = 0u;
          long long v181 = 0u;
          id v157 = obja;
          uint64_t v159 = objc_msgSend_countByEnumeratingWithState_objects_count_(v157, v158, (uint64_t)&v180, (uint64_t)v196, 16);
          if (v159)
          {
            uint64_t v160 = *(void *)v181;
            do
            {
              for (uint64_t j = 0; j != v159; ++j)
              {
                if (*(void *)v181 != v160) {
                  objc_enumerationMutation(v157);
                }
                id v162 = IMStripFormattingFromAddress();
                uint64_t v165 = objc_msgSend_imHandleWithID_(v138, v163, (uint64_t)v162, v164);

                if (v165) {
                  objc_msgSend_addObject_(v92, v166, (uint64_t)v165, v167);
                }
              }
              uint64_t v159 = objc_msgSend_countByEnumeratingWithState_objects_count_(v157, v168, (uint64_t)&v180, (uint64_t)v196, 16);
            }
            while (v159);
          }
        }
        id v169 = v92;
        **(void **)(v173 + 48) = v169;
        if (IMOSLoggingEnabled())
        {
          __int16 v170 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v170, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            id v200 = v169;
            _os_log_impl(&dword_1A4AF7000, v170, OS_LOG_TYPE_INFO, "best handles: %@", buf, 0xCu);
          }
        }
      }
    }
    goto LABEL_81;
  }
  if (IMOSLoggingEnabled())
  {
    id v24 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v24, OS_LOG_TYPE_INFO, "IMHandle bestHandlesForContacts returned nil", buf, 2u);
    }
  }
  uint64_t v174 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v21, v22, v23);
  long long v194 = 0u;
  long long v195 = 0u;
  long long v192 = 0u;
  long long v193 = 0u;
  id obj = *(id *)(a1 + 32);
  uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v25, (uint64_t)&v192, (uint64_t)v201, 16);
  if (v28)
  {
    uint64_t v177 = *(void *)v193;
    do
    {
      for (uint64_t k = 0; k != v28; ++k)
      {
        if (*(void *)v193 != v177) {
          objc_enumerationMutation(obj);
        }
        __int16 v30 = objc_msgSend_IDsFromCNContact_(MEMORY[0x1E4F6E6D8], v26, *(void *)(*((void *)&v192 + 1) + 8 * k), v27);
        __int16 v34 = objc_msgSend_iMessageService(IMServiceImpl, v31, v32, v33);
        uint64_t v35 = IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(v30, 0, v34);

        if (objc_msgSend__isUsableForSending(v35, v36, v37, v38))
        {
          long long v42 = v35;
        }
        else
        {
          id v46 = objc_msgSend_smsService(IMServiceImpl, v39, v40, v41);
          if (v46)
          {
            id v47 = objc_msgSend_sharedInstance(IMAccountController, v43, v44, v45);
            id v50 = objc_msgSend_accountsForService_(v47, v48, (uint64_t)v46, v49);
            long long v42 = objc_msgSend___imFirstObject(v50, v51, v52, v53);

            if (IMOSLoggingEnabled())
            {
              uint64_t v54 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                id v200 = v42;
                _os_log_impl(&dword_1A4AF7000, v54, OS_LOG_TYPE_INFO, "preferredAccount isn't usable for sending, falling back to smsAccount: %@", buf, 0xCu);
              }
            }
          }
          else
          {
            long long v42 = v35;
          }
        }
        long long v190 = 0u;
        long long v191 = 0u;
        long long v188 = 0u;
        long long v189 = 0u;
        id v55 = v30;
        uint64_t v57 = objc_msgSend_countByEnumeratingWithState_objects_count_(v55, v56, (uint64_t)&v188, (uint64_t)v198, 16);
        id v58 = v55;
        if (!v57) {
          goto LABEL_34;
        }
        id v58 = 0;
        uint64_t v59 = *(void *)v189;
        do
        {
          for (uint64_t m = 0; m != v57; ++m)
          {
            if (*(void *)v189 != v59) {
              objc_enumerationMutation(v55);
            }
            uint64_t v61 = IMStripFormattingFromAddress();
            uint64_t v64 = objc_msgSend_imHandleWithID_(v42, v62, (uint64_t)v61, v63);

            if (objc_msgSend_isBetterThanIMHandle_nonPhoneNumbersPreferred_(v64, v65, (uint64_t)v58, 0))
            {
              id v66 = v64;

              id v58 = v66;
            }
          }
          uint64_t v57 = objc_msgSend_countByEnumeratingWithState_objects_count_(v55, v67, (uint64_t)&v188, (uint64_t)v198, 16);
        }
        while (v57);

        if (v58)
        {
          objc_msgSend_addObject_(v174, v68, (uint64_t)v58, v69);
LABEL_34:
        }
      }
      uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v26, (uint64_t)&v192, (uint64_t)v201, 16);
    }
    while (v28);
  }

  if (IMOSLoggingEnabled())
  {
    long long v70 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v200 = v174;
      _os_log_impl(&dword_1A4AF7000, v70, OS_LOG_TYPE_INFO, "Best handles: %@", buf, 0xCu);
    }
  }
  if (*(void *)(v173 + 48)) {
    **(void **)(v173 + 48) = v174;
  }

LABEL_81:
}

void sub_1A4B85B6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A4B85CA8;
  aBlock[3] = &unk_1E5B7B180;
  void aBlock[4] = *(void *)(a1 + 32);
  id v4 = v3;
  id v10 = v4;
  id v11 = *(id *)(a1 + 40);
  uint64_t v5 = (void (**)(void))_Block_copy(aBlock);
  uint64_t v6 = v5;
  if (*(unsigned char *)(a1 + 48))
  {
    v5[2](v5);
  }
  else
  {
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = sub_1A4B85D28;
    v7[3] = &unk_1E5B7AE90;
    uint64_t v8 = v5;
    dispatch_async(MEMORY[0x1E4F14428], v7);
  }
}

void sub_1A4B85CA8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend__earliestLastMessageDateFromChatDictionaries_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  id v7 = objc_msgSend__processLoadedChatDictionaries_(*(void **)(a1 + 32), v5, *(void *)(a1 + 40), v6);
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_1A4B85D28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4B85F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

uint64_t sub_1A4B85F34(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend__lastMessageDateForQueryFromChatDictionary_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
  id v7 = (char *)v5;
  if (v5)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v9 = *(void **)(v8 + 40);
    id v15 = v7;
    if (v9)
    {
      uint64_t v10 = objc_msgSend_earlierDate_(v9, v7, (uint64_t)v7, v6);
      uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
      uint64_t v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;
    }
    else
    {
      uint64_t v13 = v7;
      uint64_t v12 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v13;
    }

    id v7 = v15;
  }

  return MEMORY[0x1F41817F8](v5, v7);
}

void sub_1A4B86664(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v6 = v3;
  if (*(unsigned char *)(a1 + 48))
  {
    id v7 = objc_msgSend__processLoadedChatDictionaries_(*(void **)(a1 + 32), v4, (uint64_t)v3, v5);
    uint64_t v8 = *(void *)(a1 + 40);
    if (v8) {
      (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v7);
    }
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4B8675C;
    block[3] = &unk_1E5B7B180;
    void block[4] = *(void *)(a1 + 32);
    id v10 = v3;
    id v11 = *(id *)(a1 + 40);
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

uint64_t sub_1A4B8675C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend__processLoadedChatDictionaries_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
  uint64_t v6 = *(void *)(a1 + 48);
  if (v6)
  {
    uint64_t v8 = v5;
    uint64_t v6 = (*(uint64_t (**)(void))(v6 + 16))();
    uint64_t v5 = v8;
  }

  return MEMORY[0x1F41817F8](v6, v5);
}

void sub_1A4B86940(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(void **)(a1 + 32);
  objc_msgSend_guid(a2, (const char *)a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v4, v5, (uint64_t)v7, v6);
}

void sub_1A4B86998(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = sub_1A4B86A30;
  v8[3] = &unk_1E5B7C2B0;
  id v9 = v3;
  id v5 = v3;
  objc_msgSend_enumerateObjectsUsingBlock_(v4, v6, (uint64_t)v8, v7);
}

void sub_1A4B86A30(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  objc_msgSend_guid(v3, v4, v5, v6);
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  id v9 = objc_msgSend_objectForKeyedSubscript_(v2, v7, (uint64_t)v12, v8);
  objc_msgSend_setEarliestCachedMessageDate_(v3, v10, (uint64_t)v9, v11);
}

uint64_t sub_1A4B86D00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A4B86D10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_guid(a2, (const char *)a2, a3, a4);
}

void sub_1A4B86D18(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Processing chat cache miss.", v7, 2u);
    }
  }
  objc_msgSend_setProcessingChatCacheMiss_(*(void **)(a1 + 32), v4, 1, v5);
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1A4B86DE0(uint64_t a1, int a2, void *a3, void *a4)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  if (a2)
  {
    uint64_t v9 = (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    if (IMOSLoggingEnabled())
    {
      uint64_t v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        uint64_t v15 = *(void *)(a1 + 32);
        uint64_t v16 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        int v23 = 138412546;
        uint64_t v24 = v15;
        __int16 v25 = 2112;
        uint64_t v26 = v16;
        _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "Chat cache miss complete with key: %@ results %@", (uint8_t *)&v23, 0x16u);
      }
    }
    uint64_t v17 = *(void **)(a1 + 40);
    id v18 = objc_msgSend_objectForKeyedSubscript_(v8, v12, @"chats", v13);
    objc_msgSend__validateChatQueryResults_matchCurrentCacheResults_(v17, v19, (uint64_t)v18, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
  }
  else
  {
    id v18 = IMLogHandleForCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB784C((uint64_t)v7, v18);
    }
  }

  if (IMOSLoggingEnabled())
  {
    uint64_t v22 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      LOWORD(v23) = 0;
      _os_log_impl(&dword_1A4AF7000, v22, OS_LOG_TYPE_INFO, "Ended processing chat cache miss.", (uint8_t *)&v23, 2u);
    }
  }
  objc_msgSend_setProcessingChatCacheMiss_(*(void **)(a1 + 40), v20, 0, v21);
}

void sub_1A4B877C0()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v1 = (void *)qword_1E965E868;
  qword_1E965E868 = (uint64_t)v0;

  uint64_t v5 = objc_msgSend_iMessageService(IMServiceImpl, v2, v3, v4);

  if (v5)
  {
    uint64_t v9 = (void *)qword_1E965E868;
    uint64_t v10 = objc_msgSend_iMessageService(IMServiceImpl, v6, v7, v8);
    objc_msgSend_addObject_(v9, v11, (uint64_t)v10, v12);
  }
  uint64_t v13 = objc_msgSend_smsService(IMServiceImpl, v6, v7, v8);

  if (v13)
  {
    uint64_t v17 = (void *)qword_1E965E868;
    objc_msgSend_smsService(IMServiceImpl, v14, v15, v16);
    id v20 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v17, v18, (uint64_t)v20, v19);
  }
}

void sub_1A4B87A30(uint64_t a1, void *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  uint64_t v9 = objc_msgSend_daemonController(v4, v6, v7, v8);
  uint64_t v13 = v9;
  if (v3) {
    objc_msgSend_synchronousReplyingRemoteDaemon(v9, v10, v11, v12);
  }
  else {
    objc_msgSend_replyingRemoteDaemon(v9, v10, v11, v12);
  }
  id v15 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_moveMessagesWithGUIDsToRecentlyDeleted_deleteDate_queryID_(v15, v14, *(void *)(a1 + 40), *(void *)(a1 + 48), v5);
}

void sub_1A4B87AC8(uint64_t a1, char a2, void *a3, void *a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  if ((a2 & 1) == 0 && IMOSLoggingEnabled())
  {
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = objc_msgSend_count(*(void **)(a1 + 32), v10, v11, v12);
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v15 = *(void *)(a1 + 40);
      int v17 = 134218754;
      uint64_t v18 = v13;
      __int16 v19 = 2112;
      uint64_t v20 = v14;
      __int16 v21 = 2112;
      uint64_t v22 = v15;
      __int16 v23 = 2112;
      id v24 = v7;
      _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to move %lu message GUIDs [%@] to recently deleted at time:%@ gave error: %@", (uint8_t *)&v17, 0x2Au);
    }
  }
  uint64_t v16 = *(void *)(a1 + 48);
  if (v16) {
    (*(void (**)(void))(v16 + 16))();
  }
}

void sub_1A4B87E14(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  int v3 = *(void **)(a1 + 40);
  id v12 = a2;
  uint64_t v6 = objc_msgSend_allGUIDsForChat_(v3, v4, (uint64_t)v12, v5);
  objc_msgSend_addObjectsFromArray_(v2, v7, (uint64_t)v6, v8);

  objc_msgSend_clear(v12, v9, v10, v11);
}

void sub_1A4B87E84(uint64_t a1, void *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  uint64_t v9 = objc_msgSend_daemonController(v4, v6, v7, v8);
  uint64_t v13 = v9;
  if (v3) {
    objc_msgSend_synchronousReplyingRemoteDaemon(v9, v10, v11, v12);
  }
  else {
    objc_msgSend_replyingRemoteDaemon(v9, v10, v11, v12);
  }
  id v15 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_moveMessagesInChatsWithGUIDsToRecentlyDeleted_deleteDate_queryID_(v15, v14, *(void *)(a1 + 40), *(void *)(a1 + 48), v5);
}

void sub_1A4B87F1C(uint64_t a1, int a2, void *a3, void *a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v9 = a4;
  if (a2)
  {
    objc_msgSend__completedMovingChatsToRecentlyDeleted_deletionDate_(*(void **)(a1 + 32), v8, *(void *)(a1 + 40), *(void *)(a1 + 48));
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v14 = objc_msgSend_count(*(void **)(a1 + 40), v11, v12, v13);
      uint64_t v15 = *(void *)(a1 + 40);
      uint64_t v16 = *(void *)(a1 + 48);
      int v18 = 134218754;
      uint64_t v19 = v14;
      __int16 v20 = 2112;
      uint64_t v21 = v15;
      __int16 v22 = 2112;
      uint64_t v23 = v16;
      __int16 v24 = 2112;
      id v25 = v7;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to move messages from %lu chats GUIDs [%@] to recently deleted at time:%@ gave error: %@", (uint8_t *)&v18, 0x2Au);
    }
  }
  uint64_t v17 = *(void *)(a1 + 56);
  if (v17) {
    (*(void (**)(void))(v17 + 16))();
  }
}

void sub_1A4B88250(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void **)(a1 + 32);
  objc_msgSend_allGUIDsForChat_(*(void **)(a1 + 40), a2, (uint64_t)a2, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v4, v5, (uint64_t)v7, v6);
}

void sub_1A4B882A8(uint64_t a1, void *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  id v9 = objc_msgSend_daemonController(v4, v6, v7, v8);
  uint64_t v13 = v9;
  if (v3) {
    objc_msgSend_synchronousReplyingRemoteDaemon(v9, v10, v11, v12);
  }
  else {
    objc_msgSend_replyingRemoteDaemon(v9, v10, v11, v12);
  }
  id v15 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_recoverMessagesWithChatGUIDs_queryID_(v15, v14, *(void *)(a1 + 40), (uint64_t)v5);
}

void sub_1A4B88340(uint64_t a1, int a2, void *a3, void *a4)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v10 = a4;
  if (a2)
  {
    objc_msgSend__completedRecoveringChatsFromRecentlyDeleted_(*(void **)(a1 + 32), v8, *(void *)(a1 + 40), v9);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = *(void *)(a1 + 48);
      int v14 = 138412546;
      uint64_t v15 = v12;
      __int16 v16 = 2112;
      id v17 = v7;
      _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to recover messages for chatGUIDs: [%@] with error: %@", (uint8_t *)&v14, 0x16u);
    }
  }
  uint64_t v13 = *(void *)(a1 + 56);
  if (v13) {
    (*(void (**)(void))(v13 + 16))();
  }
}

void sub_1A4B88468(uint64_t a1, void *a2, void *a3)
{
  id v55 = a2;
  uint64_t v5 = *MEMORY[0x1E4F6DF50];
  id v6 = a3;
  uint64_t v9 = objc_msgSend_objectForKeyedSubscript_(v6, v7, v5, v8);
  uint64_t v13 = objc_msgSend_unsignedLongValue(v9, v10, v11, v12);
  __int16 v16 = objc_msgSend_objectForKeyedSubscript_(v6, v14, *MEMORY[0x1E4F6DF58], v15);
  uint64_t v20 = objc_msgSend_unsignedLongValue(v16, v17, v18, v19);

  uint64_t v23 = objc_msgSend_objectForKeyedSubscript_(v6, v21, *MEMORY[0x1E4F6DF40], v22);
  uint64_t v27 = objc_msgSend_unsignedLongLongValue(v23, v24, v25, v26);
  uint64_t v31 = objc_msgSend___im_dateWithNanosecondTimeIntervalSinceReferenceDate_(MEMORY[0x1E4F1C9C8], v28, v29, v30, (double)v27);
  __int16 v34 = objc_msgSend_objectForKeyedSubscript_(v6, v32, *MEMORY[0x1E4F6DF48], v33);

  uint64_t v38 = objc_msgSend_unsignedLongLongValue(v34, v35, v36, v37);
  uint64_t v44 = objc_msgSend___im_dateWithNanosecondTimeIntervalSinceReferenceDate_(MEMORY[0x1E4F1C9C8], v39, v40, v41, (double)v38);
  if (*(unsigned char *)(a1 + 48) || !*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v45 = objc_msgSend_existingChatWithGUID_(*(void **)(a1 + 32), v42, (uint64_t)v55, v43);
  }
  else
  {
    uint64_t v45 = objc_msgSend__cachedChatWithGUID_(*(void **)(a1 + 32), v42, (uint64_t)v55, v43);
  }
  id v48 = v45;
  objc_msgSend_setRecoverableMessagesCount_(v45, v46, v13, v47);
  objc_msgSend_setUnreadRecoverableMessagesCount_(v48, v49, v20, v50);
  objc_msgSend_setEarliestRecoverableMessageDeletionDate_(v48, v51, (uint64_t)v31, v52);
  objc_msgSend_setLatestRecoverableMessageDeletionDate_(v48, v53, (uint64_t)v44, v54);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
}

void sub_1A4B88808(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void **)(a1 + 32);
  objc_msgSend_allGUIDsForChat_(*(void **)(a1 + 40), a2, (uint64_t)a2, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObjectsFromArray_(v4, v5, (uint64_t)v7, v6);
}

void sub_1A4B88860(uint64_t a1, void *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  uint64_t v9 = objc_msgSend_daemonController(v4, v6, v7, v8);
  uint64_t v13 = v9;
  if (v3) {
    objc_msgSend_synchronousReplyingRemoteDaemon(v9, v10, v11, v12);
  }
  else {
    objc_msgSend_replyingRemoteDaemon(v9, v10, v11, v12);
  }
  id v15 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_permanentlyDeleteRecoverableMessagesInChatsWithGUIDs_queryID_(v15, v14, *(void *)(a1 + 40), (uint64_t)v5);
}

void sub_1A4B888F8(uint64_t a1, int a2, void *a3, void *a4)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v10 = a4;
  if (a2)
  {
    objc_msgSend_enumerateObjectsUsingBlock_(*(void **)(a1 + 32), v8, (uint64_t)&unk_1EF8E5AF8, v9);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v15 = objc_msgSend_count(*(void **)(a1 + 32), v12, v13, v14);
      uint64_t v16 = *(void *)(a1 + 32);
      int v18 = 134218498;
      uint64_t v19 = v15;
      __int16 v20 = 2112;
      uint64_t v21 = v16;
      __int16 v22 = 2112;
      id v23 = v7;
      _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Recently Deleted | QueryController: query to permanently delete recoverable messages from %lu chats GUIDs [%@] gave error: %@", (uint8_t *)&v18, 0x20u);
    }
  }
  uint64_t v17 = *(void *)(a1 + 40);
  if (v17) {
    (*(void (**)(void))(v17 + 16))();
  }
}

void sub_1A4B88A3C(uint64_t a1, void *a2)
{
  id v8 = a2;
  objc_msgSend_setRecoverableMessagesCount_(v8, v2, 0, v3);
  objc_msgSend_setEarliestRecoverableMessageDeletionDate_(v8, v4, 0, v5);
  objc_msgSend_setLatestRecoverableMessageDeletionDate_(v8, v6, 0, v7);
}

BOOL sub_1A4B88CB8(uint64_t a1, void *a2, void *a3, void *a4, unsigned char *a5, uint64_t a6, void *a7, void *a8)
{
  id v13 = a2;
  uint64_t v17 = objc_msgSend_sharedInstance(IMFileTransferCenter, v14, v15, v16);
  __int16 v20 = objc_msgSend_transferForGUID_(v17, v18, (uint64_t)v13, v19);

  if (v20)
  {
    objc_msgSend_localURL(v20, v21, v22, v23);
    *a3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_type(v20, v24, v25, v26);
    *a4 = (id)objc_claimAutoreleasedReturnValue();
    *a5 = objc_msgSend_isSticker(v20, v27, v28, v29);
    if (a7)
    {
      objc_msgSend_adaptiveImageGlyphContentDescription(v20, v30, v31, v32);
      *a7 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (a8)
    {
      uint64_t v33 = objc_msgSend_attributionInfo(v20, v30, v31, v32);
      objc_msgSend_objectForKeyedSubscript_(v33, v34, *MEMORY[0x1E4F6D3C0], v35);
      *a8 = (id)objc_claimAutoreleasedReturnValue();
    }
  }

  return v20 != 0;
}

BOOL sub_1A4B88E68(uint64_t a1, void *a2, void *a3, void *a4, unsigned char *a5, uint64_t a6, void *a7, void *a8)
{
  id v13 = a2;
  uint64_t v17 = objc_msgSend_sharedInstance(IMFileTransferCenter, v14, v15, v16);
  __int16 v20 = objc_msgSend_transferForGUID_(v17, v18, (uint64_t)v13, v19);

  if (v20)
  {
    if (a3)
    {
      objc_msgSend_localURL(v20, v21, v22, v23);
      *a3 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (a4)
    {
      objc_msgSend_type(v20, v21, v22, v23);
      *a4 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (a5) {
      *a5 = objc_msgSend_isSticker(v20, v21, v22, v23);
    }
    if (a7)
    {
      objc_msgSend_adaptiveImageGlyphContentDescription(v20, v21, v22, v23);
      *a7 = (id)objc_claimAutoreleasedReturnValue();
    }
    if (a8)
    {
      uint64_t v24 = objc_msgSend_attributionInfo(v20, v21, v22, v23);
      objc_msgSend_objectForKeyedSubscript_(v24, v25, *MEMORY[0x1E4F6D3C0], v26);
      *a8 = (id)objc_claimAutoreleasedReturnValue();
    }
  }

  return v20 != 0;
}

id sub_1A4B88F88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v7 = a6;
  unint64_t v14 = objc_msgSend_associatedMessageType(a1, v8, v9, v10) & 0xFFFFFFFFFFFFFFF8;
  if (v14 == 3000 || v14 == 2000)
  {
    uint64_t v15 = (void *)MEMORY[0x1E4F6E850];
    uint64_t v16 = objc_msgSend_sender(a1, v11, v12, v13);
    uint64_t v19 = objc_msgSend_displayNameForAddress_(v15, v17, (uint64_t)v16, v18);
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v23 = v7;
  id v20 = v7;
  uint64_t v21 = IMSharedMessageSummaryCreate();

  return v21;
}

uint64_t sub_1A4B890B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a7) {
    *a7 = 0;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1A4B890D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v10 = a7;
  id v7 = v10;
  id v8 = IMSharedMessageSummaryCreate();

  return v8;
}

uint64_t sub_1A4B8919C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a7) {
    *a7 = 0;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1A4B891C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  id v7 = objc_msgSend_iMessageService(IMServiceImpl, v4, v5, v6);
  id v8 = IMPreferredSendingAccountForAddressWithFallbackService(v3, v7);

  if ((objc_msgSend__isUsableForSending(v8, v9, v10, v11) & 1) == 0)
  {
    uint64_t v18 = objc_msgSend_smsService(IMServiceImpl, v12, v13, v14);
    if (v18)
    {
      uint64_t v19 = objc_msgSend_sharedInstance(IMAccountController, v15, v16, v17);
      uint64_t v22 = objc_msgSend_accountsForService_(v19, v20, (uint64_t)v18, v21);
      uint64_t v26 = objc_msgSend___imFirstObject(v22, v23, v24, v25);

      id v8 = (void *)v26;
    }
  }

  return v8;
}

id sub_1A4B892A0(void *a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  if (v6
    && (objc_msgSend_bestAccountForAddress_(a1, v4, (uint64_t)v6, v5), (uint64_t v7 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v8 = (void *)v7;
    uint64_t v9 = IMStripFormattingFromAddress();
    uint64_t v12 = objc_msgSend_imHandleWithID_(v8, v10, (uint64_t)v9, v11);
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

BOOL sub_1A4B89338(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_handleForAddress_(a1, a2, a3, a4);
  uint64_t v9 = v5;
  BOOL v10 = v5 && (objc_msgSend_isLoginIMHandle(v5, v6, v7, v8) & 1) != 0 || a3 == 0;

  return v10;
}

id sub_1A4B8938C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v7 = objc_msgSend_handleForAddress_(a1, v5, (uint64_t)v4, v6);
  uint64_t v11 = v7;
  if (v7)
  {
    uint64_t v12 = objc_msgSend__displayNameWithAbbreviation(v7, v8, v9, v10);
    uint64_t v13 = v12;
    if (v12)
    {
      id v14 = v12;

      id v4 = v14;
    }
  }

  return v4;
}

uint64_t sub_1A4B89514()
{
  uint64_t result = _IMWillLog();
  if (result)
  {
    return _IMAlwaysLog();
  }
  return result;
}

void sub_1A4B89650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B89668(uint64_t a1, void *a2)
{
}

void sub_1A4B8CF84(uint64_t a1, void *a2, uint64_t a3)
{
  id v26 = a2;
  uint64_t v7 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v5, a3, v6);
  uint64_t v11 = objc_msgSend_length(v7, v8, v9, v10);

  if (v11)
  {
    id v14 = objc_msgSend_transferForGUID_(*(void **)(a1 + 40), v12, (uint64_t)v26, v13);
    uint64_t v15 = (void *)MEMORY[0x1E4F1CB10];
    uint64_t v16 = *(void **)(a1 + 40);
    uint64_t v19 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v17, a3, v18);
    uint64_t v22 = objc_msgSend_fileURLWithPath_(v15, v20, (uint64_t)v19, v21);
    objc_msgSend_registerGUID_forNewOutgoingTransferWithLocalURL_(v16, v23, (uint64_t)v26, (uint64_t)v22);

    objc_msgSend__setTransferState_(v14, v24, 5, v25);
  }
}

uint64_t sub_1A4B8DAE4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a2 + 16))(a2, 1, *(void *)(a1 + 32));
}

uint64_t sub_1A4B8DC14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void))(a2 + 16))(a2, 0, 0);
}

uint64_t sub_1A4B8DEB0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void, void))(a2 + 16))(a2, 1, 0, *(void *)(a1 + 32), *(void *)(a1 + 40), 0);
}

uint64_t sub_1A4B8DED0(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void, void, void))(a2 + 16))(a2, 1, a1[4], 0, a1[5], a1[6], 0);
}

uint64_t sub_1A4B8E16C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, void, void))(a2 + 16))(a2, 0, *(void *)(a1 + 32), 0, 0, *(void *)(a1 + 40));
}

uint64_t sub_1A4B8E18C(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, void, void, void))(a2 + 16))(a2, 0, a1[4], a1[5], 0, 0, a1[6]);
}

uint64_t sub_1A4B8E2F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a2 + 16))(a2, 1, 0);
}

uint64_t sub_1A4B8E4EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void))(a2 + 16))(a2, 0, *(void *)(a1 + 32));
}

uint64_t sub_1A4B8F0C8(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_enumerateObjectsUsingBlock_(a3, a2, (uint64_t)&unk_1EF8E3BD0, a4);
}

uint64_t sub_1A4B8F0D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void))(a2 + 16))(a2, 0, 0);
}

void sub_1A4B8F340(uint64_t a1, uint64_t a2, void *a3)
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = sub_1A4B8F3CC;
  v6[3] = &unk_1E5B7C6F0;
  id v7 = *(id *)(a1 + 32);
  objc_msgSend_enumerateObjectsUsingBlock_(a3, v4, (uint64_t)v6, v5);
}

uint64_t sub_1A4B8F3CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, void, void))(a2 + 16))(a2, 0, 0, 0, 0, *(void *)(a1 + 32));
}

void sub_1A4B8F3F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = sub_1A4B8F4A8;
  v9[3] = &unk_1E5B7C740;
  id v10 = v5;
  id v11 = *(id *)(a1 + 32);
  id v6 = v5;
  objc_msgSend_enumerateObjectsUsingBlock_(a3, v7, (uint64_t)v9, v8);
}

uint64_t sub_1A4B8F4A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, void, void, void))(a2 + 16))(a2, 0, *(void *)(a1 + 32), 0, 0, 0, *(void *)(a1 + 40));
}

void sub_1A4B9068C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v9 = a3;
  if (v5)
  {
    uint64_t v37 = 0;
    uint64_t v38 = &v37;
    uint64_t v39 = 0x2050000000;
    id v10 = (void *)qword_1E965E880;
    uint64_t v40 = qword_1E965E880;
    if (!qword_1E965E880)
    {
      uint64_t v32 = MEMORY[0x1E4F143A8];
      uint64_t v33 = 3221225472;
      __int16 v34 = sub_1A4B90B98;
      uint64_t v35 = &unk_1E5B7C7B8;
      uint64_t v36 = &v37;
      sub_1A4B90B98((uint64_t)&v32, v6, v7, v8);
      id v10 = (void *)v38[3];
    }
    id v11 = v10;
    _Block_object_dispose(&v37, 8);
    id v12 = [v11 alloc];
    uint64_t v18 = objc_msgSend_initWithPhotoKitMomentShare_(v12, v13, (uint64_t)v5, v14);
    uint64_t v37 = 0;
    uint64_t v38 = &v37;
    uint64_t v39 = 0x2050000000;
    uint64_t v19 = (void *)qword_1E965E890;
    uint64_t v40 = qword_1E965E890;
    if (!qword_1E965E890)
    {
      uint64_t v32 = MEMORY[0x1E4F143A8];
      uint64_t v33 = 3221225472;
      __int16 v34 = sub_1A4B90D58;
      uint64_t v35 = &unk_1E5B7C7B8;
      uint64_t v36 = &v37;
      sub_1A4B90D58((uint64_t)&v32, v15, v16, v17);
      uint64_t v19 = (void *)v38[3];
    }
    id v20 = v19;
    _Block_object_dispose(&v37, 8);
    id v21 = [v20 alloc];
    uint64_t v23 = objc_msgSend_initWithMomentShareStatus_presentationStyle_(v21, v22, (uint64_t)v18, 3);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(void *)(a1 + 32) + 8), v24, (uint64_t)v23, *(void *)(a1 + 40));
    objc_msgSend_registerChangeObserver_context_(v23, v25, *(void *)(a1 + 32), qword_1E965BBB8);
    uint64_t v29 = objc_msgSend_delegate(*(void **)(a1 + 32), v26, v27, v28);
    objc_msgSend_momentSharePresentationCacheDidChange_(v29, v30, *(void *)(a1 + 32), v31);
  }
}

void sub_1A4B90880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B90A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B90A6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend_containsObject_(*(void **)(a1 + 32), v4, (uint64_t)v3, v5))
  {
    uint64_t v7 = *(void **)(*(void *)(a1 + 40) + 16);
    id v11 = 0;
    uint64_t v8 = objc_msgSend_momentShareForURLString_error_(v7, v6, (uint64_t)v3, (uint64_t)&v11);
    id v10 = v11;
    if (!v8)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(void *)(a1 + 40) + 8), v9, 0, (uint64_t)v3);
    }
  }
}

Class sub_1A4B90B98(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  sub_1A4B90BF0(a1, a2, a3, a4);
  Class result = objc_getClass("PXPhotoKitMomentShareStatus");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1A4CB78C4((uint64_t)result, v6, v7, v8);
  }
  qword_1E965E880 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A4B90BF0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!qword_1E965E888)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    v4[2] = (void *)3221225472;
    v4[3] = sub_1A4B90CE4;
    v4[4] = &unk_1E5B7B2A8;
    void v4[5] = v4;
    long long v5 = xmmword_1E5B7C7D8;
    uint64_t v6 = 0;
    qword_1E965E888 = _sl_dlopen();
  }
  if (!qword_1E965E888) {
    sub_1A4CB7940(v4, a2, a3, a4);
  }
  if (v4[0]) {
    free(v4[0]);
  }
}

uint64_t sub_1A4B90CE4()
{
  uint64_t result = _sl_dlopen();
  qword_1E965E888 = result;
  return result;
}

Class sub_1A4B90D58(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  sub_1A4B90BF0(a1, a2, a3, a4);
  Class result = objc_getClass("PXMomentShareStatusPresentation");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1A4CB79C0((uint64_t)result, v6, v7, v8);
  }
  qword_1E965E890 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A4B9150C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4B9142CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4B92A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B92A30(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v18 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v8 = v18;
  if (isKindOfClass)
  {
    id v9 = v18;
    id v10 = *(void **)(a1 + 32);
    uint64_t v14 = objc_msgSend_guid(v9, v11, v12, v13);
    LODWORD(v10) = objc_msgSend_isEqualToString_(v10, v15, (uint64_t)v14, v16);

    if (v10)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }

    id v8 = v18;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v8);
}

uint64_t sub_1A4B92CC0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__handleIncomingItem_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

uint64_t IMTranscriptChatItemEqual(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3 == (void **)v4)
  {
    uint64_t isEqualToString = 1;
  }
  else
  {
    Class = object_getClass(v3);
    if (Class == object_getClass(v4)) {
      uint64_t isEqualToString = objc_msgSend_isEqualToString_(v3[5], v6, v4[5], v7);
    }
    else {
      uint64_t isEqualToString = 0;
    }
  }

  return isEqualToString;
}

void sub_1A4B97354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A4B9737C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  BOOL v8 = a3 == a1[9] && a4 == a1[10];
  uint64_t v10 = objc_msgSend_integerValue(a2, (const char *)a2, a3, a4);
  id v11 = (void *)a1[4];
  if (v8)
  {
    id v12 = v11;
  }
  else
  {
    objc_msgSend_attributedSubstringFromRange_(v11, v9, a3, a4);
    id v12 = (id)objc_claimAutoreleasedReturnValue();
  }
  id v23 = v12;
  uint64_t v13 = [IMDetonatedMessagePartChatItem alloc];
  isShowingEditHistory = objc_msgSend__initWithItem_text_index_messagePartRange_subject_isShowingEditHistory_(v13, v14, a1[5], (uint64_t)v23, v10, a3, a4, a1[6], 0);
  id v18 = isShowingEditHistory;
  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(a1[7] + 8) + 40), isShowingEditHistory);
  }
  else if (isShowingEditHistory)
  {
    uint64_t v19 = *(void **)(*(void *)(a1[8] + 8) + 40);
    if (!v19)
    {
      id v20 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      uint64_t v21 = *(void *)(a1[8] + 8);
      uint64_t v22 = *(void **)(v21 + 40);
      *(void *)(v21 + 40) = v20;

      uint64_t v19 = *(void **)(*(void *)(a1[8] + 8) + 40);
    }
    objc_msgSend_addObject_(v19, v16, (uint64_t)v18, v17);
  }
}

void sub_1A4B98790(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Block_object_dispose(&STACK[0x250], 8);
  _Block_object_dispose(&STACK[0x280], 8);
  _Unwind_Resume(a1);
}

void sub_1A4B988B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_rangeValue(a2, (const char *)a2, a3, a4);
  uint64_t v7 = (uint64_t)v6;
  if ((unint64_t)&v6[v5] <= objc_msgSend_length(*(void **)(a1 + 32), v6, v8, v9))
  {
    objc_msgSend_substringWithRange_(*(void **)(a1 + 32), v10, v5, v7);
    id v16 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v13 = objc_msgSend_URLWithString_(MEMORY[0x1E4F1CB10], v11, (uint64_t)v16, v12);
    if (objc_msgSend__isAllowlistedURL_(*(void **)(a1 + 48), v14, (uint64_t)v13, v15)) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    }
  }
}

void sub_1A4B98988(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v331 = *MEMORY[0x1E4F143B8];
  id v286 = a2;
  BOOL v7 = *(void *)(a1 + 96) == a3 && *(void *)(a1 + 104) == a4;
  int v8 = v7;
  int v281 = v8;
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v284 = a4;
  if (v7)
  {
    id v282 = v9;
  }
  else
  {
    sub_1A4B998F4(v9, v5, a4);
    id v282 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v5 = a3;
  }
  uint64_t v325 = 0;
  unint64_t v326 = 0;
  v288 = objc_msgSend_attribute_atIndex_effectiveRange_(*(void **)(a1 + 32), v10, *MEMORY[0x1E4F6C188], v5, &v325);
  if (!v288)
  {
    v287 = 0;
    v288 = 0;
    goto LABEL_26;
  }
  BOOL v14 = a4 > v326;
  uint64_t v15 = objc_msgSend_sharedInstance(IMFileTransferCenter, v11, v12, v13);
  v287 = objc_msgSend_transferForGUID_(v15, v16, (uint64_t)v288, v17);

  if (v14)
  {
    if (!v287)
    {
      uint64_t v22 = IMLogHandleForCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_1A4CB7B18();
      }

      uint64_t v21 = v288;
      v287 = 0;
      v288 = 0;
      goto LABEL_25;
    }
    if (!objc_msgSend_isAdaptiveImageGlyph(v287, v18, v19, v20))
    {
      uint64_t v21 = IMLogHandleForCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_1A4CB7B4C();
      }
      goto LABEL_25;
    }
  }
  else
  {
    if (!v287)
    {
      uint64_t v21 = IMLogHandleForCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_1A4CB7B80();
      }
      goto LABEL_24;
    }
    if (!objc_msgSend_isAdaptiveImageGlyph(v287, v18, v19, v20)) {
      goto LABEL_26;
    }
  }

  v288 = 0;
  uint64_t v21 = v287;
LABEL_24:
  v287 = 0;
LABEL_25:

LABEL_26:
  uint64_t v283 = objc_msgSend_integerValue(v286, v11, v12, v13);
  id v26 = objc_msgSend_balloonBundleID(*(void **)(a1 + 40), v23, v24, v25);
  uint64_t v27 = *MEMORY[0x1E4F6CC10];
  int isEqualToString = objc_msgSend_isEqualToString_(v26, v28, *MEMORY[0x1E4F6CC10], v29);

  __int16 v34 = objc_msgSend_balloonBundleID(*(void **)(a1 + 40), v31, v32, v33);
  uint64_t v35 = *MEMORY[0x1E4F6CC30];
  int v38 = objc_msgSend_containsString_(v34, v36, *MEMORY[0x1E4F6CC30], v37);

  int v41 = objc_msgSend_containsIndex_(*(void **)(a1 + 48), v39, v283, v40);
  uint64_t v45 = objc_msgSend_string(*(void **)(a1 + 32), v42, v43, v44);
  uint64_t v47 = objc_msgSend_substringWithRange_(v45, v46, a3, v284);
  int v50 = objc_msgSend_isEqualToString_(v47, v48, *MEMORY[0x1E4F6CE60], v49);

  if (objc_msgSend_scheduleType(*(void **)(a1 + 40), v51, v52, v53) == 2) {
    int v57 = 0;
  }
  else {
    int v57 = v41;
  }
  if (v57 == 1)
  {
    id v58 = IMLogHandleForCategory();
    if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB7AE4();
    }
    goto LABEL_60;
  }
  if (v50)
  {
    uint64_t v59 = objc_msgSend_attributesAtIndex_effectiveRange_(*(void **)(a1 + 32), v54, a3, 0);
    isShowingEditHistory = objc_msgSend_suggestedRepliesMessagePartChatItemForMessageItem_attributes_(*(void **)(a1 + 112), v60, *(void *)(a1 + 40), (uint64_t)v59);

    goto LABEL_39;
  }
  if (*(unsigned char *)(a1 + 136) || *(unsigned char *)(a1 + 137))
  {
    uint64_t v62 = *(void *)(*(void *)(a1 + 72) + 8);
    if (*(unsigned char *)(v62 + 24))
    {
LABEL_38:
      isShowingEditHistory = 0;
      goto LABEL_39;
    }
    *(unsigned char *)(v62 + 24) = 1;
    if (*(unsigned char *)(a1 + 137))
    {
      uint64_t v69 = [IMUnavailableMomentShareMessagePartChatItem alloc];
      uint64_t v71 = objc_msgSend__initWithItem_text_index_messagePartRange_transferGUID_chatContext_(v69, v70, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, 0, *(void *)(a1 + 56));
LABEL_53:
      isShowingEditHistory = (void *)v71;
      goto LABEL_39;
    }
    id v78 = objc_msgSend_message(*(void **)(a1 + 40), v54, v55, v56);
    long long v79 = IMCoreMomentShareURLForMessage(v78);

    if (v79)
    {
      id v83 = objc_msgSend_absoluteString(v79, v80, v81, v82);
      uint64_t v87 = objc_msgSend_sharedInstance(IMMomentShareCache, v84, v85, v86);
      id v324 = 0;
      uint64_t v89 = objc_msgSend_momentShareForURLString_error_(v87, v88, (uint64_t)v83, (uint64_t)&v324);
      id v90 = v324;

      if (v89)
      {
      }
      else
      {
        BOOL IsPermanent = IMMomentShareCacheErrorIsPermanent(v90);

        if (IsPermanent)
        {
          uint64_t v97 = off_1E5B79D28;
LABEL_70:
          id v98 = objc_alloc(*v97);
          isShowingEditHistory = objc_msgSend__initWithItem_text_index_messagePartRange_transferGUID_chatContext_(v98, v99, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, 0, *(void *)(a1 + 56));

          goto LABEL_39;
        }
      }
    }
    uint64_t v97 = off_1E5B7A038;
    goto LABEL_70;
  }
  if (!v288)
  {
LABEL_72:
    unsigned int v104 = objc_msgSend_isFromMe(*(void **)(a1 + 40), v54, v55, v56);
    if (*(void *)(a1 + 120) <= *(void *)(a1 + 128) && (char v108 = *(unsigned char *)(a1 + 139)) != 0)
    {
      unsigned int v109 = v104;
      char v110 = 1;
      if (objc_msgSend_hasDataDetectorResults(*(void **)(a1 + 40), v105, v106, v107))
      {
        uint64_t v320 = 0;
        v321 = &v320;
        uint64_t v322 = 0x2020000000;
        char v323 = 1;
        *(void *)long long buf = 0;
        *(void *)&uint8_t buf[8] = buf;
        *(void *)&uint8_t buf[16] = 0x3010000000;
        uint64_t v329 = 0;
        uint64_t v330 = 0;
        v328 = "";
        uint64_t v314 = 0;
        v315 = &v314;
        uint64_t v316 = 0x3032000000;
        v317 = sub_1A4B344CC;
        v318 = sub_1A4B3434C;
        id v319 = 0;
        uint64_t v308 = 0;
        v309 = &v308;
        uint64_t v310 = 0x3032000000;
        v311 = sub_1A4B344CC;
        v312 = sub_1A4B3434C;
        id v313 = 0;
        uint64_t v111 = *(void **)(a1 + 32);
        uint64_t v112 = *MEMORY[0x1E4F6C1D0];
        v289[0] = MEMORY[0x1E4F143A8];
        v289[1] = 3221225472;
        v289[2] = sub_1A4B99998;
        v289[3] = &unk_1E5B7C870;
        v294 = &v320;
        uint64_t v299 = a3;
        uint64_t v300 = v284;
        id v113 = v111;
        uint64_t v114 = *(void *)(a1 + 112);
        id v290 = v113;
        uint64_t v301 = v114;
        id v291 = *(id *)(a1 + 40);
        char v303 = *(unsigned char *)(a1 + 140);
        id v115 = *(id *)(a1 + 64);
        char v304 = *(unsigned char *)(a1 + 141);
        char v305 = v109;
        id v292 = v115;
        uint64_t v302 = v283;
        char v306 = *(unsigned char *)(a1 + 142);
        id v116 = *(id *)(a1 + 56);
        char v307 = v108;
        id v293 = v116;
        uint64_t v117 = *(void *)(a1 + 88);
        v295 = &v314;
        v296 = buf;
        uint64_t v297 = v117;
        v298 = &v308;
        objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(v113, v118, v112, a3, v284, 0, v289);
        if (*((unsigned char *)v321 + 24))
        {
          uint64_t v122 = objc_msgSend_scheme((void *)v309[5], v119, v120, v121);
          uint64_t v126 = objc_msgSend_lowercaseString(v122, v123, v124, v125);
          uint64_t v130 = objc_msgSend_trimmedString(v126, v127, v128, v129);
          int v133 = objc_msgSend_isEqualToString_(v130, v131, @"http", v132);

          id v137 = objc_msgSend_body(*(void **)(a1 + 40), v134, v135, v136);
          uint64_t v141 = objc_msgSend_string(v137, v138, v139, v140);
          LODWORD(v122) = objc_msgSend_im_matchesSOSMapURL(v141, v142, v143, v144);

          uint64_t v147 = objc_msgSend_locationInfoFromURL_(MEMORY[0x1E4F6E818], v145, v309[5], v146);
          uint64_t v151 = v147;
          if ((v122 | v133) == 1
            && (objc_msgSend_location(v147, v148, v149, v150),
                (uint64_t v152 = objc_claimAutoreleasedReturnValue()) != 0)
            && (objc_msgSend_address(v151, v148, v149, v150),
                uint64_t v153 = objc_claimAutoreleasedReturnValue(),
                BOOL v154 = v153 == 0,
                v153,
                v152,
                v154))
          {
            v276 = [IMTranscriptLocationChatItem alloc];
            isShowingEditHistory = objc_msgSend__initWithItem_text_index_messagePartRange_visibleAssociatedMessageChatItems_(v276, v277, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, 0);
            objc_msgSend_setLocationInfo_(isShowingEditHistory, v278, (uint64_t)v151, v279);
          }
          else
          {
            uint64_t v155 = *(void **)(a1 + 112);
            uint64_t v156 = v309[5];
            id v157 = objc_msgSend_sender(*(void **)(a1 + 40), v148, v149, v150);
            int isAllowlistedRichLinkSender = objc_msgSend__supportsRichLinkURL_forSender_isAllowlistedRichLinkSender_(v155, v158, v156, (uint64_t)v157, *(unsigned __int8 *)(a1 + 140));

            uint64_t v160 = *(void **)(a1 + 64);
            id v162 = objc_msgSend_valueWithRange_(MEMORY[0x1E4F29238], v161, a3, v284);
            uint64_t v165 = objc_msgSend_member_(v160, v163, (uint64_t)v162, v164);

            LODWORD(v162) = objc_msgSend__isSenderUnknown(*(void **)(a1 + 40), v166, v167, v168);
            int hasResponded = objc_msgSend_hasResponded(*(void **)(a1 + 56), v169, v170, v171);
            if (v162)
            {
              if (*(unsigned char *)(a1 + 141)) {
                int v175 = 1;
              }
              else {
                int v175 = v109;
              }
              int v176 = v175 | hasResponded;
            }
            else
            {
              int v176 = 1;
            }
            int isAllowlistedURL = objc_msgSend__isAllowlistedURL_(*(void **)(a1 + 112), v173, v309[5], v174);
            if (v165) {
              int v230 = isAllowlistedRichLinkSender;
            }
            else {
              int v230 = 0;
            }
            if (v230 == 1 && v176 | isAllowlistedURL)
            {
              v231 = objc_alloc_init(IMPluginPayload);
              v235 = objc_msgSend_guid(*(void **)(a1 + 40), v232, v233, v234);
              objc_msgSend_setMessageGUID_(v231, v236, (uint64_t)v235, v237);

              objc_msgSend_setPluginBundleID_(v231, v238, v27, v239);
              objc_msgSend_setUrl_(v231, v240, v309[5], v241);
              v245 = objc_msgSend_fileTransferGUIDs(*(void **)(a1 + 40), v242, v243, v244);
              objc_msgSend_addAttachmentsFromFileTransferGUIDs_(v231, v246, (uint64_t)v245, v247);

              v248 = [IMTranscriptPluginChatItem alloc];
              uint64_t v250 = *(void *)(a1 + 40);
              if (*(unsigned char *)(a1 + 142) || *(unsigned char *)(a1 + 141)) {
                HasKnownParticipants = objc_msgSend__initWithItem_initialPayload_index_messagePartRange_parentChatHasKnownParticipants_(v248, v249, v250, (uint64_t)v231, v283, a3, v284, 1);
              }
              else {
                HasKnownParticipants = objc_msgSend__initWithItem_initialPayload_index_messagePartRange_parentChatHasKnownParticipants_(v248, v249, v250, (uint64_t)v231, v283, a3, v284, v109);
              }
              isShowingEditHistory = HasKnownParticipants;
              objc_msgSend_setAllowlistedRichLinkSender_(HasKnownParticipants, v272, *(unsigned __int8 *)(a1 + 140), v273);
              objc_msgSend_setChipListFromText_(isShowingEditHistory, v274, *(void *)(a1 + 32), v275);
            }
            else
            {
              v251 = objc_msgSend_guid(*(void **)(a1 + 40), v227, v228, v229);
              objc_msgSend_chatItemGUIDForMessageGUID_partIndex_(IMMessagePartChatItem, v252, (uint64_t)v251, v283);
              v231 = (IMPluginPayload *)objc_claimAutoreleasedReturnValue();

              v256 = objc_msgSend_showingEditHistoryForChatItemGUIDs(*(void **)(a1 + 56), v253, v254, v255);
              LOBYTE(v251) = objc_msgSend_containsObject_(v256, v257, (uint64_t)v231, v258);

              v259 = [IMTextMessagePartChatItem alloc];
              isShowingEditHistory = objc_msgSend__initWithItem_text_index_messagePartRange_subject_isShowingEditHistory_(v259, v260, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, 0, (_BYTE)v251);
              objc_msgSend_setChipListFromText_(isShowingEditHistory, v261, *(void *)(a1 + 32), v262);
            }
          }
        }
        else
        {
          uint64_t v220 = v315[5];
          if (!v220)
          {
            isShowingEditHistory = 0;
LABEL_126:

            _Block_object_dispose(&v308, 8);
            _Block_object_dispose(&v314, 8);

            _Block_object_dispose(buf, 8);
            _Block_object_dispose(&v320, 8);
            goto LABEL_39;
          }
          id v221 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
          if (!v221)
          {
            id v222 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
            uint64_t v223 = *(void *)(*(void *)(a1 + 88) + 8);
            uint64_t v224 = *(void **)(v223 + 40);
            *(void *)(v223 + 40) = v222;

            id v221 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
            uint64_t v220 = v315[5];
          }
          objc_msgSend_addObject_(v221, v119, v220, v121);
          isShowingEditHistory = 0;
          uint64_t v225 = *(void *)&buf[8];
          *(void *)(*(void *)&buf[8] + 32) = 0;
          *(void *)(v225 + 40) = 0;
          uint64_t v151 = (void *)v315[5];
          v315[5] = 0;
        }

        goto LABEL_126;
      }
    }
    else
    {
      char v110 = 0;
    }
    uint64_t v177 = objc_msgSend_guid(*(void **)(a1 + 40), v105, v106, v107);
    uint64_t v179 = objc_msgSend_chatItemGUIDForMessageGUID_partIndex_(IMMessagePartChatItem, v178, (uint64_t)v177, v283);

    long long v183 = objc_msgSend_showingEditHistoryForChatItemGUIDs(*(void **)(a1 + 56), v180, v181, v182);
    LOBYTE(v177) = objc_msgSend_containsObject_(v183, v184, (uint64_t)v179, v185);

    long long v186 = [IMTextMessagePartChatItem alloc];
    HIBYTE(v280) = (_BYTE)v177;
    LOBYTE(v280) = v110;
    isShowingEditHistory = objc_msgSend__initWithItem_text_index_messagePartRange_subject_shouldDisplayLink_isShowingEditHistory_(v186, v187, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, 0, v280);
    objc_msgSend_setChipListFromText_(isShowingEditHistory, v188, *(void *)(a1 + 32), v189);

    goto LABEL_39;
  }
  if (*(unsigned char *)(a1 + 138)) {
    int v72 = 0;
  }
  else {
    int v72 = isEqualToString;
  }
  if ((v72 | v38))
  {
    id v58 = objc_msgSend_balloonBundleID(*(void **)(a1 + 40), v54, v55, v56);
    if (objc_msgSend_isEqualToString_(v58, v73, v27, v74))
    {
LABEL_60:

      goto LABEL_38;
    }
    uint64_t v100 = objc_msgSend_balloonBundleID(*(void **)(a1 + 40), v75, v76, v77);
    char v103 = objc_msgSend_containsString_(v100, v101, v35, v102);

    if (v103) {
      goto LABEL_38;
    }
    goto LABEL_72;
  }
  if (!v287)
  {
    if (IMOSLoggingEnabled())
    {
      long long v190 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v190, OS_LOG_TYPE_INFO))
      {
        uint64_t v191 = *(void *)(a1 + 40);
        *(_DWORD *)long long buf = 138412546;
        *(void *)&uint8_t buf[4] = v288;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v191;
        _os_log_impl(&dword_1A4AF7000, v190, OS_LOG_TYPE_INFO, "Couldn't associate fileTransfer with guid: %@ for message: %@", buf, 0x16u);
      }
    }
    long long v192 = [IMErrorMessagePartChatItem alloc];
    uint64_t v71 = objc_msgSend__initWithItem_text_index_messagePartRange_transferGUID_chatContext_(v192, v193, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, v288, *(void *)(a1 + 56));
    goto LABEL_53;
  }
  if (objc_msgSend_transferState(v287, v54, v55, v56) == 8)
  {
    uint64_t v94 = [IMDetonatedMessagePartChatItem alloc];
    uint64_t v71 = objc_msgSend__initWithItem_text_index_messagePartRange_subject_isShowingEditHistory_(v94, v95, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, 0, 0);
    goto LABEL_53;
  }
  if (objc_msgSend_isAudioMessage(*(void **)(a1 + 40), v91, v92, v93)
    && (objc_msgSend_type(v287, v194, v195, v196),
        id v197 = objc_claimAutoreleasedReturnValue(),
        int IsAudio = IMUTTypeIsAudio(),
        v197,
        IsAudio))
  {
    v199 = objc_msgSend__newAudioMessagePartsForMessageItem_text_chatContext_retractedPartIndexes_singlePart_(*(void **)(a1 + 112), v194, *(void *)(a1 + 40), *(void *)(a1 + 32), *(void *)(a1 + 56), *(void *)(a1 + 48), *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
    if (objc_msgSend_count(v199, v200, v201, v202) == 1)
    {
      isShowingEditHistory = objc_msgSend_firstObject(v199, v203, v204, v205);
    }
    else
    {
      v267 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
      if (!v267)
      {
        id v268 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        uint64_t v269 = *(void *)(*(void *)(a1 + 88) + 8);
        v270 = *(void **)(v269 + 40);
        *(void *)(v269 + 40) = v268;

        v267 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
      }
      objc_msgSend_addObjectsFromArray_(v267, v203, (uint64_t)v199, v205);
      isShowingEditHistory = 0;
    }
  }
  else
  {
    if (objc_msgSend_isExpirable(*(void **)(a1 + 40), v194, v195, v196))
    {
      id v208 = [IMExpirableMessageChatItem alloc];
      uint64_t v71 = objc_msgSend__initWithItem_text_index_messagePartRange_transferGUID_chatContext_(v208, v209, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, v288, *(void *)(a1 + 56));
      goto LABEL_53;
    }
    if (*(unsigned char *)(a1 + 138))
    {
      id v210 = objc_msgSend_attributionInfo(v287, v54, v206, v207);
      id v213 = objc_msgSend_objectForKey_(v210, v211, *MEMORY[0x1E4F6D3F0], v212);
      BOOL v214 = v213 == 0;

      if (v214) {
        goto LABEL_38;
      }
    }
    v199 = objc_msgSend_attribute_atIndex_effectiveRange_(*(void **)(a1 + 32), v54, *MEMORY[0x1E4F6C108], a3, 0);
    if (objc_msgSend_BOOLValue(v199, v215, v216, v217))
    {
      char v218 = [IMAnimatedEmojiMessagePartChatItem alloc];
      isShowingEditHistory = objc_msgSend__initWithItem_text_index_messagePartRange_transferGUID_chatContext_(v218, v219, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, v288, *(void *)(a1 + 56));
    }
    else
    {
      v263 = [IMAttachmentMessagePartChatItem alloc];
      isShowingEditHistory = objc_msgSend__initWithItem_text_index_messagePartRange_transferGUID_chatContext_(v263, v264, *(void *)(a1 + 40), (uint64_t)v282, v283, a3, v284, v288, *(void *)(a1 + 56));
      objc_msgSend_setChipListFromText_(isShowingEditHistory, v265, *(void *)(a1 + 32), v266);
    }
  }

LABEL_39:
  if (v281)
  {
    if (objc_msgSend_count(*(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40), v54, v55, v56)
      && isShowingEditHistory)
    {
      objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40), v63, (uint64_t)isShowingEditHistory, v64);
    }
    else
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), isShowingEditHistory);
    }
  }
  else if (isShowingEditHistory)
  {
    long long v65 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
    if (!v65)
    {
      id v66 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      uint64_t v67 = *(void *)(*(void *)(a1 + 88) + 8);
      long long v68 = *(void **)(v67 + 40);
      *(void *)(v67 + 40) = v66;

      long long v65 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
    }
    objc_msgSend_addObject_(v65, v54, (uint64_t)isShowingEditHistory, v56);
  }
}

void sub_1A4B99864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  _Block_object_dispose(&a36, 8);
  _Block_object_dispose(&a42, 8);
  _Block_object_dispose((const void *)(v42 - 160), 8);
  _Block_object_dispose((const void *)(v42 - 216), 8);
  _Unwind_Resume(a1);
}

id sub_1A4B998F4(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  uint64_t v6 = _IMDDResultAttributeName();
  int v8 = objc_msgSend_attribute_existsInRange_(v5, v7, (uint64_t)v6, a2, a3);

  if (v8) {
    objc_msgSend_dd_attributedSubstringFromRange_(v5, v9, a2, a3);
  }
  else {
  uint64_t v10 = objc_msgSend_attributedSubstringFromRange_(v5, v9, a2, a3);
  }

  return v10;
}

void sub_1A4B99998(uint64_t a1, void *a2, NSUInteger a3, NSUInteger a4, unsigned char *a5)
{
  id v142 = a2;
  BOOL v11 = a3 == *(void *)(a1 + 104) && a4 == *(void *)(a1 + 112);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v11;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40), a2);
    *a5 = 1;
    goto LABEL_38;
  }
  uint64_t v12 = sub_1A4B998F4(*(void **)(a1 + 32), a3, a4);
  uint64_t v13 = *(void **)(a1 + 32);
  BOOL v14 = _IMDDResultAttributeName();
  LOBYTE(v13) = objc_msgSend_attribute_existsInRange_(v13, v15, (uint64_t)v14, a3, a4);

  if ((v13 & 1) == 0)
  {
    uint64_t v19 = objc_msgSend_attributedSubstringFromRange_(*(void **)(a1 + 32), v16, a3, a4);
    id v23 = objc_msgSend_trimmedString(v19, v20, v21, v22);

    uint64_t v29 = objc_msgSend_string(v23, v24, v25, v26);
    if (!v142 && objc_msgSend_characterAtIndex_(v29, v27, 0, v28) == 46)
    {
      if ((unint64_t)objc_msgSend_length(v29, v30, v31, v32) < 2)
      {
        uint64_t v42 = 0;
      }
      else
      {
        uint64_t v36 = objc_msgSend_length(v23, v33, v34, v35);
        int v38 = objc_msgSend_attributedSubstringFromRange_(v23, v37, 1, v36 - 1);
        uint64_t v42 = objc_msgSend_trimmedString(v38, v39, v40, v41);

        id v23 = v38;
      }

      id v23 = (void *)v42;
    }

    uint64_t v12 = v23;
  }
  uint64_t v43 = objc_msgSend_string(v12, v16, v17, v18);
  uint64_t v47 = objc_msgSend_whitespaceAndNewlineCharacterSet(MEMORY[0x1E4F28B88], v44, v45, v46);
  int v50 = objc_msgSend_stringByTrimmingCharactersInSet_(v43, v48, (uint64_t)v47, v49);
  uint64_t v54 = objc_msgSend_length(v50, v51, v52, v53);

  if (v54)
  {
    id v58 = *(void **)(a1 + 120);
    uint64_t v59 = objc_msgSend_sender(*(void **)(a1 + 40), v55, v56, v57);
    if (objc_msgSend__supportsRichLinkURL_forSender_isAllowlistedRichLinkSender_(v58, v60, (uint64_t)v142, (uint64_t)v59, *(unsigned __int8 *)(a1 + 136)))
    {
      uint64_t v62 = *(void **)(a1 + 48);
      uint64_t v63 = objc_msgSend_valueWithRange_(MEMORY[0x1E4F29238], v61, a3, a4);
      uint64_t v66 = objc_msgSend_member_(v62, v64, (uint64_t)v63, v65);
      if (v66)
      {
        long long v70 = (void *)v66;
        if (!objc_msgSend__isSenderUnknown(*(void **)(a1 + 40), v67, v68, v69) || *(unsigned char *)(a1 + 137))
        {

          goto LABEL_23;
        }
        int v139 = *(unsigned __int8 *)(a1 + 138);

        if (v139)
        {
LABEL_23:
          int v72 = objc_msgSend__guidForMessage_url_(*(void **)(a1 + 120), v71, *(void *)(a1 + 40), (uint64_t)v142);
          uint64_t v73 = objc_alloc_init(IMPluginPayload);
          objc_msgSend_setMessageGUID_(v73, v74, (uint64_t)v72, v75);
          objc_msgSend_setPluginBundleID_(v73, v76, *MEMORY[0x1E4F6CC10], v77);
          objc_msgSend_setUrl_(v73, v78, (uint64_t)v142, v79);
          id v83 = objc_msgSend_fileTransferGUIDs(*(void **)(a1 + 40), v80, v81, v82);
          objc_msgSend_addAttachmentsFromFileTransferGUIDs_(v73, v84, (uint64_t)v83, v85);

          uint64_t v86 = [IMTranscriptPluginChatItem alloc];
          BOOL v88 = *(unsigned char *)(a1 + 139) || *(unsigned char *)(a1 + 137) || *(unsigned char *)(a1 + 138) != 0;
          HasKnownParticipants = objc_msgSend__initWithItem_initialPayload_index_messagePartRange_parentChatHasKnownParticipants_(v86, v87, *(void *)(a1 + 40), (uint64_t)v73, *(void *)(a1 + 128), a3, a4, v88);
          objc_msgSend_setAllowlistedRichLinkSender_(HasKnownParticipants, v90, *(unsigned __int8 *)(a1 + 136), v91);

          uint64_t v94 = *(void *)(a1 + 88);
          if (!*(void *)(*(void *)(v94 + 8) + 40))
          {
            id v95 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
            uint64_t v96 = *(void *)(*(void *)(a1 + 88) + 8);
            uint64_t v97 = *(void **)(v96 + 40);
            *(void *)(v96 + 40) = v95;

            uint64_t v94 = *(void *)(a1 + 88);
          }
          uint64_t v98 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
          if (v98)
          {
            objc_msgSend_addObject_(*(void **)(*(void *)(v94 + 8) + 40), v92, v98, v93);
            uint64_t v99 = *(void *)(*(void *)(a1 + 80) + 8);
            *(void *)(v99 + 32) = 0;
            *(void *)(v99 + 40) = 0;
            uint64_t v100 = *(void *)(*(void *)(a1 + 72) + 8);
            uint64_t v101 = *(void **)(v100 + 40);
            *(void *)(v100 + 40) = 0;

            uint64_t v94 = *(void *)(a1 + 88);
          }
          objc_msgSend_addObject_(*(void **)(*(void *)(v94 + 8) + 40), v92, (uint64_t)HasKnownParticipants, v93);
          goto LABEL_36;
        }
LABEL_33:
        unsigned int v104 = objc_msgSend_guid(*(void **)(a1 + 40), v71, v102, v103);
        uint64_t v106 = objc_msgSend_chatItemGUIDForMessageGUID_partIndex_(IMMessagePartChatItem, v105, (uint64_t)v104, *(void *)(a1 + 128));

        char v110 = objc_msgSend_showingEditHistoryForChatItemGUIDs(*(void **)(a1 + 56), v107, v108, v109);
        LOBYTE(v104) = objc_msgSend_containsObject_(v110, v111, (uint64_t)v106, v112);

        id v113 = [IMTextMessagePartChatItem alloc];
        HIBYTE(v140) = (_BYTE)v104;
        LOBYTE(v140) = *(unsigned char *)(a1 + 140);
        HasKnownParticipants = objc_msgSend__initWithItem_text_index_messagePartRange_subject_shouldDisplayLink_isShowingEditHistory_(v113, v114, *(void *)(a1 + 40), (uint64_t)v12, *(void *)(a1 + 128), a3, a4, 0, v140);
        objc_msgSend_setChipListFromText_(HasKnownParticipants, v115, *(void *)(a1 + 32), v116);

        uint64_t v117 = *(NSRange **)(*(void *)(a1 + 80) + 8);
        if (*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40))
        {
          v144.location = a3;
          v144.length = a4;
          *(NSRange *)(*(void *)(*(void *)(a1 + 80) + 8) + 32) = NSUnionRange(v117[2], v144);
          uint64_t v118 = sub_1A4B998F4(*(void **)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 32), *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
          uint64_t v122 = objc_msgSend_guid(*(void **)(a1 + 40), v119, v120, v121);
          uint64_t v124 = objc_msgSend_chatItemGUIDForMessageGUID_partIndex_(IMMessagePartChatItem, v123, (uint64_t)v122, *(void *)(a1 + 128));

          uint64_t v128 = objc_msgSend_showingEditHistoryForChatItemGUIDs(*(void **)(a1 + 56), v125, v126, v127);
          char v131 = objc_msgSend_containsObject_(v128, v129, (uint64_t)v124, v130);

          uint64_t v132 = [IMTextMessagePartChatItem alloc];
          LOBYTE(v141) = v131;
          uint64_t isShowingEditHistory = objc_msgSend__initWithItem_text_index_messagePartRange_subject_isShowingEditHistory_(v132, v133, *(void *)(a1 + 40), (uint64_t)v118, *(void *)(a1 + 128), *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 32), *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), 0, v141);
          uint64_t v135 = *(void *)(*(void *)(a1 + 72) + 8);
          uint64_t v136 = *(void **)(v135 + 40);
          *(void *)(v135 + 40) = isShowingEditHistory;

          objc_msgSend_setChipListFromText_(*(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v137, *(void *)(a1 + 32), v138);
        }
        else
        {
          v117[2].location = a3;
          v117[2].length = a4;
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), HasKnownParticipants);
        }
LABEL_36:

        goto LABEL_37;
      }
    }
    goto LABEL_33;
  }
LABEL_37:

LABEL_38:
}

void sub_1A4B9A14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B9A170(uint64_t a1, void *a2, uint64_t a3)
{
  id v55 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v6 = v55;
  if (isKindOfClass)
  {
    id v7 = v55;
    BOOL v11 = objc_msgSend_suggestedActionsList(v7, v8, v9, v10);
    uint64_t v15 = objc_msgSend_count(v11, v12, v13, v14);

    if (v15)
    {
      unint64_t v19 = a3 + 1;
      if ((objc_msgSend_supportsSuggestedActionsMenu(v7, v16, v17, v18) & 1) == 0)
      {
        if (v19 >= objc_msgSend_count(*(void **)(a1 + 32), v20, v21, v22)
          || (objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), v23, v19, v24),
              uint64_t v25 = objc_claimAutoreleasedReturnValue(),
              objc_opt_class(),
              char v26 = objc_opt_isKindOfClass(),
              v25,
              (v26 & 1) == 0))
        {
          uint64_t v27 = [IMSuggestedActionsMessagePartChatItem alloc];
          uint64_t v31 = objc_msgSend_messageItem(v7, v28, v29, v30);
          uint64_t v35 = objc_msgSend_suggestedActionsList(v7, v32, v33, v34);
          uint64_t v37 = objc_msgSend_initWithItem_suggestedActionsList_(v27, v36, (uint64_t)v31, (uint64_t)v35);

          objc_msgSend_addObject_(*(void **)(a1 + 40), v38, (uint64_t)v37, v39);
          objc_msgSend_addIndex_(*(void **)(a1 + 48), v40, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) + v19, v41);
          ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
        }
      }
      uint64_t v42 = [IMRichActionFooterChatItem alloc];
      uint64_t v46 = objc_msgSend_messageItem(v7, v43, v44, v45);
      uint64_t v49 = objc_msgSend__initWithItem_(v42, v47, (uint64_t)v46, v48);

      objc_msgSend_addObject_(*(void **)(a1 + 40), v50, (uint64_t)v49, v51);
      objc_msgSend_addIndex_(*(void **)(a1 + 48), v52, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) + v19, v53);
      ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
    }
    id v6 = v55;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v6);
}

void sub_1A4B9AF4C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend__senderHandle(*(void **)(a1 + 32), a2, a3, a4);
  uint64_t v10 = objc_msgSend_isFromMe(*(void **)(a1 + 32), v7, v8, v9);
  uint64_t v13 = objc_msgSend_containsIndex_(*(void **)(a1 + 40), v11, (uint64_t)a2, v12);
  uint64_t v14 = [IMMessageRetractionChatItem alloc];
  id v16 = objc_msgSend__initWithItem_partIndex_isFailedRetraction_retractionUnsupportedByHandles_sender_isFromMe_(v14, v15, *(void *)(a1 + 32), (uint64_t)a2, v13, *(void *)(a1 + 48), v6, v10);
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x2020000000;
  uint64_t v25 = 0;
  uint64_t v17 = *(void **)(a1 + 56);
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = sub_1A4B9B08C;
  v21[3] = &unk_1E5B7C8E8;
  void v21[4] = &v22;
  void v21[5] = a2;
  objc_msgSend_enumerateObjectsUsingBlock_(v17, v18, (uint64_t)v21, v19);
  objc_msgSend_insertObject_atIndex_(*(void **)(a1 + 64), v20, (uint64_t)v16, v23[3]);
  _Block_object_dispose(&v22, 8);
}

void sub_1A4B9B074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4B9B08C(uint64_t a1, void *a2, uint64_t a3)
{
  id v12 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    unint64_t v8 = objc_msgSend_index(v12, v5, v6, v7);
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_8;
    }
    unint64_t v8 = objc_msgSend_partIndex(v12, v9, v10, v11);
  }
  if (v8 != 0x7FFFFFFFFFFFFFFFLL && v8 < *(void *)(a1 + 40)) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3 + 1;
  }
LABEL_8:
}

void sub_1A4B9B460(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

id sub_1A4B9B478(uint64_t *a1, void *a2)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  id v3 = objc_alloc(MEMORY[0x1E4F1CA48]);
  uint64_t v7 = objc_msgSend_count(v2, v4, v5, v6);
  uint64_t v10 = objc_msgSend_initWithCapacity_(v3, v8, v7, v9);
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id v11 = v2;
  uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v12, (uint64_t)&v42, (uint64_t)v46, 16);
  if (v13)
  {
    uint64_t v17 = v13;
    uint64_t v18 = 0;
    uint64_t v19 = *(void *)v43;
    NSUInteger v20 = -1;
    NSUInteger v21 = -1;
    do
    {
      for (uint64_t i = 0; i != v17; ++i)
      {
        if (*(void *)v43 != v19) {
          objc_enumerationMutation(v11);
        }
        id v23 = *(void **)(*((void *)&v42 + 1) + 8 * i);
        uint64_t v27 = objc_msgSend_transferGUID(v23, v14, v15, v16);
        if (v27) {
          objc_msgSend_addObject_(v10, v24, (uint64_t)v27, v26);
        }
        NSUInteger location = objc_msgSend_messagePartRange(v23, v24, v25, v26);
        v30.NSUInteger location = location;
        v30.length = (NSUInteger)length;
        if (v20 != -1)
        {
          v49.NSUInteger location = v20;
          v49.length = v21;
          NSRange v31 = NSUnionRange(v49, v30);
          length = (const char *)v31.length;
          NSUInteger location = v31.location;
        }
        NSUInteger v20 = location;
        NSUInteger v21 = (NSUInteger)length;
        uint64_t v32 = objc_msgSend_index(v23, length, v30.location, v30.length);
        if (v32 > v18) {
          uint64_t v18 = v32;
        }
      }
      uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v14, (uint64_t)&v42, (uint64_t)v46, 16);
    }
    while (v17);
  }
  else
  {
    uint64_t v18 = 0;
    NSUInteger v20 = -1;
    NSUInteger v21 = -1;
  }

  uint64_t v33 = [IMAggregateAttachmentMessagePartChatItem alloc];
  uint64_t v35 = objc_msgSend__initWithItem_text_index_messagePartRange_transferGUIDs_chatContext_(v33, v34, a1[4], 0, v18, v20, v21, v10, a1[5]);
  objc_msgSend_setChipListFromText_(v35, v36, a1[6], v37);
  objc_msgSend_setAggregateAttachmentParts_(v35, v38, (uint64_t)v11, v39);

  return v35;
}

void sub_1A4B9B68C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = objc_msgSend_count(*(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a2, a3, a4);
  if (v5 <= objc_msgSend__attachmentStackAggregationThreshold(IMMessagePartChatItem, v6, v7, v8))
  {
    if ((unint64_t)objc_msgSend_count(*(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v9, v10, v11) < 2)
    {
      objc_msgSend_addObjectsFromArray_(*(void **)(a1 + 32), v15, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v16);
      goto LABEL_14;
    }
    long long v40 = 0u;
    long long v41 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    id v17 = *(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v17, v18, (uint64_t)&v38, (uint64_t)v42, 16);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = *(void *)v39;
      do
      {
        uint64_t v22 = 0;
        do
        {
          if (*(void *)v39 != v21) {
            objc_enumerationMutation(v17);
          }
          uint64_t v23 = *(void *)(*((void *)&v38 + 1) + 8 * v22);
          uint64_t v24 = [IMOrganicAttachmentMessagePartChatItem alloc];
          uint64_t v27 = objc_msgSend__initWithAttachmentMessagePartChatItem_(v24, v25, v23, v26, (void)v38);
          objc_msgSend_addObject_(*(void **)(a1 + 32), v28, (uint64_t)v27, v29);

          ++v22;
        }
        while (v20 != v22);
        uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v17, v30, (uint64_t)&v38, (uint64_t)v42, 16);
      }
      while (v20);
    }

    id v12 = objc_msgSend_lastObject(*(void **)(a1 + 32), v31, v32, v33);
    objc_msgSend_setChipListFromText_(v12, v34, *(void *)(a1 + 40), v35);
  }
  else
  {
    id v12 = (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    objc_msgSend_addObject_(*(void **)(a1 + 32), v13, (uint64_t)v12, v14);
  }

LABEL_14:
  uint64_t v36 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v37 = *(void **)(v36 + 40);
  *(void *)(v36 + 40) = 0;
}

void sub_1A4B9B868(uint64_t a1, void *a2)
{
  id v62 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = v62;
    uint64_t v7 = objc_msgSend_sharedInstance(IMFileTransferCenter, v4, v5, v6);
    uint64_t v11 = objc_msgSend_transferGUID(v3, v8, v9, v10);
    uint64_t v14 = objc_msgSend_transferForGUID_(v7, v12, (uint64_t)v11, v13);

    LODWORD(v7) = objc_msgSend_existsAtLocalPath(v14, v15, v16, v17);
    uint64_t v21 = objc_msgSend_commSafetySensitive(v14, v18, v19, v20);
    int v25 = 0;
    if (v7 && !v21)
    {
      uint64_t v26 = objc_msgSend_type(v14, v22, v23, v24);
      int IsSupportedAnimatedImage = IMUTTypeIsSupportedAnimatedImage();

      if (IsSupportedAnimatedImage)
      {
        NSRange v31 = objc_msgSend_localURL(v14, v28, v29, v30);
        int v25 = IMFileURLIsActuallyAnimated() ^ 1;
      }
      else
      {
        int v25 = 1;
      }
    }
  }
  else
  {
    int v25 = 0;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0 || !v25)
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    objc_msgSend_addObject_(*(void **)(a1 + 32), v54, (uint64_t)v62, v55);
    goto LABEL_21;
  }
  id v32 = v62;
  uint64_t v36 = objc_msgSend_sharedInstance(IMFileTransferCenter, v33, v34, v35);
  long long v40 = objc_msgSend_transferGUID(v32, v37, v38, v39);
  uint64_t v43 = objc_msgSend_transferForGUID_(v36, v41, (uint64_t)v40, v42);

  uint64_t v47 = objc_msgSend_filename(v43, v44, v45, v46);
  uint64_t v48 = IMUTITypeForFilename();

  if (objc_msgSend_isFromMomentShare(v43, v49, v50, v51))
  {
    IMUTITypeIsSupportedByPhotos();
  }
  else
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    if ((IMUTITypeIsSupportedByPhotos() & 1) == 0 && (isKindOfClass & 1) == 0)
    {
      uint64_t v57 = (void **)(a1 + 32);
LABEL_19:
      id v58 = *v57;
      goto LABEL_20;
    }
  }
  id v58 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (!v58)
  {
    id v59 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v60 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v61 = *(void **)(v60 + 40);
    *(void *)(v60 + 40) = v59;

    uint64_t v57 = (void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    goto LABEL_19;
  }
LABEL_20:
  objc_msgSend_addObject_(v58, v52, (uint64_t)v32, v53);

LABEL_21:
}

void *sub_1A4B9BD90()
{
  Class result = (void *)MEMORY[0x1A6263B50]("UTTypeConformsTo", @"CoreServices");
  off_1E965E898 = result;
  return result;
}

id sub_1A4B9C134(uint64_t a1, void *a2, void *a3, char a4, void *a5)
{
  id v52 = a5;
  id v51 = a3;
  id v8 = a2;
  id v12 = objc_msgSend_account(v8, v9, v10, v11);
  uint64_t v13 = _IMBestAccountForIMItem(v8, 0, v12, 0, 0);

  uint64_t v53 = v13;
  IMMessageFromIMIteuint64_t m = (void *)_CreateIMMessageFromIMItem(v8, v13, 1);

  uint64_t v15 = [IMMessage alloc];
  uint64_t v19 = objc_msgSend_sender(IMMessageFromIMItem, v16, v17, v18);
  uint64_t v26 = objc_msgSend_time(IMMessageFromIMItem, v20, v21, v22);
  char v54 = a4;
  if (a4)
  {
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = objc_msgSend_messageSubject(IMMessageFromIMItem, v23, v24, v25);
  }
  uint64_t v27 = objc_msgSend_flags(IMMessageFromIMItem, v23, v24, v25);
  NSRange v31 = objc_msgSend_error(IMMessageFromIMItem, v28, v29, v30);
  uint64_t v35 = objc_msgSend_guid(IMMessageFromIMItem, v32, v33, v34);
  uint64_t v39 = objc_msgSend_subject(IMMessageFromIMItem, v36, v37, v38);
  uint64_t v43 = objc_msgSend_threadIdentifier(IMMessageFromIMItem, v40, v41, v42);
  uint64_t v45 = objc_msgSend_initWithSender_time_text_messageSubject_fileTransferGUIDs_flags_error_guid_subject_threadIdentifier_(v15, v44, (uint64_t)v19, (uint64_t)v26, v51, v55, v52, v27, v31, v35, v39, v43);

  if ((v54 & 1) == 0) {
  NSRange v49 = objc_msgSend__imMessageItem(v45, v46, v47, v48);
  }

  return v49;
}

void sub_1A4B9C830(uint64_t a1, void *a2)
{
  id v3 = (objc_class *)MEMORY[0x1E4F6E690];
  id v4 = a2;
  id v5 = [v3 alloc];
  id v14 = (id)objc_msgSend_initWithDictionary_(v5, v6, (uint64_t)v4, v7);

  uint64_t v11 = objc_msgSend_suggestedActions(v14, v8, v9, v10);
  objc_msgSend_setSuggestedActionsList_(*(void **)(a1 + 32), v12, (uint64_t)v11, v13);
}

void sub_1A4B9D10C()
{
  if (IMIsRunningInUnitTesting())
  {
    byte_1E965E8B0 = 1;
  }
  else
  {
    id v0 = (void *)MEMORY[0x1A6263B40](@"AFPreferences", @"AssistantServices");
    objc_msgSend_sharedPreferences(v0, v1, v2, v3);
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    byte_1E965E8B0 = objc_msgSend_assistantIsEnabled(v7, v4, v5, v6);
  }
}

id IMCreateThreadIdentifierForMessagePartChatItem(void *a1)
{
  id v1 = a1;
  uint64_t v5 = objc_msgSend_message(v1, v2, v3, v4);
  uint64_t v9 = objc_msgSend_guid(v5, v6, v7, v8);

  uint64_t v13 = objc_msgSend_index(v1, v10, v11, v12);
  uint64_t v17 = objc_msgSend_originalMessagePartRange(v1, v14, v15, v16);
  uint64_t v19 = v18;

  uint64_t v20 = IMCreateThreadIdentifier(v9, v13, v17, v19);

  return v20;
}

id IMCreateThreadIdentifier(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (objc_class *)NSString;
  id v8 = a1;
  id v9 = [v7 alloc];
  uint64_t v12 = objc_msgSend_initWithFormat_(v9, v10, @"r:%lu:%lu:%lu:%@", v11, a2, a3, a4, v8);

  return v12;
}

id IMCreateThreadIdentifierForRetractedMessagePartChatItem(void *a1)
{
  id v1 = a1;
  uint64_t v5 = objc_msgSend_messageGUID(v1, v2, v3, v4);
  uint64_t v9 = objc_msgSend_partIndex(v1, v6, v7, v8);

  uint64_t v10 = IMCreateThreadIdentifier(v5, v9, 0x7FFFFFFFFFFFFFFFLL, 0);

  return v10;
}

void sub_1A4B9DB74(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4B9DB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a5 = 1;
  }
  return result;
}

uint64_t sub_1A4B9DC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a5 = 1;
  }
  return result;
}

id sub_1A4BA5C3C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_indexSet(MEMORY[0x1E4F28E60], v5, v6, v7);
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = sub_1A4BA5D18;
  v15[3] = &unk_1E5B7CA40;
  id v16 = v4;
  id v9 = v8;
  id v17 = v9;
  id v10 = v4;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(a1, v11, 2, (uint64_t)v15);
  uint64_t v12 = v17;
  id v13 = v9;

  return v13;
}

void sub_1A4BA5D18(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v14 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v10 = objc_msgSend_message(v14, v7, v8, v9);
    uint64_t v11 = *(void **)(a1 + 32);

    if (v10 == v11) {
      objc_msgSend_addIndex_(*(void **)(a1 + 40), v12, a3, v13);
    }
  }
  else if (objc_msgSend_count(*(void **)(a1 + 40), v7, v8, v9))
  {
    *a4 = 1;
  }
}

id sub_1A4BA5DCC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_indexSet(MEMORY[0x1E4F28E60], v5, v6, v7);
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = sub_1A4BA5EA8;
  v15[3] = &unk_1E5B7CA40;
  id v16 = v4;
  id v9 = v8;
  id v17 = v9;
  id v10 = v4;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(a1, v11, 2, (uint64_t)v15);
  uint64_t v12 = v17;
  id v13 = v9;

  return v13;
}

void sub_1A4BA5EA8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v17 = a2;
  id v10 = objc_msgSend__item(v17, v7, v8, v9);
  uint64_t v11 = *(void **)(a1 + 32);

  if (v10 == v11)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      objc_msgSend_addIndex_(*(void **)(a1 + 40), v15, a3, v16);
    }
  }
  else if (objc_msgSend_count(*(void **)(a1 + 40), v12, v13, v14))
  {
    *a4 = 1;
  }
}

void sub_1A4BA7A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4BA7AA8(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v7 = a3;
  if (IMMessagePartDescriptionGetMessagePartIndex() == *(void *)(a1 + 40))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
    *a4 = 1;
  }
}

void sub_1A4BA7FF4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t sub_1A4BA8A1C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  if (objc_msgSend_checkResourceIsReachableAndReturnError_(v9, v10, a5, v11)
    && !objc_msgSend_removeItemAtURL_error_(a1, v12, (uint64_t)v9, a5))
  {
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x1A6263CE0](v8);
    if (v16)
    {
      objc_msgSend_startAccessingSecurityScopedResource(v8, v13, v14, v15);
      uint64_t v18 = objc_msgSend_copyItemAtURL_toURL_error_(a1, v17, (uint64_t)v8, (uint64_t)v9, a5);
      objc_msgSend_stopAccessingSecurityScopedResource(v8, v19, v20, v21);
    }
    else
    {
      uint64_t v18 = objc_msgSend_copyItemAtURL_toURL_error_(a1, v13, (uint64_t)v8, (uint64_t)v9, a5);
    }
  }
  return v18;
}

void sub_1A4BA91B4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BA90ACLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BAA570(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "clearing in memory salt cache due to dispatch notification", v13, 2u);
    }
  }
  uint64_t v6 = objc_msgSend_model(*(void **)(a1 + 32), v2, v3, v4);
  id v10 = objc_msgSend_dictionary(MEMORY[0x1E4F1C9E8], v7, v8, v9);
  objc_msgSend_setPluginIDToMetadataCache_(v6, v11, (uint64_t)v10, v12);
}

void sub_1A4BACAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4BACAFC(uint64_t a1, void *a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v6 = objc_msgSend_objectForKey_(*(void **)(a1 + 32), v4, (uint64_t)v3, v5);
  if (objc_msgSend_length(v6, v7, v8, v9))
  {
    uint64_t v13 = objc_msgSend_model(*(void **)(a1 + 40), v10, v11, v12);
    id v17 = objc_msgSend_pluginsMap(v13, v14, v15, v16);
    uint64_t v20 = objc_msgSend_pluginForIdentifier_(v17, v18, (uint64_t)v6, v19);

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v21, (uint64_t)v6, v22);
      if (IMOSLoggingEnabled())
      {
        uint64_t v23 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
        {
          int v24 = 138412290;
          uint64_t v25 = v20;
          _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Removing plugin: %@", (uint8_t *)&v24, 0xCu);
        }
      }
    }
  }
}

uint64_t sub_1A4BAD1BC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  id v5 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v8 = 138412546;
      id v9 = v4;
      __int16 v10 = 2112;
      id v11 = v5;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Couldn't enumerate %@: %@", (uint8_t *)&v8, 0x16u);
    }
  }
  return 1;
}

void sub_1A4BADD90(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    IMLogHandleForCategory();
    id v4 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB7E3C(v3, v4, v5, v6);
    }
  }
  else
  {
    if (_IMWillLog()) {
      _IMAlwaysLog();
    }
    __int16 v10 = objc_msgSend_messagesAppDomain(MEMORY[0x1E4F1CB18], v7, v8, v9);
    objc_msgSend_setInteger_forKey_(v10, v11, *(void *)(a1 + 32) + 1, *MEMORY[0x1E4F6E428]);
  }
}

uint64_t sub_1A4BAE348()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28D48]);
  uint64_t v1 = qword_1E965E8E0;
  qword_1E965E8E0 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

id IMSPISimulateMessages(void *a1, void *a2)
{
  id v3 = a1;
  id v7 = objc_msgSend_sharedController(IMDaemonController, v4, v5, v6);
  uint64_t v9 = objc_msgSend_multiplexedConnectionWithLabel_capabilities_context_(v7, v8, @"IMCoreSPI_HasActiveAlias", 8708, 0);

  objc_msgSend_waitForSetup(v9, v10, v11, v12);
  uint64_t v15 = objc_msgSend_arrayByApplyingSelector_(v3, v13, (uint64_t)sel__createSimulatedMessage, v14);
  uint64_t v30 = 0;
  NSRange v31 = &v30;
  uint64_t v32 = 0x3032000000;
  uint64_t v33 = sub_1A4B344EC;
  uint64_t v34 = sub_1A4B3435C;
  id v35 = 0;
  uint64_t v19 = objc_msgSend_synchronousRemoteProxy(v9, v16, v17, v18);
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 3221225472;
  v29[2] = sub_1A4BAECD0;
  v29[3] = &unk_1E5B7CD28;
  v29[4] = &v30;
  objc_msgSend_simulateMessages_completion_(v19, v20, (uint64_t)v15, (uint64_t)v29);

  objc_msgSend_invalidate(v9, v21, v22, v23);
  if (a2 && (uint64_t v26 = (void *)v31[5]) != 0)
  {
    uint64_t v27 = 0;
    *a2 = v26;
  }
  else
  {
    uint64_t v27 = objc_msgSend_arrayByApplyingSelector_(v15, v24, (uint64_t)sel_guid, v25);
  }
  _Block_object_dispose(&v30, 8);

  return v27;
}

void sub_1A4BAECB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4BAECD0(uint64_t a1, void *a2)
{
}

void IMResetJunkiMessageFilteringState()
{
  qword_1EB3F1DE0 = -1;
}

unint64_t FZPersonStatusFromIMPersonStatus(unint64_t result, const char *a2)
{
  if (result >= 6)
  {
    objc_msgSend_raise_format_(MEMORY[0x1E4F1CA00], a2, *MEMORY[0x1E4F1C3C8], @"IMServiceImpl: Unknown IMPersonStatus %d", result);
    return 0;
  }
  return result;
}

uint64_t IMPersonStatusFromFZPersonStatus(uint64_t result, const char *a2)
{
  if (result < 6) {
    return result;
  }
  objc_msgSend_raise_format_(MEMORY[0x1E4F1CA00], a2, *MEMORY[0x1E4F1C3C8], @"IMServiceImpl: Unknown FZPersonStatus %d", result);
  return 0;
}

void sub_1A4BAEE0C(uint64_t a1, const char *a2)
{
  void v6[4] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *MEMORY[0x1E4F1AF00];
  v6[0] = *MEMORY[0x1E4F1AEF8];
  v6[1] = v2;
  uint64_t v3 = *MEMORY[0x1E4F1AF08];
  v6[2] = *MEMORY[0x1E4F1AEF0];
  v6[3] = v3;
  uint64_t v4 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], a2, (uint64_t)v6, 4);
  uint64_t v5 = (void *)qword_1E965DD78;
  qword_1E965DD78 = v4;
}

void sub_1A4BB02F0(uint64_t a1, void *a2)
{
  v24[1] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained && objc_msgSend_length(v3, v4, v5, v6))
  {
    objc_msgSend_setSuggestedName_(WeakRetained, v8, (uint64_t)v3, v9);
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v23 = *MEMORY[0x1E4F6CA90];
    v24[0] = v10;
    uint64_t v12 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v11, (uint64_t)v24, (uint64_t)&v23, 1);
    uint64_t v16 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v13, v14, v15);
    objc_msgSend_postNotificationName_object_userInfo_(v16, v17, *MEMORY[0x1E4F6CA98], *(void *)(a1 + 40), v12);

    uint64_t v21 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v18, v19, v20);
    objc_msgSend_postNotificationName_object_userInfo_(v21, v22, *MEMORY[0x1E4F6CA60], *(void *)(a1 + 40), v12);
  }
}

void sub_1A4BB1198(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_setCachedDisplayNameWithAbbreviation_(WeakRetained, v4, 0, v5);

  id v6 = objc_loadWeakRetained(v2);
  int isBusiness = objc_msgSend_isBusiness(v6, v7, v8, v9);

  id v11 = objc_loadWeakRetained(v2);
  uint64_t v15 = v11;
  if (isBusiness)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4F6E628];
    uint64_t v17 = objc_msgSend_ID(*(void **)(a1 + 32), v12, v13, v14);
    uint64_t v20 = objc_msgSend_placeholderNameForBrandURI_(v16, v18, (uint64_t)v17, v19);
    objc_msgSend_setCachedName_(v15, v21, (uint64_t)v20, v22);
  }
  else
  {
    objc_msgSend_setCachedName_(v11, v12, 0, v14);
  }

  objc_msgSend_sharedInstance(IMHandleRegistrar, v23, v24, v25);
  id v28 = (id)objc_claimAutoreleasedReturnValue();
  id v26 = objc_loadWeakRetained(v2);
  objc_msgSend_addHandleToCNIDMap_CNContact_(v28, v27, (uint64_t)v26, *(void *)(a1 + 40));
}

void sub_1A4BB459C(uint64_t a1, int a2, int a3, int a4, void *a5)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v9 = a5;
  if (v9)
  {
    uint64_t v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB7ED4((uint64_t)v9, v10);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v11 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v15 = objc_msgSend_ID(*(void **)(a1 + 32), v12, v13, v14);
      uint64_t v16 = *(void *)(a1 + 40);
      int v17 = 138413314;
      uint64_t v18 = v15;
      __int16 v19 = 2112;
      uint64_t v20 = v16;
      __int16 v21 = 1024;
      int v22 = a2;
      __int16 v23 = 1024;
      int v24 = a3;
      __int16 v25 = 1024;
      int v26 = a4;
      _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_DEBUG, "Completed request to share off grid mode with handle %@ from handle %@. didAttemptInvitation: %{BOOL}d wasAlreadyInvited: %{BOOL}d didShareHandle: %{BOOL}d", (uint8_t *)&v17, 0x28u);
    }
  }
}

void sub_1A4BB4B1C(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, void *a6)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v11 = a6;
  if (v11)
  {
    uint64_t v12 = IMLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB7F4C((uint64_t)v11, v12);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v13 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      int v17 = objc_msgSend_ID(*(void **)(a1 + 32), v14, v15, v16);
      uint64_t v18 = *(void *)(a1 + 40);
      int v19 = 138413570;
      uint64_t v20 = v17;
      __int16 v21 = 2112;
      uint64_t v22 = v18;
      __int16 v23 = 2048;
      uint64_t v24 = a2;
      __int16 v25 = 2048;
      uint64_t v26 = a3;
      __int16 v27 = 2048;
      uint64_t v28 = a4;
      __int16 v29 = 2048;
      uint64_t v30 = a5;
      _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_DEBUG, "Completed request to share availbaility with handle %@ from handle %@. didAttemptInvitation: %ld wasAlreadyInvited: %ld canShareHandle: %ld didShareHandle: %ld", (uint8_t *)&v19, 0x3Eu);
    }
  }
}

void sub_1A4BB63F0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v8)
    {
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        uint64_t v11 = *(void *)(a1 + 32);
        int v14 = 138412290;
        uint64_t v15 = v11;
        _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Error getting brand for business with brandURI: %@", (uint8_t *)&v14, 0xCu);
      }
    }
  }
  else
  {
    if (v8)
    {
      uint64_t v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v13 = *(void *)(a1 + 32);
        int v14 = 138412290;
        uint64_t v15 = v13;
        _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_DEBUG, "Successfully fetched business info for business with brandURI: %@", (uint8_t *)&v14, 0xCu);
      }
    }
    objc_msgSend__fetchedBrand_withBrandURI_(WeakRetained, v9, (uint64_t)v5, *(void *)(a1 + 32));
  }
}

void sub_1A4BB668C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v14 = WeakRetained;
    id v5 = objc_msgSend_sharedInstance(IMChorosMonitor, v2, v3, v4);
    id v9 = objc_msgSend_ID(v14, v6, v7, v8);
    uint64_t v12 = objc_msgSend_roadsideBusinessIDForChatIdentifier_(v5, v10, (uint64_t)v9, v11);

    if (v12) {
      objc_msgSend__fetchBrandInfoForBrandWithURI_forType_(v14, v13, (uint64_t)v12, 1);
    }

    id WeakRetained = v14;
  }
}

void sub_1A4BB6B38(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v8)
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int v15 = 138412290;
        uint64_t v16 = v12;
        _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Error getting square logo data for business with brandURI: %@", (uint8_t *)&v15, 0xCu);
      }
    }
  }
  else
  {
    if (v8)
    {
      uint64_t v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        int v15 = 138412290;
        uint64_t v16 = v14;
        _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_DEBUG, "Successfully fetched logo image data for brandURI: %@", (uint8_t *)&v15, 0xCu);
      }
    }
    objc_msgSend_setBrandSquareLogoImageData_(WeakRetained, v9, (uint64_t)v5, v10);
  }
  objc_msgSend__postOnScreenChangedNotificationForBrandProperty_(WeakRetained, v9, *MEMORY[0x1E4F6CA70], v10);
}

void sub_1A4BB6CE0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v8)
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int v15 = 138412290;
        uint64_t v16 = v12;
        _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Error getting square logo data for business with brandURI: %@", (uint8_t *)&v15, 0xCu);
      }
    }
  }
  else
  {
    if (v8)
    {
      uint64_t v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        int v15 = 138412290;
        uint64_t v16 = v14;
        _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_DEBUG, "Successfully fetched square logo image data for business with brandURI: %@", (uint8_t *)&v15, 0xCu);
      }
    }
    objc_msgSend_setBrandSquareLogoImageData_(WeakRetained, v9, (uint64_t)v5, v10);
  }
  objc_msgSend__postOnScreenChangedNotificationForBrandProperty_(WeakRetained, v9, *MEMORY[0x1E4F6CA70], v10);
}

void sub_1A4BB6E88(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = IMOSLoggingEnabled();
  if (v6)
  {
    if (v8)
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int v15 = 138412290;
        uint64_t v16 = v12;
        _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Error getting wide logo image data for business with brandURI: %@", (uint8_t *)&v15, 0xCu);
      }
    }
  }
  else
  {
    if (v8)
    {
      uint64_t v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        int v15 = 138412290;
        uint64_t v16 = v14;
        _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_DEBUG, "Successfully fetched wide logo image data for business with brandURI: %@", (uint8_t *)&v15, 0xCu);
      }
    }
    objc_msgSend_setBrandWideLogoImageData_(WeakRetained, v9, (uint64_t)v5, v10);
  }
  objc_msgSend__postOnScreenChangedNotificationForBrandProperty_(WeakRetained, v9, *MEMORY[0x1E4F6CA78], v10);
}

void sub_1A4BB7C14(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)MEMORY[0x1E4F28C58];
  id v4 = a2;
  objc_msgSend_errorWithDomain_code_userInfo_(v3, v5, @"com.apple.Messages.IMDaemonQueryErrorDomain", 1, 0);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_failQuery_error_(v2, v6, (uint64_t)v4, (uint64_t)v7);
}

void sub_1A4BB90B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A4BBA4CC()
{
  if (IMIsRunningInPhotosPersistenceDependentClient())
  {
    id v0 = objc_alloc_init(IMPhotoLibraryPersistenceManager);
    uint64_t v1 = qword_1EB3F2478;
    qword_1EB3F2478 = (uint64_t)v0;
    MEMORY[0x1F41817F8](v0, v1);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Not allowing IMPhotoLibraryPersistenceManager to be created.", v3, 2u);
    }
  }
}

void sub_1A4BBA6C4()
{
  uint64_t v2 = dispatch_queue_attr_make_with_qos_class(MEMORY[0x1E4F14430], QOS_CLASS_DEFAULT, 0);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.messages.IMPhotoLibraryPersistenceManager", v2);
  uint64_t v1 = (void *)qword_1E965DE08;
  qword_1E965DE08 = (uint64_t)v0;
}

void sub_1A4BBA784()
{
  uint64_t v2 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.messages.IMPhotoLibraryPersistenceManagerInternalQueue", v2);
  uint64_t v1 = (void *)qword_1E965DDB0;
  qword_1E965DDB0 = (uint64_t)v0;
}

void sub_1A4BBA9FC(uint64_t a1, void *a2)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v7 = v3;
  if (IMFileTransferGUIDIsTemporary())
  {
    objc_msgSend_messageParts(*(void **)(a1 + 32), v4, v5, v6);
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v9, (uint64_t)&v28, (uint64_t)v32, 16);
    if (v10)
    {
      uint64_t v14 = v10;
      uint64_t v15 = *(void *)v29;
      while (2)
      {
        for (uint64_t i = 0; i != v14; ++i)
        {
          if (*(void *)v29 != v15) {
            objc_enumerationMutation(v8);
          }
          uint64_t v17 = *(void **)(*((void *)&v28 + 1) + 8 * i);
          uint64_t v18 = objc_msgSend_transferGUID(v17, v11, v12, v13, (void)v28);
          if (objc_msgSend_isEqualToString_(v18, v19, (uint64_t)v3, v20))
          {
            objc_msgSend_messagePartIndex(v17, v21, v22, v23);

            goto LABEL_12;
          }
        }
        uint64_t v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v11, (uint64_t)&v28, (uint64_t)v32, 16);
        if (v14) {
          continue;
        }
        break;
      }
    }
LABEL_12:

    __int16 v27 = objc_msgSend_guid(*(void **)(a1 + 32), v24, v25, v26);
    id v7 = IMFileTransferGUIDForAttachmentMessagePartAtMessageGUIDAndMessagePartIndex();
  }
  objc_msgSend_addObject_(*(void **)(a1 + 40), v4, (uint64_t)v7, v6, (void)v28);
}

void sub_1A4BBB3F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    id v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v9;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Finished fetching identifiers that weren't cached. Notifying listeners. identifiersNeedingFetch: %@", (uint8_t *)&v10, 0xCu);
    }
  }
  objc_msgSend__notifyListeners(*(void **)(a1 + 40), v5, v6, v7);
}

void sub_1A4BBB624(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A4BBBB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&v49, 8);
  _Block_object_dispose(&v50, 8);
  JUMPOUT(0x1A4BBBBCCLL);
}

void sub_1A4BBBB70()
{
  objc_sync_exit(v0);
  _Block_object_dispose(&v1, 8);
  _Block_object_dispose(&v2, 8);
  JUMPOUT(0x1A4BBBBCCLL);
}

id sub_1A4BBBBD4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2050000000;
  id v4 = (void *)qword_1E965DE38;
  uint64_t v11 = qword_1E965DE38;
  if (!qword_1E965DE38)
  {
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = sub_1A4BBCA74;
    v7[3] = &unk_1E5B7C7B8;
    void v7[4] = &v8;
    sub_1A4BBCA74((uint64_t)v7, a2, a3, a4);
    id v4 = (void *)v9[3];
  }
  id v5 = v4;
  _Block_object_dispose(&v8, 8);

  return v5;
}

void sub_1A4BBBCA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4BBBCB8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend__openPhotoLibraryIfNecessary(*(void **)(a1 + 32), a2, a3, a4);
  id v9 = sub_1A4BBBF70(v5, v6, v7, v8);
  uint64_t v13 = objc_msgSend_sharedPhotoLibrary(v9, v10, v11, v12);
  uint64_t v63 = objc_msgSend_librarySpecificFetchOptions(v13, v14, v15, v16);

  objc_msgSend_setIncludeTrashedAssets_(v63, v17, 0, v18);
  objc_msgSend_setIncludeHiddenAssets_(v63, v19, 1, v20);
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  id obj = *(id *)(a1 + 40);
  uint64_t v22 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v21, (uint64_t)&v64, (uint64_t)v69, 16);
  uint64_t v26 = v22;
  if (v22)
  {
    uint64_t v27 = *(void *)v65;
    do
    {
      uint64_t v28 = 0;
      do
      {
        if (*(void *)v65 != v27) {
          objc_enumerationMutation(obj);
        }
        uint64_t v29 = *(void *)(*((void *)&v64 + 1) + 8 * v28);
        id v30 = sub_1A4BBBBD4(v22, v23, v24, v25);
        uint64_t v68 = v29;
        uint64_t v32 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v31, (uint64_t)&v68, 1);
        uint64_t v34 = objc_msgSend_fetchAssetsWithSyndicationIdentifiers_options_includeRejected_(v30, v33, (uint64_t)v32, (uint64_t)v63, 1);

        uint64_t v41 = objc_msgSend_count(v34, v35, v36, v37);
        if (v41) {
          ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
        }
        uint64_t v42 = objc_msgSend_firstObject(v34, v38, v39, v40);
        uint64_t v46 = objc_msgSend_uuid(v42, v43, v44, v45);

        uint64_t v47 = *(void *)(*(void *)(a1 + 64) + 8);
        uint64_t v49 = *(void *)(v47 + 40);
        uint64_t v48 = (id *)(v47 + 40);
        if (v49) {
          BOOL v50 = 1;
        }
        else {
          BOOL v50 = v46 == 0;
        }
        if (!v50) {
          objc_storeStrong(v48, v46);
        }
        BOOL v51 = v41 != 0;
        id v52 = *(id *)(a1 + 32);
        objc_sync_enter(v52);
        uint64_t v53 = *(void **)(*(void *)(a1 + 32) + 24);
        uint64_t v56 = objc_msgSend_numberWithBool_(NSNumber, v54, v51, v55);
        objc_msgSend_setObject_forKey_(v53, v57, (uint64_t)v56, v29);

        objc_msgSend_setObject_forKey_(*(void **)(*(void *)(a1 + 32) + 32), v58, (uint64_t)v34, v29);
        objc_msgSend_removeObject_(*(void **)(*(void *)(a1 + 32) + 48), v59, v29, v60);
        if (v46) {
          objc_msgSend_setObject_forKey_(*(void **)(*(void *)(a1 + 32) + 40), v61, (uint64_t)v46, v29);
        }
        objc_sync_exit(v52);

        ++v28;
      }
      while (v26 != v28);
      uint64_t v22 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v23, (uint64_t)&v64, (uint64_t)v69, 16);
      uint64_t v26 = v22;
    }
    while (v22);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_1A4BBBF54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1A4BBBF70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  id v9 = &v8;
  uint64_t v10 = 0x2050000000;
  id v4 = (void *)qword_1E965E590;
  uint64_t v11 = qword_1E965E590;
  if (!qword_1E965E590)
  {
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = sub_1A4BBCC34;
    v7[3] = &unk_1E5B7C7B8;
    void v7[4] = &v8;
    sub_1A4BBCC34((uint64_t)v7, a2, a3, a4);
    id v4 = (void *)v9[3];
  }
  id v5 = v4;
  _Block_object_dispose(&v8, 8);

  return v5;
}

void sub_1A4BBC03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A4BBC054(void *result)
{
  *(void *)(*(void *)(result[5] + 8) + 24) += *(void *)(*(void *)(result[6] + 8) + 24);
  uint64_t v1 = result[4];
  if (v1) {
    return (void *)(*(uint64_t (**)(void, void, void))(v1 + 16))(result[4], *(void *)(*(void *)(result[5] + 8) + 24), *(void *)(*(void *)(result[7] + 8) + 40));
  }
  return result;
}

void sub_1A4BBC538(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend__openPhotoLibraryIfNecessary(*(void **)(a1 + 32), a2, a3, a4);
  uint64_t v5 = IMOSLoggingEnabled();
  if (v5)
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Registering IMPhotoLibraryPersistenceManager as a sharedPhotoLibrary change observer", v17, 2u);
    }
  }
  id v10 = sub_1A4BBBF70(v5, v6, v7, v8);
  uint64_t v14 = objc_msgSend_sharedPhotoLibrary(v10, v11, v12, v13);
  objc_msgSend_registerChangeObserver_(v14, v15, *(void *)(a1 + 32), v16);
}

uint64_t sub_1A4BBC5F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__openPhotoLibraryIfNecessary(*(void **)(a1 + 32), a2, a3, a4);
}

uint64_t sub_1A4BBC690(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Received photoLibraryDidChange: notification", v8, 2u);
    }
  }
  uint64_t result = objc_msgSend__invalidateCacheDueToChanges_(*(void **)(a1 + 32), v2, *(void *)(a1 + 40), v3);
  if (result)
  {
    objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(MEMORY[0x1E4FBA8A8], v6, *(void *)(a1 + 32), (uint64_t)sel__notifyListeners, 0);
    return objc_msgSend_performSelector_withObject_afterDelay_(*(void **)(a1 + 32), v7, (uint64_t)sel__notifyListeners, 0, 0.25);
  }
  return result;
}

Class sub_1A4BBCA74(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  sub_1A4BBCACC(a1, a2, a3, a4);
  Class result = objc_getClass("PHAsset");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1A4CB8108((uint64_t)result, v6, v7, v8);
  }
  qword_1E965DE38 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A4BBCACC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!qword_1E965E5A0)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    v4[2] = (void *)3221225472;
    v4[3] = sub_1A4BBCBC0;
    v4[4] = &unk_1E5B7B2A8;
    void v4[5] = v4;
    long long v5 = xmmword_1E5B7D008;
    uint64_t v6 = 0;
    qword_1E965E5A0 = _sl_dlopen();
  }
  if (!qword_1E965E5A0) {
    sub_1A4CB8184(v4, a2, a3, a4);
  }
  if (v4[0]) {
    free(v4[0]);
  }
}

uint64_t sub_1A4BBCBC0()
{
  uint64_t result = _sl_dlopen();
  qword_1E965E5A0 = result;
  return result;
}

Class sub_1A4BBCC34(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  sub_1A4BBCACC(a1, a2, a3, a4);
  Class result = objc_getClass("PHPhotoLibrary");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1A4CB8204((uint64_t)result, v6, v7, v8);
  }
  qword_1E965E590 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A4BBCCE0()
{
  dispatch_queue_t v0 = objc_alloc_init(IMLocationManagerUtils);
  uint64_t v1 = qword_1EB3F2528;
  qword_1EB3F2528 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4BBD048(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Authorized to send out location.", v14, 2u);
    }
  }
  objc_msgSend_setCurrentLocationGUID_(*(void **)(a1 + 32), v2, *(void *)(a1 + 40), v3);
  uint64_t v6 = objc_msgSend_locatingMessageWithGuid_error_(IMMessage, v5, *(void *)(a1 + 40), 0);
  if (objc_msgSend_length(*(void **)(a1 + 48), v7, v8, v9)) {
    objc_msgSend_setSourceApplicationID_(v6, v10, *(void *)(a1 + 48), v11);
  }
  sub_1A4BBD154(*(void **)(a1 + 32), v6);
  objc_msgSend__sendMessage_adjustingSender_shouldQueue_(*(void **)(a1 + 32), v12, (uint64_t)v6, 1, 1);
  uint64_t v13 = *(void *)(a1 + 56);
  if (v13) {
    (*(void (**)(uint64_t, void *))(v13 + 16))(v13, v6);
  }
}

void sub_1A4BBD154(void *a1, void *a2)
{
  id v50 = a1;
  id v3 = a2;
  uint64_t v7 = objc_msgSend_inlineReplyController(v50, v4, v5, v6);
  if (v7)
  {
    uint64_t v11 = (void *)v7;
    uint64_t v12 = objc_msgSend_inlineReplyController(v50, v8, v9, v10);
    uint64_t v16 = objc_msgSend_threadIdentifier(v12, v13, v14, v15);

    if (v16)
    {
      uint64_t v17 = objc_msgSend_inlineReplyController(v50, v8, v9, v10);
      __int16 v21 = objc_msgSend_threadIdentifier(v17, v18, v19, v20);
      objc_msgSend_setThreadIdentifier_(v3, v22, (uint64_t)v21, v23);
    }
  }
  uint64_t v24 = objc_msgSend_inlineReplyController(v50, v8, v9, v10);
  if (v24)
  {
    uint64_t v28 = (void *)v24;
    uint64_t v29 = objc_msgSend_inlineReplyController(v50, v25, v26, v27);
    uint64_t v33 = objc_msgSend_threadOriginator(v29, v30, v31, v32);

    if (v33)
    {
      uint64_t v37 = objc_msgSend_inlineReplyController(v50, v34, v35, v36);
      uint64_t v41 = objc_msgSend_threadOriginator(v37, v38, v39, v40);

      uint64_t v45 = objc_msgSend_account(v41, v42, v43, v44);
      uint64_t v46 = _IMBestAccountForIMItem(v41, 0, v45, 0, 0);

      IMMessageFromIMIteuint64_t m = (void *)_CreateIMMessageFromIMItem(v41, v46, 1);
      objc_msgSend_setThreadOriginator_(v3, v48, (uint64_t)IMMessageFromIMItem, v49);
    }
  }
}

void sub_1A4BBD2DC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v91 = *MEMORY[0x1E4F143B8];
  id v79 = a2;
  id v80 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v90 = v80;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Update current location complete with error: %@", buf, 0xCu);
    }
  }
  if (!v80)
  {
    uint64_t v27 = objc_msgSend_account(*(void **)(a1 + 32), v4, v5, v6);
    uint64_t v31 = objc_msgSend_service(v27, v28, v29, v30);
    uint64_t v35 = objc_msgSend_iMessageService(IMServiceImpl, v32, v33, v34);

    uint64_t v39 = objc_msgSend_lastAddressedHandleID(*(void **)(a1 + 32), v36, v37, v38);
    uint64_t v43 = objc_msgSend_lastAddressedSIMID(*(void **)(a1 + 32), v40, v41, v42);
    int v45 = objc_msgSend_mmsEnabledforPhoneNumber_simID_(IMServiceImpl, v44, (uint64_t)v39, (uint64_t)v43);

    if (((v31 == v35) | v45) == 1)
    {
      if (v31 == v35) {
        uint64_t v47 = 1;
      }
      else {
        uint64_t v47 = 3;
      }
      uint64_t v10 = objc_msgSend_messageWithLocation_flags_error_guid_(IMMessage, v46, (uint64_t)v79, 5, 0, *(void *)(a1 + 40));
    }
    else
    {
      uint64_t v10 = objc_msgSend_textMessageWithLocation_flags_error_guid_(IMMessage, v46, (uint64_t)v79, 5, 0, *(void *)(a1 + 40));
      uint64_t v47 = 2;
    }
    uint64_t v87 = *MEMORY[0x1E4F6D8D8];
    id v50 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v48, v47, v49);
    BOOL v88 = v50;
    uint64_t v24 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v51, (uint64_t)&v88, (uint64_t)&v87, 1);

    uint64_t v55 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E890], v52, v53, v54);
    objc_msgSend_trackEvent_withDictionary_(v55, v56, *MEMORY[0x1E4F6D8D0], (uint64_t)v24);

    if (objc_msgSend_length(*(void **)(a1 + 48), v57, v58, v59)) {
      objc_msgSend_setSourceApplicationID_(v10, v60, *(void *)(a1 + 48), v62);
    }
    uint64_t v63 = objc_msgSend_account(*(void **)(a1 + 32), v60, v61, v62);
    long long v84 = 0u;
    long long v85 = 0u;
    long long v82 = 0u;
    long long v83 = 0u;
    long long v67 = objc_msgSend_fileTransferGUIDs(v10, v64, v65, v66);
    uint64_t v72 = objc_msgSend_countByEnumeratingWithState_objects_count_(v67, v68, (uint64_t)&v82, (uint64_t)v86, 16);
    if (v72)
    {
      uint64_t v73 = *(void *)v83;
      do
      {
        for (uint64_t i = 0; i != v72; ++i)
        {
          if (*(void *)v83 != v73) {
            objc_enumerationMutation(v67);
          }
          uint64_t v75 = *(void *)(*((void *)&v82 + 1) + 8 * i);
          uint64_t v76 = objc_msgSend_sharedInstance(IMFileTransferCenter, v69, v70, v71);
          objc_msgSend_assignTransfer_toMessage_account_(v76, v77, v75, (uint64_t)v10, v63);
        }
        uint64_t v72 = objc_msgSend_countByEnumeratingWithState_objects_count_(v67, v69, (uint64_t)&v82, (uint64_t)v86, 16);
      }
      while (v72);
    }

    sub_1A4BBD154(*(void **)(a1 + 32), v10);
    objc_msgSend__sendMessage_adjustingSender_shouldQueue_(*(void **)(a1 + 32), v78, (uint64_t)v10, 1, 1);

    goto LABEL_24;
  }
  if (objc_msgSend_code(v80, v4, v5, v6) != 42)
  {
    uint64_t v10 = objc_msgSend_locatingMessageWithGuid_error_(IMMessage, v8, *(void *)(a1 + 40), (uint64_t)v80);
    uint64_t v14 = objc_msgSend_account(*(void **)(a1 + 32), v11, v12, v13);
    uint64_t v18 = objc_msgSend_loginIMHandle(v14, v15, v16, v17);
    objc_msgSend__updateSender_(v10, v19, (uint64_t)v18, v20);

    uint64_t v24 = objc_msgSend__imMessageItem(v10, v21, v22, v23);
    objc_msgSend__handleIncomingItem_(*(void **)(a1 + 32), v25, (uint64_t)v24, v26);
LABEL_24:
  }
  objc_msgSend_setCurrentLocationGUID_(*(void **)(a1 + 32), v8, 0, v9);
}

void sub_1A4BBDA54(uint64_t a1, void *a2)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v6 = objc_msgSend_objectForKeyedSubscript_(v3, v4, @"guid", v5);
  uint64_t v9 = objc_msgSend_objectForKeyedSubscript_(v3, v7, @"size", v8);
  uint64_t v13 = objc_msgSend_unsignedLongLongValue(v9, v10, v11, v12);

  uint64_t v16 = objc_msgSend_existingChatWithGUID_(*(void **)(a1 + 32), v14, (uint64_t)v6, v15);
  uint64_t v20 = v16;
  if (v16)
  {
    __int16 v21 = objc_msgSend_chatIdentifier(v16, v17, v18, v19);
    uint64_t v24 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 40), v22, (uint64_t)v21, v23);
    uint64_t v28 = v24;
    uint64_t v29 = NSNumber;
    if (v24) {
      v13 += objc_msgSend_unsignedLongLongValue(v24, v25, v26, v27);
    }
    uint64_t v30 = objc_msgSend_numberWithUnsignedLongLong_(v29, v25, v13, v27);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v31, (uint64_t)v30, (uint64_t)v21);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v32 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
    {
      int v33 = 138412290;
      uint64_t v34 = v6;
      _os_log_impl(&dword_1A4AF7000, v32, OS_LOG_TYPE_INFO, "Did not find chat for guid: %@", (uint8_t *)&v33, 0xCu);
    }
  }
}

uint64_t sub_1A4BBDC0C(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_compare_(a3, a2, (uint64_t)a2, a4);
}

void sub_1A4BBDC18(uint64_t a1, void *a2)
{
  id v14 = a2;
  id v3 = (void *)MEMORY[0x1A6264150]();
  uint64_t v6 = objc_msgSend_existingChatWithChatIdentifier_(*(void **)(a1 + 32), v4, (uint64_t)v14, v5);
  uint64_t v9 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 40), v7, (uint64_t)v14, v8);
  uint64_t v13 = v9;
  if (v9) {
    objc_msgSend_unsignedLongLongValue(v9, v10, v11, v12);
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_1A4BC0464()
{
  uint64_t v0 = objc_opt_new();
  uint64_t v1 = qword_1E965E920;
  qword_1E965E920 = v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4BC0518(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_sharedInstance(IMDaemonController, a2, a3, a4);
  int hasListenerForID = objc_msgSend_hasListenerForID_(v5, v6, @"__k_IMSPIListenerID", v7);

  if (a1)
  {
    uint64_t v12 = objc_msgSend_sharedInstance(IMDaemonController, v9, v10, v11);
    uint64_t v15 = v12;
    if (hasListenerForID)
    {
      int v16 = objc_msgSend_capabilitiesForListenerID_(v12, v13, @"__k_IMSPIListenerID", v14);

      uint64_t v20 = v16 | a1;
      if (v16 == v20)
      {
        if (_IMWillLog()) {
          _IMAlwaysLog();
        }
        goto LABEL_13;
      }
      uint64_t v27 = objc_msgSend_sharedInstance(IMDaemonController, v17, v18, v19);
      char v29 = objc_msgSend_setCapabilities_forListenerID_(v27, v28, v20, @"__k_IMSPIListenerID");

      if ((v29 & 1) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      char v26 = objc_msgSend_addListenerID_capabilities_(v12, v13, @"__k_IMSPIListenerID", a1);

      if ((v26 & 1) == 0) {
LABEL_12:
      }
        _IMWarn();
    }
LABEL_13:
    objc_msgSend_sharedInstance(IMDaemonController, v21, v22, v23);
    id v33 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_blockUntilConnected(v33, v30, v31, v32);
    goto LABEL_14;
  }
  if (!hasListenerForID) {
    return;
  }
  objc_msgSend_sharedInstance(IMDaemonController, v9, v10, v11);
  id v33 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_removeListenerID_(v33, v24, @"__k_IMSPIListenerID", v25);
LABEL_14:
}

void sub_1A4BC07FC(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v11 = MEMORY[0x1E4F143A8];
  uint64_t v12 = 3221225472;
  uint64_t v13 = sub_1A4BC08F0;
  uint64_t v14 = &unk_1E5B7B130;
  id v5 = v4;
  id v15 = v5;
  id v6 = v3;
  id v16 = v6;
  uint64_t v7 = (void (**)(void))_Block_copy(&v11);
  if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v8, v9, v10, v11, v12, v13, v14)) {
    v7[2](v7);
  }
  else {
    dispatch_sync(MEMORY[0x1E4F14428], v7);
  }
}

uint64_t sub_1A4BC08F0(uint64_t a1)
{
  if (_IMWillLog()) {
    _IMAlwaysLog();
  }
  id v3 = (void *)MEMORY[0x1E4FBA8A8];
  uint64_t v4 = *(void *)(a1 + 40);

  return objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(v3, v2, v4, (uint64_t)sel_clearChatCap, 0);
}

void sub_1A4BC0970(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedController(_IMSPIConnectionController, a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  sub_1A4BC07FC(v7, @"_IMSetChatCapTimer");
  objc_msgSend_setChatCap(v7, v4, v5, v6);
}

void sub_1A4BC09C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedController(_IMSPIConnectionController, a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  sub_1A4BC07FC(v7, @"_IMSetChatSendCapTimer");
  objc_msgSend_setChatSendCap(v7, v4, v5, v6);
}

void sub_1A4BC0A20(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedController(_IMSPIConnectionController, a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  sub_1A4BC07FC(v7, @"_IMSetChatSendCapTimerWithAttachments");
  objc_msgSend_setChatSendCapWithAttachments(v7, v4, v5, v6);
}

void sub_1A4BC0A78(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t isMainThread = objc_msgSend_isMainThread(MEMORY[0x1E4F29060], a2, a3, a4);
  if (isMainThread)
  {
    sub_1A4BC0AD4(isMainThread, v5, v6, v7);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4F14428];
    dispatch_async(v8, &unk_1EF8E5ED8);
  }
}

void sub_1A4BC0AD4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedController(_IMSPIConnectionController, a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(MEMORY[0x1E4FBA8A8], v4, (uint64_t)v6, (uint64_t)sel_clearChatCap, 0);
  objc_msgSend_performSelector_withObject_afterDelay_(v6, v5, (uint64_t)sel_clearChatCap, 0, 10.0);
}

void sub_1A4BC0E38(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend__bestSendingHandle(*(void **)(a1 + 32), a2, a3, a4);
  if (v5)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = *(void *)(a1 + 40);
        uint64_t v11 = *(void *)(a1 + 48);
        *(_DWORD *)long long buf = 138412802;
        uint64_t v27 = v10;
        __int16 v28 = 2112;
        uint64_t v29 = v11;
        __int16 v30 = 2112;
        uint64_t v31 = v5;
        _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Sending notice %@ to %@ from %@", buf, 0x20u);
      }
    }
    uint64_t v12 = objc_msgSend_daemonConnection(*(void **)(a1 + 32), v6, v7, v8);
    id v16 = objc_msgSend_remoteProxy(v12, v13, v14, v15);
    uint64_t v17 = *(void **)(a1 + 40);
    uint64_t v18 = *(void *)(a1 + 48);
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = sub_1A4BC1078;
    v21[3] = &unk_1E5B7D0E0;
    id v22 = v17;
    id v23 = *(id *)(a1 + 48);
    id v24 = v5;
    id v25 = *(id *)(a1 + 56);
    objc_msgSend_sendNotice_toHandles_fromHandle_reply_(v16, v19, (uint64_t)v22, v18, v24, v21);
  }
  else
  {
    uint64_t v20 = IMLogHandleForCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB8280();
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

uint64_t sub_1A4BC1078(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = a1[4];
      uint64_t v4 = a1[5];
      uint64_t v5 = a1[6];
      int v7 = 138412802;
      uint64_t v8 = v3;
      __int16 v9 = 2112;
      uint64_t v10 = v4;
      __int16 v11 = 2112;
      uint64_t v12 = v5;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Completed sending notice %@ to %@ from %@", (uint8_t *)&v7, 0x20u);
    }
  }
  return (*(uint64_t (**)(void))(a1[7] + 16))();
}

void sub_1A4BC133C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend__bestSendingHandle(*(void **)(a1 + 32), a2, a3, a4);
  if (v5)
  {
    if (IMOSLoggingEnabled())
    {
      __int16 v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = *(void *)(a1 + 40);
        uint64_t v11 = *(void *)(a1 + 48);
        *(_DWORD *)long long buf = 138412802;
        uint64_t v27 = v10;
        __int16 v28 = 2112;
        uint64_t v29 = v11;
        __int16 v30 = 2112;
        uint64_t v31 = v5;
        _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Finished connecting. Sending clear notice %@ to %@ from %@", buf, 0x20u);
      }
    }
    uint64_t v12 = objc_msgSend_daemonConnection(*(void **)(a1 + 32), v6, v7, v8);
    id v16 = objc_msgSend_remoteProxy(v12, v13, v14, v15);
    uint64_t v17 = *(void **)(a1 + 40);
    uint64_t v18 = *(void *)(a1 + 48);
    v21[0] = MEMORY[0x1E4F143A8];
    v21[1] = 3221225472;
    v21[2] = sub_1A4BC1574;
    v21[3] = &unk_1E5B7D0E0;
    id v22 = v17;
    id v23 = *(id *)(a1 + 48);
    id v24 = v5;
    id v25 = *(id *)(a1 + 56);
    objc_msgSend_sendClearNotice_toHandles_reply_(v16, v19, (uint64_t)v22, v18, v21);
  }
  else
  {
    uint64_t v20 = IMLogHandleForCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB82F8();
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

uint64_t sub_1A4BC1574(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = a1[4];
      uint64_t v4 = a1[5];
      uint64_t v5 = a1[6];
      int v7 = 138412802;
      uint64_t v8 = v3;
      __int16 v9 = 2112;
      uint64_t v10 = v4;
      __int16 v11 = 2112;
      uint64_t v12 = v5;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Completed sending clear notice %@ to %@ from %@", (uint8_t *)&v7, 0x20u);
    }
  }
  return (*(uint64_t (**)(void))(a1[7] + 16))();
}

void sub_1A4BC1F58(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)__int16 v9 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Completed request to open Stewie SOS application", v9, 2u);
    }
  }
  if (v3)
  {
    IMLogHandleForCategory();
    uint64_t v5 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB83D8(v3, v5, v6, v7);
    }
  }
  uint64_t v8 = *(void *)(a1 + 32);
  if (v8) {
    (*(void (**)(uint64_t, id))(v8 + 16))(v8, v3);
  }
}

void sub_1A4BC230C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB8540();
    }

    uint64_t v5 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6)
  {
    uint64_t v5 = *(void (**)(void))(v6 + 16);
LABEL_7:
    v5();
  }
}

void sub_1A4BC2CAC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1A4BC2D28(uint64_t a1, const char *a2)
{
  v10[13] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *MEMORY[0x1E4F6E450];
  v10[0] = *MEMORY[0x1E4F6E440];
  v10[1] = v2;
  uint64_t v3 = *MEMORY[0x1E4F6E460];
  v10[2] = *MEMORY[0x1E4F6E478];
  v10[3] = v3;
  uint64_t v4 = *MEMORY[0x1E4F6E448];
  void v10[4] = *MEMORY[0x1E4F6E490];
  void v10[5] = v4;
  uint64_t v5 = *MEMORY[0x1E4F6E458];
  v10[6] = *MEMORY[0x1E4F6E488];
  v10[7] = v5;
  uint64_t v6 = *MEMORY[0x1E4F6E498];
  v10[8] = *MEMORY[0x1E4F6E4A0];
  v10[9] = v6;
  uint64_t v7 = *MEMORY[0x1E4F6E468];
  v10[10] = *MEMORY[0x1E4F6E480];
  v10[11] = v7;
  v10[12] = *MEMORY[0x1E4F6E470];
  uint64_t v8 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], a2, (uint64_t)v10, 13);
  uint64_t v9 = (void *)qword_1E965E928;
  qword_1E965E928 = v8;
}

void sub_1A4BC2FCC()
{
  v69[13] = *MEMORY[0x1E4F143B8];
  v68[0] = *MEMORY[0x1E4F6E440];
  long long v67 = sub_1A4C0ACE4();
  uint64_t v1 = objc_msgSend_localizedStringForKey_value_table_(v67, v0, @"Balloons", @"Balloons", @"IMCoreLocalizable");
  uint64_t v66 = (void *)v1;
  if (v1) {
    uint64_t v2 = (__CFString *)v1;
  }
  else {
    uint64_t v2 = @"Balloons";
  }
  v69[0] = v2;
  v68[1] = *MEMORY[0x1E4F6E450];
  uint64_t v65 = sub_1A4C0ACE4();
  uint64_t v4 = objc_msgSend_localizedStringForKey_value_table_(v65, v3, @"Confetti", @"Confetti", @"IMCoreLocalizable");
  long long v64 = (void *)v4;
  if (v4) {
    uint64_t v5 = (__CFString *)v4;
  }
  else {
    uint64_t v5 = @"Confetti";
  }
  v69[1] = v5;
  v68[2] = *MEMORY[0x1E4F6E478];
  uint64_t v63 = sub_1A4C0ACE4();
  uint64_t v7 = objc_msgSend_localizedStringForKey_value_table_(v63, v6, @"Lasers", @"Lasers", @"IMCoreLocalizable");
  uint64_t v62 = (void *)v7;
  if (v7) {
    uint64_t v8 = (__CFString *)v7;
  }
  else {
    uint64_t v8 = @"Lasers";
  }
  v69[2] = v8;
  v68[3] = *MEMORY[0x1E4F6E460];
  uint64_t v61 = sub_1A4C0ACE4();
  uint64_t v10 = objc_msgSend_localizedStringForKey_value_table_(v61, v9, @"Fireworks", @"Fireworks", @"IMCoreLocalizable");
  uint64_t v60 = (void *)v10;
  if (v10) {
    __int16 v11 = (__CFString *)v10;
  }
  else {
    __int16 v11 = @"Fireworks";
  }
  v69[3] = v11;
  v68[4] = *MEMORY[0x1E4F6E490];
  uint64_t v59 = sub_1A4C0ACE4();
  uint64_t v13 = objc_msgSend_localizedStringForKey_value_table_(v59, v12, @"Fireworks", @"Fireworks", @"IMCoreLocalizable");
  uint64_t v58 = (void *)v13;
  if (v13) {
    uint64_t v14 = (__CFString *)v13;
  }
  else {
    uint64_t v14 = @"Fireworks";
  }
  v69[4] = v14;
  v68[5] = *MEMORY[0x1E4F6E448];
  uint64_t v57 = sub_1A4C0ACE4();
  uint64_t v16 = objc_msgSend_localizedStringForKey_value_table_(v57, v15, @"Celebration", @"Celebration", @"IMCoreLocalizable");
  uint64_t v56 = (void *)v16;
  if (v16) {
    uint64_t v17 = (__CFString *)v16;
  }
  else {
    uint64_t v17 = @"Celebration";
  }
  v69[5] = v17;
  v68[6] = *MEMORY[0x1E4F6E488];
  uint64_t v55 = sub_1A4C0ACE4();
  uint64_t v19 = objc_msgSend_localizedStringForKey_value_table_(v55, v18, @"Sent With Love", @"Sent With Love", @"IMCoreLocalizable");
  uint64_t v54 = (void *)v19;
  if (v19) {
    uint64_t v20 = (__CFString *)v19;
  }
  else {
    uint64_t v20 = @"Sent With Love";
  }
  v69[6] = v20;
  v68[7] = *MEMORY[0x1E4F6E458];
  uint64_t v53 = sub_1A4C0ACE4();
  uint64_t v22 = objc_msgSend_localizedStringForKey_value_table_(v53, v21, @"Echo", @"Echo", @"IMCoreLocalizable");
  id v23 = (void *)v22;
  if (v22) {
    id v24 = (__CFString *)v22;
  }
  else {
    id v24 = @"Echo";
  }
  v69[7] = v24;
  v68[8] = *MEMORY[0x1E4F6E4A0];
  id v52 = sub_1A4C0ACE4();
  uint64_t v26 = objc_msgSend_localizedStringForKey_value_table_(v52, v25, @"Spotlight", @"Spotlight", @"IMCoreLocalizable");
  uint64_t v27 = (void *)v26;
  if (v26) {
    __int16 v28 = (__CFString *)v26;
  }
  else {
    __int16 v28 = @"Spotlight";
  }
  v69[8] = v28;
  v68[9] = *MEMORY[0x1E4F6E498];
  BOOL v51 = sub_1A4C0ACE4();
  uint64_t v30 = objc_msgSend_localizedStringForKey_value_table_(v51, v29, @"Slam Effect", @"Slam Effect", @"IMCoreLocalizable");
  uint64_t v31 = (void *)v30;
  if (v30) {
    uint64_t v32 = (__CFString *)v30;
  }
  else {
    uint64_t v32 = @"Slam Effect";
  }
  v69[9] = v32;
  v68[10] = *MEMORY[0x1E4F6E480];
  id v33 = sub_1A4C0ACE4();
  uint64_t v35 = objc_msgSend_localizedStringForKey_value_table_(v33, v34, @"Loud Effect", @"Loud Effect", @"IMCoreLocalizable");
  uint64_t v36 = (void *)v35;
  if (v35) {
    uint64_t v37 = (__CFString *)v35;
  }
  else {
    uint64_t v37 = @"Loud Effect";
  }
  v69[10] = v37;
  v68[11] = *MEMORY[0x1E4F6E468];
  uint64_t v38 = sub_1A4C0ACE4();
  uint64_t v40 = objc_msgSend_localizedStringForKey_value_table_(v38, v39, @"Gentle Effect", @"Gentle Effect", @"IMCoreLocalizable");
  uint64_t v41 = (void *)v40;
  if (v40) {
    uint64_t v42 = (__CFString *)v40;
  }
  else {
    uint64_t v42 = @"Gentle Effect";
  }
  v69[11] = v42;
  v68[12] = *MEMORY[0x1E4F6E470];
  uint64_t v43 = sub_1A4C0ACE4();
  uint64_t v45 = objc_msgSend_localizedStringForKey_value_table_(v43, v44, @"Invisible Ink", @"Invisible Ink", @"IMCoreLocalizable");
  uint64_t v47 = (void *)v45;
  if (v45) {
    uint64_t v48 = (__CFString *)v45;
  }
  else {
    uint64_t v48 = @"Invisible Ink";
  }
  v69[12] = v48;
  uint64_t v49 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v46, (uint64_t)v69, (uint64_t)v68, 13);
  id v50 = (void *)qword_1E965E938;
  qword_1E965E938 = v49;
}

void sub_1A4BC3510()
{
  v64[12] = *MEMORY[0x1E4F143B8];
  v63[0] = *MEMORY[0x1E4F6E440];
  uint64_t v62 = sub_1A4C0ACE4();
  uint64_t v1 = objc_msgSend_localizedStringForKey_value_table_(v62, v0, @"Replay Balloons", @"Replay Balloons", @"IMCoreLocalizable");
  uint64_t v61 = (void *)v1;
  if (v1) {
    uint64_t v2 = (__CFString *)v1;
  }
  else {
    uint64_t v2 = @"Replay Balloons";
  }
  v64[0] = v2;
  v63[1] = *MEMORY[0x1E4F6E450];
  uint64_t v60 = sub_1A4C0ACE4();
  uint64_t v4 = objc_msgSend_localizedStringForKey_value_table_(v60, v3, @"Replay Confetti", @"Replay Confetti", @"IMCoreLocalizable");
  uint64_t v59 = (void *)v4;
  if (v4) {
    uint64_t v5 = (__CFString *)v4;
  }
  else {
    uint64_t v5 = @"Replay Confetti";
  }
  v64[1] = v5;
  v63[2] = *MEMORY[0x1E4F6E478];
  uint64_t v58 = sub_1A4C0ACE4();
  uint64_t v7 = objc_msgSend_localizedStringForKey_value_table_(v58, v6, @"Replay Lasers", @"Replay Lasers", @"IMCoreLocalizable");
  uint64_t v57 = (void *)v7;
  if (v7) {
    uint64_t v8 = (__CFString *)v7;
  }
  else {
    uint64_t v8 = @"Replay Lasers";
  }
  v64[2] = v8;
  v63[3] = *MEMORY[0x1E4F6E460];
  uint64_t v56 = sub_1A4C0ACE4();
  uint64_t v10 = objc_msgSend_localizedStringForKey_value_table_(v56, v9, @"Replay Fireworks", @"Replay Fireworks", @"IMCoreLocalizable");
  uint64_t v55 = (void *)v10;
  if (v10) {
    __int16 v11 = (__CFString *)v10;
  }
  else {
    __int16 v11 = @"Replay Fireworks";
  }
  v64[3] = v11;
  v63[4] = *MEMORY[0x1E4F6E490];
  uint64_t v54 = sub_1A4C0ACE4();
  uint64_t v13 = objc_msgSend_localizedStringForKey_value_table_(v54, v12, @"Replay Shooting Star", @"Replay Shooting Star", @"IMCoreLocalizable");
  uint64_t v53 = (void *)v13;
  if (v13) {
    uint64_t v14 = (__CFString *)v13;
  }
  else {
    uint64_t v14 = @"Replay Shooting Star";
  }
  v64[4] = v14;
  v63[5] = *MEMORY[0x1E4F6E448];
  id v52 = sub_1A4C0ACE4();
  uint64_t v16 = objc_msgSend_localizedStringForKey_value_table_(v52, v15, @"Replay Celebration", @"Replay Celebration", @"IMCoreLocalizable");
  BOOL v51 = (void *)v16;
  if (v16) {
    uint64_t v17 = (__CFString *)v16;
  }
  else {
    uint64_t v17 = @"Replay Celebration";
  }
  v64[5] = v17;
  v63[6] = *MEMORY[0x1E4F6E488];
  id v50 = sub_1A4C0ACE4();
  uint64_t v19 = objc_msgSend_localizedStringForKey_value_table_(v50, v18, @"Replay Sent With Love", @"Replay Sent With Love", @"IMCoreLocalizable");
  uint64_t v20 = (void *)v19;
  if (v19) {
    __int16 v21 = (__CFString *)v19;
  }
  else {
    __int16 v21 = @"Replay Sent With Love";
  }
  v64[6] = v21;
  v63[7] = *MEMORY[0x1E4F6E458];
  uint64_t v49 = sub_1A4C0ACE4();
  uint64_t v23 = objc_msgSend_localizedStringForKey_value_table_(v49, v22, @"Replay Echo", @"Replay Echo", @"IMCoreLocalizable");
  id v24 = (void *)v23;
  if (v23) {
    id v25 = (__CFString *)v23;
  }
  else {
    id v25 = @"Replay Echo";
  }
  v64[7] = v25;
  v63[8] = *MEMORY[0x1E4F6E4A0];
  uint64_t v48 = sub_1A4C0ACE4();
  uint64_t v27 = objc_msgSend_localizedStringForKey_value_table_(v48, v26, @"Replay Spotlight", @"Replay Spotlight", @"IMCoreLocalizable");
  __int16 v28 = (void *)v27;
  if (v27) {
    uint64_t v29 = (__CFString *)v27;
  }
  else {
    uint64_t v29 = @"Replay Spotlight";
  }
  v64[8] = v29;
  v63[9] = *MEMORY[0x1E4F6E498];
  uint64_t v30 = sub_1A4C0ACE4();
  uint64_t v32 = objc_msgSend_localizedStringForKey_value_table_(v30, v31, @"Replay Slam Effect", @"Replay Slam Effect", @"IMCoreLocalizable");
  id v33 = (void *)v32;
  if (v32) {
    uint64_t v34 = (__CFString *)v32;
  }
  else {
    uint64_t v34 = @"Replay Slam Effect";
  }
  v64[9] = v34;
  v63[10] = *MEMORY[0x1E4F6E480];
  uint64_t v35 = sub_1A4C0ACE4();
  uint64_t v37 = objc_msgSend_localizedStringForKey_value_table_(v35, v36, @"Replay Loud Effect", @"Replay Loud Effect", @"IMCoreLocalizable");
  uint64_t v38 = (void *)v37;
  if (v37) {
    uint64_t v39 = (__CFString *)v37;
  }
  else {
    uint64_t v39 = @"Replay Loud Effect";
  }
  v64[10] = v39;
  v63[11] = *MEMORY[0x1E4F6E468];
  uint64_t v40 = sub_1A4C0ACE4();
  uint64_t v42 = objc_msgSend_localizedStringForKey_value_table_(v40, v41, @"Replay Gentle Effect", @"Replay Gentle Effect", @"IMCoreLocalizable");
  uint64_t v44 = (void *)v42;
  if (v42) {
    uint64_t v45 = (__CFString *)v42;
  }
  else {
    uint64_t v45 = @"Replay Gentle Effect";
  }
  v64[11] = v45;
  uint64_t v46 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v43, (uint64_t)v64, (uint64_t)v63, 12);
  uint64_t v47 = (void *)qword_1E965E948;
  qword_1E965E948 = v46;
}

void sub_1A4BC3A04()
{
  v69[13] = *MEMORY[0x1E4F143B8];
  v68[0] = *MEMORY[0x1E4F6E440];
  long long v67 = sub_1A4C0ACE4();
  uint64_t v1 = objc_msgSend_localizedStringForKey_value_table_(v67, v0, @"SEND WITH BALLOONS", @"SEND WITH BALLOONS", @"IMCoreLocalizable");
  uint64_t v66 = (void *)v1;
  if (v1) {
    uint64_t v2 = (__CFString *)v1;
  }
  else {
    uint64_t v2 = @"SEND WITH BALLOONS";
  }
  v69[0] = v2;
  v68[1] = *MEMORY[0x1E4F6E450];
  uint64_t v65 = sub_1A4C0ACE4();
  uint64_t v4 = objc_msgSend_localizedStringForKey_value_table_(v65, v3, @"SEND WITH CONFETTI", @"SEND WITH CONFETTI", @"IMCoreLocalizable");
  long long v64 = (void *)v4;
  if (v4) {
    uint64_t v5 = (__CFString *)v4;
  }
  else {
    uint64_t v5 = @"SEND WITH CONFETTI";
  }
  v69[1] = v5;
  v68[2] = *MEMORY[0x1E4F6E478];
  uint64_t v63 = sub_1A4C0ACE4();
  uint64_t v7 = objc_msgSend_localizedStringForKey_value_table_(v63, v6, @"SEND WITH LASERS", @"SEND WITH LASERS", @"IMCoreLocalizable");
  uint64_t v62 = (void *)v7;
  if (v7) {
    uint64_t v8 = (__CFString *)v7;
  }
  else {
    uint64_t v8 = @"SEND WITH LASERS";
  }
  v69[2] = v8;
  v68[3] = *MEMORY[0x1E4F6E460];
  uint64_t v61 = sub_1A4C0ACE4();
  uint64_t v10 = objc_msgSend_localizedStringForKey_value_table_(v61, v9, @"SEND WITH FIREWORKS", @"SEND WITH FIREWORKS", @"IMCoreLocalizable");
  uint64_t v60 = (void *)v10;
  if (v10) {
    __int16 v11 = (__CFString *)v10;
  }
  else {
    __int16 v11 = @"SEND WITH FIREWORKS";
  }
  v69[3] = v11;
  v68[4] = *MEMORY[0x1E4F6E490];
  uint64_t v59 = sub_1A4C0ACE4();
  uint64_t v13 = objc_msgSend_localizedStringForKey_value_table_(v59, v12, @"SEND WITH SHOOTING STAR", @"SEND WITH SHOOTING STAR", @"IMCoreLocalizable");
  uint64_t v58 = (void *)v13;
  if (v13) {
    uint64_t v14 = (__CFString *)v13;
  }
  else {
    uint64_t v14 = @"SEND WITH SHOOTING STAR";
  }
  v69[4] = v14;
  v68[5] = *MEMORY[0x1E4F6E448];
  uint64_t v57 = sub_1A4C0ACE4();
  uint64_t v16 = objc_msgSend_localizedStringForKey_value_table_(v57, v15, @"SEND WITH CELEBRATION", @"SEND WITH CELEBRATION", @"IMCoreLocalizable");
  uint64_t v56 = (void *)v16;
  if (v16) {
    uint64_t v17 = (__CFString *)v16;
  }
  else {
    uint64_t v17 = @"SEND WITH CELEBRATION";
  }
  v69[5] = v17;
  v68[6] = *MEMORY[0x1E4F6E488];
  uint64_t v55 = sub_1A4C0ACE4();
  uint64_t v19 = objc_msgSend_localizedStringForKey_value_table_(v55, v18, @"SEND WITH LOVE", @"SEND WITH LOVE", @"IMCoreLocalizable");
  uint64_t v54 = (void *)v19;
  if (v19) {
    uint64_t v20 = (__CFString *)v19;
  }
  else {
    uint64_t v20 = @"SEND WITH LOVE";
  }
  v69[6] = v20;
  v68[7] = *MEMORY[0x1E4F6E458];
  uint64_t v53 = sub_1A4C0ACE4();
  uint64_t v22 = objc_msgSend_localizedStringForKey_value_table_(v53, v21, @"SEND WITH ECHO", @"SEND WITH ECHO", @"IMCoreLocalizable");
  uint64_t v23 = (void *)v22;
  if (v22) {
    id v24 = (__CFString *)v22;
  }
  else {
    id v24 = @"SEND WITH ECHO";
  }
  v69[7] = v24;
  v68[8] = *MEMORY[0x1E4F6E4A0];
  id v52 = sub_1A4C0ACE4();
  uint64_t v26 = objc_msgSend_localizedStringForKey_value_table_(v52, v25, @"SEND WITH SPOTLIGHT", @"SEND WITH SPOTLIGHT", @"IMCoreLocalizable");
  uint64_t v27 = (void *)v26;
  if (v26) {
    __int16 v28 = (__CFString *)v26;
  }
  else {
    __int16 v28 = @"SEND WITH SPOTLIGHT";
  }
  v69[8] = v28;
  v68[9] = *MEMORY[0x1E4F6E498];
  BOOL v51 = sub_1A4C0ACE4();
  uint64_t v30 = objc_msgSend_localizedStringForKey_value_table_(v51, v29, @"SLAM", @"SLAM", @"IMCoreLocalizable");
  uint64_t v31 = (void *)v30;
  if (v30) {
    uint64_t v32 = (__CFString *)v30;
  }
  else {
    uint64_t v32 = @"SLAM";
  }
  v69[9] = v32;
  v68[10] = *MEMORY[0x1E4F6E480];
  id v33 = sub_1A4C0ACE4();
  uint64_t v35 = objc_msgSend_localizedStringForKey_value_table_(v33, v34, @"LOUD", @"LOUD", @"IMCoreLocalizable");
  uint64_t v36 = (void *)v35;
  if (v35) {
    uint64_t v37 = (__CFString *)v35;
  }
  else {
    uint64_t v37 = @"LOUD";
  }
  v69[10] = v37;
  v68[11] = *MEMORY[0x1E4F6E468];
  uint64_t v38 = sub_1A4C0ACE4();
  uint64_t v40 = objc_msgSend_localizedStringForKey_value_table_(v38, v39, @"GENTLE", @"GENTLE", @"IMCoreLocalizable");
  uint64_t v41 = (void *)v40;
  if (v40) {
    uint64_t v42 = (__CFString *)v40;
  }
  else {
    uint64_t v42 = @"GENTLE";
  }
  v69[11] = v42;
  v68[12] = *MEMORY[0x1E4F6E470];
  uint64_t v43 = sub_1A4C0ACE4();
  uint64_t v45 = objc_msgSend_localizedStringForKey_value_table_(v43, v44, @"INVISIBLE INK", @"INVISIBLE INK", @"IMCoreLocalizable");
  uint64_t v47 = (void *)v45;
  if (v45) {
    uint64_t v48 = (__CFString *)v45;
  }
  else {
    uint64_t v48 = @"INVISIBLE INK";
  }
  v69[12] = v48;
  uint64_t v49 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v46, (uint64_t)v69, (uint64_t)v68, 13);
  id v50 = (void *)qword_1E965E958;
  qword_1E965E958 = v49;
}

uint64_t sub_1A4BC5430()
{
  uint64_t v0 = objc_alloc_init(IMSimulatedDaemonController);
  uint64_t v1 = qword_1EB3F24A8;
  qword_1EB3F24A8 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4BC54F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  v194[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (uint64_t *)MEMORY[0x1E4F6E1B0];
  uint64_t v6 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, a2, *MEMORY[0x1E4F6E1B0], a4);
  uint64_t v7 = [IMSimulatedAccount alloc];
  uint64_t v10 = objc_msgSend_initWithService_(v7, v8, (uint64_t)v6, v9);
  uint64_t v12 = objc_msgSend_imHandleWithID_alreadyCanonical_(v10, v11, @"+15557654321", 0);
  objc_msgSend_setLoginHandle_(v10, v13, (uint64_t)v12, v14);

  uint64_t v18 = objc_msgSend_sharedInstance(IMAccountController, v15, v16, v17);
  v194[0] = v10;
  uint64_t v20 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v19, (uint64_t)v194, 1);
  objc_msgSend_setSimulatedAccounts_forServiceNamed_(v18, v21, (uint64_t)v20, *v5);

  uint64_t v22 = *MEMORY[0x1E4F6C038];
  v192[0] = *MEMORY[0x1E4F6C030];
  v192[1] = v22;
  v193[0] = &unk_1EF914680;
  v193[1] = MEMORY[0x1E4F1CC38];
  v192[2] = *MEMORY[0x1E4F6E1C8];
  uint64_t v23 = *MEMORY[0x1E4F6E090];
  v190[0] = *MEMORY[0x1E4F6E030];
  v190[1] = v23;
  v191[0] = MEMORY[0x1E4F1CC38];
  v191[1] = MEMORY[0x1E4F1CC38];
  id v25 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v24, (uint64_t)v191, (uint64_t)v190, 2);
  v193[2] = v25;
  uint64_t v27 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v26, (uint64_t)v193, (uint64_t)v192, 3);
  uint64_t v164 = v6;
  objc_msgSend_setServiceProperties_(v6, v28, (uint64_t)v27, v29);

  uint64_t v30 = (uint64_t *)MEMORY[0x1E4F6E1A0];
  uint64_t v33 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v31, *MEMORY[0x1E4F6E1A0], v32);
  uint64_t v34 = [IMSimulatedAccount alloc];
  id v162 = (void *)v33;
  uint64_t v37 = objc_msgSend_initWithService_(v34, v35, v33, v36);
  uint64_t v39 = objc_msgSend_imHandleWithID_alreadyCanonical_(v37, v38, @"+15557654321", 0);
  objc_msgSend_setLoginHandle_(v37, v40, (uint64_t)v39, v41);

  uint64_t v189 = v37;
  uint64_t v43 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v42, (uint64_t)&v189, 1);
  id v163 = v18;
  objc_msgSend_setSimulatedAccounts_forServiceNamed_(v18, v44, (uint64_t)v43, *v30);

  uint64_t v45 = [IMSimulatedChat alloc];
  long long v188 = @"+15555648583";
  uint64_t v47 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v46, (uint64_t)&v188, 1);
  id v169 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v45, v48, (uint64_t)v47, 100000, v10);

  uint64_t v49 = [IMSimulatedChat alloc];
  long long v187 = @"+18885551212";
  BOOL v51 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v50, (uint64_t)&v187, 1);
  uint64_t v168 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v49, v52, (uint64_t)v51, 1, v10);

  uint64_t v53 = [IMSimulatedChat alloc];
  long long v186 = @"john-appleseed@mac.com";
  uint64_t v55 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v54, (uint64_t)&v186, 1);
  long long v166 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v53, v56, (uint64_t)v55, 300000, v10);

  uint64_t v57 = [IMSimulatedChat alloc];
  uint64_t v185 = @"kate-bell@mac.com";
  uint64_t v59 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v58, (uint64_t)&v185, 1);
  uint64_t v170 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v57, v60, (uint64_t)v59, 200001, v10);

  uint64_t v61 = [IMSimulatedChat alloc];
  long long v184 = @"+18885551213";
  uint64_t v63 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v62, (uint64_t)&v184, 1);
  uint64_t v167 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v61, v64, (uint64_t)v63, 400001, v37);

  uint64_t v65 = [IMSimulatedChat alloc];
  long long v183 = @"+18885551214";
  long long v67 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v66, (uint64_t)&v183, 1);
  uint64_t v158 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v65, v68, (uint64_t)v67, 500001, v37);

  uint64_t v69 = [IMSimulatedChat alloc];
  v182[0] = @"john-appleseed@mac.com";
  v182[1] = @"kate-bell@mac.com";
  uint64_t v71 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v70, (uint64_t)v182, 2);
  id v157 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v69, v72, (uint64_t)v71, 500000, v10);

  uint64_t v73 = [IMSimulatedChat alloc];
  v181[0] = @"+15555648583";
  v181[1] = @"kate-bell@mac.com";
  uint64_t v75 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v74, (uint64_t)v181, 2);
  uint64_t v160 = v10;
  uint64_t v165 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v73, v76, (uint64_t)v75, 400001, v10);

  uint64_t v77 = [IMSimulatedChat alloc];
  v180[0] = @"+15555648583";
  v180[1] = @"+18885551212";
  id v79 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v78, (uint64_t)v180, 2);
  uint64_t v81 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v77, v80, (uint64_t)v79, 700000, v37);

  long long v82 = [IMSimulatedChat alloc];
  v179[0] = @"+18885551212";
  v179[1] = @"+18885551213";
  long long v84 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v83, (uint64_t)v179, 2);
  id v161 = v37;
  uint64_t v86 = objc_msgSend_initWithIncomingIDs_messageIDOffset_account_(v82, v85, (uint64_t)v84, 600001, v37);

  objc_msgSend_setDelegate_(v169, v87, (uint64_t)v168, v88);
  objc_msgSend_setDelegate_(v168, v89, (uint64_t)v169, v90);
  objc_msgSend_setDelegate_(v166, v91, (uint64_t)v170, v92);
  objc_msgSend_setDelegate_(v170, v93, (uint64_t)v166, v94);
  objc_msgSend_setDelegate_(v167, v95, (uint64_t)v158, v96);
  objc_msgSend_setDelegate_(v158, v97, (uint64_t)v167, v98);
  uint64_t v99 = v157;
  objc_msgSend_setDelegate_(v157, v100, (uint64_t)v165, v101);
  objc_msgSend_setDelegate_(v165, v102, (uint64_t)v157, v103);
  objc_msgSend_setDelegate_(v81, v104, (uint64_t)v86, v105);
  objc_msgSend_setDelegate_(v86, v106, (uint64_t)v81, v107);
  v178[0] = v169;
  v178[1] = v168;
  v178[2] = v166;
  v178[3] = v170;
  v178[4] = v167;
  v178[5] = v158;
  v178[6] = v157;
  v178[7] = v165;
  uint64_t v159 = v81;
  v178[8] = v81;
  v178[9] = v86;
  uint64_t v108 = v86;
  char v110 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v109, (uint64_t)v178, 10);
  uint64_t v114 = objc_msgSend_sharedRegistry(IMChatRegistry, v111, v112, v113);
  objc_msgSend__setSimulatedChats_(v114, v115, (uint64_t)v110, v116);

  uint64_t v117 = (objc_class *)objc_opt_class();
  ClassMethod = class_getClassMethod(v117, sel_sharedInstance);
  uint64_t v119 = (objc_class *)objc_opt_class();
  uint64_t v120 = class_getClassMethod(v119, sel_sharedInstance);
  method_exchangeImplementations(ClassMethod, v120);
  uint64_t v121 = (void *)MEMORY[0x1E4F1CA48];
  uint64_t v125 = objc_msgSend_count(v110, v122, v123, v124);
  uint64_t v128 = objc_msgSend_arrayWithCapacity_(v121, v126, v125, v127);
  long long v171 = 0u;
  long long v172 = 0u;
  long long v173 = 0u;
  long long v174 = 0u;
  id v129 = v110;
  uint64_t v131 = objc_msgSend_countByEnumeratingWithState_objects_count_(v129, v130, (uint64_t)&v171, (uint64_t)v177, 16);
  if (v131)
  {
    uint64_t v134 = v131;
    uint64_t v135 = *(void *)v172;
    do
    {
      for (uint64_t i = 0; i != v134; ++i)
      {
        if (*(void *)v172 != v135) {
          objc_enumerationMutation(v129);
        }
        id v137 = objc_msgSend_dictionaryForChat_(*(void **)(a1 + 32), v132, *(void *)(*((void *)&v171 + 1) + 8 * i), v133, v157);
        objc_msgSend_addObject_(v128, v138, (uint64_t)v137, v139);
      }
      uint64_t v134 = objc_msgSend_countByEnumeratingWithState_objects_count_(v129, v132, (uint64_t)&v171, (uint64_t)v177, 16);
    }
    while (v134);
  }

  uint64_t v143 = objc_msgSend_sharedInstance(IMDaemonController, v140, v141, v142);
  uint64_t v147 = objc_msgSend_listener(v143, v144, v145, v146);
  int v175 = @"chats";
  int v176 = v128;
  uint64_t v149 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v148, (uint64_t)&v176, (uint64_t)&v175, 1);
  objc_msgSend_setupComplete_info_(v147, v150, 1, (uint64_t)v149);

  BOOL v154 = objc_msgSend_sharedInstance(IMDaemonController, v151, v152, v153);
  objc_msgSend_setListeners_(v154, v155, (uint64_t)v129, v156);
}

uint64_t sub_1A4BC61B8()
{
  return objc_opt_class();
}

uint64_t sub_1A4BC61C4()
{
  return 0;
}

uint64_t sub_1A4BC61CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_sharedInstance(IMAccountController, a2, a3, a4);
}

uint64_t sub_1A4BC61D8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_serviceWithInternalName_(IMServiceImpl, a2, a3, a4);
}

void sub_1A4BC61E4(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_service(a1, a2, a3, a4);
  uint64_t v8 = objc_msgSend__serviceWithInternalName_(a1, v6, (uint64_t)v5, v7);

  uint64_t v12 = objc_msgSend__accountController(a1, v9, v10, v11);
  uint64_t v16 = objc_msgSend_account(a1, v13, v14, v15);
  uint64_t v20 = objc_msgSend_accountID(a1, v17, v18, v19);
  uint64_t v22 = objc_msgSend_bestAccountForService_login_guid_(v12, v21, (uint64_t)v8, (uint64_t)v16, v20);

  if (v22)
  {
    if (objc_msgSend_isFromMe(a1, v23, v24, v25))
    {
      objc_msgSend_loginIMHandle(v22, v26, v27, v28);
      id v67 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v32 = objc_msgSend_handle(a1, v29, v30, v31);
      if (objc_msgSend_length(v32, v33, v34, v35))
      {
        uint64_t v39 = objc_msgSend_handle(a1, v36, v37, v38);
        uint64_t v41 = objc_msgSend_imHandleWithID_alreadyCanonical_(v22, v40, (uint64_t)v39, 1);
      }
      else
      {
        uint64_t v41 = 0;
      }
    }
    else
    {
      uint64_t v43 = objc_msgSend_sender(a1, v26, v27, v28);
      if (objc_msgSend_length(v43, v44, v45, v46))
      {
        id v50 = objc_msgSend_sender(a1, v47, v48, v49);
        objc_msgSend_imHandleWithID_alreadyCanonical_(v22, v51, (uint64_t)v50, 1);
        id v67 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        id v67 = 0;
      }

      uint64_t v41 = objc_msgSend_loginIMHandle(v22, v52, v53, v54);
    }
    uint64_t v42 = v67;
  }
  else
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  id v68 = v42;
  uint64_t v55 = objc_msgSend_service(v42, v23, v24, v25);
  uint64_t v59 = objc_msgSend_internalName(v55, v56, v57, v58);
  uint64_t v63 = objc_msgSend_service(a1, v60, v61, v62);
  objc_msgSend_isEqualToString_(v59, v64, (uint64_t)v63, v65);

  objc_msgSend__updateContextWithSenderHandle_otherHandle_(a1, v66, (uint64_t)v68, (uint64_t)v41);
}

id sub_1A4BC63F8(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_service(a1, v5, v6, v7);
  uint64_t v11 = objc_msgSend__serviceWithInternalName_(a1, v9, (uint64_t)v8, v10);

  uint64_t v15 = objc_msgSend__accountController(a1, v12, v13, v14);
  uint64_t v19 = objc_msgSend_account(a1, v16, v17, v18);
  uint64_t v23 = objc_msgSend_accountID(a1, v20, v21, v22);
  uint64_t v25 = objc_msgSend_bestAccountForService_login_guid_(v15, v24, (uint64_t)v11, (uint64_t)v19, v23);

  uint64_t v27 = objc_msgSend_imHandleWithID_alreadyCanonical_(v25, v26, (uint64_t)v4, 1);

  return v27;
}

id sub_1A4BC64E8(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_context(a1, a2, a3, a4);
  uint64_t v8 = v4;
  if (v4)
  {
    uint64_t v9 = objc_msgSend_otherHandle(v4, v5, v6, v7);
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

uint64_t sub_1A4BC6548()
{
  return 0;
}

uint64_t sub_1A4BC6550(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_message(a1, a2, a3, a4);
  uint64_t isSenderUnknown = objc_msgSend_isSenderUnknown(v4, v5, v6, v7);

  return isSenderUnknown;
}

void *sub_1A4BC6588(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_messageID(a1, a2, a3, a4);
  uint64_t v9 = objc_msgSend_copy(a1, v6, v7, v8);
  objc_msgSend__setMessageID_(v9, v10, v5, v11);
  return v9;
}

void sub_1A4BC7124(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(MEMORY[0x1E4F1CA60]);
  uint64_t v7 = (__CFDictionary *)objc_msgSend_initWithCapacity_(v4, v5, 4, v6);
  uint64_t v11 = objc_msgSend_guid(v3, v8, v9, v10);
  if (v11)
  {
    CFDictionarySetValue(v7, @"messageGUID", v11);
  }
  else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR))
  {
    sub_1A4CB8764();
  }

  uint64_t v12 = NSNumber;
  uint64_t v16 = objc_msgSend_sortID(v3, v13, v14, v15);
  uint64_t v19 = objc_msgSend_numberWithUnsignedInteger_(v12, v17, v16, v18);
  if (v19)
  {
    CFDictionarySetValue(v7, @"sortID", v19);
  }
  else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR))
  {
    sub_1A4CB86DC();
  }

  uint64_t v20 = NSNumber;
  uint64_t v24 = objc_msgSend_time(v3, v21, v22, v23);
  objc_msgSend_timeIntervalSinceReferenceDate(v24, v25, v26, v27);
  uint64_t v31 = objc_msgSend_numberWithDouble_(v20, v28, v29, v30);

  if (v31)
  {
    CFDictionarySetValue(v7, @"date", v31);
  }
  else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR))
  {
    sub_1A4CB8654();
  }

  uint64_t v35 = objc_msgSend_replyToGUID(v3, v32, v33, v34);
  if (v35) {
    CFDictionarySetValue(v7, @"replyToGUID", v35);
  }

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v39 = objc_msgSend_body(v3, v36, v37, v38);
    uint64_t v43 = objc_msgSend_string(v39, v40, v41, v42);

    if (v43) {
      CFDictionarySetValue(v7, @"messageText", v43);
    }

    uint64_t v47 = objc_msgSend_fileTransferGUIDs(v3, v44, v45, v46);
    if (v47) {
      CFDictionarySetValue(v7, @"transferGUIDS", v47);
    }
  }
  objc_msgSend_addObject_(*(void **)(a1 + 32), v36, (uint64_t)v7, v38);
}

void sub_1A4BC73B8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1A4BC803C(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "IMCoreAutomationPerformOperationWithDictionary method call not on main queue, calling dispatch_sync", v8, 2u);
    }
  }
  uint64_t v5 = objc_msgSend_callIMCoreMethodWithDictionary_(*(void **)(a1 + 32), v2, *(void *)(a1 + 40), v3);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

uint64_t sub_1A4BC9440(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_transferForGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  uint64_t isAdaptiveImageGlyph = objc_msgSend_isAdaptiveImageGlyph(v4, v5, v6, v7);

  return isAdaptiveImageGlyph;
}

BOOL sub_1A4BC9480(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_transferForGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  BOOL v8 = objc_msgSend_commSafetySensitive(v4, v5, v6, v7) == 1;

  return v8;
}

id sub_1A4BC9CBC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  uint64_t v10 = objc_msgSend_mutableCopy(v3, v4, v5, v6);
  if (!v10)
  {
    uint64_t v10 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v7, v8, v9);
  }
  if (v3)
  {
    uint64_t v11 = objc_msgSend___im_associatedMessageSummary(v3, v7, v8, v9);
    if ((unint64_t)objc_msgSend_length(v11, v12, v13, v14) >= 0x33)
    {
      uint64_t v17 = objc_msgSend_rangeOfComposedCharacterSequenceAtIndex_(v11, v15, 50, v16);
      uint64_t v20 = objc_msgSend_substringToIndex_(v11, v18, v17, v19);
      uint64_t v23 = objc_msgSend_stringByAppendingString_(v20, v21, @"…", v22);

      objc_msgSend_setObject_forKeyedSubscript_(v10, v24, v23, *MEMORY[0x1E4F6D6A8]);
      uint64_t v11 = (void *)v23;
    }
    uint64_t v25 = *MEMORY[0x1E4F6D628];
    uint64_t v26 = objc_msgSend___imami_attributedStringForKey_(v3, v15, *MEMORY[0x1E4F6D628], v16);
    uint64_t v30 = objc_msgSend_im_trimmedSummaryIfNeededForTapback(v26, v27, v28, v29);

    objc_msgSend___imami_setAttributedString_forKey_(v10, v31, (uint64_t)v30, v25);
  }

  return v10;
}

void sub_1A4BCA060(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, a2, *MEMORY[0x1E4F6E1B0], a4);
  uint64_t v9 = *MEMORY[0x1E4F6C030];
  v10[0] = &unk_1EF914698;
  uint64_t v6 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v5, (uint64_t)v10, (uint64_t)&v9, 1);
  objc_msgSend_setServiceProperties_(v4, v7, (uint64_t)v6, v8);
}

id sub_1A4BCA9A0(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, int a6)
{
  id v10 = a1;
  id v248 = a4;
  id v247 = a5;
  v259 = objc_msgSend_guid(v10, v11, v12, v13);
  if (a6)
  {
    uint64_t v14 = sub_1A4BCC188(v259);

    v259 = (void *)v14;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v18 = objc_msgSend_associatedMessageGUID(v10, v15, v16, v17);
    uint64_t v19 = v18;
    if (a6)
    {
      uint64_t v20 = sub_1A4BCC188(v18);

      uint64_t v19 = (void *)v20;
    }
    id v224 = objc_alloc(MEMORY[0x1E4F6E5E0]);
    uint64_t v239 = objc_msgSend_senderInfo(v10, v21, v22, v23);
    uint64_t v237 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v24, v25, v26);
    uint64_t v235 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v27, v28, v29);
    uint64_t v229 = objc_msgSend_subject(v10, v30, v31, v32);
    uint64_t v227 = objc_msgSend_body(v10, v33, v34, v35);
    uint64_t v233 = objc_msgSend_bodyData(v10, v36, v37, v38);
    uint64_t v231 = objc_msgSend_fileTransferGUIDs(v10, v39, v40, v41);
    uint64_t v258 = objc_msgSend_account(v10, v42, v43, v44);
    v257 = objc_msgSend_accountID(v10, v45, v46, v47);
    v256 = objc_msgSend_service(v10, v48, v49, v50);
    uint64_t v255 = objc_msgSend_handle(v10, v51, v52, v53);
    uint64_t v254 = objc_msgSend_roomName(v10, v54, v55, v56);
    v253 = objc_msgSend_unformattedID(v10, v57, v58, v59);
    v252 = objc_msgSend_countryCode(v10, v60, v61, v62);
    uint64_t v222 = objc_msgSend_expireState(v10, v63, v64, v65);
    v249 = objc_msgSend_balloonBundleID(v10, v66, v67, v68);
    uint64_t v72 = objc_msgSend_payloadData(v10, v69, v70, v71);
    uint64_t v76 = objc_msgSend_expressiveSendStyleID(v10, v73, v74, v75);
    id v80 = objc_msgSend_timeExpressiveSendPlayed(v10, v77, v78, v79);
    uint64_t v250 = objc_msgSend_associatedMessageType(v10, v81, v82, v83);
    uint64_t v245 = objc_msgSend_associatedMessageRange(v10, v84, v85, v86);
    uint64_t v88 = v87;
    uint64_t v91 = objc_msgSend_biaReferenceID(v10, v87, v89, v90);
    uint64_t v95 = objc_msgSend_messageSummaryInfo(v10, v92, v93, v94);
    uint64_t v99 = objc_msgSend_partCount(v10, v96, v97, v98);
    v226 = objc_msgSend_threadIdentifier(v10, v100, v101, v102);
    uint64_t v219 = v99;
    uint64_t v241 = (void *)v95;
    uint64_t v218 = v95;
    v242 = (void *)v91;
    uint64_t v216 = v91;
    uint64_t v212 = v245;
    uint64_t v103 = (void *)v237;
    uint64_t v210 = v250;
    v251 = v19;
    id v209 = v19;
    int v208 = 0;
    uint64_t v244 = (void *)v76;
    uint64_t v206 = v76;
    v246 = (void *)v72;
    uint64_t v204 = v72;
    uint64_t v203 = a3;
    unsigned int v104 = (void *)v231;
    uint64_t v105 = (void *)v233;
    uint64_t v106 = (void *)v227;
    uint64_t v107 = (void *)v239;
    uint64_t v108 = (void *)v235;
    uint64_t v109 = (void *)v229;
    uint64_t timeDelivered_timePlayed_subject_body_bodyData_attributes_fileTransferGUIDs_flags_guid_messageID_account_accountID_service_handle_roomName_unformattedID_countryCode_expireState_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_errorType_associatedMessageGUID_associatedMessageType_associatedMessageRange_bizIntent_locale_biaReferenceID_messageSummaryInfo_partCount_threadIdentifier = objc_msgSend_initWithSenderInfo_time_timeRead_timeDelivered_timePlayed_subject_body_bodyData_attributes_fileTransferGUIDs_flags_guid_messageID_account_accountID_service_handle_roomName_unformattedID_countryCode_expireState_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_errorType_associatedMessageGUID_associatedMessageType_associatedMessageRange_bizIntent_locale_biaReferenceID_messageSummaryInfo_partCount_threadIdentifier_(v224, v110, v239, v237, 0, v227, v233, 0, v231, a2, v259, v203, v258, v257, v256, v255, v254, v253, v252, v222, v249, v204, v206, v80, v208, v209, v210, v212, v88, 0, 0, v216, v218, v219, v226);
  }
  else
  {
    id v225 = objc_alloc(MEMORY[0x1E4F6E850]);
    v251 = objc_msgSend_senderInfo(v10, v112, v113, v114);
    uint64_t v240 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v115, v116, v117);
    uint64_t v238 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v118, v119, v120);
    uint64_t v236 = objc_msgSend_subject(v10, v121, v122, v123);
    objc_msgSend_body(v10, v124, v125, v126);
    v230 = uint64_t v223 = a3;
    uint64_t v228 = objc_msgSend_bodyData(v10, v127, v128, v129);
    uint64_t v234 = objc_msgSend_fileTransferGUIDs(v10, v130, v131, v132);
    uint64_t v232 = objc_msgSend_account(v10, v133, v134, v135);
    uint64_t v258 = objc_msgSend_accountID(v10, v136, v137, v138);
    v257 = objc_msgSend_service(v10, v139, v140, v141);
    v256 = objc_msgSend_handle(v10, v142, v143, v144);
    uint64_t v255 = objc_msgSend_roomName(v10, v145, v146, v147);
    uint64_t v254 = objc_msgSend_unformattedID(v10, v148, v149, v150);
    v253 = objc_msgSend_countryCode(v10, v151, v152, v153);
    uint64_t v221 = objc_msgSend_expireState(v10, v154, v155, v156);
    v252 = objc_msgSend_balloonBundleID(v10, v157, v158, v159);
    uint64_t v163 = objc_msgSend_payloadData(v10, v160, v161, v162);
    uint64_t v167 = objc_msgSend_expressiveSendStyleID(v10, v164, v165, v166);
    uint64_t v171 = objc_msgSend_timeExpressiveSendPlayed(v10, v168, v169, v170);
    uint64_t v175 = objc_msgSend_biaReferenceID(v10, v172, v173, v174);
    uint64_t v179 = objc_msgSend_threadIdentifier(v10, v176, v177, v178);
    uint64_t v183 = objc_msgSend_syndicationRanges(v10, v180, v181, v182);
    v226 = objc_msgSend_syncedSyndicationRanges(v10, v184, v185, v186);
    uint64_t v190 = objc_msgSend_partCount(v10, v187, v188, v189);
    uint64_t v194 = objc_msgSend_scheduleType(v10, v191, v192, v193);
    uint64_t v198 = objc_msgSend_scheduleState(v10, v195, v196, v197);
    uint64_t v220 = v194;
    uint64_t v217 = v190;
    uint64_t v103 = (void *)v238;
    uint64_t v241 = (void *)v183;
    uint64_t v215 = v183;
    v242 = (void *)v179;
    uint64_t v214 = v179;
    int v213 = 0;
    uint64_t v211 = v175;
    uint64_t v244 = (void *)v171;
    uint64_t v207 = v171;
    id v80 = (void *)v175;
    v246 = (void *)v167;
    v249 = (void *)v163;
    uint64_t v205 = v163;
    unsigned int v104 = (void *)v232;
    uint64_t v105 = (void *)v234;
    uint64_t v106 = (void *)v228;
    uint64_t v109 = (void *)v230;
    uint64_t v107 = (void *)v240;
    uint64_t v108 = (void *)v236;
    uint64_t timeDelivered_timePlayed_subject_body_bodyData_attributes_fileTransferGUIDs_flags_guid_messageID_account_accountID_service_handle_roomName_unformattedID_countryCode_expireState_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_errorType_associatedMessageGUID_associatedMessageType_associatedMessageRange_bizIntent_locale_biaReferenceID_messageSummaryInfo_partCount_threadIdentifier = objc_msgSend_initWithSenderInfo_time_timeRead_timeDelivered_timePlayed_subject_body_bodyData_attributes_fileTransferGUIDs_flags_guid_messageID_account_accountID_service_handle_roomName_unformattedID_countryCode_expireState_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_bizIntent_locale_biaReferenceID_errorType_threadIdentifier_syndicationRanges_syncedSyndicationRanges_partCount_dateEdited_scheduleType_scheduleState_(v225, v199, (uint64_t)v251, v240, 0, v238, 0, v230, v228, 0, v234, a2, v259, v223, v232, v258, v257, v256, v255, v254, v253, v221, v252, v205, v167, v207, 0, 0, v211, v213, v214, v215, v226, v217, 0, v220, v198);
  }
  id v200 = (void *)timeDelivered_timePlayed_subject_body_bodyData_attributes_fileTransferGUIDs_flags_guid_messageID_account_accountID_service_handle_roomName_unformattedID_countryCode_expireState_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_errorType_associatedMessageGUID_associatedMessageType_associatedMessageRange_bizIntent_locale_biaReferenceID_messageSummaryInfo_partCount_threadIdentifier;

  objc_msgSend__updateContextWithSenderHandle_otherHandle_(v200, v201, (uint64_t)v248, (uint64_t)v247);

  return v200;
}

void sub_1A4BCB060(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(void **)(a1 + 32);
  objc_msgSend_guid(*(void **)(a1 + 40), a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_simulateMessageDeliveryForGUID_(v4, v5, (uint64_t)v7, v6);
}

id sub_1A4BCC188(void *a1)
{
  id v1 = a1;
  uint64_t v4 = objc_msgSend_rangeOfString_(v1, v2, @":", v3);
  uint64_t v6 = v5;
  uint64_t v8 = objc_msgSend_rangeOfString_(v1, v5, @"/", v7);
  if (v6) {
    uint64_t v11 = v4;
  }
  else {
    uint64_t v11 = -1;
  }
  if (v9) {
    uint64_t v12 = v8;
  }
  else {
    uint64_t v12 = -1;
  }
  if (v11 <= v12) {
    uint64_t v11 = v12;
  }
  uint64_t v13 = v11 + 1;
  objc_msgSend_substringToIndex_(v1, v9, v11 + 1, v10);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v17 = objc_msgSend_substringFromIndex_(v1, v15, v13, v16);

  id v20 = v14;
  if (qword_1E965E988 != -1) {
    dispatch_once(&qword_1E965E988, &unk_1EF8E3D10);
  }
  uint64_t v21 = objc_msgSend_objectForKeyedSubscript_((void *)qword_1E965E978, v18, (uint64_t)v17, v19);

  if (v21)
  {
    objc_msgSend_objectForKeyedSubscript_((void *)qword_1E965E978, v22, (uint64_t)v17, v23);
    uint64_t v28 = LABEL_15:;
    goto LABEL_16;
  }
  uint64_t v24 = objc_msgSend_objectForKeyedSubscript_((void *)qword_1E965E980, v22, (uint64_t)v17, v23);

  if (v24)
  {
    objc_msgSend_objectForKeyedSubscript_((void *)qword_1E965E980, v25, (uint64_t)v17, v27);
    goto LABEL_15;
  }
  uint64_t v30 = objc_msgSend_stringGUID(NSString, v25, v26, v27);
  objc_msgSend_setObject_forKeyedSubscript_((void *)qword_1E965E978, v31, (uint64_t)v30, (uint64_t)v17);
  objc_msgSend_setObject_forKeyedSubscript_((void *)qword_1E965E980, v32, (uint64_t)v17, (uint64_t)v30);
  uint64_t v28 = objc_msgSend_stringByAppendingString_(v20, v33, (uint64_t)v30, v34);

LABEL_16:

  return v28;
}

uint64_t sub_1A4BCC324(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], a2, a3, a4);
  uint64_t v5 = (void *)qword_1E965E978;
  qword_1E965E978 = v4;

  uint64_t v9 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v6, v7, v8);
  uint64_t v10 = qword_1E965E980;
  qword_1E965E980 = v9;

  return MEMORY[0x1F41817F8](v9, v10);
}

void sub_1A4BCC64C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1A4BCC67C(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Connection Invalidated", v7, 2u);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend__clearConnection(WeakRetained, v4, v5, v6);
}

void sub_1A4BCC724(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Connection Interrupted", v7, 2u);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend__clearConnection(WeakRetained, v4, v5, v6);
}

void sub_1A4BCC9AC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A4BCCA50;
  v7[3] = &unk_1E5B7D110;
  id v8 = *(id *)(a1 + 48);
  uint64_t v5 = objc_msgSend__backgroundMessagingAPIServiceWithErrorHandler_(v2, v3, (uint64_t)v7, v4);
  objc_msgSend_requestBackgroundMessagingAuthorizationForRecipients_completion_(v5, v6, *(void *)(a1 + 40), *(void *)(a1 + 48));
}

void sub_1A4BCCA50(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Connection error", v6, 2u);
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, void, id))(v5 + 16))(v5, 0, v3);
  }
}

void sub_1A4BCCC48(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A4BCCCEC;
  v7[3] = &unk_1E5B7D110;
  id v8 = *(id *)(a1 + 48);
  uint64_t v5 = objc_msgSend__backgroundMessagingAPIServiceWithErrorHandler_(v2, v3, (uint64_t)v7, v4);
  objc_msgSend_checkAuthorizationStatusForRecipients_completion_(v5, v6, *(void *)(a1 + 40), *(void *)(a1 + 48));
}

void sub_1A4BCCCEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Connection error", v6, 2u);
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, void, id))(v5 + 16))(v5, 0, v3);
  }
}

void sub_1A4BCCF0C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A4BCCFB4;
  v7[3] = &unk_1E5B7D110;
  id v8 = *(id *)(a1 + 56);
  uint64_t v5 = objc_msgSend__backgroundMessagingAPIServiceWithErrorHandler_(v2, v3, (uint64_t)v7, v4);
  objc_msgSend_sendBackgroundMessage_toRecipient_completion_(v5, v6, *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
}

void sub_1A4BCCFB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Connection error", v6, 2u);
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);
  }
}

id sub_1A4BCD55C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && (objc_msgSend_guid(v3, v4, v5, v6),
        uint64_t v7 = objc_claimAutoreleasedReturnValue(),
        int v10 = objc_msgSend_containsString_(v7, v8, *(void *)(*(void *)(a1 + 32) + 48), v9),
        v7,
        v10))
  {
    id v11 = v3;
    if (objc_msgSend_originalMessagePartRange(v11, v12, v13, v14) == *(void *)(*(void *)(a1 + 32) + 56)
      && v15 == *(void *)(*(void *)(a1 + 32) + 64))
    {
      id v17 = v11;
    }
    else
    {
      id v17 = 0;
    }
  }
  else
  {
    id v17 = v3;
  }

  return v17;
}

void *sub_1A4BCD824()
{
  Class result = (void *)MEMORY[0x1A6263B50]("IMDChatRecordCopyAllChats", @"IMDPersistence");
  off_1E965E990 = result;
  return result;
}

void *sub_1A4BCDC14()
{
  Class result = (void *)MEMORY[0x1A6263B50]("IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServices", @"IMDPersistence");
  off_1E965E9A0 = result;
  return result;
}

void *sub_1A4BCDC44()
{
  Class result = (void *)MEMORY[0x1A6263B50]("_IMDAttachmentRecordBulkCopy", @"IMDPersistence");
  off_1E965E9B0 = result;
  return result;
}

uint64_t sub_1A4BCF160(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_progressCount(*(void **)(a1 + 32), a2, a3, a4);
  unint64_t v9 = objc_msgSend_maxProgressCount(*(void **)(a1 + 32), v6, v7, v8);
  uint64_t v13 = *(void **)(a1 + 32);
  if (v5 >= v9)
  {
    uint64_t v20 = *(void *)(a1 + 32);
    return MEMORY[0x1F4181798](v20, sel_finishTest, v11, v12);
  }
  else
  {
    uint64_t v14 = objc_msgSend_progressCount(*(void **)(a1 + 32), v10, v11, v12);
    objc_msgSend_setProgressCount_(v13, v15, v14 + 1, v16);
    uint64_t v19 = *(void *)(a1 + 32);
    return MEMORY[0x1F4181798](v19, sel_sendSyncStateChangedEvent, v17, v18);
  }
}

uint64_t sub_1A4BCF73C(int a1)
{
  if ((a1 + 1) > 6) {
    return 1;
  }
  else {
    return qword_1A4CD0C20[a1 + 1];
  }
}

void sub_1A4BD0BE8(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = NSNumber;
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = objc_msgSend_count(*(void **)(a1 + 40), v5, v6, v7);
      uint64_t v13 = objc_msgSend_numberWithUnsignedInteger_(v8, v11, v10, v12);
      uint64_t v14 = *(void *)(a1 + 56);
      int v15 = *(unsigned __int8 *)(a1 + 64);
      int v16 = *(unsigned __int8 *)(a1 + 65);
      *(_DWORD *)long long buf = 138413314;
      *(void *)&uint8_t buf[4] = v9;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v13;
      *(_WORD *)&buf[22] = 1024;
      int v37 = v14;
      __int16 v38 = 1024;
      int v39 = v15;
      __int16 v40 = 1024;
      int v41 = v16;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "updating/acting on query ID: %@  insertHistoricalMessages: %@, limit = %d hasMoreMessagesBefore: %d hasMoreMessagesAfter: %d", buf, 0x28u);
    }
  }
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void **)(v17 + 408);
  if (v18)
  {
    int isEqualToString = objc_msgSend_isEqualToString_(v18, v2, *(void *)(a1 + 32), v3);
    uint64_t v17 = *(void *)(a1 + 48);
    if (isEqualToString)
    {
      uint64_t v20 = *(void **)(v17 + 408);
      *(void *)(v17 + 408) = 0;

      objc_msgSend__removeAllItems(*(void **)(a1 + 48), v21, v22, v23);
      uint64_t v17 = *(void *)(a1 + 48);
    }
  }
  *(void *)long long buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x2020000000;
  LOBYTE(v37) = *(unsigned char *)(v17 + 67);
  uint64_t v24 = *(void **)(a1 + 40);
  v35[0] = MEMORY[0x1E4F143A8];
  v35[1] = 3221225472;
  v35[2] = sub_1A4BD0E50;
  v35[3] = &unk_1E5B7C7F8;
  v35[4] = v17;
  void v35[5] = buf;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(v24, v2, 2, (uint64_t)v35);
  uint64_t v26 = objc_msgSend__archivedItemsToReplace_isReplacingItems_(*(void **)(a1 + 48), v25, *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 66));
  objc_msgSend__replaceAndSortItemsWithUnsortedItems_(*(void **)(a1 + 48), v27, (uint64_t)v26, v28);
  uint64_t v32 = objc_msgSend__items(*(void **)(a1 + 48), v29, v30, v31);
  objc_msgSend_im_logGUIDsForReason_(v32, v33, @"DidInsertHistoricalMessages", v34);

  _Block_object_dispose(buf, 8);
}

void sub_1A4BD0E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A4BD0CD0);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4BD0E50(uint64_t a1, void *a2)
{
  uint64_t v94 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v10 = objc_msgSend_type(v3, v4, v5, v6);
  if (v10 == 4) {
    objc_msgSend__configureLocationShareItem_(*(void **)(a1 + 32), v7, (uint64_t)v3, v9);
  }
  uint64_t v11 = objc_msgSend_message(v3, v7, v8, v9);
  int v15 = IMCoreMomentShareURLForMessage(v11);
  if (v15)
  {
    int v16 = objc_msgSend_momentSharePresentationCache(*(void **)(a1 + 32), v12, v13, v14);
    objc_msgSend_registerMomentShareItemForMessage_(v16, v17, (uint64_t)v11, v18);
  }
  uint64_t v19 = objc_msgSend_service(v3, v12, v13, v14);
  uint64_t v23 = objc_msgSend_iMessageService(IMServiceImpl, v20, v21, v22);
  uint64_t v27 = objc_msgSend_internalName(v23, v24, v25, v26);
  int isEqualToIgnoringCase = objc_msgSend_isEqualToIgnoringCase_(v19, v28, (uint64_t)v27, v29);

  if (isEqualToIgnoringCase)
  {
    uint64_t v34 = objc_msgSend_chatRegistry(*(void **)(a1 + 32), v31, v32, v33);
    objc_msgSend__setChatHasCommunicatedOveriMessage_(v34, v35, *(void *)(a1 + 32), v36);
  }
  if (objc_msgSend_isBreadcrumb(v3, v31, v32, v33))
  {
    __int16 v40 = objc_msgSend_consumedSessionPayloads(v3, v37, v38, v39);
    uint64_t v44 = objc_msgSend_count(v40, v41, v42, v43);

    if (v44)
    {
      uint64_t v45 = [IMPluginPayload alloc];
      uint64_t v48 = objc_msgSend_initWithMessageItem_(v45, v46, (uint64_t)v3, v47);
      uint64_t v52 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v49, v50, v51);
      id v55 = (id)objc_msgSend_dataSourceForPluginPayload_(v52, v53, (uint64_t)v48, v54);
    }
  }
  if (!v10
    && !*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)
    && !objc_msgSend_errorCode(v3, v37, v38, v39))
  {
    if (objc_msgSend_chatStyle(*(void **)(a1 + 32), v56, v57, v58) == 45)
    {
      uint64_t v62 = objc_msgSend__senderHandle(v3, v59, v60, v61);
      if (objc_msgSend_isFromMe(v3, v63, v64, v65))
      {
        uint64_t v69 = objc_msgSend__otherHandle(v3, v66, v67, v68);

        uint64_t v62 = (void *)v69;
      }
      if (!v62) {
        goto LABEL_29;
      }
      if (IMOSLoggingEnabled())
      {
        uint64_t v73 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO))
        {
          uint64_t v77 = objc_msgSend_recipient(*(void **)(a1 + 32), v74, v75, v76);
          int v90 = 138412546;
          uint64_t v91 = v77;
          __int16 v92 = 2112;
          uint64_t v93 = v62;
          _os_log_impl(&dword_1A4AF7000, v73, OS_LOG_TYPE_INFO, "Fixing recipient based on last message old recipient: (%@), messageAccount: (%@)", (uint8_t *)&v90, 0x16u);
        }
      }
      objc_msgSend_fetchBrandInfoIfNecessary(v62, v70, v71, v72);
      objc_msgSend_setRecipient_(*(void **)(a1 + 32), v78, (uint64_t)v62, v79);
    }
    else
    {
      id v80 = objc_msgSend_sharedInstance(IMAccountController, v59, v60, v61);
      long long v84 = objc_msgSend_accountID(v3, v81, v82, v83);
      uint64_t v62 = objc_msgSend_accountForUniqueID_(v80, v85, (uint64_t)v84, v86);

      if (!v62)
      {
LABEL_29:

        goto LABEL_30;
      }
      if (IMOSLoggingEnabled())
      {
        uint64_t v88 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v88, OS_LOG_TYPE_INFO))
        {
          uint64_t v89 = *(void **)(*(void *)(a1 + 32) + 112);
          int v90 = 138412546;
          uint64_t v91 = v89;
          __int16 v92 = 2112;
          uint64_t v93 = v62;
          _os_log_impl(&dword_1A4AF7000, v88, OS_LOG_TYPE_INFO, "fixing up chat account based on last message: oldAccount: (%@), messageAccount: (%@)", (uint8_t *)&v90, 0x16u);
        }
      }
      objc_msgSend__setAccount_locally_(*(void **)(a1 + 32), v87, (uint64_t)v62, 1);
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    goto LABEL_29;
  }
LABEL_30:
}

uint64_t sub_1A4BD1624(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_canDelete(a2, (const char *)a2, a3, a4);
}

uint64_t sub_1A4BD1638(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v6 = objc_msgSend__parentItem(v2, v3, v4, v5);
  if (objc_msgSend_type(v6, v7, v8, v9) || !objc_msgSend_canReply(v2, v10, v11, v12))
  {
    uint64_t v20 = 0;
  }
  else
  {
    int v16 = objc_msgSend_message(v6, v13, v14, v15);
    uint64_t v20 = objc_msgSend_isFromMe(v16, v17, v18, v19) ^ 1;
  }
  return v20;
}

uint64_t sub_1A4BD1724(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v6 = objc_msgSend__item(v2, v3, v4, v5);
    uint64_t v10 = objc_msgSend_isFromMe(v6, v7, v8, v9) ^ 1;
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

void sub_1A4BD1D74(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_clearHistory_beforeGUID_afterGUID_queryID_(v9, v8, *(void *)(a1 + 32), 0, 0, v4);
}

void sub_1A4BD1FC0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_markAsSpam_queryID_isJunkReportedToCarrier_(v9, v8, *(void *)(a1 + 32), (uint64_t)v4, *(unsigned __int8 *)(a1 + 40));
}

void sub_1A4BD2464(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BD2428);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BD27B0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BD2770);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A4BD2E00()
{
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.MobileSMS.particiants_queue", 0);
  uint64_t v1 = qword_1E965E9C0;
  qword_1E965E9C0 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4BD3B0C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend__items(*(void **)(a1 + 32), a2, a3, a4);
  id v9 = objc_msgSend_copy(v5, v6, v7, v8);

  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v10 = v9;
  uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v33, (uint64_t)v37, 16);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v34;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v34 != v14) {
          objc_enumerationMutation(v10);
        }
        int v16 = *(void **)(*((void *)&v33 + 1) + 8 * v15);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v18 = v16;
          uint64_t v22 = objc_msgSend_message(v18, v19, v20, v21, (void)v33);
          int hasDataDetectorResults = objc_msgSend_hasDataDetectorResults(v22, v23, v24, v25);

          if (hasDataDetectorResults)
          {
            uint64_t v30 = objc_msgSend__copy(v18, v27, v28, v29);

            objc_msgSend__handleItem_(*(void **)(a1 + 32), v31, v30, v32);
            id v18 = (id)v30;
          }
        }
        ++v15;
      }
      while (v13 != v15);
      uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v17, (uint64_t)&v33, (uint64_t)v37, 16);
    }
    while (v13);
  }
}

void sub_1A4BD4A14(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_markAsSpam_queryID_autoReport_isJunkReportedToCarrier_reportReason_(v9, v8, *(void *)(a1 + 32), (uint64_t)v4, 0, 0, *(void *)(a1 + 40));
}

uint64_t sub_1A4BD4F8C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__removeAllItems(*(void **)(a1 + 32), a2, a3, a4);
}

void sub_1A4BD5AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int buf, uint64_t a12)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A4BD5948);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1A4BD5C80()
{
  Class result = (void *)MEMORY[0x1A6263B50]("PKPeerPaymentMessageTypeFromDataURL", @"PassKitCore");
  off_1E965E9D0 = result;
  return result;
}

void sub_1A4BD7954(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1A4BD79C0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1A4BD8618(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_displayID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_1A4BD9A1C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__handleIncomingItem_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
}

void sub_1A4BD9AC4(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_loadUncachedAttachmentsCount_queryID_loadImmediately_(v9, v8, *(void *)(a1 + 32), (uint64_t)v4, 1);
}

void sub_1A4BD9CA8(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_loadAttachments_queryID_loadImmediately_(v9, v8, *(void *)(a1 + 32), (uint64_t)v4, 1);
}

uint64_t sub_1A4BDA034(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_ID(a2, (const char *)a2, a3, a4);
}

void sub_1A4BDA03C(uint64_t a1, const char *a2)
{
  v17[1] = *MEMORY[0x1E4F143B8];
  id v3 = *(void **)(a1 + 32);
  v17[0] = *(void *)(a1 + 40);
  id v4 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], a2, (uint64_t)v17, 1);
  objc_msgSend__updateRepliesIfNecessaryWithRemovedItems_threadIdentifiersOfRemovedParts_(v3, v5, (uint64_t)v4, 0);

  objc_msgSend__removeItem_(*(void **)(a1 + 32), v6, *(void *)(a1 + 40), v7);
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t v12 = objc_msgSend_guid(*(void **)(a1 + 40), v9, v10, v11);
  uint64_t v15 = objc_msgSend_setWithArray_(MEMORY[0x1E4F1CAD0], v13, *(void *)(a1 + 48), v14);
  objc_msgSend_cancelScheduledMessageWithGUID_destinations_cancelType_(v8, v16, (uint64_t)v12, (uint64_t)v15, *(void *)(a1 + 56));
}

void sub_1A4BDA49C(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v13, (uint64_t)v17, 16);
  if (v4)
  {
    uint64_t v8 = v4;
    uint64_t v9 = *(void *)v14;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v2);
        }
        uint64_t v11 = objc_msgSend__copy(*(void **)(*((void *)&v13 + 1) + 8 * v10), v5, v6, v7, (void)v13);
        objc_msgSend_editScheduledMessageItem_scheduleType_deliveryTime_(*(void **)(a1 + 40), v12, (uint64_t)v11, *(void *)(a1 + 56), *(void *)(a1 + 48));

        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v5, (uint64_t)&v13, (uint64_t)v17, 16);
    }
    while (v8);
  }
}

void sub_1A4BDAA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4BDAA34(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v28 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v8 = v28;
  if (isKindOfClass)
  {
    id v9 = v28;
    if (objc_msgSend_scheduleType(v9, v10, v11, v12) == 2)
    {
      long long v16 = objc_msgSend_currentCalendar(MEMORY[0x1E4F1C9A8], v13, v14, v15);
      uint64_t v20 = objc_msgSend_time(*(void **)(a1 + 32), v17, v18, v19);
      uint64_t v24 = objc_msgSend_time(v9, v21, v22, v23);
      uint64_t v26 = objc_msgSend_compareDate_toDate_toUnitGranularity_(v16, v25, (uint64_t)v20, (uint64_t)v24, 128);

      if (v26)
      {
LABEL_6:

        id v8 = v28;
        goto LABEL_7;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    }
    *a4 = 1;
    goto LABEL_6;
  }
LABEL_7:

  return MEMORY[0x1F41817F8](isKindOfClass, v8);
}

void sub_1A4BDBA78(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BDBA24);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BDBFE8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BDBF70);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A4BDCDDC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_ID(a2, (const char *)a2, a3, a4);
}

void sub_1A4BDDCE8(id *a1)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v2 = a1[4];
  uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v23, (uint64_t)v27, 16);
  if (v4)
  {
    uint64_t v8 = v4;
    uint64_t v9 = *(void *)v24;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v24 != v9) {
          objc_enumerationMutation(v2);
        }
        uint64_t v11 = objc_msgSend__copy(*(void **)(*((void *)&v23 + 1) + 8 * v10), v5, v6, v7, (void)v23);
        objc_msgSend_setSatelliteMessageRetry_(v11, v12, 1, v13);
        objc_msgSend_setIsPendingSatelliteSend_(v11, v14, 0, v15);
        objc_msgSend__refreshContextWithAccountHandles(v11, v16, v17, v18);
        objc_msgSend__handleItem_(a1[5], v19, (uint64_t)v11, v20);
        objc_msgSend_addObject_(a1[6], v21, (uint64_t)v11, v22);

        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v5, (uint64_t)&v23, (uint64_t)v27, 16);
    }
    while (v8);
  }
}

void sub_1A4BDE1C0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BDE104);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BDEC84(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  int shouldSendCancelTypingIndicator = objc_msgSend__shouldSendCancelTypingIndicator(*(void **)(a1 + 32), a2, a3, a4);
  if (IMOSLoggingEnabled())
  {
    uint64_t v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = *(void **)(a1 + 32);
      uint64_t v14 = (__CFString *)v13[37];
      objc_msgSend_latestTypingIndicatorTimeInterval(v13, v10, v11, v12);
      long long v16 = @"NO";
      *(_DWORD *)long long buf = 138412802;
      long long v36 = v14;
      if (shouldSendCancelTypingIndicator) {
        long long v16 = @"YES";
      }
      __int16 v37 = 2048;
      uint64_t v38 = v15;
      __int16 v39 = 2112;
      __int16 v40 = v16;
      _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "In cancel typing indicator block. _typingGUID %@ _latestTypingIndicatorInterval %f, shouldSendCancelTypingIndicator %@", buf, 0x20u);
    }
  }
  uint64_t v17 = *(void **)(a1 + 32);
  if (v17[37]) {
    int v18 = shouldSendCancelTypingIndicator;
  }
  else {
    int v18 = 0;
  }
  if (v18 == 1)
  {
    if (objc_msgSend__chatStyleSupportsTypingAndCancelTypingIndicators(v17, v6, v7, v8))
    {
      uint64_t v19 = [IMMessage alloc];
      uint64_t v23 = objc_msgSend__flagsForCancelTypingIndicatorMessage(*(void **)(a1 + 32), v20, v21, v22);
      long long v25 = (__CFString *)objc_msgSend_initWithSender_time_text_messageSubject_fileTransferGUIDs_flags_error_guid_subject_threadIdentifier_(v19, v24, 0, 0, 0, 0, 0, v23, 0, *(void *)(*(void *)(a1 + 32) + 296), 0, 0);
      if (IMOSLoggingEnabled())
      {
        uint64_t v27 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          long long v36 = v25;
          _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, " => Sending cancel typing message: %@", buf, 0xCu);
        }
      }
      objc_msgSend__sendMessage_adjustingSender_shouldQueue_(*(void **)(a1 + 32), v26, (uint64_t)v25, 1, 0);
    }
    else if (IMOSLoggingEnabled())
    {
      uint64_t v30 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v30, OS_LOG_TYPE_INFO, " => Not sending cancel typing message, the chat style does not support it", buf, 2u);
      }
    }
    uint64_t v32 = *(void *)(a1 + 32);
    uint64_t v31 = a1 + 32;
    long long v33 = *(void **)(v32 + 296);
    *(void *)(v32 + 296) = 0;

    long long v34 = *(void **)(*(void *)v31 + 256);
    *(void *)(*(void *)v31 + 256) = 0;
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v28 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      uint64_t v29 = @"NO";
      if (shouldSendCancelTypingIndicator) {
        uint64_t v29 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      long long v36 = v29;
      _os_log_impl(&dword_1A4AF7000, v28, OS_LOG_TYPE_INFO, "*** We tried to send a cancel typing indicator, but already had no guid set. shouldSendCancelTypingIndicator set to %@", buf, 0xCu);
    }
  }
}

void sub_1A4BDFB18(uint64_t a1)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v19, (uint64_t)v23, 16);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v20;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v20 != v6) {
          objc_enumerationMutation(v2);
        }
        id v8 = *(id *)(*((void *)&v19 + 1) + 8 * v7);
        uint64_t v12 = objc_msgSend_flags(v8, v9, v10, v11, (void)v19);
        uint64_t v15 = objc_msgSend__copyWithFlags_(v8, v13, v12 | 0x2000, v14);

        objc_msgSend__handleItem_(*(void **)(a1 + 40), v16, (uint64_t)v15, v17);
        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v18, (uint64_t)&v19, (uint64_t)v23, 16);
    }
    while (v5);
  }
}

uint64_t sub_1A4BDFCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel_replaceItemWhenReplied_, *(void *)(a1 + 40), a4);
}

void sub_1A4BE07BC(uint64_t a1, const char *a2)
{
  v13[49] = *MEMORY[0x1E4F143B8];
  id v2 = (void *)MEMORY[0x1E4F1CAD0];
  v13[0] = @"SkipAutoJoin";
  v13[1] = @"ignoreAlertsFlag";
  v13[2] = @"com.apple.iChat.LastArchivedMessageDate";
  v13[3] = @"com.apple.iChat.LastArchivedMessageID";
  void v13[4] = @"CKChatConversationKeyboardKey";
  void v13[5] = @"CKChatWatermarkMessageID";
  v13[6] = @"CKChatWatermarkTime";
  v13[7] = @"IMChatWatermarkMessageID";
  v13[8] = @"IMChatWatermarkDate";
  v13[9] = @"CKChatLastCanceledMessageTime";
  v13[10] = @"CKChatConsecutiveCanceledMessageCount";
  v13[11] = @"CKChatConsecutiveManuallyCanceledMessageCount";
  v13[12] = @"CKChatPreviousAccountsDictionaryKey";
  v13[13] = @"com.apple.iChat.UnreadMessagesKey";
  v13[14] = @"CKChatUnmuteTime";
  v13[15] = @"LastCanceledMessageTime";
  uint8_t v13[16] = @"ConsecutiveCanceledMessageCount";
  v13[17] = @"ConsecutiveManuallyCanceledMessageCount";
  uint64_t v3 = *MEMORY[0x1E4F6CE10];
  v13[18] = *MEMORY[0x1E4F6CD30];
  v13[19] = v3;
  v13[20] = @"hasBeenAutoSpamReported";
  v13[21] = @"wasAutoDetectedForSpam";
  v13[22] = @"wasDetectedAsSMSSpam";
  v13[23] = @"SMSCategory";
  v13[24] = @"SMSSubCategory";
  v13[25] = @"wasDetectedAsiMessageSpam";
  v13[26] = @"smsSpamExtensionName";
  v13[27] = @"numberOfTimesRespondedtoThread";
  v13[28] = @"hasViewedPotentialSpamChat";
  v13[29] = @"lastTUConversationCreatedDate";
  v13[30] = @"lastScheduledMessageCreatedDate";
  v13[31] = @"shouldForceToSMS";
  v13[32] = *MEMORY[0x1E4F6CDC8];
  v13[33] = @"smsHandshakeState";
  v13[34] = @"messageHandshakeState";
  v13[35] = @"lastBlackholeReceiptPromptDate";
  uint64_t v4 = *MEMORY[0x1E4F6CCE8];
  v13[36] = @"restoredFromBlackhole";
  v13[37] = v4;
  uint64_t v5 = *MEMORY[0x1E4F6CD70];
  v13[38] = *MEMORY[0x1E4F6CDD0];
  v13[39] = v5;
  v13[40] = *MEMORY[0x1E4F6CCE0];
  v13[41] = @"emergencyTranscriptSharingState";
  v13[42] = *MEMORY[0x1E4F6CD28];
  v13[43] = @"prefersTextResponseToIncomingAudioMessages";
  uint64_t v6 = *MEMORY[0x1E4F6CD90];
  v13[44] = @"showAudioButtonInEntryView";
  v13[45] = v6;
  uint64_t v7 = *MEMORY[0x1E4F6CD00];
  v13[46] = *MEMORY[0x1E4F6CDA8];
  v13[47] = v7;
  v13[48] = @"RCSGroupURI";
  id v8 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], a2, (uint64_t)v13, 49);
  uint64_t v11 = objc_msgSend_setWithArray_(v2, v9, (uint64_t)v8, v10);
  uint64_t v12 = (void *)qword_1EB3F22A0;
  qword_1EB3F22A0 = v11;
}

void sub_1A4BE3C60(uint64_t a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v7 = objc_msgSend_participants(*(void **)(a1 + 32), v4, v5, v6);
  char v10 = objc_msgSend_containsObject_(v7, v8, (uint64_t)v3, v9);

  int v11 = IMOSLoggingEnabled();
  if (v10)
  {
    if (v11)
    {
      uint64_t v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        int v16 = 138412290;
        id v17 = v3;
        _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "  * Need to invite: %@", (uint8_t *)&v16, 0xCu);
      }
    }
  }
  else
  {
    if (v11)
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        int v16 = 138412290;
        id v17 = v3;
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "  * No need to invite: %@   - already in chat", (uint8_t *)&v16, 0xCu);
      }
    }
    objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v12, (uint64_t)v3, v13);
  }
}

void sub_1A4BE4234(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BE418CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BE4630(uint64_t a1, void *a2)
{
  id v12 = a2;
  uint64_t v6 = objc_msgSend_participants(*(void **)(a1 + 32), v3, v4, v5);
  char v9 = objc_msgSend_containsObject_(v6, v7, (uint64_t)v12, v8);

  if ((v9 & 1) == 0) {
    objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v10, (uint64_t)v12, v11);
  }
}

void sub_1A4BE5294(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BE5260);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BE5584(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A4BE55A0(uint64_t a1, char a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    if (objc_msgSend_containsMessageFromContactOrMe(WeakRetained, v3, v4, v5))
    {
      char v9 = objc_msgSend_lastAddressedHandleID(WeakRetained, v6, v7, v8);
      if (objc_msgSend_length(v9, v10, v11, v12))
      {
        int v16 = objc_msgSend_recipient(WeakRetained, v13, v14, v15);
        objc_msgSend_autoInviteToViewAvailabilityIfNeededFromHandleID_(v16, v17, (uint64_t)v9, v18);
      }
      else
      {
        if (!IMOSLoggingEnabled()) {
          goto LABEL_15;
        }
        int v16 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long v19 = 0;
          _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "Not sharing availability in chat with no lastAddressedHandleID", v19, 2u);
        }
      }

LABEL_15:
      goto LABEL_16;
    }
    if (IMOSLoggingEnabled())
    {
      char v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long v20 = 0;
        _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Not sharing availability in chat with non contact that I have not participated in", v20, 2u);
      }
      goto LABEL_15;
    }
  }
  else
  {
    if (!IMOSLoggingEnabled()) {
      return;
    }
    id WeakRetained = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, WeakRetained, OS_LOG_TYPE_INFO, "Not auto inviting, chat is not eligible for sharing focus status", buf, 2u);
    }
  }
LABEL_16:
}

void sub_1A4BE5968(uint64_t a1, char a2)
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = sub_1A4BE59FC;
  v3[3] = &unk_1E5B7D690;
  id v4 = *(id *)(a1 + 32);
  char v5 = a2;
  dispatch_async(MEMORY[0x1E4F14428], v3);
}

uint64_t sub_1A4BE59FC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t sub_1A4BE5A14(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0 && IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)char v5 = 0;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Not able to share focus status from this device because the Focus setting Share Across Devices is disabled for this device.", v5, 2u);
    }
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4BE5ED4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BE5EB8);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BE73C4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BE72E4);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BE7C20(uint64_t a1)
{
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = sub_1A4BE7D28;
  v9[3] = &unk_1E5B7D6E0;
  uint64_t v2 = *(void **)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v11 = *(id *)(a1 + 48);
  id v12 = *(id *)(a1 + 56);
  objc_msgSend_enumerateObjectsUsingBlock_(v2, v3, (uint64_t)v9, v4);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = sub_1A4BE7EC4;
  v8[3] = &unk_1E5B7D708;
  char v5 = *(void **)(a1 + 56);
  void v8[4] = *(void *)(a1 + 64);
  objc_msgSend_enumerateObjectsUsingBlock_(v5, v6, (uint64_t)v8, v7);
}

void sub_1A4BE7D28(void *a1, void *a2)
{
  id v42 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v42;
  }
  else {
    id v3 = 0;
  }
  id v7 = v3;
  if (v7 && (id)a1[4] != v42)
  {
    uint64_t v8 = objc_msgSend_threadOriginator(v7, v4, v5, v6);
    id v12 = v8;
    if (v8
      && (objc_msgSend_guid(v8, v9, v10, v11),
          uint64_t v13 = objc_claimAutoreleasedReturnValue(),
          objc_msgSend_guid((void *)a1[5], v14, v15, v16),
          id v17 = objc_claimAutoreleasedReturnValue(),
          int v20 = objc_msgSend_isEqualToString_(v13, v18, (uint64_t)v17, v19),
          v17,
          v13,
          v20))
    {
      long long v21 = objc_msgSend__copy(v7, v9, v10, v11);
      objc_msgSend_setThreadOriginator_(v21, v22, a1[5], v23);
      if (!v21) {
        goto LABEL_16;
      }
      uint64_t v24 = (__CFArray *)a1[6];
      if (!v24) {
        goto LABEL_16;
      }
    }
    else
    {
      if (v7 == (id)a1[5]) {
        goto LABEL_17;
      }
      long long v25 = objc_msgSend_guid(v7, v9, v10, v11);
      uint64_t v29 = objc_msgSend_guid((void *)a1[5], v26, v27, v28);
      int isEqualToString = objc_msgSend_isEqualToString_(v25, v30, (uint64_t)v29, v31);

      if (!isEqualToString) {
        goto LABEL_17;
      }
      long long v21 = objc_msgSend__copy(v7, v33, v34, v35);
      __int16 v39 = objc_msgSend_replyCountsByPart((void *)a1[5], v36, v37, v38);
      objc_msgSend_setReplyCountsByPart_(v21, v40, (uint64_t)v39, v41);

      uint64_t v24 = (__CFArray *)a1[6];
      if (!v24 || !v21)
      {
LABEL_16:

LABEL_17:
        goto LABEL_18;
      }
    }
    CFArrayAppendValue(v24, v21);
    goto LABEL_16;
  }
LABEL_18:
}

void sub_1A4BE7EC4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v8 = a2;
  uint64_t v6 = objc_msgSend_chatStyle(v2, v3, v4, v5);
  objc_msgSend__handleItem_forChatStyle_updateReplyCounts_(v2, v7, (uint64_t)v8, v6, 0);
}

void sub_1A4BE8408(void **a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v89 = *MEMORY[0x1E4F143B8];
  long long v83 = 0u;
  long long v84 = 0u;
  long long v85 = 0u;
  long long v86 = 0u;
  uint64_t v5 = objc_msgSend__items(a1[4], a2, a3, a4);
  uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(v5, v6, (uint64_t)&v83, (uint64_t)v88, 16);
  if (v7)
  {
    uint64_t v11 = v7;
    CFMutableArrayRef theArray = 0;
    uint64_t v12 = *(void *)v84;
    uint64_t v76 = v5;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v84 != v12) {
          objc_enumerationMutation(v5);
        }
        uint64_t v14 = *(void **)(*((void *)&v83 + 1) + 8 * i);
        uint64_t v15 = objc_msgSend_guid(v14, v8, v9, v10);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0
          && (objc_msgSend_containsObject_(a1[5], v16, (uint64_t)v15, v17) & 1) == 0
          && (objc_msgSend_containsObject_(a1[6], v18, (uint64_t)v15, v19) & 1) == 0)
        {
          id v20 = v14;
          uint64_t v24 = objc_msgSend_threadOriginator(v20, v21, v22, v23);
          uint64_t v28 = objc_msgSend_threadIdentifier(v20, v25, v26, v27);
          uint64_t v32 = objc_msgSend_guid(v24, v29, v30, v31);
          uint64_t v35 = (void *)v32;
          uint64_t v77 = (void *)v28;
          if (v28 && v32)
          {
            __int16 v39 = objc_msgSend_objectForKey_(a1[7], v33, v32, v34);
            if (v39)
            {
              uint64_t v40 = objc_msgSend__copy(v20, v36, v37, v38);
              uint64_t v41 = v24;
              id v42 = (void *)v40;
              uint64_t v75 = v41;
              uint64_t v46 = objc_msgSend__copy(v41, v43, v44, v45);
              objc_msgSend_setReplyCountsByPart_(v46, v47, (uint64_t)v39, v48);
              objc_msgSend_setThreadOriginator_(v42, v49, (uint64_t)v46, v50);
              uint64_t v51 = theArray;
              if (!theArray) {
                uint64_t v51 = (__CFArray *)objc_alloc_init(MEMORY[0x1E4F1CA48]);
              }
              CFMutableArrayRef theArray = v51;
              if (v51 && v42) {
                CFArrayAppendValue(v51, v42);
              }

              uint64_t v24 = v75;
            }
            if ((objc_msgSend_containsObject_(a1[8], v36, (uint64_t)v77, v38) & 1) != 0
              || objc_msgSend_containsObject_(a1[6], v52, (uint64_t)v35, v54))
            {
              id v55 = objc_msgSend__copy(v20, v52, v53, v54);
              objc_msgSend_setThreadOriginator_(v55, v56, 0, v57);
              uint64_t v58 = theArray;
              if (!theArray) {
                uint64_t v58 = (__CFArray *)objc_alloc_init(MEMORY[0x1E4F1CA48]);
              }
              CFMutableArrayRef theArray = v58;
              if (v55 && v58) {
                CFArrayAppendValue(v58, v55);
              }
            }
          }
          uint64_t v62 = objc_msgSend_objectForKey_(a1[7], v33, (uint64_t)v15, v34);
          if (v62)
          {
            uint64_t v63 = objc_msgSend__copy(v20, v59, v60, v61);
            objc_msgSend_setReplyCountsByPart_(v63, v64, (uint64_t)v62, v65);
            uint64_t v66 = theArray;
            if (!theArray) {
              uint64_t v66 = (__CFArray *)objc_alloc_init(MEMORY[0x1E4F1CA48]);
            }
            CFMutableArrayRef theArray = v66;
            if (v63 && v66) {
              CFArrayAppendValue(v66, v63);
            }
          }
          uint64_t v5 = v76;
        }
      }
      uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v5, v8, (uint64_t)&v83, (uint64_t)v88, 16);
    }
    while (v11);
  }
  else
  {
    CFMutableArrayRef theArray = 0;
  }

  long long v81 = 0u;
  long long v82 = 0u;
  long long v79 = 0u;
  long long v80 = 0u;
  uint64_t v67 = theArray;
  uint64_t v69 = objc_msgSend_countByEnumeratingWithState_objects_count_(v67, v68, (uint64_t)&v79, (uint64_t)v87, 16);
  if (v69)
  {
    uint64_t v72 = v69;
    uint64_t v73 = *(void *)v80;
    do
    {
      for (uint64_t j = 0; j != v72; ++j)
      {
        if (*(void *)v80 != v73) {
          objc_enumerationMutation(v67);
        }
        objc_msgSend__handleItem_(a1[4], v70, *(void *)(*((void *)&v79 + 1) + 8 * j), v71);
      }
      uint64_t v72 = objc_msgSend_countByEnumeratingWithState_objects_count_(v67, v70, (uint64_t)&v79, (uint64_t)v87, 16);
    }
    while (v72);
  }
}

void sub_1A4BE8B44()
{
  uint64_t v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v0 = dispatch_queue_create("com.apple.Messages.IMChatKeyTransparency", v2);
  uint64_t v1 = (void *)qword_1E965DE20;
  qword_1E965DE20 = (uint64_t)v0;
}

void sub_1A4BE8DE0(uint64_t a1, const char *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v11 = 0;
  objc_msgSend_markFailureSeenForResults_error_(v3, a2, v4, (uint64_t)&v11);
  id v5 = v11;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A4BE8EBC;
  v7[3] = &unk_1E5B7BE70;
  id v8 = v5;
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 32);
  id v6 = v5;
  dispatch_async(MEMORY[0x1E4F14428], v7);
}

void sub_1A4BE8EBC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v86 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 32))
  {
    uint64_t v4 = (void *)MEMORY[0x1E4F1CA48];
    id v5 = (id *)(a1 + 40);
    uint64_t v6 = objc_msgSend_count(*(void **)(a1 + 40), a2, a3, a4);
    uint64_t v76 = objc_msgSend_arrayWithCapacity_(v4, v7, v6, v8);
    long long v79 = 0u;
    long long v80 = 0u;
    long long v77 = 0u;
    long long v78 = 0u;
    id obj = *v5;
    uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v9, (uint64_t)&v77, (uint64_t)v85, 16);
    if (v13)
    {
      uint64_t v74 = *(void *)v78;
      do
      {
        uint64_t v14 = 0;
        do
        {
          if (*(void *)v78 != v74) {
            objc_enumerationMutation(obj);
          }
          uint64_t v15 = *(void **)(*((void *)&v77 + 1) + 8 * v14);
          uint64_t v16 = objc_msgSend_sharedController(IMKeyTransparencyController, v10, v11, v12);
          id v20 = objc_msgSend_ID(v15, v17, v18, v19);
          uint64_t v24 = objc_msgSend__stripFZIDPrefix(v20, v21, v22, v23);
          uint64_t v27 = objc_msgSend_idsIDInfoResultForHandleID_(v16, v25, (uint64_t)v24, v26);

          uint64_t v31 = objc_msgSend_uri(v27, v28, v29, v30);
          uint64_t v32 = (void *)MEMORY[0x1E4FB0028];
          long long v36 = objc_msgSend_applicationIdentifier(*(void **)(a1 + 48), v33, v34, v35);
          uint64_t v38 = objc_msgSend_addApplicationPrefixForIdentifier_uri_(v32, v37, (uint64_t)v36, (uint64_t)v31);

          id v42 = objc_msgSend_sharedController(IMKeyTransparencyController, v39, v40, v41);
          uint64_t v46 = objc_msgSend_ID(v15, v43, v44, v45);
          uint64_t v50 = objc_msgSend__stripFZIDPrefix(v46, v47, v48, v49);
          uint64_t v53 = objc_msgSend_ktVerifierResultForHandleID_(v42, v51, (uint64_t)v50, v52);

          uint64_t v54 = NSString;
          uint64_t v58 = objc_msgSend_name(v15, v55, v56, v57);
          uint64_t v62 = objc_msgSend_uiStatus(v53, v59, v60, v61);
          uint64_t v65 = objc_msgSend_stringWithFormat_(v54, v63, @"(name:%@, uri:%@, uiStatus:%lu)", v64, v58, v38, v62);

          objc_msgSend_addObject_(v76, v66, (uint64_t)v65, v67);
          ++v14;
        }
        while (v13 != v14);
        uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v10, (uint64_t)&v77, (uint64_t)v85, 16);
      }
      while (v13);
    }

    if (IMOSLoggingEnabled())
    {
      uint64_t v68 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v68, OS_LOG_TYPE_INFO))
      {
        uint64_t v71 = objc_msgSend_componentsJoinedByString_(v76, v69, @" ", v70);;
        uint64_t v72 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138412546;
        long long v82 = v71;
        __int16 v83 = 2112;
        uint64_t v84 = v72;
        _os_log_impl(&dword_1A4AF7000, v68, OS_LOG_TYPE_INFO, "IMChat_KT There was an error marking KT failure as seen for participants [%@] with error: %@", buf, 0x16u);
      }
    }
  }
}

NSArray *__cdecl sub_1A4BEA310(IMChat *self, SEL a2)
{
  return self->_replySuggestions;
}

uint64_t sub_1A4BEB430(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1A4BEB5CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

void sub_1A4BEB800(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  char v9 = *(unsigned char *)(a1 + 64);
  objc_msgSend__chat_loadHistory_limit_beforeGUID_afterGUID_threadIdentifier_queryID_synchronous_completion_(v10, v8, *(void *)(a1 + 32), *(void *)(a1 + 56), *(void *)(a1 + 40), 0, 0, v4, v9, *(void *)(a1 + 48));
}

uint64_t sub_1A4BEB8A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

void sub_1A4BEBBC4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4BEBB64);
  }
  _Unwind_Resume(a1);
}

void sub_1A4BEBBF8(uint64_t a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 64);
      uint64_t v10 = *(void *)(a1 + 72);
      *(_DWORD *)long long buf = 138413058;
      id v15 = v3;
      __int16 v16 = 2112;
      uint64_t v17 = v8;
      __int16 v18 = 2048;
      uint64_t v19 = v9;
      __int16 v20 = 2048;
      uint64_t v21 = v10;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Completing queryID: %@, loadMessagesBeforeAndAfterGUID: %@ numberOfMessagesBeforeGUID: %lu numberOfMessagesAfterGUID: %lu", buf, 0x2Au);
    }
  }
  uint64_t v11 = objc_msgSend_chatRegistry(*(void **)(a1 + 40), v4, v5, v6);
  char v13 = *(unsigned char *)(a1 + 80);
  objc_msgSend__chat_loadPagedHistory_numberOfMessagesBefore_numberOfMessagesAfter_messageGUID_threadIdentifier_queryID_synchronous_completion_(v11, v12, *(void *)(a1 + 40), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 32), *(void *)(a1 + 48), v3, v13, *(void *)(a1 + 56));
}

void sub_1A4BEBD3C(uint64_t a1, int a2, void *a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6[0] = 67109378;
      v6[1] = a2;
      __int16 v7 = 2112;
      id v8 = v4;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "loadMessagesBeforeAndAfterGUID completion with success: %d error: %@", (uint8_t *)v6, 0x12u);
    }
  }
}

void sub_1A4BEC084(uint64_t a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    __int16 v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412802;
      id v20 = v3;
      __int16 v21 = 2112;
      uint64_t v22 = v8;
      __int16 v23 = 2112;
      uint64_t v24 = v9;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Executing queryID: %@, fetchMessageHistoryForDateInterval: %@ chatGUIDs: %@", buf, 0x20u);
    }
  }
  uint64_t v10 = objc_msgSend_chatRegistry(*(void **)(a1 + 48), v4, v5, v6);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(unsigned __int8 *)(a1 + 64);
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = sub_1A4BEC258;
  v15[3] = &unk_1E5B7D7E8;
  id v16 = v12;
  id v17 = *(id *)(a1 + 40);
  id v18 = *(id *)(a1 + 56);
  objc_msgSend__chat_fetchHistorySummary_dateInterval_synchronous_queryID_completion_(v10, v14, v11, (uint64_t)v16, v13, v3, v15);
}

void sub_1A4BEC258(void *a1, void *a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    __int16 v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = a1[4];
      uint64_t v9 = a1[5];
      int v10 = 138412802;
      id v11 = v5;
      __int16 v12 = 2112;
      uint64_t v13 = v8;
      __int16 v14 = 2112;
      uint64_t v15 = v9;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Finished queryID: %@, fetchMessageHistoryForDateInterval: %@ chatGUIDs: %@", (uint8_t *)&v10, 0x20u);
    }
  }
  (*(void (**)(void))(a1[6] + 16))();
}

void sub_1A4BEC378(void *a1, char a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (a2)
  {
    if (IMOSLoggingEnabled())
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = a1[4];
        uint64_t v8 = a1[5];
        int v10 = 138412802;
        uint64_t v11 = v7;
        __int16 v12 = 2112;
        uint64_t v13 = v8;
        __int16 v14 = 2112;
        id v15 = v5;
        _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Query completed for fetchMessageHistoryForDateInterval: %@ chatGUIDs: %@, error: %@", (uint8_t *)&v10, 0x20u);
      }
    }
  }
  else
  {
    uint64_t v9 = IMLogHandleForCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB8D08();
    }

    (*(void (**)(void))(a1[6] + 16))();
  }
}

void sub_1A4BEC6CC(uint64_t a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412546;
      id v19 = v3;
      __int16 v20 = 2112;
      uint64_t v21 = v8;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Executing queryID: %@, fetchOldestMessageDate chatGUID: %@", buf, 0x16u);
    }
  }
  uint64_t v9 = objc_msgSend_chatRegistry(*(void **)(a1 + 40), v4, v5, v6);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 56);
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = sub_1A4BEC888;
  v14[3] = &unk_1E5B7D860;
  id v15 = v3;
  id v16 = *(id *)(a1 + 32);
  id v17 = *(id *)(a1 + 48);
  id v12 = v3;
  objc_msgSend__chat_fetchOldestMessageDateForChat_synchronous_queryID_completion_(v9, v13, v10, v11, v12, v14);
}

void sub_1A4BEC888(void *a1, void *a2, void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = a1[4];
      uint64_t v9 = a1[5];
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Finished queryID: %@, fetchOldestMessageDate chatGUID: %@", (uint8_t *)&v10, 0x16u);
    }
  }
  (*(void (**)(void))(a1[6] + 16))();
}

void sub_1A4BEC9A0(uint64_t a1, char a2, void *a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if (a2)
  {
    if (IMOSLoggingEnabled())
    {
      id v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        int v9 = 138412546;
        uint64_t v10 = v7;
        __int16 v11 = 2112;
        id v12 = v5;
        _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Query completed for fetchOldestMessageDate chatGUID: %@, error: %@", (uint8_t *)&v9, 0x16u);
      }
    }
  }
  else
  {
    uint64_t v8 = IMLogHandleForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB8D90();
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1A4BECC64(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_loadFrequentReplies_limit_queryID_loadImmediately_(v9, v8, *(void *)(a1 + 32), *(void *)(a1 + 40), v4, *(unsigned __int8 *)(a1 + 48));
}

void sub_1A4BECE94(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 408), a2);
  id v4 = a2;
  objc_msgSend_chatRegistry(*(void **)(a1 + 32), v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_loadUnreadMessages_limit_fallbackGUID_queryID_loadImmediately_(v9, v8, *(void *)(a1 + 32), *(void *)(a1 + 48), *(void *)(a1 + 40), v4, *(unsigned __int8 *)(a1 + 56));
}

void sub_1A4BED150(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_loadAttachments_queryID_loadImmediately_(v9, v8, *(void *)(a1 + 32), (uint64_t)v4, 0);
}

void sub_1A4BED1C4(uint64_t a1, int a2, void *a3)
{
  id v17 = a3;
  id v5 = *(id *)(*(void *)(a1 + 32) + 344);
  objc_msgSend__setAttachments_(*(void **)(a1 + 32), v6, 0, v7);
  uint64_t v11 = *(void *)(a1 + 40);
  if (v11)
  {
    id v12 = v17;
    if (a2)
    {
      uint64_t v13 = 1;
      id v14 = v5;
      id v12 = 0;
    }
    else
    {
      uint64_t v13 = 0;
      id v14 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, id, id))(v11 + 16))(v11, v13, v14, v12);
  }
  id v15 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v8, v9, v10);
  objc_msgSend___mainThreadPostNotificationName_object_userInfo_(v15, v16, @"__kIMChatDidFetchAttachmentsNotification", *(void *)(a1 + 32), 0);
}

void sub_1A4BED334(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_isDownloadingPurgedAssetsForChat_queryID_loadImmediately_(v9, v8, *(void *)(a1 + 32), (uint64_t)v4, 1);
}

void sub_1A4BED494(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  objc_msgSend_chatRegistry(v3, v5, v6, v7);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend__chat_isDownloadingPurgedAssetsForChat_queryID_loadImmediately_(v9, v8, *(void *)(a1 + 32), (uint64_t)v4, 0);
}

uint64_t sub_1A4BED508(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1A4BEDB18(uint64_t a1, void *a2)
{
  id v31 = a2;
  uint64_t v6 = objc_msgSend_transferGUID(v31, v3, v4, v5);
  if (objc_msgSend_containsObject_(*(void **)(a1 + 32), v7, (uint64_t)v6, v8))
  {
    objc_msgSend_removeObject_(*(void **)(a1 + 32), v9, (uint64_t)v6, v10);
    objc_msgSend_addObject_(*(void **)(a1 + 40), v11, (uint64_t)v31, v12);
  }
  else if (IMFileTransferGUIDIsTemporary())
  {
    id v16 = objc_msgSend_messageItem(v31, v13, v14, v15);
    __int16 v20 = objc_msgSend_guid(v16, v17, v18, v19);

    objc_msgSend_index(v31, v21, v22, v23);
    uint64_t v24 = IMFileTransferGUIDForAttachmentMessagePartAtMessageGUIDAndMessagePartIndex();
    if (objc_msgSend_containsObject_(*(void **)(a1 + 32), v25, (uint64_t)v24, v26))
    {
      objc_msgSend_removeObject_(*(void **)(a1 + 32), v27, (uint64_t)v24, v28);
      objc_msgSend_addObject_(*(void **)(a1 + 40), v29, (uint64_t)v31, v30);
    }
  }
}

id _IMStringFromIMChatParticipantState(__int16 a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  uint64_t v6 = v2;
  if (a1)
  {
    objc_msgSend_appendString_(v2, v3, @"Not Yet Invited", v5);
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (objc_msgSend_length(v6, v3, v4, v5)) {
    objc_msgSend_appendString_(v6, v7, @", ", v8);
  }
  objc_msgSend_appendString_(v6, v7, @"Invite Failed", v8);
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_15:
  if (objc_msgSend_length(v6, v3, v4, v5)) {
    objc_msgSend_appendString_(v6, v9, @", ", v10);
  }
  objc_msgSend_appendString_(v6, v9, @"Deciding", v10);
  if ((a1 & 8) == 0)
  {
LABEL_5:
    if ((a1 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (objc_msgSend_length(v6, v3, v4, v5)) {
    objc_msgSend_appendString_(v6, v11, @", ", v12);
  }
  objc_msgSend_appendString_(v6, v11, @"Declined", v12);
  if ((a1 & 0x10) == 0)
  {
LABEL_6:
    if ((a1 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (objc_msgSend_length(v6, v3, v4, v5)) {
    objc_msgSend_appendString_(v6, v13, @", ", v14);
  }
  objc_msgSend_appendString_(v6, v13, @"Joined", v14);
  if ((a1 & 0x20) == 0)
  {
LABEL_7:
    if ((a1 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (objc_msgSend_length(v6, v3, v4, v5)) {
    objc_msgSend_appendString_(v6, v15, @", ", v16);
  }
  objc_msgSend_appendString_(v6, v15, @"Left", v16);
  if ((a1 & 0x40) == 0)
  {
LABEL_8:
    if ((a1 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (objc_msgSend_length(v6, v3, v4, v5)) {
    objc_msgSend_appendString_(v6, v17, @", ", v18);
  }
  objc_msgSend_appendString_(v6, v17, @"Kicked", v18);
  if ((a1 & 0x80) == 0)
  {
LABEL_9:
    if ((a1 & 0x100) == 0) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (objc_msgSend_length(v6, v3, v4, v5)) {
    objc_msgSend_appendString_(v6, v19, @", ", v20);
  }
  objc_msgSend_appendString_(v6, v19, @"Banned", v20);
  if ((a1 & 0x100) != 0)
  {
LABEL_33:
    if (objc_msgSend_length(v6, v3, v4, v5)) {
      objc_msgSend_appendString_(v6, v21, @", ", v22);
    }
    objc_msgSend_appendString_(v6, v21, @"Removing", v22);
  }
LABEL_36:

  return v6;
}

__CFString *_IMStringFromIMChatJoinState(unint64_t a1)
{
  if (a1 > 4) {
    return @"Unknown";
  }
  else {
    return off_1E5B7DA58[a1];
  }
}

uint64_t sub_1A4BEFA78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__setTimeAdded_(a2, (const char *)a2, *(void *)(a1 + 32), a4);
}

void sub_1A4BF0510(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v194 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1 + 32;
  uint64_t v163 = objc_msgSend__getDeleteChatItemMap_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
  uint64_t v162 = objc_msgSend__getMessageChatItemMap_withDeleteMap_andAllChatItems_(*(void **)v4, v5, *(void *)(v4 + 8), (uint64_t)v163, *(void *)(a1 + 48));
  id v159 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v158 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v157 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v185 = 0u;
  long long v186 = 0u;
  long long v187 = 0u;
  long long v188 = 0u;
  objc_msgSend_allKeys(v163, v6, v7, v8);
  id obj = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v164 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v9, (uint64_t)&v185, (uint64_t)v193, 16);
  if (v164)
  {
    uint64_t v161 = *(void *)v186;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v186 != v161)
        {
          uint64_t v13 = v12;
          objc_enumerationMutation(obj);
          uint64_t v12 = v13;
        }
        uint64_t v166 = v12;
        uint64_t v14 = *(void *)(*((void *)&v185 + 1) + 8 * v12);
        uint64_t v167 = objc_msgSend_objectsForKey_(v163, v10, v14, v11);
        uint64_t v18 = objc_msgSend_lastObject(v167, v15, v16, v17);
        uint64_t v169 = objc_msgSend__parentItem(v18, v19, v20, v21);

        uint64_t v168 = objc_msgSend_objectsForKey_(v162, v22, v14, v23);
        if (objc_msgSend_count(v168, v24, v25, v26) == 1)
        {
          uint64_t v30 = objc_msgSend_firstObject(v168, v27, v28, v29);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v31 = v30;
            long long v181 = 0u;
            long long v182 = 0u;
            long long v183 = 0u;
            long long v184 = 0u;
            id v32 = v167;
            uint64_t v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v32, v33, (uint64_t)&v181, (uint64_t)v192, 16);
            if (v34)
            {
              uint64_t v35 = *(void *)v182;
              while (2)
              {
                for (uint64_t i = 0; i != v34; ++i)
                {
                  if (*(void *)v182 != v35) {
                    objc_enumerationMutation(v32);
                  }
                  uint64_t v37 = *(void **)(*((void *)&v181 + 1) + 8 * i);
                  objc_opt_class();
                  if (objc_opt_isKindOfClass())
                  {
                    id v38 = v37;
                    id v42 = objc_msgSend_aggregateAttachmentParts(v31, v39, v40, v41);
                    char v45 = objc_msgSend_containsObject_(v42, v43, (uint64_t)v38, v44);

                    if (v45) {
                      continue;
                    }
                  }
                  uint64_t v49 = IMLogHandleForCategory();
                  if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
                    sub_1A4CB8EC0(&v179, v180, v49);
                  }

                  int v47 = 0;
                  goto LABEL_24;
                }
                uint64_t v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v32, v46, (uint64_t)&v181, (uint64_t)v192, 16);
                int v47 = 1;
                if (v34) {
                  continue;
                }
                break;
              }
            }
            else
            {
              int v47 = 1;
            }
LABEL_24:
          }
          else
          {
            int v47 = 0;
          }

          int v48 = v47 != 0;
        }
        else
        {
          int v48 = 0;
        }
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();
        uint64_t v54 = objc_msgSend_count(v168, v51, v52, v53);
        if ((v54 == objc_msgSend_count(v167, v55, v56, v57)) & ~v48 | isKindOfClass & 1)
        {
          if (IMOSLoggingEnabled())
          {
            uint64_t v64 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = 138412290;
              uint64_t v191 = v14;
              _os_log_impl(&dword_1A4AF7000, v64, OS_LOG_TYPE_INFO, "Request to delete entire chatItem for message (guid: %@). Adding messageGUID for deletion.", buf, 0xCu);
            }
          }
          uint64_t v65 = objc_msgSend_guid(v169, v61, v62, v63);
          objc_msgSend_addObject_(v159, v66, (uint64_t)v65, v67);

          objc_msgSend_addObject_(v158, v68, (uint64_t)v169, v69);
        }
        else
        {
          uint64_t v70 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E720], v58, v59, v60);
          char BoolFromDomain_forKey_defaultValue = objc_msgSend_getBoolFromDomain_forKey_defaultValue_(v70, v71, @"com.apple.MobileSMS", @"SuppressDeleteParts", 0);

          if ((BoolFromDomain_forKey_defaultValue & 1) == 0)
          {
            if (IMOSLoggingEnabled())
            {
              uint64_t v74 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v74, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)long long buf = 0;
                _os_log_impl(&dword_1A4AF7000, v74, OS_LOG_TYPE_INFO, "Request to delete subset of chatItems from message. Update message.", buf, 2u);
              }
            }
            uint64_t v75 = *(void *)(a1 + 40);
            uint64_t v76 = *(void **)(*(void *)(a1 + 32) + 376);
            id v177 = 0;
            id v178 = 0;
            long long v77 = objc_msgSend__itemWithChatItemsDeleted_fromItem_indexesOfItemsDeleted_indexToRangeMapOfItemsDeleted_(v76, v73, v75, (uint64_t)v169, &v178, &v177);
            id v78 = v178;
            id v79 = v177;
            if (IMOSLoggingEnabled())
            {
              long long v80 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v80, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                uint64_t v191 = (uint64_t)v77;
                _os_log_impl(&dword_1A4AF7000, v80, OS_LOG_TYPE_INFO, "New item after removing parts: %@", buf, 0xCu);
              }
            }
            if (IMOSLoggingEnabled())
            {
              uint64_t v84 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v84, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                uint64_t v191 = (uint64_t)v79;
                _os_log_impl(&dword_1A4AF7000, v84, OS_LOG_TYPE_INFO, "DELETING PARTS index:range map: %@", buf, 0xCu);
              }
            }
            long long v85 = objc_msgSend_message(v77, v81, v82, v83);
            uint64_t v86 = *(void **)(a1 + 32);
            int v90 = objc_msgSend_now(MEMORY[0x1E4F1C9C8], v87, v88, v89);
            objc_msgSend_updateMessage_withIndexesOfDeletedItems_withIndexToRangeMapOfDeletedItems_deleteDate_(v86, v91, (uint64_t)v85, (uint64_t)v78, v79, v90);

            objc_msgSend__handleItem_(*(void **)(a1 + 32), v92, (uint64_t)v77, v93);
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              id v94 = v169;
              uint64_t v98 = objc_msgSend_replyCountsByPart(v94, v95, v96, v97);
              BOOL v102 = objc_msgSend_count(v98, v99, v100, v101) == 0;

              if (!v102)
              {
                v174[0] = MEMORY[0x1E4F143A8];
                v174[1] = 3221225472;
                v174[2] = sub_1A4BF0F18;
                v174[3] = &unk_1E5B7D9A0;
                id v175 = v94;
                id v176 = v157;
                objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v79, v103, (uint64_t)v174, v104);
              }
            }
          }
        }

        uint64_t v12 = v166 + 1;
      }
      while (v166 + 1 != v164);
      uint64_t v164 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v10, (uint64_t)&v185, (uint64_t)v193, 16);
    }
    while (v164);
  }

  objc_msgSend__updateRepliesIfNecessaryWithRemovedItems_threadIdentifiersOfRemovedParts_(*(void **)(a1 + 32), v105, (uint64_t)v158, (uint64_t)v157);
  if (objc_msgSend_count(v159, v106, v107, v108))
  {
    if (IMOSLoggingEnabled())
    {
      id v115 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v115, OS_LOG_TYPE_INFO))
      {
        uint64_t v119 = objc_msgSend_count(v159, v116, v117, v118);
        *(_DWORD *)long long buf = 134217984;
        uint64_t v191 = v119;
        _os_log_impl(&dword_1A4AF7000, v115, OS_LOG_TYPE_INFO, "Recently Deleted | Will move %lu messageGUIDs to recently deleted", buf, 0xCu);
      }
    }
    uint64_t v120 = objc_msgSend_sharedRegistry(IMChatRegistry, v112, v113, v114);
    uint64_t v124 = objc_msgSend_now(MEMORY[0x1E4F1C9C8], v121, v122, v123);
    objc_msgSend_moveMessagesWithGUIDsToRecentlyDeleted_deleteDate_synchronously_completionHandler_(v120, v125, (uint64_t)v159, (uint64_t)v124, 0, &unk_1EF8E66A8);

    id v126 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v172 = 0u;
    long long v173 = 0u;
    long long v170 = 0u;
    long long v171 = 0u;
    id v127 = v158;
    uint64_t v132 = objc_msgSend_countByEnumeratingWithState_objects_count_(v127, v128, (uint64_t)&v170, (uint64_t)v189, 16);
    if (v132)
    {
      uint64_t v133 = *(void *)v171;
      do
      {
        for (uint64_t j = 0; j != v132; ++j)
        {
          if (*(void *)v171 != v133) {
            objc_enumerationMutation(v127);
          }
          uint64_t v135 = *(void **)(*((void *)&v170 + 1) + 8 * j);
          uint64_t v136 = objc_msgSend_balloonBundleID(v135, v129, v130, v131);
          uint64_t v137 = IMBalloonExtensionIDWithSuffix();
          int isEqualToString = objc_msgSend_isEqualToString_(v136, v138, (uint64_t)v137, v139);

          if (isEqualToString) {
            objc_msgSend_addObject_(v126, v141, (uint64_t)v135, v142);
          }
          objc_msgSend__removeItem_(*(void **)(a1 + 32), v141, (uint64_t)v135, v142);
        }
        uint64_t v132 = objc_msgSend_countByEnumeratingWithState_objects_count_(v127, v129, (uint64_t)&v170, (uint64_t)v189, 16);
      }
      while (v132);
    }

    uint64_t v146 = objc_msgSend_sharedCoordinator(MEMORY[0x1E4F6E940], v143, v144, v145);
    uint64_t v150 = objc_msgSend_copy(v126, v147, v148, v149);
    objc_msgSend_informOfDeletedMessagesWithMessages_(v146, v151, (uint64_t)v150, v152);
  }
  uint64_t v153 = *(void **)(a1 + 32);
  uint64_t v154 = objc_msgSend_numberOfMessagesToKeepLoaded(v153, v109, v110, v111);
  id v156 = (id)objc_msgSend_loadMessagesBeforeDate_limit_loadImmediately_(v153, v155, 0, v154, 0);
}

void sub_1A4BF0F18(uint64_t a1, void *a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v7, (uint64_t)&v26, (uint64_t)v30, 16);
  if (v8)
  {
    uint64_t v12 = v8;
    uint64_t v13 = *(void *)v27;
    do
    {
      uint64_t v14 = 0;
      do
      {
        if (*(void *)v27 != v13) {
          objc_enumerationMutation(v6);
        }
        uint64_t v15 = *(void **)(*((void *)&v26 + 1) + 8 * v14);
        uint64_t v16 = objc_msgSend_guid(*(void **)(a1 + 32), v9, v10, v11);
        objc_msgSend_integerValue(v5, v17, v18, v19);
        objc_msgSend_rangeValue(v15, v20, v21, v22);
        ThreadIdentifierWithOriginatorGUID = (void *)IMMessageCreateThreadIdentifierWithOriginatorGUID();

        if (ThreadIdentifierWithOriginatorGUID) {
          objc_msgSend_addObject_(*(void **)(a1 + 40), v24, (uint64_t)ThreadIdentifierWithOriginatorGUID, v25);
        }

        ++v14;
      }
      while (v12 != v14);
      uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v9, (uint64_t)&v26, (uint64_t)v30, 16);
    }
    while (v12);
  }
}

void sub_1A4BF1078(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedRegistry(IMChatRegistry, a2, a3, a4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_updateRecoverableMessagesMetadataSynchronously_completionHandler_(v5, v4, 0, 0);
}

id sub_1A4BF1218(uint64_t a1, const char *a2)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  objc_msgSend__updateRepliesIfNecessaryWithRemovedItems_threadIdentifiersOfRemovedParts_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), 0);
  long long v38 = 0u;
  long long v39 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id obj = *(id *)(a1 + 40);
  uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v3, (uint64_t)&v36, (uint64_t)v41, 16);
  if (v4)
  {
    uint64_t v5 = *(void *)v37;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v37 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void **)(*((void *)&v36 + 1) + 8 * i);
        if (IMOSLoggingEnabled())
        {
          uint64_t v11 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Request to delete message item for message.", buf, 2u);
          }
        }
        uint64_t v12 = objc_msgSend_daemonController(*(void **)(a1 + 32), v8, v9, v10);
        uint64_t v16 = objc_msgSend_guid(v7, v13, v14, v15);
        uint64_t v40 = v16;
        uint64_t v18 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v17, (uint64_t)&v40, 1);
        uint64_t v22 = objc_msgSend_stringGUID(NSString, v19, v20, v21);
        objc_msgSend_deleteMessageWithGUIDs_queryID_(v12, v23, (uint64_t)v18, (uint64_t)v22);

        objc_msgSend__removeItem_(*(void **)(a1 + 32), v24, (uint64_t)v7, v25);
      }
      uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v26, (uint64_t)&v36, (uint64_t)v41, 16);
    }
    while (v4);
  }

  long long v27 = *(void **)(a1 + 32);
  uint64_t v31 = objc_msgSend_numberOfMessagesToKeepLoaded(v27, v28, v29, v30);
  return (id)objc_msgSend_loadMessagesBeforeDate_limit_loadImmediately_(v27, v32, 0, v31, 0);
}

void sub_1A4BF15EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v9 = (id)objc_msgSend__copy(*(void **)(a1 + 32), a2, a3, a4);
  objc_msgSend_setExpireState_(v9, v5, 3, v6);
  objc_msgSend__handleItem_(*(void **)(a1 + 40), v7, (uint64_t)v9, v8);
}

void sub_1A4BF17E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v13 = (id)objc_msgSend__copy(*(void **)(a1 + 32), a2, a3, a4);
  uint64_t v8 = objc_msgSend_flags(v13, v5, v6, v7);
  objc_msgSend_setFlags_(v13, v9, v8 | 0x800000000, v10);
  objc_msgSend__handleItem_(*(void **)(a1 + 40), v11, (uint64_t)v13, v12);
}

void sub_1A4BF18F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = objc_msgSend_flags(v5, a2, a3, a4);
  id v18 = (id)objc_msgSend_copyWithFlags_(v5, v7, v6, v8);
  uint64_t v12 = objc_msgSend_messageID(*(void **)(a1 + 32), v9, v10, v11);
  objc_msgSend__setMessageID_(v18, v13, v12, v14);
  objc_msgSend_setSelectedRichCardIndex_(v18, v15, *(void *)(a1 + 48), v16);
  objc_msgSend__handleItem_keepExistingIndex_(*(void **)(a1 + 40), v17, (uint64_t)v18, 1);
}

void sub_1A4BF1B70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = objc_msgSend_flags(v5, a2, a3, a4);
  id v22 = (id)objc_msgSend__copyWithFlags_(v5, v7, v6 | 0x400000, v8);
  uint64_t v12 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v9, v10, v11);
  objc_msgSend_setTimePlayed_(v22, v13, (uint64_t)v12, v14);

  if (objc_msgSend_isExpirable(*(void **)(a1 + 32), v15, v16, v17))
  {
    if (IMMessageItemShouldAutomaticallySave()) {
      objc_msgSend_setExpireState_(v22, v20, 3, v21);
    }
    else {
      objc_msgSend_setExpireState_(v22, v20, 1, v21);
    }
  }
  objc_msgSend__handleItem_(*(void **)(a1 + 40), v18, (uint64_t)v22, v19);
}

void sub_1A4BF1DD0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = objc_msgSend_flags(v5, a2, a3, a4);
  id v18 = (id)objc_msgSend__copyWithFlags_(v5, v7, v6, v8);
  id v9 = *(void **)(a1 + 32);
  id v13 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v10, v11, v12);
  objc_msgSend_setTimeExpressiveSendPlayed_(v9, v14, (uint64_t)v13, v15);

  objc_msgSend__handleItem_(*(void **)(a1 + 40), v16, (uint64_t)v18, v17);
}

void sub_1A4BF2D90(uint64_t a1, void *a2)
{
  id v9 = a2;
  if (v9)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v3 = v9;
      uint64_t v7 = objc_msgSend_sharedInstance(IMFileTransferCenter, v4, v5, v6);
      objc_msgSend_setCommSafetySensitiveForTransfer_value_(v7, v8, (uint64_t)v3, *(void *)(a1 + 32));
    }
  }
}

void sub_1A4BF2E34(id *a1)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id v2 = a1[4];
  uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v44, (uint64_t)v48, 16);
  if (v4)
  {
    uint64_t v8 = v4;
    uint64_t v9 = *(void *)v45;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v45 != v9) {
          objc_enumerationMutation(v2);
        }
        uint64_t v11 = *(void **)(*((void *)&v44 + 1) + 8 * i);
        uint64_t v12 = objc_msgSend__item(v11, v5, v6, v7, (void)v44);
        uint64_t v16 = objc_msgSend__item(v11, v13, v14, v15);
        uint64_t v20 = objc_msgSend_flags(v16, v17, v18, v19);
        uint64_t v23 = objc_msgSend__copyWithFlags_(v12, v21, v20, v22);

        if (objc_opt_respondsToSelector()) {
          objc_msgSend_setNeedsReloadForTransferStatusChangeWithType_(v23, v24, 0, v25);
        }
        objc_msgSend__handleItem_(a1[5], v24, (uint64_t)v23, v25);
      }
      uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v5, (uint64_t)&v44, (uint64_t)v48, 16);
    }
    while (v8);
  }

  id v29 = a1[6];
  if (v29)
  {
    uint64_t v30 = objc_msgSend__item(v29, v26, v27, v28);
    uint64_t v34 = objc_msgSend__item(a1[6], v31, v32, v33);
    uint64_t v38 = objc_msgSend_flags(v34, v35, v36, v37);
    uint64_t v41 = objc_msgSend__copyWithFlags_(v30, v39, v38, v40);

    if (objc_opt_respondsToSelector()) {
      objc_msgSend_setNeedsReloadForTransferStatusChangeWithType_(v41, v42, 0, v43);
    }
    objc_msgSend__handleItem_(a1[5], v42, (uint64_t)v41, v43, (void)v44);
  }
}

void sub_1A4BF3A24(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend__items(*(void **)(a1 + 32), a2, a3, a4);
  uint64_t v9 = objc_msgSend_copy(v5, v6, v7, v8);

  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v10 = v9;
  uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v30, (uint64_t)v34, 16);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v31;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v31 != v14) {
          objc_enumerationMutation(v10);
        }
        uint64_t v16 = *(void **)(*((void *)&v30 + 1) + 8 * v15);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v18 = v16;
          if (objc_msgSend_actionable(v18, v19, v20, v21, (void)v30))
          {
            uint64_t v25 = objc_msgSend_copy(v18, v22, v23, v24);
            objc_msgSend_setActionable_(v25, v26, 0, v27);
            objc_msgSend__handleItem_(*(void **)(a1 + 32), v28, (uint64_t)v25, v29);
          }
        }
        ++v15;
      }
      while (v13 != v15);
      uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v17, (uint64_t)&v30, (uint64_t)v34, 16);
    }
    while (v13);
  }
}

void sub_1A4BF3F40(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_context(a1, a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setInvitation_(v7, v5, a3, v6);
}

uint64_t sub_1A4BF3F90(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = objc_msgSend_flags(a1, a2, a3, a4);

  return objc_msgSend__copyWithFlags_(a1, v5, v6, v7);
}

void *sub_1A4BF3FCC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = objc_msgSend_messageID(a1, a2, a3, a4);
  uint64_t v9 = objc_msgSend_copyWithFlags_(a1, v7, a3, v8);
  objc_msgSend__setMessageID_(v9, v10, v6, v11);
  return v9;
}

void sub_1A4BF4114(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_msgSend_sharedInstance(IMDaemonController, v4, v5, v6);
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  id v10 = objc_msgSend_synchronousReplyingRemoteDaemon(v12, v7, v8, v9);
  objc_msgSend__automation_markMessagesAsRead_messageGUID_forChatGUID_fromMe_queryID_(v10, v11, *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 49), v3);
}

uint64_t sub_1A4BF425C()
{
  id v0 = objc_alloc(MEMORY[0x1E4F6EA50]);
  uint64_t v2 = objc_msgSend_initWithTitle_maximumNumberOfTrackedObjects_queue_(v0, v1, @"IMChat-RecentlyUpdated", 3, MEMORY[0x1E4F14428]);
  uint64_t v3 = qword_1EB3F22A8;
  qword_1EB3F22A8 = v2;

  return MEMORY[0x1F41817F8](v2, v3);
}

void sub_1A4BF46D0(uint64_t a1, void *a2)
{
  id v36 = a2;
  uint64_t v6 = objc_msgSend__item(v36, v3, v4, v5);
  id v10 = objc_msgSend_guid(v6, v7, v8, v9);

  if (v10 && (objc_msgSend_containsObject_(*(void **)(a1 + 32), v11, (uint64_t)v10, v12) & 1) == 0) {
    objc_msgSend_addObject_(*(void **)(a1 + 32), v13, (uint64_t)v10, v14);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v18 = *(void **)(a1 + 40);
    uint64_t v19 = NSString;
    uint64_t v20 = (objc_class *)objc_opt_class();
    uint64_t v21 = NSStringFromClass(v20);
    uint64_t v24 = objc_msgSend_stringWithFormat_(v19, v22, @"c:%@: %@", v23, v21, v10);
    objc_msgSend_addObject_(v18, v25, (uint64_t)v24, v26);
  }
  if ((unint64_t)objc_msgSend_count(*(void **)(a1 + 48), v15, v16, v17) <= 0x63)
  {
    uint64_t v27 = *(void **)(a1 + 48);
    uint64_t v28 = NSString;
    uint64_t v29 = (objc_class *)objc_opt_class();
    long long v30 = NSStringFromClass(v29);
    long long v33 = objc_msgSend_stringWithFormat_(v28, v31, @"c:%@: %@", v32, v30, v10);
    objc_msgSend_addObject_(v27, v34, (uint64_t)v33, v35);
  }
}

void sub_1A4BF4A30(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

id sub_1A4BF4D1C(void *a1, const char *a2)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1A4B3453C;
  uint64_t v9 = sub_1A4B34384;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4BF4E20;
  v4[3] = &unk_1E5B7DA88;
  v4[4] = &v5;
  objc_msgSend___enumerateItemsWithOptions_usingBlock_(a1, a2, 0, (uint64_t)v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1A4BF4E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4BF4E20(uint64_t a1, void *a2, unsigned char *a3)
{
  id v14 = a2;
  if (!objc_msgSend_type(v14, v5, v6, v7))
  {
    uint64_t v11 = objc_msgSend_message(v14, v8, v9, v10);
    uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    *a3 = 1;
  }
}

id sub_1A4BF4E98(void *a1, const char *a2)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1A4B3453C;
  uint64_t v9 = sub_1A4B34384;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4BF4F9C;
  v4[3] = &unk_1E5B7DA88;
  v4[4] = &v5;
  objc_msgSend___enumerateItemsWithOptions_usingBlock_(a1, a2, 2, (uint64_t)v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1A4BF4F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4BF4F9C(uint64_t a1, void *a2, unsigned char *a3)
{
  id v14 = a2;
  if (!objc_msgSend_type(v14, v5, v6, v7))
  {
    uint64_t v11 = objc_msgSend_message(v14, v8, v9, v10);
    uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    *a3 = 1;
  }
}

id sub_1A4BF5014(void *a1, const char *a2)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1A4B3453C;
  uint64_t v9 = sub_1A4B34384;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4BF5118;
  v4[3] = &unk_1E5B7DA88;
  v4[4] = &v5;
  objc_msgSend___enumerateItemsWithOptions_usingBlock_(a1, a2, 2, (uint64_t)v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1A4BF5100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4BF5118(uint64_t a1, void *a2, unsigned char *a3)
{
  id v20 = a2;
  uint64_t v8 = objc_msgSend_type(v20, v5, v6, v7);
  id v11 = v20;
  if (!v8)
  {
    uint64_t v12 = objc_msgSend_message(v20, (const char *)v20, v9, v10);
    if ((objc_msgSend_isTypingMessage(v12, v13, v14, v15) & 1) == 0
      && (objc_msgSend_isSuggestedActionResponse(v12, v16, v17, v18) & 1) == 0)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v12);
      *a3 = 1;
    }

    id v11 = v20;
  }

  return MEMORY[0x1F41817F8](v8, v11);
}

id sub_1A4BF51B8(void *a1, const char *a2)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1A4B3453C;
  uint64_t v9 = sub_1A4B34384;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4BF52BC;
  v4[3] = &unk_1E5B7DA88;
  v4[4] = &v5;
  objc_msgSend___enumerateItemsWithOptions_usingBlock_(a1, a2, 2, (uint64_t)v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1A4BF52A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4BF52BC(uint64_t a1, void *a2, unsigned char *a3)
{
  id v17 = a2;
  uint64_t v8 = objc_msgSend_type(v17, v5, v6, v7);
  id v11 = v17;
  if (!v8)
  {
    uint64_t v12 = objc_msgSend_message(v17, (const char *)v17, v9, v10);
    if ((objc_msgSend_isFromMe(v12, v13, v14, v15) & 1) == 0)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v12);
      *a3 = 1;
    }

    id v11 = v17;
  }

  return MEMORY[0x1F41817F8](v8, v11);
}

id sub_1A4BF5350(void *a1, const char *a2)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1A4B3453C;
  uint64_t v9 = sub_1A4B34384;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4BF5454;
  v4[3] = &unk_1E5B7DA88;
  v4[4] = &v5;
  objc_msgSend___enumerateItemsWithOptions_usingBlock_(a1, a2, 2, (uint64_t)v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1A4BF543C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4BF5454(uint64_t a1, void *a2, unsigned char *a3)
{
  id v20 = a2;
  uint64_t v8 = objc_msgSend_type(v20, v5, v6, v7);
  id v11 = v20;
  if (!v8)
  {
    uint64_t v12 = objc_msgSend_message(v20, (const char *)v20, v9, v10);
    if ((objc_msgSend_isFromMe(v12, v13, v14, v15) & 1) == 0
      && (objc_msgSend_isTypingMessage(v12, v16, v17, v18) & 1) == 0)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v12);
      *a3 = 1;
    }

    id v11 = v20;
  }

  return MEMORY[0x1F41817F8](v8, v11);
}

void sub_1A4BF54F4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = sub_1A4BF5598;
  v9[3] = &unk_1E5B7DAB0;
  id v10 = v6;
  id v7 = v6;
  objc_msgSend___enumerateItemsWithOptions_usingBlock_(a1, v8, a3, (uint64_t)v9);
}

void sub_1A4BF5598(uint64_t a1, void *a2, uint64_t a3)
{
  id v13 = a2;
  if (!objc_msgSend_type(v13, v5, v6, v7))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = objc_msgSend_message(v13, v8, v9, v10);
    (*(void (**)(uint64_t, void *, uint64_t))(v11 + 16))(v11, v12, a3);
  }
}

id sub_1A4BF5620(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend___imItems(a1, a2, a3, a4);
  uint64_t v7 = objc_msgSend___imArrayByApplyingBlock_(v4, v5, (uint64_t)&unk_1EF8E5518, v6);

  return v7;
}

id sub_1A4BF5674(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (objc_msgSend_type(v2, v3, v4, v5)) {
    id v6 = 0;
  }
  else {
    id v6 = v2;
  }

  return v6;
}

id sub_1A4BF56C8(void *a1, const char *a2)
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x3032000000;
  uint64_t v8 = sub_1A4B3453C;
  uint64_t v9 = sub_1A4B34384;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4BF57CC;
  v4[3] = &unk_1E5B7DA88;
  v4[4] = &v5;
  objc_msgSend___enumerateItemsWithOptions_usingBlock_(a1, a2, 2, (uint64_t)v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1A4BF57B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4BF57CC(uint64_t a1, void *a2, unsigned char *a3)
{
  id v9 = a2;
  if (!objc_msgSend_type(v9, v6, v7, v8))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a3 = 1;
  }
}

void sub_1A4BF5844(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  v13[0] = 0;
  v13[1] = v13;
  v13[2] = 0x3032000000;
  v13[3] = sub_1A4B3453C;
  void v13[4] = sub_1A4B34384;
  id v14 = 0;
  unint64_t v7 = a3 & 0xFFFFFFFFFFFFFFFELL;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = sub_1A4BF5958;
  v10[3] = &unk_1E5B7DAD8;
  uint64_t v12 = v13;
  id v8 = v6;
  id v11 = v8;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(a1, v9, v7, (uint64_t)v10);

  _Block_object_dispose(v13, 8);
}

void sub_1A4BF5940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4BF5958(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend__parentItem(a2, (const char *)a2, a3, a4);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v6 + 40);
  unint64_t v7 = (id *)(v6 + 40);
  if (v5 != v8)
  {
    id v10 = v5;
    objc_storeStrong(v7, v5);
    unint64_t v7 = (id *)(*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
    uint64_t v5 = v10;
  }

  return MEMORY[0x1F41817F8](v7, v5);
}

id sub_1A4BF59DC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)MEMORY[0x1E4F1CA48];
  uint64_t v6 = objc_msgSend_count(a1, a2, a3, a4);
  id v9 = objc_msgSend_arrayWithCapacity_(v5, v7, v6, v8);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v10 = a1;
  uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v27, (uint64_t)v31, 16);
  if (v12)
  {
    uint64_t v16 = v12;
    uint64_t v17 = 0;
    uint64_t v18 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        if (*(void *)v28 != v18) {
          objc_enumerationMutation(v10);
        }
        uint64_t v20 = objc_msgSend__parentItem(*(void **)(*((void *)&v27 + 1) + 8 * i), v13, v14, v15, (void)v27);
        uint64_t v23 = (void *)v20;
        if (v20) {
          BOOL v24 = v20 == (void)v17;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          objc_msgSend_addObject_(v9, v21, v20, v22);
          id v25 = v23;

          uint64_t v17 = v25;
        }
      }
      uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v13, (uint64_t)&v27, (uint64_t)v31, 16);
    }
    while (v16);
  }
  else
  {
    uint64_t v17 = 0;
  }

  return v9;
}

id IMEmotePrefixes()
{
  id v0 = (void *)qword_1E965E9E0;
  if (!qword_1E965E9E0)
  {
    id v1 = objc_alloc(MEMORY[0x1E4F1C978]);
    uint64_t v4 = objc_msgSend_initWithObjects_(v1, v2, @"/me", v3, @"/emote", @"/em", 0);
    uint64_t v5 = (void *)qword_1E965E9E0;
    qword_1E965E9E0 = v4;

    id v0 = (void *)qword_1E965E9E0;
  }

  return v0;
}

uint64_t IMMessageCompare(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = a2;
  if (v5 == v6)
  {
    uint64_t v11 = 0;
  }
  else
  {
    Class = object_getClass(v5);
    if (Class == object_getClass(v6))
    {
      if (a3 == 2)
      {
        uint64_t v15 = v6[8];
        uint64_t v16 = v5[8];
        BOOL v17 = v15 == v16;
        BOOL v18 = v15 < v16;
        uint64_t v19 = -1;
        if (!v18) {
          uint64_t v19 = 1;
        }
        if (v17) {
          uint64_t v11 = 0;
        }
        else {
          uint64_t v11 = v19;
        }
      }
      else
      {
        if (a3 == 1)
        {
          uint64_t v12 = (__CFString *)v5[7];
          CFStringRef v13 = (const __CFString *)v6[7];
          v21.length = objc_msgSend_length(v12, v8, v9, v10);
          v21.NSUInteger location = 0;
          uint64_t v14 = CFStringCompareWithOptionsAndLocale(v12, v13, v21, 1uLL, 0);
        }
        else
        {
          uint64_t v14 = objc_msgSend_compare_((void *)v5[5], v8, v6[5], v10);
        }
        uint64_t v11 = v14;
      }
    }
    else
    {
      uint64_t v11 = -1;
    }
  }

  return v11;
}

void sub_1A4BF9494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A4BF9030);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4BF9548(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v221 = *MEMORY[0x1E4F143B8];
  id v200 = a2;
  uint64_t v201 = a1;
  uint64_t v8 = objc_msgSend_attributedSubstringFromRange_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v7, a3, a4);
  uint64_t v198 = objc_msgSend_trimmedString(v8, v9, v10, v11);

  v199 = objc_msgSend_attributedSubstringFromRange_(*(void **)(*(void *)(*(void *)(v201 + 48) + 8) + 40), v12, a3, a4);
  uint64_t v203 = objc_msgSend_trimmedString(v199, v13, v14, v15);
  if (!v200)
  {
LABEL_17:
    uint64_t v196 = 0;
    id v197 = 0;
    goto LABEL_18;
  }
  uint64_t v19 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v16, v17, v18);
  uint64_t v20 = (void *)*MEMORY[0x1E4F6CC10];
  uint64_t v23 = objc_msgSend_dataSourceClassForBundleID_(v19, v21, *MEMORY[0x1E4F6CC10], v22);

  LODWORD(v19) = objc_msgSend_supportsURL_(v23, v24, (uint64_t)v200, v25);
  int v26 = IMOSLoggingEnabled();
  if (!v19)
  {
    if (v26)
    {
      long long v77 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v23;
        _os_log_impl(&dword_1A4AF7000, v77, OS_LOG_TYPE_INFO, "%@ did not support URL", (uint8_t *)&buf, 0xCu);
      }
    }
    goto LABEL_17;
  }
  if (v26)
  {
    long long v27 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, "Initializing rich link", (uint8_t *)&buf, 2u);
    }
  }
  long long v28 = objc_alloc_init(IMPluginPayload);
  objc_msgSend_setMessageGUID_(v28, v29, *(void *)(*(void *)(*(void *)(v201 + 56) + 8) + 40), v30);
  objc_msgSend_setPluginBundleID_(v28, v31, (uint64_t)v20, v32);
  objc_msgSend_setUrl_(v28, v33, (uint64_t)v200, v34);
  if (objc_msgSend_length(*(void **)(*(void *)(*(void *)(v201 + 48) + 8) + 40), v35, v36, v37) == a4)
  {
    uint64_t v41 = objc_msgSend_payloadData(*(void **)(v201 + 32), v38, v39, v40);
    v214[5] = 0;
    uint64_t v42 = IMSharedHelperPayloadFromCombinedPluginPayloadData();
    id v43 = 0;
    objc_msgSend_setData_(v28, v44, (uint64_t)v42, v45);

    objc_msgSend_setAttachments_(v28, v46, (uint64_t)v43, v47);
  }
  int v48 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v38, v39, v40);
  uint64_t v51 = objc_msgSend_dataSourceForPluginPayload_(v48, v49, (uint64_t)v28, v50);

  objc_msgSend_payloadWillEnterShelf(v51, v52, v53, v54);
  objc_msgSend_payloadWillSendFromShelf(v51, v55, v56, v57);
  uint64_t v196 = objc_msgSend_messagePayloadDataForSending(v51, v58, v59, v60);
  id v197 = v20;
  objc_msgSend_setPayloadInShelf_(v51, v61, 0, v62);
  if (*(unsigned char *)(*(void *)(*(void *)(v201 + 64) + 8) + 24))
  {
    uint64_t v66 = objc_msgSend_messageSubject(*(void **)(v201 + 32), v63, v64, v65);
    BOOL v70 = objc_msgSend_length(v66, v67, v68, v69) == 0;

    if (!v70)
    {
      *(unsigned char *)(*(void *)(*(void *)(v201 + 72) + 8) + 24) = 1;
      uint64_t v74 = objc_msgSend_stringGUID(NSString, v71, v72, v73);
      uint64_t v75 = *(void *)(*(void *)(v201 + 56) + 8);
      uint64_t v76 = *(void **)(v75 + 40);
      *(void *)(v75 + 40) = v74;
    }
  }

LABEL_18:
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v217 = 0x3032000000;
  uint64_t v218 = sub_1A4B3454C;
  uint64_t v219 = sub_1A4B3438C;
  id v220 = 0;
  uint64_t v78 = objc_msgSend_length(v198, v16, v17, v18);
  uint64_t v79 = *MEMORY[0x1E4F6C188];
  v214[0] = MEMORY[0x1E4F143A8];
  v214[1] = 3221225472;
  v214[2] = sub_1A4BF9E80;
  v214[3] = &unk_1E5B7DB30;
  v214[4] = &buf;
  objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(v198, v80, v79, 0, v78, 0, v214);
  if (objc_msgSend_length(v203, v81, v82, v83))
  {
    uint64_t v87 = objc_msgSend_string(v199, v84, v85, v86);
    uint64_t v91 = objc_msgSend_string(v203, v88, v89, v90);
    uint64_t v94 = objc_msgSend_rangeOfString_(v87, v92, (uint64_t)v91, v93);
  }
  else
  {
    uint64_t v94 = 0;
  }
  uint64_t v95 = v94 + a3;
  if (v94 + a3 < 1)
  {
    uint64_t v202 = v203;
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v99 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v99, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)int v213 = 0;
        _os_log_impl(&dword_1A4AF7000, v99, OS_LOG_TYPE_INFO, "Shifting DD attributed results by a non-zero offset.", v213, 2u);
      }
    }
    uint64_t v202 = objc_msgSend_mutableCopy(v203, v96, v97, v98);
    long long v211 = 0u;
    long long v212 = 0u;
    long long v209 = 0u;
    long long v210 = 0u;
    uint64_t v103 = objc_msgSend_allSupportedDDAttributesKeys(IMDDController, v100, v101, v102);
    uint64_t v108 = objc_msgSend_countByEnumeratingWithState_objects_count_(v103, v104, (uint64_t)&v209, (uint64_t)v215, 16);
    if (v108)
    {
      uint64_t v109 = *(void *)v210;
      do
      {
        for (uint64_t i = 0; i != v108; ++i)
        {
          if (*(void *)v210 != v109) {
            objc_enumerationMutation(v103);
          }
          uint64_t v111 = *(void *)(*((void *)&v209 + 1) + 8 * i);
          uint64_t v112 = objc_msgSend_length(v203, v105, v106, v107);
          v205[0] = MEMORY[0x1E4F143A8];
          v205[1] = 3221225472;
          v205[2] = sub_1A4BF9F10;
          v205[3] = &unk_1E5B7DB58;
          uint64_t v208 = v95;
          id v206 = v202;
          uint64_t v207 = v111;
          objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(v203, v113, v111, 0, v112, 0, v205);
        }
        uint64_t v108 = objc_msgSend_countByEnumeratingWithState_objects_count_(v103, v105, (uint64_t)&v209, (uint64_t)v215, 16);
      }
      while (v108);
    }
  }
  uint64_t v195 = [IMMessage alloc];
  uint64_t v204 = objc_msgSend_sender(*(void **)(v201 + 32), v114, v115, v116);
  uint64_t v123 = objc_msgSend_time(*(void **)(v201 + 32), v117, v118, v119);
  if (*(unsigned char *)(*(void *)(*(void *)(v201 + 64) + 8) + 24)
    && !*(unsigned char *)(*(void *)(*(void *)(v201 + 72) + 8) + 24))
  {
    uint64_t v124 = objc_msgSend_messageSubject(*(void **)(v201 + 32), v120, v121, v122);
    int v194 = 1;
  }
  else
  {
    int v194 = 0;
    uint64_t v124 = 0;
  }
  uint64_t v125 = *(void *)(*((void *)&buf + 1) + 40);
  uint64_t v126 = objc_msgSend_flags(*(void **)(v201 + 32), v120, v121, v122);
  uint64_t v127 = *(void *)(*(void *)(*(void *)(v201 + 56) + 8) + 40);
  uint64_t v131 = objc_msgSend_subject(*(void **)(v201 + 32), v128, v129, v130);
  uint64_t v135 = objc_msgSend_expressiveSendStyleID(*(void **)(v201 + 32), v132, v133, v134);
  uint64_t v139 = objc_msgSend_threadIdentifier(*(void **)(v201 + 32), v136, v137, v138);
  uint64_t v143 = objc_msgSend_scheduleType(*(void **)(v201 + 32), v140, v141, v142);
  uint64_t v147 = objc_msgSend_scheduleState(*(void **)(v201 + 32), v144, v145, v146);
  uint64_t v149 = objc_msgSend_initWithSender_time_text_messageSubject_fileTransferGUIDs_flags_error_guid_subject_balloonBundleID_payloadData_expressiveSendStyleID_threadIdentifier_scheduleType_scheduleState_(v195, v148, (uint64_t)v204, (uint64_t)v123, v202, v124, v125, v126, 0, v127, v131, v197, v196, v135, v139, v143, v147);

  if (v194) {
  uint64_t v153 = objc_msgSend_associatedBalloonBundleID(*(void **)(v201 + 32), v150, v151, v152);
  }
  objc_msgSend_setAssociatedBalloonBundleID_(v149, v154, (uint64_t)v153, v155);

  id v159 = objc_msgSend_sourceApplicationID(*(void **)(v201 + 32), v156, v157, v158);
  objc_msgSend_setSourceApplicationID_(v149, v160, (uint64_t)v159, v161);

  uint64_t v162 = v201;
  uint64_t shouldNotifyOnSend = objc_msgSend_shouldNotifyOnSend(*(void **)(v201 + 32), v163, v164, v165);
  objc_msgSend_setShouldNotifyOnSend_(v149, v167, shouldNotifyOnSend, v168);
  uint64_t v172 = objc_msgSend_sentViaRemoteIntent(*(void **)(v201 + 32), v169, v170, v171);
  objc_msgSend_setSentViaRemoteIntent_(v149, v173, v172, v174);
  if (objc_msgSend_isReply(v149, v175, v176, v177))
  {
    long long v181 = objc_msgSend_threadOriginator(*(void **)(v201 + 32), v178, v179, v180);
    objc_msgSend_setThreadOriginator_(v149, v182, (uint64_t)v181, v183);

    uint64_t v162 = v201;
  }
  uint64_t v184 = objc_msgSend_stringGUID(NSString, v178, v179, v180);
  uint64_t v185 = *(void *)(*(void *)(v162 + 56) + 8);
  long long v186 = *(void **)(v185 + 40);
  *(void *)(v185 + 40) = v184;

  uint64_t v189 = v201;
  uint64_t v190 = *(void **)(*(void *)(*(void *)(v201 + 80) + 8) + 40);
  if (!v190)
  {
    id v191 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v192 = *(void *)(*(void *)(v201 + 80) + 8);
    uint64_t v193 = *(void **)(v192 + 40);
    *(void *)(v192 + 40) = v191;

    uint64_t v190 = *(void **)(*(void *)(*(void *)(v201 + 80) + 8) + 40);
    uint64_t v189 = v201;
  }
  objc_msgSend_addObject_(v190, v187, (uint64_t)v149, v188);
  *(unsigned char *)(*(void *)(*(void *)(v189 + 64) + 8) + 24) = 0;

  _Block_object_dispose(&buf, 8);
}

uint64_t sub_1A4BF9E80(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = v3;
  if (v3)
  {
    uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    uint64_t v11 = (uint64_t)v5;
    if (!v6)
    {
      id v7 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
      uint64_t v9 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v7;

      uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    }
    uint64_t v3 = (const char *)objc_msgSend_addObject_(v6, v5, v11, v4);
    uint64_t v5 = (const char *)v11;
  }

  return MEMORY[0x1F41817F8](v3, v5);
}

void sub_1A4BF9F10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  if (v7)
  {
    uint64_t v8 = v7;
    IMOffsetSerializedDDScannerResult(v7, -*(void *)(a1 + 48));
    id v11 = (id)objc_claimAutoreleasedReturnValue();

    objc_msgSend_removeAttribute_range_(*(void **)(a1 + 32), v9, *(void *)(a1 + 40), a3, a4);
    objc_msgSend_addAttribute_value_range_(*(void **)(a1 + 32), v10, *(void *)(a1 + 40), (uint64_t)v11, a3, a4);
  }
}

uint64_t sub_1A4BFA43C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_addObject_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
}

void *sub_1A4BFB148()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("MarcoLoggingStringForMessageData", @"Marco");
  off_1E965E740 = result;
  return result;
}

__CFString *_NSStringFromIMMessageError(unint64_t a1)
{
  if (a1 > 0x2B) {
    return @"Undefined Error";
  }
  else {
    return *(&off_1E5B7DBC8 + a1);
  }
}

void sub_1A4BFBFC0()
{
  id v0 = objc_alloc(MEMORY[0x1E4F28E48]);
  id v2 = objc_msgSend_dictionaryWithObject_forKey_(MEMORY[0x1E4F1C9E8], v1, (uint64_t)&unk_1EF914518, *MEMORY[0x1E4F6C1F8]);
  id v7 = (id)objc_msgSend_initWithString_attributes_(v0, v3, @" ", (uint64_t)v2);

  uint64_t v5 = objc_msgSend_attributesAtIndex_effectiveRange_(v7, v4, 0, 0);
  uint64_t v6 = (void *)qword_1E965E9E8;
  qword_1E965E9E8 = v5;
}

void sub_1A4BFC300(uint64_t a1)
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4BFC390;
  block[3] = &unk_1E5B7ADC8;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async(MEMORY[0x1E4F14428], block);
  objc_destroyWeak(&v2);
}

void sub_1A4BFC390(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_fetchScreenTimeAppPolicy(WeakRetained, v1, v2, v3);
}

void sub_1A4BFC6A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_postNotificationName_object_userInfo_(v5, v4, @"com.apple.messages.IMDowntimeStateChangedNotification", 0, 0);
}

void sub_1A4BFC804(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = sub_1A4BFC8E4;
  v11[3] = &unk_1E5B7B1D0;
  id v12 = v6;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  id v13 = v7;
  uint64_t v14 = v8;
  id v15 = v5;
  id v9 = v5;
  id v10 = v6;
  dispatch_async(MEMORY[0x1E4F14428], v11);
}

void sub_1A4BFC8E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 32))
  {
    if (IMOSLoggingEnabled())
    {
      id v5 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        id v6 = *(void **)(a1 + 40);
        int v21 = 138412546;
        uint64_t v22 = v6;
        __int16 v23 = 2112;
        uint64_t v24 = v7;
        _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "error retrieving application policy for bundle identifier:%@ - %@", (uint8_t *)&v21, 0x16u);
      }
    }
  }
  else
  {
    uint64_t v8 = objc_msgSend_bundleIDPolicyMap(*(void **)(a1 + 48), a2, a3, a4);
    objc_msgSend_addEntriesFromDictionary_(v8, v9, *(void *)(a1 + 56), v10);

    uint64_t v14 = objc_msgSend_allKeys(*(void **)(a1 + 56), v11, v12, v13);
    if (IMOSLoggingEnabled())
    {
      uint64_t v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        int v21 = 138412290;
        uint64_t v22 = v14;
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Successfully fetched App Downtime Polcies for app bundles with  identifiers: %@", (uint8_t *)&v21, 0xCu);
      }
    }
    uint64_t v19 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v15, v16, v17);
    objc_msgSend_postNotificationName_object_userInfo_(v19, v20, @"com.apple.messages.IMDowntimeStateChangedForBundleID", 0, 0);
  }
}

uint64_t sub_1A4BFCDF0()
{
  os_log_t v0 = os_log_create("com.apple.Messages", "chatregistry.performance");
  uint64_t v1 = qword_1E965DD70;
  qword_1E965DD70 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

BOOL sub_1A4BFD910(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_existingChatWithChatIdentifier_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  BOOL v5 = v4 != 0;

  return v5;
}

void sub_1A4BFDBD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    uint64_t v8 = v4;
    if (v4)
    {
      id v9 = *(__CFDictionary **)(*(void *)(a1 + 32) + 184);
      uint64_t v10 = objc_msgSend_guid(v4, v5, v6, v7);
      CFDictionarySetValue(v9, v10, v8);
    }
    else
    {
      BOOL v11 = os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR);
      if (v11) {
        sub_1A4CB9130(v11, v12, v13, v14);
      }
    }
  }
}

uint64_t IMRunAllCloudKitEventNotificationManagerTests(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F4181798](IMCloudKitEventNotificationRuntimeTestSuite, sel_runTestsIfNeeded, a3, a4);
}

void sub_1A4BFFD68(uint64_t a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412546;
      uint64_t v17 = v8;
      __int16 v18 = 2112;
      id v19 = v3;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "EXTENSION INTERRUPTION BLOCK CALLED extensionIdentifier: %@, requestIdentifier: %@", buf, 0x16u);
    }
  }
  id v9 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v4, v5, v6);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v14 = *MEMORY[0x1E4F6D340];
  uint64_t v15 = v10;
  uint64_t v12 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v11, (uint64_t)&v15, (uint64_t)&v14, 1);
  objc_msgSend___mainThreadPostNotificationName_object_userInfo_(v9, v13, *MEMORY[0x1E4F6D348], 0, v12);
}

void sub_1A4C00018()
{
  v5[1] = *MEMORY[0x1E4F143B8];
  os_log_t v0 = IMBalloonExtensionIDWithSuffix();
  id v4 = v0;
  v5[0] = &unk_1EF914548;
  uint64_t v2 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v1, (uint64_t)v5, (uint64_t)&v4, 1);
  id v3 = (void *)qword_1E965E9F8;
  qword_1E965E9F8 = v2;
}

void sub_1A4C002B4(uint64_t a1, const char *a2)
{
  _DWORD v6[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *MEMORY[0x1E4F6CB78];
  v5[0] = *MEMORY[0x1E4F6CBF8];
  v5[1] = v2;
  v6[0] = &unk_1EF914740;
  v6[1] = &unk_1EF914750;
  uint64_t v3 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v6, (uint64_t)v5, 2);
  id v4 = (void *)qword_1E965EA08;
  qword_1E965EA08 = v3;
}

void sub_1A4C003AC()
{
  uint64_t v0 = IMSharedHelperStickerAppsTemporarilyDisplayedInSendMenu();
  uint64_t v1 = (void *)qword_1E965EA18;
  qword_1E965EA18 = v0;

  if (!qword_1E965EA18)
  {
    qword_1E965EA18 = (uint64_t)&unk_1EF9146C8;
  }
}

void sub_1A4C00464()
{
  uint64_t v0 = (void *)qword_1E965EA28;
  qword_1E965EA28 = (uint64_t)&unk_1EF9146E0;
}

uint64_t sub_1A4C012DC()
{
  uint64_t result = MEMORY[0x1A6263B40](@"LSPlugInKitProxy", @"CoreServices");
  qword_1EB3F21F0 = result;
  return result;
}

void sub_1A4C016B4(uint64_t a1, const char *a2)
{
  v19[1] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (void *)MEMORY[0x1E4F28C58];
  uint64_t v18 = *MEMORY[0x1E4F28568];
  v19[0] = @"Observer was not invalidated before dealloc for a handle";
  id v4 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], a2, (uint64_t)v19, (uint64_t)&v18, 1);
  uint64_t v6 = objc_msgSend_errorWithDomain_code_userInfo_(v3, v5, @"IMHandleStatusObserverErrorDomain", 0, v4);

  uint64_t v10 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E890], v7, v8, v9);
  objc_msgSend_forceAutoBugCaptureWithSubType_errorPayload_(v10, v11, @"IMHandleStatusObserver oversubscribed", (uint64_t)v6);

  uint64_t v15 = objc_msgSend_sharedInstance(IMHandleStatusManager, v12, v13, v14);
  objc_msgSend_invalidateObserver_(v15, v16, *(void *)(a1 + 32), v17);
}

uint64_t sub_1A4C018D8()
{
  uint64_t v0 = objc_alloc_init(IMHandleStatusManager);
  uint64_t v1 = qword_1EB3F2480;
  qword_1EB3F2480 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C024D4(uint64_t a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v7 = objc_msgSend_subscriptionIdentifier(v3, v4, v5, v6);
  if (IMOSLoggingEnabled())
  {
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412546;
      uint64_t v17 = v7;
      __int16 v18 = 2112;
      uint64_t v19 = v9;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Retaining transient subscription assertion on subscription: \"%@\" for handle: \"%@\"", buf, 0x16u);
    }
  }
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = sub_1A4C02654;
  v13[3] = &unk_1E5B7E128;
  id v14 = v7;
  id v15 = *(id *)(a1 + 32);
  id v10 = v7;
  objc_msgSend_retainTransientSubscriptionAssertionWithCompletion_(v3, v11, (uint64_t)v13, v12);
}

void sub_1A4C02654(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    id v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB91C8();
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Successfully retained transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1A4C02780(uint64_t a1, void *a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = IMOSLoggingEnabled();
  if (!v3)
  {
    if (!v4) {
      goto LABEL_20;
    }
    __int16 v23 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      long long v27 = objc_msgSend_ID(*(void **)(a1 + 32), v24, v25, v26);
      int v32 = 138412290;
      id v33 = v27;
      _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Failed to fetch StatusKit subscription, it's likely we have not received an invitation from %@", (uint8_t *)&v32, 0xCu);
    }
LABEL_19:

    goto LABEL_20;
  }
  if (v4)
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v32 = 138412290;
      id v33 = v3;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "StatusKit subscription fetched %@, checking if a retain is still necessary", (uint8_t *)&v32, 0xCu);
    }
  }
  uint64_t v9 = objc_msgSend_observers(*(void **)(a1 + 40), v5, v6, v7);
  uint64_t v13 = objc_msgSend_ID(*(void **)(a1 + 32), v10, v11, v12);
  uint64_t v16 = objc_msgSend_objectForKey_(v9, v14, (uint64_t)v13, v15);

  int v17 = IMOSLoggingEnabled();
  if (!v16)
  {
    if (!v17) {
      goto LABEL_20;
    }
    __int16 v23 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      long long v31 = objc_msgSend_ID(*(void **)(a1 + 32), v28, v29, v30);
      int v32 = 138412290;
      id v33 = v31;
      _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "No valid observers for handle %@, not retaining transient subscription assertion", (uint8_t *)&v32, 0xCu);
    }
    goto LABEL_19;
  }
  if (v17)
  {
    __int16 v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      uint64_t v22 = objc_msgSend_ID(*(void **)(a1 + 32), v19, v20, v21);
      int v32 = 138412290;
      id v33 = v22;
      _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "There are valid observers for handle %@, retaining assertion", (uint8_t *)&v32, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_20:
}

void sub_1A4C02A10(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C029D8);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C02DAC(uint64_t a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v7 = objc_msgSend_subscriptionIdentifier(v3, v4, v5, v6);
  if (IMOSLoggingEnabled())
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412546;
      int v17 = v7;
      __int16 v18 = 2112;
      uint64_t v19 = v9;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Releasing transient subscription assertion on subscription: \"%@\" for handle: \"%@\"", buf, 0x16u);
    }
  }
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = sub_1A4C02F28;
  v13[3] = &unk_1E5B7E128;
  id v14 = *(id *)(a1 + 32);
  id v15 = v7;
  id v10 = v7;
  objc_msgSend_releaseTransientSubscriptionAssertionWithCompletion_(v3, v11, (uint64_t)v13, v12);
}

void sub_1A4C02F28(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    int v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9234();
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Successfully released transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1A4C03054(uint64_t a1, void *a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = IMOSLoggingEnabled();
  if (!v3)
  {
    if (!v4) {
      goto LABEL_20;
    }
    __int16 v23 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      long long v27 = objc_msgSend_ID(*(void **)(a1 + 32), v24, v25, v26);
      int v32 = 138412290;
      id v33 = v27;
      _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Failed to fetch StatusKit subscription, it's likely we have not received an invitation from %@", (uint8_t *)&v32, 0xCu);
    }
LABEL_19:

    goto LABEL_20;
  }
  if (v4)
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v32 = 138412290;
      id v33 = v3;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "StatusKit subscription fetched %@, checking if a retain is still necessary", (uint8_t *)&v32, 0xCu);
    }
  }
  uint64_t v9 = objc_msgSend_observers(*(void **)(a1 + 40), v5, v6, v7);
  uint64_t v13 = objc_msgSend_ID(*(void **)(a1 + 32), v10, v11, v12);
  uint64_t v16 = objc_msgSend_objectForKey_(v9, v14, (uint64_t)v13, v15);

  int v17 = IMOSLoggingEnabled();
  if (!v16)
  {
    if (!v17) {
      goto LABEL_20;
    }
    __int16 v23 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      long long v31 = objc_msgSend_ID(*(void **)(a1 + 32), v28, v29, v30);
      int v32 = 138412290;
      id v33 = v31;
      _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "No valid observers for handle %@, not retaining transient subscription assertion", (uint8_t *)&v32, 0xCu);
    }
    goto LABEL_19;
  }
  if (v17)
  {
    __int16 v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      uint64_t v22 = objc_msgSend_ID(*(void **)(a1 + 32), v19, v20, v21);
      int v32 = 138412290;
      id v33 = v22;
      _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "There are valid observers for handle %@, retaining assertion", (uint8_t *)&v32, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_20:
}

void sub_1A4C032E4(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C032ACLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C0362C(uint64_t a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v7 = objc_msgSend_subscriptionIdentifier(v3, v4, v5, v6);
  if (IMOSLoggingEnabled())
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412546;
      int v17 = v7;
      __int16 v18 = 2112;
      uint64_t v19 = v9;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Retaining transient subscription assertion on subscription: \"%@\" for handle: \"%@\"", buf, 0x16u);
    }
  }
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = sub_1A4C037AC;
  v13[3] = &unk_1E5B7E128;
  id v14 = v7;
  id v15 = *(id *)(a1 + 32);
  id v10 = v7;
  objc_msgSend_retainTransientSubscriptionAssertionWithCompletion_(v3, v11, (uint64_t)v13, v12);
}

void sub_1A4C037AC(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    int v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB91C8();
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Successfully retained transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1A4C038D8(uint64_t a1, void *a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = IMOSLoggingEnabled();
  if (!v3)
  {
    if (!v4) {
      goto LABEL_20;
    }
    __int16 v23 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      long long v27 = objc_msgSend_ID(*(void **)(a1 + 32), v24, v25, v26);
      int v32 = 138412290;
      id v33 = v27;
      _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Failed to fetch StatusKit subscription, it's likely we have not received an invitation from %@", (uint8_t *)&v32, 0xCu);
    }
LABEL_19:

    goto LABEL_20;
  }
  if (v4)
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v32 = 138412290;
      id v33 = v3;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "StatusKit Subscription fetched %@, checking if a retain is still necessary", (uint8_t *)&v32, 0xCu);
    }
  }
  uint64_t v9 = objc_msgSend_observers(*(void **)(a1 + 40), v5, v6, v7);
  uint64_t v13 = objc_msgSend_ID(*(void **)(a1 + 32), v10, v11, v12);
  uint64_t v16 = objc_msgSend_objectForKey_(v9, v14, (uint64_t)v13, v15);

  int v17 = IMOSLoggingEnabled();
  if (!v16)
  {
    if (!v17) {
      goto LABEL_20;
    }
    __int16 v23 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      long long v31 = objc_msgSend_ID(*(void **)(a1 + 32), v28, v29, v30);
      int v32 = 138412290;
      id v33 = v31;
      _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "No valid observers for handle %@, not retaining transient subscription assertion", (uint8_t *)&v32, 0xCu);
    }
    goto LABEL_19;
  }
  if (v17)
  {
    __int16 v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      uint64_t v22 = objc_msgSend_ID(*(void **)(a1 + 32), v19, v20, v21);
      int v32 = 138412290;
      id v33 = v22;
      _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "There are valid observers for handle %@, retaining assertion", (uint8_t *)&v32, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_20:
}

void sub_1A4C03B68(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C03B30);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C03EB0(uint64_t a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v7 = objc_msgSend_subscriptionIdentifier(v3, v4, v5, v6);
  if (IMOSLoggingEnabled())
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412546;
      int v17 = v7;
      __int16 v18 = 2112;
      uint64_t v19 = v9;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Releasing transient subscription assertion on subscription: \"%@\" for handle: \"%@\"", buf, 0x16u);
    }
  }
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = sub_1A4C0402C;
  v13[3] = &unk_1E5B7E128;
  id v14 = *(id *)(a1 + 32);
  id v15 = v7;
  id v10 = v7;
  objc_msgSend_releaseTransientSubscriptionAssertionWithCompletion_(v3, v11, (uint64_t)v13, v12);
}

void sub_1A4C0402C(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    int v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9234();
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Successfully released transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1A4C04158(uint64_t a1, void *a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = IMOSLoggingEnabled();
  if (!v3)
  {
    if (!v4) {
      goto LABEL_20;
    }
    __int16 v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      uint64_t v26 = objc_msgSend_ID(*(void **)(a1 + 32), v23, v24, v25);
      int v32 = 138412290;
      id v33 = v26;
      _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Failed to fetch StatusKit subscription, it's likely we have not received an invitation from %@", (uint8_t *)&v32, 0xCu);
    }
    goto LABEL_10;
  }
  if (v4)
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v32 = 138412290;
      id v33 = v3;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "StatusKit Subscription fetched %@, checking if a retain is still necessary", (uint8_t *)&v32, 0xCu);
    }
  }
  uint64_t v9 = objc_msgSend_observers(*(void **)(a1 + 40), v5, v6, v7);
  uint64_t v13 = objc_msgSend_ID(*(void **)(a1 + 32), v10, v11, v12);
  uint64_t v16 = objc_msgSend_objectForKey_(v9, v14, (uint64_t)v13, v15);

  int v17 = IMOSLoggingEnabled();
  if (v16)
  {
    if (v17)
    {
      __int16 v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        uint64_t v22 = objc_msgSend_ID(*(void **)(a1 + 32), v19, v20, v21);
        int v32 = 138412290;
        id v33 = v22;
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "There are valid observers for handle %@, not releasing transient subscription assertion", (uint8_t *)&v32, 0xCu);
      }
LABEL_10:
    }
  }
  else
  {
    if (v17)
    {
      long long v27 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        long long v31 = objc_msgSend_ID(*(void **)(a1 + 32), v28, v29, v30);
        int v32 = 138412290;
        id v33 = v31;
        _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, "No valid observers for handle %@, releasing transient subscription assertion", (uint8_t *)&v32, 0xCu);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
LABEL_20:
}

void sub_1A4C043E8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C0439CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C045D4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

void sub_1A4C04758(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void **)(a1 + 32);
  objc_msgSend_daemonController(*(void **)(a1 + 40), a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_invokeWithTarget_(v4, v5, (uint64_t)v7, v6);
}

void sub_1A4C05870(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v6, (uint64_t)v5, @"filePath");
  uint64_t v9 = objc_msgSend_numberWithBool_(NSNumber, v7, a2, v8);
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v10, (uint64_t)v9, @"success");

  int v11 = IMOSLoggingEnabled();
  if (a2)
  {
    if (v11)
    {
      uint64_t v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        int v15 = 138412290;
        id v16 = v5;
        _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_INFO, "Successfully fetched high res image, filename is %@", (uint8_t *)&v15, 0xCu);
      }
    }
  }
  else
  {
    if (v11)
    {
      id v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        int v15 = 138412290;
        id v16 = v5;
        _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "Error: failed to fetch high res image, filename is %@", (uint8_t *)&v15, 0xCu);
      }
    }
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v12, @"Failed to fetch high res image", @"error");
  }
}

void *sub_1A4C0690C()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessageForGUID", @"IMDPersistence");
  off_1E965EA40 = result;
  return result;
}

void *sub_1A4C0693C()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordBulkCopy", @"IMDPersistence");
  off_1E965EA50 = result;
  return result;
}

id _IMBestAccountForIMMessageItemDictionary(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  __int16 v18 = objc_msgSend_objectForKey_(v9, v13, @"accountID", v14);
  uint64_t v19 = &off_1E5B79000;
  if (!v18
    || (objc_msgSend_sharedInstance(IMAccountController, v15, v16, v17),
        uint64_t v20 = objc_claimAutoreleasedReturnValue(),
        objc_msgSend_accountForUniqueID_(v20, v21, (uint64_t)v18, v22),
        id v23 = (id)objc_claimAutoreleasedReturnValue(),
        v20,
        !v23))
  {
    uint64_t v24 = objc_msgSend_objectForKey_(v9, v15, @"service", v17);
    long long v27 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v25, (uint64_t)v24, v26);
    long long v31 = objc_msgSend_service(v12, v28, v29, v30);

    if (v31 == v27)
    {
      if (a5) {
        *a5 = v12;
      }
      id v23 = v12;
    }
    else
    {
      uint64_t v35 = objc_msgSend_sharedInstance(IMAccountController, v32, v33, v34);
      objc_msgSend_bestAccountForService_(v35, v36, (uint64_t)v27, v37);
      id v23 = (id)objc_claimAutoreleasedReturnValue();

      if (a5)
      {
        id v23 = v23;
        *a5 = v23;
      }
      uint64_t v19 = &off_1E5B79000;
    }

    if (!v23)
    {
      objc_msgSend_account(v10, v38, v39, v40);
      id v23 = (id)objc_claimAutoreleasedReturnValue();
      if (!v23)
      {
        long long v44 = objc_msgSend_sharedInstance(v19[345], v41, v42, v43);
        objc_msgSend_accountForUniqueID_(v44, v45, (uint64_t)v11, v46);
        id v23 = (id)objc_claimAutoreleasedReturnValue();

        if (!v23)
        {
          uint64_t v50 = objc_msgSend_sharedInstance(v19[345], v47, v48, v49);
          objc_msgSend_bestAccountForService_(v50, v51, 0, v52);
          id v23 = (id)objc_claimAutoreleasedReturnValue();
        }
      }
    }
  }

  return v23;
}

void _IMCheckMessageForDDResults(void *a1)
{
  id v23 = a1;
  uint64_t v4 = objc_msgSend_sharedInstance(IMDaemonController, v1, v2, v3);
  int v8 = *MEMORY[0x1E4F6C508] & objc_msgSend_capabilities(v4, v5, v6, v7);

  if (v8
    && (objc_msgSend_isTypingMessage(v23, v9, v10, v11) & 1) == 0
    && (objc_msgSend_wasDataDetected(v23, v12, v13, v14) & 1) == 0
    && objc_msgSend_messageID(v23, v15, v16, v17))
  {
    uint64_t v21 = objc_msgSend_sharedInstance(IMDDController, v18, v19, v20);
    objc_msgSend_scanMessage_completionBlock_(v21, v22, (uint64_t)v23, (uint64_t)&unk_1EF8E55F8);
  }
}

void sub_1A4C07288(uint64_t a1, int a2, void *a3)
{
  id v4 = a3;
  if (a2)
  {
    id v31 = v4;
    int v8 = objc_msgSend_sender(v4, v5, v6, v7);
    id v12 = objc_msgSend_account(v8, v9, v10, v11);
    uint64_t v16 = objc_msgSend_service(v12, v13, v14, v15);
    int v20 = objc_msgSend_supportsDatabaseStorage(v16, v17, v18, v19);

    id v4 = v31;
    if (v20)
    {
      uint64_t v24 = objc_msgSend_sharedInstance(IMDaemonController, v21, v22, v23);
      long long v28 = objc_msgSend__imMessageItem(v31, v25, v26, v27);
      objc_msgSend_updateMessage_(v24, v29, (uint64_t)v28, v30);

      id v4 = v31;
    }
  }
}

void sub_1A4C07CD0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_remoteProxy(*(void **)(*(void *)(a1 + 32) + 16), a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_requestOneTimeCodeStatus(v7, v4, v5, v6);
}

id sub_1A4C08E34(void *a1, void *a2)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v45 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v5, v6, v7);
  uint64_t v11 = objc_msgSend_account(v4, v8, v9, v10);
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v44 = v4;
  uint64_t v15 = objc_msgSend_participants(v4, v12, v13, v14);
  uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v16, (uint64_t)&v46, (uint64_t)v50, 16);
  if (v17)
  {
    uint64_t v21 = v17;
    uint64_t v22 = *(void *)v47;
    uint64_t v23 = MEMORY[0x1E4F1CBF0];
    do
    {
      for (uint64_t i = 0; i != v21; ++i)
      {
        if (*(void *)v47 != v22) {
          objc_enumerationMutation(v15);
        }
        uint64_t v25 = objc_msgSend_ID(*(void **)(*((void *)&v46 + 1) + 8 * i), v18, v19, v20);
        long long v28 = objc_msgSend_imHandleWithID_(v11, v26, (uint64_t)v25, v27);

        uint64_t v33 = objc_msgSend_cnContactWithKeys_(v28, v29, v23, v30);
        if (v33 && objc_msgSend_containsObject_(v3, v31, (uint64_t)v33, v32))
        {
          uint64_t v37 = objc_msgSend_identifier(v33, v34, v35, v36);
          objc_msgSend_setObject_forKeyedSubscript_(v45, v38, (uint64_t)v28, (uint64_t)v37);
        }
      }
      uint64_t v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v18, (uint64_t)&v46, (uint64_t)v50, 16);
    }
    while (v21);
  }

  uint64_t v42 = objc_msgSend_copy(v45, v39, v40, v41);

  return v42;
}

BOOL sub_1A4C09024(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_count(a3, a2, (uint64_t)a3, a4);
  return v5 == objc_msgSend_count(*(void **)(a1 + 32), v6, v7, v8);
}

id sub_1A4C09060(void *a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v5 = objc_msgSend_set(MEMORY[0x1E4F1CA80], v2, v3, v4);
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id obj = v1;
  uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v6, (uint64_t)&v38, (uint64_t)v42, 16);
  if (v7)
  {
    uint64_t v11 = v7;
    uint64_t v12 = *(void *)v39;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v39 != v12) {
          objc_enumerationMutation(obj);
        }
        uint64_t v14 = *(void **)(*((void *)&v38 + 1) + 8 * i);
        uint64_t v15 = objc_msgSend_sharedInstance(IMHandleRegistrar, v8, v9, v10);
        uint64_t v19 = objc_msgSend_identifier(v14, v16, v17, v18);
        uint64_t v22 = objc_msgSend_handlesForCNIdentifier_(v15, v20, (uint64_t)v19, v21);
        uint64_t v26 = objc_msgSend_allObjects(v22, v23, v24, v25);

        uint64_t v29 = objc_msgSend___imArrayByApplyingBlock_(v26, v27, (uint64_t)&unk_1EF8E4230, v28);
        objc_msgSend_addObjectsFromArray_(v5, v30, (uint64_t)v29, v31);
      }
      uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v8, (uint64_t)&v38, (uint64_t)v42, 16);
    }
    while (v11);
  }

  uint64_t v35 = objc_msgSend_copy(v5, v32, v33, v34);

  return v35;
}

id sub_1A4C0921C(void *a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v5 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v2, v3, v4);
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id obj = v1;
  uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v6, (uint64_t)&v38, (uint64_t)v42, 16);
  if (v7)
  {
    uint64_t v11 = v7;
    uint64_t v12 = *(void *)v39;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v39 != v12) {
          objc_enumerationMutation(obj);
        }
        uint64_t v14 = *(void **)(*((void *)&v38 + 1) + 8 * i);
        uint64_t v15 = objc_msgSend_sharedInstance(IMHandleRegistrar, v8, v9, v10);
        uint64_t v19 = objc_msgSend_identifier(v14, v16, v17, v18);
        uint64_t v22 = objc_msgSend_handlesForCNIdentifier_(v15, v20, (uint64_t)v19, v21);
        uint64_t v26 = objc_msgSend_allObjects(v22, v23, v24, v25);
        uint64_t v30 = objc_msgSend_identifier(v14, v27, v28, v29);
        objc_msgSend_setObject_forKeyedSubscript_(v5, v31, (uint64_t)v26, (uint64_t)v30);
      }
      uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v8, (uint64_t)&v38, (uint64_t)v42, 16);
    }
    while (v11);
  }

  uint64_t v35 = objc_msgSend_copy(v5, v32, v33, v34);

  return v35;
}

void sub_1A4C093D0(void *a1, void *a2, void *a3)
{
  uint64_t v12 = a3;
  uint64_t v5 = (void *)MEMORY[0x1E4F6E7B8];
  id v6 = a2;
  uint64_t v10 = objc_msgSend_allObjects(a1, v7, v8, v9);
  LOBYTE(v5) = objc_msgSend_refreshIDStatusForDestinations_service_listenerID_queue_completionBlock_(v5, v11, (uint64_t)v10, (uint64_t)v6, @"+[IMHandle bestHandlesForCNContacts:]", MEMORY[0x1E4F14428], v12);

  if ((v5 & 1) == 0) {
    v12[2](v12, 0);
  }
}

void sub_1A4C09488(uint64_t a1, void *a2)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  BOOL v4 = *(unsigned char *)(a1 + 64) == 0;
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v9 = objc_msgSend_iMessageService(IMService, v6, v7, v8);
  if (!v4)
  {
    uint64_t v10 = sub_1A4C097B4(v5, v3, v9);

    if (objc_msgSend_count(v10, v11, v12, v13))
    {
      uint64_t v17 = objc_msgSend_anyObject(*(void **)(a1 + 40), v14, v15, v16);
      uint64_t v21 = objc_msgSend_identifier(v17, v18, v19, v20);
      uint64_t v24 = objc_msgSend_objectForKeyedSubscript_(v10, v22, (uint64_t)v21, v23);
      uint64_t v28 = objc_msgSend_account(v24, v25, v26, v27);

      if (IMOSLoggingEnabled())
      {
        uint64_t v29 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412546;
          uint64_t v42 = v10;
          __int16 v43 = 2112;
          long long v44 = v28;
          _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "[handlesForContacts] Attempt 4: Found \"best\" iMessage handles for all recipients: %@ for account: %@", buf, 0x16u);
        }
      }
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();

      goto LABEL_15;
    }
LABEL_14:

    uint64_t v34 = *(void **)(a1 + 48);
    uint64_t v35 = (void *)*MEMORY[0x1E4F6AA68];
    v36[0] = MEMORY[0x1E4F143A8];
    v36[1] = 3221225472;
    v36[2] = sub_1A4C09C5C;
    v36[3] = &unk_1E5B7E248;
    char v40 = *(unsigned char *)(a1 + 64);
    id v37 = *(id *)(a1 + 32);
    id v38 = *(id *)(a1 + 40);
    id v39 = *(id *)(a1 + 56);
    sub_1A4C093D0(v34, v35, v36);

    uint64_t v10 = v37;
    goto LABEL_15;
  }
  uint64_t v10 = sub_1A4C09998(v5, v3, v9);

  if (!objc_msgSend_count(v10, v30, v31, v32)) {
    goto LABEL_14;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v33 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v42 = v10;
      _os_log_impl(&dword_1A4AF7000, v33, OS_LOG_TYPE_INFO, "[handlesForContacts] Attempt 4: Found \"valid\" iMessage handles for all recipients: %@", buf, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
LABEL_15:
}

id sub_1A4C097B4(void *a1, void *a2, void *a3)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (objc_msgSend_isEnabled(v7, v8, v9, v10))
  {
    id v35 = v6;
    id v36 = v5;
    uint64_t v11 = sub_1A4C09998(v5, v6, v7);
    uint64_t v15 = objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v12, v13, v14);
    long long v37 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    id v16 = v11;
    uint64_t v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v37, (uint64_t)v41, 16);
    if (v18)
    {
      uint64_t v21 = v18;
      uint64_t v22 = *(void *)v38;
      while (2)
      {
        for (uint64_t i = 0; i != v21; ++i)
        {
          if (*(void *)v38 != v22) {
            objc_enumerationMutation(v16);
          }
          uint64_t v24 = *(void *)(*((void *)&v37 + 1) + 8 * i);
          uint64_t v25 = objc_msgSend_objectForKeyedSubscript_(v16, v19, v24, v20, v35, v36, (void)v37);
          if (!objc_msgSend_count(v25, v26, v27, v28))
          {

            id v33 = 0;
            goto LABEL_13;
          }
          uint64_t v31 = objc_msgSend_bestIMHandleInArray_(IMHandle, v29, (uint64_t)v25, v30);
          objc_msgSend_setObject_forKeyedSubscript_(v15, v32, (uint64_t)v31, v24);
        }
        uint64_t v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v19, (uint64_t)&v37, (uint64_t)v41, 16);
        if (v21) {
          continue;
        }
        break;
      }
    }

    id v33 = v15;
LABEL_13:

    id v6 = v35;
    id v5 = v36;
  }
  else
  {
    id v33 = 0;
  }

  return v33;
}

id sub_1A4C09998(void *a1, void *a2, void *a3)
{
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (objc_msgSend_isEnabled(v7, v8, v9, v10))
  {
    objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], v11, v12, v13);
    id v57 = (id)objc_claimAutoreleasedReturnValue();
    long long v62 = 0u;
    long long v63 = 0u;
    long long v64 = 0u;
    long long v65 = 0u;
    id v51 = v5;
    id obj = v5;
    uint64_t v53 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v14, (uint64_t)&v62, (uint64_t)v67, 16);
    if (v53)
    {
      uint64_t v52 = *(void *)v63;
      do
      {
        uint64_t v17 = 0;
        do
        {
          if (*(void *)v63 != v52) {
            objc_enumerationMutation(obj);
          }
          uint64_t v55 = v17;
          uint64_t v18 = *(void *)(*((void *)&v62 + 1) + 8 * v17);
          uint64_t v19 = objc_msgSend_objectForKeyedSubscript_(obj, v15, v18, v16);
          uint64_t v23 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v20, v21, v22);
          uint64_t v56 = v18;
          objc_msgSend_setObject_forKeyedSubscript_(v57, v24, (uint64_t)v23, v18);

          long long v60 = 0u;
          long long v61 = 0u;
          long long v58 = 0u;
          long long v59 = 0u;
          id v25 = v19;
          uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v26, (uint64_t)&v58, (uint64_t)v66, 16);
          if (v27)
          {
            uint64_t v31 = v27;
            uint64_t v32 = *(void *)v59;
            do
            {
              for (uint64_t i = 0; i != v31; ++i)
              {
                if (*(void *)v59 != v32) {
                  objc_enumerationMutation(v25);
                }
                uint64_t v34 = *(void **)(*((void *)&v58 + 1) + 8 * i);
                objc_msgSend_service(v34, v28, v29, v30);
                id v35 = (id)objc_claimAutoreleasedReturnValue();

                if (v35 == v7)
                {
                  id v36 = objc_msgSend_ID(v34, v28, v29, v30);
                  long long v37 = IMChatCanonicalIDSIDsForAddress();

                  long long v40 = objc_msgSend_objectForKeyedSubscript_(v6, v38, (uint64_t)v37, v39);
                  uint64_t v44 = objc_msgSend_integerValue(v40, v41, v42, v43);

                  if (v44 != 2)
                  {
                    long long v47 = objc_msgSend_objectForKeyedSubscript_(v57, v45, v56, v46);
                    objc_msgSend_addObject_(v47, v48, (uint64_t)v34, v49);
                  }
                }
              }
              uint64_t v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v28, (uint64_t)&v58, (uint64_t)v66, 16);
            }
            while (v31);
          }

          uint64_t v17 = v55 + 1;
        }
        while (v55 + 1 != v53);
        uint64_t v53 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v15, (uint64_t)&v62, (uint64_t)v67, 16);
      }
      while (v53);
    }

    id v5 = v51;
  }
  else
  {
    id v57 = 0;
  }

  return v57;
}

void sub_1A4C09C5C(uint64_t a1, void *a2)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  BOOL v4 = *(unsigned char *)(a1 + 56) == 0;
  id v5 = *(void **)(a1 + 32);
  uint64_t v9 = objc_msgSend_smsService(IMService, v6, v7, v8);
  if (!v4)
  {
    uint64_t v10 = sub_1A4C097B4(v5, v3, v9);

    if (objc_msgSend_count(v10, v11, v12, v13))
    {
      uint64_t v17 = objc_msgSend_anyObject(*(void **)(a1 + 40), v14, v15, v16);
      uint64_t v21 = objc_msgSend_identifier(v17, v18, v19, v20);
      uint64_t v24 = objc_msgSend_objectForKeyedSubscript_(v10, v22, (uint64_t)v21, v23);
      uint64_t v28 = objc_msgSend_account(v24, v25, v26, v27);

      if (IMOSLoggingEnabled())
      {
        uint64_t v29 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          int v35 = 138412546;
          id v36 = v10;
          __int16 v37 = 2112;
          long long v38 = v28;
          _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "[handlesForContacts] Attempt 5: Found \"best\" SMS handles for all recipients: %@ for account: %@", (uint8_t *)&v35, 0x16u);
        }
      }
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();

      goto LABEL_19;
    }
    goto LABEL_14;
  }
  uint64_t v10 = sub_1A4C09998(v5, v3, v9);

  if (!objc_msgSend_count(v10, v30, v31, v32))
  {
LABEL_14:

    if (IMOSLoggingEnabled())
    {
      uint64_t v34 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        LOWORD(v35) = 0;
        _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "[handlesForContacts] Failed to find handles for contacts", (uint8_t *)&v35, 2u);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    goto LABEL_19;
  }
  if (IMOSLoggingEnabled())
  {
    id v33 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      int v35 = 138412290;
      id v36 = v10;
      _os_log_impl(&dword_1A4AF7000, v33, OS_LOG_TYPE_INFO, "[handlesForContacts] Attempt 5: Found \"valid\" SMS handles for all recipients: %@", (uint8_t *)&v35, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();

LABEL_19:
}

uint64_t sub_1A4C09F60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  BOOL v4 = objc_msgSend_account(a2, (const char *)a2, a3, a4);
  uint64_t isOperational = objc_msgSend_isOperational(v4, v5, v6, v7);

  return isOperational;
}

uint64_t sub_1A4C09F9C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_lastFinishedMessageDate(a2, v5, v6, v7);
  uint64_t v12 = objc_msgSend_lastFinishedMessageDate(v4, v9, v10, v11);

  uint64_t v15 = objc_msgSend_compare_(v8, v13, (uint64_t)v12, v14);
  return v15;
}

uint64_t sub_1A4C0A00C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v10 = objc_msgSend_sharedInstance(IMAccountController, v7, v8, v9);
  uint64_t v13 = objc_msgSend_accountForUniqueID_(v10, v11, (uint64_t)v6, v12);

  uint64_t v17 = objc_msgSend_sharedInstance(IMAccountController, v14, v15, v16);
  uint64_t v20 = objc_msgSend_accountForUniqueID_(v17, v18, (uint64_t)v5, v19);

  uint64_t v21 = *(void **)(a1 + 32);
  id v25 = objc_msgSend_service(v13, v22, v23, v24);
  uint64_t v29 = objc_msgSend_name(v25, v26, v27, v28);
  uint64_t v32 = objc_msgSend_objectForKeyedSubscript_(v21, v30, (uint64_t)v29, v31);

  id v33 = *(void **)(a1 + 32);
  __int16 v37 = objc_msgSend_service(v20, v34, v35, v36);
  long long v41 = objc_msgSend_name(v37, v38, v39, v40);
  uint64_t v44 = objc_msgSend_objectForKeyedSubscript_(v33, v42, (uint64_t)v41, v43);

  if (!v32) {
    uint64_t v32 = &unk_1EF914590;
  }
  if (!v44) {
    uint64_t v44 = &unk_1EF914590;
  }
  uint64_t v47 = objc_msgSend_compare_(v32, v45, (uint64_t)v44, v46);

  return v47;
}

id sub_1A4C0A15C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_ID(a2, (const char *)a2, a3, a4);
  id v5 = IMChatCanonicalIDSIDsForAddress();

  return v5;
}

uint64_t sub_1A4C0AC10()
{
  if (qword_1EB3F2278 != -1) {
    dispatch_once(&qword_1EB3F2278, &unk_1EF8E5C18);
  }
  return byte_1E965DD80;
}

void sub_1A4C0AC54(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_mainBundle(MEMORY[0x1E4F28B50], a2, a3, a4);
  objc_msgSend_bundleIdentifier(v4, v5, v6, v7);
  id v13 = (id)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend_isEqualToString_(v13, v8, @"com.apple.MobileSMS.MessagesAssistantExtension", v9)) {
    char isEqualToString = 1;
  }
  else {
    char isEqualToString = objc_msgSend_isEqualToString_(v13, v10, @"com.apple.messages.AssistantExtension", v11);
  }
  byte_1E965DD80 = isEqualToString;
}

id sub_1A4C0ACE4()
{
  uint64_t v0 = (void *)qword_1EB3F22C8;
  if (!qword_1EB3F22C8)
  {
    id v1 = (void *)MEMORY[0x1E4F28B50];
    uint64_t v2 = objc_opt_class();
    uint64_t v5 = objc_msgSend_bundleForClass_(v1, v3, v2, v4);
    uint64_t v6 = (void *)qword_1EB3F22C8;
    qword_1EB3F22C8 = v5;

    uint64_t v0 = (void *)qword_1EB3F22C8;
  }

  return v0;
}

id IMCopyGUIDForChatOnAccount(void *a1, void *a2)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v8 = objc_msgSend_internalName(v4, v5, v6, v7);
  if (objc_msgSend_chatStyle(v3, v9, v10, v11) == 45) {
    goto LABEL_17;
  }
  id v58 = v4;
  uint64_t v15 = objc_msgSend_sharedRegistry(IMChatRegistry, v12, v13, v14);
  id v59 = v3;
  uint64_t v18 = objc_msgSend_allGUIDsForChat_(v15, v16, (uint64_t)v3, v17);

  long long v63 = 0u;
  long long v64 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  id obj = v18;
  uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v19, (uint64_t)&v61, (uint64_t)v65, 16);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = 0;
    uint64_t v23 = *(void *)v62;
    do
    {
      for (uint64_t i = 0; i != v21; ++i)
      {
        if (*(void *)v62 != v23) {
          objc_enumerationMutation(obj);
        }
        uint64_t v25 = *(void *)(*((void *)&v61 + 1) + 8 * i);
        IMComponentsFromChatGUID();
        id v26 = 0;
        if (objc_msgSend_isEqualToIgnoringCase_(v26, v27, (uint64_t)v8, v28))
        {
          uint64_t v32 = objc_msgSend_sharedRegistry(IMChatRegistry, v29, v30, v31);
          uint64_t v35 = objc_msgSend_existingChatWithGUID_(v32, v33, v25, v34);

          if (!v22
            || (objc_msgSend_lastFinishedMessageDate(v35, v36, v37, v38),
                uint64_t v39 = objc_claimAutoreleasedReturnValue(),
                objc_msgSend_lastFinishedMessageDate(v22, v40, v41, v42),
                uint64_t v43 = objc_claimAutoreleasedReturnValue(),
                uint64_t v46 = objc_msgSend_compare_(v39, v44, (uint64_t)v43, v45),
                v43,
                v39,
                v46 == 1))
          {
            id v47 = v35;

            uint64_t v22 = v47;
          }
        }
      }
      uint64_t v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v48, (uint64_t)&v61, (uint64_t)v65, 16);
    }
    while (v21);
  }
  else
  {
    uint64_t v22 = 0;
  }

  uint64_t v52 = objc_msgSend_guid(v22, v49, v50, v51);

  id v4 = v58;
  id v3 = v59;
  if (!v52)
  {
LABEL_17:
    uint64_t v53 = objc_msgSend_chatIdentifier(v3, v12, v13, v14);
    objc_msgSend_chatStyle(v3, v54, v55, v56);
    uint64_t v52 = (void *)IMCopyGUIDForChat();
  }

  return v52;
}

id IMFormattedDisplayStringForIDInAddressBook(void *a1, void *a2)
{
  return IMFormattedDisplayStringForIDWithCountryCodeInAddressBook(a1, 0, a2);
}

id IMFormattedDisplayStringForIDWithCountryCodeInAddressBook(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  if (!objc_msgSend_length(v5, v7, v8, v9)) {
    goto LABEL_7;
  }
  uint64_t v13 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E6D8], v10, v11, v12);
  uint64_t v16 = objc_msgSend_fetchCNContactForHandleWithID_(v13, v14, (uint64_t)v5, v15);

  uint64_t v19 = objc_msgSend_displayNameForContact_(MEMORY[0x1E4F6E6D8], v17, (uint64_t)v16, v18);
  if (!objc_msgSend_length(v19, v20, v21, v22))
  {

LABEL_7:
    uint64_t v19 = IMFormattedDisplayStringForIDWithCountryCode();
    goto LABEL_8;
  }
  if (a3) {
    *a3 = 1;
  }

LABEL_8:

  return v19;
}

id IMFormattedDisplayStringForIDWithAccountInAddressBook(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a1;
  if (objc_msgSend_length(v5, v7, v8, v9))
  {
    uint64_t v13 = objc_msgSend_sharedInstance(IMAccountController, v10, v11, v12);
    uint64_t v16 = objc_msgSend_accountForUniqueID_(v13, v14, (uint64_t)v5, v15);
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = objc_msgSend_countryCode(v16, v10, v11, v12);
  uint64_t v18 = IMFormattedDisplayStringForIDWithCountryCodeInAddressBook(v6, v17, a3);

  return v18;
}

id IMUnformattedDisplayStringForIDInAddressBook(void *a1, void *a2)
{
  return IMUnformattedDisplayStringForIDWithCountryCodeInAddressBook(a1, 0, a2);
}

id IMUnformattedDisplayStringForIDWithCountryCodeInAddressBook(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  if (!objc_msgSend_length(v5, v7, v8, v9)) {
    goto LABEL_7;
  }
  uint64_t v13 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E6D8], v10, v11, v12);
  uint64_t v16 = objc_msgSend_fetchCNContactForHandleWithID_(v13, v14, (uint64_t)v5, v15);

  uint64_t v19 = objc_msgSend_displayNameForContact_(MEMORY[0x1E4F6E6D8], v17, (uint64_t)v16, v18);
  if (!objc_msgSend_length(v19, v20, v21, v22))
  {

LABEL_7:
    uint64_t v19 = IMUnformattedDisplayStringForIDWithCountryCode();
    goto LABEL_8;
  }
  if (a3) {
    *a3 = 1;
  }

LABEL_8:

  return v19;
}

id IMUnformattedDisplayStringForIDWithAccountInAddressBook(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a1;
  if (objc_msgSend_length(v5, v7, v8, v9))
  {
    uint64_t v13 = objc_msgSend_sharedInstance(IMAccountController, v10, v11, v12);
    uint64_t v16 = objc_msgSend_accountForUniqueID_(v13, v14, (uint64_t)v5, v15);
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = objc_msgSend_countryCode(v16, v10, v11, v12);
  uint64_t v18 = IMUnformattedDisplayStringForIDWithCountryCodeInAddressBook(v6, v17, a3);

  return v18;
}

void sub_1A4C0B350(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend_IMCoreSetupTimingCollection(a1, a2, a3, a4);
  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      id v5 = OSLogHandleForIMEventCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        int v7 = 138412290;
        uint64_t v8 = qword_1EB3F23B0;
        _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "IMCore setup timing: %@", (uint8_t *)&v7, 0xCu);
      }
    }
    id v6 = (void *)qword_1EB3F23B0;
    qword_1EB3F23B0 = 0;
  }
}

id IMCoreLocalizedString(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = sub_1A4C0ACE4();
  int v7 = objc_msgSend_localizedStringForKey_value_table_(v5, v6, (uint64_t)v4, (uint64_t)v3, @"IMCoreLocalizable");

  return v7;
}

void IMIndexesFromOrderedCollectionDifference(void *a1, void *a2, void *a3)
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  uint64_t v9 = objc_msgSend_indexSet(MEMORY[0x1E4F28E60], v6, v7, v8);
  uint64_t v13 = objc_msgSend_indexSet(MEMORY[0x1E4F28E60], v10, v11, v12);
  uint64_t v17 = objc_msgSend_insertions(v5, v14, v15, v16);
  uint64_t v21 = objc_msgSend_removals(v5, v18, v19, v20);
  if (objc_msgSend_hasChanges(v5, v22, v23, v24))
  {
    uint64_t v51 = a3;
    long long v58 = 0u;
    long long v59 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    id v25 = v17;
    uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v26, (uint64_t)&v56, (uint64_t)v61, 16);
    if (v27)
    {
      uint64_t v31 = v27;
      uint64_t v32 = *(void *)v57;
      do
      {
        uint64_t v33 = 0;
        do
        {
          if (*(void *)v57 != v32) {
            objc_enumerationMutation(v25);
          }
          uint64_t v34 = objc_msgSend_index(*(void **)(*((void *)&v56 + 1) + 8 * v33), v28, v29, v30);
          objc_msgSend_addIndex_(v9, v35, v34, v36);
          ++v33;
        }
        while (v31 != v33);
        uint64_t v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v28, (uint64_t)&v56, (uint64_t)v61, 16);
      }
      while (v31);
    }

    long long v54 = 0u;
    long long v55 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    id v37 = v21;
    uint64_t v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v38, (uint64_t)&v52, (uint64_t)v60, 16);
    if (v39)
    {
      uint64_t v43 = v39;
      uint64_t v44 = *(void *)v53;
      do
      {
        uint64_t v45 = 0;
        do
        {
          if (*(void *)v53 != v44) {
            objc_enumerationMutation(v37);
          }
          uint64_t v46 = objc_msgSend_index(*(void **)(*((void *)&v52 + 1) + 8 * v45), v40, v41, v42);
          objc_msgSend_addIndex_(v13, v47, v46, v48);
          ++v45;
        }
        while (v43 != v45);
        uint64_t v43 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v40, (uint64_t)&v52, (uint64_t)v60, 16);
      }
      while (v43);
    }

    a3 = v51;
  }
  id v49 = v9;
  *a2 = v49;
  id v50 = v13;
  *a3 = v50;
}

uint64_t IMIsEnrolledInContactKeyVerification(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_sharedController(IMKeyTransparencyController, a2, a3, a4);
  uint64_t v8 = objc_msgSend_selfOptedIn(v4, v5, v6, v7);

  return v8;
}

id IMEncryptedIdentifier(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F28B88];
  id v2 = a1;
  uint64_t v6 = objc_msgSend_whitespaceAndNewlineCharacterSet(v1, v3, v4, v5);
  uint64_t v9 = objc_msgSend_stringByTrimmingCharactersInSet_(v2, v7, (uint64_t)v6, v8);

  if (objc_msgSend_length(v9, v10, v11, v12))
  {
    uint64_t v16 = objc_msgSend_sharedCryptographer(IMTextInputCryptographer, v13, v14, v15);
    uint64_t v19 = objc_msgSend_stringDigestForName_(v16, v17, (uint64_t)v9, v18);

    if (v19)
    {
      uint64_t v22 = objc_msgSend_stringByAppendingString_(@"IM_", v20, (uint64_t)v19, v21);
      goto LABEL_10;
    }
    uint64_t v23 = IMLogHandleForCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB92E4(v23);
    }
  }
  else
  {
    uint64_t v19 = IMLogHandleForCategory();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB92A0(v19);
    }
  }
  uint64_t v22 = 0;
LABEL_10:

  return v22;
}

id IMTextInputIdentifier(void *a1)
{
  id v1 = a1;
  uint64_t v5 = objc_msgSend_messagesAppDomain(MEMORY[0x1E4F1CB18], v2, v3, v4);
  if (objc_msgSend_BOOLForKey_(v5, v6, @"CKTextInputIdentifiersMigrated", v7))
  {
    IMEncryptedIdentifier(v1);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v8 = v1;
  }
  uint64_t v9 = v8;

  return v9;
}

float IMSendProgressProgressForSatellite(void *a1, unint64_t *a2, unint64_t *a3, double *a4, double a5)
{
  id v9 = a1;
  uint64_t v41 = 0;
  uint64_t v42 = &v41;
  uint64_t v43 = 0x2020000000;
  uint64_t v44 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = &v37;
  uint64_t v39 = 0x2020000000;
  uint64_t v40 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = &v33;
  uint64_t v35 = 0x2020000000;
  uint64_t v36 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x2020000000;
  uint64_t v32 = 0;
  uint64_t v25 = 0;
  id v26 = (double *)&v25;
  uint64_t v27 = 0x2020000000;
  uint64_t v28 = 0;
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  void v24[2] = sub_1A4C0C2A8;
  v24[3] = &unk_1E5B7E2C0;
  v24[4] = &v25;
  v24[5] = &v41;
  v24[6] = &v37;
  v24[7] = &v33;
  v24[8] = &v29;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v9, v10, (uint64_t)v24, v11);
  uint64_t v12 = v38[3] + v42[3];
  unint64_t v13 = v30[3] + v34[3] + v12;
  if (v30[3] + v34[3])
  {
    double v14 = v26[3];
    double v15 = v14 / a5;
    if (v14 / a5 > 0.5)
    {
      if (v15 <= 1.0)
      {
        double v21 = (v14 - a5 * 0.5) * 0.3 / (a5 * 0.5) + 0.5;
      }
      else
      {
        double v16 = v14 - a5;
        if (v16 <= 30.0)
        {
          double v22 = 0.8;
          double v23 = 0.00333333333;
        }
        else if (v16 <= 60.0)
        {
          double v16 = v16 + -30.0;
          double v22 = 0.9;
          double v23 = 0.00166666667;
        }
        else
        {
          if (v16 > 105.0)
          {
            float v17 = 0.98;
            if (!a2) {
              goto LABEL_19;
            }
            goto LABEL_15;
          }
          double v16 = v16 + -60.0;
          double v22 = 0.95;
          double v23 = 0.000666666667;
        }
        double v21 = v22 + v16 * v23;
      }
      float v17 = v21;
      if (!a2) {
        goto LABEL_19;
      }
      goto LABEL_15;
    }
    float v17 = v15;
    if (!a2) {
      goto LABEL_19;
    }
LABEL_15:
    if (v13 >= v12 + 1) {
      unint64_t v18 = v12 + 1;
    }
    else {
      unint64_t v18 = v13;
    }
    *a2 = v18;
    goto LABEL_19;
  }
  if (v13) {
    float v17 = 1.0;
  }
  else {
    float v17 = 0.0;
  }
  unint64_t v13 = 0;
  if (a2) {
    goto LABEL_15;
  }
LABEL_19:
  if (a3) {
    *a3 = v13;
  }
  if (a4)
  {
    double v19 = v26[3];
    if (v19 > 0.0) {
      *a4 = v19;
    }
  }
  _Block_object_dispose(&v25, 8);
  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&v33, 8);
  _Block_object_dispose(&v37, 8);
  _Block_object_dispose(&v41, 8);

  return v17;
}

void sub_1A4C0C260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Block_object_dispose((const void *)(v27 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C0C2A8(void *a1, uint64_t a2, void *a3)
{
  id v41 = a3;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v5 = v41;
  if (isKindOfClass)
  {
    id v6 = v41;
    unint64_t v13 = objc_msgSend_clientSendTime(v6, v7, v8, v9);
    if (v13) {
      objc_msgSend_clientSendTime(v6, v10, v11, v12);
    }
    else {
    double v14 = objc_msgSend_time(v6, v10, v11, v12);
    }

    objc_msgSend_timeIntervalSinceNow(v14, v15, v16, v17);
    double v22 = fabs(v21);
    uint64_t v23 = *(void *)(a1[4] + 8);
    double v24 = *(double *)(v23 + 24);
    if (v24 == 0.0)
    {
      *(double *)(v23 + 24) = v22;
      uint64_t v23 = *(void *)(a1[4] + 8);
      double v24 = *(double *)(v23 + 24);
    }
    if (v22 <= v24) {
      *(double *)(v23 + 24) = v22;
    }
    if (objc_msgSend_isSent(v6, v18, v19, v20)
      && (objc_msgSend_isLocatingMessage(v6, v25, v26, v27) & 1) == 0)
    {
      uint64_t v31 = a1[5];
    }
    else if (objc_msgSend_errorCode(v6, v25, v26, v27))
    {
      uint64_t v31 = a1[6];
    }
    else
    {
      uint64_t v32 = objc_msgSend_fileTransferGUIDs(v6, v28, v29, v30);
      if (objc_msgSend_count(v32, v33, v34, v35))
      {
      }
      else
      {
        char isLocatingMessage = objc_msgSend_isLocatingMessage(v6, v36, v37, v38);

        if ((isLocatingMessage & 1) == 0)
        {
          uint64_t v31 = a1[8];
          goto LABEL_18;
        }
      }
      uint64_t v31 = a1[7];
    }
LABEL_18:
    ++*(void *)(*(void *)(v31 + 8) + 24);

    id v5 = v41;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v5);
}

void sub_1A4C0C5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C0C5D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v11 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v7 = objc_msgSend_payloadData(v11, v4, v5, v6);
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) += objc_msgSend_length(v7, v8, v9, v10);
  }
}

void sub_1A4C0CAD0(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2) {
      JUMPOUT(0x1A4C0CA58);
    }
    JUMPOUT(0x1A4C0CA44);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C0DC94(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2) {
      JUMPOUT(0x1A4C0DC1CLL);
    }
    JUMPOUT(0x1A4C0DC08);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C0EC10(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C0EBD8);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C0F168(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    if (!v2) {
      JUMPOUT(0x1A4C0F0F8);
    }
    JUMPOUT(0x1A4C0F0E4);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C0F1F8()
{
  uint64_t v0 = objc_opt_new();
  uint64_t v1 = qword_1E965E778;
  qword_1E965E778 = v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C0F3D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C0F48C;
  block[3] = &unk_1E5B7BC90;
  id v4 = *(id *)(a1 + 40);
  id v7 = v3;
  id v8 = v4;
  void block[4] = *(void *)(a1 + 32);
  id v5 = v3;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

void sub_1A4C0F48C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 48);
  objc_msgSend__urlFromAddressList_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
}

void sub_1A4C0F4F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 40);
  objc_msgSend__urlFromAddressList_(*(void **)(a1 + 32), a2, 0, a4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
}

void sub_1A4C0F820(uint64_t a1, void *a2)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (_IMWillLog())
  {
    id v49 = v3;
    uint64_t v50 = *(void *)(a1 + 32);
    _IMAlwaysLog();
  }
  if (objc_msgSend_count(v3, v4, v5, v6, v49, v50))
  {
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    id v10 = v3;
    uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v51, (uint64_t)v55, 16);
    if (v12)
    {
      uint64_t v15 = v12;
      uint64_t v16 = *(void *)v52;
      do
      {
        for (uint64_t i = 0; i != v15; ++i)
        {
          if (*(void *)v52 != v16) {
            objc_enumerationMutation(v10);
          }
          unint64_t v18 = objc_msgSend_objectForKey_(v10, v13, *(void *)(*((void *)&v51 + 1) + 8 * i), v14);
          uint64_t v19 = *(void **)(a1 + 40);
          uint64_t v23 = objc_msgSend_ID(v18, v20, v21, v22);
          objc_msgSend_addObject_(v19, v24, (uint64_t)v23, v25);
        }
        uint64_t v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v13, (uint64_t)&v51, (uint64_t)v55, 16);
      }
      while (v15);
    }
  }
  else
  {
    uint64_t v26 = objc_msgSend_contact(*(void **)(a1 + 32), v7, v8, v9);
    uint64_t v30 = objc_msgSend_phoneNumbers(v26, v27, v28, v29);
    uint64_t v34 = objc_msgSend_firstObject(v30, v31, v32, v33);
    uint64_t v38 = objc_msgSend_value(v34, v35, v36, v37);
    objc_msgSend_stringValue(v38, v39, v40, v41);
    id v10 = (id)objc_claimAutoreleasedReturnValue();

    uint64_t v45 = *(void **)(a1 + 40);
    if (v10)
    {
      objc_msgSend_addObject_(*(void **)(a1 + 40), v42, (uint64_t)v10, v44);
    }
    else
    {
      uint64_t v46 = objc_msgSend_appleID(*(void **)(a1 + 32), v42, v43, v44);
      objc_msgSend_addObject_(v45, v47, (uint64_t)v46, v48);
    }
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

uint64_t sub_1A4C0FA28(uint64_t a1)
{
  if (_IMWillLog()) {
    _IMAlwaysLog();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

uint64_t sub_1A4C0FC84()
{
  uint64_t v0 = objc_alloc_init(IMIDStatusController);
  uint64_t v1 = qword_1EB3F2540;
  qword_1EB3F2540 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C0FE0C(uint64_t a1)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  id v2 = *(id *)(a1 + 32);
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  uint64_t v6 = objc_msgSend_allServices(IMServiceImpl, v3, v4, v5);
  uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v7, (uint64_t)&v59, (uint64_t)buf, 16);
  if (v11)
  {
    uint64_t v12 = *(void *)v60;
    while (2)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v60 != v12) {
          objc_enumerationMutation(v6);
        }
        uint64_t v14 = *(void **)(*((void *)&v59 + 1) + 8 * i);
        uint64_t v15 = objc_msgSend_idsServiceNames(v14, v8, v9, v10);
        char v18 = objc_msgSend_containsObject_(v15, v16, (uint64_t)v2, v17);

        if (v18)
        {
          id v54 = v14;

          goto LABEL_12;
        }
      }
      uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v8, (uint64_t)&v59, (uint64_t)buf, 16);
      if (v11) {
        continue;
      }
      break;
    }
  }

  if (objc_msgSend_isEqualToIgnoringCase_(v2, v19, *MEMORY[0x1E4F6E1B0], v20)
    || objc_msgSend_isEqualToIgnoringCase_(v2, v21, @"Messenger", v23)
    || objc_msgSend_isEqualToIgnoringCase_(v2, v21, @"Madrid", v23))
  {
    objc_msgSend_iMessageService(IMServiceImpl, v21, v22, v23);
    id v54 = (id)objc_claimAutoreleasedReturnValue();
  }
  else if (objc_msgSend_isEqualToIgnoringCase_(v2, v21, *MEMORY[0x1E4F6E190], v23) {
         || objc_msgSend_isEqualToIgnoringCase_(v2, v51, @"Venice", v53))
  }
  {
    objc_msgSend_facetimeService(IMServiceImpl, v51, v52, v53);
    id v54 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v54 = 0;
  }
LABEL_12:

  uint64_t v27 = objc_msgSend__stripFZIDPrefix(*(void **)(a1 + 40), v24, v25, v26);
  if (IMOSLoggingEnabled())
  {
    uint64_t v31 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
    {
      uint64_t v32 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412546;
      id v65 = v54;
      __int16 v66 = 2112;
      uint64_t v67 = v32;
      _os_log_impl(&dword_1A4AF7000, v31, OS_LOG_TYPE_INFO, "Found IMService %@ for service with name: %@", buf, 0x16u);
    }
  }
  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v33 = objc_msgSend_sharedInstance(IMAccountController, v28, v29, v30);
  uint64_t v36 = objc_msgSend_activeAccountsForService_(v33, v34, (uint64_t)v54, v35);

  uint64_t v38 = objc_msgSend_countByEnumeratingWithState_objects_count_(v36, v37, (uint64_t)&v55, (uint64_t)v63, 16);
  if (v38)
  {
    uint64_t v39 = *(void *)v56;
    do
    {
      for (uint64_t j = 0; j != v38; ++j)
      {
        if (*(void *)v56 != v39) {
          objc_enumerationMutation(v36);
        }
        uint64_t v41 = *(void **)(*((void *)&v55 + 1) + 8 * j);
        if (IMOSLoggingEnabled())
        {
          uint64_t v44 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            id v65 = v41;
            _os_log_impl(&dword_1A4AF7000, v44, OS_LOG_TYPE_INFO, "   Found account: %@", buf, 0xCu);
          }
        }
        uint64_t v45 = objc_msgSend_existingIMHandleWithID_(v41, v42, (uint64_t)v27, v43);
        if (IMOSLoggingEnabled())
        {
          uint64_t v48 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v48, OS_LOG_TYPE_INFO))
          {
            id v49 = *(void **)(a1 + 40);
            *(_DWORD *)long long buf = 138412802;
            id v65 = v49;
            __int16 v66 = 2112;
            uint64_t v67 = v27;
            __int16 v68 = 2112;
            uint64_t v69 = v45;
            _os_log_impl(&dword_1A4AF7000, v48, OS_LOG_TYPE_INFO, "   URI: %@   ID: %@   Existing handle: %@", buf, 0x20u);
          }
        }
        if (v45) {
          objc_msgSend__setIDStatus_(v45, v46, *(void *)(a1 + 48), v47);
        }
      }
      uint64_t v38 = objc_msgSend_countByEnumeratingWithState_objects_count_(v36, v50, (uint64_t)&v55, (uint64_t)v63, 16);
    }
    while (v38);
  }
}

id sub_1A4C10678(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_idsServiceNames(a1, a2, a3, a4);
  uint64_t v8 = objc_msgSend_firstObject(v4, v5, v6, v7);

  return v8;
}

uint64_t sub_1A4C106C4()
{
  dispatch_semaphore_t v0 = dispatch_semaphore_create(0);
  uint64_t v1 = qword_1E965EA60;
  qword_1E965EA60 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

intptr_t sub_1A4C106FC(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  return dispatch_semaphore_signal((dispatch_semaphore_t)qword_1E965EA60);
}

uint64_t sub_1A4C10CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMEventCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 1024;
      int v11 = a2;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Received query result for ID: %@  %d", (uint8_t *)&v8, 0x12u);
    }
  }
  return objc_msgSend__processIDStatusResponseForURI_resultStatus_forService_(*(void **)(a1 + 40), v4, *(void *)(a1 + 32), a2, *(void *)(a1 + 48));
}

id sub_1A4C11464(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  uint64_t v4 = (void *)MEMORY[0x1E4F1CA80];
  uint64_t v8 = objc_msgSend_count(v3, v5, v6, v7);
  int v11 = objc_msgSend_setWithCapacity_(v4, v9, v8, v10);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v12 = v3;
  uint64_t v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v28, (uint64_t)v32, 16);
  if (v14)
  {
    uint64_t v17 = v14;
    uint64_t v18 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v17; ++i)
      {
        if (*(void *)v29 != v18) {
          objc_enumerationMutation(v12);
        }
        uint64_t v20 = objc_msgSend_handleWithFMFHandle_(IMFindMyHandle, v15, *(void *)(*((void *)&v28 + 1) + 8 * i), v16, (void)v28);
        objc_msgSend_addObject_(v11, v21, (uint64_t)v20, v22);
      }
      uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v15, (uint64_t)&v28, (uint64_t)v32, 16);
    }
    while (v17);
  }

  uint64_t v26 = objc_msgSend_copy(v11, v23, v24, v25);

  return v26;
}

id sub_1A4C115C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  uint64_t v4 = (void *)MEMORY[0x1E4F1CA80];
  uint64_t v8 = objc_msgSend_count(v3, v5, v6, v7);
  int v11 = objc_msgSend_setWithCapacity_(v4, v9, v8, v10);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v12 = v3;
  uint64_t v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v28, (uint64_t)v32, 16);
  if (v14)
  {
    uint64_t v17 = v14;
    uint64_t v18 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v17; ++i)
      {
        if (*(void *)v29 != v18) {
          objc_enumerationMutation(v12);
        }
        uint64_t v20 = objc_msgSend_handleWithFMLHandle_(IMFindMyHandle, v15, *(void *)(*((void *)&v28 + 1) + 8 * i), v16, (void)v28);
        objc_msgSend_addObject_(v11, v21, (uint64_t)v20, v22);
      }
      uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v15, (uint64_t)&v28, (uint64_t)v32, 16);
    }
    while (v17);
  }

  uint64_t v26 = objc_msgSend_copy(v11, v23, v24, v25);

  return v26;
}

id sub_1A4C11724(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v3 = a3;
  uint64_t v4 = (void *)MEMORY[0x1E4F1CA80];
  uint64_t v8 = objc_msgSend_count(v3, v5, v6, v7);
  int v11 = objc_msgSend_setWithCapacity_(v4, v9, v8, v10);
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v12 = v3;
  uint64_t v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v36, (uint64_t)v40, 16);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = *(void *)v37;
    do
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v37 != v16) {
          objc_enumerationMutation(v12);
        }
        uint64_t v18 = *(void **)(*((void *)&v36 + 1) + 8 * i);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v22 = objc_msgSend_handle(v18, v19, v20, v21, (void)v36);

          if (v22)
          {
            uint64_t v25 = objc_msgSend_handle(v18, v19, v23, v24);
            long long v28 = objc_msgSend_handleWithFMLHandle_(IMFindMyHandle, v26, (uint64_t)v25, v27);

            objc_msgSend_addObject_(v11, v29, (uint64_t)v28, v30);
          }
        }
      }
      uint64_t v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v19, (uint64_t)&v36, (uint64_t)v40, 16);
    }
    while (v15);
  }

  uint64_t v34 = objc_msgSend_copy(v11, v31, v32, v33);

  return v34;
}

id sub_1A4C118D8(void *a1)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc(MEMORY[0x1E4F1CA80]);
  uint64_t v6 = objc_msgSend_count(a1, v3, v4, v5);
  uint64_t v9 = objc_msgSend_initWithCapacity_(v2, v7, v6, v8);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v10 = a1;
  uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v31, (uint64_t)v35, 16);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v32 != v14) {
          objc_enumerationMutation(v10);
        }
        uint64_t v16 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v20 = objc_msgSend_fmfHandle(v16, v17, v18, v19, (void)v31);

          if (v20)
          {
            uint64_t v23 = objc_msgSend_fmfHandle(v16, v17, v21, v22);
            objc_msgSend_addObject_(v9, v24, (uint64_t)v23, v25);
          }
        }
      }
      uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v17, (uint64_t)&v31, (uint64_t)v35, 16);
    }
    while (v13);
  }

  long long v29 = objc_msgSend_copy(v9, v26, v27, v28);

  return v29;
}

id sub_1A4C11A70(void *a1)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc(MEMORY[0x1E4F1CA80]);
  uint64_t v6 = objc_msgSend_count(a1, v3, v4, v5);
  uint64_t v9 = objc_msgSend_initWithCapacity_(v2, v7, v6, v8);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v10 = a1;
  uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v31, (uint64_t)v35, 16);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v32 != v14) {
          objc_enumerationMutation(v10);
        }
        uint64_t v16 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v20 = objc_msgSend_fmlHandle(v16, v17, v18, v19, (void)v31);

          if (v20)
          {
            uint64_t v23 = objc_msgSend_fmlHandle(v16, v17, v21, v22);
            objc_msgSend_addObject_(v9, v24, (uint64_t)v23, v25);
          }
        }
      }
      uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v17, (uint64_t)&v31, (uint64_t)v35, 16);
    }
    while (v13);
  }

  long long v29 = objc_msgSend_copy(v9, v26, v27, v28);

  return v29;
}

IMMutableChatContext *sub_1A4C141F4(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = objc_alloc_init(IMMutableChatContext);
  BOOL v6 = sub_1A4C2AE30(v3, v4);

  objc_msgSend_setSpam_(v5, v7, v6, v8);
  if (objc_msgSend_isMapKitBusinessChat(v3, v9, v10, v11))
  {
    uint64_t v15 = 3;
  }
  else if (objc_msgSend_isSMS(v3, v12, v13, v14))
  {
    uint64_t v15 = 1;
  }
  else
  {
    uint64_t v15 = 2;
  }
  if (objc_msgSend_isStewieChat(v3, v12, v13, v14)) {
    uint64_t v15 = 4;
  }
  if (objc_msgSend_isStewieSharingChat(v3, v16, v17, v18)) {
    objc_msgSend_setServiceType_(v5, v19, 5, v20);
  }
  else {
    objc_msgSend_setServiceType_(v5, v19, v15, v20);
  }
  uint64_t isFiltered = objc_msgSend_isFiltered(v3, v21, v22, v23);
  objc_msgSend_setFilterCategory_(v5, v25, isFiltered, v26);
  int hasKnownParticipantsCache = objc_msgSend_hasKnownParticipantsCache(v3, v27, v28, v29);
  objc_msgSend_setSendersUnknown_(v5, v31, hasKnownParticipantsCache ^ 1u, v32);
  uint64_t v36 = objc_msgSend_repliedToChat(v3, v33, v34, v35);
  objc_msgSend_setResponded_(v5, v37, v36, v38);
  uint64_t v42 = objc_msgSend_conversation(v3, v39, v40, v41);
  uint64_t v46 = objc_msgSend_UUID(v42, v43, v44, v45);
  objc_msgSend_setActiveTelephonyConversationUUID_(v5, v47, (uint64_t)v46, v48);

  uint64_t v52 = objc_msgSend_showingEditHistoryForChatItemGUIDs(v3, v49, v50, v51);
  objc_msgSend_setShowingEditHistoryForChatItemGUIDs_(v5, v53, (uint64_t)v52, v54);

  uint64_t isChatBot = objc_msgSend_isChatBot(v3, v55, v56, v57);
  objc_msgSend_setIsChatBot_(v5, v59, isChatBot, v60);

  return v5;
}

uint64_t sub_1A4C14370(void *a1, void *a2, void *a3, int a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v13 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v10, v11, v12);
  int isTranscriptSharingEnabled = objc_msgSend_isTranscriptSharingEnabled(v13, v14, v15, v16);

  if (isTranscriptSharingEnabled && objc_msgSend_isStewieSharingChat(v7, v18, v19, v20))
  {
    id v21 = v8;
    id v22 = v9;
    if (v21)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        if (!v22)
        {
          uint64_t v54 = 1;
          goto LABEL_16;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v26 = objc_msgSend_sender(v21, v23, v24, v25);
          uint64_t v30 = objc_msgSend_sender(v22, v27, v28, v29);
          if (objc_msgSend_isEqualToString_(v26, v31, (uint64_t)v30, v32))
          {
            uint64_t v36 = objc_msgSend_messageSummaryInfo(v21, v33, v34, v35);

            uint64_t v40 = (uint64_t *)MEMORY[0x1E4F6D6B8];
            if (v36)
            {
              uint64_t v41 = objc_msgSend_messageSummaryInfo(v21, v37, v38, v39);
              uint64_t v44 = objc_msgSend__numberForKey_(v41, v42, *v40, v43);
              uint64_t v101 = (int)objc_msgSend_intValue(v44, v45, v46, v47);
            }
            else
            {
              uint64_t v101 = 0;
            }
            uint64_t v89 = objc_msgSend_messageSummaryInfo(v22, v37, v38, v39);

            if (v89)
            {
              uint64_t v93 = objc_msgSend_messageSummaryInfo(v22, v90, v91, v92);
              uint64_t v96 = objc_msgSend__numberForKey_(v93, v94, *v40, v95);
              uint64_t v100 = (int)objc_msgSend_intValue(v96, v97, v98, v99);
            }
            else
            {
              uint64_t v100 = 0;
            }
            uint64_t v54 = v101 != v100;
          }
          else
          {
            uint64_t v54 = 1;
          }

          goto LABEL_16;
        }
      }
    }
    uint64_t v54 = 0;
LABEL_16:

LABEL_17:
    goto LABEL_18;
  }
  if (a4 != 45
    && objc_msgSend__hasMessageChatItem(v8, v18, v19, v20)
    && !sub_1A4C146DC(v8)
    && (objc_msgSend_isFromMe(v8, v48, v49, v50) & 1) == 0)
  {
    objc_msgSend_sender(v8, v51, v52, v53);
    id v21 = (id)objc_claimAutoreleasedReturnValue();
    if (!v21
      || (objc_msgSend_sender(v9, v56, v57, v58),
          long long v59 = objc_claimAutoreleasedReturnValue(),
          int v62 = objc_msgSend_isEqualToString_(v21, v60, (uint64_t)v59, v61),
          v59,
          v62))
    {
      if (!sub_1A4C146DC(v9))
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0
          || (objc_msgSend_replyCountsByPart(v8, v63, v64, v65),
              __int16 v66 = objc_claimAutoreleasedReturnValue(),
              uint64_t v70 = objc_msgSend_count(v66, v67, v68, v69),
              v66,
              !v70))
        {
          int isReply = objc_msgSend_isReply(v8, v63, v64, v65);
          if (isReply == objc_msgSend_isReply(v9, v72, v73, v74))
          {
            if (objc_msgSend_isReply(v8, v75, v76, v77)
              && objc_msgSend_isReply(v9, v78, v79, v80))
            {
              long long v81 = objc_msgSend_threadIdentifier(v8, v78, v79, v80);
              uint64_t v85 = objc_msgSend_threadIdentifier(v9, v82, v83, v84);
              int isEqualToString = objc_msgSend_isEqualToString_(v81, v86, (uint64_t)v85, v87);

              uint64_t v54 = isEqualToString ^ 1u;
              goto LABEL_17;
            }
            if (objc_msgSend__hasMessageChatItem(v9, v78, v79, v80) && !sub_1A4C1546C(v8, v9))
            {
              uint64_t v54 = sub_1A4C155B4(v7, v8, v9);
              goto LABEL_17;
            }
          }
        }
      }
    }
    uint64_t v54 = 1;
    goto LABEL_17;
  }
  uint64_t v54 = 0;
LABEL_18:

  return v54;
}

BOOL sub_1A4C146DC(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = v1;
    BOOL v6 = objc_msgSend_retractedPartIndexes(v2, v3, v4, v5);
    if (objc_msgSend_count(v6, v7, v8, v9))
    {
      uint64_t v13 = objc_msgSend_body(v2, v10, v11, v12);
      if (objc_msgSend___im_countMessageParts(v13, v14, v15, v16))
      {
        BOOL v20 = 0;
      }
      else
      {
        id v21 = objc_msgSend_subject(v2, v17, v18, v19);
        BOOL v20 = objc_msgSend_length(v21, v22, v23, v24) == 0;
      }
    }
    else
    {
      BOOL v20 = 0;
    }
  }
  else
  {
    BOOL v20 = 0;
  }

  return v20;
}

void sub_1A4C149F0(uint64_t a1, void *a2)
{
  id value = a2;
  uint64_t v4 = objc_msgSend__replyCountChatItemForChatItem_parentItem_threadOriginatorMessageItem_(*(void **)(a1 + 32), v3, (uint64_t)value, *(void *)(a1 + 40), *(void *)(a1 + 48));
  uint64_t v5 = *(__CFArray **)(a1 + 56);
  if (value && v5)
  {
    CFArrayAppendValue(v5, value);
    uint64_t v5 = *(__CFArray **)(a1 + 56);
  }
  if (v5) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6) {
    CFArrayAppendValue(v5, v4);
  }
}

void sub_1A4C1508C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C150A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v10 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_msgSend_integerValue(v10, v7, v8, v9);
    *a5 = 1;
  }
}

BOOL sub_1A4C1546C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_12;
  }
  if (objc_msgSend_changeType(v3, v5, v6, v7)) {
    goto LABEL_12;
  }
  uint64_t v8 = objc_msgSend__senderHandle(v3, v5, v6, v7);
  uint64_t v12 = objc_msgSend_ID(v8, v9, v10, v11);

  uint64_t v16 = objc_msgSend__otherHandle(v3, v13, v14, v15);
  BOOL v20 = objc_msgSend_ID((void *)v16, v17, v18, v19);

  LOBYTE(v16) = objc_msgSend_isEqualToString_(v12, v21, (uint64_t)v20, v22);
  if (v16)
  {
    BOOL v23 = 0;
  }
  else
  {
LABEL_12:
    if (v4 && objc_msgSend__hasMessageChatItem(v3, v5, v6, v7))
    {
      uint64_t v27 = objc_msgSend_time(v3, v24, v25, v26);
      long long v31 = objc_msgSend_time(v4, v28, v29, v30);
      objc_msgSend_timeIntervalSinceDate_(v27, v32, (uint64_t)v31, v33);
      BOOL v23 = fabs(v34) >= 3600.0;
    }
    else
    {
      BOOL v23 = 1;
    }
  }

  return v23;
}

BOOL sub_1A4C155B4(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v11 = objc_msgSend__service(v6, v8, v9, v10);
  uint64_t v15 = objc_msgSend__service(v7, v12, v13, v14);
  uint64_t v19 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v16, v17, v18);
  int isPriusEnabled = objc_msgSend_isPriusEnabled(v19, v20, v21, v22);

  if (isPriusEnabled)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      goto LABEL_11;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      goto LABEL_11;
    }
  }
  id v24 = v5;
  id v25 = v6;
  id v26 = v7;
  if ((sub_1A4C35F78(v26) & 1) == 0 && !sub_1A4C3604C(v26)
    || (sub_1A4C35F78(v25) & 1) == 0 && (sub_1A4C3604C(v25) & 1) == 0)
  {
    long long v63 = v11;
    uint64_t v30 = objc_msgSend_interworkingService(v24, v27, v28, v29);
    long long v31 = (uint64_t *)MEMORY[0x1E4F6E1A0];
    if (objc_msgSend_isEqualToString_(v30, v32, *MEMORY[0x1E4F6E1A0], v33))
    {
      char v34 = sub_1A4C3604C(v25);

      uint64_t v11 = v63;
      if (v34) {
        goto LABEL_10;
      }
    }
    else
    {
    }
    uint64_t v39 = objc_msgSend_interworkingService(v24, v35, v36, v37);
    if (objc_msgSend_isEqualToString_(v39, v40, *v31, v41))
    {
      uint64_t v45 = objc_msgSend_interworkingService(v24, v42, v43, v44);
      uint64_t v49 = objc_msgSend_service(v25, v46, v47, v48);
      int v62 = (void *)v45;
      uint64_t v50 = (void *)v45;
      uint64_t v51 = (void *)v49;
      if (objc_msgSend_isEqualToString_(v50, v52, v49, v53)
        && (objc_msgSend_isFromMe(v25, v54, v55, v56) & 1) == 0
        && objc_msgSend_isFromMe(v26, v57, v58, v59))
      {
        char v60 = sub_1A4C3604C(v26);

        if (v60)
        {
          BOOL v38 = 0;
          uint64_t v11 = v63;
          goto LABEL_22;
        }
LABEL_21:
        uint64_t v11 = v63;
        BOOL v38 = v63 != v15;
        goto LABEL_22;
      }
    }
    goto LABEL_21;
  }
LABEL_10:

LABEL_11:
  BOOL v38 = 0;
LABEL_22:

  return v38;
}

BOOL sub_1A4C158B0(void *a1, void *a2)
{
  uint64_t v120 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (!objc_msgSend_cachedShouldShowReportSpam(v3, v5, v6, v7))
  {
    id v16 = v3;
    id v17 = v4;
    BOOL v20 = objc_msgSend___imArrayByFilteringWithBlock_(v17, v18, (uint64_t)&unk_1EF8E3EF0, v19);
    if (!objc_msgSend_count(v20, v21, v22, v23)) {
      goto LABEL_17;
    }
    uint64_t v27 = objc_msgSend_firstObject(v20, v24, v25, v26);
    char v31 = objc_msgSend_isFromMe(v27, v28, v29, v30);

    if ((v31 & 1) != 0
      || (objc_msgSend_shouldBeAllowListed(v16, v32, v33, v34) & 1) != 0
      || (objc_msgSend_isOscarChat(v16, v35, v36, v37) & 1) != 0
      || (objc_msgSend_isRecovered(v16, v38, v39, v40) & 1) != 0
      || objc_msgSend_isFiltered(v16, v41, v42, v43) == 2 && (IMIsOscarEnabled(2, v44, v45, v46) & 1) != 0)
    {
      goto LABEL_17;
    }
    if ((objc_msgSend_isStewieChat(v16, v44, v45, v46) & 1) != 0
      || (objc_msgSend_isStewieSharingChat(v16, v47, v48, v49) & 1) != 0)
    {
      goto LABEL_17;
    }
    if (objc_msgSend_isBusinessChat(v16, v50, v51, v52))
    {
      if (!objc_msgSend_containsActiveBIASession(v16, v61, v62, v63)
        || (objc_msgSend_hasSentMessageToBusiness(v16, v64, v65, v66) & 1) != 0)
      {
        uint64_t v67 = objc_msgSend_account(v16, v64, v65, v66);
        uint64_t v71 = objc_msgSend_service(v67, v68, v69, v70);
        uint64_t v78 = objc_msgSend_rcsService(IMService, v72, v73, v74);
        if (v71 != v78 || !objc_msgSend_isChatBot(v16, v75, v76, v77))
        {

          goto LABEL_18;
        }
        uint64_t v82 = objc_msgSend_lastSentMessage(v16, v79, v80, v81);

        if (v82)
        {
LABEL_18:
          objc_msgSend_setCachedShouldShowReportSpam_(v16, v53, 1, v54);
          goto LABEL_19;
        }
LABEL_76:
        objc_msgSend_setCachedShouldShowReportSpam_(v16, v53, 2, v54);
LABEL_19:
        if (IMOSLoggingEnabled())
        {
          uint64_t v55 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v55, OS_LOG_TYPE_INFO))
          {
            ShouldShowSpauint64_t m = objc_msgSend_cachedShouldShowSpam(v16, v56, v57, v58);
            *(_DWORD *)long long buf = 134218242;
            uint64_t v117 = ShouldShowSpam;
            __int16 v118 = 2112;
            id v119 = v16;
            _os_log_impl(&dword_1A4AF7000, v55, OS_LOG_TYPE_INFO, "Updated cachedShouldShowReportSpam to %ld for %@", buf, 0x16u);
          }
        }
        goto LABEL_23;
      }
      if (IMOSLoggingEnabled())
      {
        uint64_t v86 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v86, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v114 = 0;
          _os_log_impl(&dword_1A4AF7000, v86, OS_LOG_TYPE_INFO, "Chat containsActiveBIASession, showing Report Junk", v114, 2u);
        }
      }
LABEL_75:

      goto LABEL_76;
    }
    if (objc_msgSend_isSMS(v16, v61, v62, v63))
    {
      if (IMSMSReportSpamExtensionAvailable())
      {
        if ((sub_1A4C2AC38(v16) & 1) == 0) {
          goto LABEL_17;
        }
      }
      else if (!sub_1A4C36640(v16))
      {
        goto LABEL_17;
      }
    }
    if ((objc_msgSend_hasKnownParticipants(v16, v83, v84, v85) & 1) == 0)
    {
      if ((objc_msgSend_hasSurfRequest(v16, v87, v88, v89) & 1) == 0)
      {
        v112[0] = MEMORY[0x1E4F143A8];
        v112[1] = 3221225472;
        v112[2] = sub_1A4C366BC;
        v112[3] = &unk_1E5B7D708;
        id v113 = v16;
        objc_msgSend_enumerateObjectsUsingBlock_(v20, v90, (uint64_t)v112, v91);
      }
      long long v110 = 0u;
      long long v111 = 0u;
      long long v108 = 0u;
      long long v109 = 0u;
      id obj = v20;
      uint64_t v93 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v92, (uint64_t)&v108, (uint64_t)buf, 16);
      if (v93)
      {
        int v94 = 0;
        uint64_t v95 = *(void *)v109;
        while (2)
        {
          for (uint64_t i = 0; i != v93; ++i)
          {
            if (*(void *)v109 != v95) {
              objc_enumerationMutation(obj);
            }
            uint64_t v97 = *(void **)(*((void *)&v108 + 1) + 8 * i);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_isFromMe(v97, v98, v99, v100))
            {
              if (v94 > 1)
              {
                LODWORD(v93) = 1;
                goto LABEL_58;
              }
              ++v94;
            }
          }
          uint64_t v93 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v98, (uint64_t)&v108, (uint64_t)buf, 16);
          if (v93) {
            continue;
          }
          break;
        }
      }
LABEL_58:

      if (IMOSLoggingEnabled())
      {
        uint64_t v104 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v104, OS_LOG_TYPE_INFO))
        {
          uint64_t v105 = @"NO";
          if (v93) {
            uint64_t v105 = @"YES";
          }
          *(_DWORD *)uint64_t v114 = 138412290;
          uint64_t v115 = v105;
          _os_log_impl(&dword_1A4AF7000, v104, OS_LOG_TYPE_INFO, "Has more than 3 replies? : %@", v114, 0xCu);
        }
      }
      if (v93)
      {
        if (objc_msgSend_hasSurfRequest(v16, v101, v102, v103))
        {
          if (!IMOSLoggingEnabled()) {
            goto LABEL_75;
          }
          uint64_t v106 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v106, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)uint64_t v114 = 0;
            _os_log_impl(&dword_1A4AF7000, v106, OS_LOG_TYPE_INFO, "Chat has surf request, showing Report Junk", v114, 2u);
          }
LABEL_74:

          goto LABEL_75;
        }
      }
      else if ((objc_msgSend_shouldBeAllowListed(v16, v101, v102, v103) & 1) == 0)
      {
        if (!IMOSLoggingEnabled()) {
          goto LABEL_75;
        }
        uint64_t v106 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v106, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v114 = 0;
          _os_log_impl(&dword_1A4AF7000, v106, OS_LOG_TYPE_INFO, "By default, showing Report Junk", v114, 2u);
        }
        goto LABEL_74;
      }
    }
LABEL_17:

    goto LABEL_18;
  }
  if (objc_msgSend_cachedShouldShowReportSpam(v3, v8, v9, v10) != 2)
  {
LABEL_23:
    BOOL v15 = objc_msgSend_cachedShouldShowReportSpam(v3, v11, v12, v13) == 2;
    goto LABEL_24;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "Showing report spam, cached value", buf, 2u);
    }
  }
  BOOL v15 = 1;
LABEL_24:

  return v15;
}

id sub_1A4C16BDC(void *a1, void *a2)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (objc_msgSend_isReplyContextPreview(v3, v5, v6, v7))
  {
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = objc_msgSend_guid(v3, v8, v9, v10);
    uint64_t v13 = IMAssociatedMessageDecodeGUID();
    uint64_t v19 = objc_msgSend_objectsForKey_(v4, v14, (uint64_t)v13, v15);
    if (v19)
    {
      uint64_t v65 = v13;
      uint64_t v66 = v12;
      id v67 = v4;
      uint64_t v20 = objc_msgSend_index(v3, v16, v17, v18);
      uint64_t v24 = objc_msgSend_messagePartRange(v3, v21, v22, v23);
      uint64_t v26 = v25;
      id v68 = v3;
      uint64_t v29 = objc_msgSend_originalMessagePartRange(v3, v25, v27, v28);
      char v31 = v30;
      long long v75 = 0u;
      long long v76 = 0u;
      long long v77 = 0u;
      long long v78 = 0u;
      uint64_t v64 = v19;
      id v32 = v19;
      uint64_t v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v32, v33, (uint64_t)&v75, (uint64_t)v79, 16);
      if (v34)
      {
        uint64_t v38 = v34;
        uint64_t v39 = v31;
        id v40 = 0;
        uint64_t v41 = *(void *)v76;
        uint64_t v73 = v26;
        uint64_t v74 = v24;
        if (v24) {
          BOOL v42 = 0;
        }
        else {
          BOOL v42 = v26 == (const char *)0x7FFFFFFFFFFFFFFFLL;
        }
        int v43 = v42;
        uint64_t v71 = v39;
        uint64_t v72 = v29;
        if (v29) {
          BOOL v44 = 0;
        }
        else {
          BOOL v44 = v39 == (const char *)0x7FFFFFFFFFFFFFFFLL;
        }
        int v45 = v44;
        int v69 = v45;
        int v70 = v43;
        do
        {
          for (uint64_t i = 0; i != v38; ++i)
          {
            if (*(void *)v76 != v41) {
              objc_enumerationMutation(v32);
            }
            uint64_t v47 = *(void **)(*((void *)&v75 + 1) + 8 * i);
            uint64_t v48 = objc_msgSend_associatedMessageGUID(v47, v35, v36, v37, v64);
            uint64_t v49 = IMAssociatedMessageDecodePartIndex();
            uint64_t v53 = objc_msgSend_associatedMessageRange(v47, v50, v51, v52);
            if (v49 != 0x7FFFFFFFFFFFFFFFLL && v49 == v20) {
              goto LABEL_37;
            }
            if (v54)
            {
              if (v53 == v74 && v54 == v73) {
                goto LABEL_37;
              }
              BOOL v58 = v53 == v72 && v54 == v71;
              int v59 = v70;
              if (v58) {
                int v59 = 1;
              }
              if ((v59 | v69) == 1)
              {
LABEL_37:
                if (!v40) {
                  id v40 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
                }
                objc_msgSend_addObject_(v40, v54, (uint64_t)v47, v55);
              }
            }
          }
          uint64_t v38 = objc_msgSend_countByEnumeratingWithState_objects_count_(v32, v35, (uint64_t)&v75, (uint64_t)v79, 16);
        }
        while (v38);
      }
      else
      {
        id v40 = 0;
      }

      uint64_t v11 = objc_msgSend_copy(v40, v60, v61, v62);
      id v4 = v67;
      id v3 = v68;
      uint64_t v13 = v65;
      uint64_t v12 = v66;
      uint64_t v19 = v64;
    }
    else
    {
      uint64_t v11 = 0;
    }
  }

  return v11;
}

id sub_1A4C16E78(void *a1)
{
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = (void *)MEMORY[0x1E4F1CA48];
  uint64_t v6 = objc_msgSend_count(v1, v3, v4, v5);
  uint64_t v9 = objc_msgSend_arrayWithCapacity_(v2, v7, v6, v8);
  uint64_t v10 = (void *)MEMORY[0x1E4F1CA48];
  uint64_t v14 = objc_msgSend_count(v1, v11, v12, v13);
  uint64_t v17 = objc_msgSend_arrayWithCapacity_(v10, v15, v14, v16);
  long long v63 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  id v18 = v1;
  uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v19, (uint64_t)&v63, (uint64_t)v67, 16);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = *(void *)v64;
    do
    {
      for (uint64_t i = 0; i != v21; ++i)
      {
        if (*(void *)v64 != v22) {
          objc_enumerationMutation(v18);
        }
        uint64_t v24 = *(void **)(*((void *)&v63 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v27 = v24;
          char v31 = objc_msgSend_tapback(v27, v28, v29, v30);
          char isRemoved = objc_msgSend_isRemoved(v31, v32, v33, v34);

          if ((isRemoved & 1) == 0)
          {
            uint64_t v39 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v36, v37, v38);
            char isEmojiTapbacksEnabled = objc_msgSend_isEmojiTapbacksEnabled(v39, v40, v41, v42);

            if ((isEmojiTapbacksEnabled & 1) != 0
              || (objc_msgSend_tapback(v27, v44, v45, v46),
                  uint64_t v47 = objc_claimAutoreleasedReturnValue(),
                  uint64_t v51 = objc_msgSend_associatedMessageType(v47, v48, v49, v50),
                  v47,
                  (unint64_t)(v51 - 3000) < 6)
              || (unint64_t)(v51 - 2000) <= 5)
            {
              objc_msgSend_addObject_(v17, v44, (uint64_t)v27, v46, (void)v63);
            }
          }
        }
        else
        {
          objc_msgSend_addObject_(v9, v25, (uint64_t)v24, v26, (void)v63);
        }
      }
      uint64_t v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v52, (uint64_t)&v63, (uint64_t)v67, 16);
    }
    while (v21);
  }

  if (objc_msgSend_count(v17, v53, v54, v55))
  {
    uint64_t v56 = [IMAggregateAcknowledgmentChatItem alloc];
    int v59 = objc_msgSend__initWithAcknowledgments_(v56, v57, (uint64_t)v17, v58);
    objc_msgSend_addObject_(v9, v60, (uint64_t)v59, v61);
  }

  return v9;
}

#error "1A4C170BC: too big function (funcsize=0)"

void sub_1A4C2858C(_Unwind_Exception *a1)
{
}

uint64_t sub_1A4C289FC(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000;
  uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = sub_1A4C35EE0;
  v9[3] = &unk_1E5B7C7F8;
  id v5 = v4;
  id v10 = v5;
  uint64_t v11 = &v12;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(v3, v6, 2, (uint64_t)v9);
  uint64_t v7 = v13[3];

  _Block_object_dispose(&v12, 8);
  return v7;
}

void sub_1A4C28ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C28AF4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)a1[4];
  id v26 = v4;
  uint64_t v9 = objc_msgSend_guid(v4, v6, v7, v8);
  uint64_t v12 = objc_msgSend_objectForKey_(v5, v10, (uint64_t)v9, v11);
  if (v12)
  {
  }
  else
  {
    uint64_t v16 = *(void **)(a1[5] + 16);
    uint64_t v17 = objc_msgSend_originalMessageGUID(v26, v13, v14, v15);
    uint64_t v18 = sub_1A4C289FC(v16, v17);

    if (v18 == 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v21 = *(void **)(*(void *)(a1[6] + 8) + 40);
      uint64_t v22 = (uint64_t)v26;
      if (!v21)
      {
        id v23 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        uint64_t v24 = *(void *)(a1[6] + 8);
        uint64_t v25 = *(void **)(v24 + 40);
        *(void *)(v24 + 40) = v23;

        uint64_t v22 = (uint64_t)v26;
        uint64_t v21 = *(void **)(*(void *)(a1[6] + 8) + 40);
      }
      objc_msgSend_addObject_(v21, v19, v22, v20);
    }
  }
}

uint64_t sub_1A4C28BF4(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_messageID(a2, v5, v6, v7);
  uint64_t v12 = objc_msgSend_messageID(v4, v9, v10, v11);

  if (v8 > v12) {
    return 1;
  }
  else {
    return -1;
  }
}

void sub_1A4C28C4C(uint64_t a1, void *a2, uint64_t a3)
{
  id v186 = a2;
  uint64_t v6 = objc_opt_class();
  uint64_t v10 = (void *)v6;
  if (v6 == *(void *)(a1 + 344))
  {
    uint64_t v18 = *(void *)(a1 + 64);
LABEL_64:
    *(void *)(*(void *)(v18 + 8) + 24) = a3;
    goto LABEL_65;
  }
  if (v6 == *(void *)(a1 + 352))
  {
LABEL_28:
    uint64_t v18 = *(void *)(a1 + 72);
    goto LABEL_64;
  }
  if (v6 == *(void *)(a1 + 360))
  {
    uint64_t v18 = *(void *)(a1 + 80);
    goto LABEL_64;
  }
  if (v6 == *(void *)(a1 + 368))
  {
    switch(objc_msgSend_statusType(v186, v7, v8, v9))
    {
      case 0:
        goto LABEL_62;
      case 1:
      case 23:
      case 26:
      case 30:
        uint64_t v22 = *(void *)(a1 + 112);
        goto LABEL_61;
      case 2:
        uint64_t v22 = *(void *)(a1 + 120);
        goto LABEL_61;
      case 3:
        uint64_t v22 = *(void *)(a1 + 128);
        goto LABEL_61;
      case 4:
      case 22:
      case 25:
        uint64_t v22 = *(void *)(a1 + 104);
        goto LABEL_61;
      case 5:
        uint64_t v22 = *(void *)(a1 + 96);
        goto LABEL_61;
      case 6:
        uint64_t v22 = *(void *)(a1 + 88);
        goto LABEL_61;
      case 11:
        uint64_t v22 = *(void *)(a1 + 136);
        goto LABEL_61;
      case 12:
        uint64_t v22 = *(void *)(a1 + 144);
        goto LABEL_61;
      case 34:
        uint64_t v71 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v19, v20, v21);
        int isCarrierPigeonEnabled = objc_msgSend_isCarrierPigeonEnabled(v71, v72, v73, v74);

        if (!isCarrierPigeonEnabled) {
          goto LABEL_62;
        }
        uint64_t v22 = *(void *)(a1 + 152);
LABEL_61:
        *(void *)(*(void *)(v22 + 8) + 24) = a3;
LABEL_62:
        if (objc_msgSend_expireStatusType(v186, v19, v20, v21) != 1) {
          goto LABEL_65;
        }
        uint64_t v18 = *(void *)(a1 + 168);
        break;
      default:
        uint64_t v68 = objc_msgSend__item(v186, v19, v20, v21);
        uint64_t v69 = *(void *)(*(void *)(a1 + 160) + 8);
        int v70 = *(void **)(v69 + 40);
        *(void *)(v69 + 40) = v68;

        goto LABEL_62;
    }
    goto LABEL_64;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  if (!objc_msgSend_hasKnownParticipantsCache(WeakRetained, v12, v13, v14) || v10 != *(void **)(a1 + 376))
  {

    goto LABEL_8;
  }
  char v23 = objc_msgSend_isFromMe(v186, v15, v16, v17);

  if ((v23 & 1) == 0)
  {
    id v24 = v186;
    uint64_t v28 = objc_msgSend_sharedInstance(IMFileTransferCenter, v25, v26, v27);
    id v32 = objc_msgSend_transferGUID(v24, v29, v30, v31);
    uint64_t v35 = objc_msgSend_transferForGUID_(v28, v33, (uint64_t)v32, v34);

    uint64_t v39 = objc_msgSend_type(v35, v36, v37, v38);
    objc_msgSend_previewGenerationState(v35, v40, v41, v42);
    LODWORD(v32) = IMShouldAllowInteractionlessUsageOfUTITypeWithPreviewGenerationState();

    if (v32)
    {
      if (objc_msgSend_isPlayed(v24, v43, v44, v45))
      {
        uint64_t v46 = *(void *)(*(void *)(a1 + 200) + 8);
        uint64_t v48 = *(void *)(v46 + 24);
        uint64_t v47 = (void *)(v46 + 24);
        if (v48 != 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_133;
        }
      }
      else
      {
        uint64_t v136 = *(void *)(*(void *)(a1 + 176) + 8);
        if (*(void *)(v136 + 24) == 0x7FFFFFFFFFFFFFFFLL) {
          *(void *)(v136 + 24) = a3 + 1;
        }
        ++*(void *)(*(void *)(*(void *)(a1 + 184) + 8) + 24);
        uint64_t v137 = *(void *)(*(void *)(a1 + 192) + 8);
        uint64_t v138 = *(void *)(v137 + 24);
        uint64_t v47 = (void *)(v137 + 24);
        if (v138 != 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_133;
        }
      }
      void *v47 = a3 + 1;
    }
LABEL_133:

    goto LABEL_134;
  }
LABEL_8:
  if (*(void *)(*(void *)(*(void *)(a1 + 208) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(void *)(*(void *)(*(void *)(a1 + 216) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(void *)(*(void *)(*(void *)(a1 + 224) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(void *)(*(void *)(*(void *)(a1 + 232) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(void *)(*(void *)(*(void *)(a1 + 240) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    && *(void *)(*(void *)(*(void *)(a1 + 248) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL
    || !objc_msgSend_isSubclassOfClass_(v10, v7, *(void *)(a1 + 384), v9)
    || (objc_msgSend_isReplyContextPreview(v186, v7, v8, v9) & 1) != 0
    || (objc_msgSend_isEditedMessageHistory(v186, v7, v8, v9) & 1) != 0)
  {
    if (v10 == *(void **)(a1 + 392))
    {
      uint64_t v18 = *(void *)(a1 + 272);
      goto LABEL_64;
    }
    if (v10 == *(void **)(a1 + 400))
    {
      uint64_t v18 = *(void *)(a1 + 280);
      goto LABEL_64;
    }
    if (v10 == *(void **)(a1 + 408))
    {
      uint64_t v18 = *(void *)(a1 + 288);
      goto LABEL_64;
    }
    if (v10 == *(void **)(a1 + 416))
    {
      uint64_t v18 = *(void *)(a1 + 296);
      goto LABEL_64;
    }
    if (v10 == *(void **)(a1 + 424))
    {
      uint64_t v18 = *(void *)(a1 + 304);
      goto LABEL_64;
    }
    if (v10 == *(void **)(a1 + 432))
    {
      uint64_t v18 = *(void *)(a1 + 312);
      goto LABEL_64;
    }
    if (v10 == *(void **)(a1 + 440))
    {
      uint64_t v18 = *(void *)(a1 + 320);
      goto LABEL_64;
    }
    if (v10 != *(void **)(a1 + 352))
    {
      if (v10 != *(void **)(a1 + 448)) {
        goto LABEL_65;
      }
      uint64_t v18 = *(void *)(a1 + 328);
      goto LABEL_64;
    }
    goto LABEL_28;
  }
  objc_msgSend__item(v186, v7, v8, v9);
  id v24 = (id)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend_isFromMe(v24, v49, v50, v51)
    || v24 == *(id *)(*(void *)(*(void *)(a1 + 160) + 8) + 40))
  {
    if ((objc_msgSend_isFromMe(v24, v52, v53, v54) & 1) == 0 && (objc_msgSend_isAutoReply(v24, v65, v66, v67) & 1) == 0) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 256) + 8) + 24) = 1;
    }
    goto LABEL_134;
  }
  uint64_t v55 = *(void **)(a1 + 40);
  uint64_t v56 = objc_msgSend_guid(v24, v52, v53, v54);
  if (objc_msgSend_countForKey_(v55, v57, (uint64_t)v56, v58))
  {
    uint64_t v59 = *(void *)(*(void *)(*(void *)(a1 + 232) + 8) + 24);

    if (v59 == 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v63 = a3 + 1;
      uint64_t v64 = *(void *)(a1 + 232);
LABEL_46:
      *(void *)(*(void *)(v64 + 8) + 24) = v63;
      goto LABEL_129;
    }
  }
  else
  {
  }
  if (objc_msgSend_isPlayed(v24, v60, v61, v62))
  {
    if (objc_msgSend_isExpirable(v24, v60, v61, v62))
    {
      uint64_t v139 = *(void *)(*(void *)(a1 + 224) + 8);
      if (*(void *)(v139 + 24) == 0x7FFFFFFFFFFFFFFFLL)
      {
        *(void *)(v139 + 24) = a3 + 1;
        goto LABEL_129;
      }
    }
  }
  if (objc_msgSend_isRead(v24, v60, v61, v62))
  {
    int isExpirable = objc_msgSend_isExpirable(v24, v60, v61, v62);
    char v141 = isExpirable;
    if (isExpirable)
    {
      uint64_t v142 = objc_msgSend_service(v24, v60, v61, v62);
      id v3 = objc_msgSend_serviceWithName_(IMService, v143, (uint64_t)v142, v144);
      if ((objc_msgSend_supportsCapability_(v3, v145, *MEMORY[0x1E4F6E068], v146) & 1) != 0
        || (uint64_t v150 = (uint64_t *)(a1 + 216),
            *(void *)(*(void *)(*(void *)(a1 + 216) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL))
      {

        goto LABEL_115;
      }
      objc_msgSend_service(v24, v147, v148, v149, v142);
    }
    else
    {
      uint64_t v150 = (uint64_t *)(a1 + 216);
      if (*(void *)(*(void *)(*(void *)(a1 + 216) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_115;
      }
      objc_msgSend_service(v24, v60, v61, v62);
    uint64_t v151 = };
    uint64_t v154 = objc_msgSend_serviceWithName_(IMService, v152, (uint64_t)v151, v153);
    int v157 = objc_msgSend_supportsCapability_(v154, v155, *MEMORY[0x1E4F6E0C8], v156);

    if (v141)
    {

      if ((v157 & 1) == 0) {
        goto LABEL_115;
      }
LABEL_114:
      uint64_t v63 = a3 + 1;
      uint64_t v64 = *v150;
      goto LABEL_46;
    }
    if (v157) {
      goto LABEL_114;
    }
  }
LABEL_115:
  if (*(void *)(*(void *)(*(void *)(a1 + 208) + 8) + 24) == 0x7FFFFFFFFFFFFFFFLL
    && *(void *)(*(void *)(*(void *)(a1 + 240) + 8) + 24) == 0x7FFFFFFFFFFFFFFFLL
    && *(void *)(*(void *)(*(void *)(a1 + 248) + 8) + 24) == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v158 = objc_msgSend_time(v24, v60, v61, v62);
    objc_msgSend_timeIntervalSinceNow(v158, v159, v160, v161);
    double v163 = v162;

    BOOL v170 = objc_msgSend_scheduleType(v24, v164, v165, v166) == 2
        && objc_msgSend_scheduleState(v24, v167, v168, v169) == 2;
    if (objc_msgSend_didNotifyRecipient(v24, v167, v168, v169))
    {
LABEL_122:
      uint64_t v63 = a3 + 1;
      uint64_t v64 = *(void *)(a1 + 248);
      goto LABEL_46;
    }
    double v171 = fabs(v163);
    if (*(unsigned char *)(a1 + 464)
      && objc_msgSend_wasDeliveredQuietly(v24, v60, v61, v62)
      && v171 <= 86400.0
      && !*(unsigned char *)(*(void *)(*(void *)(a1 + 256) + 8) + 24))
    {
      goto LABEL_142;
    }
    if (objc_msgSend_isDelivered(v24, v60, v61, v62)
      && ((objc_msgSend_isPendingSatelliteSend(v24, v60, v61, v62) | v170) & 1) == 0)
    {
      if (!*(unsigned char *)(a1 + 464)
        || v171 > 86400.0
        || *(unsigned char *)(*(void *)(*(void *)(a1 + 256) + 8) + 24)
        || (id v183 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8)),
            uint64_t v184 = sub_1A4C29714(v24, v183, *(void **)(a1 + 48)),
            v183,
            !v184))
      {
        uint64_t v63 = a3 + 1;
        uint64_t v64 = *(void *)(a1 + 208);
        goto LABEL_46;
      }
      if (v184 == 2) {
        goto LABEL_122;
      }
      if (v184 == 1)
      {
LABEL_142:
        uint64_t v63 = a3 + 1;
        uint64_t v64 = *(void *)(a1 + 240);
        goto LABEL_46;
      }
    }
  }
LABEL_129:
  uint64_t v172 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v60, v61, v62);
  int v176 = objc_msgSend_isCarrierPigeonEnabled(v172, v173, v174, v175);

  if (v176)
  {
    uint64_t v180 = *(void **)(a1 + 32);
    uint64_t v35 = objc_msgSend_chat(v180, v177, v178, v179);
    if (objc_msgSend__shouldAppendSentViaSatelliteForChat_message_(v180, v181, (uint64_t)v35, (uint64_t)v24))
    {
      uint64_t v182 = *(void *)(*(void *)(*(void *)(a1 + 264) + 8) + 24);

      if (v182 == 0x7FFFFFFFFFFFFFFFLL) {
        *(void *)(*(void *)(*(void *)(a1 + 264) + 8) + 24) = a3 + 1;
      }
      goto LABEL_134;
    }
    goto LABEL_133;
  }
LABEL_134:

LABEL_65:
  if (v10 == *(void **)(a1 + 456))
  {
    uint64_t v76 = objc_msgSend_playbackType(v186, v7, v8, v9);
    uint64_t v79 = v186;
    if (v76)
    {
      uint64_t v80 = objc_msgSend_type(v186, (const char *)v186, v77, v78);
      uint64_t v83 = objc_msgSend_objectForKey_(*(void **)(a1 + 56), v81, (uint64_t)v80, v82);

      if (!v83)
      {
        uint64_t v86 = *(void **)(a1 + 56);
        uint64_t v87 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v84, a3, v85);
        objc_msgSend_setObject_forKey_(v86, v88, (uint64_t)v87, (uint64_t)v80);
      }
      uint64_t v79 = v186;
    }
    objc_msgSend_setLastChatItemOfPluginType_(v79, (const char *)v79, 0, v78);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    objc_msgSend_setChatInScrutinyMode_(v186, v89, *(unsigned __int8 *)(a1 + 465), v90);
  }
  if (objc_msgSend_isSubclassOfClass_(v10, v89, *(void *)(a1 + 384), v90))
  {
    int v94 = objc_msgSend__item(v186, v91, v92, v93);
    uint64_t v98 = objc_msgSend_chat(*(void **)(a1 + 32), v95, v96, v97);
    uint64_t v102 = objc_msgSend_account(v98, v99, v100, v101);
    uint64_t v106 = objc_msgSend_service(v102, v103, v104, v105);
    if (objc_msgSend_supportsCapability_(v106, v107, *MEMORY[0x1E4F6E0E8], v108))
    {
      int v109 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 336) + 8) + 24);

      if (v109)
      {
        id v113 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
        uint64_t v117 = objc_msgSend_chatStyle(v113, v114, v115, v116);
        int isReportJunkServiceAllowedForMessageItem_junkChatStyle = objc_msgSend_isReportJunkServiceAllowedForMessageItem_junkChatStyle_(IMCarrierReportJunkHelper, v118, (uint64_t)v94, v117);

        id v120 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
        if (objc_msgSend_cachedShouldShowReportSpam(v120, v121, v122, v123) == 1
          && isReportJunkServiceAllowedForMessageItem_junkChatStyle)
        {
        }
        else
        {
          id v124 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
          if (objc_msgSend_cachedShouldShowReportSpam(v124, v125, v126, v127) != 2) {
            LOBYTE(isReportJunkServiceAllowedForMessageItem_junkChatStyle) = 1;
          }

          if (isReportJunkServiceAllowedForMessageItem_junkChatStyle) {
            goto LABEL_84;
          }
        }
        id v128 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
        objc_msgSend_invalidateSpamIndicatorCachedValues(v128, v129, v130, v131);

LABEL_84:
        *(unsigned char *)(*(void *)(*(void *)(a1 + 336) + 8) + 24) = 0;
      }
    }
    else
    {
    }
    if (objc_msgSend_isFromMe(v94, v110, v111, v112))
    {
      id v132 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
      objc_msgSend_invalidateSpamIndicatorCachedValuesIfNeeded(v132, v133, v134, v135);
    }
  }
}

uint64_t sub_1A4C29714(void *a1, void *a2, void *a3)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v11 = objc_msgSend_time(v5, v8, v9, v10);
  uint64_t v18 = objc_msgSend_availabilityStatusPublishedDate(v6, v12, v13, v14);
  if (v18)
  {
    objc_msgSend_timeIntervalSince1970(v11, v15, v16, v17);
    double v20 = v19;
    objc_msgSend_timeIntervalSince1970(v18, v21, v22, v23);
    if (v20 < v24)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v25 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412546;
          *(void *)&uint8_t buf[4] = v11;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v18;
          _os_log_impl(&dword_1A4AF7000, v25, OS_LOG_TYPE_INFO, "Message from time %@ is older than status from time %@. Not inferring a delivery type, as we likely have out of date status data.", buf, 0x16u);
        }
      }
      uint64_t v26 = 0;
      goto LABEL_32;
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v27 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, "Status published date is not available (likely cache miss), assuming our status information is up to date", buf, 2u);
    }
  }
  id v28 = v7;
  uint64_t v46 = 0;
  uint64_t v47 = &v46;
  uint64_t v48 = 0x2020000000;
  char v49 = 0;
  v44[0] = 0;
  v44[1] = v44;
  v44[2] = 0x3032000000;
  v44[3] = sub_1A4B3458C;
  v44[4] = sub_1A4B343AC;
  id v45 = 0;
  id v32 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v29, v30, v31);
  objc_msgSend_dateByAddingTimeInterval_(v32, v33, v34, v35, -480.0);
  id v45 = (id)objc_claimAutoreleasedReturnValue();

  *(void *)long long buf = MEMORY[0x1E4F143A8];
  *(void *)&uint8_t buf[8] = 3221225472;
  *(void *)&uint8_t buf[16] = sub_1A4C3614C;
  uint64_t v51 = &unk_1E5B7E920;
  uint64_t v52 = v44;
  uint64_t v53 = &v46;
  uint64_t v54 = 0x407E000000000000;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(v28, v36, 2, (uint64_t)buf);
  if (*((unsigned char *)v47 + 24))
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_21;
    }
    uint64_t v37 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v43 = 0;
      _os_log_impl(&dword_1A4AF7000, v37, OS_LOG_TYPE_INFO, "Inferring that we are in the urgent message grace period.", v43, 2u);
    }
  }
  else
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_21;
    }
    uint64_t v37 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v43 = 0;
      _os_log_impl(&dword_1A4AF7000, v37, OS_LOG_TYPE_INFO, "Inferring that we are NOT in the urgent message grace period.", v43, 2u);
    }
  }

LABEL_21:
  BOOL v38 = *((unsigned char *)v47 + 24) == 0;
  _Block_object_dispose(v44, 8);

  _Block_object_dispose(&v46, 8);
  int v39 = IMOSLoggingEnabled();
  if (v38)
  {
    if (v39)
    {
      uint64_t v41 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v41, OS_LOG_TYPE_INFO, "We are not in an active grace period, inferring this recent message will be delivered quietly, pending receipt", buf, 2u);
      }
    }
    uint64_t v26 = 1;
  }
  else
  {
    if (v39)
    {
      id v40 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v40, OS_LOG_TYPE_INFO, "Recipient is unavailable, and we are in an active grace period, inferring sent message will notify recipient, pending receipt", buf, 2u);
      }
    }
    uint64_t v26 = 2;
  }
LABEL_32:

  return v26;
}

void sub_1A4C29C18(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_unsignedIntegerValue(a3, a2, (uint64_t)a3, a4);
  if (v5 < objc_msgSend_count(*(void **)(a1 + 32), v6, v7, v8))
  {
    objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), v9, v5, v10);
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    if (objc_opt_isKindOfClass()) {
      objc_msgSend_setLastChatItemOfPluginType_(v13, v11, 1, v12);
    }
  }
}

id sub_1A4C29CAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  uint64_t v10 = [IMLoadMoreChatItem alloc];
  id v13 = objc_msgSend__initWithItem_(v10, v11, (uint64_t)v9, v12);
  uint64_t v16 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v14, (uint64_t)v13, v15);

  return v16;
}

id sub_1A4C29D48(uint64_t a1)
{
  id v2 = [IMBlackholeChatItem alloc];
  unint64_t v5 = objc_msgSend__initWithItem_(v2, v3, 0, v4);
  uint64_t v8 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 32), v6, (uint64_t)v5, v7);

  return v8;
}

uint64_t sub_1A4C29DAC(void *a1)
{
  return MEMORY[0x1F4181798](a1[4], sel__updateOrRemoveiMessageLiteSentItemMovingFromOldIndex_chatItems_, *(void *)(*(void *)(a1[6] + 8) + 24), a1[5]);
}

uint64_t sub_1A4C29DC4(uint64_t a1)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel__newiMessageLiteSentItemWithStatusType_atIndex_chatItems_, 34, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24));
}

uint64_t sub_1A4C29DE0(void *a1)
{
  return MEMORY[0x1F4181798](a1[4], sel__updateOrRemoveDeliveredStatusItemMovingFromOldIndex_chatItems_, *(void *)(*(void *)(a1[6] + 8) + 24), a1[5]);
}

id sub_1A4C29DF8(uint64_t a1, const char *a2)
{
  id v2 = objc_msgSend__newDeliveredChatItemWithStatusType_atIndex_chatItems_(*(void **)(a1 + 32), a2, 1, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(a1 + 40));

  return v2;
}

uint64_t sub_1A4C29E38(void *a1)
{
  return MEMORY[0x1F4181798](a1[4], sel__updateOrRemoveDeliveredStatusItemMovingFromOldIndex_chatItems_, *(void *)(*(void *)(a1[6] + 8) + 24), a1[5]);
}

id sub_1A4C29E50(uint64_t a1, const char *a2)
{
  id v2 = objc_msgSend__newDeliveredChatItemWithStatusType_atIndex_chatItems_(*(void **)(a1 + 32), a2, 2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(a1 + 40));

  return v2;
}

uint64_t sub_1A4C29E90(void *a1)
{
  return MEMORY[0x1F4181798](a1[4], sel__updateOrRemoveDeliveredStatusItemMovingFromOldIndex_chatItems_, *(void *)(*(void *)(a1[6] + 8) + 24), a1[5]);
}

id sub_1A4C29EA8(uint64_t a1, const char *a2)
{
  id v2 = objc_msgSend__newDeliveredChatItemWithStatusType_atIndex_chatItems_(*(void **)(a1 + 32), a2, 3, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(a1 + 40));

  return v2;
}

id sub_1A4C29EE8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  id v10 = v9;
  if (objc_msgSend_expireState(v10, v11, v12, v13) == 1)
  {
    if ((objc_msgSend_isFromMe(v10, v14, v15, v16) & 1) != 0
      || (IMMessageItemTimeIntervalSinceStartedExpiring(), v17 >= 3.0))
    {
      uint64_t v18 = 3;
    }
    else
    {
      uint64_t v18 = 2;
    }

    uint64_t v21 = [IMMessageStatusChatItem alloc];
    double v20 = objc_msgSend__initWithItem_expireStatusType_count_statusItemSequenceNumber_(v21, v22, (uint64_t)v10, v18, 0, 0);
    double v19 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v23, (uint64_t)v20, v24);
  }
  else
  {

    double v19 = 0;
    double v20 = v10;
  }

  return v19;
}

id sub_1A4C29FF4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  uint64_t v13 = objc_msgSend_timeRead(v9, v10, v11, v12);
  double v17 = objc_msgSend_time(v9, v14, v15, v16);
  double v20 = objc_msgSend_laterDate_(v13, v18, (uint64_t)v17, v19);

  id v21 = v9;
  uint64_t v28 = objc_msgSend_expireState(v21, v22, v23, v24);
  if (v28 == 1)
  {
    if ((objc_msgSend_isFromMe(v21, v25, v26, v27) & 1) != 0
      || (IMMessageItemTimeIntervalSinceStartedExpiring(), v29 >= 3.0))
    {
      uint64_t v30 = 3;
    }
    else
    {
      uint64_t v30 = 2;
    }
  }
  else
  {
    uint64_t v30 = 0;
  }

  uint64_t v31 = [IMMessageStatusChatItem alloc];
  uint64_t v33 = objc_msgSend__initWithItem_statusType_time_count_expireStatusType_statusItemSequenceNumber_(v31, v32, (uint64_t)v21, 4, v20, 0, v30, 0);
  uint64_t v37 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v34, (uint64_t)v33, v35);
  if (v28 == 1)
  {
    objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 32), v36, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), (uint64_t)v37);

    uint64_t v37 = 0;
  }

  return v37;
}

id sub_1A4C2A178(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  id v10 = v9;
  if (objc_msgSend_expireState(v10, v11, v12, v13) == 1)
  {
    if ((objc_msgSend_isFromMe(v10, v14, v15, v16) & 1) != 0
      || (IMMessageItemTimeIntervalSinceStartedExpiring(), v17 >= 3.0))
    {
      uint64_t v18 = 3;
    }
    else
    {
      uint64_t v18 = 2;
    }

    id v21 = [IMMessageStatusChatItem alloc];
    double v20 = objc_msgSend__initWithItem_expireStatusType_count_statusItemSequenceNumber_(v21, v22, (uint64_t)v10, v18, 0, 0);
    uint64_t v19 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v23, (uint64_t)v20, v24);
  }
  else
  {

    uint64_t v19 = 0;
    double v20 = v10;
  }

  return v19;
}

id sub_1A4C2A284(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  uint64_t v13 = objc_msgSend_timePlayed(v9, v10, v11, v12);
  double v17 = objc_msgSend_time(v9, v14, v15, v16);
  double v20 = objc_msgSend_laterDate_(v13, v18, (uint64_t)v17, v19);

  id v21 = v9;
  uint64_t v28 = objc_msgSend_expireState(v21, v22, v23, v24);
  if (v28 == 1)
  {
    if ((objc_msgSend_isFromMe(v21, v25, v26, v27) & 1) != 0
      || (IMMessageItemTimeIntervalSinceStartedExpiring(), v29 >= 3.0))
    {
      uint64_t v30 = 3;
    }
    else
    {
      uint64_t v30 = 2;
    }
  }
  else
  {
    uint64_t v30 = 0;
  }

  uint64_t v31 = [IMMessageStatusChatItem alloc];
  uint64_t v33 = objc_msgSend__initWithItem_statusType_time_count_expireStatusType_statusItemSequenceNumber_(v31, v32, (uint64_t)v21, 5, v20, 0, v30, 0);
  uint64_t v37 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v34, (uint64_t)v33, v35);
  if (v28 == 1)
  {
    objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 32), v36, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), (uint64_t)v37);

    uint64_t v37 = 0;
  }

  return v37;
}

id sub_1A4C2A408(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  id v10 = v9;
  if (objc_msgSend_expireState(v10, v11, v12, v13) == 1)
  {
    if ((objc_msgSend_isFromMe(v10, v14, v15, v16) & 1) != 0
      || (IMMessageItemTimeIntervalSinceStartedExpiring(), v17 >= 3.0))
    {
      uint64_t v18 = 3;
    }
    else
    {
      uint64_t v18 = 2;
    }

    id v21 = [IMMessageStatusChatItem alloc];
    double v20 = objc_msgSend__initWithItem_expireStatusType_count_statusItemSequenceNumber_(v21, v22, (uint64_t)v10, v18, 0, 0);
    uint64_t v19 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v23, (uint64_t)v20, v24);
  }
  else
  {

    uint64_t v19 = 0;
    double v20 = v10;
  }

  return v19;
}

id sub_1A4C2A514(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  int v10 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v11 = *(void **)(a1 + 40);
  double v17 = objc_msgSend_guid(v9, v12, v13, v14);
  if (v10 == 45)
  {
    uint64_t v18 = objc_msgSend_peekObjectForKey_(v11, v15, (uint64_t)v17, v16);
    uint64_t v22 = objc_msgSend_time(v18, v19, v20, v21);

    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = objc_msgSend_countForKey_(v11, v15, (uint64_t)v17, v16);
    uint64_t v22 = 0;
  }

  id v24 = v9;
  uint64_t v31 = objc_msgSend_expireState(v24, v25, v26, v27);
  if (v31 == 1)
  {
    if ((objc_msgSend_isFromMe(v24, v28, v29, v30) & 1) != 0
      || (IMMessageItemTimeIntervalSinceStartedExpiring(), v32 >= 3.0))
    {
      uint64_t v33 = 3;
    }
    else
    {
      uint64_t v33 = 2;
    }
  }
  else
  {
    uint64_t v33 = 0;
  }

  uint64_t v34 = [IMMessageStatusChatItem alloc];
  uint64_t v36 = objc_msgSend__initWithItem_statusType_time_count_expireStatusType_statusItemSequenceNumber_(v34, v35, (uint64_t)v24, 6, v22, v23, v33, 0);
  id v40 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 48), v37, (uint64_t)v36, v38);
  if (v31 == 1)
  {
    objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 32), v39, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24), (uint64_t)v40);

    id v40 = 0;
  }

  return v40;
}

id sub_1A4C2A6B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), a4);
  if (objc_msgSend_expireStatusType(v5, v6, v7, v8) == 1)
  {
    uint64_t v12 = objc_msgSend__item(v5, v9, v10, v11);
    uint64_t v13 = [IMMessageStatusChatItem alloc];
    uint64_t v15 = objc_msgSend__initWithItem_expireStatusType_count_statusItemSequenceNumber_(v13, v14, (uint64_t)v12, 1, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24), 0);
    uint64_t v18 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v16, (uint64_t)v15, v17);
  }
  else
  {
    uint64_t v18 = 0;
  }

  return v18;
}

id sub_1A4C2A780(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  uint64_t v10 = [IMMessageStatusChatItem alloc];
  uint64_t v12 = objc_msgSend__initWithItem_statusType_time_count_statusItemSequenceNumber_(v10, v11, (uint64_t)v9, 11, 0, 0, 0);
  uint64_t v15 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v13, (uint64_t)v12, v14);

  return v15;
}

id sub_1A4C2A830(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), a4);
  if (objc_msgSend_statusType(v5, v6, v7, v8) == 11)
  {
    uint64_t v12 = objc_msgSend__item(v5, v9, v10, v11);
    uint64_t v13 = [IMMessageStatusChatItem alloc];
    uint64_t v15 = objc_msgSend__initWithItem_statusType_time_count_statusItemSequenceNumber_(v13, v14, (uint64_t)v12, 11, 0, 0, 0);
    uint64_t v18 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v16, (uint64_t)v15, v17);
  }
  else
  {
    uint64_t v18 = 0;
  }

  return v18;
}

id sub_1A4C2A8F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  if (*(unsigned char *)(a1 + 64)) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = [IMMessageStatusChatItem alloc];
  uint64_t v13 = objc_msgSend__initWithItem_statusType_time_count_expireStatusType_statusItemSequenceNumber_(v11, v12, (uint64_t)v9, v10, 0, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24), 1, 0);
  uint64_t v17 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v14, (uint64_t)v13, v15);
  if (*(unsigned char *)(a1 + 64))
  {
    objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 32), v16, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), (uint64_t)v17);

    uint64_t v17 = 0;
  }

  return v17;
}

id sub_1A4C2A9E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  id v10 = v9;
  if (objc_msgSend_expireState(v10, v11, v12, v13) == 1)
  {
    if ((objc_msgSend_isFromMe(v10, v14, v15, v16) & 1) != 0
      || (IMMessageItemTimeIntervalSinceStartedExpiring(), v17 >= 3.0))
    {
      uint64_t v18 = 3;
    }
    else
    {
      uint64_t v18 = 2;
    }

    uint64_t v21 = [IMMessageStatusChatItem alloc];
    uint64_t v20 = objc_msgSend__initWithItem_expireStatusType_count_statusItemSequenceNumber_(v21, v22, (uint64_t)v10, v18, 0, 0);
    uint64_t v19 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v23, (uint64_t)v20, v24);
  }
  else
  {

    uint64_t v19 = 0;
    uint64_t v20 = v10;
  }

  return v19;
}

id sub_1A4C2AAF4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  id v10 = v9;
  uint64_t v17 = objc_msgSend_expireState(v10, v11, v12, v13);
  if (v17 == 1)
  {
    if ((objc_msgSend_isFromMe(v10, v14, v15, v16) & 1) != 0
      || (IMMessageItemTimeIntervalSinceStartedExpiring(), v18 >= 3.0))
    {
      uint64_t v19 = 3;
    }
    else
    {
      uint64_t v19 = 2;
    }
  }
  else
  {
    uint64_t v19 = 0;
  }

  uint64_t v20 = [IMMessageStatusChatItem alloc];
  uint64_t v22 = objc_msgSend__initWithItem_statusType_time_count_expireStatusType_statusItemSequenceNumber_(v20, v21, (uint64_t)v10, 12, 0, 0, v19, 0);
  uint64_t v26 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v23, (uint64_t)v22, v24);
  if (v17 == 1)
  {
    objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 32), v25, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), (uint64_t)v26);

    uint64_t v26 = 0;
  }

  return v26;
}

uint64_t sub_1A4C2AC38(void *a1)
{
  id v1 = a1;
  unint64_t v5 = objc_msgSend_account(v1, v2, v3, v4);
  uint64_t v9 = objc_msgSend_service(v5, v6, v7, v8);
  uint64_t v16 = objc_msgSend_smsService(IMService, v10, v11, v12);
  if (v9 == v16)
  {
    double v18 = objc_msgSend__items(v1, v13, v14, v15);
    uint64_t ShouldShowReportMessagesForItems = IMSSMSReportSpamShouldShowReportMessagesForItems();
  }
  else
  {
    uint64_t ShouldShowReportMessagesForItems = 0;
  }

  return ShouldShowReportMessagesForItems;
}

id sub_1A4C2ACD8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  uint64_t v13 = objc_msgSend_valueForChatProperty_(WeakRetained, v11, @"wasAutoDetectedForSpam", v12);
  uint64_t v17 = objc_msgSend_BOOLValue(v13, v14, v15, v16);

  id v18 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  BOOL v22 = objc_msgSend_chatStyle(v18, v19, v20, v21) != 45;

  id v23 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  BOOL v27 = (unint64_t)objc_msgSend_messageCount(v23, v24, v25, v26) > 1;

  id v28 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  uint64_t isBusinessChat = objc_msgSend_isBusinessChat(v28, v29, v30, v31);

  uint64_t v33 = [IMReportSpamChatItem alloc];
  uint64_t v35 = objc_msgSend__initWithItem_wasReportedAsSpam_isGroup_hasMultipleMessages_showReportSMSSpam_isBusinessChat_(v33, v34, (uint64_t)v9, v17, v22, v27, *(unsigned __int8 *)(a1 + 56), isBusinessChat);
  uint64_t v38 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v36, (uint64_t)v35, v37);

  return v38;
}

BOOL sub_1A4C2AE30(void *a1, void *a2)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (objc_msgSend_cachedShouldShowSpam(v3, v5, v6, v7)) {
    goto LABEL_13;
  }
  id v11 = v3;
  uint64_t v14 = objc_msgSend___imArrayByFilteringWithBlock_(v4, v12, (uint64_t)&unk_1EF8E6728, v13);
  if (!objc_msgSend_count(v14, v15, v16, v17)
    || !objc_msgSend_isFiltered(v11, v18, v19, v20)
    || (objc_msgSend_isRecovered(v11, v21, v22, v23) & 1) != 0
    || (objc_msgSend_isBusinessChat(v11, v24, v25, v26) & 1) != 0
    || objc_msgSend_hasKnownParticipants(v11, v27, v28, v29))
  {

LABEL_8:
    objc_msgSend_setCachedShouldShowSpam_(v11, v33, 1, v34);
    goto LABEL_9;
  }
  unsigned __int8 isCategorized = objc_msgSend_isCategorized(v11, v30, v31, v32);
  uint64_t v44 = objc_msgSend_valueForChatProperty_(v11, v42, @"wasDetectedAsiMessageSpam", v43);
  unsigned __int8 v48 = objc_msgSend_BOOLValue(v44, v45, v46, v47);

  if (((isCategorized | v48) & 1) == 0) {
    goto LABEL_8;
  }
  objc_msgSend_setCachedShouldShowSpam_(v11, v33, 2, v34);
LABEL_9:
  if (IMOSLoggingEnabled())
  {
    uint64_t v35 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
    {
      int v49 = 134218242;
      ShouldShowSpauint64_t m = objc_msgSend_cachedShouldShowSpam(v11, v36, v37, v38);
      __int16 v51 = 2112;
      id v52 = v11;
      _os_log_impl(&dword_1A4AF7000, v35, OS_LOG_TYPE_INFO, "Updated cachedShouldShowSpam to %ld for %@", (uint8_t *)&v49, 0x16u);
    }
  }
LABEL_13:
  BOOL v39 = objc_msgSend_cachedShouldShowSpam(v3, v8, v9, v10) == 2;

  return v39;
}

id sub_1A4C2B020(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  uint64_t v14 = objc_msgSend_account(WeakRetained, v11, v12, v13);
  id v18 = objc_msgSend_service(v14, v15, v16, v17);
  int v21 = objc_msgSend_supportsCapability_(v18, v19, *MEMORY[0x1E4F6E108], v20);

  id v22 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  uint64_t v26 = v22;
  if (v21)
  {
    objc_msgSend_valueForChatProperty_(v22, v23, @"smsSpamExtensionName", v25);
    BOOL v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v28 = objc_msgSend_account(v22, v23, v24, v25);
    uint64_t v32 = objc_msgSend_service(v28, v29, v30, v31);
    int v35 = objc_msgSend_supportsCapability_(v32, v33, *MEMORY[0x1E4F6DFC0], v34);

    if (v35) {
      BOOL v27 = @"Apple";
    }
    else {
      BOOL v27 = 0;
    }
  }
  uint64_t v36 = [IMSMSSpamChatItem alloc];
  uint64_t v38 = objc_msgSend__initWithItem_withExtensionName_(v36, v37, (uint64_t)v9, (uint64_t)v27);
  uint64_t v41 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v39, (uint64_t)v38, v40);

  return v41;
}

id sub_1A4C2B19C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  objc_msgSend_markAsHasBeenBlockContact(WeakRetained, v11, v12, v13);

  uint64_t v14 = [IMBlockContactChatItem alloc];
  id v15 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  uint64_t v19 = objc_msgSend_chatStyle(v15, v16, v17, v18);
  int v21 = objc_msgSend__initWithItem_chatStyle_(v14, v20, (uint64_t)v9, v19);

  uint64_t v24 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v22, (uint64_t)v21, v23);

  return v24;
}

id sub_1A4C2B278(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  uint64_t v13 = objc_msgSend__currentChatSubscriptionLabel(*(void **)(a1 + 40), v10, v11, v12);
  uint64_t v14 = [IMSimSwitchedChatItem alloc];
  uint64_t v16 = objc_msgSend__initWithItem_senderHandle_(v14, v15, (uint64_t)v9, (uint64_t)v13);
  uint64_t v19 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v17, (uint64_t)v16, v18);

  return v19;
}

id sub_1A4C2B330(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  uint64_t v10 = [IMSatelliteUnavailableForServiceChatItem alloc];
  uint64_t v13 = objc_msgSend_serviceForChatItems_(*(void **)(a1 + 40), v11, *(void *)(a1 + 32), v12);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  uint64_t v18 = objc_msgSend_recipient(WeakRetained, v15, v16, v17);
  id v22 = objc_msgSend_ID(v18, v19, v20, v21);
  id v23 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  uint64_t isGroupChat = objc_msgSend_isGroupChat(v23, v24, v25, v26);
  uint64_t v29 = objc_msgSend__initWithItem_service_recipientID_isGroupChat_(v10, v28, (uint64_t)v9, (uint64_t)v13, v22, isGroupChat);

  uint64_t v32 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v30, (uint64_t)v29, v31);

  return v32;
}

id sub_1A4C2B454(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) - 1, a4);
  uint64_t v9 = objc_msgSend__item(v5, v6, v7, v8);

  uint64_t v10 = [IMLoadMoreRecentChatItem alloc];
  uint64_t v13 = objc_msgSend__initWithItem_(v10, v11, (uint64_t)v9, v12);
  uint64_t v16 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v14, (uint64_t)v13, v15);

  return v16;
}

void sub_1A4C2B4F4(uint64_t a1, void *a2, uint64_t a3)
{
  id v47 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = v47;
    uint64_t v6 = sub_1A4C16BDC(v5, *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
    if (v6)
    {
      uint64_t v8 = v6;
      uint64_t v9 = sub_1A4C16E78(v6);
    }
    else
    {
      uint64_t v9 = 0;
    }
    if ((objc_msgSend__updateAggregateAttachmentMessagePartAssociatedItems_map_(*(void **)(a1 + 32), v7, (uint64_t)v5, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)) & 1) != 0|| (uint64_t v29 = *(void **)(a1 + 32), objc_msgSend_visibleAssociatedMessageChatItems(v5, v26, v27, v28), v30 = objc_claimAutoreleasedReturnValue(), LODWORD(v29) = objc_msgSend__shouldReloadChatItemWithAssociatedChatItems_oldAssociatedChatItems_(v29, v31, (uint64_t)v9, (uint64_t)v30), v30, v29))
    {
      uint64_t v32 = objc_msgSend_copy(v5, v26, v27, v28);
      uint64_t v36 = v32;
      if (v9)
      {
        objc_msgSend__setVisibleAssociatedMessageChatItems_(v32, v33, (uint64_t)v9, v35);
      }
      else
      {
        BOOL v39 = objc_msgSend_visibleAssociatedMessageChatItems(v5, v33, v34, v35);
        uint64_t v43 = objc_msgSend_count(v39, v40, v41, v42);

        if (v43) {
          objc_msgSend__setVisibleAssociatedMessageChatItems_(v36, v37, 0, v38);
        }
      }
      uint64_t v44 = *(void **)(a1 + 40);
      id v45 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 32), v37, (uint64_t)v36, v38);
      objc_msgSend_replaceObjectAtIndex_withObject_(v44, v46, a3, (uint64_t)v45);
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_18;
    }
    id v10 = v47;
    int v11 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
    if (v11 != objc_msgSend__isActionableEclipsed(v10, v12, v13, v14))
    {
      uint64_t v18 = objc_msgSend_copy(v10, v15, v16, v17);
      objc_msgSend__setActionableEclipsed_(v18, v19, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24), v20);
      uint64_t v21 = *(void **)(a1 + 40);
      uint64_t v24 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 32), v22, (uint64_t)v18, v23);
      objc_msgSend_replaceObjectAtIndex_withObject_(v21, v25, a3, (uint64_t)v24);
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }

LABEL_18:
}

void sub_1A4C2B710(uint64_t a1, void *a2, uint64_t a3)
{
  id v50 = a2;
  isContiguousWithChatIteuint64_t m = objc_msgSend_isContiguousWithChatItem_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v5, (uint64_t)v50, v6);
  isAttachmentContiguousWithChatIteuint64_t m = objc_msgSend_isAttachmentContiguousWithChatItem_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v8, (uint64_t)v50, v9);
  int v14 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  if ((v14 - 1) >= 2) {
    unsigned int v15 = 0;
  }
  else {
    unsigned int v15 = 3;
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
    BOOL v16 = v14 == 3;
  }
  else {
    BOOL v16 = 1;
  }
  if (v16) {
    unsigned int v17 = 1;
  }
  else {
    unsigned int v17 = 2 * ((v14 - 1) < 2);
  }
  if (isContiguousWithChatItem) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v15;
  }
  int v19 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
  if ((v19 - 1) >= 2) {
    unsigned int v20 = 0;
  }
  else {
    unsigned int v20 = 3;
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)) {
    BOOL v21 = v19 == 3;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21) {
    unsigned int v22 = 1;
  }
  else {
    unsigned int v22 = 2 * ((v19 - 1) < 2);
  }
  if (isAttachmentContiguousWithChatItem) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = v20;
  }
  char isContiguousLoaded = objc_msgSend__isContiguousLoaded(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v11, v12, v13);
  uint64_t v28 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (isContiguousLoaded)
  {
    if (objc_msgSend_contiguousType(v28, v24, v25, v26) != v18
      || objc_msgSend_attachmentContiguousType(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v29, v30, v31) != v23)
    {
      uint64_t v32 = objc_msgSend_copy(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v29, v30, v31);
      objc_msgSend__setContiguousType_(v32, v33, v18, v34);
      objc_msgSend__setAttachmentContiguousType_(v32, v35, v23, v36);
      objc_msgSend__setContiguousLoaded_(v32, v37, 1, v38);
      BOOL v39 = *(void **)(a1 + 32);
      uint64_t v42 = objc_msgSend_chatItemForIMChatItem_(*(void **)(a1 + 40), v40, (uint64_t)v32, v41);
      objc_msgSend_replaceObjectAtIndex_withObject_(v39, v43, a3 - 1, (uint64_t)v42);
    }
  }
  else
  {
    objc_msgSend__setContiguousType_(v28, v24, v18, v26);
    objc_msgSend__setAttachmentContiguousType_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v44, v23, v45);
    objc_msgSend__setContiguousLoaded_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v46, 1, v47);
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v18;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v23;
  uint64_t v48 = *(void *)(*(void *)(a1 + 48) + 8);
  int v49 = *(void **)(v48 + 40);
  *(void *)(v48 + 40) = v50;
}

void sub_1A4C2C20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C2C224(uint64_t a1, void *a2, uint64_t a3)
{
  id v20 = a2;
  uint64_t v8 = objc_msgSend__item(v20, v5, v6, v7);
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  uint64_t v13 = v20;
  if (isKindOfClass)
  {
    int v14 = objc_msgSend__item(v20, v10, v11, v12);
    if (objc_msgSend_isSuggestedActionResponse(v14, v15, v16, v17)) {
      objc_msgSend_addIndex_(*(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v18, a3, v19);
    }

    uint64_t v13 = v20;
  }
}

void sub_1A4C2C4B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1A4C2C4FC(void *a1, void *a2, uint64_t a3)
{
  id v52 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v8 = objc_msgSend__item(v52, v5, v6, v7);
    uint64_t v9 = *(void **)(*(void *)(a1[5] + 8) + 40);
    uint64_t v13 = objc_msgSend_pluginSessionGUID(v8, v10, v11, v12);
    LODWORD(v9) = objc_msgSend_containsObject_(v9, v14, (uint64_t)v13, v15);

    if (v9)
    {
      objc_msgSend_addIndex_(*(void **)(*(void *)(a1[6] + 8) + 40), v16, a3, v18);
    }
    else if (objc_msgSend_associatedMessageType(v8, v16, v17, v18) == 2)
    {
      unsigned int v22 = *(void **)(*(void *)(a1[5] + 8) + 40);
      uint64_t v23 = objc_msgSend_pluginSessionGUID(v8, v19, v20, v21);
      objc_msgSend_addObject_(v22, v24, (uint64_t)v23, v25);
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v26 = v52;
  }
  else {
    uint64_t v26 = 0;
  }
  id v27 = v26;
  uint64_t v31 = objc_msgSend_dataSource(*(void **)(*(void *)(a1[7] + 8) + 40), v28, v29, v30);
  uint64_t v35 = objc_msgSend_dataSource(v27, v32, v33, v34);
  int isEqual = objc_msgSend_isEqual_(v31, v36, (uint64_t)v35, v37);

  uint64_t v41 = 0;
  uint64_t v42 = *(void *)(a1[8] + 8);
  if (isEqual) {
    uint64_t v41 = *(void *)(v42 + 24) + 1;
  }
  *(void *)(v42 + 24) = v41;
  if (*(void *)(*(void *)(a1[8] + 8) + 24) < 3uLL)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
    uint64_t v47 = objc_msgSend_account(WeakRetained, v44, v45, v46);
    objc_msgSend_configureStatusTextWithAccount_(v27, v48, (uint64_t)v47, v49);
  }
  else
  {
    objc_msgSend_addIndex_(*(void **)(*(void *)(a1[6] + 8) + 40), v39, a3, v40);
  }
  uint64_t v50 = *(void *)(a1[7] + 8);
  __int16 v51 = *(void **)(v50 + 40);
  *(void *)(v50 + 40) = v27;
}

void sub_1A4C2CF64(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v26 = a1;
  uint64_t v16 = objc_msgSend__item(a2, v11, v12, v13);
  if (a3 < 1)
  {
    uint64_t v17 = 0;
LABEL_7:
    uint64_t v23 = [IMPhotoAttachmentStatusChatItem alloc];
    uint64_t v21 = objc_msgSend__initWithItem_numberOfPhotos_numberOfVideos_numberOfSavedAssets_(v23, v24, (uint64_t)v16, a4, a5, a6);
    objc_msgSend_insertObject_atIndex_(v26, v25, (uint64_t)v21, a3);
    goto LABEL_8;
  }
  uint64_t v17 = objc_msgSend_objectAtIndexedSubscript_(v26, v14, a3 - 1, v15);
  if (!v17) {
    goto LABEL_7;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_7;
  }
  if (objc_msgSend_wouldBeEqualIfInitializedWithItem_numberOfPhotos_numberOfVideos_numberOfSavedAssets_(v17, v18, (uint64_t)v16, a4, a5, a6))goto LABEL_9; {
  uint64_t v19 = [IMPhotoAttachmentStatusChatItem alloc];
  }
  uint64_t v21 = objc_msgSend__initWithItem_numberOfPhotos_numberOfVideos_numberOfSavedAssets_(v19, v20, (uint64_t)v16, a4, a5, a6);
  objc_msgSend_replaceObjectAtIndex_withObject_(v26, v22, a3 - 1, (uint64_t)v21);
LABEL_8:

LABEL_9:
}

void sub_1A4C2D0AC(void *a1, void *a2, void *a3, uint64_t *a4)
{
  v64[1] = *MEMORY[0x1E4F143B8];
  id v4 = a1;
  uint64_t v8 = objc_msgSend__item(v4, v5, v6, v7);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v12 = objc_msgSend_transferGUIDs(v4, v9, v10, v11);
  }
  else
  {
    uint64_t v13 = objc_msgSend_transferGUID(v4, v9, v10, v11);
    uint64_t v15 = (void *)v13;
    if (v13)
    {
      v64[0] = v13;
      uint64_t v12 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v14, (uint64_t)v64, 1);
    }
    else
    {
      uint64_t v12 = 0;
    }
  }
  uint64_t v54 = (void *)v8;
  uint64_t v58 = (uint64_t)v4;
  long long v61 = 0u;
  long long v62 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  id v16 = v12;
  uint64_t v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v59, (uint64_t)v63, 16);
  if (v18)
  {
    uint64_t v22 = v18;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = *(void *)v60;
    do
    {
      for (uint64_t i = 0; i != v22; ++i)
      {
        if (*(void *)v60 != v25) {
          objc_enumerationMutation(v16);
        }
        uint64_t v27 = *(void *)(*((void *)&v59 + 1) + 8 * i);
        uint64_t v28 = objc_msgSend_sharedInstance(IMFileTransferCenter, v19, v20, v21);
        uint64_t v31 = objc_msgSend_transferForGUID_(v28, v29, v27, v30);

        uint64_t v35 = objc_msgSend_filename(v31, v32, v33, v34);
        uint64_t v36 = IMUTITypeForFilename();

        if (IMUTITypeIsPhoto()) {
          ++v24;
        }
        else {
          v23 += IMUTITypeIsVideo();
        }
      }
      uint64_t v22 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v19, (uint64_t)&v59, (uint64_t)v63, 16);
    }
    while (v22);
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v24 = 0;
  }

  if (v24 | v23)
  {
    uint64_t v40 = v54;
    uint64_t v41 = objc_msgSend_message(v54, v37, v38, v39);
    uint64_t v42 = (void *)v58;
    uint64_t v44 = objc_msgSend_photosSyndicationIdentifiersForMessage_transcriptChatItem_(IMPhotoLibraryPersistenceManager, v43, (uint64_t)v41, v58);

    uint64_t v48 = objc_msgSend_sharedInstance(IMPhotoLibraryPersistenceManager, v45, v46, v47);
    __int16 v51 = objc_msgSend_setWithArray_(MEMORY[0x1E4F1CAD0], v49, (uint64_t)v44, v50);
    uint64_t v53 = objc_msgSend_cachedCountOfSyndicationIdentifiersSavedToSystemPhotoLibrary_shouldFetchAndNotifyAsNeeded_didStartFetch_(v48, v52, (uint64_t)v51, 1, 0);
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v42 = (void *)v58;
    uint64_t v40 = v54;
  }
  *a2 = v24;
  *a3 = v23;
  *a4 = v53;
}

void sub_1A4C2DF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
}

uint64_t sub_1A4C2DFE0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_transferForGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
}

void sub_1A4C2DFEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(a1 + 48))
  {
    id v9 = v3;
    BOOL v7 = objc_msgSend_commSafetySensitive(v3, v4, v5, v6) == 1;
    id v3 = v9;
    if (v7)
    {
      uint64_t v8 = 8;
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
        uint64_t v8 = 9;
      }
      *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v8;
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    }
  }
}

void sub_1A4C2E2E0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C2E30C(void *a1, void *a2, uint64_t a3)
{
  id v30 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v6 = v30;
  if (isKindOfClass)
  {
    id v7 = v30;
    if ((objc_msgSend_isEditedMessageHistory(v7, v8, v9, v10) & 1) == 0)
    {
      int v14 = objc_msgSend_guid(v7, v11, v12, v13);
      id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
      uint64_t isShowingEditHistoryForChatItemGUID = objc_msgSend_isShowingEditHistoryForChatItemGUID_(WeakRetained, v16, (uint64_t)v14, v17);

      if (isShowingEditHistoryForChatItemGUID != objc_msgSend_isShowingEditHistory(v7, v19, v20, v21))
      {
        objc_msgSend_addIndex_(*(void **)(*(void *)(a1[5] + 8) + 40), v22, a3, v23);
        IsShowingEditHistory = objc_msgSend_copyWithIsShowingEditHistory_(v7, v24, isShowingEditHistoryForChatItemGUID, v25);
        objc_msgSend_addObject_(*(void **)(*(void *)(a1[6] + 8) + 40), v27, (uint64_t)IsShowingEditHistory, v28);
      }
    }

    id v6 = v30;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v6);
}

void sub_1A4C2E760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C2E7BC(uint64_t a1, void *a2, uint64_t a3)
{
  id v73 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v6 = v73;
  if (isKindOfClass)
  {
    id v7 = v73;
    int isEditedMessagePart = objc_msgSend_isEditedMessagePart(v7, v8, v9, v10);
    int isReplyContextPreview = objc_msgSend_isReplyContextPreview(v7, v12, v13, v14);
    int isEditedMessageHistory = objc_msgSend_isEditedMessageHistory(v7, v16, v17, v18);
    if (objc_msgSend_scheduleType(v7, v20, v21, v22) == 2) {
      int isFailedRetractMessagePart = objc_msgSend_isFailedRetractMessagePart(v7, v23, v24, v25);
    }
    else {
      int isFailedRetractMessagePart = 0;
    }
    if ((((isEditedMessagePart | isFailedRetractMessagePart) ^ 1 | isReplyContextPreview | isEditedMessageHistory) & 1) == 0)
    {
      uint64_t v27 = a3 + 1;
      if (a3 + 1 >= (unint64_t)objc_msgSend_count(*(void **)(a1 + 32), v23, v24, v25))
      {
LABEL_14:
        uint64_t v40 = 0;
        uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else
      {
        while (1)
        {
          id v30 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v28, v27, v29);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            break;
          }
          id v31 = v30;
          unint64_t v35 = objc_msgSend_statusType(v31, v32, v33, v34);
          if (v35 <= 0x23 && ((1 << v35) & 0x9FFE00016) != 0)
          {
            uint64_t v40 = v35;

            goto LABEL_15;
          }

          if (++v27 >= (unint64_t)objc_msgSend_count(*(void **)(a1 + 32), v37, v38, v39)) {
            goto LABEL_14;
          }
        }
        uint64_t v40 = 0;
        uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_15:
      }
      if (v27 != 0x7FFFFFFFFFFFFFFFLL)
      {
        int isDeliveredStatusType = objc_msgSend_isDeliveredStatusType_(*(void **)(a1 + 40), v28, v40, v29);
        int StatusType = objc_msgSend_isReadStatusType_(*(void **)(a1 + 40), v42, v40, v43);
        int v47 = StatusType;
        if ((isDeliveredStatusType & 1) != 0 || StatusType)
        {
          unint64_t v48 = v27 + 1;
          if (v27 + 1 < (unint64_t)objc_msgSend_count(*(void **)(a1 + 32), v28, v45, v46))
          {
            do
            {
              uint64_t v50 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v28, v48, v49);
              isDeliveredStatusIteuint64_t m = objc_msgSend_isDeliveredStatusItem_(*(void **)(a1 + 40), v51, (uint64_t)v50, v52);
              StatusIteuint64_t m = objc_msgSend_isReadStatusItem_(*(void **)(a1 + 40), v54, (uint64_t)v50, v55);
              if (isDeliveredStatusType)
              {
                if (isDeliveredStatusItem | StatusItem) {
                  uint64_t v57 = 0;
                }
                else {
                  uint64_t v57 = v40;
                }
                if ((((isDeliveredStatusItem | StatusItem) | v47 ^ 1) & 1) == 0)
                {
LABEL_27:
                  if (StatusItem) {
                    uint64_t v40 = 0;
                  }
                  goto LABEL_29;
                }
                uint64_t v40 = v57;
              }
              else if (v47)
              {
                goto LABEL_27;
              }
LABEL_29:

              ++v48;
            }
            while (v48 < objc_msgSend_count(*(void **)(a1 + 32), v58, v59, v60));
          }
        }
      }
      uint64_t v64 = objc_msgSend__editedStatusItemForEditedMessagePartChatItem_combiningStatusType_(*(void **)(a1 + 40), v28, (uint64_t)v7, v40);
      if (v64)
      {
        if (v27 == 0x7FFFFFFFFFFFFFFFLL)
        {
          long long v65 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
          uint64_t v66 = objc_msgSend_count(v65, v61, v62, v63);
          objc_msgSend_addIndex_(v65, v67, a3 + v66 + 1, v68);
          uint64_t v71 = *(void *)(a1 + 72);
        }
        else
        {
          objc_msgSend_addIndex_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v61, v27, v63);
          uint64_t v71 = *(void *)(a1 + 56);
        }
        objc_msgSend_addObject_(*(void **)(*(void *)(v71 + 8) + 40), v69, (uint64_t)v64, v70);
      }
    }
    id v6 = v73;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v6);
}

void sub_1A4C2EEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A4C2EEFC(uint64_t a1, void *a2, unint64_t a3)
{
  id v46 = a2;
  if (objc_msgSend_count(*(void **)(a1 + 32), v5, v6, v7) - 1 <= a3)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v8, a3 + 1, v9);
  }
  uint64_t ItemIndexExcludingWatchReplyOptions = objc_msgSend__lastItemIndexExcludingWatchReplyOptions_(*(void **)(a1 + 40), v8, *(void *)(a1 + 32), v9);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && ItemIndexExcludingWatchReplyOptions == a3)
  {
    uint64_t v15 = objc_msgSend__item(v46, v12, v13, v14);
    int v19 = objc_msgSend_isFromMe(v15, v16, v17, v18);

    if (v19) {
      *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = a3;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0
      && (objc_msgSend_itemIsReplyContextPreview(v46, v20, v21, v22) & 1) == 0
      && (objc_msgSend_isEditedMessageHistory(v46, v23, v24, v25) & 1) == 0)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
      {
        uint64_t v29 = objc_msgSend_layoutGroupIdentifier(v10, v26, v28, v27);
        uint64_t v33 = objc_msgSend_layoutGroupIdentifier(v46, v30, v31, v32);
        BOOL v34 = v29 == v33;
      }
      else
      {
        BOOL v34 = 0;
      }
      uint64_t v37 = objc_msgSend__effectControlForChatItem_(*(void **)(a1 + 40), v26, (uint64_t)v46, v27);
      if (v37 && !v34)
      {
        objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v35, (uint64_t)v37, v36);
        uint64_t v38 = *(void *)(a1 + 56);
        uint64_t v39 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
        uint64_t v43 = objc_msgSend_count(*(void **)(*(void *)(v38 + 8) + 40), v40, v41, v42);
        objc_msgSend_addIndex_(v39, v44, v43 + a3, v45);
      }
    }
  }
}

uint64_t sub_1A4C2F1A8(uint64_t a1, void *a2, uint64_t a3)
{
  id v29 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v6 = v29;
  if (isKindOfClass)
  {
    id v7 = v29;
    uint64_t v11 = objc_msgSend__item(v7, v8, v9, v10);
    uint64_t v15 = objc_msgSend_guid(v11, v12, v13, v14);
    uint64_t v18 = objc_msgSend_countForObject_(*(void **)(a1 + 32), v16, (uint64_t)v15, v17);
    objc_msgSend_addObject_(*(void **)(a1 + 32), v19, (uint64_t)v15, v20);
    if (objc_msgSend_statusItemSequenceNumber(v7, v21, v22, v23) != v18)
    {
      id v26 = objc_msgSend_copyWithStatusItemSequenceNumber_(v7, v24, v18, v25);
      objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 40), v27, a3, (uint64_t)v26);
    }
    id v6 = v29;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v6);
}

void sub_1A4C2F40C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C2F424(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

uint64_t sub_1A4C2F75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return objc_msgSend_addIndex_(v8, v6, a3, v7);
  }
  return result;
}

void sub_1A4C2FA20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C2FA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return objc_msgSend_addIndex_(v8, v6, a3, v7);
  }
  return result;
}

void sub_1A4C2FA9C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (objc_opt_isKindOfClass())
  {
    id v6 = v5;
    uint64_t v10 = objc_msgSend_guid(v6, v7, v8, v9);
    if (objc_msgSend_isShowingEditHistoryForChatItemGUID_(*(void **)(a1 + 32), v11, (uint64_t)v10, v12))
    {
      id v16 = objc_msgSend_messageItem(v6, v13, v14, v15);
      uint64_t v20 = objc_msgSend_index(v6, v17, v18, v19);
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
      uint64_t v23 = objc_msgSend__historyToDisplayForMessageItem_partIndex_(WeakRetained, v22, (uint64_t)v16, v20);

      id v24 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      v42[0] = MEMORY[0x1E4F143A8];
      v42[1] = 3221225472;
      void v42[2] = sub_1A4C2FC48;
      v42[3] = &unk_1E5B7E770;
      id v44 = v24;
      uint64_t v45 = v20;
      id v43 = v16;
      id v25 = v24;
      id v26 = v16;
      objc_msgSend_enumerateObjectsUsingBlock_(v23, v27, (uint64_t)v42, v28);
      id v29 = *(void **)(a1 + 40);
      uint64_t v32 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v30, a3, v31);
      objc_msgSend_addObject_(v29, v33, (uint64_t)v32, v34);

      unint64_t v35 = *(void **)(a1 + 48);
      uint64_t v39 = objc_msgSend_copy(v25, v36, v37, v38);
      objc_msgSend_addObject_(v35, v40, (uint64_t)v39, v41);
    }
  }
}

void sub_1A4C2FC48(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [IMEditedTextMessagePartHistoricalContentChatItem alloc];
  id v10 = (id)objc_msgSend__initWithMessageItem_messagePartIndex_historicalContent_editIndex_messagePartRange_subject_(v6, v7, *(void *)(a1 + 32), *(void *)(a1 + 48), v5, a3, 0, 0, 0);

  objc_msgSend_addObject_(*(void **)(a1 + 40), v8, (uint64_t)v10, v9);
}

void sub_1A4C2FCDC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = objc_msgSend_unsignedIntegerValue(a2, (const char *)a2, a3, a4);
  uint64_t v9 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), v7, a3, v8);
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = sub_1A4C2FD9C;
  v11[3] = &unk_1E5B7E7C0;
  id v12 = *(id *)(a1 + 40);
  uint64_t v13 = v6;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(v9, v10, 2, (uint64_t)v11);
}

uint64_t sub_1A4C2FD9C(uint64_t a1, const char *a2)
{
  return objc_msgSend_insertObject_atIndex_(*(void **)(a1 + 32), a2, (uint64_t)a2, *(void *)(a1 + 40));
}

id sub_1A4C2FFE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  id v4 = objc_msgSend_participantsWithState_(WeakRetained, v2, 16, v3);
  uint64_t v8 = objc_msgSend_firstObject(v4, v5, v6, v7);

  uint64_t v9 = [IMSatelliteAvailabilityChatItem alloc];
  id v12 = objc_msgSend__initWithHandle_(v9, v10, (uint64_t)v8, v11);

  return v12;
}

id sub_1A4C30228(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  id v4 = objc_msgSend_participantsWithState_(WeakRetained, v2, 16, v3);
  uint64_t v8 = objc_msgSend_firstObject(v4, v5, v6, v7);

  uint64_t v9 = [IMSatelliteSuppressedNotificationChatItem alloc];
  id v12 = objc_msgSend__initWithHandle_(v9, v10, (uint64_t)v8, v11);

  return v12;
}

uint64_t sub_1A4C3043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return objc_msgSend_addIndex_(v8, v6, a3, v7);
  }
  return result;
}

uint64_t sub_1A4C30924(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (objc_msgSend_type(v2, v3, v4, v5) || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = objc_msgSend_isFromMe(v2, v6, v7, v8) ^ 1;
  }

  return v9;
}

uint64_t sub_1A4C30988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return objc_msgSend_addIndex_(v8, v6, a3, v7);
  }
  return result;
}

void sub_1A4C30CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C30CE8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if (objc_opt_isKindOfClass())
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

id sub_1A4C30D64(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
  uint64_t isRecipientAbleToDowngradeToSMS = objc_msgSend_isRecipientAbleToDowngradeToSMS(WeakRetained, v3, v4, v5);

  id v7 = objc_loadWeakRetained((id *)(a1[4] + 8));
  id v10 = objc_msgSend_participantsWithState_(v7, v8, 16, v9);
  uint64_t v14 = objc_msgSend_firstObject(v10, v11, v12, v13);

  uint64_t v15 = [IMSMSFallbackStatusChatItem alloc];
  uint64_t v19 = objc_msgSend__item(*(void **)(*(void *)(a1[6] + 8) + 40), v16, v17, v18);
  canSMSReply = objc_msgSend__initWithItem_handle_previousServiceName_canSMSReply_(v15, v20, (uint64_t)v19, (uint64_t)v14, a1[5], isRecipientAbleToDowngradeToSMS);

  return canSMSReply;
}

void sub_1A4C31278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C312E0(uint64_t a1, void *a2, uint64_t a3)
{
  id v12 = a2;
  if (objc_opt_isKindOfClass())
  {
    unint64_t isKindOfClass = objc_msgSend_addIndex_(*(void **)(a1 + 32), v5, a3, v6);
    goto LABEL_5;
  }
  unint64_t isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    goto LABEL_5;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)
    && !*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    unint64_t isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass)
    {
      unint64_t isKindOfClass = objc_msgSend_statusType(v12, v8, (uint64_t)v12, v9);
      if (isKindOfClass <= 0x20)
      {
        if (((1 << isKindOfClass) & 0x6C0007A) != 0)
        {
          uint64_t v10 = *(void *)(a1 + 56);
        }
        else
        {
          if (((1 << isKindOfClass) & 0x1C0000004) == 0) {
            goto LABEL_5;
          }
          uint64_t v10 = *(void *)(a1 + 48);
        }
        *(unsigned char *)(*(void *)(v10 + 8) + 24) = 1;
      }
    }
  }
LABEL_5:

  return MEMORY[0x1F4181820](isKindOfClass);
}

uint64_t sub_1A4C313FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return objc_msgSend_addIndex_(v8, v6, a3, v7);
  }
  return result;
}

uint64_t sub_1A4C3160C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return objc_msgSend_addIndex_(v8, v6, a3, v7);
  }
  return result;
}

uint64_t sub_1A4C31810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return objc_msgSend_addIndex_(v8, v6, a3, v7);
  }
  return result;
}

uint64_t sub_1A4C31ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    return objc_msgSend_addIndex_(v8, v6, a3, v7);
  }
  return result;
}

void sub_1A4C31DF8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    uint64_t v9 = *(void **)(a1 + 32);
    objc_msgSend_addIndex_(v9, v7, a3, v8);
  }
}

void sub_1A4C3251C(uint64_t a1, void *a2, unint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a2;
  if (objc_msgSend_count(v5, v7, v8, v9) - 1 <= a3)
  {
    id v15 = 0;
  }
  else
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v10, a3 + 1, v11);
    id v15 = (id)objc_claimAutoreleasedReturnValue();
  }
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      objc_msgSend_addIndex_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v13, a3, v14);
    }
  }
}

void sub_1A4C325F4(uint64_t a1, void *a2, unint64_t a3)
{
  id v23 = a2;
  if (objc_msgSend_count(*(void **)(a1 + 32), v5, v6, v7) - 1 <= a3)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v8, a3 + 1, v9);
  }
  uint64_t v11 = objc_msgSend__attributionChatItemForChatItem_(*(void **)(a1 + 40), v8, (uint64_t)v23, v9);
  if (v11)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      if ((objc_msgSend_isEqual_(v10, v12, (uint64_t)v11, v13) & 1) == 0) {
        objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 32), v14, a3 + 1, (uint64_t)v11);
      }
    }
    else
    {
      objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v12, (uint64_t)v11, v13);
      uint64_t v15 = *(void *)(a1 + 48);
      id v16 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
      uint64_t v20 = objc_msgSend_count(*(void **)(*(void *)(v15 + 8) + 40), v17, v18, v19);
      objc_msgSend_addIndex_(v16, v21, v20 + a3, v22);
    }
  }
}

uint64_t sub_1A4C32718(uint64_t a1, void *a2, unint64_t a3)
{
  id v94 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v6 = v94;
  if (isKindOfClass)
  {
    id v7 = v94;
    uint64_t v93 = objc_msgSend_bundleID(v7, v8, v9, v10);
    uint64_t v14 = objc_msgSend__parentItem(v7, v11, v12, v13);
    uint64_t v18 = objc_msgSend_message(v14, v15, v16, v17);
    uint64_t v22 = objc_msgSend__imMessageItem(v18, v19, v20, v21);
    uint64_t CMMState = objc_msgSend_getCMMState(v22, v23, v24, v25);

    uint64_t v30 = objc_msgSend_attributionType(v7, v27, v28, v29);
    uint64_t v34 = objc_msgSend_attributionType(v7, v31, v32, v33);
    int isCommSafetySensitiveAttribution = objc_msgSend_isCommSafetySensitiveAttribution(v7, v35, v36, v37);
    uint64_t v42 = objc_msgSend_attributionType(v7, v39, v40, v41);
    uint64_t v46 = v42;
    if (CMMState) {
      BOOL v47 = 1;
    }
    else {
      BOOL v47 = v30 == 6;
    }
    if (v47 || v34 == 7) {
      char v49 = 1;
    }
    else {
      char v49 = isCommSafetySensitiveAttribution;
    }
    if (v42 == 10) {
      char v50 = 1;
    }
    else {
      char v50 = v49;
    }
    if (a3)
    {
      __int16 v51 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), v43, a3 - 1, v45);
    }
    else
    {
      __int16 v51 = 0;
    }
    if (objc_msgSend_count(*(void **)(a1 + 32), v43, v44, v45) - 1 <= a3)
    {
      uint64_t v92 = 0;
      if (v50) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v92 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), v52, a3 + 1, v53);
      if (v50) {
        goto LABEL_23;
      }
    }
    if ((objc_msgSend_containsObject_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v52, (uint64_t)v93, v53) & 1) != 0|| (objc_msgSend_sharedInstance(IMBalloonPluginAttributionController, v52, v54, v53), uint64_t v55 = objc_claimAutoreleasedReturnValue(), shouldShowAttributionForBundleID = objc_msgSend_shouldShowAttributionForBundleID_(v55, v56, (uint64_t)v93, v57), v55, (shouldShowAttributionForBundleID & 1) == 0))
    {
      objc_msgSend_addIndex_(*(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v52, a3, v53);
      goto LABEL_29;
    }
LABEL_23:
    if (!isCommSafetySensitiveAttribution)
    {
      if (v30 == 6 || v34 == 7 || v46 == 10)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          long long v75 = v51;
        }
        else {
          long long v75 = 0;
        }
        id v76 = v75;
        objc_opt_class();
        uint64_t v70 = (void *)v92;
        if (objc_opt_isKindOfClass()) {
          uint64_t v77 = (void *)v92;
        }
        else {
          uint64_t v77 = 0;
        }
        id v78 = v77;
        if (objc_msgSend_requiresSiriAttribution(v76, v79, v80, v81)
          && objc_msgSend_requiresSiriAttribution(v78, v82, v83, v84)
          && (objc_msgSend_isContiguousWithChatItem_(v76, v82, (uint64_t)v78, v84) & 1) != 0
          || objc_msgSend_requiresFaceTimeAttribution(v76, v82, v83, v84)
          && objc_msgSend_requiresFaceTimeAttribution(v78, v82, v85, v84)
          && (objc_msgSend_isContiguousWithChatItem_(v76, v82, (uint64_t)v78, v84) & 1) != 0
          || objc_msgSend_requiresCriticalMessagingAPIAttribution(v76, v82, v85, v84)
          && objc_msgSend_requiresFaceTimeAttribution(v78, v86, v87, v88)
          && objc_msgSend_isContiguousWithChatItem_(v76, v89, (uint64_t)v78, v90))
        {
          objc_msgSend_addIndex_(*(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v82, a3, v84);
        }
      }
      else
      {
        uint64_t v70 = (void *)v92;
        if ((objc_msgSend_containsString_(v93, v52, *MEMORY[0x1E4F6CC18], v53) & 1) == 0
          && (objc_msgSend_containsString_(v93, v71, *MEMORY[0x1E4F6CC00], v72) & 1) == 0
          && v93)
        {
          objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v73, (uint64_t)v93, v74);
        }
      }
      goto LABEL_30;
    }
    uint64_t v59 = objc_msgSend__attributionChatItemForChatItem_(*(void **)(a1 + 40), v52, (uint64_t)v51, v53);
    if (!objc_msgSend_isCommSafetySensitiveAttribution(v59, v60, v61, v62)
      || (uint64_t v66 = objc_msgSend_attributionType(v59, v63, v64, v65), v66 != objc_msgSend_attributionType(v7, v67, v68, v69)))
    {
      objc_msgSend_addIndex_(*(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v63, a3, v65);
    }

LABEL_29:
    uint64_t v70 = (void *)v92;
LABEL_30:

    id v6 = v94;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v6);
}

void sub_1A4C32AA8(uint64_t a1, void *a2, unint64_t a3)
{
  id v14 = a2;
  if (a3)
  {
    uint64_t v8 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v5, a3 - 1, v7);
  }
  else
  {
    uint64_t v8 = 0;
  }
  if (objc_msgSend_count(*(void **)(a1 + 32), v5, v6, v7) - 1 <= a3)
  {
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v9, a3 + 1, v10);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass())) {
      objc_msgSend_addIndex_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v12, a3, v13);
    }
  }
}

uint64_t sub_1A4C32BBC(uint64_t a1, void *a2, uint64_t a3)
{
  id v111 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v6 = v111;
  if (isKindOfClass)
  {
    id v7 = v111;
    if (objc_msgSend_attributionType(v7, v8, v9, v10) != 6)
    {
      if (objc_msgSend_attributionType(v7, v11, v12, v13) == 10)
      {
        uint64_t v15 = [IMMessageAttributionChatItem alloc];
        uint64_t v19 = objc_msgSend__item(v7, v16, v17, v18);
        id v23 = objc_msgSend_attributionInfo(v7, v20, v21, v22);
        uint64_t v27 = objc_msgSend_attributionType(v7, v24, v25, v26);
        uint64_t v29 = objc_msgSend__initWithItem_attributionInfo_attributionType_showsLearnMoreLink_statusItemSequenceNumber_(v15, v28, (uint64_t)v19, (uint64_t)v23, v27, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), 0);

        objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 32), v30, a3, (uint64_t)v29);
      }
      goto LABEL_22;
    }
    if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
    {
LABEL_15:
      int v59 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      if (v59 != objc_msgSend_showsLearnMoreLink(v7, v11, v12, v13))
      {
        uint64_t v60 = [IMMessageAttributionChatItem alloc];
        uint64_t v64 = objc_msgSend__item(v7, v61, v62, v63);
        uint64_t v68 = objc_msgSend_attributionInfo(v7, v65, v66, v67);
        uint64_t v72 = objc_msgSend_attributionType(v7, v69, v70, v71);
        uint64_t v74 = objc_msgSend__initWithItem_attributionInfo_attributionType_showsLearnMoreLink_statusItemSequenceNumber_(v60, v73, (uint64_t)v64, (uint64_t)v68, v72, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), 0);

        objc_msgSend_replaceObjectAtIndex_withObject_(*(void **)(a1 + 32), v75, a3, (uint64_t)v74);
        uint64_t v79 = objc_msgSend__item(v74, v76, v77, v78);
        uint64_t v83 = objc_msgSend_guid(v79, v80, v81, v82);

        uint64_t v87 = objc_msgSend_standardUserDefaults(MEMORY[0x1E4F1CB18], v84, v85, v86);
        uint64_t v90 = objc_msgSend_objectForKey_(v87, v88, @"SentWithSiriLearningLinkShownForMessageGUIDs", v89);

        if ((objc_msgSend_containsObject_(v90, v91, (uint64_t)v83, v92) & 1) == 0)
        {
          id v93 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
          uint64_t v96 = v93;
          if (v90) {
            objc_msgSend_addObjectsFromArray_(v93, v94, (uint64_t)v90, v95);
          }
          objc_msgSend_addObject_(v96, v94, (uint64_t)v83, v95);
          uint64_t v100 = objc_msgSend_standardUserDefaults(MEMORY[0x1E4F1CB18], v97, v98, v99);
          uint64_t v104 = objc_msgSend_copy(v96, v101, v102, v103);
          objc_msgSend_setObject_forKey_(v100, v105, (uint64_t)v104, @"SentWithSiriLearningLinkShownForMessageGUIDs");
        }
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
LABEL_22:

      id v6 = v111;
      goto LABEL_23;
    }
    id v14 = v7;
    if (IMIsRunningInUnitTesting())
    {
LABEL_5:

      goto LABEL_15;
    }
    if (IMIsRunningInMobileSMS())
    {
      uint64_t v34 = objc_msgSend__item(v14, v31, v32, v33);
      uint64_t v38 = objc_msgSend_guid(v34, v35, v36, v37);

      uint64_t v42 = objc_msgSend_standardUserDefaults(MEMORY[0x1E4F1CB18], v39, v40, v41);
      uint64_t v45 = objc_msgSend_objectForKey_(v42, v43, @"SentWithSiriLearningLinkShownForMessageGUIDs", v44);

      char v49 = objc_msgSend_lastObject(v45, v46, v47, v48);
      int isEqualToString = objc_msgSend_isEqualToString_(v49, v50, (uint64_t)v38, v51);

      if (isEqualToString)
      {

        goto LABEL_5;
      }
      if ((unint64_t)objc_msgSend_count(v45, v53, v54, v55) < 5)
      {
        uint64_t v106 = objc_msgSend_standardUserDefaults(MEMORY[0x1E4F1CB18], v56, v57, v58);
        uint64_t v109 = objc_msgSend_integerForKey_(v106, v107, @"SentWithSiriLearningUIShownNumberOfTimes", v108);

        if (v109 <= 1) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
    }
LABEL_14:
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    goto LABEL_15;
  }
LABEL_23:

  return MEMORY[0x1F41817F8](isKindOfClass, v6);
}

uint64_t sub_1A4C33C18(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  uint64_t v9 = 0;
  uint64_t v10 = &v9;
  uint64_t v11 = 0x2020000000;
  char v12 = 0;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = sub_1A4C33CE8;
  v8[3] = &unk_1E5B7E830;
  void v8[4] = &v9;
  void v8[5] = a3;
  objc_msgSend_enumerateObjectsWithOptions_usingBlock_(v4, v5, 2, (uint64_t)v8);
  uint64_t v6 = *((unsigned __int8 *)v10 + 24);
  _Block_object_dispose(&v9, 8);

  return v6;
}

void sub_1A4C33CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C33CE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

uint64_t sub_1A4C34130()
{
  return 0;
}

uint64_t sub_1A4C34138()
{
  return 0;
}

id sub_1A4C34140(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_service(a1, a2, a3, a4);
  id v7 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v5, (uint64_t)v4, v6);

  return v7;
}

id sub_1A4C3419C(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (objc_msgSend_isFromMe(a1, a2, a3, a4)) {
    objc_msgSend__otherHandle(a1, v5, v6, v7);
  }
  else {
  uint64_t v8 = objc_msgSend__senderHandle(a1, v5, v6, v7);
  }

  return v8;
}

uint64_t sub_1A4C341F0()
{
  return 1;
}

id sub_1A4C341F8(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (objc_msgSend_wasDowngraded(a1, a2, a3, a4))
  {
    uint64_t v8 = objc_msgSend_originalServiceName(a1, v5, v6, v7);
    uint64_t v9 = (void *)v8;
    uint64_t v10 = (void *)*MEMORY[0x1E4F6E1B0];
    if (v8) {
      uint64_t v10 = (void *)v8;
    }
    id v11 = v10;

    id v14 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v12, (uint64_t)v11, v13);
  }
  else
  {
    id v14 = 0;
  }

  return v14;
}

uint64_t sub_1A4C34288()
{
  return 1;
}

uint64_t sub_1A4C34290(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB3F2270 != -1) {
    dispatch_once(&qword_1EB3F2270, &unk_1EF8E6708);
  }
  if (byte_1EB3F1E90) {
    return objc_msgSend_isEmote(a1, a2, a3, a4) ^ 1;
  }
  else {
    return 1;
  }
}

uint64_t sub_1A4C342F8(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__newChatItemsWithChatContext_(a1, a2, 0, a4);
}

uint64_t sub_1A4C34300(void *a1, uint64_t a2, void *a3)
{
  uint64_t v147 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v8 = objc_msgSend_serviceType(v4, v5, v6, v7);
  int v12 = objc_msgSend_areSendersUnknown(v4, v9, v10, v11);
  uint64_t v16 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6C360], v13, v14, v15);
  if (!objc_msgSend_isInternalInstall(v16, v17, v18, v19))
  {
LABEL_10:

    goto LABEL_11;
  }
  int v20 = IMGetCachedDomainBoolForKey();

  if (!v20) {
    goto LABEL_11;
  }
  if (!objc_msgSend_isCorrupt(a1, v21, v22, v23))
  {
    uint64_t v28 = objc_msgSend_body(a1, v24, v25, v26);
    uint64_t v16 = objc_msgSend_string(v28, v29, v30, v31);

    if (objc_msgSend_isEqualToString_(v16, v32, @"internal_poison_chatitem_hang", v33))
    {
      if (IMOSLoggingEnabled())
      {
        char v141 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v141, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v141, OS_LOG_TYPE_INFO, "INTERNAL CHAT ITEM POISON PILL TEST DETECTED - Spinning", buf, 2u);
        }
      }
      while (1)
        sleep(1u);
    }
    if (objc_msgSend_isEqualToString_(v16, v34, @"internal_poison_chatitem_crash", v35))
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v142 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v142, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v142, OS_LOG_TYPE_INFO, "INTERNAL CHAT ITEM POISON PILL TEST DETECTED - Crashing", buf, 2u);
        }
      }
      abort();
    }
    goto LABEL_10;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v27 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, "IMItem is corrupt already, not crashing", buf, 2u);
    }
  }
LABEL_11:
  id v143 = 0;
  int isExtensibleMessageWithPluginPayload_chatContext = objc_msgSend_isExtensibleMessageWithPluginPayload_chatContext_(a1, v21, (uint64_t)&v143, (uint64_t)v4);
  id v37 = v143;
  if (objc_msgSend_isLocatingMessage(a1, v38, v39, v40))
  {
    uint64_t v44 = [IMLocatingChatItem alloc];
    uint64_t v47 = objc_msgSend__initWithItem_(v44, v45, (uint64_t)a1, v46);
LABEL_13:
    uint64_t v48 = v47;
    goto LABEL_30;
  }
  if ((objc_msgSend_isTypingMessage(a1, v41, v42, v43) & isExtensibleMessageWithPluginPayload_chatContext) != 1)
  {
    if (objc_msgSend_isTypingMessage(a1, v49, v50, v51))
    {
      uint64_t v61 = [IMTypingChatItem alloc];
      uint64_t v47 = objc_msgSend__initWithItem_(v61, v62, (uint64_t)a1, v63);
      goto LABEL_13;
    }
    if (qword_1EB3F2270 != -1) {
      dispatch_once(&qword_1EB3F2270, &unk_1EF8E6708);
    }
    if (byte_1EB3F1E90)
    {
      uint64_t v64 = objc_msgSend_message(a1, v58, v59, v60);
      int isEmote = objc_msgSend_isEmote(v64, v65, v66, v67);

      if (isEmote)
      {
        uint64_t v69 = [IMEmoteMessageChatItem alloc];
        uint64_t v47 = objc_msgSend__initWithItem_(v69, v70, (uint64_t)a1, v71);
        goto LABEL_13;
      }
    }
    if (!isExtensibleMessageWithPluginPayload_chatContext
      || (objc_msgSend_hasDataDetectorResults(a1, v58, v59, v60) & 1) != 0)
    {
      uint64_t v47 = objc_msgSend__newMessagePartsForMessageItem_chatContext_(IMMessagePartChatItem, v58, (uint64_t)a1, (uint64_t)v4);
      goto LABEL_13;
    }
    uint64_t v80 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v58, v78, v79);
    uint64_t v84 = objc_msgSend_pluginSessionGUID(v37, v81, v82, v83);
    uint64_t v88 = objc_msgSend_pluginBundleID(v37, v85, v86, v87);
    uint64_t v90 = objc_msgSend_existingDataSourceForMessageGUID_bundleID_(v80, v89, (uint64_t)v84, (uint64_t)v88);

    id v94 = objc_msgSend_guidOfLastMessageInSession(v90, v91, v92, v93);
    uint64_t v98 = objc_msgSend_guid(a1, v95, v96, v97);
    if (objc_msgSend_isEqualToString_(v98, v99, (uint64_t)v94, v100))
    {
      int isShowingLatestMessageAsBreadcrumb = objc_msgSend_isShowingLatestMessageAsBreadcrumb(v90, v101, v102, v103);

      if (isShowingLatestMessageAsBreadcrumb)
      {
        uint64_t v108 = [IMTranscriptPluginBreadcrumbChatItem alloc];
        uint64_t v112 = objc_msgSend_breadcrumbText(a1, v109, v110, v111);
        uint64_t v116 = objc_msgSend_string(v112, v113, v114, v115);
        uint64_t v48 = objc_msgSend__initWithItem_datasource_statusText_optionFlags_(v108, v117, (uint64_t)a1, (uint64_t)v90, v116, 0);

        goto LABEL_52;
      }
    }
    else
    {
    }
    __int16 v118 = objc_msgSend_pluginBundleID(v37, v105, v106, v107);
    id v119 = IMBalloonExtensionIDWithSuffix();
    int isEqualToString = objc_msgSend_isEqualToString_(v118, v120, (uint64_t)v119, v121);

    if (isEqualToString)
    {
      uint64_t HasKnownParticipants = objc_msgSend__newMessagePartsForMessageItem_chatContext_photosPluginPayload_(IMMessagePartChatItem, v123, (uint64_t)a1, (uint64_t)v4, v37);
    }
    else
    {
      if (!v37
        || (objc_msgSend_pluginBundleID(v37, v123, v124, v125),
            uint64_t v127 = objc_claimAutoreleasedReturnValue(),
            char v130 = objc_msgSend_isEqualToString_(v127, v128, *MEMORY[0x1E4F6CC10], v129),
            v127,
            (v130 & 1) != 0))
      {
        if (objc_msgSend_isDeviceActionMessage(a1, v123, v124, v125))
        {
          id v132 = objc_msgSend__singleChatItemForDeviceActionMessage_context_pluginPayload_(IMMessagePartChatItem, v131, (uint64_t)a1, (uint64_t)v4, v37);
          uint64_t v144 = v132;
          uint64_t v48 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v133, (uint64_t)&v144, 1);
        }
        else
        {
          if (IMOSLoggingEnabled())
          {
            uint64_t v134 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v134, OS_LOG_TYPE_INFO))
            {
              uint64_t v138 = objc_msgSend_pluginBundleID(v37, v135, v136, v137);
              *(_DWORD *)long long buf = 138412290;
              uint64_t v146 = v138;
              _os_log_impl(&dword_1A4AF7000, v134, OS_LOG_TYPE_INFO, "Failed to find plugin data source for identifier '%@'", buf, 0xCu);
            }
          }
          uint64_t v48 = 0;
        }
        goto LABEL_52;
      }
      uint64_t v139 = [IMTranscriptPluginChatItem alloc];
      uint64_t HasKnownParticipants = objc_msgSend__initWithItem_initialPayload_index_messagePartRange_parentChatHasKnownParticipants_(v139, v140, (uint64_t)a1, (uint64_t)v37, 0, 0, 0x7FFFFFFFFFFFFFFFLL, v12 ^ 1 | (v8 == 3));
    }
    uint64_t v48 = HasKnownParticipants;
LABEL_52:

    goto LABEL_30;
  }
  uint64_t v52 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v49, v50, v51);
  uint64_t v55 = objc_msgSend_dataSourceForPluginPayload_(v52, v53, (uint64_t)v37, v54);

  if (v55)
  {
    uint64_t v56 = [IMTypingPluginChatItem alloc];
    uint64_t v48 = objc_msgSend__initWithItem_dataSource_(v56, v57, (uint64_t)a1, (uint64_t)v55);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v72 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v72, OS_LOG_TYPE_INFO))
      {
        id v76 = objc_msgSend_pluginBundleID(v37, v73, v74, v75);
        *(_DWORD *)long long buf = 138412290;
        uint64_t v146 = v76;
        _os_log_impl(&dword_1A4AF7000, v72, OS_LOG_TYPE_INFO, "Failed to find plugin data source for identifier '%@'", buf, 0xCu);
      }
    }
    uint64_t v48 = 0;
  }

LABEL_30:
  return v48;
}

id sub_1A4C34A40(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (!objc_msgSend_isPendingSatelliteSend(a1, a2, a3, a4)) {
    goto LABEL_15;
  }
  uint64_t v8 = objc_msgSend__senderHandle(a1, v5, v6, v7);
  int v12 = objc_msgSend_service(v8, v9, v10, v11);
  uint64_t v16 = objc_msgSend_iMessageService(IMService, v13, v14, v15);

  if (v12 == v16)
  {
    uint64_t v24 = objc_msgSend_iMessageLiteService(IMService, v5, v6, v7);
  }
  else
  {
LABEL_15:
    if (!objc_msgSend_wasDowngraded(a1, v5, v6, v7)) {
      goto LABEL_9;
    }
    uint64_t v23 = objc_msgSend_originalServiceName(a1, v17, v18, v19);
    if (v23)
    {
      uint64_t v24 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v20, (uint64_t)v23, v22);
    }
    else
    {
      uint64_t v25 = objc_msgSend_service(a1, v20, v21, v22);
      uint64_t v24 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v26, (uint64_t)v25, v27);
    }
    if (!v24)
    {
LABEL_9:
      uint64_t v28 = objc_msgSend__senderHandle(a1, v17, v18, v19);
      uint64_t v24 = objc_msgSend_service(v28, v29, v30, v31);
    }
  }

  return v24;
}

uint64_t sub_1A4C34B74(void *a1, const char *a2, uint64_t a3)
{
  return objc_msgSend_isExtensibleMessageWithPluginPayload_chatContext_(a1, a2, a3, 0);
}

uint64_t sub_1A4C34B7C(void *a1, uint64_t a2, IMPluginPayload **a3, void *a4)
{
  id v6 = a4;
  uint64_t v10 = objc_msgSend_balloonBundleID(a1, v7, v8, v9);
  if (objc_msgSend_length(v10, v11, v12, v13))
  {
    uint64_t v17 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v14, v15, v16);
    objc_msgSend_balloonPluginForBundleID_(v17, v18, (uint64_t)v10, v19);
    int v20 = (IMPluginPayload *)objc_claimAutoreleasedReturnValue();

    if (v20)
    {
      uint64_t v21 = objc_msgSend_retractedPartIndexes(a1, v14, v15, v16);
      if (objc_msgSend_count(v21, v22, v23, v24))
      {
        uint64_t v28 = objc_msgSend_payloadData(a1, v25, v26, v27);
        uint64_t v32 = objc_msgSend_length(v28, v29, v30, v31);

        if (!v32)
        {
          uint64_t v33 = 0;
LABEL_13:

          goto LABEL_14;
        }
      }
      else
      {
      }
      uint64_t v51 = [IMPluginPayload alloc];
      uint64_t v53 = (IMPluginPayload *) objc_msgSend_initWithMessageItem_chatContext_(v51, v52, (uint64_t)a1, (uint64_t)v6);
      *a3 = v53;

LABEL_12:
      uint64_t v33 = 1;
      goto LABEL_13;
    }
  }
  if (objc_msgSend_hasDataDetectorResults(a1, v14, v15, v16))
  {
    id v37 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v34, v35, v36);
    uint64_t v38 = *MEMORY[0x1E4F6CC10];
    uint64_t v41 = objc_msgSend_balloonPluginForBundleID_(v37, v39, *MEMORY[0x1E4F6CC10], v40);

    if (v41)
    {
      uint64_t v42 = objc_alloc_init(IMPluginPayload);
      uint64_t v46 = objc_msgSend_guid(a1, v43, v44, v45);
      objc_msgSend_setMessageGUID_(v42, v47, (uint64_t)v46, v48);

      objc_msgSend_setPluginBundleID_(v42, v49, v38, v50);
      int v20 = v42;
      *a3 = v20;
      goto LABEL_12;
    }
  }
  uint64_t v33 = 0;
LABEL_14:

  return v33;
}

uint64_t sub_1A4C34D24(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [IMParticipantChangeChatItem alloc];
  uint64_t v9 = objc_msgSend__senderHandle(a1, v6, v7, v8);
  uint64_t v13 = objc_msgSend__otherHandle(a1, v10, v11, v12);
  uint64_t v15 = objc_msgSend__initWithItem_sender_otherHandle_context_(v5, v14, (uint64_t)a1, (uint64_t)v9, v13, v4);

  return v15;
}

uint64_t sub_1A4C34DBC(void *a1)
{
  id v2 = [IMParticipantChangeChatItem alloc];
  id v6 = objc_msgSend__senderHandle(a1, v3, v4, v5);
  uint64_t v10 = objc_msgSend__otherHandle(a1, v7, v8, v9);
  uint64_t v12 = objc_msgSend__initWithItem_sender_otherHandle_(v2, v11, (uint64_t)a1, (uint64_t)v6, v10);

  return v12;
}

uint64_t sub_1A4C34E38(void *a1)
{
  id v2 = [IMGroupTitleChangeChatItem alloc];
  id v6 = objc_msgSend__senderHandle(a1, v3, v4, v5);
  uint64_t v8 = objc_msgSend__initWithItem_sender_(v2, v7, (uint64_t)a1, (uint64_t)v6);

  return v8;
}

uint64_t sub_1A4C34E9C(uint64_t a1)
{
  id v2 = [IMTranscriptSharingChatItem alloc];

  return objc_msgSend__initWithItem_(v2, v3, a1, v4);
}

uint64_t sub_1A4C34EDC(void *a1)
{
  id v2 = [IMLocationUpdateSentChatItem alloc];
  id v6 = objc_msgSend_sender(a1, v3, v4, v5);
  uint64_t v8 = objc_msgSend__initWithItem_chatIdentifier_(v2, v7, (uint64_t)a1, (uint64_t)v6);

  return v8;
}

uint64_t sub_1A4C34F40(void *a1)
{
  id v2 = [IMGroupActionChatItem alloc];
  id v6 = objc_msgSend__senderHandle(a1, v3, v4, v5);
  uint64_t v8 = objc_msgSend__initWithItem_sender_(v2, v7, (uint64_t)a1, (uint64_t)v6);

  return v8;
}

BOOL sub_1A4C34FA4(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_actionType(a1, a2, a3, a4) != 3;
}

BOOL sub_1A4C34FC4(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_direction(a1, a2, a3, a4) == 1 && objc_msgSend_status(a1, v5, v6, v7) == 0;
}

uint64_t sub_1A4C35008(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend__otherHandle(a1, a2, a3, a4);
  uint64_t v9 = objc_msgSend__senderHandle(a1, v6, v7, v8);
  if (objc_msgSend__hasMessageChatItem(a1, v10, v11, v12)
    && (objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v13, v14, v15),
        uint64_t v16 = objc_claimAutoreleasedReturnValue(),
        char isWaldoEnabled = objc_msgSend_isWaldoEnabled(v16, v17, v18, v19),
        v16,
        (isWaldoEnabled & 1) == 0))
  {
    uint64_t v24 = [IMLocationShareOfferChatItem alloc];
    if (v5) {
      uint64_t v23 = objc_msgSend__initWithItem_sender_(v24, v25, (uint64_t)a1, (uint64_t)v5);
    }
    else {
      uint64_t v23 = objc_msgSend__initWithItem_sender_(v24, v25, (uint64_t)a1, (uint64_t)v9);
    }
  }
  else
  {
    uint64_t v21 = [IMLocationShareActionChatItem alloc];
    uint64_t v23 = objc_msgSend__initWithItem_sender_otherHandle_(v21, v22, (uint64_t)a1, (uint64_t)v9, v5);
  }
  uint64_t v26 = v23;

  return v26;
}

uint64_t sub_1A4C350D0(void *a1)
{
  id v2 = [IMTUConversationChatItem alloc];
  uint64_t v6 = objc_msgSend__senderHandle(a1, v3, v4, v5);
  uint64_t v8 = objc_msgSend__initWithItem_conversationInitiator_(v2, v7, (uint64_t)a1, (uint64_t)v6);

  return v8;
}

uint64_t sub_1A4C35134()
{
  return 1;
}

uint64_t sub_1A4C3513C(void *a1)
{
  id v2 = [IMMessageActionChatItem alloc];
  uint64_t v6 = objc_msgSend__senderHandle(a1, v3, v4, v5);
  uint64_t v10 = objc_msgSend__otherHandle(a1, v7, v8, v9);
  uint64_t v12 = objc_msgSend__initWithItem_sender_otherHandle_(v2, v11, (uint64_t)a1, (uint64_t)v6, v10);

  return v12;
}

uint64_t sub_1A4C351B8(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__newChatItemsWithChatContext_(a1, a2, 0, a4);
}

uint64_t sub_1A4C351C0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v173 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v8 = objc_msgSend_serviceType(v4, v5, v6, v7);
  int v12 = objc_msgSend_areSendersUnknown(v4, v9, v10, v11);
  uint64_t v16 = objc_msgSend_associatedMessageType(a1, v13, v14, v15);
  if (v16 > 999)
  {
    if (v16 == 1000)
    {
      uint64_t v114 = objc_msgSend_fileTransferGUIDs(a1, v17, v18, v19);
      uint64_t v62 = objc_msgSend_firstObject(v114, v115, v116, v117);

      uint64_t v121 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v118, v119, v120);
      int isClingEnabled = objc_msgSend_isClingEnabled(v121, v122, v123, v124);

      if (isClingEnabled
        && objc_msgSend_isEmojiSticker(a1, v126, v127, v128)
        && (objc_msgSend_emojiSticker(a1, v129, v130, v131), (uint64_t v66 = objc_claimAutoreleasedReturnValue()) != 0))
      {
        id v132 = [IMEmojiStickerChatItem alloc];
        uint64_t v136 = objc_msgSend__senderHandle(a1, v133, v134, v135);
        uint64_t v52 = objc_msgSend__initWithItem_sender_transferGUID_emojiSticker_(v132, v137, (uint64_t)a1, (uint64_t)v136, v62, v66);
      }
      else
      {
        uint64_t v147 = [IMAssociatedStickerChatItem alloc];
        uint64_t v66 = objc_msgSend__senderHandle(a1, v148, v149, v150);
        uint64_t v52 = objc_msgSend__initWithItem_sender_transferGUID_(v147, v151, (uint64_t)a1, (uint64_t)v66, v62);
      }
    }
    else
    {
      if (v16 != 1001) {
        goto LABEL_17;
      }
      uint64_t v53 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v17, v18, v19);
      int v57 = objc_msgSend_isClingEnabled(v53, v54, v55, v56);

      if (!v57) {
        goto LABEL_23;
      }
      uint64_t v58 = [IMEmojiStickerChatItem alloc];
      uint64_t v62 = objc_msgSend__senderHandle(a1, v59, v60, v61);
      uint64_t v66 = objc_msgSend_fileTransferGUIDs(a1, v63, v64, v65);
      uint64_t v70 = objc_msgSend_firstObject(v66, v67, v68, v69);
      uint64_t v74 = objc_msgSend_emojiSticker(a1, v71, v72, v73);
      uint64_t v52 = objc_msgSend__initWithItem_sender_transferGUID_emojiSticker_(v58, v75, (uint64_t)a1, (uint64_t)v62, v70, v74);
    }
    goto LABEL_22;
  }
  if (v16 == 2)
  {
    id v76 = [IMPluginPayload alloc];
    uint64_t v79 = objc_msgSend_initWithMessageItem_(v76, v77, (uint64_t)a1, v78);
    uint64_t v83 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v80, v81, v82);
    uint64_t v86 = objc_msgSend_dataSourceForPluginPayload_(v83, v84, (uint64_t)v79, v85);

    uint64_t v90 = objc_msgSend_guidOfLastMessageInSession(v86, v87, v88, v89);
    id v94 = objc_msgSend_guid(a1, v91, v92, v93);
    if (objc_msgSend_isEqualToString_(v94, v95, (uint64_t)v90, v96))
    {
      int isShowingLatestMessageAsBreadcrumb = objc_msgSend_isShowingLatestMessageAsBreadcrumb(v86, v97, v98, v99);

      if (isShowingLatestMessageAsBreadcrumb)
      {
        uint64_t v104 = [IMTranscriptPluginBreadcrumbChatItem alloc];
        uint64_t v108 = objc_msgSend_breadcrumbText(a1, v105, v106, v107);
        uint64_t v112 = objc_msgSend_string(v108, v109, v110, v111);
        uint64_t v52 = objc_msgSend__initWithItem_datasource_statusText_optionFlags_(v104, v113, (uint64_t)a1, (uint64_t)v86, v112, 0);

LABEL_39:
        goto LABEL_40;
      }
    }
    else
    {
    }
    if (v86)
    {
      unsigned int v152 = v12 ^ 1;
      uint64_t v153 = objc_msgSend_messageID(a1, v101, v102, v103);
      if (v153 > objc_msgSend_messageIDOfLastMessageInSession(v86, v154, v155, v156)) {
        objc_msgSend_endShowingLastConsumedBreadcrumb(v86, v157, v158, v159);
      }
      uint64_t v160 = [IMTranscriptPluginChatItem alloc];
      if (v8 == 3) {
        uint64_t HasKnownParticipants = objc_msgSend__initWithItem_initialPayload_index_messagePartRange_parentChatHasKnownParticipants_(v160, v161, (uint64_t)a1, (uint64_t)v79, 0, 0, 0x7FFFFFFFFFFFFFFFLL, 1);
      }
      else {
        uint64_t HasKnownParticipants = objc_msgSend__initWithItem_initialPayload_index_messagePartRange_parentChatHasKnownParticipants_(v160, v161, (uint64_t)a1, (uint64_t)v79, 0, 0, 0x7FFFFFFFFFFFFFFFLL, v152);
      }
      uint64_t v52 = HasKnownParticipants;
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        double v163 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v163, OS_LOG_TYPE_INFO))
        {
          uint64_t v167 = objc_msgSend_pluginBundleID(v79, v164, v165, v166);
          LODWORD(buf) = 138412290;
          *(void *)((char *)&buf + 4) = v167;
          _os_log_impl(&dword_1A4AF7000, v163, OS_LOG_TYPE_INFO, "Failed to find plugin data source for identifier '%@'", (uint8_t *)&buf, 0xCu);
        }
      }
      uint64_t v52 = 0;
    }
    goto LABEL_39;
  }
  if (v16 != 3)
  {
LABEL_17:
    if ((v16 & 0xFFFFFFFFFFFFFFF8) == 0xBB8 || (v16 & 0xFFFFFFFFFFFFFFF8) == 0x7D0)
    {
      uint64_t v138 = [IMMessageAcknowledgmentChatItem alloc];
      uint64_t v62 = objc_msgSend__senderHandle(a1, v139, v140, v141);
      uint64_t v145 = objc_msgSend_tapback(a1, v142, v143, v144);
      uint64_t v52 = objc_msgSend__initWithItem_sender_tapback_(v138, v146, (uint64_t)a1, (uint64_t)v62, v145);

LABEL_22:
      goto LABEL_40;
    }
LABEL_23:
    uint64_t v52 = 0;
    goto LABEL_40;
  }
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v171 = 0x2020000000;
  uint64_t v172 = 0;
  int v20 = objc_msgSend_body(a1, v17, v18, v19);
  uint64_t v24 = objc_msgSend_body(a1, v21, v22, v23);
  uint64_t v28 = objc_msgSend_length(v24, v25, v26, v27);
  uint64_t v29 = *MEMORY[0x1E4F6C140];
  v169[0] = MEMORY[0x1E4F143A8];
  v169[1] = 3221225472;
  v169[2] = sub_1A4C357F0;
  v169[3] = &unk_1E5B7E3E0;
  v169[4] = &buf;
  objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(v20, v30, v29, 0, v28, 0, v169);

  if ((*(unsigned char *)(*((void *)&buf + 1) + 24) & 4) != 0)
  {
    uint64_t v52 = 0;
  }
  else
  {
    uint64_t v31 = [IMPluginPayload alloc];
    uint64_t v34 = objc_msgSend_initWithMessageItem_(v31, v32, (uint64_t)a1, v33);
    uint64_t v38 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v35, v36, v37);
    uint64_t v41 = objc_msgSend_dataSourceForPluginPayload_(v38, v39, (uint64_t)v34, v40);

    uint64_t v42 = [IMTranscriptPluginBreadcrumbChatItem alloc];
    uint64_t v46 = objc_msgSend_body(a1, v43, v44, v45);
    uint64_t v50 = objc_msgSend_string(v46, v47, v48, v49);
    uint64_t v52 = objc_msgSend__initWithItem_datasource_statusText_optionFlags_(v42, v51, (uint64_t)a1, (uint64_t)v41, v50, *(void *)(*((void *)&buf + 1) + 24));
  }
  _Block_object_dispose(&buf, 8);
LABEL_40:

  return v52;
}

void sub_1A4C357A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A4C35754);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4C357F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v10 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = (int)objc_msgSend_intValue(v10, v7, v8, v9);
    *a5 = 1;
  }
}

BOOL sub_1A4C35874(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return (objc_msgSend_associatedMessageType(a1, a2, a3, a4) & 0xFFFFFFFFFFFFFFFELL) == 2;
}

void sub_1A4C35EE0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = objc_msgSend_guid(a2, (const char *)a2, a3, (uint64_t)a4);
  LODWORD(v7) = objc_msgSend_isEqualToString_(v7, v9, (uint64_t)v8, v10);

  if (v7)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
}

uint64_t sub_1A4C35F58()
{
  uint64_t result = IMShouldShowEmotes();
  byte_1EB3F1E90 = result;
  return result;
}

uint64_t sub_1A4C35F78(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = v1;
    if (objc_msgSend_wasInterworked(v2, v3, v4, v5))
    {
      uint64_t v9 = objc_msgSend_originalServiceName(v2, v6, v7, v8);
      if (objc_msgSend_isEqualToString_(v9, v10, *MEMORY[0x1E4F6E198], v11))
      {
        uint64_t v15 = objc_msgSend_service(v2, v12, v13, v14);
        uint64_t isEqualToString = objc_msgSend_isEqualToString_(v15, v16, *MEMORY[0x1E4F6E1A0], v17);
      }
      else
      {
        uint64_t isEqualToString = 0;
      }
    }
    else
    {
      uint64_t isEqualToString = 0;
    }
  }
  else
  {
    uint64_t isEqualToString = 0;
  }

  return isEqualToString;
}

uint64_t sub_1A4C3604C(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = v1;
    if (objc_msgSend_isDelivered(v2, v3, v4, v5) & 1) != 0 || (objc_msgSend_wasDowngraded(v2, v6, v7, v8))
    {
      uint64_t isEqualToString = 0;
    }
    else
    {
      uint64_t v13 = objc_msgSend_service(v2, v9, v10, v11);
      uint64_t isEqualToString = objc_msgSend_isEqualToString_(v13, v14, *MEMORY[0x1E4F6E198], v15);
    }
  }
  else
  {
    uint64_t isEqualToString = 0;
  }

  return isEqualToString;
}

uint64_t sub_1A4C360F4(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (objc_msgSend_type(v2, v3, v4, v5))
  {
    char v6 = 0;
  }
  else
  {
    objc_opt_class();
    char v6 = objc_opt_isKindOfClass() ^ 1;
  }

  return v6 & 1;
}

void sub_1A4C3614C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  uint64_t v10 = objc_msgSend__item(v6, v7, v8, v9);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = v10;
    uint64_t v15 = objc_msgSend_time(v11, v12, v13, v14);
    if (objc_msgSend_compare_(v15, v16, *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v17) == -1)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v42 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
        {
          uint64_t v43 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
          int v52 = 138412546;
          uint64_t v53 = (uint64_t)v15;
          __int16 v54 = 2112;
          uint64_t v55 = v43;
          _os_log_impl(&dword_1A4AF7000, v42, OS_LOG_TYPE_INFO, "Message time %@ is outside urgent grace period start window %@", (uint8_t *)&v52, 0x16u);
        }
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
      *a4 = 1;
      goto LABEL_28;
    }
    if (objc_msgSend_isFromMe(v11, v18, v19, v20)
      && objc_msgSend_didNotifyRecipient(v11, v21, v22, v23))
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v24 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
        {
          LOWORD(v52) = 0;
          _os_log_impl(&dword_1A4AF7000, v24, OS_LOG_TYPE_INFO, "Found a recent message that broke through recipients dnd within the grace period window. Grace period is active.", (uint8_t *)&v52, 2u);
        }
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
      *a4 = 1;
      goto LABEL_28;
    }
    if (objc_msgSend_isFromMe(v11, v21, v22, v23))
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v31 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          uint64_t v35 = objc_msgSend_guid(v11, v32, v33, v34);
          int v52 = 138412802;
          uint64_t v53 = (uint64_t)v35;
          __int16 v54 = 2048;
          uint64_t v55 = objc_msgSend_isFromMe(v11, v36, v37, v38);
          __int16 v56 = 2048;
          uint64_t v57 = objc_msgSend_didNotifyRecipient(v11, v39, v40, v41);
          _os_log_impl(&dword_1A4AF7000, v31, OS_LOG_TYPE_INFO, "Message %@ did not impact grace period. isFromMe: %ld, didNotify: %ld", (uint8_t *)&v52, 0x20u);
        }
LABEL_27:
      }
    }
    else
    {
      uint64_t v44 = objc_msgSend_dateByAddingTimeInterval_(v15, v28, v29, v30, -*(double *)(a1 + 48));
      uint64_t v45 = *(void *)(*(void *)(a1 + 32) + 8);
      uint64_t v46 = *(void **)(v45 + 40);
      *(void *)(v45 + 40) = v44;

      objc_msgSend_timeIntervalSinceNow(*(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v47, v48, v49);
      double v51 = v50;
      if (IMOSLoggingEnabled())
      {
        uint64_t v31 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
        {
          int v52 = 134217984;
          uint64_t v53 = (uint64_t)(v51 / 60.0);
          _os_log_impl(&dword_1A4AF7000, v31, OS_LOG_TYPE_INFO, "Found a received message in the chat within the grace period window, extending grace period to %ld minutes.", (uint8_t *)&v52, 0xCu);
        }
        goto LABEL_27;
      }
    }
LABEL_28:

    goto LABEL_29;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v25 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      uint64_t v26 = (objc_class *)objc_opt_class();
      uint64_t v27 = NSStringFromClass(v26);
      int v52 = 138412290;
      uint64_t v53 = (uint64_t)v27;
      _os_log_impl(&dword_1A4AF7000, v25, OS_LOG_TYPE_INFO, "Item is not a message. Item class: %@", (uint8_t *)&v52, 0xCu);
    }
  }
LABEL_29:
}

BOOL sub_1A4C36580(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v9 = !objc_msgSend_type(v2, v3, v4, v5) && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
    || objc_msgSend_type(v2, v6, v7, v8) == 6;

  return v9;
}

uint64_t sub_1A4C365E8(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (objc_msgSend_type(v2, v3, v4, v5))
  {
    char v6 = 0;
  }
  else
  {
    objc_opt_class();
    char v6 = objc_opt_isKindOfClass() ^ 1;
  }

  return v6 & 1;
}

uint64_t sub_1A4C36640(void *a1)
{
  id v1 = a1;
  if (IMShouldHandleInternalPhishingAttempts())
  {
    uint64_t isReportJunkServiceAllowedForMessageItem_junkChatStyle = 1;
  }
  else
  {
    char v6 = objc_msgSend_lastFinishedMessageItem(v1, v2, v3, v4);
    uint64_t v10 = objc_msgSend_chatStyle(v1, v7, v8, v9);
    uint64_t isReportJunkServiceAllowedForMessageItem_junkChatStyle = objc_msgSend_isReportJunkServiceAllowedForMessageItem_junkChatStyle_(IMCarrierReportJunkHelper, v11, (uint64_t)v6, v10);
  }
  return isReportJunkServiceAllowedForMessageItem_junkChatStyle;
}

void sub_1A4C366BC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v17 = a2;
  if (objc_msgSend_type(v17, v6, v7, v8))
  {
    int v12 = 0;
  }
  else
  {
    int v12 = objc_msgSend_message(v17, v9, v10, v11);
    if (objc_msgSend_hasSurfRequestNotFromMe_(*(void **)(a1 + 32), v13, (uint64_t)v12, v14))
    {
      objc_msgSend_setHasSurfRequest_(*(void **)(a1 + 32), v15, 1, v16);
      *a4 = 1;
    }
  }
}

uint64_t sub_1A4C36754(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (objc_msgSend_type(v2, v3, v4, v5))
  {
    char v6 = 0;
  }
  else
  {
    objc_opt_class();
    char v6 = objc_opt_isKindOfClass() ^ 1;
  }

  return v6 & 1;
}

void sub_1A4C367AC(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x10D0], 8) = a1;
}

void sub_1A4C367C4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x16u);
}

uint64_t IMItemCompareSortIDs(void *a1, void *a2)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (!IMSharedHelperPinUnsentMessagesToBottom()) {
    goto LABEL_15;
  }
  if (!objc_msgSend_messageID(v3, v5, v6, v7) || !objc_msgSend_messageID(v4, v8, v9, v10))
  {
LABEL_12:
    uint64_t v24 = sub_1A4C36A1C(v3, v4);
LABEL_23:
    uint64_t v14 = v24;
    goto LABEL_25;
  }
  if ((sub_1A4C36A7C(v3, v4) & 1) == 0)
  {
    if ((objc_msgSend_unsentIsFromMeItem(v3, v11, v12, v13) & 1) != 0
      || objc_msgSend_unsentIsFromMeItem(v4, v15, v16, v17))
    {
      if (objc_msgSend_unsentIsFromMeItem(v3, v15, v16, v17)
        && !objc_msgSend_unsentIsFromMeItem(v4, v18, v19, v20))
      {
        uint64_t v14 = 1;
        goto LABEL_25;
      }
      if (objc_msgSend_unsentIsFromMeItem(v4, v18, v19, v20)
        && !objc_msgSend_unsentIsFromMeItem(v3, v21, v22, v23))
      {
        uint64_t v14 = -1;
        goto LABEL_25;
      }
      goto LABEL_12;
    }
    if (!objc_msgSend_sortID(v3, v15, v16, v17) || !objc_msgSend_sortID(v4, v25, v26, v27))
    {
      uint64_t v24 = Testing_IMItemOrderMessageByDate_0(v3, v4);
      goto LABEL_23;
    }
LABEL_15:
    uint64_t v28 = objc_msgSend_sortID(v3, v5, v6, v7);
    if (v28 != objc_msgSend_sortID(v4, v29, v30, v31))
    {
      unint64_t v39 = objc_msgSend_sortID(v3, v32, v33, v34) - 1;
      uint64_t v43 = objc_msgSend_sortID(v4, v40, v41, v42);
      uint64_t v14 = (__PAIR128__(v39 > v43 - 1, v39) - (unint64_t)(v43 - 1)) >> 64;
      goto LABEL_25;
    }
    if ((sub_1A4C36A7C(v3, v4) & 1) == 0
      && objc_msgSend_sortID(v3, v35, v36, v37)
      && IMOSLoggingEnabled())
    {
      uint64_t v38 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
      {
        int v45 = 138412546;
        id v46 = v3;
        __int16 v47 = 2112;
        id v48 = v4;
        _os_log_impl(&dword_1A4AF7000, v38, OS_LOG_TYPE_INFO, "We have items with the same sortID that have different guids item1 %@ item2 %@", (uint8_t *)&v45, 0x16u);
      }
    }
    uint64_t v24 = sub_1A4C36A1C(v3, v4);
    goto LABEL_23;
  }
  uint64_t v14 = 0;
LABEL_25:

  return v14;
}

uint64_t sub_1A4C36A1C(void *a1, void *a2)
{
  id v3 = a2;
  unint64_t v7 = objc_msgSend_messageID(a1, v4, v5, v6) - 1;
  uint64_t v11 = objc_msgSend_messageID(v3, v8, v9, v10);

  return (__PAIR128__(v7 > v11 - 1, v7) - (unint64_t)(v11 - 1)) >> 64;
}

uint64_t sub_1A4C36A7C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  Class = object_getClass(v3);
  if (Class == object_getClass(v4)) {
    uint64_t v6 = sub_1A4C36E04(v3, v4);
  }
  else {
    uint64_t v6 = 0;
  }

  return v6;
}

uint64_t Testing_IMItemOrderMessageByDate_0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!objc_msgSend_messageID(v3, v5, v6, v7) || !objc_msgSend_messageID(v4, v8, v9, v10)) {
    goto LABEL_8;
  }
  uint64_t v14 = objc_msgSend_time(v3, v11, v12, v13);
  uint64_t v18 = objc_msgSend_time(v4, v15, v16, v17);
  uint64_t v21 = objc_msgSend_compare_(v14, v19, (uint64_t)v18, v20);

  if (v21 == 1) {
    goto LABEL_9;
  }
  if (!v21)
  {
LABEL_8:
    uint64_t v21 = sub_1A4C36A1C(v3, v4);
    goto LABEL_9;
  }
  if (v21 != -1) {
    uint64_t v21 = 0;
  }
LABEL_9:

  return v21;
}

uint64_t _IMItemsControllerInsertionIndexForItem(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v8 = objc_msgSend_count(v3, v5, v6, v7);
  uint64_t v10 = objc_msgSend_indexOfObject_inSortedRange_options_usingComparator_(v3, v9, (uint64_t)v4, 0, v8, 1536, &unk_1EF8E56B8);

  if (v10 == 0x7FFFFFFFFFFFFFFFLL) {
    return -1;
  }
  else {
    return v10;
  }
}

uint64_t sub_1A4C36C30(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = sub_1A4C384D0(a2, a3, 0, 0);
  if (v3 == -1) {
    return -1;
  }
  else {
    return v3 == 1;
  }
}

uint64_t _IMItemsControllerIndexOfExistingItem(void *a1, void *a2, char a3)
{
  id v5 = a2;
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x2020000000;
  uint64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
  id v6 = a1;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = sub_1A4C36D78;
  uint64_t v12[3] = &unk_1E5B7E948;
  char v15 = a3;
  id v7 = v5;
  id v13 = v7;
  uint64_t v14 = &v16;
  objc_msgSend_enumerateObjectsUsingBlock_(v6, v8, (uint64_t)v12, v9);
  if (v17[3] == 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v10 = -1;
  }
  else {
    uint64_t v10 = v17[3];
  }

  _Block_object_dispose(&v16, 8);
  return v10;
}

void sub_1A4C36D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C36D78(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  uint64_t v8 = *(void **)(a1 + 32);
  id v9 = v7;
  if (*(unsigned char *)(a1 + 48))
  {
    if ((sub_1A4C36A7C(v8, v7) & 1) == 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (sub_1A4C36E04(v8, v7))
  {
LABEL_3:
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
LABEL_4:
}

uint64_t sub_1A4C36E04(void *a1, void *a2)
{
  id v3 = a1;
  id v7 = a2;
  if (v3 == v7) {
    goto LABEL_16;
  }
  int isTypingOrCancelTypingMessage = objc_msgSend_isTypingOrCancelTypingMessage(v3, v4, v5, v6);
  int v12 = objc_msgSend_isTypingOrCancelTypingMessage(v7, v9, v10, v11);
  if (!isTypingOrCancelTypingMessage || !v12)
  {
    if (qword_1E965E7D0 != -1) {
      dispatch_once(&qword_1E965E7D0, &unk_1EF8E42F0);
    }
    if (!byte_1E965E7C8) {
      goto LABEL_17;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_17;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_17;
    }
    uint64_t v24 = objc_msgSend_service(v3, v21, v22, v23);
    uint64_t v25 = (uint64_t *)MEMORY[0x1E4F6E1B8];
    if (objc_msgSend_isEqualToString_(v24, v26, *MEMORY[0x1E4F6E1B8], v27))
    {
    }
    else
    {
      uint64_t v31 = objc_msgSend_service(v7, v28, v29, v30);
      int isEqualToString = objc_msgSend_isEqualToString_(v31, v32, *v25, v33);

      if (!isEqualToString) {
        goto LABEL_17;
      }
    }
    id v35 = v3;
    id v36 = v7;
    uint64_t v40 = objc_msgSend_guid(v35, v37, v38, v39);
    uint64_t v44 = objc_msgSend_fallbackHash(v36, v41, v42, v43);
    if (objc_msgSend_isEqualToString_(v40, v45, (uint64_t)v44, v46))
    {

LABEL_16:
      uint64_t v20 = 1;
      goto LABEL_18;
    }
    double v50 = objc_msgSend_guid(v36, v47, v48, v49);
    __int16 v54 = objc_msgSend_fallbackHash(v35, v51, v52, v53);
    char v57 = objc_msgSend_isEqualToString_(v50, v55, (uint64_t)v54, v56);

    if (v57) {
      goto LABEL_16;
    }
LABEL_17:
    id v58 = v7;
    uint64_t v62 = objc_msgSend_guid(v3, v59, v60, v61);
    uint64_t v66 = objc_msgSend_guid(v58, v63, v64, v65);

    uint64_t v20 = objc_msgSend_isEqualToString_(v62, v67, (uint64_t)v66, v68);
    goto LABEL_18;
  }
  int v16 = objc_msgSend_isFromMe(v3, v13, v14, v15);
  uint64_t v20 = v16 ^ objc_msgSend_isFromMe(v7, v17, v18, v19) ^ 1;
LABEL_18:

  return v20;
}

void _IMItemsControllerHandleItem(void *a1, void *a2, void *a3, char a4, uint64_t a5, int a6)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v10 = a1;
  id v11 = a3;
  if (objc_msgSend_isMessageAcknowledgment(v11, v12, v13, v14))
  {
    id v32 = v10;
    id v15 = v11;
    if (IMOSLoggingEnabled())
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v15;
        _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "Insert associated item %@", (uint8_t *)&buf, 0xCu);
      }
    }
    uint64_t v20 = objc_msgSend_guid(v15, v16, v17, v18);
    uint64_t v24 = objc_msgSend_associatedMessageGUID(v15, v21, v22, v23);
    *(void *)&long long buf = MEMORY[0x1E4F143A8];
    *((void *)&buf + 1) = 3221225472;
    uint64_t v34 = sub_1A4C38304;
    id v35 = &unk_1E5B7E9B8;
    id v36 = v24;
    id v37 = v15;
    id v38 = v20;
    uint64_t v39 = a2;
    id v25 = v24;
    id v26 = v15;
    id v27 = v20;
    objc_msgSend_enumerateObjectsWithOptions_usingBlock_(a2, v28, 2, (uint64_t)&buf);
  }
  CFIndex v29 = _IMItemsControllerIndexOfExistingItem(a2, v11, a4);
  if (sub_1A4C3730C((const __CFArray *)a2, v29, v11))
  {
    if (v29 == -1 || !a6)
    {
      if (v29 == -1)
      {
        CFIndex v29 = _IMItemsControllerInsertionIndexForItem(a2, v11);
        uint64_t v30 = 0;
      }
      else
      {
        uint64_t v30 = CFArrayGetValueAtIndex((CFArrayRef)a2, v29);
        CFArrayRemoveValueAtIndex((CFMutableArrayRef)a2, v29);
        CFIndex v29 = _IMItemsControllerInsertionIndexForItem(a2, v11);
      }
    }
    else
    {
      uint64_t v30 = CFArrayGetValueAtIndex((CFArrayRef)a2, v29);
      CFArrayRemoveValueAtIndex((CFMutableArrayRef)a2, v29);
    }
    CFArrayInsertValueAtIndex((CFMutableArrayRef)a2, v29, v11);
    objc_msgSend__didReplaceItem_oldItem_idx_(v10, v31, (uint64_t)a2, (uint64_t)v30, v29);
  }
}

uint64_t sub_1A4C3730C(const __CFArray *a1, CFIndex a2, void *a3)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = a3;
  if (a2 == -1 || (uint64_t v6 = (id)CFArrayGetValueAtIndex(a1, a2)) == 0)
  {
    if (CFArrayGetCount(a1) < 1)
    {
      id v11 = 0;
    }
    else
    {
      id v7 = (id)CFArrayGetValueAtIndex(a1, 0);
      id v11 = v7;
      if (v7
        && objc_msgSend_messageID(v7, v8, v9, v10)
        && (objc_msgSend_unsentIsFromMeItem(v11, v12, v13, v14) & 1) == 0
        && IMItemCompareSortIDs(v5, v11) < 0)
      {
        if (IMOSLoggingEnabled())
        {
          id v15 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            int v53 = 138412546;
            __int16 v54 = v11;
            __int16 v55 = 2112;
            uint64_t v56 = v5;
            _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "We are not insert an item we want to firstItem: %@ item: %@", (uint8_t *)&v53, 0x16u);
          }
        }
        uint64_t v6 = 0;
        goto LABEL_34;
      }
    }

    uint64_t v6 = 0;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_43;
  }
  int v16 = v5;
  if ((!objc_msgSend_isTypingOrCancelTypingMessage(v16, v17, v18, v19)
     || (objc_msgSend_isFromMe(v16, v20, v21, v22) & 1) == 0)
    && (objc_msgSend_isSystemMessage(v16, v20, v21, v22) & 1) == 0
    && !objc_msgSend_isSuggestedActionResponse(v16, v23, v24, v25))
  {
    if (objc_msgSend_isTypingOrCancelTypingMessage(v16, v26, v27, v28))
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        if (objc_msgSend_isFinished(v6, v45, v46, v47))
        {
          if (!IMOSLoggingEnabled()) {
            goto LABEL_33;
          }
          CFIndex v29 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
          {
            objc_msgSend_guid(v16, v48, v49, v50);
            double v51 = (__CFString *)objc_claimAutoreleasedReturnValue();
            int v53 = 138412290;
            __int16 v54 = v51;
            _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "Rejecting a late typing indicator with GUID: %@", (uint8_t *)&v53, 0xCu);
          }
          goto LABEL_32;
        }
      }
    }

LABEL_43:
    uint64_t v44 = 1;
    goto LABEL_44;
  }
  if (IMOSLoggingEnabled())
  {
    CFIndex v29 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      if (objc_msgSend_isTypingOrCancelTypingMessage(v16, v30, v31, v32)) {
        id v36 = @"YES";
      }
      else {
        id v36 = @"NO";
      }
      int v37 = objc_msgSend_isFromMe(v16, v33, v34, v35);
      int isSystemMessage = objc_msgSend_isSystemMessage(v16, v38, v39, v40);
      if (v37) {
        uint64_t v42 = @"YES";
      }
      else {
        uint64_t v42 = @"NO";
      }
      int v53 = 138412802;
      if (isSystemMessage) {
        uint64_t v43 = @"YES";
      }
      else {
        uint64_t v43 = @"NO";
      }
      __int16 v54 = v36;
      __int16 v55 = 2112;
      uint64_t v56 = v42;
      __int16 v57 = 2112;
      id v58 = v43;
      _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "We are not insert an item we want to isTypingOrCancelTypingMessage %@ isFromMed %@ isSystemMessage %@", (uint8_t *)&v53, 0x20u);
    }
LABEL_32:
  }
LABEL_33:

LABEL_34:
  uint64_t v44 = 0;
LABEL_44:

  return v44;
}

void sub_1A4C37650(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C37550);
  }
  _Unwind_Resume(a1);
}

void _IMItemsControllerReplaceItems(void *a1, void *a2, void *a3)
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  id v8 = a1;
  if (a2)
  {
    id v9 = a2;
  }
  else
  {
    objc_msgSend_array(MEMORY[0x1E4F1C978], v5, v6, v7);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  uint64_t v13 = (uint64_t)v9;
  if (a3)
  {
    id v14 = a3;
  }
  else
  {
    objc_msgSend_array(MEMORY[0x1E4F1C978], v10, v11, v12);
    id v14 = (id)objc_claimAutoreleasedReturnValue();
  }
  uint64_t v42 = (void *)v13;
  int v16 = objc_msgSend_differenceFromArray_withOptions_usingEquivalenceTest_(v14, v15, v13, 0, &unk_1EF8E5BB8, v14);
  id v47 = 0;
  id v48 = 0;
  IMIndexesFromOrderedCollectionDifference(v16, &v48, &v47);
  id v17 = v48;
  id v18 = v47;
  uint64_t v21 = objc_msgSend_objectsAtIndexes_(a2, v19, (uint64_t)v18, v20);
  objc_msgSend_removeObjectsAtIndexes_(a2, v22, (uint64_t)v18, v23);
  id v26 = objc_msgSend_objectsAtIndexes_(a3, v24, (uint64_t)v17, v25);
  objc_msgSend_insertObjects_atIndexes_(a2, v27, (uint64_t)v26, (uint64_t)v17);

  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  id v28 = v21;
  uint64_t v30 = objc_msgSend_countByEnumeratingWithState_objects_count_(v28, v29, (uint64_t)&v43, (uint64_t)v49, 16);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = *(void *)v44;
    do
    {
      for (uint64_t i = 0; i != v31; ++i)
      {
        if (*(void *)v44 != v32) {
          objc_enumerationMutation(v28);
        }
        uint64_t v34 = *(void **)(*((void *)&v43 + 1) + 8 * i);
        if (_IMItemsControllerIndexOfExistingItem(a2, v34, 0) == -1
          && sub_1A4C3730C((const __CFArray *)a2, -1, v34))
        {
          CFIndex v36 = _IMItemsControllerInsertionIndexForItem(a2, v34);
          CFArrayInsertValueAtIndex((CFMutableArrayRef)a2, v36, v34);
        }
      }
      uint64_t v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v28, v35, (uint64_t)&v43, (uint64_t)v49, 16);
    }
    while (v31);
  }

  CFIndex Count = CFArrayGetCount((CFArrayRef)a2);
  if (Count)
  {
    CFIndex v38 = Count - 1;
    do
    {
      uint64_t v39 = CFArrayGetValueAtIndex((CFArrayRef)a2, v38);
      objc_msgSend__didReplaceItem_oldItem_idx_(v8, v40, (uint64_t)a2, (uint64_t)v39, v38);

      --v38;
    }
    while (v38 != -1);
  }
}

BOOL sub_1A4C3790C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  if (sub_1A4C36A7C(v4, v5)) {
    BOOL v6 = sub_1A4C384D0(v4, v5, 0, 1) == 0;
  }
  else {
    BOOL v6 = 0;
  }

  return v6;
}

uint64_t sub_1A4C37984(void *a1, void *a2, uint64_t a3)
{
  return sub_1A4C384D0(a1, a2, a3, 1);
}

void _IMItemsControllerSortItems(const __CFArray *a1)
{
  v2.length = CFArrayGetCount(a1);
  v2.NSUInteger location = 0;

  CFArraySortValues(a1, v2, (CFComparatorFunction)sub_1A4C37984, 0);
}

double _IMTypingMessageTimeout()
{
  uint64_t v0 = IMGetCachedDomainIntForKey();
  double result = (double)v0;
  if (!v0) {
    return 60.0;
  }
  return result;
}

id _IMItemsControllerGetTypingMessage(const __CFArray *a1)
{
  CFIndex Count = CFArrayGetCount(a1);
  if (Count < 1)
  {
LABEL_7:
    id v4 = 0;
  }
  else
  {
    CFIndex v3 = Count + 1;
    while (1)
    {
      id v4 = CFArrayGetValueAtIndex(a1, v3 - 2);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0
        && (objc_opt_respondsToSelector() & 1) != 0
        && (objc_msgSend_isTypingMessage(v4, v5, v6, v7) & 1) != 0)
      {
        break;
      }

      if ((unint64_t)--v3 <= 1) {
        goto LABEL_7;
      }
    }
  }

  return v4;
}

void sub_1A4C37C7C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if ((objc_msgSend_isCancelTypingMessage(*(void **)(a1 + 32), a2, a3, a4) & 1) != 0
    || objc_msgSend_expireState(*(void **)(a1 + 32), v5, v6, v7) == 2)
  {
    goto LABEL_3;
  }
  if (!objc_msgSend_isIncomingTypingMessage(*(void **)(a1 + 32), v8, v9, v10)) {
    goto LABEL_13;
  }
  int v16 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v13, v14, v15);
  objc_msgSend_timeIntervalSinceReferenceDate(v16, v17, v18, v19);
  double v21 = v20;
  uint64_t v25 = objc_msgSend_time(*(void **)(a1 + 32), v22, v23, v24);
  objc_msgSend_timeIntervalSinceReferenceDate(v25, v26, v27, v28);
  double v30 = v21 - v29;
  uint64_t v31 = IMGetCachedDomainIntForKey();
  double v32 = v31 ? (double)v31 : 60.0;

  if (v30 >= v32)
  {
LABEL_3:
    uint64_t v11 = *(__CFArray **)(a1 + 48);
    CFIndex v12 = *(void *)(a1 + 56);
    CFArrayRemoveValueAtIndex(v11, v12);
  }
  else
  {
LABEL_13:
    if (!*(void *)(a1 + 40)
      && (objc_msgSend_isFromMe(*(void **)(a1 + 32), v13, v14, v15) & 1) == 0
      && (objc_msgSend_isTypingOrCancelTypingMessage(*(void **)(a1 + 32), v33, v34, v35) & 1) == 0)
    {
      CFIndex v36 = _IMItemsControllerGetTypingMessage(*(const __CFArray **)(a1 + 48));
      if (v36)
      {
        CFArrayRef v37 = *(const __CFArray **)(a1 + 48);
        id value = v36;
        v41.length = CFArrayGetCount(v37);
        v41.NSUInteger location = 0;
        CFIndex LastIndexOfValue = CFArrayGetLastIndexOfValue(v37, v41, value);
        CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 48), LastIndexOfValue);
        CFIndex v36 = value;
      }
    }
  }
}

uint64_t sub_1A4C37E04()
{
  return 0;
}

uint64_t sub_1A4C37E0C()
{
  return 0;
}

uint64_t sub_1A4C37E14()
{
  return 0;
}

uint64_t sub_1A4C37E1C()
{
  return 0;
}

BOOL sub_1A4C37E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (a3 & 0x1000000005) == 0;
}

uint64_t sub_1A4C37E38(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if ((a3 & 0x1000800001) == 1) {
    return (a4 ^ 1) & (a3 >> 3);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A4C37E5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if ((a3 & 0x1000800001) == 1) {
    return (a4 ^ 1) & (a3 >> 3);
  }
  else {
    return (a3 & 0x1000800000) == 0;
  }
}

uint64_t sub_1A4C37E8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if ((a3 & 0x1000800005) == 1) {
    return (a4 ^ 1) & (a3 >> 3);
  }
  else {
    return (a3 & 0x1000800004) == 0;
  }
}

uint64_t sub_1A4C37EBC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = MEMORY[0x1E4F6E850];
  uint64_t v5 = objc_msgSend_flags(a1, a2, a3, a4);

  return MEMORY[0x1F4181798](v4, sel_isIncomingTypingMessage_, v5, v6);
}

uint64_t sub_1A4C37EFC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = MEMORY[0x1E4F6E850];
  uint64_t v6 = objc_msgSend_flags(a1, a2, a3, a4);
  uint64_t hasEditedParts = objc_msgSend_hasEditedParts(a1, v7, v8, v9);

  return MEMORY[0x1F4181798](v5, sel_isCancelTypingMessage_isEditedMessage_, v6, hasEditedParts);
}

uint64_t sub_1A4C37F58(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = MEMORY[0x1E4F6E850];
  uint64_t v6 = objc_msgSend_flags(a1, a2, a3, a4);
  uint64_t hasEditedParts = objc_msgSend_hasEditedParts(a1, v7, v8, v9);

  return MEMORY[0x1F4181798](v5, sel_isTypingOrCancelTypingMessage_isEditedMessage_, v6, hasEditedParts);
}

uint64_t sub_1A4C37FB4(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = MEMORY[0x1E4F6E850];
  uint64_t v6 = objc_msgSend_flags(a1, a2, a3, a4);
  uint64_t hasEditedParts = objc_msgSend_hasEditedParts(a1, v7, v8, v9);

  return MEMORY[0x1F4181798](v5, sel_isIncomingTypingOrCancelTypingMessage_isEditedMessage_, v6, hasEditedParts);
}

id sub_1A4C38010(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (objc_msgSend_associatedMessageType(a1, a2, a3, a4) == 3
    || objc_msgSend_associatedMessageType(a1, v5, v6, v7) == 2)
  {
    return 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)&off_1EF955D90;
  return objc_msgSendSuper2(&v9, sel_isIncomingTypingMessage);
}

id sub_1A4C38078(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (objc_msgSend_associatedMessageType(a1, a2, a3, a4) == 3
    || objc_msgSend_associatedMessageType(a1, v5, v6, v7) == 2)
  {
    return 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)&off_1EF955D90;
  return objc_msgSendSuper2(&v9, sel_isCancelTypingMessage);
}

id sub_1A4C380E0(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (objc_msgSend_associatedMessageType(a1, a2, a3, a4) == 3
    || objc_msgSend_associatedMessageType(a1, v5, v6, v7) == 2)
  {
    return 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)&off_1EF955D90;
  return objc_msgSendSuper2(&v9, sel_isTypingOrCancelTypingMessage);
}

id sub_1A4C38148(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (objc_msgSend_associatedMessageType(a1, a2, a3, a4) == 3
    || objc_msgSend_associatedMessageType(a1, v5, v6, v7) == 2)
  {
    return 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)&off_1EF955D90;
  return objc_msgSendSuper2(&v9, sel_isIncomingTypingOrCancelTypingMessage);
}

void sub_1A4C38304(uint64_t a1, void *a2, CFIndex a3)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  if (objc_msgSend_isMessageAcknowledgment(v5, v6, v7, v8))
  {
    CFIndex v12 = objc_msgSend_associatedMessageGUID(v5, v9, v10, v11);
    if (objc_msgSend_isEqualToString_(v12, v13, *(void *)(a1 + 32), v14))
    {
      if (objc_msgSend_isFromMe(*(void **)(a1 + 40), v15, v16, v17)
        && objc_msgSend_isFromMe(v5, v18, v19, v20))
      {

LABEL_8:
        if (IMOSLoggingEnabled())
        {
          double v29 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
          {
            int v37 = 134217984;
            CFIndex v38 = a3;
            _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "_IMItemsControllerInsertMessageAcknowledgment removed stray ack item at idx %lu", (uint8_t *)&v37, 0xCu);
          }
        }
        CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 56), a3);
        goto LABEL_16;
      }
      double v21 = objc_msgSend_sender(*(void **)(a1 + 40), v18, v19, v20);
      uint64_t v25 = objc_msgSend_sender(v5, v22, v23, v24);
      char isEqualToString = objc_msgSend_isEqualToString_(v21, v26, (uint64_t)v25, v27);

      if (isEqualToString) {
        goto LABEL_8;
      }
    }
    else
    {
    }
  }
  if (objc_msgSend_isTypingOrCancelTypingMessage(v5, v9, v10, v11))
  {
    uint64_t v33 = objc_msgSend_guid(v5, v30, v31, v32);
    int v36 = objc_msgSend_isEqualToString_(v33, v34, *(void *)(a1 + 48), v35);

    if (v36) {
      CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 56), a3);
    }
  }
LABEL_16:
}

uint64_t sub_1A4C384D0(void *a1, void *a2, uint64_t a3, int a4)
{
  id v6 = a1;
  id v7 = a2;
  uint64_t v11 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v8, v9, v10);
  int v15 = objc_msgSend_stewieEnabled(v11, v12, v13, v14);

  if (v15)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v16 = v6;
        id v17 = v7;
        if (objc_msgSend_isStewie(v16, v18, v19, v20)
          && objc_msgSend_isStewie(v17, v21, v22, v23))
        {
          id v24 = v16;
          id v25 = v17;
          double v29 = objc_msgSend_stewieConversationUUID(v24, v26, v27, v28);
          uint64_t v33 = objc_msgSend_stewieConversationUUID(v25, v30, v31, v32);
          int isEqual = objc_msgSend_isEqual_(v29, v34, (uint64_t)v33, v35);

          if (isEqual
            && (uint64_t v40 = objc_msgSend_stewieSequenceNumber(v24, v37, v38, v39),
                v40 != objc_msgSend_stewieSequenceNumber(v25, v41, v42, v43)))
          {
            uint64_t v70 = objc_msgSend_stewieSequenceNumber(v24, v44, v45, v46);
            BOOL v74 = v70 > objc_msgSend_stewieSequenceNumber(v25, v71, v72, v73);
            uint64_t v78 = objc_msgSend_stewieSequenceNumber(v24, v75, v76, v77);
            uint64_t v47 = v74 - (v78 < objc_msgSend_stewieSequenceNumber(v25, v79, v80, v81));
          }
          else
          {
            uint64_t v47 = Testing_IMItemOrderMessageByDate_0(v24, v25);
          }

          goto LABEL_25;
        }
      }
    }
  }
  if (a4) {
    uint64_t v48 = Testing_IMItemOrderMessageByDate_0(v6, v7);
  }
  else {
    uint64_t v48 = IMItemCompareSortIDs(v6, v7);
  }
  uint64_t v47 = v48;
  if (!v48)
  {
    uint64_t isIncomingTypingOrCancelTypingMessage = objc_msgSend_isIncomingTypingOrCancelTypingMessage(v6, v49, v50, v51);
    uint64_t v47 = isIncomingTypingOrCancelTypingMessage
        - objc_msgSend_isIncomingTypingOrCancelTypingMessage(v7, v53, v54, v55);
    if (!v47)
    {
      uint64_t v59 = objc_msgSend_consumedSessionPayloads(v6, v56, v57, v58);
      if (v59
        && (uint64_t v63 = (void *)v59,
            objc_msgSend_consumedSessionPayloads(v7, v60, v61, v62),
            uint64_t v64 = objc_claimAutoreleasedReturnValue(),
            v64,
            v63,
            !v64))
      {
        uint64_t v47 = 1;
      }
      else
      {
        uint64_t v65 = objc_msgSend_consumedSessionPayloads(v6, v60, v61, v62);
        if (v65)
        {

          uint64_t v47 = 0;
        }
        else
        {
          uint64_t v69 = objc_msgSend_consumedSessionPayloads(v7, v66, v67, v68);

          if (v69) {
            uint64_t v47 = -1;
          }
          else {
            uint64_t v47 = 0;
          }
        }
      }
    }
  }
LABEL_25:

  return v47;
}

void sub_1A4C38730(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], a2, a3, a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  byte_1E965E7C8 = objc_msgSend_isCarrierPigeonEnabled(v7, v4, v5, v6);
}

void sub_1A4C388BC()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F179C8]);
  objc_msgSend_aa_primaryAppleAccount(v0, v1, v2, v3);
  id v9 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v7 = objc_msgSend_aa_personID(v9, v4, v5, v6);
  uint64_t v8 = (void *)qword_1E965EA70;
  qword_1E965EA70 = v7;
}

void sub_1A4C38CE8(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v5 = a2;
  id v19 = (id)objc_opt_new();
  uint64_t v6 = objc_opt_new();
  uint64_t v10 = objc_msgSend_source(v19, v7, v8, v9);
  objc_msgSend_sendEvent_(v10, v11, (uint64_t)v5, v12);

  id v16 = objc_msgSend_source(v6, v13, v14, v15);
  objc_msgSend_sendEvent_(v16, v17, (uint64_t)v4, v18);
}

id sub_1A4C3951C()
{
  if (qword_1E965EA90 != -1) {
    dispatch_once(&qword_1E965EA90, &unk_1EF8E5E58);
  }
  id v0 = (void *)qword_1E965EA88;

  return v0;
}

uint64_t sub_1A4C395C4()
{
  id v0 = objc_alloc_init(IMCoreAccountsMonitor);
  uint64_t v1 = qword_1E965EA80;
  qword_1E965EA80 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C39724(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(*(void *)(a1 + 32) + 16))
  {
    id v5 = sub_1A4C3951C();
    uint64_t v9 = objc_msgSend_aa_primaryAppleAccount(v5, v6, v7, v8);
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = *(void **)(v10 + 16);
    *(void *)(v10 + 16) = v9;

    uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 16);
    uint64_t v13 = IMLogHandleForCategory();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      if (v14)
      {
        uint64_t v15 = *(void *)(*(void *)(a1 + 32) + 16);
        int v26 = 138412290;
        uint64_t v27 = v15;
        _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_DEFAULT, "Cache primary apple account: %@", (uint8_t *)&v26, 0xCu);
      }
    }
    else
    {
      if (v14)
      {
        LOWORD(v26) = 0;
        _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_DEFAULT, "No primary apple account", (uint8_t *)&v26, 2u);
      }

      uint64_t v19 = objc_msgSend_null(MEMORY[0x1E4F1CA98], v16, v17, v18);
      uint64_t v20 = *(void *)(a1 + 32);
      uint64_t v13 = *(NSObject **)(v20 + 16);
      *(void *)(v20 + 16) = v19;
    }
  }
  double v21 = *(void **)(*(void *)(a1 + 32) + 16);
  uint64_t v22 = objc_msgSend_null(MEMORY[0x1E4F1CA98], a2, a3, a4);
  if (objc_msgSend_isEqual_(v21, v23, (uint64_t)v22, v24)) {
    id v25 = 0;
  }
  else {
    id v25 = *(void **)(*(void *)(a1 + 32) + 16);
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v25);
}

void sub_1A4C39988(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 16))
  {
    uint64_t v2 = IMLogHandleForCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_DEFAULT, "ACDAccountStoreDidChangeNotification - Clearing cached primary apple account", v5, 2u);
    }

    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 16);
    *(void *)(v3 + 16) = 0;
  }
}

uint64_t sub_1A4C39A5C()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F179C8]);
  uint64_t v1 = qword_1E965EA88;
  qword_1E965EA88 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A4C39BE8()
{
  os_log_t v0 = os_log_create("com.apple.Messages", "IMRuntimeTest");
  uint64_t v1 = qword_1EB3F2310;
  qword_1EB3F2310 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C39D10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedInstance(IMDaemonController, a2, a3, a4);
  id v15 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = objc_msgSend_listener(v15, v5, v6, v7);
  uint64_t v12 = objc_msgSend_syncStats(*(void **)(a1 + 32), v9, v10, v11);
  objc_msgSend_didFetchSyncStateStats_(v8, v13, (uint64_t)v12, v14);
}

void sub_1A4C39F44(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedInstance(IMDaemonController, a2, a3, a4);
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = objc_msgSend_listener(v10, v5, v6, v7);
  objc_msgSend_didAttemptToSetEnabledTo_result_(v8, v9, *(unsigned __int8 *)(a1 + 32), 1);
}

void sub_1A4C3A4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C3A4E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v89 = *MEMORY[0x1E4F143B8];
  id v5 = objc_msgSend_cachedRecipientName(*(void **)(a1 + 32), a2, a3, a4);
  uint64_t v6 = (uint64_t *)(a1 + 40);
  int isEqualToString = objc_msgSend_isEqualToString_(v5, v7, *(void *)(a1 + 40), v8);

  if (isEqualToString)
  {
    uint64_t v13 = objc_msgSend_cachedRecipientDigest(*(void **)(a1 + 32), v10, v11, v12);
    uint64_t v17 = objc_msgSend_copy(v13, v14, v15, v16);
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v19 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v17;
  }
  uint64_t v20 = a1 + 48;
  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    double v21 = objc_msgSend_deviceSalt(*(void **)(a1 + 32), v10, v11, v12);

    if (v21)
    {
      CFStringRef v25 = *(const __CFString **)(a1 + 40);
      objc_msgSend_deviceSalt(*(void **)(a1 + 32), v22, v23, v24);
      CFDataRef v26 = (const __CFData *)objc_claimAutoreleasedReturnValue();
      if (v26)
      {
        memset(&c, 0, sizeof(c));
        CC_SHA1_Init(&c);
        CStringPtr = CFStringGetCStringPtr(v25, 0x8000100u);
        if (CStringPtr)
        {
          uint64_t v28 = CStringPtr;
          CC_LONG v29 = strlen(CStringPtr);
          CC_SHA1_Update(&c, v28, v29);
        }
        else
        {
          CFIndex Length = CFStringGetLength(v25);
          if (Length >= 1)
          {
            CFIndex v40 = Length;
            CFIndex v41 = 0;
            do
            {
              long long v87 = 0u;
              long long v88 = 0u;
              long long v85 = 0u;
              long long v86 = 0u;
              long long v83 = 0u;
              long long v84 = 0u;
              long long v81 = 0u;
              long long v82 = 0u;
              long long v79 = 0u;
              long long v80 = 0u;
              long long v77 = 0u;
              long long v78 = 0u;
              long long v75 = 0u;
              long long v76 = 0u;
              long long v73 = 0u;
              long long v74 = 0u;
              long long v71 = 0u;
              long long v72 = 0u;
              long long v69 = 0u;
              long long v70 = 0u;
              long long v67 = 0u;
              long long v68 = 0u;
              long long v65 = 0u;
              long long v66 = 0u;
              long long v63 = 0u;
              long long v64 = 0u;
              long long v61 = 0u;
              long long v62 = 0u;
              long long v59 = 0u;
              long long v60 = 0u;
              *(_OWORD *)buffer = 0u;
              long long v58 = 0u;
              CFIndex usedBufLen = 0;
              v90.NSUInteger location = v41;
              v90.length = v40;
              CFIndex Bytes = CFStringGetBytes(v25, v90, 0x8000100u, 0, 0, buffer, 512, &usedBufLen);
              CC_SHA1_Update(&c, buffer, usedBufLen);
              v41 += Bytes;
              BOOL v43 = v40 <= Bytes;
              v40 -= Bytes;
            }
            while (!v43);
          }
        }
        BytePtr = CFDataGetBytePtr(v26);
        CC_LONG v45 = CFDataGetLength(v26);
        CC_SHA1_Update(&c, BytePtr, v45);
        memset(buffer, 0, sizeof(buffer));
        LODWORD(v5_Block_object_dispose(&STACK[0x10D0], 8) = 0;
        CC_SHA1_Final(buffer, &c);
        Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 40);
        for (uint64_t i = 0; i != 20; ++i)
          CFStringAppendFormat(Mutable, 0, @"%x", buffer[i]);
      }
      else
      {
        Mutable = 0;
      }
      uint64_t v47 = *(void *)(*(void *)v20 + 8);
      uint64_t v48 = *(void **)(v47 + 40);
      *(void *)(v47 + 40) = Mutable;

      uint64_t v51 = *v6;
      if (!*v6 || !*(void *)(*(void *)(*(void *)v20 + 8) + 40))
      {
        uint64_t v52 = IMLogHandleForCategory();
        if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
          sub_1A4CB95D4(a1 + 48, (uint64_t *)(a1 + 40), v52);
        }

        uint64_t v51 = *v6;
      }
      objc_msgSend_setCachedRecipientName_(*(void **)(a1 + 32), v49, v51, v50);
      objc_msgSend_setCachedRecipientDigest_(*(void **)(a1 + 32), v53, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v54);
    }
    else
    {
      double v30 = IMLogHandleForCategory();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_1A4CB959C(v30, v31, v32, v33, v34, v35, v36, v37);
      }
    }
  }
}

void sub_1A4C3AB8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 48);
  IMSingleObjectArray();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v1, v3);
}

uint64_t sub_1A4C3B0E0(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1A4C3B32C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1A4C3B578(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1A4C3BAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F4181798](*(void *)(a1 + 32), sel_finishTest, a3, a4);
}

uint64_t IMRegisterForPreferredAccountChangeNotifications()
{
  if (qword_1E965E7E0 != -1) {
    dispatch_once(&qword_1E965E7E0, &unk_1EF8E5778);
  }
  return 1;
}

void sub_1A4C3BBB0()
{
  if (IMOSLoggingEnabled())
  {
    os_log_t v0 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1A4AF7000, v0, OS_LOG_TYPE_INFO, "Registering for preferred account changes", v12, 2u);
    }
  }
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  id v4 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v1, v2, v3);
  uint64_t v5 = *MEMORY[0x1E4F6C250];
  uint64_t v9 = objc_msgSend_mainQueue(MEMORY[0x1E4F28F08], v6, v7, v8);
  id v11 = (id)objc_msgSend_addObserverForName_object_queue_usingBlock_(v4, v10, v5, 0, v9, &unk_1EF8E3ED0);
}

void sub_1A4C3BCAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend___mainThreadPostNotificationName_object_(v5, v4, @"__kIMPreferredAccountForServiceChangedNotification", 0);
}

id IMOperationalAccountForService(void *a1)
{
  uint64_t v1 = IMPreferredAccountForService(a1);
  if (objc_msgSend__isUsableForSending(v1, v2, v3, v4)) {
    id v5 = v1;
  }
  else {
    id v5 = 0;
  }

  return v5;
}

id IMPreferredAccountForService(void *a1)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  uint64_t v2 = IMPreferredAccountMap();
  uint64_t v6 = objc_msgSend_internalName(v1, v3, v4, v5);
  uint64_t v9 = objc_msgSend_objectForKey_(v2, v7, (uint64_t)v6, v8);

  if (!objc_msgSend_count(v9, v10, v11, v12))
  {
LABEL_5:
    uint64_t v31 = objc_msgSend_sharedInstance(IMAccountController, v13, v14, v15);
    uint64_t v34 = objc_msgSend__bestOperationalAccountForSendingForService_(v31, v32, (uint64_t)v1, v33);

    if (v34)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v38 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
        {
          uint64_t v42 = objc_msgSend_uniqueID(v34, v39, v40, v41);
          int v52 = 138412546;
          id v53 = v1;
          __int16 v54 = 2112;
          uint64_t v55 = v42;
          _os_log_impl(&dword_1A4AF7000, v38, OS_LOG_TYPE_INFO, " Returning default best operational sending account for service: %@    account: %@", (uint8_t *)&v52, 0x16u);
        }
LABEL_13:
      }
    }
    else
    {
      BOOL v43 = objc_msgSend_sharedInstance(IMAccountController, v35, v36, v37);
      uint64_t v34 = objc_msgSend_bestAccountForService_(v43, v44, (uint64_t)v1, v45);

      if (IMOSLoggingEnabled())
      {
        uint64_t v38 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
        {
          uint64_t v49 = objc_msgSend_uniqueID(v34, v46, v47, v48);
          int v52 = 138412546;
          id v53 = v1;
          __int16 v54 = 2112;
          uint64_t v55 = v49;
          _os_log_impl(&dword_1A4AF7000, v38, OS_LOG_TYPE_INFO, " Returning default best account for service: %@    account: %@", (uint8_t *)&v52, 0x16u);
        }
        goto LABEL_13;
      }
    }
    id v16 = v34;
    uint64_t v23 = v16;
    goto LABEL_15;
  }
  objc_msgSend_objectForKey_(v9, v13, @"guid", v15);
  id v16 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v20 = objc_msgSend_sharedInstance(IMAccountController, v17, v18, v19);
  uint64_t v23 = objc_msgSend_accountForUniqueID_(v20, v21, (uint64_t)v16, v22);

  if (!objc_msgSend__isUsableForSending(v23, v24, v25, v26)
    || (objc_msgSend_service(v23, v27, v28, v29),
        id v30 = (id)objc_claimAutoreleasedReturnValue(),
        v30,
        v30 != v1))
  {

    goto LABEL_5;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v51 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v51, OS_LOG_TYPE_INFO))
    {
      int v52 = 138412546;
      id v53 = v1;
      __int16 v54 = 2112;
      uint64_t v55 = v23;
      _os_log_impl(&dword_1A4AF7000, v51, OS_LOG_TYPE_INFO, " Returning preferred sendable account for service: %@    account: %@", (uint8_t *)&v52, 0x16u);
    }
  }
LABEL_15:

  return v23;
}

uint64_t IMSetPreferredAccountForService(void *a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  if (v4)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v16 = 138412546;
        id v17 = v4;
        __int16 v18 = 2112;
        id v19 = v3;
        _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Updating preferred account for service: %@    account: %@", (uint8_t *)&v16, 0x16u);
      }
    }
    uint64_t v9 = objc_msgSend_internalName(v4, v5, v6, v7);
    uint64_t v13 = objc_msgSend_uniqueID(v3, v10, v11, v12);
    uint64_t v14 = IMUpdatePreferredAccountForService();
  }
  else
  {
    uint64_t v14 = 0;
  }

  return v14;
}

id IMFindExistingChatForAddresses(void *a1, void *a2, int a3, int a4)
{
  uint64_t v95 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  long long v75 = v5;
  if (!objc_msgSend_count(v5, v7, v8, v9))
  {
    id v71 = 0;
    goto LABEL_48;
  }
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  id v10 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v85 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  id v11 = v5;
  uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v12, (uint64_t)&v85, (uint64_t)v94, 16, v75);
  if (v13)
  {
    uint64_t v14 = *(void *)v86;
    do
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v86 != v14) {
          objc_enumerationMutation(v11);
        }
        id v16 = *(id *)(*((void *)&v85 + 1) + 8 * i);
        if (objc_msgSend__appearsToBePhoneNumber(v16, v17, v18, v19)) {
          IMInternationalForPhoneNumberWithOptions();
        }
        else {
        uint64_t v23 = objc_msgSend_lowercaseString(v16, v20, v21, v22);
        }

        if (objc_msgSend_length(v23, v24, v25, v26)) {
          objc_msgSend_addObject_(v10, v27, (uint64_t)v23, v28);
        }
      }
      uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v29, (uint64_t)&v85, (uint64_t)v94, 16);
    }
    while (v13);
  }

  long long v83 = 0u;
  long long v84 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  uint64_t v33 = objc_msgSend_sharedRegistry(IMChatRegistry, v30, v31, v32);
  objc_msgSend_allExistingChats(v33, v34, v35, v36);
  id obj = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v41 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v37, (uint64_t)&v81, (uint64_t)v93, 16);
  if (!v41)
  {
LABEL_35:

LABEL_42:
    if (IMOSLoggingEnabled())
    {
      long long v73 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v90 = v11;
        _os_log_impl(&dword_1A4AF7000, v73, OS_LOG_TYPE_INFO, "[IMFindExistingChatForAddresses] Did not find existing chat for addresses: %@", buf, 0xCu);
      }
    }
    id v71 = 0;
    goto LABEL_47;
  }
  uint64_t v79 = *(void *)v82;
  uint64_t v42 = &off_1E5B80000;
LABEL_16:
  uint64_t v43 = 0;
  uint64_t v76 = (uint64_t)v42[266];
  while (1)
  {
    if (*(void *)v82 != v79) {
      objc_enumerationMutation(obj);
    }
    long long v44 = *(void **)(*((void *)&v81 + 1) + 8 * v43);
    uint64_t v45 = objc_msgSend_displayName(v44, v38, v39, v40);
    if (objc_msgSend_isEqualToString_(v6, v46, (uint64_t)&stru_1EF8E78C8, v47))
    {

      id v6 = 0;
    }
    if (objc_msgSend_isEqualToString_(v45, v48, (uint64_t)&stru_1EF8E78C8, v49))
    {

      uint64_t v45 = 0;
    }
    if (objc_msgSend_joinState(v44, v50, v51, v52) == 3 || objc_msgSend_joinState(v44, v53, v54, v55) == 2)
    {
      BOOL v56 = 1;
      if (!v45) {
        goto LABEL_28;
      }
    }
    else
    {
      BOOL v56 = objc_msgSend_joinState(v44, v53, v54, v55) == 4;
      if (!v45)
      {
LABEL_28:
        int isEqualToString = v6 == 0;
        goto LABEL_29;
      }
    }
    int isEqualToString = objc_msgSend_isEqualToString_(v45, v53, (uint64_t)v6, v55);
LABEL_29:
    if ((isEqualToString & ((objc_msgSend_chatStyle(v44, v53, v54, v55) == 45) ^ a3)) != 1
      || ((v56 ^ a4) & 1) != 0)
    {
      goto LABEL_33;
    }
    long long v61 = objc_msgSend_participants(v44, v58, v59, v60);
    long long v64 = objc_msgSend_arrayByApplyingSelector_(v61, v62, v76, v63);
    long long v68 = objc_msgSend___imSetFromArray(v64, v65, v66, v67);

    if (objc_msgSend_isEqualToSet_(v68, v69, (uint64_t)v10, v70)) {
      break;
    }

LABEL_33:
    if (v41 == ++v43)
    {
      uint64_t v41 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v38, (uint64_t)&v81, (uint64_t)v93, 16);
      uint64_t v42 = &off_1E5B80000;
      if (v41) {
        goto LABEL_16;
      }
      goto LABEL_35;
    }
  }
  id v71 = v44;

  if (!v71) {
    goto LABEL_42;
  }
  if (IMOSLoggingEnabled())
  {
    long long v72 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v72, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      id v90 = v71;
      __int16 v91 = 2112;
      id v92 = v11;
      _os_log_impl(&dword_1A4AF7000, v72, OS_LOG_TYPE_INFO, "[IMFindExistingChatForAddresses] Found existing chat: %@ for addresses: %@", buf, 0x16u);
    }
  }
LABEL_47:

LABEL_48:

  return v71;
}

id IMPreferredSendingAccountForAddressesWithFallbackService(void *a1, void *a2)
{
  return IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(a1, 1, a2);
}

id IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(void *a1, int a2, void *a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  IMRegisterForPreferredAccountChangeNotificationsInternal();
  if (a2) {
    BOOL v10 = (unint64_t)objc_msgSend_count(v5, v7, v8, v9) > 1;
  }
  else {
    BOOL v10 = 0;
  }
  id v11 = IMFindExistingChatForAddresses(v5, 0, v10, 1);
  uint64_t v15 = v11;
  if (v11)
  {
    id v16 = objc_msgSend_account(v11, v12, v13, v14);
    if (!IMOSLoggingEnabled()) {
      goto LABEL_13;
    }
    id v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      LOWORD(v20) = 0;
      _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "[IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService] Found existing chat, returning chat's account", (uint8_t *)&v20, 2u);
    }
  }
  else
  {
    id v16 = IMPreferredAccountForService(v6);
    if (!IMOSLoggingEnabled()) {
      goto LABEL_13;
    }
    id v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      int v20 = 138412290;
      id v21 = v6;
      _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "[IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService] Failed to find existing chat, for fallbackService: %@", (uint8_t *)&v20, 0xCu);
    }
  }

LABEL_13:
  if (IMOSLoggingEnabled())
  {
    uint64_t v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      int v20 = 138412290;
      id v21 = v16;
      _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "[IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService] account: %@", (uint8_t *)&v20, 0xCu);
    }
  }

  return v16;
}

id IMPreferredSendingAccountForAddressWithFallbackService(void *a1, void *a2)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  v10[0] = a1;
  id v3 = (void *)MEMORY[0x1E4F1C978];
  id v4 = a2;
  id v5 = a1;
  uint64_t v7 = objc_msgSend_arrayWithObjects_count_(v3, v6, (uint64_t)v10, 1);

  uint64_t v8 = IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(v7, 0, v4);

  return v8;
}

uint64_t IMCopyDDScannerResultFromAttributedStringData(void *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (objc_msgSend_length(v1, v2, v3, v4))
  {
    id v5 = (void *)MEMORY[0x1A6264150]();
    id v6 = objc_alloc(MEMORY[0x1E4F28DC0]);
    id v22 = 0;
    uint64_t v8 = objc_msgSend_initForReadingFromData_error_(v6, v7, (uint64_t)v1, (uint64_t)&v22);
    id v9 = v22;
    if (v8)
    {
      if (!qword_1E965DD88) {
        qword_1E965DD88 = MEMORY[0x1A6263B40](@"DDScannerResult", @"DataDetectorsCore");
      }
      uint64_t v10 = objc_opt_class();
      uint64_t v12 = objc_msgSend_decodeObjectOfClass_forKey_(v8, v11, v10, @"dd-result");
      objc_msgSend_finishDecoding(v8, v13, v14, v15);
      if (v12) {
        goto LABEL_16;
      }
      if (IMOSLoggingEnabled())
      {
        id v16 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          int v20 = objc_msgSend_error(v8, v17, v18, v19);
          *(_DWORD *)long long buf = 138412546;
          id v24 = v1;
          __int16 v25 = 2112;
          uint64_t v26 = v20;
          _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "Could not unarchive DDScannerResult data: %@ error: %@", buf, 0x16u);
        }
LABEL_14:
      }
    }
    else if (IMOSLoggingEnabled())
    {
      id v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v24 = v9;
        _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "Could not create keyed unarchiver due to error: %@", buf, 0xCu);
      }
      goto LABEL_14;
    }
    uint64_t v12 = 0;
LABEL_16:

    goto LABEL_17;
  }
  uint64_t v12 = 0;
LABEL_17:

  return v12;
}

void sub_1A4C3DB8C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C3DB3CLL);
  }
  _Unwind_Resume(a1);
}

id _IMDDResultAttributeName()
{
  os_log_t v0 = (void *)qword_1E965DDA0;
  if (!qword_1E965DDA0)
  {
    id v1 = (void **)MEMORY[0x1A6263B50]("DDResultAttributeName", @"DataDetectorsCore");
    if (v1) {
      uint64_t v2 = *v1;
    }
    else {
      uint64_t v2 = 0;
    }
    objc_storeStrong((id *)&qword_1E965DDA0, v2);
    os_log_t v0 = (void *)qword_1E965DDA0;
  }

  return v0;
}

id sub_1A4C3DD1C(void *a1)
{
  id v1 = a1;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x3032000000;
  id v17 = sub_1A4B345CC;
  uint64_t v18 = sub_1A4B343CC;
  id v19 = 0;
  uint64_t v5 = objc_msgSend_length(v1, v2, v3, v4);
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = sub_1A4C3DE50;
  v11[3] = &unk_1E5B7EAB8;
  uint64_t v13 = &v14;
  id v6 = v1;
  id v12 = v6;
  objc_msgSend_enumerateAttributesInRange_options_usingBlock_(v6, v7, 0, v5, 0, v11);
  uint64_t v8 = (void *)v15[5];
  if (!v8) {
    uint64_t v8 = v6;
  }
  id v9 = v8;

  _Block_object_dispose(&v14, 8);
  return v9;
}

void sub_1A4C3DE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C3DE50(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  uint64_t v24 = 0;
  __int16 v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = sub_1A4B345CC;
  uint64_t v28 = sub_1A4B343CC;
  id v29 = 0;
  uint64_t v18 = MEMORY[0x1E4F143A8];
  uint64_t v19 = 3221225472;
  int v20 = sub_1A4C3DFB4;
  id v21 = &unk_1E5B7EA90;
  uint64_t v23 = &v24;
  id v8 = v7;
  id v22 = v8;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v8, v9, (uint64_t)&v18, v10);
  uint64_t v13 = v25[5];
  if (v13)
  {
    uint64_t v14 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    if (!v14)
    {
      uint64_t v15 = objc_msgSend_mutableCopy(*(void **)(a1 + 32), v11, v13, v12, v18, v19, v20, v21);
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
      id v17 = *(void **)(v16 + 40);
      *(void *)(v16 + 40) = v15;

      uint64_t v14 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      uint64_t v13 = v25[5];
    }
    objc_msgSend_setAttributes_range_(v14, v11, v13, a3, a4, v18, v19, v20, v21);
  }

  _Block_object_dispose(&v24, 8);
}

void sub_1A4C3DF9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C3DFB4(uint64_t a1, void *a2, void *a3)
{
  id v23 = a2;
  id v8 = a3;
  if (v8)
  {
    id v9 = objc_msgSend_allSupportedDDAttributesKeys(IMDDController, v5, v6, v7);
    int v12 = objc_msgSend_containsObject_(v9, v10, (uint64_t)v23, v11);

    if (v12)
    {
      uint64_t v16 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      if (!v16)
      {
        uint64_t v17 = objc_msgSend_mutableCopy(*(void **)(a1 + 32), v13, v14, v15);
        uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8);
        uint64_t v19 = *(void **)(v18 + 40);
        *(void *)(v18 + 40) = v17;

        uint64_t v16 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      }
      objc_msgSend_removeObjectForKey_(v16, v13, (uint64_t)v23, v15);
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        int v20 = (void *)IMCopyDDScannerResultFromAttributedStringData(v8);
        if (v20)
        {
          id v21 = _IMDDResultAttributeName();
          objc_msgSend_setObject_forKey_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v22, (uint64_t)v20, (uint64_t)v21);
        }
      }
    }
  }
}

id IMOffsetSerializedDDScannerResult(void *a1, uint64_t a2)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = v3;
  if (a2)
  {
    id v8 = (void *)IMCopyDDScannerResultFromAttributedStringData(v3);
    if (v8)
    {
      if (qword_1E965EAA0 != -1) {
        dispatch_once(&qword_1E965EAA0, &unk_1EF8E57B8);
      }
      id v9 = (void (*)(uint64_t, uint64_t))off_1E965EA98;
      if (off_1E965EA98)
      {
        uint64_t v10 = objc_msgSend_coreResult(v8, v5, v6, v7);
        v9(v10, a2);
      }
      else if (IMOSLoggingEnabled())
      {
        int v12 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          LOWORD(v30) = 0;
          _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "Failed to link DDResultOffsetAbsoluteRange from DataDetectorsCore.", (uint8_t *)&v30, 2u);
        }
      }
      id v13 = v8;
      uint64_t v14 = MEMORY[0x1A6263B40](@"DDScannerResult", @"DataDetectorsCore");
      id v15 = objc_alloc(MEMORY[0x1E4F28DB0]);
      uint64_t inited = objc_msgSend_initRequiringSecureCoding_(v15, v16, 0, v17);
      objc_msgSend_encodeObject_forKey_(inited, v19, (uint64_t)v13, @"dd-result");
      objc_msgSend_encodeObject_forKey_(inited, v20, (uint64_t)&unk_1EF9145D8, @"version");
      id v21 = objc_alloc(MEMORY[0x1E4F1C9B8]);
      __int16 v25 = objc_msgSend_encodedData(inited, v22, v23, v24);
      id v11 = (id)objc_msgSend_initWithData_(v21, v26, (uint64_t)v25, v27);

      if (!v11)
      {
        if (IMOSLoggingEnabled())
        {
          uint64_t v28 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
          {
            int v30 = 134218498;
            uint64_t v31 = v14;
            __int16 v32 = 2048;
            id v33 = v13;
            __int16 v34 = 2112;
            uint64_t v35 = 0;
            _os_log_impl(&dword_1A4AF7000, v28, OS_LOG_TYPE_INFO, "_DDScannerResultClass = %p, ddScannerResult = %p, keyedArchivedData = %@", (uint8_t *)&v30, 0x20u);
          }
        }
        id v11 = 0;
      }
    }
    else
    {
      id v11 = v4;
    }
  }
  else
  {
    id v11 = v3;
  }

  return v11;
}

void *sub_1A4C3E46C()
{
  double result = (void *)MEMORY[0x1A6263B50]("DDResultOffsetAbsoluteRange", @"DataDetectorsCore");
  off_1E965EA98 = result;
  return result;
}

uint64_t sub_1A4C3E4F0()
{
  os_log_t v0 = objc_alloc_init(IMDDController);
  uint64_t v1 = qword_1EB3F2550;
  qword_1EB3F2550 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C3E63C()
{
  IMGetMainBundleIdentifier();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  byte_1E965EAA8 = objc_msgSend_isEqualToIgnoringCase_(v2, v0, *MEMORY[0x1E4F6C830], v1);
}

void sub_1A4C3E85C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v13 = a2;
  if (v13)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v10 = objc_msgSend_absoluteString(v13, v7, v8, v9);
      objc_msgSend_replaceCharactersInRange_withString_(*(void **)(a1 + 32), v11, a3, a4, v10);
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        objc_msgSend_replaceCharactersInRange_withString_(*(void **)(a1 + 32), v12, a3, a4, v13);
      }
    }
  }
}

void sub_1A4C3EA38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, long long a10)
{
  if (a2)
  {
    if (a2 == 2)
    {
      id v10 = objc_begin_catch(exception_object);
      if (IMOSLoggingEnabled())
      {
        id v11 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          a9 = 138412546;
          WORD2(a10) = 2112;
          *(void *)((char *)&a10 + 6) = v10;
          _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "Exception scanning message: [%@] with exception: [%@]", (uint8_t *)&a9, 0x16u);
        }
      }
    }
    else
    {
      objc_begin_catch(exception_object);
    }
    objc_end_catch();
    JUMPOUT(0x1A4C3E9F0);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A4C3ECB8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (void **)(a1 + 32);
  uint64_t v6 = objc_msgSend_text(*(void **)(a1 + 32), a2, a3, a4);
  objc_msgSend_string(v6, v7, v8, v9);
  id v10 = (__CFString *)objc_claimAutoreleasedReturnValue();

  uint64_t v14 = objc_msgSend_text(*v5, v11, v12, v13);
  uint64_t v18 = objc_msgSend_mutableCopy(v14, v15, v16, v17);

  int isTypingMessage = objc_msgSend_isTypingMessage(*v5, v19, v20, v21);
  if (isTypingMessage)
  {
    if (IMOSLoggingEnabled())
    {
      id v29 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        int v30 = *(void **)(a1 + 32);
        *(_DWORD *)long long buf = 138412290;
        BOOL v56 = v30;
        _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "Not scanning message, it is unfinished or empty: %@", buf, 0xCu);
      }
LABEL_14:
    }
  }
  else if ((objc_msgSend_supportsDataDetectors(MEMORY[0x1E4F6E730], v22, v23, v24) & 1) != 0 || *(unsigned char *)(a1 + 56))
  {
    if (v10 && CFStringGetLength(v10) >= 2)
    {
      int v32 = objc_msgSend__scanMessageUsingScanner_attributedString_(*(void **)(a1 + 40), v31, *(void *)(a1 + 32), (uint64_t)v18);
      goto LABEL_16;
    }
    if (IMOSLoggingEnabled())
    {
      id v29 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        uint64_t v36 = objc_msgSend_guid(*(void **)(a1 + 32), v33, v34, v35);
        *(_DWORD *)long long buf = 138412290;
        BOOL v56 = v36;
        _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "Did not scan message with guid: %@", buf, 0xCu);
      }
      goto LABEL_14;
    }
  }
  int v32 = 0;
LABEL_16:
  uint64_t v37 = objc_msgSend_copy(*(void **)(a1 + 32), v26, v27, v28);
  uint64_t v41 = objc_msgSend_flags(v37, v38, v39, v40);
  uint64_t v44 = v41;
  if (v32)
  {
    objc_msgSend__updateText_(v37, v42, (uint64_t)v18, v43);
    uint64_t v45 = v44 | 0x110000;
    if (*(unsigned char *)(a1 + 57)) {
      objc_msgSend__updateText_(*(void **)(a1 + 32), v42, (uint64_t)v18, v43);
    }
  }
  else
  {
    uint64_t v45 = v41 | 0x100000;
  }
  if (*(unsigned char *)(a1 + 57)) {
    objc_msgSend__updateFlags_(*(void **)(a1 + 32), v42, v45, v43);
  }
  objc_msgSend__updateFlags_(v37, v42, v45, v43);
  if (IMOSLoggingEnabled())
  {
    uint64_t v46 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
    {
      uint64_t v47 = @"NO";
      if (v32) {
        uint64_t v48 = @"YES";
      }
      else {
        uint64_t v48 = @"NO";
      }
      *(_DWORD *)long long buf = 138412802;
      BOOL v56 = v37;
      long long v58 = v48;
      __int16 v57 = 2112;
      if (!isTypingMessage) {
        uint64_t v47 = @"YES";
      }
      __int16 v59 = 2112;
      uint64_t v60 = v47;
      _os_log_impl(&dword_1A4AF7000, v46, OS_LOG_TYPE_INFO, " => Result message: %@  Found Results: %@, wasProcessed = %@", buf, 0x20u);
    }
  }
  uint64_t v49 = *(void *)(a1 + 48);
  if (v49)
  {
    uint64_t v50 = isTypingMessage ^ 1u;
    if (*(unsigned char *)(a1 + 57))
    {
      (*(void (**)(uint64_t, uint64_t, void *))(v49 + 16))(v49, v50, v37);
    }
    else
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = sub_1A4C3F07C;
      block[3] = &unk_1E5B7EAE0;
      id v53 = *(id *)(a1 + 48);
      char v54 = v50;
      id v52 = v37;
      dispatch_async(MEMORY[0x1E4F14428], block);
    }
  }
}

void sub_1A4C3F048(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C3EE58);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C3F07C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
}

void sub_1A4C3F0E8(uint64_t a1, const char *a2)
{
  void v10[5] = *MEMORY[0x1E4F143B8];
  id v2 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v3 = *MEMORY[0x1E4F6C200];
  v10[0] = *MEMORY[0x1E4F6C220];
  v10[1] = v3;
  uint64_t v4 = *MEMORY[0x1E4F6C148];
  void v10[2] = *MEMORY[0x1E4F6C100];
  v10[3] = v4;
  void v10[4] = *MEMORY[0x1E4F6C160];
  uint64_t v5 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], a2, (uint64_t)v10, 5);
  uint64_t v8 = objc_msgSend_setWithArray_(v2, v6, (uint64_t)v5, v7);
  uint64_t v9 = (void *)qword_1E965EAC0;
  qword_1E965EAC0 = v8;
}

void sub_1A4C3F960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1A4C3F980(uint64_t a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v6 = objc_msgSend__processLoadedChatDictionaries_(*(void **)(a1 + 32), v4, (uint64_t)v3, v5);
  if (IMOSLoggingEnabled())
  {
    id v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v14 = NSNumber;
      uint64_t v15 = objc_msgSend_count(v6, v11, v12, v13);
      uint64_t v18 = objc_msgSend_numberWithUnsignedInteger_(v14, v16, v15, v17);
      int v22 = 138412290;
      uint64_t v23 = v18;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Unblackholed %@ chats, returning first object", (uint8_t *)&v22, 0xCu);
    }
  }
  uint64_t v19 = objc_msgSend_firstObject(v6, v7, v8, v9);
  uint64_t v20 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v21 = *(void **)(v20 + 40);
  *(void *)(v20 + 40) = v19;
}

uint64_t sub_1A4C400AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F4181798](a1, sel_muteChat_untilDate_syncToPairedDevice_, a3, a4);
}

void sub_1A4C400B4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  objc_msgSend_muteIdentifiersForChat_(a1, v7, a3, v8);
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_muteChatWithMuteIdentifiers_untilDate_syncToPairedDevice_(a1, v9, (uint64_t)v10, (uint64_t)v6, 1);
}

id sub_1A4C40130(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_muteIdentifiersForChat_(a1, a2, a3, a4);
  uint64_t v8 = objc_msgSend_unmuteDateForMuteIdentifiers_(a1, v6, (uint64_t)v5, v7);

  return v8;
}

void sub_1A4C40188(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_msgSend_object(v4, v5, v6, v7);
  id v26 = (id)objc_claimAutoreleasedReturnValue();
  id v11 = objc_msgSend_userInfo(v4, v8, v9, v10);
  uint64_t v14 = objc_msgSend_objectForKey_(v11, v12, @"__kIMChatRegistryPreviousGroupIDKey", v13);

  uint64_t v18 = objc_msgSend_userInfo(v4, v15, v16, v17);

  uint64_t v21 = objc_msgSend_objectForKey_(v18, v19, @"__kIMChatRegistryUpdatedGroupIDKey", v20);

  if (_IMWillLog())
  {
    uint64_t v24 = v21;
    id v25 = v26;
    uint64_t v23 = v14;
    _IMAlwaysLog();
  }
  objc_msgSend__updateGroupID_toGroupID_forChat_(a1, v22, (uint64_t)v14, (uint64_t)v21, v26, v23, v24, v25);
}

void sub_1A4C40290(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  v31[1] = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if (_IMWillLog())
  {
    id v26 = v9;
    id v28 = v10;
    id v24 = v8;
    _IMAlwaysLog();
  }
  uint64_t v13 = objc_msgSend_unmuteDateForMuteIdentifier_(a1, v11, (uint64_t)v8, v12, v24, v26, v28);
  uint64_t v16 = (void *)v13;
  if (v9)
  {
    if (v10)
    {
      if (v13)
      {
        uint64_t v17 = objc_msgSend_unmuteDateForMuteIdentifier_(a1, v14, (uint64_t)v9, v15);

        if (!v17)
        {
          if (_IMWillLog())
          {
            id v27 = v9;
            id v29 = v10;
            id v25 = v8;
            _IMAlwaysLog();
          }
          v31[0] = v9;
          uint64_t v19 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v18, (uint64_t)v31, 1, v25, v27, v29);
          objc_msgSend_muteChatWithMuteIdentifiers_untilDate_syncToPairedDevice_(a1, v20, (uint64_t)v19, (uint64_t)v16, 1);

          id v30 = v8;
          int v22 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v21, (uint64_t)&v30, 1);
          objc_msgSend_unmuteChatWithMuteIdentifiers_syncToPairedDevice_(a1, v23, (uint64_t)v22, 1);
        }
      }
    }
  }
}

void sub_1A4C40D04(void *a1, void *a2, void *a3, void *a4, int a5)
{
  uint64_t v141 = *MEMORY[0x1E4F143B8];
  id v110 = a1;
  id v7 = a2;
  id v116 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  uint64_t v111 = v7;
  if (objc_msgSend_chatStyle(v7, v8, v9, v10) != 45 || a5)
  {
    objc_msgSend_allGUIDsForChat_(v110, v11, (uint64_t)v7, v13);
    id obj = (id)objc_claimAutoreleasedReturnValue();
    long long v133 = 0u;
    long long v134 = 0u;
    long long v131 = 0u;
    long long v132 = 0u;
    uint64_t v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v60, (uint64_t)&v131, (uint64_t)v140, 16);
    if (v61)
    {
      uint64_t v62 = *(void *)v132;
      do
      {
        for (uint64_t i = 0; i != v61; ++i)
        {
          if (*(void *)v132 != v62) {
            objc_enumerationMutation(obj);
          }
          uint64_t v129 = 0;
          uint64_t v130 = 0;
          IMComponentsFromChatGUID();
          id v64 = 0;
          id v65 = 0;
          id v66 = objc_alloc(MEMORY[0x1E4F6C3A8]);
          second = objc_msgSend_initWithFirst_second_(v66, v67, (uint64_t)v64, (uint64_t)v65);

          if (second) {
            objc_msgSend_addObject_(v116, v69, (uint64_t)second, v70);
          }
        }
        uint64_t v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v71, (uint64_t)&v131, (uint64_t)v140, 16);
      }
      while (v61);
    }
  }
  else
  {
    long long v127 = 0u;
    long long v128 = 0u;
    long long v125 = 0u;
    long long v126 = 0u;
    objc_msgSend_participants(v7, v11, v12, v13);
    id obj = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v113 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v14, (uint64_t)&v125, (uint64_t)v139, 16);
    if (v113)
    {
      uint64_t v112 = *(void *)v126;
      do
      {
        uint64_t v18 = 0;
        do
        {
          if (*(void *)v126 != v112)
          {
            uint64_t v19 = v18;
            objc_enumerationMutation(obj);
            uint64_t v18 = v19;
          }
          uint64_t v114 = v18;
          uint64_t v20 = *(void **)(*((void *)&v125 + 1) + 8 * v18);
          long long v121 = 0u;
          long long v122 = 0u;
          long long v123 = 0u;
          long long v124 = 0u;
          uint64_t v21 = objc_msgSend__chatSiblings(v20, v15, v16, v17);
          uint64_t v23 = objc_msgSend_countByEnumeratingWithState_objects_count_(v21, v22, (uint64_t)&v121, (uint64_t)v138, 16);
          if (v23)
          {
            uint64_t v24 = *(void *)v122;
            do
            {
              for (uint64_t j = 0; j != v23; ++j)
              {
                if (*(void *)v122 != v24) {
                  objc_enumerationMutation(v21);
                }
                id v26 = *(void **)(*((void *)&v121 + 1) + 8 * j);
                if (IMOSLoggingEnabled())
                {
                  id v27 = OSLogHandleForIMFoundationCategory();
                  if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)long long buf = 138412290;
                    uint64_t v137 = v26;
                    _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, "     Query with participant: %@", buf, 0xCu);
                  }
                }
                if (IMOSLoggingEnabled())
                {
                  id v28 = OSLogHandleForIMFoundationCategory();
                  if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
                  {
                    int v32 = objc_msgSend_ID(v26, v29, v30, v31);
                    *(_DWORD *)long long buf = 138412290;
                    uint64_t v137 = v32;
                    _os_log_impl(&dword_1A4AF7000, v28, OS_LOG_TYPE_INFO, "           => Adding handle: %@", buf, 0xCu);
                  }
                }
                if (IMOSLoggingEnabled())
                {
                  id v33 = OSLogHandleForIMFoundationCategory();
                  if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
                  {
                    uint64_t v37 = objc_msgSend_service(v26, v34, v35, v36);
                    uint64_t v41 = objc_msgSend_internalName(v37, v38, v39, v40);
                    *(_DWORD *)long long buf = 138412290;
                    uint64_t v137 = v41;
                    _os_log_impl(&dword_1A4AF7000, v33, OS_LOG_TYPE_INFO, "           => Adding service: %@", buf, 0xCu);
                  }
                }
                id v42 = objc_alloc(MEMORY[0x1E4F6C3A8]);
                uint64_t v46 = objc_msgSend_ID(v26, v43, v44, v45);
                uint64_t v50 = objc_msgSend_service(v26, v47, v48, v49);
                char v54 = objc_msgSend_internalName(v50, v51, v52, v53);
                BOOL v56 = objc_msgSend_initWithFirst_second_(v42, v55, (uint64_t)v46, (uint64_t)v54);

                if (v56) {
                  objc_msgSend_addObject_(v116, v57, (uint64_t)v56, v58);
                }
              }
              uint64_t v23 = objc_msgSend_countByEnumeratingWithState_objects_count_(v21, v59, (uint64_t)&v121, (uint64_t)v138, 16);
            }
            while (v23);
          }

          uint64_t v18 = v114 + 1;
        }
        while (v114 + 1 != v113);
        uint64_t v113 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v15, (uint64_t)&v125, (uint64_t)v139, 16);
      }
      while (v113);
    }
  }

  long long v75 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v72, v73, v74);
  uint64_t v79 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v76, v77, v78);
  long long v119 = 0u;
  long long v120 = 0u;
  long long v117 = 0u;
  long long v118 = 0u;
  id v80 = v116;
  uint64_t v85 = objc_msgSend_countByEnumeratingWithState_objects_count_(v80, v81, (uint64_t)&v117, (uint64_t)v135, 16);
  if (v85)
  {
    uint64_t v86 = *(void *)v118;
    do
    {
      for (uint64_t k = 0; k != v85; ++k)
      {
        if (*(void *)v118 != v86) {
          objc_enumerationMutation(v80);
        }
        long long v88 = *(void **)(*((void *)&v117 + 1) + 8 * k);
        uint64_t v89 = objc_msgSend_first(v88, v82, v83, v84);
        objc_msgSend_addObject_(v75, v90, (uint64_t)v89, v91);

        uint64_t v95 = objc_msgSend_second(v88, v92, v93, v94);
        objc_msgSend_addObject_(v79, v96, (uint64_t)v95, v97);

        if (IMOSLoggingEnabled())
        {
          uint64_t v98 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v98, OS_LOG_TYPE_INFO))
          {
            uint64_t v102 = objc_msgSend_first(v88, v99, v100, v101);
            *(_DWORD *)long long buf = 138412290;
            uint64_t v137 = v102;
            _os_log_impl(&dword_1A4AF7000, v98, OS_LOG_TYPE_INFO, "           => Adding identifier: %@", buf, 0xCu);
          }
        }
        if (IMOSLoggingEnabled())
        {
          uint64_t v103 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v103, OS_LOG_TYPE_INFO))
          {
            uint64_t v107 = objc_msgSend_second(v88, v104, v105, v106);
            *(_DWORD *)long long buf = 138412290;
            uint64_t v137 = v107;
            _os_log_impl(&dword_1A4AF7000, v103, OS_LOG_TYPE_INFO, "           => Adding service: %@", buf, 0xCu);
          }
        }
      }
      uint64_t v85 = objc_msgSend_countByEnumeratingWithState_objects_count_(v80, v82, (uint64_t)&v117, (uint64_t)v135, 16);
    }
    while (v85);
  }

  if (a3) {
    *a3 = v75;
  }
  if (a4) {
    *a4 = v79;
  }
}

void sub_1A4C416E0(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v9 = a1;
  int v8 = IMSharedHelperPersonCentricMergingEnabled();
  sub_1A4C40D04(v9, v7, a3, a4, v8);
}

void sub_1A4C446B0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C446C8(uint64_t result, const char *a2)
{
  if (a2)
  {
    *(unsigned char *)(*(void *)(*(void *)(result + 56) + 8) + 24) = 1;
    return objc_msgSend_setUserActivityForChat_message_orHandles_(*(void **)(result + 32), a2, *(void *)(result + 40), *(void *)(result + 48), 0);
  }
  return result;
}

uint64_t sub_1A4C446F4(uint64_t result, const char *a2)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(result + 56) + 8) + 24)) {
    return objc_msgSend_setUserActivityForChat_message_orHandles_(*(void **)(result + 32), a2, *(void *)(result + 40), *(void *)(result + 48), 0);
  }
  return result;
}

void sub_1A4C48E90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v10 = objc_msgSend_sharedInstance(IMFileTransferCenter, v7, v8, v9);
  objc_msgSend__handleSerializedFileTransfers_(v10, v11, (uint64_t)v5, v12);

  uint64_t v13 = *(void **)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  objc_msgSend_guid(*(void **)(a1 + 48), v15, v16, v17);
  id v19 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_historyQuery_chatID_services_finishedWithResult_limit_(v13, v18, v14, (uint64_t)v19, *(void *)(a1 + 56), v6, *(void *)(a1 + 64));
}

void sub_1A4C48F40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = v7;
  os_signpost_id_t v9 = *(void *)(a1 + 56);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)long long buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1A4AF7000, v8, OS_SIGNPOST_INTERVAL_END, v9, "loadHistoryForChatWithGUID", "", buf, 2u);
  }

  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A4C4911C;
  aBlock[3] = &unk_1E5B7BC90;
  id v19 = *(id *)(a1 + 40);
  id v10 = v5;
  id v17 = v10;
  id v11 = v6;
  id v18 = v11;
  uint64_t v12 = _Block_copy(aBlock);
  if (*(unsigned char *)(a1 + 64))
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C49134;
    block[3] = &unk_1E5B7EBB0;
    id v14 = *(id *)(a1 + 48);
    id v15 = v12;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

uint64_t sub_1A4C4911C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1A4C49134(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_1A4C49588(uint64_t a1, void *a2, void *a3, char a4, char a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = *(id *)(a1 + 32);
  uint64_t v12 = v11;
  os_signpost_id_t v13 = *(void *)(a1 + 80);
  if (v13 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v11))
  {
    *(_WORD *)long long buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1A4AF7000, v12, OS_SIGNPOST_INTERVAL_END, v13, "loadPagedHistoryAroundMessageWithGUID", "", buf, 2u);
  }

  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1A4C497AC;
  aBlock[3] = &unk_1E5B7EC00;
  id v14 = v10;
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void **)(a1 + 48);
  id v23 = v14;
  uint64_t v24 = v15;
  id v25 = v16;
  id v26 = *(id *)(a1 + 56);
  id v27 = *(id *)(a1 + 64);
  long long v29 = *(_OWORD *)(a1 + 88);
  id v17 = v9;
  id v28 = v17;
  char v30 = a4;
  char v31 = a5;
  id v18 = _Block_copy(aBlock);
  if (*(unsigned char *)(a1 + 104))
  {
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C49844;
    block[3] = &unk_1E5B7EBB0;
    id v20 = *(id *)(a1 + 72);
    id v21 = v18;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

void sub_1A4C497AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend_sharedInstance(IMFileTransferCenter, a2, a3, a4);
  objc_msgSend__handleSerializedFileTransfers_(v5, v6, *(void *)(a1 + 32), v7);

  uint64_t v8 = *(void **)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  objc_msgSend_guid(*(void **)(a1 + 56), v10, v11, v12);
  id v15 = (id)objc_claimAutoreleasedReturnValue();
  __int16 v14 = *(_WORD *)(a1 + 96);
  objc_msgSend_pagedHistoryQuery_chatID_services_numberOfMessagesBefore_numberOfMessagesAfter_finishedWithResult_hasMessagesBefore_hasMessagesAfter_(v8, v13, v9, (uint64_t)v15, *(void *)(a1 + 64), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 72), v14);
}

uint64_t sub_1A4C49844(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_1A4C49B60(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(a1 + 48))
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C49C40;
    block[3] = &unk_1E5B7BC90;
    id v7 = *(id *)(a1 + 40);
    id v5 = *(id *)(a1 + 32);
    id v6 = v3;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

uint64_t sub_1A4C49C40(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A4C49F44(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(a1 + 48))
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C4A024;
    block[3] = &unk_1E5B7BC90;
    id v7 = *(id *)(a1 + 40);
    id v5 = *(id *)(a1 + 32);
    id v6 = v3;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

uint64_t sub_1A4C4A024(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A4C4A5E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 64))
  {
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    objc_msgSend_guid(*(void **)(a1 + 48), a2, a3, a4);
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v11 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v9, (uint64_t)a2, v10);
    objc_msgSend_markAsSpamQuery_chatID_services_finishedWithResult_(v6, v12, v7, (uint64_t)v13, v8, v11);
  }
}

void sub_1A4C4A9AC(uint64_t a1, void *a2)
{
  id v6 = a2;
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v7 = *(void **)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = objc_msgSend_guid(*(void **)(a1 + 48), v3, v4, v5);
    objc_msgSend_frequentRepliesQuery_chatID_services_finishedWithResult_limit_(v7, v10, v8, (uint64_t)v9, *(void *)(a1 + 56), v6, *(void *)(a1 + 64));
  }
  else
  {
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = sub_1A4C4AAD4;
    v14[3] = &unk_1E5B7ECC8;
    uint64_t v11 = *(void **)(a1 + 40);
    void v14[4] = *(void *)(a1 + 32);
    id v15 = v11;
    id v16 = *(id *)(a1 + 48);
    id v17 = *(id *)(a1 + 56);
    id v12 = v6;
    uint64_t v13 = *(void *)(a1 + 64);
    id v18 = v12;
    uint64_t v19 = v13;
    dispatch_async(MEMORY[0x1E4F14428], v14);
  }
}

void sub_1A4C4AAD4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  objc_msgSend_guid(*(void **)(a1 + 48), a2, a3, a4);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_frequentRepliesQuery_chatID_services_finishedWithResult_limit_(v5, v7, v6, (uint64_t)v8, *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72));
}

void sub_1A4C4AEF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v10 = objc_msgSend_sharedInstance(IMFileTransferCenter, v7, v8, v9);
  objc_msgSend__handleSerializedFileTransfers_(v10, v11, (uint64_t)v5, v12);

  uint64_t v13 = *(void **)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  objc_msgSend_guid(*(void **)(a1 + 48), v15, v16, v17);
  id v19 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_historyQuery_chatID_services_finishedWithResult_limit_(v13, v18, v14, (uint64_t)v19, *(void *)(a1 + 56), v6, *(void *)(a1 + 64));
}

void sub_1A4C4AFA4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (*(unsigned char *)(a1 + 40))
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C4B09C;
    block[3] = &unk_1E5B7BC90;
    id v10 = *(id *)(a1 + 32);
    id v8 = v5;
    id v9 = v6;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

uint64_t sub_1A4C4B09C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1A4C4B3A8(uint64_t a1, void *a2)
{
  id v6 = a2;
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v7 = *(void **)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    id v9 = objc_msgSend_guid(*(void **)(a1 + 48), v3, v4, v5);
    objc_msgSend_attachmentQuery_chatID_services_finishedWithResult_(v7, v10, v8, (uint64_t)v9, *(void *)(a1 + 56), v6);
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C4B4CC;
    block[3] = &unk_1E5B7D730;
    uint64_t v11 = *(void **)(a1 + 40);
    void block[4] = *(void *)(a1 + 32);
    id v13 = v11;
    id v14 = *(id *)(a1 + 48);
    id v15 = *(id *)(a1 + 56);
    id v16 = v6;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

void sub_1A4C4B4CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  objc_msgSend_guid(*(void **)(a1 + 48), a2, a3, a4);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_attachmentQuery_chatID_services_finishedWithResult_(v5, v7, v6, (uint64_t)v8, *(void *)(a1 + 56), *(void *)(a1 + 64));
}

void sub_1A4C4B82C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v6 = *(void **)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    objc_msgSend_guid(*(void **)(a1 + 48), a2, a3, a4);
    id v14 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v11 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v9, (uint64_t)a2, v10);
    objc_msgSend_uncachedAttachmentCountQuery_chatID_services_finishedWithResult_(v6, v12, v7, (uint64_t)v14, v8, v11);
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C4B970;
    block[3] = &unk_1E5B7ED68;
    id v13 = *(void **)(a1 + 40);
    void block[4] = *(void *)(a1 + 32);
    id v16 = v13;
    id v17 = *(id *)(a1 + 48);
    id v18 = *(id *)(a1 + 56);
    id v19 = a2;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

void sub_1A4C4B970(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  objc_msgSend_guid(*(void **)(a1 + 48), a2, a3, a4);
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v10 = objc_msgSend_numberWithUnsignedInteger_(NSNumber, v8, *(void *)(a1 + 64), v9);
  objc_msgSend_uncachedAttachmentCountQuery_chatID_services_finishedWithResult_(v5, v11, v6, (uint64_t)v12, v7, v10);
}

void sub_1A4C4BEFC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v6 = *(void **)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    objc_msgSend_guid(*(void **)(a1 + 48), a2, a3, a4);
    id v10 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_isDownloadingQuery_chatID_services_finishedWithResult_(v6, v8, v7, (uint64_t)v10, *(void *)(a1 + 56), a2);
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C4C024;
    block[3] = &unk_1E5B7ED90;
    uint64_t v9 = *(void **)(a1 + 40);
    void block[4] = *(void *)(a1 + 32);
    id v12 = v9;
    id v13 = *(id *)(a1 + 48);
    id v14 = *(id *)(a1 + 56);
    char v15 = (char)a2;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

void sub_1A4C4C024(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  objc_msgSend_guid(*(void **)(a1 + 48), a2, a3, a4);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_isDownloadingQuery_chatID_services_finishedWithResult_(v5, v7, v6, (uint64_t)v8, *(void *)(a1 + 56), *(unsigned __int8 *)(a1 + 64));
}

void _ReplaceExtensionPayloadDataWithAttachmentForOutgoingMessage(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v105 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v93 = a2;
  id v8 = a3;
  id v9 = a4;
  if ((objc_msgSend_isTypingMessage(v7, v10, v11, v12) & 1) == 0)
  {
    id v16 = objc_msgSend_payloadData(v7, v13, v14, v15);
    uint64_t v20 = objc_msgSend_length(v16, v17, v18, v19);

    if (v20)
    {
      if (IMOSLoggingEnabled())
      {
        id v21 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412546;
          uint64_t v102 = (uint64_t)v7;
          __int16 v103 = 2112;
          id v104 = v93;
          _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_INFO, "Request to _ReplaceExtensionPayloadDataWithAttachmentForOutgoingMessage: %@ chatIdentifier: %@", buf, 0x16u);
        }
      }
      id v90 = IMExtensionPayloadUnarchivingClasses();
      id v22 = objc_alloc(MEMORY[0x1E4F28DC0]);
      id v26 = objc_msgSend_payloadData(v7, v23, v24, v25);
      id v98 = 0;
      uint64_t v89 = objc_msgSend_initForReadingFromData_error_(v22, v27, (uint64_t)v26, (uint64_t)&v98);
      id v91 = v98;

      id v92 = objc_msgSend_decodeObjectOfClasses_forKey_(v89, v28, (uint64_t)v90, *MEMORY[0x1E4F284E8]);
      if (v91 && IMOSLoggingEnabled())
      {
        long long v29 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v102 = (uint64_t)v91;
          _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "Failed to unarchive payload. Error: %@", buf, 0xCu);
        }
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v32 = *MEMORY[0x1E4F6D308];
        long long v88 = objc_msgSend_objectForKey_(v92, v30, *MEMORY[0x1E4F6D308], v31);
        if (objc_msgSend_length(v88, v33, v34, v35))
        {
          uint64_t v39 = objc_msgSend_sharedInstance(IMFileTransferCenter, v36, v37, v38);
          uint64_t v100 = v88;
          uint64_t v41 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v40, (uint64_t)&v100, 1);
          uint64_t v45 = objc_msgSend_guid(v7, v42, v43, v44);
          uint64_t v85 = objc_msgSend_guidsForStoredAttachmentPayloadData_messageGUID_(v39, v46, (uint64_t)v41, (uint64_t)v45);

          if (IMOSLoggingEnabled())
          {
            uint64_t v49 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = 138412290;
              uint64_t v102 = v85;
              _os_log_impl(&dword_1A4AF7000, v49, OS_LOG_TYPE_INFO, "Wrote extension payload data to attachments folder with GUIDs: %@", buf, 0xCu);
            }
          }
          uint64_t v50 = objc_msgSend_arrayWithArray_(MEMORY[0x1E4F1CA48], v47, v85, v48, v85);
          char v54 = objc_msgSend_fileTransferGUIDs(v7, v51, v52, v53);
          objc_msgSend_addObjectsFromArray_(v50, v55, (uint64_t)v54, v56);

          uint64_t v60 = objc_msgSend_copy(v50, v57, v58, v59);
          objc_msgSend_setFileTransferGUIDs_(v7, v61, (uint64_t)v60, v62);

          long long v87 = objc_msgSend_mutableCopy(v92, v63, v64, v65);
          objc_msgSend_removeObjectForKey_(v87, v66, v32, v67);
          long long v69 = objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(MEMORY[0x1E4F28DB0], v68, (uint64_t)v87, 0, 0);
          objc_msgSend_setPayloadData_(v7, v70, (uint64_t)v69, v71);

          objc_msgSend__updateFileTransferGUIDs_(v8, v72, (uint64_t)v50, v73);
          long long v96 = 0u;
          long long v97 = 0u;
          long long v94 = 0u;
          long long v95 = 0u;
          id v74 = v50;
          uint64_t v79 = objc_msgSend_countByEnumeratingWithState_objects_count_(v74, v75, (uint64_t)&v94, (uint64_t)v99, 16);
          if (v79)
          {
            uint64_t v80 = *(void *)v95;
            do
            {
              uint64_t v81 = 0;
              do
              {
                if (*(void *)v95 != v80) {
                  objc_enumerationMutation(v74);
                }
                uint64_t v82 = *(void *)(*((void *)&v94 + 1) + 8 * v81);
                uint64_t v83 = objc_msgSend_sharedInstance(IMFileTransferCenter, v76, v77, v78);
                objc_msgSend_assignTransfer_toMessage_account_(v83, v84, v82, (uint64_t)v8, v9);

                ++v81;
              }
              while (v79 != v81);
              uint64_t v79 = objc_msgSend_countByEnumeratingWithState_objects_count_(v74, v76, (uint64_t)&v94, (uint64_t)v99, 16);
            }
            while (v79);
          }
        }
      }
    }
  }
}

double sub_1A4C4C8E8(uint64_t a1)
{
  double result = (double)(unint64_t)(a1 * a1) * 3600.0;
  if (result > 172800.0) {
    return 172800.0;
  }
  return result;
}

double sub_1A4C4C910(void *a1, BOOL *a2)
{
  id v3 = a1;
  id v7 = v3;
  if (!v3)
  {
    BOOL v10 = 0;
    double v12 = 0.0;
    if (!a2) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  objc_msgSend_timeIntervalSinceNow(v3, v4, v5, v6);
  BOOL v9 = v8 > 0.0;
  BOOL v10 = v8 <= 0.0;
  double v11 = -v8;
  if (v9) {
    double v12 = 0.0;
  }
  else {
    double v12 = v11;
  }
  if (a2) {
LABEL_6:
  }
    *a2 = v10;
LABEL_7:

  return v12;
}

uint64_t sub_1A4C4C980(void *a1, void *a2)
{
  unint64_t v3 = a1;
  unint64_t v4 = a2;
  double v8 = (void *)v4;
  uint64_t v9 = (v3 | v4) == 0;
  if (v4) {
    uint64_t v9 = objc_msgSend_unsignedIntegerValue((void *)v4, v5, v6, v7);
  }
  if (v3)
  {
    uint64_t v10 = objc_msgSend_unsignedIntegerValue((void *)v3, v5, v6, v7);
    uint64_t v11 = v10 - 1;
    if (!v10) {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 + v9;

  return v12;
}

double sub_1A4C4CAD8()
{
  double result = *(double *)MEMORY[0x1A6263B50]("kCLLocationAccuracyNearestTenMeters", @"CoreLocation");
  qword_1E965EAC8 = *(void *)&result;
  return result;
}

uint64_t sub_1A4C4CB60()
{
  os_log_t v0 = objc_alloc_init(IMLocationManager);
  uint64_t v1 = qword_1EB3F2558;
  qword_1EB3F2558 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C4D2AC(id *a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    unint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v14 = v3;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Completion block called with error: %@", buf, 0xCu);
    }
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  objc_msgSend_setInRequestPreciseLocation_(WeakRetained, v6, 0, v7);

  if (v3)
  {
    if (IMOSLoggingEnabled())
    {
      double v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v14 = v3;
        _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Error happened when requesting temporary precise location: %@", buf, 0xCu);
      }
    }
    (*((void (**)(void))a1[4] + 2))();
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C4D4DC;
    block[3] = &unk_1E5B7EDE0;
    objc_copyWeak(&v12, a1 + 6);
    id v10 = a1[5];
    id v11 = a1[4];
    dispatch_async(MEMORY[0x1E4F14428], block);

    objc_destroyWeak(&v12);
  }
}

void sub_1A4C4D4DC(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v7 = objc_msgSend_locationManager(WeakRetained, v4, v5, v6);
  char v11 = objc_msgSend__limitsPrecision(v7, v8, v9, v10);

  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      id v12 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "User denied accurate location authorization.", buf, 2u);
      }
    }
    id v13 = objc_alloc(MEMORY[0x1E4F1C9E8]);
    id v16 = objc_msgSend_initWithObjectsAndKeys_(v13, v14, @"IMLocationManager does not have accurate location access", v15, *MEMORY[0x1E4F28568], 0);
    id v17 = objc_alloc(MEMORY[0x1E4F28C58]);
    uint64_t v19 = objc_msgSend_initWithDomain_code_userInfo_(v17, v18, *MEMORY[0x1E4F6C158], 42, v16);
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    id v21 = objc_loadWeakRetained(v2);
    objc_msgSend__startLocationUpdateTimerWithAuthorizedHandler_updateHandler_(v21, v20, *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
}

void sub_1A4C4E624(uint64_t a1, void *a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v7 = objc_msgSend_handlers(*(void **)(a1 + 32), v4, v5, v6);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v27, (uint64_t)v31, 16);
  if (v9)
  {
    uint64_t v13 = v9;
    uint64_t v14 = *(void *)v28;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v28 != v14) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend_objectAtIndexedSubscript_(*(void **)(*((void *)&v27 + 1) + 8 * v15), v10, 1, v12);
        id v16 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue();
        uint64_t v20 = objc_msgSend_error(*(void **)(a1 + 32), v17, v18, v19);
        ((void (**)(void, id, void *))v16)[2](v16, v3, v20);

        ++v15;
      }
      while (v13 != v15);
      uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v10, (uint64_t)&v27, (uint64_t)v31, 16);
    }
    while (v13);
  }
  objc_msgSend_removeAllObjects(v7, v10, v11, v12);
  objc_msgSend_setLocation_(*(void **)(a1 + 32), v21, 0, v22);
  objc_msgSend_setError_(*(void **)(a1 + 32), v23, 0, v24);
  objc_msgSend_setLocateStartTime_(*(void **)(a1 + 32), v25, 0, v26);
}

objc_class *sub_1A4C4E7F0()
{
  double result = (objc_class *)MEMORY[0x1A6263B40](@"_MKLocationShifter", @"MapKit");
  if (result)
  {
    id v1 = objc_alloc_init(result);
    uint64_t v2 = qword_1E965EAD8;
    qword_1E965EAD8 = (uint64_t)v1;
    return (objc_class *)MEMORY[0x1F41817F8](v1, v2);
  }
  return result;
}

void sub_1A4C4E984(uint64_t a1)
{
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  if (IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Location shift started", buf, 2u);
    }
  }
  unint64_t v4 = objc_opt_class();
  double v8 = objc_msgSend_locationShifter(v4, v5, v6, v7);
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 3221225472;
  v18[2] = sub_1A4C4EBDC;
  v18[3] = &unk_1E5B7EE58;
  uint64_t v9 = *(void *)(a1 + 40);
  id v20 = *(id *)(a1 + 48);
  uint64_t v10 = v2;
  uint64_t v19 = v10;
  objc_msgSend_shiftLocation_withCompletionHandler_callbackQueue_(v8, v11, v9, (uint64_t)v18, MEMORY[0x1E4F14428]);

  dispatch_time_t v12 = dispatch_time(0, 10000000000);
  if (dispatch_semaphore_wait(v10, v12))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v13 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v13, OS_LOG_TYPE_INFO, "Location shift timed out.", buf, 2u);
      }
    }
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = sub_1A4C4ECA0;
    v15[3] = &unk_1E5B7B220;
    id v17 = *(id *)(a1 + 48);
    id v16 = *(id *)(a1 + 40);
    uint64_t v14 = (void *)MEMORY[0x1E4F14428];
    dispatch_async(MEMORY[0x1E4F14428], v15);
  }
}

void sub_1A4C4EBDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (IMOSLoggingEnabled())
  {
    unint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Location shift completed", v5, 2u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_1A4C4ECA0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1A4C4ED08()
{
  uint64_t result = MEMORY[0x1A6263B40](@"CLLocationManager", @"CoreLocation");
  qword_1E965EAE8 = result;
  return result;
}

uint64_t sub_1A4C4ED8C()
{
  uint64_t result = MEMORY[0x1A6263B40](@"CLInUseAssertion", @"CoreLocation");
  qword_1E965EAF8 = result;
  return result;
}

uint64_t sub_1A4C4EEE8()
{
  return _NSNewStringByAppendingStrings();
}

void sub_1A4C4F57C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1A4C4F5BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_1A4C4F678;
  void v6[3] = &unk_1E5B7B420;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  id v7 = v4;
  id v5 = v4;
  dispatch_async(MEMORY[0x1E4F14428], v6);

  objc_destroyWeak(&v8);
}

void sub_1A4C4F678(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = objc_msgSend_handleWithFMLHandle_(IMFindMyHandle, v2, *(void *)(a1 + 32), v3);
  objc_msgSend_didReceiveLocationForHandle_(WeakRetained, v5, (uint64_t)v4, v6);
}

void sub_1A4C4F6E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C4F7AC;
  block[3] = &unk_1E5B7EED0;
  objc_copyWeak(v9, (id *)(a1 + 32));
  id v8 = v5;
  v9[1] = a3;
  id v6 = v5;
  dispatch_async(MEMORY[0x1E4F14428], block);

  objc_destroyWeak(v9);
}

void sub_1A4C4F7AC(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 48);
      int v27 = 138412546;
      uint64_t v28 = v4;
      __int16 v29 = 2048;
      uint64_t v30 = v5;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "FindMyLocateSession friendShipUpdateCallback. updateFriend: %@, updateType: %lu", (uint8_t *)&v27, 0x16u);
    }
  }
  MEMORY[0x1A6263B40](@"FMLHandle", @"FindMyLocateObjCWrapper");
  id v6 = (void **)(a1 + 32);
  if ((objc_opt_respondsToSelector() & 1) != 0
    && (objc_msgSend_handle(*v6, v7, v8, v9),
        uint64_t v10 = objc_claimAutoreleasedReturnValue(),
        char isKindOfClass = objc_opt_isKindOfClass(),
        v10,
        (isKindOfClass & 1) != 0))
  {
    uint64_t v15 = objc_msgSend_handle(*v6, v12, v13, v14);
    uint64_t v18 = objc_msgSend_handleWithFMLHandle_(IMFindMyHandle, v16, (uint64_t)v15, v17);
    objc_msgSend__postRelationshipStatusDidChangeNotificationWithIMFindMyHandle_(WeakRetained, v19, (uint64_t)v18, v20);
  }
  else
  {
    uint64_t v15 = IMLogHandleForCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9A5C((uint64_t)v6, v15, v21, v22, v23, v24, v25, v26);
    }
  }
}

void sub_1A4C4F960(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  void v5[2] = sub_1A4C4FA1C;
  v5[3] = &unk_1E5B7B420;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v5);

  objc_destroyWeak(&v7);
}

void sub_1A4C4FA1C(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v11 = 138412290;
      uint64_t v12 = v6;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "FindMyLocateSession meDeviceUpdateCallback: %@", (uint8_t *)&v11, 0xCu);
    }
  }
  id v7 = objc_msgSend_deviceWithFMLDevice_(IMFindMyDevice, v3, *(void *)(a1 + 32), v4);
  objc_msgSend_setActiveDevice_(WeakRetained, v8, (uint64_t)v7, v9);

  objc_msgSend__postNotification_object_userInfo_(WeakRetained, v10, @"__kIMFMFSessionActiveDeviceChangedNotification", 0, 0);
}

void sub_1A4C4FE6C(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = IMLogHandleForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9B68();
    }
  }
  else
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_5;
    }
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "FindMyLocateSession startUpdatingFriendsWithCompletion completed without an error", v4, 2u);
    }
  }

LABEL_5:
}

void sub_1A4C4FF40(uint64_t a1, void *a2, void *a3)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v29 = v5;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "FindMyLocateSession getFriendsSharingLocationsWithMeWithCompletion completed initial fetch with friends: %@. Posting notifications for these handles now", buf, 0xCu);
    }
  }
  int v11 = (void *)MEMORY[0x1E4F1CAD0];
  if (v5)
  {
    uint64_t v12 = objc_msgSend_setWithArray_(MEMORY[0x1E4F1CAD0], v7, (uint64_t)v5, v9);
    uint64_t v15 = objc_msgSend___im_findMyHandlesWithFMLFriends_(v11, v13, (uint64_t)v12, v14);
  }
  else
  {
    uint64_t v15 = objc_msgSend_set(MEMORY[0x1E4F1CAD0], v7, v8, v9);
  }
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v16 = v15;
  uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v23, (uint64_t)v27, 16);
  if (v20)
  {
    uint64_t v21 = *(void *)v24;
    do
    {
      uint64_t v22 = 0;
      do
      {
        if (*(void *)v24 != v21) {
          objc_enumerationMutation(v16);
        }
        objc_msgSend__postRelationshipStatusDidChangeNotificationWithIMFindMyHandle_(*(void **)(a1 + 32), v18, *(void *)(*((void *)&v23 + 1) + 8 * v22++), v19, (void)v23);
      }
      while (v20 != v22);
      uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v18, (uint64_t)&v23, (uint64_t)v27, 16);
    }
    while (v20);
  }
}

void sub_1A4C5011C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v29 = v5;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "FindMyLocateSession getFriendsFollowingMyLocationWithCompletion completed initial fetch with friends: %@. Posting notifications for these handles now", buf, 0xCu);
    }
  }
  int v11 = (void *)MEMORY[0x1E4F1CAD0];
  if (v5)
  {
    uint64_t v12 = objc_msgSend_setWithArray_(MEMORY[0x1E4F1CAD0], v7, (uint64_t)v5, v9);
    uint64_t v15 = objc_msgSend___im_findMyHandlesWithFMLFriends_(v11, v13, (uint64_t)v12, v14);
  }
  else
  {
    uint64_t v15 = objc_msgSend_set(MEMORY[0x1E4F1CAD0], v7, v8, v9);
  }
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v16 = v15;
  uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v23, (uint64_t)v27, 16);
  if (v20)
  {
    uint64_t v21 = *(void *)v24;
    do
    {
      uint64_t v22 = 0;
      do
      {
        if (*(void *)v24 != v21) {
          objc_enumerationMutation(v16);
        }
        objc_msgSend__postRelationshipStatusDidChangeNotificationWithIMFindMyHandle_(*(void **)(a1 + 32), v18, *(void *)(*((void *)&v23 + 1) + 8 * v22++), v19, (void)v23);
      }
      while (v20 != v22);
      uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v18, (uint64_t)&v23, (uint64_t)v27, 16);
    }
    while (v20);
  }
}

void sub_1A4C502F8(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = IMLogHandleForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9BD0();
    }
  }
  else
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_5;
    }
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "FindMyLocateSession startMonitoringActiveLocationSharingDeviceChangeWithCompletion completed without an error.", v4, 2u);
    }
  }

LABEL_5:
}

uint64_t sub_1A4C50420()
{
  os_log_t v0 = objc_alloc_init(IMFMFSession);
  uint64_t v1 = qword_1EB3F2560;
  qword_1EB3F2560 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

objc_class *sub_1A4C5089C()
{
  uint64_t result = (objc_class *)MEMORY[0x1A6263B40](@"ACAccountStore", @"AppleAccount");
  if (result)
  {
    id v1 = objc_alloc_init(result);
    uint64_t v2 = qword_1E965DE00;
    qword_1E965DE00 = (uint64_t)v1;
    return (objc_class *)MEMORY[0x1F41817F8](v1, v2);
  }
  return result;
}

void sub_1A4C511F0(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9C6C(a1);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412290;
      uint64_t v8 = v6;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "FindMyLocateSession startRefreshingLocationForHandles completed for handles: %@", (uint8_t *)&v7, 0xCu);
    }
  }
}

void sub_1A4C517F4(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9CE0(a1);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412290;
      uint64_t v8 = v6;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "FindMyLocateSession stopRefreshingLocationForHandles completed for handles: %@", (uint8_t *)&v7, 0xCu);
    }
  }
}

void sub_1A4C52978(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      int v11 = 138412802;
      uint64_t v12 = v9;
      __int16 v13 = 2112;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v6;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "refreshLocationForHandles %@ callerId %@ error %@", (uint8_t *)&v11, 0x20u);
    }
  }
  objc_msgSend__postNotification_object_userInfo_(*(void **)(a1 + 48), v7, @"__kIMFMFSessionHandleLocationRefreshedNotification", *(void *)(a1 + 56), 0);
}

void sub_1A4C52BE0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      int v11 = 138412802;
      uint64_t v12 = v9;
      __int16 v13 = 2112;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v6;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "refreshLocationForHandles %@ callerId %@ error %@", (uint8_t *)&v11, 0x20u);
    }
  }
  objc_msgSend__postNotification_object_userInfo_(*(void **)(a1 + 48), v7, @"__kIMFMFSessionChatLocationRefreshedNotification", *(void *)(a1 + 56), 0);
}

void sub_1A4C5404C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = IMLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9EC0();
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      int v16 = 138412290;
      id v17 = v5;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "FindMyLocateSession getActiveLocationSharingDeviceWithCompletion device: %@", (uint8_t *)&v16, 0xCu);
    }
  }
  if (v5)
  {
    int v11 = *(void **)(a1 + 32);
    uint64_t v12 = objc_msgSend_deviceWithFMLDevice_(IMFindMyDevice, v8, (uint64_t)v5, v9);
    objc_msgSend_setActiveDevice_(v11, v13, (uint64_t)v12, v14);

    objc_msgSend__postNotification_object_userInfo_(*(void **)(a1 + 32), v15, @"__kIMFMFSessionActiveDeviceChangedNotification", 0, 0);
  }
}

void sub_1A4C541CC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  int v7 = *(void **)(a1 + 32);
  uint64_t v10 = objc_msgSend_deviceWithFMFDevice_(IMFindMyDevice, v8, (uint64_t)v5, v9);
  objc_msgSend_setActiveDevice_(v7, v11, (uint64_t)v10, v12);

  if (IMOSLoggingEnabled())
  {
    uint64_t v14 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      int v15 = 138412546;
      id v16 = v5;
      __int16 v17 = 2112;
      id v18 = v6;
      _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "FMF updated active device %@ error %@", (uint8_t *)&v15, 0x16u);
    }
  }
  objc_msgSend__postNotification_object_userInfo_(*(void **)(a1 + 32), v13, @"__kIMFMFSessionActiveDeviceChangedNotification", 0, 0);
}

void sub_1A4C543E0(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  if (IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "FMF setActiveDevice %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1A4C55088(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    int v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9F60();
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2048;
      uint64_t v11 = v7;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "sendFriendshipOfferToHandles completed for handles: %@, duration: %ld", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1A4C554AC(void *a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = a1[4];
      uint64_t v9 = a1[5];
      uint64_t v10 = a1[6];
      uint64_t v11 = a1[7];
      int v12 = 138413570;
      uint64_t v13 = v8;
      __int16 v14 = 2112;
      uint64_t v15 = v9;
      __int16 v16 = 2112;
      uint64_t v17 = v10;
      __int16 v18 = 2112;
      uint64_t v19 = v11;
      __int16 v20 = 2112;
      id v21 = v5;
      __int16 v22 = 2112;
      id v23 = v6;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "sendFriendshipOfferToHandles %@ untilDate %@ callerId %@ groupId %@ mappingIdentifiers %@ error %@", (uint8_t *)&v12, 0x3Eu);
    }
  }
}

void sub_1A4C557E0(void *a1, void *a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = a1[4];
      uint64_t v9 = a1[5];
      uint64_t v10 = a1[6];
      int v11 = 138413314;
      uint64_t v12 = v8;
      __int16 v13 = 2112;
      uint64_t v14 = v9;
      __int16 v15 = 2112;
      uint64_t v16 = v10;
      __int16 v17 = 2112;
      id v18 = v5;
      __int16 v19 = 2112;
      id v20 = v6;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "stopSharingMyLocationWithHandles %@ callerId %@ groupId %@ mappingIdentifier %@ error %@", (uint8_t *)&v11, 0x34u);
    }
  }
}

void sub_1A4C55ADC(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    int v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CB9FE4((uint64_t)v3, a1, v4);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = @"YES";
      if (!*(unsigned char *)(a1 + 40)) {
        uint64_t v7 = @"NO";
      }
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      int v11 = v7;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "FindMyLocateSession stopSharingLocationWith completed for handles: %@, isFromGroup: %@", (uint8_t *)&v8, 0x16u);
    }
  }
}

uint64_t sub_1A4C55E6C()
{
  uint64_t result = MEMORY[0x1A6263B40](@"FMFSession", @"FMF");
  qword_1E965E718 = result;
  return result;
}

uint64_t sub_1A4C55EF0()
{
  uint64_t result = MEMORY[0x1A6263B40](@"FindMyLocateSession", @"FindMyLocateObjCWrapper");
  qword_1E965DDC8 = result;
  return result;
}

void sub_1A4C55F74()
{
  os_log_t v0 = *(void **)MEMORY[0x1A6263B50]("FMFGroupIdOneToOne", @"FMF");

  objc_storeStrong((id *)&qword_1E965EB08, v0);
}

void sub_1A4C5600C()
{
  os_log_t v0 = *(void **)MEMORY[0x1A6263B50]("FMFGroupIdGroup", @"FMF");

  objc_storeStrong((id *)&qword_1E965EB18, v0);
}

uint64_t sub_1A4C57980(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v3;
  id v6 = v4;
  __int16 v10 = objc_msgSend_time(v5, v7, v8, v9);
  uint64_t v14 = objc_msgSend_time(v6, v11, v12, v13);
  uint64_t v17 = objc_msgSend_compare_(v10, v15, (uint64_t)v14, v16);

  if (!v17)
  {
    uint64_t v21 = objc_msgSend_messageID(v5, v18, v19, v20);
    if (v21 == objc_msgSend_messageID(v6, v22, v23, v24))
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v28 = objc_msgSend_messageID(v6, v25, v26, v27);
      if (v28 < objc_msgSend_messageID(v5, v29, v30, v31)) {
        uint64_t v17 = 1;
      }
      else {
        uint64_t v17 = -1;
      }
    }
  }

  return v17;
}

void sub_1A4C5878C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long buf, int a16, __int16 a17, __int16 a18, id a19, long long a20)
{
  if (a2 == 1)
  {
    id v20 = objc_begin_catch(a1);
    if (IMOSLoggingEnabled())
    {
      uint64_t v21 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_name(v20, v22, v23, v24);
        id v33 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_reason(v20, v25, v26, v27);
        id v31 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v32 = objc_msgSend_userInfo(v20, v28, v29, v30);
        LODWORD(buf) = 138413314;
        *(void *)((char *)&buf + 4) = v20;
        WORD6(buf) = 2112;
        *(void *)((char *)&buf + 14) = v33;
        a18 = 2112;
        a19 = v31;
        LOWORD(a20) = 2112;
        *(void *)((char *)&a20 + 2) = v32;
        WORD5(a20) = 2080;
        *(void *)((char *)&a20 + 12) = "-[IMChatRegistry(IMChatRegistry_DaemonIncoming) account:chat:style:chatProperti"
                                         "es:notifySentMessage:sendTime:isReplicating:]";
        _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_INFO, "Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s", (uint8_t *)&buf, 0x34u);
      }
    }
    IMLogBacktrace();
    IMLogSimulateCrashForException();

    objc_end_catch();
    JUMPOUT(0x1A4C58730);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C59004()
{
  uint64_t result = MEMORY[0x1A6263B40](@"LSApplicationWorkspace", @"CoreServices");
  qword_1E965EB28 = result;
  return result;
}

BOOL sub_1A4C5A170(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  BOOL v15 = 0;
  if (objc_opt_isKindOfClass())
  {
    uint64_t v7 = objc_msgSend_guid(v3, v4, v5, v6);
    int v11 = objc_msgSend_guid(*(void **)(a1 + 32), v8, v9, v10);
    int isEqualToString = objc_msgSend_isEqualToString_(v7, v12, (uint64_t)v11, v13);

    if (!isEqualToString) {
      BOOL v15 = 1;
    }
  }

  return v15;
}

uint64_t sub_1A4C5BE28(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend__handleMessageGUIDDeletions_(a3, a2, *(void *)(a1 + 32), a4);
}

void sub_1A4C5BF48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_removeGUIDInAttemptingListInScrutinyMode_(IMChat, a2, *(void *)(a1 + 32), a4);
  if (!*(unsigned char *)(a1 + 40))
  {
    objc_msgSend_sharedController(IMChatScrutinyController, v5, v6, v7);
    id v10 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_markMessageAsCorrupt_(v10, v8, *(void *)(a1 + 32), v9);
  }
}

void sub_1A4C5D2AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_msgSend_objectForKey_(v3, v4, @"path", v5);
  id v31 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = objc_msgSend_objectForKey_(v3, v6, @"guid", v7);
  int v11 = objc_msgSend_objectForKey_(v3, v9, @"createdDate", v10);
  uint64_t v14 = objc_msgSend_objectForKey_(v3, v12, @"isSticker", v13);
  uint64_t v17 = objc_msgSend_objectForKey_(v3, v15, @"transferState", v16);

  if (v31 && v8 && v11 && v14)
  {
    id v18 = [IMAttachment alloc];
    uint64_t v22 = objc_msgSend_BOOLValue(v14, v19, v20, v21);
    uint64_t v26 = objc_msgSend_BOOLValue(v17, v23, v24, v25);
    isTransferComplete = objc_msgSend_initWithPath_guid_createdDate_isSticker_isTransferComplete_(v18, v27, (uint64_t)v31, (uint64_t)v8, v11, v22, v26);
    objc_msgSend_addObject_(*(void **)(a1 + 32), v29, (uint64_t)isTransferComplete, v30);
  }
}

void sub_1A4C5D818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C5D830(uint64_t a1, const char *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = objc_msgSend_existingChatWithChatIdentifier_(*(void **)(a1 + 32), a2, (uint64_t)a2, (uint64_t)a4);
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)) {
    *a4 = 1;
  }
}

void sub_1A4C5EAC8(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "ChatRegistry: Fetching the remaining(Final batch) of contacts", v19, 2u);
    }
  }
  uint64_t v6 = objc_msgSend_sharedInstance(IMHandleRegistrar, v2, v3, v4);
  uint64_t v10 = objc_msgSend_getIDsForFinalBatch(v6, v7, v8, v9);

  if (objc_msgSend_count(v10, v11, v12, v13))
  {
    uint64_t v17 = objc_msgSend_contactStore(*(void **)(a1 + 32), v14, v15, v16);
    objc_msgSend_fetchCNContactsForHandlesWithIDs_isFinalBatch_(v17, v18, (uint64_t)v10, 1);
  }
}

uint64_t sub_1A4C5EBB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1A4C60A9C()
{
}

void sub_1A4C60C98(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v2, (uint64_t)&v10, (uint64_t)v14, 16);
  if (v3)
  {
    uint64_t v7 = v3;
    uint64_t v8 = *(void *)v11;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v11 != v8) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend__setupObservation(*(void **)(*((void *)&v10 + 1) + 8 * v9++), v4, v5, v6, (void)v10);
      }
      while (v7 != v9);
      uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v4, (uint64_t)&v10, (uint64_t)v14, 16);
    }
    while (v7);
  }
}

void sub_1A4C61670(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_objectForKey_(a2, (const char *)a2, *MEMORY[0x1E4F6C5C8], a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(*(void **)(a1 + 32), v5, (uint64_t)v7, v6);
}

uint64_t sub_1A4C62264(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_existingChatWithGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  uint64_t v5 = (const char *)objc_claimAutoreleasedReturnValue();
  id v7 = v5;
  if (v5)
  {
    uint64_t v9 = v5;
    uint64_t v5 = (const char *)objc_msgSend_addObject_(*(void **)(a1 + 40), v5, (uint64_t)v5, v6);
    id v7 = v9;
  }

  return MEMORY[0x1F41817F8](v5, v7);
}

void sub_1A4C6235C(uint64_t a1, void *a2)
{
  id v13 = a2;
  objc_msgSend_setRecoverableMessagesCount_(v13, v3, 1, v4);
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7)
  {
    objc_msgSend_setEarliestRecoverableMessageDeletionDate_(v13, v5, v7, v6);
    objc_msgSend_setLatestRecoverableMessageDeletionDate_(v13, v8, *(void *)(a1 + 32), v9);
  }
  uint64_t v10 = objc_msgSend_numberOfMessagesToKeepLoaded(v13, v5, v7, v6);
  id v12 = (id)objc_msgSend_loadMessagesBeforeDate_limit_loadImmediately_(v13, v11, 0, v10, 0);
}

uint64_t sub_1A4C625CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_existingChatWithGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  uint64_t v5 = (const char *)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = v5;
  if (v5)
  {
    uint64_t v9 = v5;
    uint64_t v5 = (const char *)objc_msgSend_addObject_(*(void **)(a1 + 40), v5, (uint64_t)v5, v6);
    uint64_t v7 = v9;
  }

  return MEMORY[0x1F41817F8](v5, v7);
}

void sub_1A4C62640(uint64_t a1, void *a2)
{
  id v16 = a2;
  objc_msgSend_setRecoverableMessagesCount_(v16, v2, 0, v3);
  objc_msgSend_setUnreadRecoverableMessagesCount_(v16, v4, 0, v5);
  objc_msgSend_setEarliestRecoverableMessageDeletionDate_(v16, v6, 0, v7);
  objc_msgSend_setLatestRecoverableMessageDeletionDate_(v16, v8, 0, v9);
  uint64_t v13 = objc_msgSend_numberOfMessagesToKeepLoaded(v16, v10, v11, v12);
  id v15 = (id)objc_msgSend_loadMessagesBeforeDate_limit_loadImmediately_(v16, v14, 0, v13, 0);
}

void sub_1A4C62AE0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_existingChatWithGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setRecoverableMessagesCount_(v12, v4, 0, v5);
  objc_msgSend_setUnreadRecoverableMessagesCount_(v12, v6, 0, v7);
  objc_msgSend_setEarliestRecoverableMessageDeletionDate_(v12, v8, 0, v9);
  objc_msgSend_setLatestRecoverableMessageDeletionDate_(v12, v10, 0, v11);
}

void sub_1A4C62BFC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_existingChatWithGUID_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  id v18 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setRecoverableMessagesCount_(v18, v4, 0, v5);
  objc_msgSend_setUnreadRecoverableMessagesCount_(v18, v6, 0, v7);
  objc_msgSend_setEarliestRecoverableMessageDeletionDate_(v18, v8, 0, v9);
  objc_msgSend_setLatestRecoverableMessageDeletionDate_(v18, v10, 0, v11);
  uint64_t v15 = objc_msgSend_numberOfMessagesToKeepLoaded(v18, v12, v13, v14);
  id v17 = (id)objc_msgSend_loadMessagesBeforeDate_limit_loadImmediately_(v18, v16, 0, v15, 1);
}

uint64_t sub_1A4C631BC()
{
  os_log_t v0 = objc_alloc_init(IMCollaborationNoticeController);
  uint64_t v1 = qword_1EB3F2568;
  qword_1EB3F2568 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sub_1A4C6367C()
{
  os_log_t v0 = objc_alloc_init(IMChatScrutinyController);
  uint64_t v1 = qword_1EB3F2360;
  qword_1EB3F2360 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C63E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    objc_end_catch();
    JUMPOUT(0x1A4C63CF0);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1A4C63E70(uint64_t a1)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = NSNumber;
      uint64_t v11 = objc_msgSend_count(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v6, v7, v8);
      uint64_t v14 = objc_msgSend_numberWithUnsignedInteger_(v10, v12, v11, v13);
      id v17 = objc_msgSend_numberWithBool_(NSNumber, v15, *(unsigned __int8 *)(a1 + 56), v16);
      uint64_t v20 = objc_msgSend_numberWithBool_(NSNumber, v18, *(unsigned __int8 *)(a1 + 57), v19);
      int v49 = 136316162;
      uint64_t v50 = "-[IMInlineReplyController insertHistoricalMessages:queryID:hasMessagesBefore:hasMessagesAfter:isReplacingIte"
            "ms:]_block_invoke";
      __int16 v51 = 2112;
      uint64_t v52 = v9;
      __int16 v53 = 2112;
      char v54 = v14;
      __int16 v55 = 2112;
      uint64_t v56 = v17;
      __int16 v57 = 2112;
      uint64_t v58 = v20;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "%s Updating/acting on queryID: %@  insertHistoricalMessages: %@, hasMessagesBefore: %@ hasMessagesAfter: %@", (uint8_t *)&v49, 0x34u);
    }
  }
  int v21 = *(unsigned __int8 *)(a1 + 56);
  if (*(unsigned char *)(a1 + 58)) {
    objc_msgSend__removeAllItems(*(void **)(a1 + 40), v2, v3, v4);
  }
  if (!v21)
  {
    uint64_t v22 = objc_msgSend_threadOriginator(*(void **)(a1 + 40), v2, v3, v4);
    BOOL v23 = v22 == 0;

    if (!v23)
    {
      uint64_t v25 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      if (v25)
      {
        uint64_t v26 = objc_msgSend_mutableCopy(v25, v2, v24, v4);
        uint64_t v30 = objc_msgSend_threadOriginator(*(void **)(a1 + 40), v27, v28, v29);
        objc_msgSend_insertObject_atIndex_(v26, v31, (uint64_t)v30, 0);

        uint64_t v35 = objc_msgSend_copy(v26, v32, v33, v34);
      }
      else
      {
        uint64_t v36 = (void *)MEMORY[0x1E4F1C978];
        uint64_t v26 = objc_msgSend_threadOriginator(*(void **)(a1 + 40), v2, v24, v4);
        uint64_t v35 = objc_msgSend_arrayWithObject_(v36, v37, (uint64_t)v26, v38);
      }
      uint64_t v39 = *(void *)(*(void *)(a1 + 48) + 8);
      uint64_t v40 = *(void **)(v39 + 40);
      *(void *)(v39 + 40) = v35;
    }
  }
  id v42 = *(void **)(a1 + 40);
  uint64_t v41 = a1 + 40;
  uint64_t v43 = objc_msgSend__appendArchivedItemsToItemsArray_(v42, v2, *(void *)(*(void *)(*(void *)(v41 + 8) + 8) + 40), v4);
  uint64_t v44 = *(void *)(*(void *)(v41 + 8) + 8);
  uint64_t v45 = *(void **)(v44 + 40);
  *(void *)(v44 + 40) = v43;

  return objc_msgSend__replaceAndSortItemsWithUnsortedItems_(*(void **)v41, v46, *(void *)(*(void *)(*(void *)(v41 + 8) + 8) + 40), v47);
}

id sub_1A4C64A54(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend_itemMatchesThread_(*(void **)(a1 + 32), v4, (uint64_t)v3, v5))
  {
    uint64_t v9 = *(void **)(a1 + 40);
    uint64_t v10 = objc_msgSend_guid(v3, v6, v7, v8);
    objc_msgSend_addObject_(v9, v11, (uint64_t)v10, v12);

    id v13 = v3;
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

uint64_t sub_1A4C65898(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__setTimeAdded_(a2, (const char *)a2, *(void *)(a1 + 32), a4);
}

void sub_1A4C669DC(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4C668E4);
  }
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(exc_buf);
}

void sub_1A4C66A30(uint64_t a1, const char *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = objc_msgSend_objectForKey_(*(void **)(a1 + 32), a2, (uint64_t)a2, (uint64_t)a4);

  if (!v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_1A4C66A8C(uint64_t a1, const char *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = objc_msgSend_objectForKey_(*(void **)(a1 + 32), a2, (uint64_t)a2, (uint64_t)a4);

  if (!v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

uint64_t sub_1A4C672A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v68 = a3;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v5 = v68;
  if (isKindOfClass)
  {
    id v6 = v68;
    id v13 = objc_msgSend_clientSendTime(v6, v7, v8, v9);
    if (v13) {
      objc_msgSend_clientSendTime(v6, v10, v11, v12);
    }
    else {
    uint64_t v14 = objc_msgSend_time(v6, v10, v11, v12);
    }

    objc_msgSend_timeIntervalSinceReferenceDate(v14, v15, v16, v17);
    uint64_t v22 = *(void *)(*(void *)(a1 + 40) + 8);
    double v23 = *(double *)(v22 + 24);
    if (v23 == 0.0)
    {
      *(double *)(v22 + 24) = v21;
      uint64_t v22 = *(void *)(*(void *)(a1 + 40) + 8);
      double v23 = *(double *)(v22 + 24);
    }
    if (v21 <= v23) {
      *(double *)(v22 + 24) = v21;
    }
    if (objc_msgSend_isSent(v6, v18, v19, v20)
      && (objc_msgSend_isLocatingMessage(v6, v24, v25, v26) & 1) == 0)
    {
      uint64_t v30 = *(void *)(a1 + 48);
      goto LABEL_16;
    }
    if (objc_msgSend_errorCode(v6, v24, v25, v26))
    {
      uint64_t v30 = *(void *)(a1 + 56);
LABEL_16:
      ++*(void *)(*(void *)(v30 + 8) + 24);
LABEL_22:

      id v5 = v68;
      goto LABEL_23;
    }
    id v31 = objc_msgSend_fileTransferGUIDs(v6, v27, v28, v29);
    if (objc_msgSend_count(v31, v32, v33, v34))
    {
    }
    else
    {
      char isLocatingMessage = objc_msgSend_isLocatingMessage(v6, v35, v36, v37);

      if ((isLocatingMessage & 1) == 0)
      {
        ++*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24);
        objc_msgSend_timeIntervalSinceReferenceDate(*(void **)(a1 + 32), v38, v39, v40);
        double v58 = v57;
        uint64_t v62 = objc_msgSend_time(v6, v59, v60, v61);
        objc_msgSend_timeIntervalSinceReferenceDate(v62, v63, v64, v65);
        double v52 = v58 - v66;

        double v53 = 7.0;
        goto LABEL_19;
      }
    }
    ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
    objc_msgSend_timeIntervalSinceReferenceDate(*(void **)(a1 + 32), v38, v39, v40);
    double v43 = v42;
    uint64_t v47 = objc_msgSend_time(v6, v44, v45, v46);
    objc_msgSend_timeIntervalSinceReferenceDate(v47, v48, v49, v50);
    double v52 = v43 - v51;

    double v53 = 30.0;
LABEL_19:
    double v54 = v52 / v53;
    if (v54 > 0.899999976) {
      double v54 = 0.899999976;
    }
    uint64_t v55 = *(void *)(*(void *)(a1 + 72) + 8);
    float v56 = v54 + *(float *)(v55 + 24);
    *(float *)(v55 + 24) = v56;
    goto LABEL_22;
  }
LABEL_23:

  return MEMORY[0x1F41817F8](isKindOfClass, v5);
}

void _IMAppendChatItemsForItemForTesting(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = (void *)MEMORY[0x1E4F6E778];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = sub_1A4C675C0;
  v13[3] = &unk_1E5B7BE70;
  id v14 = v5;
  id v15 = v6;
  id v16 = v7;
  id v9 = v7;
  id v10 = v6;
  id v11 = v5;
  objc_msgSend_testWithFeature_enabled_block_(v8, v12, (uint64_t)sel_isTranscriptSharingEnabled, 0, v13);
}

void sub_1A4C675C0(void **a1)
{
}

void _IMAppendChatItemsForItem(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v11 = a1;
  unint64_t v10 = objc_msgSend_count(v11, v7, v8, v9);
  sub_1A4C67654(v11, v6, v10, 0, v5);
}

void sub_1A4C67654(void *a1, void *a2, unint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v13 = a5;
  if (v13)
  {
    if (a3)
    {
      id v14 = objc_msgSend_objectAtIndex_(v9, v11, a3 - 1, v12);
      id v18 = objc_msgSend__parentItem(v14, v15, v16, v17);
    }
    else
    {
      id v18 = 0;
    }
    if (a3 + a4)
    {
      uint64_t v34 = objc_msgSend_objectAtIndex_(v9, v11, a3 + a4 - 1, v12);
      uint64_t v38 = objc_msgSend__parentItem(v34, v35, v36, v37);
    }
    else
    {
      uint64_t v38 = 0;
    }
    uint64_t v39 = objc_msgSend__chatItemsForItem_previousItem_(v10, v11, (uint64_t)v13, (uint64_t)v18);
    if (!objc_msgSend_count(v39, v40, v41, v42))
    {
      uint64_t v46 = IMLogHandleForCategory();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
        sub_1A4CBA084((uint64_t)v13, (uint64_t)v18, v46);
      }
    }
    uint64_t v47 = objc_msgSend__items(v10, v43, v44, v45);
    uint64_t v51 = objc_msgSend_count(v47, v48, v49, v50);

    if (!v51) {
      objc_msgSend__invalidateSpamIndicatorCachedValues(v10, v52, v53, v54);
    }
    objc_msgSend_replaceObjectsInRange_withObjectsFromArray_(v9, v52, a3, a4, v39);
    unint64_t v58 = objc_msgSend_count(v39, v55, v56, v57) + a3;
    if (v58 < objc_msgSend_count(v9, v59, v60, v61))
    {
      uint64_t v64 = objc_msgSend_objectAtIndex_(v9, v62, v58, v63);
      id v68 = objc_msgSend__parentItem(v64, v65, v66, v67);

      if (objc_msgSend__shouldRegenerateChatItemsForItem_previousItem_oldPreviousItem_(v10, v69, (uint64_t)v68, (uint64_t)v13, v38))sub_1A4C69A68(v9, v10, v58); {
    }
      }
  }
  else
  {
    id v18 = 0;
    if (a3 != 0x7FFFFFFFFFFFFFFFLL && a3 + a4)
    {
      uint64_t v19 = objc_msgSend_objectAtIndex_(v9, v11, a3 + a4 - 1, v12);
      id v18 = objc_msgSend__parentItem(v19, v20, v21, v22);
    }
    objc_msgSend_removeObjectsInRange_(v9, v11, a3, a4);
    if (a3 < objc_msgSend_count(v9, v23, v24, v25))
    {
      if (a3)
      {
        uint64_t v29 = objc_msgSend_objectAtIndex_(v9, v26, a3 - 1, v28);
        uint64_t v33 = objc_msgSend__parentItem(v29, v30, v31, v32);
      }
      else
      {
        uint64_t v33 = 0;
      }
      if (a3 >= objc_msgSend_count(v9, v26, v27, v28))
      {
        uint64_t v76 = 0;
      }
      else
      {
        long long v72 = objc_msgSend_objectAtIndex_(v9, v70, a3, v71);
        uint64_t v76 = objc_msgSend__parentItem(v72, v73, v74, v75);
      }
      if (objc_msgSend__shouldRegenerateChatItemsForItem_previousItem_oldPreviousItem_(v10, v70, (uint64_t)v76, (uint64_t)v33, v18))
      {
        sub_1A4C69A68(v9, v10, a3);
        if (sub_1A4C69BA8(v76))
        {
          unint64_t v80 = a3 + 1;
          if (v80 < objc_msgSend_count(v9, v77, v78, v79)) {
            sub_1A4C69A68(v9, v10, v80);
          }
        }
      }
    }
  }
}

void _IMInsertChatItemsForItem(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v11 = objc_msgSend_messageID(v7, v8, v9, v10);
  if (v11)
  {
    uint64_t v17 = 0;
    id v18 = &v17;
    uint64_t v19 = 0x2020000000;
    uint64_t v20 = 0;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 3221225472;
    v16[2] = sub_1A4C67A98;
    v16[3] = &unk_1E5B7F248;
    v16[4] = &v17;
    v16[5] = v11;
    objc_msgSend_enumerateObjectsWithOptions_usingBlock_(v5, v12, 2, (uint64_t)v16);
    sub_1A4C67654(v5, v6, v18[3], 0, v7);
    _Block_object_dispose(&v17, 8);
  }
  else
  {
    unint64_t v15 = objc_msgSend_count(v5, v12, v13, v14);
    sub_1A4C67654(v5, v6, v15, 0, v7);
  }
}

void sub_1A4C67A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C67A98(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = objc_msgSend__parentItem(a2, (const char *)a2, a3, (uint64_t)a4);
  uint64_t v11 = objc_msgSend_messageID(v7, v8, v9, v10);

  if (v11)
  {
    if (v11 <= *(void *)(a1 + 40))
    {
      *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3 + 1;
      *a4 = 1;
    }
  }
}

void _IMRemoveChatItemsForItemForTesting(void *a1, void *a2, void *a3)
{
}

void _IMRemoveChatItemsForItem(void *a1, void *a2, void *a3)
{
}

void _IMReplaceChatItemsForItem(void *a1, void *a2, void *a3, void *a4)
{
  id v16 = a1;
  id v7 = a2;
  id v8 = a4;
  id v9 = a3;
  objc_msgSend_count(v16, v10, v11, v12);
  unint64_t v13 = sub_1A4C67BF0(v16, v9);
  uint64_t v15 = v14;

  if (v13 != 0x7FFFFFFFFFFFFFFFLL) {
    sub_1A4C67654(v16, v7, v13, v15, v8);
  }
}

uint64_t sub_1A4C67BF0(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x3010000000;
  uint64_t v14 = "";
  long long v15 = xmmword_1A4CD0D30;
  v9[0] = 0;
  v9[1] = v9;
  id v9[2] = 0x3032000000;
  v9[3] = sub_1A4B3460C;
  void v9[4] = sub_1A4B343EC;
  id v10 = 0;
  v7[0] = 0;
  v7[1] = v7;
  v7[2] = 0x3032000000;
  v7[3] = sub_1A4B3460C;
  void v7[4] = sub_1A4B343EC;
  id v8 = 0;
  id v6 = a2;
  IMEnumerateArrayInRange();
  uint64_t v4 = v12[4];

  _Block_object_dispose(v7, 8);
  _Block_object_dispose(v9, 8);

  _Block_object_dispose(&v11, 8);
  return v4;
}

void sub_1A4C67DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Unwind_Resume(a1);
}

void _IMRemoveChatItemsInRange(void *a1, void *a2, unint64_t a3, uint64_t a4)
{
}

void _IMReplaceChatItemsWithChatItemsForItemsForTesting(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = (void *)MEMORY[0x1E4F6E778];
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = sub_1A4C67ED4;
  v13[3] = &unk_1E5B7BE70;
  id v14 = v5;
  id v15 = v6;
  id v16 = v7;
  id v9 = v7;
  id v10 = v6;
  id v11 = v5;
  objc_msgSend_testWithFeature_enabled_block_(v8, v12, (uint64_t)sel_isTranscriptSharingEnabled, 0, v13);
}

void sub_1A4C67ED4(void **a1)
{
}

void _IMReplaceChatItemsWithChatItemsForItems(void *a1, void *a2, void *a3)
{
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  objc_msgSend___imItems(v5, v8, v9, v10);
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_count(v7, v12, v13, v14))
  {
    if (objc_msgSend_count(v11, v15, v16, v17))
    {
      if (v11)
      {
        if (!v7) {
          goto LABEL_16;
        }
      }
      else
      {
        objc_msgSend_array(MEMORY[0x1E4F1CA48], v18, v19, v20);
        id v11 = (id)objc_claimAutoreleasedReturnValue();
        if (!v7)
        {
LABEL_16:
          objc_msgSend_array(MEMORY[0x1E4F1CA48], v18, v19, v20);
          id v7 = (id)objc_claimAutoreleasedReturnValue();
        }
      }
      uint64_t v27 = objc_msgSend_differenceFromArray_withOptions_usingEquivalenceTest_(v7, v18, (uint64_t)v11, 0, &unk_1EF8E58B8);
      id v62 = 0;
      id v63 = 0;
      IMIndexesFromOrderedCollectionDifference(v27, &v63, &v62);
      id v28 = v63;
      id v29 = v62;
      v58[0] = MEMORY[0x1E4F143A8];
      v58[1] = 3221225472;
      v58[2] = sub_1A4C68310;
      v58[3] = &unk_1E5B7F270;
      id v11 = v11;
      id v59 = v11;
      id v30 = v5;
      id v60 = v30;
      id v31 = v6;
      id v61 = v31;
      objc_msgSend_enumerateRangesUsingBlock_(v29, v32, (uint64_t)v58, v33);
      uint64_t v37 = objc_msgSend_mutableCopy(v11, v34, v35, v36);
      objc_msgSend_removeObjectsAtIndexes_(v37, v38, (uint64_t)v29, v39);
      uint64_t v48 = v27;
      v57[0] = 0;
      v57[1] = v57;
      v57[2] = 0x2020000000;
      v57[3] = 0;
      uint64_t v43 = objc_msgSend_count(v37, v40, v41, v42);
      v49[0] = MEMORY[0x1E4F143A8];
      v49[1] = 3221225472;
      v49[2] = sub_1A4C68464;
      os_log_t v49[3] = &unk_1E5B7F298;
      id v44 = v28;
      id v50 = v44;
      uint64_t v56 = v43;
      id v45 = v37;
      id v51 = v45;
      id v52 = v30;
      uint64_t v55 = v57;
      id v53 = v31;
      id v7 = v7;
      id v54 = v7;
      objc_msgSend_enumerateRangesUsingBlock_(v44, v46, (uint64_t)v49, v47);

      _Block_object_dispose(v57, 8);
      goto LABEL_18;
    }
    long long v66 = 0u;
    long long v67 = 0u;
    long long v64 = 0u;
    long long v65 = 0u;
    id v7 = v7;
    uint64_t v23 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v22, (uint64_t)&v64, (uint64_t)v68, 16);
    if (v23)
    {
      uint64_t v24 = *(void *)v65;
      do
      {
        uint64_t v25 = 0;
        do
        {
          if (*(void *)v65 != v24) {
            objc_enumerationMutation(v7);
          }
          _IMAppendChatItemsForItem(v5, v6, *(void **)(*((void *)&v64 + 1) + 8 * v25++));
        }
        while (v23 != v25);
        uint64_t v23 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v26, (uint64_t)&v64, (uint64_t)v68, 16);
      }
      while (v23);
    }
  }
  else
  {
    uint64_t v21 = objc_msgSend_count(v5, v15, v16, v17);
    sub_1A4C67654(v5, v6, 0, v21, 0);
  }
LABEL_18:
}

void sub_1A4C68280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C682A0(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v8 = objc_msgSend_guid(a2, v5, v6, v7);
  uint64_t v12 = objc_msgSend_guid(v4, v9, v10, v11);

  uint64_t isEqualToString = objc_msgSend_isEqualToString_(v8, v13, (uint64_t)v12, v14);
  return isEqualToString;
}

void sub_1A4C68310(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v9 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), v7, (uint64_t)&a2[a3 - 1], v8);
  uint64_t v10 = *(void **)(a1 + 40);
  uint64_t v11 = *(void **)(a1 + 48);
  unint64_t v12 = sub_1A4C683B8(v10, v14, v9);
  sub_1A4C67654(v10, v11, v12, v13, 0);
}

uint64_t sub_1A4C683B8(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  id v7 = a2;
  objc_msgSend_count(v5, v8, v9, v10);
  uint64_t v11 = sub_1A4C67BF0(v5, v7);

  if (v7 != v6) {
    sub_1A4C67BF0(v5, v6);
  }

  return v11;
}

void sub_1A4C68464(uint64_t a1, const char *a2, uint64_t a3)
{
  unint64_t v7 = (unint64_t)&a2[a3 - objc_msgSend_countOfIndexesInRange_(*(void **)(a1 + 32), a2, 0, (uint64_t)&a2[a3])];
  if (v7 >= *(void *)(a1 + 80))
  {
    *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = objc_msgSend_count(*(void **)(a1 + 48), v6, v7, v8);
  }
  else
  {
    uint64_t v9 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 40), v6, v7, v8);
    uint64_t v10 = *(void **)(a1 + 48);
    objc_msgSend_count(v10, v11, v12, v13);
    *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = sub_1A4C67BF0(v10, v9);
  }
  id v15 = *(void **)(a1 + 48);
  uint64_t v16 = *(void **)(a1 + 56);
  objc_msgSend_subarrayWithRange_(*(void **)(a1 + 64), v14, (uint64_t)a2, a3);
  id v17 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) += sub_1A4C68598(v15, v16, v17, *(void *)(*(void *)(*(void *)(a1 + 72) + 8)+ 24));
}

uint64_t sub_1A4C68598(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v11 = a3;
  uint64_t v57 = a4;
  if (a4 - 1 < 0)
  {
LABEL_5:
    id v17 = 0;
  }
  else
  {
    uint64_t v12 = a4;
    while (1)
    {
      uint64_t v13 = objc_msgSend_objectAtIndex_(v7, v9, --v12, v10, v57);
      id v17 = objc_msgSend__parentItem(v13, v14, v15, v16);

      if (v17) {
        break;
      }
      if (v12 <= 0) {
        goto LABEL_5;
      }
    }
  }
  id v18 = v17;
  id v19 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  id v20 = v11;
  uint64_t v22 = objc_msgSend_countByEnumeratingWithState_objects_count_(v20, v21, (uint64_t)&v59, (uint64_t)v63, 16);
  unint64_t v58 = v18;
  if (v22)
  {
    uint64_t v24 = v22;
    uint64_t v25 = *(void *)v60;
    do
    {
      for (uint64_t i = 0; i != v24; ++i)
      {
        if (*(void *)v60 != v25) {
          objc_enumerationMutation(v20);
        }
        uint64_t v27 = *(void **)(*((void *)&v59 + 1) + 8 * i);
        id v28 = objc_msgSend__chatItemsForItem_previousItem_(v8, v23, (uint64_t)v27, (uint64_t)v18, v57);
        if (objc_msgSend_count(v28, v29, v30, v31))
        {
          objc_msgSend_addObjectsFromArray_(v19, v32, (uint64_t)v28, v33);
          id v34 = v27;

          id v18 = v34;
        }
      }
      uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v20, v23, (uint64_t)&v59, (uint64_t)v63, 16);
    }
    while (v24);
  }

  objc_msgSend_replaceObjectsInRange_withObjectsFromArray_(v7, v35, v57, 0, v19);
  unint64_t v39 = objc_msgSend_count(v19, v36, v37, v38) + v57;
  if (v39 < objc_msgSend_count(v7, v40, v41, v42))
  {
    uint64_t v46 = objc_msgSend_objectAtIndex_(v7, v43, v39, v45);
    id v50 = objc_msgSend__parentItem(v46, v47, v48, v49);

    if (objc_msgSend__shouldRegenerateChatItemsForItem_previousItem_oldPreviousItem_(v8, v51, (uint64_t)v50, (uint64_t)v18, v58))
    {
      sub_1A4C69A68(v7, v8, v39);
      if (sub_1A4C69BA8(v50))
      {
        if (v39 < objc_msgSend_count(v7, v52, v53, v54)) {
          sub_1A4C69A68(v7, v8, v39);
        }
      }
    }
  }
  uint64_t v55 = objc_msgSend_count(v19, v43, v44, v45, v57);

  return v55;
}

BOOL _IMScheduledMessageShouldBePinnedToBottom(void *a1)
{
  id v1 = a1;
  if (objc_msgSend_scheduleType(v1, v2, v3, v4) != 2) {
    goto LABEL_5;
  }
  uint64_t v8 = objc_msgSend_scheduleState(v1, v5, v6, v7);
  if ((unint64_t)(v8 - 1) < 2)
  {
    BOOL v19 = 1;
    goto LABEL_7;
  }
  if ((unint64_t)(v8 - 4) <= 1)
  {
    uint64_t v12 = objc_msgSend_time(v1, v9, v10, v11);
    uint64_t v16 = objc_msgSend_now(MEMORY[0x1E4F1C9C8], v13, v14, v15);
    BOOL v19 = objc_msgSend_compare_(v12, v17, (uint64_t)v16, v18) == 1;
  }
  else
  {
LABEL_5:
    BOOL v19 = 0;
  }
LABEL_7:

  return v19;
}

void _IMChatItemsReplaceWithChatItemsForItems(void *a1, void *a2, void *a3)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v118 = a3;
  objc_msgSend__items(v6, v7, v8, v9);
  id v117 = (id)objc_claimAutoreleasedReturnValue();
  BOOL v13 = objc_msgSend_count(v117, v10, v11, v12) == 0;
  id v17 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v14, v15, v16);
  int isScheduledMessagesEnabled = objc_msgSend_isScheduledMessagesEnabled(v17, v18, v19, v20);

  if (((isScheduledMessagesEnabled ^ 1 | v13) & 1) == 0)
  {
    *(void *)long long buf = 0;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000;
    LOBYTE(v157) = 0;
    v150[0] = MEMORY[0x1E4F143A8];
    v150[1] = 3221225472;
    v150[2] = sub_1A4C690F0;
    v150[3] = &unk_1E5B7E880;
    id v151 = v5;
    unsigned int v152 = buf;
    objc_msgSend_enumerateObjectsWithOptions_usingBlock_(v151, v24, 2, (uint64_t)v150);
    BOOL v13 = *(unsigned char *)(*(void *)&buf[8] + 24) != 0;

    _Block_object_dispose(buf, 8);
  }
  objc_msgSend__setItems_(v6, v22, (uint64_t)v118, v23);
  if (IMOSLoggingEnabled())
  {
    id v28 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      uint64_t v32 = NSNumber;
      uint64_t v33 = objc_msgSend_count(v117, v29, v30, v31);
      uint64_t v36 = objc_msgSend_numberWithUnsignedInteger_(v32, v34, v33, v35);
      uint64_t v37 = NSNumber;
      uint64_t v41 = objc_msgSend_count(v118, v38, v39, v40);
      uint64_t v44 = objc_msgSend_numberWithUnsignedInteger_(v37, v42, v41, v43);
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v36;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v44;
      _os_log_impl(&dword_1A4AF7000, v28, OS_LOG_TYPE_INFO, "_IMChatItemsReplaceWithChatItemsForItems oldMessages.count: %@ newMessages.count: %@", buf, 0x16u);
    }
  }
  if (objc_msgSend_count(v118, v25, v26, v27))
  {
    uint64_t v48 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v45, v46, v47);
    int isCarrierPigeonEnabled = objc_msgSend_isCarrierPigeonEnabled(v48, v49, v50, v51);

    if (isCarrierPigeonEnabled)
    {
      sub_1A4C691B8(v5);
      sub_1A4C6934C(v5);
    }
    if (v13)
    {
      objc_msgSend_removeAllObjects(v5, v53, v54, v55);
      long long v59 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v56, v57, v58);
      int v63 = objc_msgSend_isScheduledMessagesEnabled(v59, v60, v61, v62);

      if (v63)
      {
        id v64 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        long long v148 = 0u;
        long long v149 = 0u;
        long long v146 = 0u;
        long long v147 = 0u;
        id v65 = v118;
        uint64_t v67 = objc_msgSend_countByEnumeratingWithState_objects_count_(v65, v66, (uint64_t)&v146, (uint64_t)v155, 16);
        if (!v67) {
          goto LABEL_24;
        }
        uint64_t v68 = *(void *)v147;
        while (1)
        {
          uint64_t v69 = 0;
          do
          {
            if (*(void *)v147 != v68) {
              objc_enumerationMutation(v65);
            }
            uint64_t v70 = *(void **)(*((void *)&v146 + 1) + 8 * v69);
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              id v71 = v70;
              if (_IMScheduledMessageShouldBePinnedToBottom(v71))
              {
                objc_msgSend_addObject_(v64, v72, (uint64_t)v71, v73);

                goto LABEL_22;
              }
            }
            _IMAppendChatItemsForItem(v5, v6, v70);
LABEL_22:
            ++v69;
          }
          while (v67 != v69);
          uint64_t v67 = objc_msgSend_countByEnumeratingWithState_objects_count_(v65, v74, (uint64_t)&v146, (uint64_t)v155, 16);
          if (!v67)
          {
LABEL_24:

            long long v144 = 0u;
            long long v145 = 0u;
            long long v142 = 0u;
            long long v143 = 0u;
            uint64_t v77 = objc_msgSend_sortedArrayUsingComparator_(v64, v75, (uint64_t)&unk_1EF8E3F70, v76);
            uint64_t v79 = objc_msgSend_countByEnumeratingWithState_objects_count_(v77, v78, (uint64_t)&v142, (uint64_t)v154, 16);
            if (v79)
            {
              uint64_t v80 = *(void *)v143;
              do
              {
                uint64_t v81 = 0;
                do
                {
                  if (*(void *)v143 != v80) {
                    objc_enumerationMutation(v77);
                  }
                  _IMAppendChatItemsForItem(v5, v6, *(void **)(*((void *)&v142 + 1) + 8 * v81++));
                }
                while (v79 != v81);
                uint64_t v79 = objc_msgSend_countByEnumeratingWithState_objects_count_(v77, v82, (uint64_t)&v142, (uint64_t)v154, 16);
              }
              while (v79);
            }

            goto LABEL_47;
          }
        }
      }
      long long v140 = 0u;
      long long v141 = 0u;
      long long v138 = 0u;
      long long v139 = 0u;
      id v64 = v118;
      uint64_t v112 = objc_msgSend_countByEnumeratingWithState_objects_count_(v64, v111, (uint64_t)&v138, (uint64_t)v153, 16);
      if (v112)
      {
        uint64_t v113 = *(void *)v139;
        do
        {
          uint64_t v114 = 0;
          do
          {
            if (*(void *)v139 != v113) {
              objc_enumerationMutation(v64);
            }
            _IMAppendChatItemsForItem(v5, v6, *(void **)(*((void *)&v138 + 1) + 8 * v114++));
          }
          while (v112 != v114);
          uint64_t v112 = objc_msgSend_countByEnumeratingWithState_objects_count_(v64, v115, (uint64_t)&v138, (uint64_t)v153, 16);
        }
        while (v112);
      }
LABEL_47:

      sub_1A4C69478(v5);
    }
    else
    {
      if (!v117)
      {
        objc_msgSend_array(MEMORY[0x1E4F1CA48], v53, v54, v55);
        id v117 = (id)objc_claimAutoreleasedReturnValue();
      }
      uint64_t v84 = v118;
      if (!v118)
      {
        uint64_t v84 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v53, v54, v55);
      }
      uint64_t v85 = v84;
      uint64_t v86 = objc_msgSend_differenceFromArray_withOptions_usingEquivalenceTest_(v84, v53, (uint64_t)v117, 0, &unk_1EF8E5CB8);
      id v136 = 0;
      id v137 = 0;
      IMIndexesFromOrderedCollectionDifference(v86, &v137, &v136);
      id v87 = v137;
      id v88 = v136;
      v132[0] = MEMORY[0x1E4F143A8];
      v132[1] = 3221225472;
      v132[2] = sub_1A4C69540;
      v132[3] = &unk_1E5B7F270;
      id v89 = v5;
      id v133 = v89;
      id v117 = v117;
      id v134 = v117;
      id v90 = v6;
      id v135 = v90;
      objc_msgSend_enumerateRangesUsingBlock_(v88, v91, (uint64_t)v132, v92);
      long long v96 = objc_msgSend_mutableCopy(v117, v93, v94, v95);
      objc_msgSend_removeObjectsAtIndexes_(v96, v97, (uint64_t)v88, v98);
      id v116 = v88;
      *(void *)long long buf = 0;
      *(void *)&uint8_t buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x2020000000;
      uint64_t v157 = 0;
      uint64_t v102 = objc_msgSend_count(v96, v99, v100, v101);
      v124[0] = MEMORY[0x1E4F143A8];
      v124[1] = 3221225472;
      v124[2] = sub_1A4C69708;
      v124[3] = &unk_1E5B7F298;
      id v103 = v87;
      id v125 = v103;
      uint64_t v131 = v102;
      id v104 = v96;
      id v126 = v104;
      id v105 = v89;
      id v127 = v105;
      uint64_t v130 = buf;
      id v128 = v90;
      id v106 = v85;
      id v129 = v106;
      objc_msgSend_enumerateRangesUsingBlock_(v103, v107, (uint64_t)v124, v108);
      uint64_t v120 = 0;
      long long v121 = &v120;
      uint64_t v122 = 0x2020000000;
      char v123 = 0;
      id v118 = v106;
      v119[0] = MEMORY[0x1E4F143A8];
      v119[1] = 3221225472;
      v119[2] = sub_1A4C6988C;
      v119[3] = &unk_1E5B7BC38;
      v119[4] = &v120;
      objc_msgSend_enumerateObjectsUsingBlock_(v106, v109, (uint64_t)v119, v110);
      if (*((unsigned char *)v121 + 24)) {
        sub_1A4C69478(v105);
      }
      _Block_object_dispose(&v120, 8);

      _Block_object_dispose(buf, 8);
    }
  }
  else
  {
    uint64_t v83 = objc_msgSend_count(v5, v45, v46, v47);
    sub_1A4C67654(v5, v6, 0, v83, 0);
  }
}

void sub_1A4C69098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C690F0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v20 = a2;
  uint64_t isKindOfClass = objc_msgSend_count(*(void **)(a1 + 32), v7, v8, v9);
  if ((unint64_t)(isKindOfClass - a3) > 0x31) {
    goto LABEL_5;
  }
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v13 = v20;
  if (isKindOfClass)
  {
    uint64_t v14 = objc_msgSend_messageItem(v20, (const char *)v20, v11, v12);
    uint64_t v18 = objc_msgSend_scheduleType(v14, v15, v16, v17);

    id v13 = v20;
    if (v18 == 2)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
LABEL_5:
      *a4 = 1;
      id v13 = v20;
    }
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v13);
}

void sub_1A4C691B8(void *a1)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v5 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v2, v3, v4);
  int isCarrierPigeonEnabled = objc_msgSend_isCarrierPigeonEnabled(v5, v6, v7, v8);

  if (isCarrierPigeonEnabled)
  {
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v13 = objc_msgSend_reverseObjectEnumerator(v1, v10, v11, v12, 0);
    uint64_t v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v30, (uint64_t)v34, 16);
    if (v15)
    {
      uint64_t v16 = v15;
      char v17 = 0;
      uint64_t v18 = *(void *)v31;
      while (2)
      {
        for (uint64_t i = 0; i != v16; ++i)
        {
          if (*(void *)v31 != v18) {
            objc_enumerationMutation(v13);
          }
          id v20 = *(void **)(*((void *)&v30 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v22 = v20;
            uint64_t v26 = objc_msgSend_statusType(v22, v23, v24, v25);
            if (((v26 == 33) & v17) == 1)
            {
              objc_msgSend_removeObject_(v1, v27, (uint64_t)v22, v28);

              goto LABEL_15;
            }
            uint64_t v29 = v26;

            if (v29 != 33) {
              goto LABEL_15;
            }
            char v17 = 1;
          }
        }
        uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v21, (uint64_t)&v30, (uint64_t)v34, 16);
        if (v16) {
          continue;
        }
        break;
      }
    }
LABEL_15:
  }
}

void sub_1A4C6934C(void *a1)
{
  id v21 = a1;
  uint64_t v4 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v1, v2, v3);
  int isCarrierPigeonEnabled = objc_msgSend_isCarrierPigeonEnabled(v4, v5, v6, v7);

  if (isCarrierPigeonEnabled && objc_msgSend_count(v21, v9, v10, v11))
  {
    uint64_t v15 = objc_msgSend_count(v21, v12, v13, v14) - 1;
    objc_opt_class();
    uint64_t v18 = objc_msgSend_objectAtIndex_(v21, v16, v15, v17);
    if (objc_opt_isKindOfClass()) {
      objc_msgSend_removeObject_(v21, v19, (uint64_t)v18, v20);
    }
  }
}

uint64_t sub_1A4C69408(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v8 = objc_msgSend_time(a2, v5, v6, v7);
  uint64_t v12 = objc_msgSend_time(v4, v9, v10, v11);

  uint64_t v15 = objc_msgSend_compare_(v8, v13, (uint64_t)v12, v14);
  return v15;
}

void sub_1A4C69478(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E60]);
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 3221225472;
  uint64_t v11 = sub_1A4C69C74;
  uint64_t v12 = &unk_1E5B7E720;
  id v13 = v1;
  id v14 = v2;
  id v3 = v2;
  id v4 = v1;
  objc_msgSend_enumerateObjectsUsingBlock_(v4, v5, (uint64_t)&v9, v6);
  objc_msgSend_removeObjectsAtIndexes_(v4, v7, (uint64_t)v3, v8, v9, v10, v11, v12);
}

BOOL sub_1A4C69534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2 == a3;
}

void sub_1A4C69540(void **a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  v30[1] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = objc_msgSend_count(a1[4], a2, a3, a4);
  unint64_t v10 = v7;
  uint64_t v11 = v4 - 1;
  if (v4 == 1)
  {
    uint64_t v12 = a1[4];
    id v13 = objc_msgSend_objectAtIndex_(a1[5], v8, (uint64_t)a2, v9);
    unint64_t v14 = sub_1A4C67BF0(v12, v13);
    unint64_t v16 = v15;
  }
  else
  {
    MEMORY[0x1F4188790](v7);
    uint64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    bzero(v18, v17);
    objc_msgSend_getObjects_range_(a1[5], v19, (uint64_t)v18, (uint64_t)a2, v4);
    uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
    if (v4)
    {
      id v21 = (void **)v18;
      do
      {
        id v22 = *v21++;
        uint64_t v23 = sub_1A4C67BF0(a1[4], v22);
      }
      while (v23 == 0x7FFFFFFFFFFFFFFFLL && v11-- != 0);
      unint64_t v14 = v23;
      uint64_t v25 = v18 - 8;
      while (1)
      {
        uint64_t v26 = sub_1A4C67BF0(a1[4], *(void **)&v25[8 * v4]);
        if (v26 != 0x7FFFFFFFFFFFFFFFLL) {
          break;
        }
        if (!--v4)
        {
          uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_16;
        }
      }
      uint64_t v20 = v26;
    }
    else
    {
      uint64_t v27 = 0;
      unint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
    }
LABEL_16:
    unint64_t v16 = v20 - v14 + v27;
  }
  if (v14 != 0x7FFFFFFFFFFFFFFFLL && v16 <= v10 && v14 + v16 <= v10) {
    sub_1A4C67654(a1[4], a1[6], v14, v16, 0);
  }
}

void sub_1A4C69708(uint64_t a1, const char *a2, uint64_t a3)
{
  unint64_t v9 = (unint64_t)&a2[a3 - objc_msgSend_countOfIndexesInRange_(*(void **)(a1 + 32), a2, 0, (uint64_t)&a2[a3])];
  if (v9 >= *(void *)(a1 + 80))
  {
    *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = objc_msgSend_count(*(void **)(a1 + 48), v6, v7, v8);
  }
  else
  {
    unint64_t v10 = 0;
    while (v9 < *(void *)(a1 + 80))
    {
      uint64_t v11 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 40), v6, v9, v8);

      uint64_t v12 = *(void **)(a1 + 48);
      objc_msgSend_count(v12, v13, v14, v15);
      uint64_t v16 = sub_1A4C67BF0(v12, v11);
      ++v9;
      unint64_t v10 = v11;
      if (v16 != 0x7FFFFFFFFFFFFFFFLL)
      {
        *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = v16;

        goto LABEL_8;
      }
    }
    *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = objc_msgSend_count(*(void **)(a1 + 48), v6, v7, v8);
  }
LABEL_8:
  uint64_t v18 = *(void **)(a1 + 48);
  uint64_t v19 = *(void **)(a1 + 56);
  objc_msgSend_subarrayWithRange_(*(void **)(a1 + 64), v17, (uint64_t)a2, a3);
  id v20 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) += sub_1A4C68598(v18, v19, v20, *(void *)(*(void *)(*(void *)(a1 + 72) + 8)+ 24));
}

void sub_1A4C6988C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v14 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    unint64_t v9 = objc_msgSend_replyCountsByPart(v14, v6, v7, v8);
    uint64_t v13 = objc_msgSend_count(v9, v10, v11, v12);

    if (v13 == 1)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
      *a4 = 1;
    }
  }
}

void sub_1A4C69930(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v7 = objc_msgSend__parentItem(a2, (const char *)a2, a3, (uint64_t)a4);
  if (v7 != *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    id obj = v7;
    uint64_t v11 = objc_msgSend_guid(*(void **)(a1 + 32), v8, v9, v10);
    uint64_t v15 = objc_msgSend_guid(obj, v12, v13, v14);
    int isEqualToString = objc_msgSend_isEqualToString_(v11, v16, (uint64_t)v15, v17);

    if (isEqualToString)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), obj);
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 32) = a3;
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
    uint64_t v7 = obj;
  }
  uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(void *)(v19 + 32) != 0x7FFFFFFFFFFFFFFFLL)
  {
    if (v7 == *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40)) {
      ++*(void *)(v19 + 40);
    }
    else {
      *a4 = 1;
    }
  }
}

void sub_1A4C69A68(void *a1, void *a2, unint64_t a3)
{
  id v26 = a1;
  id v8 = a2;
  if (a3)
  {
    uint64_t v9 = objc_msgSend_objectAtIndex_(v26, v5, a3 - 1, v7);
    uint64_t v13 = objc_msgSend__parentItem(v9, v10, v11, v12);
  }
  else
  {
    uint64_t v13 = 0;
  }
  if (objc_msgSend_count(v26, v5, v6, v7) <= a3)
  {
    id v21 = 0;
  }
  else
  {
    uint64_t v17 = objc_msgSend_objectAtIndex_(v26, v14, a3, v16);
    id v21 = objc_msgSend__parentItem(v17, v18, v19, v20);
  }
  objc_msgSend_count(v26, v14, v15, v16);
  uint64_t v22 = sub_1A4C67BF0(v26, v21);
  if (v22 != 0x7FFFFFFFFFFFFFFFLL) {
    objc_msgSend_removeObjectsInRange_(v26, v23, v22, (uint64_t)v23);
  }
  uint64_t v24 = objc_msgSend__chatItemsForItem_previousItem_(v8, v23, (uint64_t)v21, (uint64_t)v13);
  objc_msgSend_replaceObjectsInRange_withObjectsFromArray_(v26, v25, a3, 0, v24);
}

uint64_t sub_1A4C69BA8(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_5;
  }
  if (objc_msgSend_changeType(v1, v2, v3, v4)) {
    goto LABEL_5;
  }
  id v8 = objc_msgSend__senderHandle(v1, v5, v6, v7);
  uint64_t v12 = objc_msgSend_ID(v8, v9, v10, v11);
  uint64_t v16 = objc_msgSend__otherHandle(v1, v13, v14, v15);
  uint64_t v20 = objc_msgSend_ID(v16, v17, v18, v19);
  char isEqualToString = objc_msgSend_isEqualToString_(v12, v21, (uint64_t)v20, v22);

  if (isEqualToString) {
    uint64_t v24 = 1;
  }
  else {
LABEL_5:
  }
    uint64_t v24 = 0;

  return v24;
}

void sub_1A4C69C74(uint64_t a1, void *a2, uint64_t a3)
{
  id v32 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_count(v32, v5, v6, v7) == 1)
  {
    id v8 = v32;
    uint64_t v9 = a3 + 1;
    if (a3 + 1 >= (unint64_t)objc_msgSend_count(*(void **)(a1 + 32), v10, v11, v12))
    {
      id v17 = 0;
    }
    else
    {
      do
      {
        uint64_t v16 = objc_msgSend_objectAtIndex_(*(void **)(a1 + 32), v13, v9, v15);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          id v17 = v16;
        }
        else {
          id v17 = 0;
        }
      }
      while (++v9 < (unint64_t)objc_msgSend_count(*(void **)(a1 + 32), v18, v19, v20) && v17 == 0);
    }
    uint64_t v22 = objc_msgSend_threadIdentifier(v17, v13, v14, v15);
    id v26 = objc_msgSend_threadIdentifier(v8, v23, v24, v25);
    int isEqualToString = objc_msgSend_isEqualToString_(v22, v27, (uint64_t)v26, v28);

    if (isEqualToString) {
      objc_msgSend_addIndex_(*(void **)(a1 + 40), v30, a3, v31);
    }
  }
}

uint64_t sub_1A4C69E28()
{
  os_log_t v0 = objc_alloc_init(IMHandleAvailabilityManager);
  uint64_t v1 = qword_1EB3F2488;
  qword_1EB3F2488 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

void sub_1A4C6A5D8(uint64_t a1, void *a2)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v8 = objc_msgSend_currentStatus(v3, v5, v6, v7);
  uint64_t v12 = objc_msgSend_statusUniqueIdentifier(v8, v9, v10, v11);

  uint64_t v16 = objc_msgSend_pendingFetchesForCacheKeys(WeakRetained, v13, v14, v15);
  objc_sync_enter(v16);
  uint64_t v20 = objc_msgSend_currentCacheGeneration(WeakRetained, v17, v18, v19);
  objc_sync_exit(v16);

  if (*(void *)(a1 + 64) == v20)
  {
    uint64_t v24 = objc_msgSend_pendingFetchesForCacheKeys(WeakRetained, v21, v22, v23);
    objc_sync_enter(v24);
    uint64_t v28 = objc_msgSend_pendingFetchesForCacheKeys(WeakRetained, v25, v26, v27);
    objc_msgSend_removeObject_(v28, v29, *(void *)(a1 + 32), v30);

    objc_sync_exit(v24);
    if (v3)
    {
      id v34 = v3;
    }
    else
    {
      objc_msgSend_null(MEMORY[0x1E4F1CA98], v31, v32, v33);
      id v34 = (id)objc_claimAutoreleasedReturnValue();
    }
    uint64_t v37 = v34;
    if (IMOSLoggingEnabled())
    {
      uint64_t v41 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
      {
        uint64_t v43 = *(void *)(a1 + 32);
        uint64_t v42 = *(void **)(a1 + 40);
        int v69 = 138412802;
        uint64_t v70 = v42;
        __int16 v71 = 2112;
        uint64_t v72 = v43;
        __int16 v73 = 2112;
        uint64_t v74 = v37;
        _os_log_impl(&dword_1A4AF7000, v41, OS_LOG_TYPE_INFO, "Caching subscription for handle \"%@\" with key \"%@\" and value: %@", (uint8_t *)&v69, 0x20u);
      }
    }
    uint64_t v44 = objc_msgSend_currentSubscriptionCache(WeakRetained, v38, v39, v40);
    objc_sync_enter(v44);
    uint64_t v48 = objc_msgSend_currentSubscriptionCache(WeakRetained, v45, v46, v47);
    objc_msgSend_setObject_forKey_(v48, v49, (uint64_t)v37, *(void *)(a1 + 32));

    objc_sync_exit(v44);
    uint64_t v53 = objc_msgSend_lastKnownSubscriptionCache(WeakRetained, v50, v51, v52);
    objc_sync_enter(v53);
    uint64_t v57 = objc_msgSend_lastKnownSubscriptionCache(WeakRetained, v54, v55, v56);
    objc_msgSend_setObject_forKey_(v57, v58, (uint64_t)v37, *(void *)(a1 + 32));

    objc_sync_exit(v53);
    uint64_t v61 = *(void *)(a1 + 48);
    if (v12 == (void *)v61 || v12 && v61 && (objc_msgSend_isEqualToString_(v12, v59, v61, v60) & 1) != 0)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v62 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v62, OS_LOG_TYPE_INFO))
        {
          int v63 = *(void **)(a1 + 32);
          int v69 = 138412290;
          uint64_t v70 = v63;
          _os_log_impl(&dword_1A4AF7000, v62, OS_LOG_TYPE_INFO, "Fetched status is the same as the lask known status already returned. Not posting change notification for key: \"%@\"", (uint8_t *)&v69, 0xCu);
        }
      }
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        long long v66 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v66, OS_LOG_TYPE_INFO))
        {
          uint64_t v67 = *(void *)(a1 + 48);
          uint64_t v68 = *(void **)(a1 + 32);
          int v69 = 138412802;
          uint64_t v70 = v12;
          __int16 v71 = 2112;
          uint64_t v72 = v67;
          __int16 v73 = 2112;
          uint64_t v74 = v68;
          _os_log_impl(&dword_1A4AF7000, v66, OS_LOG_TYPE_INFO, "Fetched status %@ is different than the last known status %@. Posting change notification for key: \"%@\"", (uint8_t *)&v69, 0x20u);
        }
      }
      objc_msgSend__postNotificationForUpdatedStatusWithSubscription_(WeakRetained, v64, (uint64_t)v3, v65);
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v35 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
    {
      uint64_t v36 = *(void **)(a1 + 64);
      int v69 = 134218498;
      uint64_t v70 = v36;
      __int16 v71 = 2048;
      uint64_t v72 = v20;
      __int16 v73 = 2112;
      uint64_t v74 = v12;
      _os_log_impl(&dword_1A4AF7000, v35, OS_LOG_TYPE_INFO, "Fetched status is not current (startGeneration: %ld, endGeneration: %ld), discarding status %@.", (uint8_t *)&v69, 0x20u);
    }
  }
}

void sub_1A4C6AD88(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v5 = objc_msgSend_personalStatusSubscription(*(void **)(a1 + 32), a2, a3, a4);
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v13 = v5;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Personal status subscription: %@", buf, 0xCu);
    }
  }
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  id v9[2] = sub_1A4C6AEEC;
  v9[3] = &unk_1E5B7B220;
  id v7 = *(id *)(a1 + 40);
  id v10 = v5;
  id v11 = v7;
  id v8 = v5;
  dispatch_async(MEMORY[0x1E4F14428], v9);
}

uint64_t sub_1A4C6AEEC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1A4C6AF00(uint64_t a1, void *a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  uint64_t v6 = a3;
  if (!v6)
  {
    int v9 = IMOSLoggingEnabled();
    if (v5)
    {
      if (!v9) {
        goto LABEL_5;
      }
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        uint64_t v14 = objc_msgSend_handleString(*(void **)(a1 + 32), v11, v12, v13);
        int v19 = 138412546;
        uint64_t v20 = v14;
        __int16 v21 = 2112;
        id v22 = v5;
        _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Found status subscription for handleID: \"%@\". Subscription: %@", (uint8_t *)&v19, 0x16u);
      }
    }
    else
    {
      if (!v9) {
        goto LABEL_5;
      }
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        uint64_t v18 = objc_msgSend_handleString(*(void **)(a1 + 32), v15, v16, v17);
        int v19 = 138412290;
        uint64_t v20 = v18;
        _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Did not find status subscription for handleID: \"%@\"", (uint8_t *)&v19, 0xCu);
      }
    }

    goto LABEL_5;
  }
  id v7 = IMLogHandleForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_1A4CBA11C(a1, v6, v7, v8);
  }

LABEL_5:
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1A4C6B0C8(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C6AF7CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C6B180(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend___mainThreadPostNotificationName_object_(v6, v5, (uint64_t)IMHandleAvailabilityChangedNotification, *(void *)(a1 + 32));
}

void sub_1A4C6B6A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend_subscriptionService(*(void **)(a1 + 32), a2, a3, a4);
  int v9 = objc_msgSend_personalStatusSubscription(v5, v6, v7, v8);
  uint64_t v11 = objc_msgSend__availablityFromStatusSubscription_handleID_(*(void **)(a1 + 32), v10, (uint64_t)v9, 0);
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = sub_1A4C6B770;
  uint64_t v12[3] = &unk_1E5B7F360;
  id v13 = *(id *)(a1 + 40);
  uint64_t v14 = v11;
  dispatch_async(MEMORY[0x1E4F14428], v12);
}

uint64_t sub_1A4C6B770(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_1A4C6BAB8(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CBA24C();
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Successfully retained transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1A4C6BF30(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = IMLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CBA2D4();
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Successfully released transient subscription assertion for subscription: \"%@\" and handle: \"%@\"", (uint8_t *)&v8, 0x16u);
    }
  }
}

intptr_t sub_1A4C6F658(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_copy(a2, (const char *)a2, a3, a4);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  int v8 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v8);
}

void *sub_1A4C6FCC0()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("_IMDChatRecordBulkCopy", @"IMDPersistence");
  off_1E965EB38 = result;
  return result;
}

void *sub_1A4C6FCF0()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDChatRecordCopyHandles", @"IMDPersistence");
  off_1E965EB48 = result;
  return result;
}

id sub_1A4C6FD20(void *isMe)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t Identifier = IMDHandleRecordGetIdentifier();
  if (IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134217984;
      uint64_t v14 = Identifier;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Beginning _IMSPIHandleFromRecord for handle record ID: %lld", buf, 0xCu);
    }
  }
  if (isMe)
  {
    if (qword_1E965DED8[0] != -1) {
      dispatch_once(qword_1E965DED8, &unk_1EF8E69E8);
    }
    CFTypeRef cf = 0;
    CFStringRef theString = 0;
    CFTypeRef v10 = 0;
    off_1E965E4F8(isMe, &cf, &v10, 0, &theString, 0);
    if (theString && CFStringGetLength(theString) > 0) {
      p_CFStringRef theString = (uint64_t *)&theString;
    }
    else {
      p_CFStringRef theString = (uint64_t *)&cf;
    }
    uint64_t v5 = *p_theString;
    uint64_t v6 = [IMSPIHandle alloc];
    isMe = objc_msgSend_initWithAddress_countryCode_isMe_(v6, v7, v5, (uint64_t)v10, 0);
    if (theString)
    {
      CFRelease(theString);
      CFStringRef theString = 0;
    }
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (v10)
    {
      CFRelease(v10);
      CFTypeRef v10 = 0;
    }
    if (IMOSLoggingEnabled())
    {
      int v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v14 = (uint64_t)isMe;
        _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Completed _IMSPIHandleFromRecord with handle: %@", buf, 0xCu);
      }
    }
  }

  return isMe;
}

void sub_1A4C70D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

dispatch_queue_t sub_1A4C70D74(dispatch_qos_class_t qos_class)
{
  uint64_t v1 = "com.apple.messages.imcore.spi.default";
  id v2 = "com.apple.messages.imcore.spi.userinitiated";
  id v3 = "com.apple.messages.imcore.spi.userinteractive";
  if (qos_class != QOS_CLASS_USER_INTERACTIVE) {
    id v3 = 0;
  }
  if (qos_class != QOS_CLASS_USER_INITIATED) {
    id v2 = v3;
  }
  if (qos_class != QOS_CLASS_DEFAULT) {
    uint64_t v1 = v2;
  }
  uint64_t v4 = "com.apple.messages.imcore.spi.qos-unspecified";
  uint64_t v5 = "com.apple.messages.imcore.spi.background";
  uint64_t v6 = "com.apple.messages.imcore.spi.utility";
  if (qos_class != QOS_CLASS_UTILITY) {
    uint64_t v6 = 0;
  }
  if (qos_class != QOS_CLASS_BACKGROUND) {
    uint64_t v5 = v6;
  }
  if (qos_class) {
    uint64_t v4 = v5;
  }
  if ((int)qos_class <= 20) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v1;
  }
  int v8 = dispatch_queue_attr_make_with_qos_class(MEMORY[0x1E4F14430], qos_class, 0);
  dispatch_queue_t v9 = dispatch_queue_create(v7, v8);

  return v9;
}

BOOL IMSPIQueryChatWithGuid(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v13 = v9;
  if (v9)
  {
    uint64_t v14 = objc_msgSend_copy(v9, v10, v11, v12);

    uint64_t v15 = sub_1A4C70D74(a2);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C81CD0;
    block[3] = &unk_1E5B7B180;
    id v20 = v7;
    id v21 = v8;
    id v22 = v14;
    id v16 = v14;
    dispatch_async(v15, block);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Empty result block supplied to IMSPIQueryChatWithGuid", buf, 2u);
    }
  }
  return v13 != 0;
}

void sub_1A4C70FC4(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1A4C7155C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1A4C71574(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_array(MEMORY[0x1E4F1CA48], a2, a3, a4);
  id v9 = objc_msgSend_sender(*(void **)(a1 + 32), v6, v7, v8);
  id v13 = objc_msgSend_address(v9, v10, v11, v12);
  uint64_t v14 = sub_1A4C71764((uint64_t)v13, v13);

  if (v14)
  {
    uint64_t v18 = objc_msgSend_sender(*(void **)(a1 + 32), v15, v16, v17);
    char isMe = objc_msgSend_isMe(v18, v19, v20, v21);

    if ((isMe & 1) == 0) {
      objc_msgSend_addObject_(v5, v15, (uint64_t)v14, v17);
    }
  }
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v23 = objc_msgSend_recipients(*(void **)(a1 + 32), v15, v16, v17, 0);
  uint64_t v25 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v24, (uint64_t)&v43, (uint64_t)v47, 16);
  if (v25)
  {
    uint64_t v29 = v25;
    uint64_t v30 = *(void *)v44;
    do
    {
      for (uint64_t i = 0; i != v29; ++i)
      {
        if (*(void *)v44 != v30) {
          objc_enumerationMutation(v23);
        }
        uint64_t v32 = *(void **)(*((void *)&v43 + 1) + 8 * i);
        if ((objc_msgSend_isMe(v32, v26, v27, v28) & 1) == 0)
        {
          uint64_t v33 = objc_msgSend_address(v32, v26, v27, v28);
          id v34 = sub_1A4C71764((uint64_t)v33, v33);

          if (v34) {
            objc_msgSend_addObject_(v5, v35, (uint64_t)v34, v36);
          }
        }
      }
      uint64_t v29 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v26, (uint64_t)&v43, (uint64_t)v47, 16);
    }
    while (v29);
  }

  uint64_t v41 = IMSharedDowntimeController(v37, v38, v39, v40);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = objc_msgSend_allowedToShowConversationWithHandleIDs_sync_context_(v41, v42, (uint64_t)v5, 1, 0);
}

id sub_1A4C71764(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = v2;
  if (v2 && ((MEMORY[0x1A62639B0](v2) & 1) != 0 || IMStringIsEmail()))
  {
    id v4 = IMStripFormattingFromAddress();
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

uint64_t sub_1A4C717D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t IMSPICreateMessageGUID(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_stringGUID(NSString, a2, a3, a4);
}

uint64_t _IMSPIMessageTypeFromPeerPaymentPayloadURL(void *a1)
{
  id v1 = a1;
  if (qword_1E965EB60 != -1) {
    dispatch_once(&qword_1E965EB60, &unk_1EF8E3F10);
  }
  if (off_1E965EB58)
  {
    uint64_t v2 = off_1E965EB58(v1);
    if (v2 == 1)
    {
      uint64_t v3 = 209;
      goto LABEL_17;
    }
    if (v2 == 2)
    {
      uint64_t v3 = 210;
      goto LABEL_17;
    }
  }
  else if (IMOSLoggingEnabled())
  {
    id v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Failed to weak link PassKitCore/PKPeerPaymentMessageTypeFromDataURL.", buf, 2u);
    }
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Could not determine peer payment message type.", v7, 2u);
    }
  }
  uint64_t v3 = 214;
LABEL_17:

  return v3;
}

void *sub_1A4C71958()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("PKPeerPaymentMessageTypeFromDataURL", @"PassKitCore");
  off_1E965EB58 = result;
  return result;
}

NSObject *_IMSPIExtractPayloadURLFromPayloadNSData(void *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v2 = a1;
  if (!v2)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "Payload data was nil, retuning nil payload URL", buf, 2u);
      }
    }
    goto LABEL_30;
  }
  uint64_t v3 = IMExtensionPayloadUnarchivingClasses();
  id v4 = objc_alloc(MEMORY[0x1E4F28DC0]);
  id v19 = 0;
  uint64_t v6 = objc_msgSend_initForReadingFromData_error_(v4, v5, (uint64_t)v2, (uint64_t)&v19);
  id v7 = v19;
  if (objc_opt_respondsToSelector())
  {
    objc_msgSend__enableStrictSecureDecodingMode(v6, v8, v9, v10);
    if (IMOSLoggingEnabled())
    {
      uint64_t v11 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v11, OS_LOG_TYPE_INFO, "strict-decoding 010 _enableStrictSecureDecodingMode called", buf, 2u);
      }
    }
  }
  uint64_t v12 = objc_msgSend_decodeObjectOfClasses_forKey_(v6, v8, (uint64_t)v3, *MEMORY[0x1E4F284E8]);
  if (v7 && IMOSLoggingEnabled())
  {
    id v1 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v21 = v7;
      _os_log_impl(&dword_1A4AF7000, v1, OS_LOG_TYPE_INFO, "Failed to unarchive message payload data. Error: %@", buf, 0xCu);
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v1 = objc_msgSend_objectForKey_(v12, v13, *MEMORY[0x1E4F6D330], v14);
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      char v15 = 0;
    }
    else
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v17 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Payload URL not in archived payload dictionary, retuning nil payload URL", buf, 2u);
        }
      }
      char v15 = 1;
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v1 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v1, OS_LOG_TYPE_INFO, "Could not decode payload dictionary, retuning nil payload URL", buf, 2u);
      }
    }
    char v15 = 1;
  }

  if (v15) {
LABEL_30:
  }
    id v1 = 0;

  return v1;
}

id _IMSPIExtractPayloadURLFromPayloadData(void *a1)
{
  if (a1)
  {
    id v2 = _IMSPIExtractPayloadURLFromPayloadNSData(a1);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Payload data was nil, retuning nil payload URL", v5, 2u);
      }
    }
    id v2 = 0;
  }

  return v2;
}

id _IMSPIPeerPaymentAmountFromExtensionPayloadURL(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (qword_1E965EB70 != -1) {
      dispatch_once(&qword_1E965EB70, &unk_1EF8E3F90);
    }
    if (off_1E965EB68)
    {
      id v2 = off_1E965EB68(v1);
      goto LABEL_15;
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v3 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        id v4 = "Failed to weak link PassKitCore/PKPeerPaymentMessageTypeFromDataURL.";
        uint64_t v5 = buf;
        goto LABEL_12;
      }
      goto LABEL_13;
    }
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      __int16 v7 = 0;
      id v4 = "Extension payload URL is nil, not setting peer payment amount.";
      uint64_t v5 = (uint8_t *)&v7;
LABEL_12:
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, v4, v5, 2u);
    }
LABEL_13:
  }
  id v2 = 0;
LABEL_15:

  return v2;
}

void *sub_1A4C72020()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("PKPeerPaymentMessageCurrencyAmountFromDataURL", @"PassKitCore");
  off_1E965EB68 = result;
  return result;
}

uint64_t _IMSPIMessageOrAttachmentsMatchPluginIdentifier(void *a1, void *a2, void *a3)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  if (objc_msgSend_containsString_(a2, v7, (uint64_t)v5, v8))
  {
    uint64_t v9 = 1;
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    id v10 = v6;
    uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v22, (uint64_t)v26, 16);
    if (v9)
    {
      uint64_t v15 = *(void *)v23;
      while (2)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v23 != v15) {
            objc_enumerationMutation(v10);
          }
          uint64_t v17 = objc_msgSend_bundleID(*(void **)(*((void *)&v22 + 1) + 8 * i), v12, v13, v14, (void)v22);
          char v20 = objc_msgSend_containsString_(v17, v18, (uint64_t)v5, v19);

          if (v20)
          {
            uint64_t v9 = 1;
            goto LABEL_13;
          }
        }
        uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v12, (uint64_t)&v22, (uint64_t)v26, 16);
        if (v9) {
          continue;
        }
        break;
      }
    }
LABEL_13:
  }
  return v9;
}

uint64_t _IMSPIDetermineMessageType(void *a1, int a2, void *a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v129 = *MEMORY[0x1E4F143B8];
  id v15 = a1;
  id v16 = a3;
  id v111 = a5;
  id v17 = a7;
  id v21 = a8;
  uint64_t v22 = a4 - 2000;
  uint64_t v23 = 105;
  switch(v22)
  {
    case 0:
      uint64_t v23 = 108;
      goto LABEL_94;
    case 1:
      goto LABEL_94;
    case 2:
      uint64_t v23 = 106;
      goto LABEL_94;
    case 3:
      uint64_t v23 = 110;
      goto LABEL_94;
    case 4:
      uint64_t v23 = 107;
      goto LABEL_94;
    case 5:
      uint64_t v23 = 109;
      goto LABEL_94;
    case 6:
      uint64_t v29 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v18, v19, v20);
      char isSiriReactionReadingEnabled = objc_msgSend_isSiriReactionReadingEnabled(v29, v30, v31, v32);

      if (a2) {
        uint64_t v23 = 101;
      }
      else {
        uint64_t v23 = 0;
      }
      if (isSiriReactionReadingEnabled) {
        uint64_t v23 = 111;
      }
      goto LABEL_17;
    case 7:
      long long v24 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v18, v19, v20);
      char v28 = objc_msgSend_isSiriReactionReadingEnabled(v24, v25, v26, v27);

      if (a2) {
        uint64_t v23 = 101;
      }
      else {
        uint64_t v23 = 0;
      }
      if (v28)
      {
        uint64_t v23 = 112;
        goto LABEL_94;
      }
LABEL_17:
      if (v23) {
        goto LABEL_94;
      }
LABEL_23:
      id v34 = (void *)*MEMORY[0x1E4F6CC30];
      if (objc_msgSend_containsString_(v111, v18, *MEMORY[0x1E4F6CC30], v20))
      {
        uint64_t v23 = 211;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier(v34, v15, v16))
      {
        uint64_t v38 = _IMSPIExtractPayloadURLFromPayloadData(a6);
        uint64_t v23 = _IMSPIMessageTypeFromPeerPaymentPayloadURL(v38);
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CC10], v15, v16))
      {
        uint64_t v23 = 213;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CBE0], v15, v16))
      {
        uint64_t v23 = 207;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CBA0], v15, v16))
      {
        uint64_t v23 = 102;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CBD8], v15, v16))
      {
        uint64_t v23 = 103;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CB68], v15, v16))
      {
        uint64_t v23 = 212;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CB20], v15, v16))
      {
        uint64_t v23 = 216;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CAE0], v15, v16))
      {
        uint64_t v23 = 217;
      }
      else if (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CB30], v15, v16))
      {
        if (objc_msgSend_containsString_(v21, v35, @"Started Sharing Location", v37))
        {
          uint64_t v23 = 219;
        }
        else if (objc_msgSend_containsString_(v21, v35, @"Requested Location", v37))
        {
          uint64_t v23 = 218;
        }
        else
        {
          uint64_t v23 = 220;
        }
      }
      else
      {
        uint64_t v23 = 0;
      }
      uint64_t v39 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v35, v36, v37);
      int isZelkovaEnabled = objc_msgSend_isZelkovaEnabled(v39, v40, v41, v42);

      if (isZelkovaEnabled
        && (_IMSPIMessageOrAttachmentsMatchPluginIdentifier((void *)*MEMORY[0x1E4F6CB28], v15, v16) & 1) != 0)
      {
        uint64_t v23 = 215;
        goto LABEL_94;
      }
      if (v23) {
        goto LABEL_94;
      }
      id v109 = v21;
      long long v122 = 0u;
      long long v123 = 0u;
      long long v120 = 0u;
      long long v121 = 0u;
      id v44 = v16;
      uint64_t v49 = objc_msgSend_countByEnumeratingWithState_objects_count_(v44, v45, (uint64_t)&v120, (uint64_t)v128, 16);
      if (v49)
      {
        uint64_t v23 = 0;
        uint64_t v50 = *(void *)v121;
        do
        {
          for (uint64_t i = 0; i != v49; ++i)
          {
            if (*(void *)v121 != v50) {
              objc_enumerationMutation(v44);
            }
            uint64_t v52 = *(void **)(*((void *)&v120 + 1) + 8 * i);
            if (objc_msgSend_isSticker(v52, v46, v47, v48)
              && objc_msgSend_isAdaptiveImageGlyph(v52, v46, v47, v48))
            {
              if (!objc_msgSend_length(v17, v46, v47, v48))
              {

                uint64_t v23 = 104;
                goto LABEL_93;
              }
              uint64_t v23 = 100;
            }
          }
          uint64_t v49 = objc_msgSend_countByEnumeratingWithState_objects_count_(v44, v46, (uint64_t)&v120, (uint64_t)v128, 16);
        }
        while (v49);

        if (v23) {
          goto LABEL_94;
        }
      }
      else
      {
      }
      uint64_t v108 = objc_msgSend_length(v15, v53, v54, v55);
      if (v108)
      {
        if (IMOSLoggingEnabled())
        {
          uint64_t v56 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v56, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            id v127 = v15;
            _os_log_impl(&dword_1A4AF7000, v56, OS_LOG_TYPE_INFO, "Unhandled balloon bundle ID: %@", buf, 0xCu);
          }
        }
        uint64_t v23 = 214;
      }
      else
      {
        uint64_t v23 = 0;
      }
      long long v118 = 0u;
      long long v119 = 0u;
      long long v116 = 0u;
      long long v117 = 0u;
      id obj = v44;
      uint64_t v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v57, (uint64_t)&v116, (uint64_t)v125, 16);
      if (v61)
      {
        uint64_t v62 = *(void *)v117;
        do
        {
          for (uint64_t j = 0; j != v61; ++j)
          {
            if (*(void *)v117 != v62) {
              objc_enumerationMutation(obj);
            }
            id v64 = *(void **)(*((void *)&v116 + 1) + 8 * j);
            uint64_t v65 = objc_msgSend_bundleID(v64, v58, v59, v60, v108);
            BOOL v69 = objc_msgSend_length(v65, v66, v67, v68) == 0;

            if (!v69)
            {
              if (IMOSLoggingEnabled())
              {
                uint64_t v79 = OSLogHandleForIMFoundationCategory();
                if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
                {
                  uint64_t v83 = objc_msgSend_bundleID(v64, v80, v81, v82);
                  *(_DWORD *)long long buf = 138412290;
                  id v127 = v83;
                  _os_log_impl(&dword_1A4AF7000, v79, OS_LOG_TYPE_INFO, "Unhandled attachment bundle ID: %@", buf, 0xCu);
                }
              }

              uint64_t v23 = 222;
              goto LABEL_93;
            }
          }
          uint64_t v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v58, (uint64_t)&v116, (uint64_t)v125, 16);
        }
        while (v61);
      }

      id v21 = v109;
      if (v108) {
        goto LABEL_94;
      }
      if (!objc_msgSend_count(obj, v70, v71, v72) || objc_msgSend_length(v17, v73, v74, v75)) {
        goto LABEL_85;
      }
      long long v114 = 0u;
      long long v115 = 0u;
      long long v112 = 0u;
      long long v113 = 0u;
      id v85 = obj;
      uint64_t v90 = objc_msgSend_countByEnumeratingWithState_objects_count_(v85, v86, (uint64_t)&v112, (uint64_t)v124, 16);
      if (!v90)
      {

        goto LABEL_85;
      }
      uint64_t v91 = 0;
      uint64_t v108 = *(void *)v113;
      uint64_t v23 = 200;
      do
      {
        for (uint64_t k = 0; k != v90; ++k)
        {
          if (*(void *)v113 != v108) {
            objc_enumerationMutation(v85);
          }
          id v93 = *(void **)(*((void *)&v112 + 1) + 8 * k);
          uint64_t v94 = objc_msgSend_uti(v93, v87, v88, v89, v108);
          if (objc_msgSend_isSticker(v93, v95, v96, v97))
          {
            uint64_t v91 = 104;
          }
          else if (IMUTTypeIsGIF())
          {
            uint64_t v91 = 221;
          }
          if (IMUTTypeIsImage()) {
            goto LABEL_127;
          }
          if (IMUTTypeIsMovie())
          {
            uint64_t v23 = 201;
            goto LABEL_127;
          }
          if (IMUTTypeIsAudio())
          {
            uint64_t v23 = 202;
            goto LABEL_127;
          }
          if (IMUTTypeIsCalendar())
          {
            uint64_t v23 = 203;
            goto LABEL_127;
          }
          if (IMUTTypeIsVCard())
          {
            uint64_t v23 = 204;
            goto LABEL_127;
          }
          if (IMUTTypeIsPass())
          {
            uint64_t v23 = 205;
LABEL_127:

LABEL_93:
            id v21 = v109;
            goto LABEL_94;
          }
          int IsMap = IMUTTypeIsMap();

          if (IsMap)
          {
            uint64_t v23 = 208;
            goto LABEL_129;
          }
        }
        uint64_t v90 = objc_msgSend_countByEnumeratingWithState_objects_count_(v85, v87, (uint64_t)&v112, (uint64_t)v124, 16);
      }
      while (v90);
      if (IsMap) {
        uint64_t v23 = 208;
      }
      else {
        uint64_t v23 = v91;
      }
LABEL_129:

      id v21 = v109;
      if (!v23)
      {
LABEL_85:
        if (objc_msgSend_count(obj, v73, v74, v75, v108) && !objc_msgSend_length(v17, v76, v77, v78))
        {
          if (IMOSLoggingEnabled())
          {
            uint64_t v99 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v99, OS_LOG_TYPE_INFO))
            {
              id v103 = objc_msgSend_firstObject(obj, v100, v101, v102);
              uint64_t v107 = objc_msgSend_uti(v103, v104, v105, v106);
              *(_DWORD *)long long buf = 138412290;
              id v127 = v107;
              _os_log_impl(&dword_1A4AF7000, v99, OS_LOG_TYPE_INFO, "Unhandled attachment UTI: %@", buf, 0xCu);
            }
          }
          uint64_t v23 = 206;
        }
        else
        {
          uint64_t v23 = 100;
        }
        goto LABEL_93;
      }
LABEL_94:

      return v23;
    default:
      if (a2) {
        uint64_t v23 = 101;
      }
      else {
        uint64_t v23 = 0;
      }
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_94;
  }
}

id _IMSPIDisplayAppNameFromAttachments(void *a1)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v1 = a1;
  uint64_t v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v2, (uint64_t)&v19, (uint64_t)v23, 16);
  if (v3)
  {
    uint64_t v7 = v3;
    uint64_t v8 = *(void *)v20;
    uint64_t v9 = *MEMORY[0x1E4F6D3D0];
    while (2)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v20 != v8) {
          objc_enumerationMutation(v1);
        }
        uint64_t v11 = objc_msgSend_attributionInfo(*(void **)(*((void *)&v19 + 1) + 8 * i), v4, v5, v6, (void)v19);
        uint64_t v14 = objc_msgSend_objectForKey_(v11, v12, v9, v13);
        if (objc_msgSend_length(v14, v15, v16, v17))
        {

          goto LABEL_11;
        }
      }
      uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v4, (uint64_t)&v19, (uint64_t)v23, 16);
      if (v7) {
        continue;
      }
      break;
    }
  }
  uint64_t v14 = 0;
LABEL_11:

  return v14;
}

IMSPIMessage *_IMSPIMessageFromRecord(uint64_t a1, int a2, unsigned int a3, void *a4, dispatch_qos_class_t a5)
{
  uint64_t v377 = *MEMORY[0x1E4F143B8];
  id v322 = a4;
  if (a1)
  {
    uint64_t Identifier = IMDMessageRecordGetIdentifier();
    uint64_t v317 = a1;
    if (IMOSLoggingEnabled())
    {
      uint64_t v6 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 134217984;
        *(void *)((char *)&buf + 4) = Identifier;
        _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Beginning _IMSPIMessageFromRecord for message record %lld", (uint8_t *)&buf, 0xCu);
      }

      a1 = v317;
    }
    uint64_t v353 = 0;
    uint64_t v352 = 0;
    uint64_t v351 = 0;
    uint64_t v350 = 0;
    uint64_t v349 = 0;
    uint64_t v348 = 0;
    v347 = 0;
    v346 = 0;
    v345 = 0;
    v344 = 0;
    v343 = 0;
    v342 = 0;
    v341 = 0;
    v340 = 0;
    v339 = 0;
    CFStringRef theString = 0;
    uint64_t v337 = 0;
    uint64_t v336 = 0;
    v335 = 0;
    v334 = 0;
    v333 = 0;
    char v332 = 0;
    uint64_t v331 = 0;
    uint64_t v330 = 0;
    if (qword_1E965EB80 != -1) {
      dispatch_once(&qword_1E965EB80, &unk_1EF8E5C78);
    }
    off_1E965EB78(a1, &v352, &v349, 0, &v347, &v351, &v350, 0, 0, &v346, &v345, &v344, &v343, 0, 0, &v353, &v342, 0, 0,
      &v332,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      &v335,
      &v336,
      0,
      &theString,
      &v333,
      &v337,
      0,
      &v334,
      0,
      0,
      0,
      0,
      &v331,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      &v330,
      0,
      0);
    if (IMOSLoggingEnabled())
    {
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Completed _IMDMessageRecordBulkCopy", (uint8_t *)&buf, 2u);
      }
    }
    uint64_t v11 = v346;
    v315 = (__CFString *)theString;
    char v305 = v335;
    char v306 = v345;
    v309 = v347;
    uint64_t v310 = v343;
    v312 = v342;
    id v313 = v331;
    v311 = v330;
    uint64_t v316 = v344;
    unint64_t v314 = objc_msgSend_unsignedLongLongValue(v344, v7, v8, v9);
    if ((v314 & 4) != 0)
    {
      if (objc_msgSend_length(v313, v12, v13, v14))
      {
        id v15 = [IMSPIHandle alloc];
        char isMe = objc_msgSend_initWithAddress_countryCode_isMe_(v15, v16, (uint64_t)v313, 0, 1);
        goto LABEL_35;
      }
      if (!IMOSLoggingEnabled()) {
        goto LABEL_34;
      }
      uint64_t v29 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "destinationCallerID on outgoing message is nil. Sender information will be missing for this message.", (uint8_t *)&buf, 2u);
      }
      goto LABEL_33;
    }
    if (v353 < 1)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v29 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "handleID for sender on received message is nil. Sender information will be missing for this message.", (uint8_t *)&buf, 2u);
        }
        goto LABEL_33;
      }
    }
    else
    {
      long long v20 = objc_msgSend_numberWithLongLong_(NSNumber, v12, v353, v14);
      char isMe = objc_msgSend_objectForKey_(v322, v21, (uint64_t)v20, v22);

      if (isMe) {
        goto LABEL_35;
      }
      if (qword_1E965EB90 != -1) {
        dispatch_once(&qword_1E965EB90, &unk_1EF8E5C98);
      }
      uint64_t v23 = (void *)off_1E965EB88(v317);
      uint64_t v24 = v23;
      if (v23)
      {
        char isMe = sub_1A4C6FD20(v23);
        uint64_t v27 = objc_msgSend_numberWithLongLong_(NSNumber, v25, v353, v26);
        objc_msgSend_setObject_forKey_(v322, v28, (uint64_t)isMe, (uint64_t)v27);

        CFRelease(v24);
        goto LABEL_35;
      }
      if (IMOSLoggingEnabled())
      {
        uint64_t v29 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A4AF7000, v29, OS_LOG_TYPE_INFO, "handleRef matching handleID on received message is nil. Sender information will be missing for this message.", (uint8_t *)&buf, 2u);
        }
LABEL_33:
      }
    }
LABEL_34:
    char isMe = 0;
LABEL_35:
    uint64_t v30 = objc_msgSend_stringByReplacingOccurrencesOfString_withString_(v11, v17, *MEMORY[0x1E4F6C110], (uint64_t)&stru_1EF8E78C8);
    id v34 = objc_msgSend_newlineCharacterSet(MEMORY[0x1E4F28B88], v31, v32, v33);
    id v319 = objc_msgSend_stringByTrimmingCharactersInSet_(v30, v35, (uint64_t)v34, v36);

    uint64_t v40 = v334;
    if (v334)
    {
      uint64_t v41 = objc_msgSend_dictionaryWithMessageSummaryInfoData_(MEMORY[0x1E4F1C9E8], v37, (uint64_t)v334, v39);
      id v44 = v41;
      if (v41)
      {
        uint64_t v308 = objc_msgSend_objectForKey_(v41, v42, *MEMORY[0x1E4F6D618], v43);
      }
      else
      {
        uint64_t v308 = 0;
      }
    }
    else
    {
      uint64_t v308 = 0;
    }
    if (v332)
    {
      if (IMOSLoggingEnabled())
      {
        long long v45 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
        {
          LODWORD(buf) = 67109120;
          DWORD1(buf) = a3;
          _os_log_impl(&dword_1A4AF7000, v45, OS_LOG_TYPE_INFO, "hasAttachments: 1 loadAttachments:%d", (uint8_t *)&buf, 8u);
        }
      }
      if (IMOSLoggingEnabled())
      {
        long long v46 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A4AF7000, v46, OS_LOG_TYPE_INFO, "Beginning IMSPIAttachmentsFromMessageRecord", (uint8_t *)&buf, 2u);
        }
      }
      CFArrayRef v47 = (const __CFArray *)IMDMessageRecordCopyAttachments();
      CFArrayRef v50 = v47;
      if (v47)
      {
        CFIndex Count = CFArrayGetCount(v47);
        objc_msgSend_arrayWithCapacity_(MEMORY[0x1E4F1CA48], v52, Count, v53);
      }
      else
      {
        CFIndex Count = 0;
        objc_msgSend_arrayWithCapacity_(MEMORY[0x1E4F1CA48], v48, 0, v49);
      char v323 = };
      if (qword_1E965ED30 != -1) {
        dispatch_once(&qword_1E965ED30, &unk_1EF8E6A08);
      }
      if (Count >= 1)
      {
        for (CFIndex i = 0; i != Count; ++i)
        {
          ValueAtIndex = CFArrayGetValueAtIndex(v50, i);
          *(void *)&long long buf = 0;
          CFTypeRef cf = 0;
          block[0] = 0;
          v360[0] = 0;
          __int16 v359 = 0;
          CFTypeRef v358 = 0;
          CFTypeRef v357 = 0;
          CFTypeRef v356 = 0;
          CFTypeRef v355 = 0;
          off_1E965ED28(ValueAtIndex, &buf, 0, 0, 0, &cf, v360, 0, block, &v359, 0, 0, (char *)&v359 + 1, &v358, &v357, 0, 0, 0, 0,
            0,
            0,
            &v356,
            &v355);
          if (cf)
          {
            uint64_t v59 = objc_msgSend_copy((void *)cf, v56, v57, v58);
            uint64_t v62 = objc_msgSend_componentsSeparatedByString_(v59, v60, @"/Attachments/", v61);

            if ((unint64_t)objc_msgSend_count(v62, v63, v64, v65) < 2)
            {
              uint64_t v72 = 0;
            }
            else
            {
              uint64_t v68 = objc_msgSend_objectAtIndexedSubscript_(v62, v66, 1, v67);
              uint64_t v72 = sub_1A4C7EC54((uint64_t)v68, v69, v70, v71);
            }
          }
          else
          {
            if (IMOSLoggingEnabled())
            {
              __int16 v73 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)v354 = 0;
                _os_log_impl(&dword_1A4AF7000, v73, OS_LOG_TYPE_INFO, "Attachment filename returned empty", v354, 2u);
              }
            }
            uint64_t v72 = 0;
          }
          uint64_t v74 = [IMSPIAttachment alloc];
          isOutgoing_stickerUserInfo_attributionInfo_creationDate_adaptiveImageGlyphContentIdentifier_adaptiveImageGlyphContentDescription = objc_msgSend_initWithGuid_fileUrl_transferState_uti_isSticker_isOutgoing_stickerUserInfo_attributionInfo_creationDate_adaptiveImageGlyphContentIdentifier_adaptiveImageGlyphContentDescription_(v74, v75, buf, (uint64_t)v72, block[0], v360[0], HIBYTE(v359) != 0, (_BYTE)v359 != 0, v358, v357, 0, v356, v355);
          objc_msgSend_addObject_(v323, v77, (uint64_t)isOutgoing_stickerUserInfo_attributionInfo_creationDate_adaptiveImageGlyphContentIdentifier_adaptiveImageGlyphContentDescription, v78);
          if ((void)buf)
          {
            CFRelease((CFTypeRef)buf);
            *(void *)&long long buf = 0;
          }
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          if (v360[0])
          {
            CFRelease(v360[0]);
            v360[0] = 0;
          }
          if (v358)
          {
            CFRelease(v358);
            CFTypeRef v358 = 0;
          }
          if (v357)
          {
            CFRelease(v357);
            CFTypeRef v357 = 0;
          }
          if (v356)
          {
            CFRelease(v356);
            CFTypeRef v356 = 0;
          }
          if (v355)
          {
            CFRelease(v355);
            CFTypeRef v355 = 0;
          }
        }
      }
      if (v50) {
        CFRelease(v50);
      }
      if (IMOSLoggingEnabled())
      {
        uint64_t v79 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A4AF7000, v79, OS_LOG_TYPE_INFO, "Completed IMSPIAttachmentsFromMessageRecord", (uint8_t *)&buf, 2u);
        }
      }
    }
    else
    {
      char v323 = 0;
    }
    if (v336 || !objc_msgSend_length(v319, v37, v38, v39) || theString && CFStringGetLength(theString))
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v80 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v80, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A4AF7000, v80, OS_LOG_TYPE_INFO, "Beginning description construction for non-text message", (uint8_t *)&buf, 2u);
        }
      }
      uint64_t v81 = sub_1A4C747F4(v317);
      v328[0] = MEMORY[0x1E4F143A8];
      v328[1] = 3221225472;
      v328[2] = sub_1A4C74D70;
      v328[3] = &unk_1E5B7F460;
      id v329 = v323;
      uint64_t v83 = objc_msgSend_descriptionForPurpose_isGroupMessage_messageDataSource_attachmentDataSource_(v81, v82, 5, 0, &unk_1EF8E3FB0, v328);

      if (IMOSLoggingEnabled())
      {
        uint64_t v84 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v84, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          _os_log_impl(&dword_1A4AF7000, v84, OS_LOG_TYPE_INFO, "Completed description construction for non-text message", (uint8_t *)&buf, 2u);
        }
      }
    }
    else
    {
      uint64_t v83 = 0;
    }
    if (qword_1E965EBB0 != -1) {
      dispatch_once(&qword_1E965EBB0, &unk_1EF8E3FD0);
    }
    if (v352)
    {
      uint64_t v88 = 0;
    }
    else
    {
      id v89 = (id)off_1E965EBA8(v317);

      uint64_t v88 = v89;
    }
    char v304 = v88;
    if (objc_msgSend_count(v88, v85, v86, v87))
    {
      if (qword_1E965EBC0 != -1) {
        dispatch_once(&qword_1E965EBC0, &unk_1EF8E3FF0);
      }
      id v90 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      long long v326 = 0u;
      long long v327 = 0u;
      long long v324 = 0u;
      long long v325 = 0u;
      id v91 = v304;
      uint64_t v93 = objc_msgSend_countByEnumeratingWithState_objects_count_(v91, v92, (uint64_t)&v324, (uint64_t)v370, 16);
      if (v93)
      {
        uint64_t v94 = *(void *)v325;
        do
        {
          for (uint64_t j = 0; j != v93; ++j)
          {
            if (*(void *)v325 != v94) {
              objc_enumerationMutation(v91);
            }
            uint64_t v96 = (void *)off_1E965EBB8(0, *(void *)(*((void *)&v324 + 1) + 8 * j));
            objc_msgSend_addObject_(v90, v97, (uint64_t)v96, v98);
          }
          uint64_t v93 = objc_msgSend_countByEnumeratingWithState_objects_count_(v91, v99, (uint64_t)&v324, (uint64_t)v370, 16);
        }
        while (v93);
      }

      uint64_t Object = objc_msgSend___imFirstObject(v91, v100, v101, v102);
      if (Object)
      {
        if (qword_1E965EBD0 != -1) {
          dispatch_once(&qword_1E965EBD0, &unk_1EF8E4010);
        }
        id v104 = (void *)off_1E965EBC8(Object);
        id v320 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        if (objc_msgSend_count(v104, v105, v106, v107))
        {
          uint64_t v111 = 0;
          while (1)
          {
            long long v112 = objc_msgSend_objectAtIndex_(v104, v108, v111, v110);
            uint64_t v113 = IMDHandleRecordGetIdentifier();
            long long v116 = objc_msgSend_numberWithLongLong_(NSNumber, v114, v113, v115);
            long long v119 = objc_msgSend_objectForKey_(v322, v117, (uint64_t)v116, v118);

            if (v119) {
              goto LABEL_126;
            }
            long long v119 = sub_1A4C6FD20(v112);
            if (v119) {
              break;
            }
LABEL_128:

            if (++v111 >= (unint64_t)objc_msgSend_count(v104, v137, v138, v139)) {
              goto LABEL_129;
            }
          }
          id v125 = objc_msgSend_numberWithLongLong_(NSNumber, v123, v113, v124);
          objc_msgSend_setObject_forKey_(v322, v126, (uint64_t)v119, (uint64_t)v125);

LABEL_126:
          id v127 = objc_msgSend_address(v119, v120, v121, v122);
          uint64_t v131 = objc_msgSend_address(isMe, v128, v129, v130);
          char isEqualToString = objc_msgSend_isEqualToString_(v127, v132, (uint64_t)v131, v133);

          if ((isEqualToString & 1) == 0) {
            objc_msgSend_addObject_(v320, v135, (uint64_t)v119, v136);
          }
          goto LABEL_128;
        }
LABEL_129:
        if ((v314 & 4) == 0)
        {
          if (objc_msgSend_length(v313, v108, v109, v110))
          {
            long long v140 = [IMSPIHandle alloc];
            long long v142 = objc_msgSend_initWithAddress_countryCode_isMe_(v140, v141, (uint64_t)v313, 0, 1);
            objc_msgSend_addObject_(v320, v143, (uint64_t)v142, v144);
          }
          else if (IMOSLoggingEnabled())
          {
            long long v146 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v146, OS_LOG_TYPE_INFO))
            {
              LOWORD(buf) = 0;
              _os_log_impl(&dword_1A4AF7000, v146, OS_LOG_TYPE_INFO, "destinationCallerID is nil, message will not contain own address in recipients", (uint8_t *)&buf, 2u);
            }
          }
        }
        if (qword_1E965EBE0 != -1) {
          dispatch_once(&qword_1E965EBE0, &unk_1EF8E4030);
        }
        off_1E965EBD8(Object, &v348, 0, 0, 0, &v341, 0, 0, 0, &v340, 0, 0, &v339, 0, 0, 0, 0, 0, 0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0);
        long long v145 = v341;
        uint64_t v301 = v340;
        char v307 = v339;
      }
      else
      {
        id v320 = 0;
        char v307 = 0;
        uint64_t v301 = 0;
        long long v145 = 0;
      }
    }
    else
    {
      id v320 = 0;
      char v307 = 0;
      uint64_t v301 = 0;
      long long v145 = 0;
      id v90 = 0;
    }
    context = (void *)MEMORY[0x1A6264150]();
    unint64_t v150 = objc_msgSend_unsignedLongLongValue(v316, v147, v148, v149);
    unint64_t v154 = objc_msgSend_unsignedLongLongValue(v316, v151, v152, v153);
    unint64_t v158 = objc_msgSend_unsignedLongLongValue(v316, v155, v156, v157);
    uint64_t v159 = objc_alloc_init(IMSPIMessage);
    if (objc_msgSend_length(v83, v160, v161, v162)) {
      objc_msgSend_setText_(v159, v163, (uint64_t)v83, v164);
    }
    else {
      objc_msgSend_setText_(v159, v163, (uint64_t)v319, v164);
    }
    objc_msgSend_setBody_(v159, v165, (uint64_t)v319, v166);
    objc_msgSend_setSummary_(v159, v167, (uint64_t)v83, v168);
    objc_msgSend_setEffect_(v159, v169, v337, v170);
    objc_msgSend_setSubject_(v159, v171, (uint64_t)v312, v172);
    int v176 = objc_msgSend_address(isMe, v173, v174, v175);
    char v177 = MEMORY[0x1A6263990]();

    if ((v177 & 1) == 0) {
      objc_msgSend_setDisplayName_(v159, v178, (uint64_t)v301, v179);
    }
    objc_msgSend_setItemType_(v159, v178, v352, v179);
    if (((v154 >> 20) & 1) != 0 && objc_msgSend_length(v306, v180, v181, v182))
    {
      id v183 = JWDecodeCodableObjectWithStandardAllowlist();
      objc_msgSend_setAttributedText_(v159, v184, (uint64_t)v183, v185);
    }
    objc_msgSend_setHasDataDetectedResults_(v159, v180, (v154 >> 20) & 1, v182);
    objc_msgSend_setSender_(v159, v186, (uint64_t)isMe, v187);
    objc_msgSend_setRecipients_(v159, v188, (uint64_t)v320, v189);
    uint64_t v193 = objc_msgSend___im_dateWithNanosecondTimeIntervalSinceReferenceDate_(MEMORY[0x1E4F1C9C8], v190, v191, v192, (double)v351);
    objc_msgSend_setDate_(v159, v194, (uint64_t)v193, v195);

    v199 = objc_msgSend___im_dateWithNanosecondTimeIntervalSinceReferenceDate_(MEMORY[0x1E4F1C9C8], v196, v197, v198, (double)v350);
    objc_msgSend_setDateRead_(v159, v200, (uint64_t)v199, v201);

    if (a2)
    {
      uint64_t v204 = sub_1A4C750A4(v317);
      objc_msgSend_setDateForLastReadMessageInChat_(v159, v205, (uint64_t)v204, v206);
    }
    objc_msgSend_setIsOutgoing_(v159, v202, (v314 >> 2) & 1, v203);
    objc_msgSend_setIsRead_(v159, v207, (v150 >> 13) & 1, v208);
    objc_msgSend_setIsAudioMessage_(v159, v209, (v158 >> 21) & 1, v210);
    objc_msgSend_setGuid_(v159, v211, (uint64_t)v309, v212);
    objc_msgSend_setMessageID_(v159, v213, v349, v214);
    objc_msgSend_setChatGuids_(v159, v215, (uint64_t)v90, v216);
    objc_msgSend_setGroupID_(v159, v217, (uint64_t)v307, v218);
    objc_msgSend_setChatIdentifier_(v159, v219, (uint64_t)v145, v220);
    objc_msgSend_setIsGroupChat_(v159, v221, v348 != 45, v222);
    objc_msgSend_setService_(v159, v223, (uint64_t)v310, v224);
    objc_msgSend_setAttachments_(v159, v225, (uint64_t)v323, v226);
    objc_msgSend_setBundleId_(v159, v227, (uint64_t)v315, v228);
    objc_msgSend_setAssociatedMessageEmoji_(v159, v229, (uint64_t)v311, v230);
    uint64_t v231 = _IMSPIDetermineMessageType(v315, (v158 >> 21) & 1, v323, v336, v308, v333, v319, v83);
    objc_msgSend_setMessageType_(v159, v232, v231, v233);
    uint64_t v234 = _IMSPIDisplayAppNameFromAttachments(v323);
    objc_msgSend_setDisplayAppName_(v159, v235, (uint64_t)v234, v236);
    if (v231 != 213)
    {
      if ((unint64_t)(v231 - 209) > 1)
      {
        if (v231 != 217 && v231 != 216) {
          goto LABEL_184;
        }
        v264 = _IMSPIExtractPayloadURLFromPayloadData(v333);
        objc_msgSend_setExtensionPayloadURL_(v159, v268, (uint64_t)v264, v269);
      }
      else
      {
        v264 = _IMSPIExtractPayloadURLFromPayloadData(v333);
        v265 = _IMSPIPeerPaymentAmountFromExtensionPayloadURL(v264);
        objc_msgSend_setPeerPaymentAmount_(v159, v266, (uint64_t)v265, v267);
      }
LABEL_183:

LABEL_184:
      v277 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v237, v238, v239);
      char isZelkovaEnabled = objc_msgSend_isZelkovaEnabled(v277, v278, v279, v280);

      char v282 = isZelkovaEnabled ^ 1;
      if (v231 != 215) {
        char v282 = 1;
      }
      if ((v282 & 1) == 0)
      {
        uint64_t v283 = _IMSPIExtractPayloadURLFromPayloadData(v333);
        objc_msgSend_setExtensionPayloadURL_(v159, v284, (uint64_t)v283, v285);
      }
      if (IMSPIMessageTypeHasAssociatedMessage(v231) && objc_msgSend_length(v305, v286, v287, v288))
      {
        v289 = IMAssociatedMessageDecodeGUID();
        if (qword_1E965EBF0 != -1) {
          dispatch_once(&qword_1E965EBF0, &unk_1EF8E4050);
        }
        uint64_t v290 = off_1E965EBE8(v289);
        id v291 = (const void *)v290;
        if (v290)
        {
          id v292 = _IMSPIMessageFromRecord(v290, 0, a3, v322, a5);
          objc_msgSend_setReferencedMessage_(v159, v293, (uint64_t)v292, v294);
          CFRelease(v291);
        }
      }

      if (IMOSLoggingEnabled())
      {
        v295 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v295, OS_LOG_TYPE_INFO))
        {
          LODWORD(buf) = 134217984;
          *(void *)((char *)&buf + 4) = Identifier;
          _os_log_impl(&dword_1A4AF7000, v295, OS_LOG_TYPE_INFO, "Completed _IMSPIMessageFromRecord for message record %lld", (uint8_t *)&buf, 0xCu);
        }
      }
      long long v19 = v159;

      goto LABEL_200;
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v240 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v240, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_1A4AF7000, v240, OS_LOG_TYPE_INFO, "Beginning _IMSPIRichLinkMetadataForMessageRecord", (uint8_t *)&buf, 2u);
      }
    }
    uint64_t v241 = sub_1A4C747F4(v317);
    if (v241)
    {
      v242 = [IMPluginPayload alloc];
      v318 = objc_msgSend_initWithMessageItem_(v242, v243, (uint64_t)v241, v244);
      if (v318)
      {
        if (a3)
        {
          id v248 = dispatch_group_create();
          dispatch_group_enter(v248);
          v252 = objc_msgSend_fileTransferGUIDs(v241, v249, v250, v251);
          v253 = sub_1A4C70D74(a5);
          *(void *)&long long buf = MEMORY[0x1E4F143A8];
          *((void *)&buf + 1) = 3221225472;
          v372 = sub_1A4C838C8;
          v373 = &unk_1E5B7F7D8;
          id v374 = v252;
          id v375 = v318;
          v376 = v248;
          uint64_t v254 = v248;
          id v303 = v252;
          IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(v303, a5, v253, &buf);

          dispatch_time_t v255 = dispatch_time(0, 5000000000);
          dispatch_group_wait(v254, v255);
        }
        CFTypeRef cf = 0;
        p_CFTypeRef cf = &cf;
        uint64_t v366 = 0x3032000000;
        v367 = sub_1A4B3461C;
        v368 = sub_1A4B343F4;
        id v369 = 0;
        if (objc_msgSend_isMainThread(MEMORY[0x1E4F29060], v245, v246, v247))
        {
          v259 = objc_msgSend_sharedInstance(IMBalloonPluginManager, v256, v257, v258);
          uint64_t v262 = objc_msgSend_dataSourceForPluginPayload_(v259, v260, (uint64_t)v318, v261);
          v263 = (void *)p_cf[5];
          p_cf[5] = (CFTypeRef)v262;
        }
        else
        {
          block[0] = MEMORY[0x1E4F143A8];
          block[1] = 3221225472;
          block[2] = sub_1A4C8392C;
          block[3] = &unk_1E5B7BD58;
          v363 = &cf;
          id v362 = v318;
          dispatch_sync(MEMORY[0x1E4F14428], block);
          v259 = v362;
        }

        v264 = objc_msgSend_richLinkMetadata((void *)p_cf[5], v271, v272, v273);
        if (IMOSLoggingEnabled())
        {
          v274 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v274, OS_LOG_TYPE_INFO))
          {
            LOWORD(v360[0]) = 0;
            _os_log_impl(&dword_1A4AF7000, v274, OS_LOG_TYPE_INFO, "Completed _IMSPIRichLinkMetadataForMessageRecord", (uint8_t *)v360, 2u);
          }
        }
        _Block_object_dispose(&cf, 8);

        goto LABEL_182;
      }
      if (IMOSLoggingEnabled())
      {
        v270 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v270, OS_LOG_TYPE_INFO))
        {
          LODWORD(buf) = 138412290;
          *(void *)((char *)&buf + 4) = v241;
          _os_log_impl(&dword_1A4AF7000, v270, OS_LOG_TYPE_INFO, "Could not init IMPluginPayload for messageItem: %@", (uint8_t *)&buf, 0xCu);
        }
LABEL_174:
      }
    }
    else if (IMOSLoggingEnabled())
    {
      v270 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v270, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v317;
        _os_log_impl(&dword_1A4AF7000, v270, OS_LOG_TYPE_INFO, "Could not create IMMessageItem from message record: %@", (uint8_t *)&buf, 0xCu);
      }
      goto LABEL_174;
    }
    v264 = 0;
LABEL_182:

    objc_msgSend_setRichLinkMetadata_(v159, v275, (uint64_t)v264, v276);
    goto LABEL_183;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Attempted to create IMSPIMessage from NULL IMDMessageRecordRef.", (uint8_t *)&buf, 2u);
    }
  }
  long long v19 = 0;
LABEL_200:

  return v19;
}

void *sub_1A4C74794()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordBulkCopy", @"IMDPersistence");
  off_1E965EB78 = result;
  return result;
}

void *sub_1A4C747C4()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyHandle", @"IMDPersistence");
  off_1E965EB88 = result;
  return result;
}

id sub_1A4C747F4(uint64_t a1)
{
  if (qword_1E965ED40 != -1) {
    dispatch_once(&qword_1E965ED40, &unk_1EF8E35E8);
  }
  id v2 = off_1E965ED38(a1, 0, 0, 0);
  objc_opt_class();
  id v3 = 0;
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }

  return v3;
}

BOOL sub_1A4C748A0(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v67 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  if (qword_1E965EBA0 != -1) {
    dispatch_once(&qword_1E965EBA0, &unk_1EF8E5CD8);
  }
  uint64_t v7 = (uint64_t (*)(id))off_1E965EB98;
  id v8 = v6;
  id v10 = objc_msgSend_regularExpressionWithPattern_options_error_(MEMORY[0x1E4F28FD8], v9, @"(p:(\\d+)\\/)?([\\dA-F]{8}-[\\dA-F]{4}-[\\dA-F]{4}-[\\dA-F]{4}-[\\dA-F]{12})", 1, 0);
  uint64_t v14 = objc_msgSend_length(v8, v11, v12, v13);
  uint64_t v16 = objc_msgSend_firstMatchInString_options_range_(v10, v15, (uint64_t)v8, 0, 0, v14);
  long long v20 = v16;
  if (v16 && objc_msgSend_numberOfRanges(v16, v17, v18, v19) == 4)
  {
    uint64_t v23 = objc_msgSend_rangeAtIndex_(v20, v21, 2, v22);
    uint64_t v26 = 0x7FFFFFFFFFFFFFFFLL;
    if (v23 != 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v27 = objc_msgSend_substringWithRange_(v8, v24, v23, (uint64_t)v24);
      uint64_t v26 = objc_msgSend_integerValue(v27, v28, v29, v30);
    }
    uint64_t v31 = objc_msgSend_rangeAtIndex_(v20, v24, 3, v25);
    objc_msgSend_substringWithRange_(v8, v32, v31, (uint64_t)v32);
    id v33 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v33 = v8;
    uint64_t v26 = 0x7FFFFFFFFFFFFFFFLL;
  }

  id v34 = (const void *)v7(v33);
  if (v34)
  {
    uint64_t v35 = sub_1A4C747F4((uint64_t)v34);
    uint64_t v39 = objc_msgSend_body(v35, v36, v37, v38);
    uint64_t v43 = v39;
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v63 = 0x3032000000;
    uint64_t v64 = sub_1A4B3461C;
    uint64_t v65 = sub_1A4B343F4;
    id v66 = 0;
    if (v26 == 0x7FFFFFFFFFFFFFFFLL) {
      goto LABEL_12;
    }
    uint64_t v44 = objc_msgSend_length(v39, v40, v41, v42);
    uint64_t v45 = *MEMORY[0x1E4F6C1F8];
    v58[0] = MEMORY[0x1E4F143A8];
    v58[1] = 3221225472;
    v58[2] = sub_1A4C74CAC;
    v58[3] = &unk_1E5B7F438;
    p_long long buf = &buf;
    uint64_t v61 = v26;
    id v59 = v35;
    objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(v43, v46, v45, 0, v44, 0, v58);

    if (!*(void *)(*((void *)&buf + 1) + 40))
    {
LABEL_12:
      CFArrayRef v47 = [IMMessagePartChatItem alloc];
      uint64_t v51 = objc_msgSend_length(v43, v48, v49, v50);
      uint64_t v53 = objc_msgSend__initWithItem_index_messagePartRange_(v47, v52, (uint64_t)v35, 0, 0, v51);
      uint64_t v54 = *(void **)(*((void *)&buf + 1) + 40);
      *(void *)(*((void *)&buf + 1) + 40) = v53;
    }
    id v55 = v35;
    *a3 = v55;
    *a4 = *(id *)(*((void *)&buf + 1) + 40);
    CFRelease(v34);
    _Block_object_dispose(&buf, 8);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v56 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v56, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_1A4AF7000, v56, OS_LOG_TYPE_INFO, "Failed to retrieve message %@", (uint8_t *)&buf, 0xCu);
    }
  }
  return v34 != 0;
}

void *sub_1A4C74C7C()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessageForGUID", @"IMDPersistence");
  off_1E965EB98 = result;
  return result;
}

void sub_1A4C74CAC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v17 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_integerValue(v17, v9, v10, v11) == a1[6])
  {
    uint64_t v12 = [IMMessagePartChatItem alloc];
    uint64_t v14 = objc_msgSend__initWithItem_index_messagePartRange_(v12, v13, a1[4], a1[6], a3, a4);
    uint64_t v15 = *(void *)(a1[5] + 8);
    uint64_t v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    *a5 = 1;
  }
}

uint64_t sub_1A4C74D70(uint64_t a1, void *a2, void *a3, void *a4, unsigned char *a5, unsigned char *a6, void *a7, void *a8)
{
  uint64_t v43 = a6;
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  id v11 = a2;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id v12 = *(id *)(a1 + 32);
  uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v47, (uint64_t)v53, 16);
  if (v17)
  {
    uint64_t v18 = *(void *)v48;
    while (2)
    {
      for (uint64_t i = 0; i != v17; ++i)
      {
        if (*(void *)v48 != v18) {
          objc_enumerationMutation(v12);
        }
        long long v20 = *(void **)(*((void *)&v47 + 1) + 8 * i);
        long long v21 = objc_msgSend_guid(v20, v14, v15, v16, v43);
        int isEqualToString = objc_msgSend_isEqualToString_(v11, v22, (uint64_t)v21, v23);

        if (isEqualToString)
        {
          objc_msgSend_fileUrl(v20, v14, v15, v16);
          *a3 = (id)objc_claimAutoreleasedReturnValue();
          objc_msgSend_uti(v20, v27, v28, v29);
          *a4 = (id)objc_claimAutoreleasedReturnValue();
          *a5 = objc_msgSend_isSticker(v20, v30, v31, v32);
          *uint64_t v43 = objc_msgSend_isOutgoing(v20, v33, v34, v35) ^ 1;
          if (a7)
          {
            objc_msgSend_adaptiveImageGlyphContentDescription(v20, v36, v37, v38);
            *a7 = (id)objc_claimAutoreleasedReturnValue();
          }
          if (a8)
          {
            uint64_t v39 = objc_msgSend_attributionInfo(v20, v36, v37, v38);
            objc_msgSend_objectForKeyedSubscript_(v39, v40, *MEMORY[0x1E4F6D3C0], v41);
            *a8 = (id)objc_claimAutoreleasedReturnValue();
          }
          uint64_t v26 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v14, (uint64_t)&v47, (uint64_t)v53, 16);
      if (v17) {
        continue;
      }
      break;
    }
  }

  if (IMOSLoggingEnabled())
  {
    uint64_t v25 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v52 = v11;
      _os_log_impl(&dword_1A4AF7000, v25, OS_LOG_TYPE_INFO, "Could not find attachment matching attachment guid: %@", buf, 0xCu);
    }
  }
  uint64_t v26 = 0;
LABEL_19:

  return v26;
}

void *sub_1A4C74FE4()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyChats", @"IMDPersistence");
  off_1E965EBA8 = result;
  return result;
}

void *sub_1A4C75014()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDChatRecordCopyGUID", @"IMDPersistence");
  off_1E965EBB8 = result;
  return result;
}

void *sub_1A4C75044()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDChatRecordCopyHandles", @"IMDPersistence");
  off_1E965EBC8 = result;
  return result;
}

void *sub_1A4C75074()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("_IMDChatRecordBulkCopy", @"IMDPersistence");
  off_1E965EBD8 = result;
  return result;
}

id sub_1A4C750A4(uint64_t a1)
{
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Beginning _dateForLastReadMessageInChatForMessage", buf, 2u);
    }
  }
  if (a1)
  {
    if (qword_1E965ED50 != -1) {
      dispatch_once(&qword_1E965ED50, &unk_1EF8E4250);
    }
    id v3 = (void *)off_1E965ED48(a1);
    if (objc_msgSend_count(v3, v4, v5, v6))
    {
      uint64_t Object = objc_msgSend_firstObject(v3, v7, v8, v9);
      if (qword_1E965ED60 != -1) {
        dispatch_once(&qword_1E965ED60, &unk_1EF8E6A28);
      }
      uint64_t v23 = 0;
      *(void *)long long buf = 0;
      off_1E965ED58(Object, 0, 0, 0, 0, buf, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,
        &v23,
        0,
        0,
        0,
        0,
        0,
        0,
        0);
      if (v23 < 1)
      {
        if (qword_1E965ED70 != -1) {
          dispatch_once(&qword_1E965ED70, &unk_1EF8E6A48);
        }
        uint64_t v15 = off_1E965ED68(*(void *)buf);
        if (v15)
        {
          uint64_t v16 = (const void *)v15;
          if (qword_1E965ED80 != -1) {
            dispatch_once(&qword_1E965ED80, &unk_1EF8E6A68);
          }
          *(void *)uint64_t v22 = 0;
          off_1E965ED78(v16, 0, 0, 0, 0, 0, v22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0);
          uint64_t v14 = objc_msgSend___im_dateWithNanosecondTimeIntervalSinceReferenceDate_(MEMORY[0x1E4F1C9C8], v17, v18, v19, (double)*(uint64_t *)v22);
          CFRelease(v16);
        }
        else
        {
          uint64_t v14 = 0;
        }
      }
      else
      {
        uint64_t v14 = objc_msgSend___im_dateWithNanosecondTimeIntervalSinceReferenceDate_(MEMORY[0x1E4F1C9C8], v11, v12, v13, (double)v23);
      }
      if (*(void *)buf)
      {
        CFRelease(*(CFTypeRef *)buf);
        *(void *)long long buf = 0;
      }
      if (IMOSLoggingEnabled())
      {
        long long v20 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl(&dword_1A4AF7000, v20, OS_LOG_TYPE_INFO, "Completed _dateForLastReadMessageInChatForMessage", v22, 2u);
        }
      }
    }
    else
    {
      uint64_t v14 = 0;
    }
  }
  else
  {
    uint64_t v14 = 0;
  }

  return v14;
}

BOOL IMSPIMessageTypeHasAssociatedMessage(uint64_t a1)
{
  return (unint64_t)(a1 - 200) > 0x16 && (unint64_t)(a1 - 105) < 9;
}

void *sub_1A4C7540C()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessageForGUID", @"IMDPersistence");
  off_1E965EBE8 = result;
  return result;
}

uint64_t IMSPIQueryLastReceivedMessage(void *a1, void *a2)
{
  return IMSPIQueryLastReceivedMessageWithQOS(QOS_CLASS_DEFAULT, a2, a1);
}

uint64_t IMSPIQueryLastReceivedMessageWithQOS(dispatch_qos_class_t a1, void *a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  id v10 = v6;
  if (v5) {
    BOOL v11 = v6 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  uint64_t v12 = !v11;
  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 136315138;
        uint64_t v22 = "BOOL IMSPIQueryLastReceivedMessageWithQOS(dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPIM"
              "essageQueryCallback)";
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v13 = objc_msgSend_copy(v6, v7, v8, v9);

    uint64_t v14 = sub_1A4C70D74(a1);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C7560C;
    block[3] = &unk_1E5B7F4D8;
    dispatch_qos_class_t v20 = a1;
    id v18 = v5;
    id v10 = v13;
    id v19 = v10;
    dispatch_async(v14, block);
  }
  return v12;
}

void sub_1A4C7560C(uint64_t a1)
{
  if (qword_1E965EC00 != -1) {
    dispatch_once(&qword_1E965EC00, &unk_1EF8E4070);
  }
  id v2 = (const void *)off_1E965EBF8();
  id v3 = objc_alloc_init(MEMORY[0x1E4F1C998]);
  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x3032000000;
  v14[3] = sub_1A4B3461C;
  void v14[4] = sub_1A4B343F4;
  id v15 = 0;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C7580C;
  block[3] = &unk_1E5B7F488;
  BOOL v11 = v14;
  uint64_t v12 = v2;
  id v4 = v3;
  id v10 = v4;
  int v13 = *(_DWORD *)(a1 + 48);
  dispatch_sync(MEMORY[0x1E4F14428], block);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_1A4C75868;
  void v6[3] = &unk_1E5B7F4B0;
  uint64_t v8 = v14;
  id v5 = *(NSObject **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  dispatch_async(v5, v6);
  if (v2) {
    CFRelease(v2);
  }

  _Block_object_dispose(v14, 8);
}

void sub_1A4C757C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A4C757DC()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyLastReceivedMessage", @"IMDPersistence");
  off_1E965EBF8 = result;
  return result;
}

uint64_t sub_1A4C7580C(uint64_t a1)
{
  uint64_t v2 = _IMSPIMessageFromRecord(*(void *)(a1 + 48), 1, 0, *(void **)(a1 + 32), *(dispatch_qos_class_t *)(a1 + 56));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return MEMORY[0x1F41817F8](v2, v4);
}

void sub_1A4C75868(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v5) {
    objc_msgSend_arrayWithObject_(MEMORY[0x1E4F1C978], a2, v5, a4);
  }
  else {
    objc_msgSend_array(MEMORY[0x1E4F1C978], a2, 0, a4);
  }
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t IMSPIUnreadMessageCount(void *a1, void *a2)
{
  return IMSPIUnreadMessageCountWithQOS(QOS_CLASS_DEFAULT, a2, a1);
}

uint64_t IMSPIUnreadMessageCountWithQOS(dispatch_qos_class_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v10 = v6;
  if (v5) {
    BOOL v11 = v6 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  uint64_t v12 = !v11;
  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      id v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Empty queue or callback block provided to IMSPIUnreadMessageCount", buf, 2u);
      }
    }
  }
  else
  {
    int v13 = objc_msgSend_copy(v6, v7, v8, v9);

    uint64_t v14 = sub_1A4C70D74(a1);
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    void v17[2] = sub_1A4C75A64;
    v17[3] = &unk_1E5B7F310;
    id v18 = v5;
    id v10 = v13;
    id v19 = v10;
    dispatch_async(v14, v17);
  }
  return v12;
}

void sub_1A4C75A64(uint64_t a1)
{
  if (qword_1E965EC10 != -1) {
    dispatch_once(&qword_1E965EC10, &unk_1EF8E40B0);
  }
  uint64_t v2 = off_1E965EC08();
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4C75B60;
  v4[3] = &unk_1E5B7F360;
  uint64_t v3 = *(NSObject **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = v2;
  dispatch_async(v3, v4);
}

void *sub_1A4C75B30()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCountAllUnreadMessages", @"IMDPersistence");
  off_1E965EC08 = result;
  return result;
}

uint64_t sub_1A4C75B60(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

uint64_t IMSPIShareSheetCanSendMedia(int a1, const char *a2, uint64_t a3, uint64_t a4)
{
  int v4 = a3;
  int v5 = (int)a2;
  id v7 = objc_msgSend_sharedInstance(MEMORY[0x1E4F61778], a2, a3, a4);
  int v11 = objc_msgSend_iMessageSupported(v7, v8, v9, v10);

  int AddressedHandle_simID = objc_msgSend_iMessageEnabledForSenderLastAddressedHandle_simID_(IMServiceImpl, v12, 0, 0);
  int v16 = objc_msgSend_mmsEnabledforPhoneNumber_simID_(IMServiceImpl, v14, 0, 0);
  if ((v16 & 1) == 0 && !v11) {
    return 0;
  }
  uint64_t result = 1;
  if ((v11 & AddressedHandle_simID & 1) == 0 && ((v16 ^ 1) & 1) == 0)
  {
    if (v5 + a1 + v4 <= (int)objc_msgSend_IMMMSMaximumSlideCountForPhoneNumber_simID_(MEMORY[0x1E4F6E660], v15, 0, 0)&& (v5 < 1 || v4 <= 0))
    {
      float v19 = (double)(int)objc_msgSend_IMMMSMaximumSlideCountForPhoneNumber_simID_(MEMORY[0x1E4F6E660], v18, 0, 0)
          * 0.95
          / 10240.0;
      if ((int)fmaxf(floorf(v19), 1.0) >= a1) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t IMSPILastFailedMessageDate(void *a1, void *a2)
{
  return IMSPILastFailedMessageDateWithQOS(QOS_CLASS_DEFAULT, a2, a1);
}

uint64_t IMSPILastFailedMessageDateWithQOS(dispatch_qos_class_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v10 = v6;
  if (v5) {
    BOOL v11 = v6 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  uint64_t v12 = !v11;
  if (v11)
  {
    if (IMOSLoggingEnabled())
    {
      id v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Empty queue or callback block provided to IMSPILastFailedMessageDate", buf, 2u);
      }
    }
  }
  else
  {
    int v13 = objc_msgSend_copy(v6, v7, v8, v9);

    uint64_t v14 = sub_1A4C70D74(a1);
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    void v17[2] = sub_1A4C75E18;
    v17[3] = &unk_1E5B7F310;
    id v18 = v5;
    id v10 = v13;
    id v19 = v10;
    dispatch_async(v14, v17);
  }
  return v12;
}

void sub_1A4C75E18(uint64_t a1)
{
  if (qword_1E965EC20 != -1) {
    dispatch_once(&qword_1E965EC20, &unk_1EF8E40D0);
  }
  uint64_t v2 = off_1E965EC18();
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = sub_1A4C75F14;
  v4[3] = &unk_1E5B7F360;
  uint64_t v3 = *(NSObject **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = v2;
  dispatch_async(v3, v4);
}

void *sub_1A4C75EE4()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordLastFailedMessageDate", @"IMDPersistence");
  off_1E965EC18 = result;
  return result;
}

uint64_t sub_1A4C75F14(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

id IMSPISetChatContextForSubscriptionIdentifier(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v99 = *MEMORY[0x1E4F143B8];
  id v83 = a1;
  id v7 = a2;
  id v85 = a3;
  id v8 = a4;
  if (IMOSLoggingEnabled())
  {
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v91 = v8;
      _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "Trying to set chat context for subscription identifier %@", buf, 0xCu);
    }
  }
  int v13 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v9, v10, v11, v83);
  long long v88 = 0u;
  long long v89 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  id v14 = v7;
  uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v15, (uint64_t)&v86, (uint64_t)v98, 16);
  if (v19)
  {
    uint64_t v20 = *(void *)v87;
    do
    {
      for (uint64_t i = 0; i != v19; ++i)
      {
        if (*(void *)v87 != v20) {
          objc_enumerationMutation(v14);
        }
        uint64_t v22 = *(void **)(*((void *)&v86 + 1) + 8 * i);
        if (objc_msgSend_length(v22, v16, v17, v18))
        {
          objc_msgSend_addObject_(v13, v23, (uint64_t)v22, v24);
        }
        else if (IMOSLoggingEnabled())
        {
          uint64_t v25 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl(&dword_1A4AF7000, v25, OS_LOG_TYPE_INFO, "Sending destinations contain empty string", buf, 2u);
          }
        }
      }
      uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v16, (uint64_t)&v86, (uint64_t)v98, 16);
    }
    while (v19);
  }

  BOOL v29 = objc_msgSend_count(v13, v26, v27, v28) == 0;
  uint64_t v30 = IMOSLoggingEnabled();
  if (v29)
  {
    if (v30)
    {
      BOOL v69 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v69, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v91 = v14;
        _os_log_impl(&dword_1A4AF7000, v69, OS_LOG_TYPE_INFO, "Invalid destination specified to send to: %@", buf, 0xCu);
      }
    }
    uint64_t v70 = 0;
  }
  else
  {
    if (v30)
    {
      uint64_t v34 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
      }
    }
    sub_1A4BC09C8(v30, v31, v32, v33);
    uint64_t v35 = sub_1A4C765FC(v84, v13, v85, 0, 1);
    uint64_t v39 = v35;
    if (v35)
    {
      objc_msgSend_lastAddressedSIMID(v35, v36, v37, v38);
      id v40 = (id)objc_claimAutoreleasedReturnValue();
      if (v40 == v8)
      {
        uint64_t v70 = 0;
        id v76 = v8;
      }
      else
      {
        if (IMSharedHelperDeviceHasMultipleSubscriptions() && objc_msgSend_length(v8, v41, v42, v43))
        {
          uint64_t v44 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E668], v41, v42, v43);
          long long v48 = objc_msgSend_ctSubscriptionInfo(v44, v45, v46, v47);
          uint64_t v51 = objc_msgSend___im_subscriptionContextForForSimID_(v48, v49, (uint64_t)v8, v50);

          if (v51)
          {
            id v55 = objc_msgSend_phoneNumber(v51, v52, v53, v54);
            id v59 = objc_msgSend_labelID(v51, v56, v57, v58);
            if (IMOSLoggingEnabled())
            {
              uint64_t v62 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v62, OS_LOG_TYPE_INFO))
              {
                id v66 = objc_msgSend_guid(v39, v63, v64, v65);
                *(_DWORD *)long long buf = 138413058;
                id v91 = v51;
                __int16 v92 = 2112;
                uint64_t v93 = v55;
                __int16 v94 = 2112;
                uint64_t v95 = v59;
                __int16 v96 = 2112;
                uint64_t v97 = v66;
                _os_log_impl(&dword_1A4AF7000, v62, OS_LOG_TYPE_INFO, "Found subscription %@ and setting phoneNumber %@ and simID %@ for chat %@", buf, 0x2Au);
              }
            }
            objc_msgSend_setLastAddressedHandleID_(v39, v60, (uint64_t)v55, v61);
            objc_msgSend_setLastAddressedSIMID_(v39, v67, (uint64_t)v59, v68);
          }
          else if (IMOSLoggingEnabled())
          {
            uint64_t v77 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
            {
              uint64_t v81 = objc_msgSend_guid(v39, v78, v79, v80);
              *(_DWORD *)long long buf = 138412546;
              id v91 = v8;
              __int16 v92 = 2112;
              uint64_t v93 = v81;
              _os_log_impl(&dword_1A4AF7000, v77, OS_LOG_TYPE_INFO, "No subscription found with new simID %@, not changing last addressed IDs of chat %@.", buf, 0x16u);
            }
          }
        }
        objc_msgSend_refreshServiceForSending(v39, v41, v42, v43);
        id v76 = v40;
        uint64_t v70 = v76;
      }
    }
    else
    {
      uint64_t v71 = IMOSLoggingEnabled();
      if (v71)
      {
        uint64_t v75 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v75, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          id v91 = v13;
          _os_log_impl(&dword_1A4AF7000, v75, OS_LOG_TYPE_INFO, "Cannot get chat for destinations: %@", buf, 0xCu);
        }
      }
      sub_1A4BC0A78(v71, v72, v73, v74);
      id v76 = 0;
      uint64_t v70 = 0;
    }
  }

  return v70;
}

void sub_1A4C76578(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C764ECLL);
  }
  _Unwind_Resume(a1);
}

__CFString *sub_1A4C765FC(void *a1, void *a2, void *a3, void *a4, int a5)
{
  uint64_t v141 = *MEMORY[0x1E4F143B8];
  id v8 = a1;
  id v127 = a2;
  id v126 = a3;
  long long v123 = v8;
  uint64_t v124 = a4;
  if (v8)
  {
    objc_msgSend_serviceWithInternalName_(IMServiceImpl, v9, (uint64_t)v8, v10);
    uint64_t v12 = v11 = 0;
  }
  else
  {
    int v13 = objc_msgSend_operationalServicesWithCapability_(IMServiceImpl, v9, 1024, v10);
    uint64_t v17 = objc_msgSend_smsService(IMServiceImpl, v14, v15, v16);
    int v20 = objc_msgSend_containsObject_(v13, v18, (uint64_t)v17, v19);

    if (v20) {
      objc_msgSend_smsService(IMServiceImpl, v21, v22, v23);
    }
    else {
    uint64_t v11 = objc_msgSend_firstObject(v13, v21, v22, v23);
    }

    uint64_t v12 = 0;
  }
  if (v12) {
    uint64_t v24 = (void *)v12;
  }
  else {
    uint64_t v24 = (void *)v11;
  }
  id v25 = v24;
  uint64_t v122 = (void *)v11;
  id v125 = (void *)v12;
  if (v25)
  {
    id v121 = v25;
    IMPreferredSendingAccountForAddressesWantsGroupWithFallbackService(v127, 1, v25);
    uint64_t v26 = (__CFString *)objc_claimAutoreleasedReturnValue();
    uint64_t v30 = v26;
    if (v12)
    {
      uint64_t v31 = objc_msgSend_service(v26, v27, v28, v29);
      BOOL v32 = v31 != (void *)v12;
    }
    else
    {
      BOOL v32 = 0;
    }
    int isUsableForSending = objc_msgSend__isUsableForSending(v30, v27, v28, v29);
    int v36 = isUsableForSending;
    if (v32 || !isUsableForSending)
    {
      int v38 = IMOSLoggingEnabled();
      uint64_t v39 = v121;
      if (v38)
      {
        id v40 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
        {
          uint64_t v41 = @"NO";
          if (v32) {
            uint64_t v42 = @"YES";
          }
          else {
            uint64_t v42 = @"NO";
          }
          *(_DWORD *)long long buf = 138412802;
          uint64_t v133 = v30;
          __int16 v134 = 2112;
          id v135 = v42;
          if (!v36) {
            uint64_t v41 = @"YES";
          }
          __int16 v136 = 2112;
          id v137 = v41;
          _os_log_impl(&dword_1A4AF7000, v40, OS_LOG_TYPE_INFO, "Account: %@  is not usable for sending, finding a better one... different from asking: %@, account cannot send: %@", buf, 0x20u);
        }

        uint64_t v39 = v121;
      }
      IMPreferredAccountForService(v39);
      uint64_t v37 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (IMOSLoggingEnabled())
      {
        uint64_t v43 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v133 = v37;
          _os_log_impl(&dword_1A4AF7000, v43, OS_LOG_TYPE_INFO, "   => Found: %@", buf, 0xCu);
        }
      }
    }
    else
    {
      uint64_t v37 = v30;
    }
    int v44 = IMOSLoggingEnabled();
    if (!v37)
    {
      if (v44)
      {
        uint64_t v80 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v80, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v133 = v8;
          _os_log_impl(&dword_1A4AF7000, v80, OS_LOG_TYPE_INFO, "No account found matching service: %@", buf, 0xCu);
        }
      }
      uint64_t v34 = 0;
      goto LABEL_98;
    }
    if (v44)
    {
      long long v48 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v48, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v133 = v37;
        _os_log_impl(&dword_1A4AF7000, v48, OS_LOG_TYPE_INFO, "Using account: %@", buf, 0xCu);
      }
    }
    objc_msgSend_array(MEMORY[0x1E4F1CA48], v45, v46, v47);
    long long v49 = (__CFString *)objc_claimAutoreleasedReturnValue();
    long long v130 = 0u;
    long long v131 = 0u;
    long long v128 = 0u;
    long long v129 = 0u;
    uint64_t v50 = (__CFString *)v127;
    uint64_t v52 = objc_msgSend_countByEnumeratingWithState_objects_count_(v50, v51, (uint64_t)&v128, (uint64_t)v140, 16);
    if (v52)
    {
      uint64_t v53 = *(void *)v129;
      do
      {
        for (uint64_t i = 0; i != v52; ++i)
        {
          if (*(void *)v129 != v53) {
            objc_enumerationMutation(v50);
          }
          IMStripFormattingFromAddress();
          uint64_t v56 = (__CFString *)objc_claimAutoreleasedReturnValue();
          if (v56)
          {
            id v59 = objc_msgSend_imHandleWithID_alreadyCanonical_(v37, v55, (uint64_t)v56, 0);
            if (v59)
            {
              objc_msgSend_addObject_(v49, v57, (uint64_t)v59, v58);
            }
            else if (IMOSLoggingEnabled())
            {
              uint64_t v60 = OSLogHandleForIMFoundationCategory();
              if (os_log_type_enabled(v60, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                uint64_t v133 = v56;
                _os_log_impl(&dword_1A4AF7000, v60, OS_LOG_TYPE_INFO, "account doesn't have a handle for raw address %@", buf, 0xCu);
              }
            }
          }
        }
        uint64_t v52 = objc_msgSend_countByEnumeratingWithState_objects_count_(v50, v61, (uint64_t)&v128, (uint64_t)v140, 16);
      }
      while (v52);
    }

    if (!objc_msgSend_count(v49, v62, v63, v64))
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v81 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v81, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412546;
          uint64_t v133 = v50;
          __int16 v134 = 2112;
          id v135 = v37;
          _os_log_impl(&dword_1A4AF7000, v81, OS_LOG_TYPE_INFO, "Could not get handle for %@ on account: %@", buf, 0x16u);
        }
      }
      uint64_t v34 = 0;
      goto LABEL_97;
    }
    if (v126)
    {
      uint64_t v68 = objc_msgSend_sharedRegistry(IMChatRegistry, v65, v66, v67);
      objc_msgSend_existingChatWithGUID_(v68, v69, (uint64_t)v126, v70);
      uint64_t v34 = (__CFString *)objc_claimAutoreleasedReturnValue();

      uint64_t v74 = objc_msgSend_participants(v34, v71, v72, v73);
      char v77 = objc_msgSend_equivalentToRecipients_(v74, v75, (uint64_t)v49, v76);

      if (v77)
      {
        if (IMOSLoggingEnabled())
        {
          uint64_t v78 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v78, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            uint64_t v133 = v34;
            _os_log_impl(&dword_1A4AF7000, v78, OS_LOG_TYPE_INFO, "Had originally found a chat: %@", buf, 0xCu);
          }
        }
        if (IMOSLoggingEnabled())
        {
          uint64_t v79 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            uint64_t v133 = v49;
            _os_log_impl(&dword_1A4AF7000, v79, OS_LOG_TYPE_INFO, "But it's handles were not equivalent: %@", buf, 0xCu);
          }
        }
        if (v34) {
          goto LABEL_83;
        }
      }
      else
      {
      }
    }
    uint64_t v82 = objc_msgSend_sharedRegistry(IMChatRegistry, v65, v66, v67);
    id v85 = v82;
    if (a5) {
      objc_msgSend_chatWithHandles_(v82, v83, (uint64_t)v49, v84);
    }
    else {
      objc_msgSend_existingChatWithHandles_allowAlternativeService_(v82, v83, (uint64_t)v49, 0);
    }
    uint64_t v34 = (__CFString *)objc_claimAutoreleasedReturnValue();

    if (!v34)
    {
LABEL_97:

LABEL_98:
      id v25 = v121;
      goto LABEL_99;
    }
LABEL_83:
    if (IMSharedHelperDeviceHasMultipleSubscriptions() && objc_msgSend_length(v124, v86, v87, v88))
    {
      long long v89 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E668], v86, v87, v88);
      uint64_t v93 = objc_msgSend_ctSubscriptionInfo(v89, v90, v91, v92);
      objc_msgSend___im_subscriptionContextForForSimID_(v93, v94, (uint64_t)v124, v95);
      __int16 v96 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (v96)
      {
        objc_msgSend_phoneNumber(v96, v97, v98, v99);
        uint64_t v100 = (__CFString *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_labelID(v96, v101, v102, v103);
        id v104 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if (IMOSLoggingEnabled())
        {
          uint64_t v107 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v107, OS_LOG_TYPE_INFO))
          {
            uint64_t v111 = objc_msgSend_guid(v34, v108, v109, v110);
            *(_DWORD *)long long buf = 138413058;
            uint64_t v133 = v96;
            __int16 v134 = 2112;
            id v135 = v100;
            __int16 v136 = 2112;
            id v137 = v104;
            __int16 v138 = 2112;
            uint64_t v139 = v111;
            _os_log_impl(&dword_1A4AF7000, v107, OS_LOG_TYPE_INFO, "Found subscription %@ and setting phoneNumber %@ and simID %@ for chat %@", buf, 0x2Au);
          }
        }
        objc_msgSend_setLastAddressedHandleID_(v34, v105, (uint64_t)v100, v106);
        objc_msgSend_setLastAddressedSIMID_(v34, v112, (uint64_t)v104, v113);
      }
      else if (IMOSLoggingEnabled())
      {
        long long v114 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v114, OS_LOG_TYPE_INFO))
        {
          objc_msgSend_guid(v34, v115, v116, v117);
          uint64_t v118 = (__CFString *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)long long buf = 138412546;
          uint64_t v133 = v124;
          __int16 v134 = 2112;
          id v135 = v118;
          _os_log_impl(&dword_1A4AF7000, v114, OS_LOG_TYPE_INFO, "No subscription found with new simID %@, not changing last addressed IDs of chat %@.", buf, 0x16u);
        }
      }
    }
    objc_msgSend_join(v34, v86, v87, v88);
    goto LABEL_97;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v33 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v33, OS_LOG_TYPE_INFO, "No operational service to use", buf, 2u);
    }
  }
  uint64_t v34 = 0;
LABEL_99:

  return v34;
}

void sub_1A4C76F3C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C76EA0);
  }
  _Unwind_Resume(a1);
}

uint64_t IMSPISendMessageWithAttachmentsToMany(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return sub_1A4C77050(a1, a2, a3, a4, 0, 0, 0, a5, 0, 0, 0, 0, 0);
}

uint64_t sub_1A4C77050(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13)
{
  uint64_t v85 = *MEMORY[0x1E4F143B8];
  id v20 = a1;
  id v21 = a2;
  id v52 = a3;
  id v63 = a4;
  id v54 = a5;
  id v55 = a6;
  id v56 = a7;
  id v60 = a8;
  id v57 = a9;
  id v61 = a10;
  id v62 = a11;
  id v58 = a12;
  id v59 = a13;
  if (IMOSLoggingEnabled())
  {
    id v25 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v84 = v62;
      _os_log_impl(&dword_1A4AF7000, v25, OS_LOG_TYPE_INFO, "Trying to send message with attachments for subscription identifier %@", buf, 0xCu);
    }
  }
  uint64_t v26 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v22, v23, v24, v52);
  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  id v27 = v21;
  uint64_t v32 = objc_msgSend_countByEnumeratingWithState_objects_count_(v27, v28, (uint64_t)&v78, (uint64_t)v82, 16);
  if (v32)
  {
    uint64_t v33 = *(void *)v79;
    do
    {
      for (uint64_t i = 0; i != v32; ++i)
      {
        if (*(void *)v79 != v33) {
          objc_enumerationMutation(v27);
        }
        uint64_t v35 = *(void **)(*((void *)&v78 + 1) + 8 * i);
        if (objc_msgSend_length(v35, v29, v30, v31))
        {
          objc_msgSend_addObject_(v26, v36, (uint64_t)v35, v37);
        }
        else if (IMOSLoggingEnabled())
        {
          int v38 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl(&dword_1A4AF7000, v38, OS_LOG_TYPE_INFO, "Sending destinations contain empty string", buf, 2u);
          }
        }
      }
      uint64_t v32 = objc_msgSend_countByEnumeratingWithState_objects_count_(v27, v29, (uint64_t)&v78, (uint64_t)v82, 16);
    }
    while (v32);
  }

  if (!objc_msgSend_count(v26, v39, v40, v41))
  {
    if (IMOSLoggingEnabled())
    {
      long long v49 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v84 = v27;
        _os_log_impl(&dword_1A4AF7000, v49, OS_LOG_TYPE_INFO, "Invalid destination specified to send to: %@", buf, 0xCu);
      }
      goto LABEL_30;
    }
LABEL_31:
    uint64_t v48 = 0;
    goto LABEL_32;
  }
  if (!objc_msgSend_length(v63, v42, v43, v44))
  {
    uint64_t v50 = objc_msgSend_count(v60, v45, v46, v47);
    if (!v61 && !v50)
    {
      if (IMOSLoggingEnabled())
      {
        long long v49 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v49, OS_LOG_TYPE_INFO, "Empty message specified to send with no attachments or payloadData, ignoring", buf, 2u);
        }
LABEL_30:

        goto LABEL_31;
      }
      goto LABEL_31;
    }
  }
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C8399C;
  block[3] = &unk_1E5B7F828;
  id v65 = v60;
  id v66 = v61;
  id v67 = v20;
  id v68 = v26;
  id v69 = v53;
  id v70 = v62;
  id v71 = v63;
  id v72 = v54;
  id v73 = v55;
  id v74 = v56;
  id v75 = v57;
  id v76 = v58;
  id v77 = v59;
  dispatch_async(MEMORY[0x1E4F14428], block);

  uint64_t v48 = 1;
LABEL_32:

  return v48;
}

uint64_t IMSPISendMessageWithAttachmentsToManyWithCB(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  return sub_1A4C77050(a1, a2, a3, a4, 0, 0, 0, a5, 0, 0, 0, 0, a6);
}

uint64_t IMSPISendMessageWithAttachmentsReturningGUIDForSubscriptionIdentifier(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  v22[0] = a2;
  uint64_t v11 = (void *)MEMORY[0x1E4F1C978];
  id v12 = a6;
  id v13 = a5;
  id v14 = a4;
  id v15 = a3;
  id v16 = a2;
  id v17 = a1;
  uint64_t v19 = objc_msgSend_arrayWithObjects_count_(v11, v18, (uint64_t)v22, 1);

  uint64_t v20 = sub_1A4C77050(v17, v19, 0, v15, 0, 0, 0, v14, 0, 0, v13, 0, v12);
  return v20;
}

uint64_t IMSPISendMessageWithAttachments(void *a1, void *a2, void *a3, void *a4)
{
  return IMSPISendMessageWithAttachmentsReturningGUIDForSubscriptionIdentifier(a1, a2, a3, a4, 0, 0);
}

uint64_t IMSPISendMessageWithAttachmentsReturningGUID(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return IMSPISendMessageWithAttachmentsReturningGUIDForSubscriptionIdentifier(a1, a2, a3, a4, 0, a5);
}

uint64_t IMSPISendMessageWithAttachmentsFromSubscriptionIdentifier(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return IMSPISendMessageWithAttachmentsReturningGUIDForSubscriptionIdentifier(a1, a2, a3, a4, a5, 0);
}

uint64_t IMSPISendRichLink(void *a1, void *a2, void *a3, void *a4)
{
  v17[1] = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v11 = a4;
  if (v7)
  {
    v17[0] = v7;
    id v12 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v10, (uint64_t)v17, 1);
    uint64_t v13 = IMSPISendRichLinkToMany(v12, 0, v8, v9, v11);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "Destination cannot be nil.", v16, 2u);
      }
    }
    uint64_t v13 = 0;
  }

  return v13;
}

uint64_t IMSPISendRichLinkToMany(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  if (v11 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if (IMOSLoggingEnabled())
    {
      id v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "Sending rich link", buf, 2u);
      }
    }
    id v15 = IMSharedHelperCombinedPluginPayloadDictionaryData();
    uint64_t v19 = objc_msgSend_absoluteString(v11, v16, v17, v18);
    uint64_t v20 = sub_1A4C77050(@"iMessage", v9, v10, v19, 0, 0, 0, 0, (void *)*MEMORY[0x1E4F6CC10], v15, 0, 0, 0);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      id v21 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v24 = v11;
        _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_INFO, "IMCoreSPI: url is not an NSURL %@", buf, 0xCu);
      }
    }
    uint64_t v20 = 0;
  }

  return v20;
}

void IMSPICancelScheduledMessageWithGUID(void *a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v5 = objc_msgSend_length(v1, v2, v3, v4);
  uint64_t v6 = IMOSLoggingEnabled();
  if (v5)
  {
    if (v6)
    {
      id v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LOWORD(v19) = 0;
        _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Setting the chat cap only", (uint8_t *)&v19, 2u);
      }
    }
    sub_1A4BC09C8(v6, v7, v8, v9);
    if (IMOSLoggingEnabled())
    {
      id v14 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        int v19 = 138412290;
        id v20 = v1;
        _os_log_impl(&dword_1A4AF7000, v14, OS_LOG_TYPE_INFO, "Cancel scheduled message with GUID: %@", (uint8_t *)&v19, 0xCu);
      }
    }
    id v15 = objc_msgSend_sharedInstance(IMDaemonController, v11, v12, v13);
    objc_msgSend_cancelScheduledMessageWithGUID_(v15, v16, (uint64_t)v1, v17);
  }
  else if (v6)
  {
    uint64_t v18 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      LOWORD(v19) = 0;
      _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Empty message GUID passed in.", (uint8_t *)&v19, 2u);
    }
  }
}

uint64_t IMSPICancelScheduledMessageWithGUIDAndDestination(void *a1, void *a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (!objc_msgSend_length(v3, v5, v6, v7))
  {
    if (IMOSLoggingEnabled())
    {
      id v20 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        LOWORD(v22) = 0;
        _os_log_impl(&dword_1A4AF7000, v20, OS_LOG_TYPE_INFO, "Empty message GUID passed in.", (uint8_t *)&v22, 2u);
      }
      goto LABEL_19;
    }
LABEL_20:
    uint64_t v19 = 0;
    goto LABEL_21;
  }
  uint64_t v8 = IMOSLoggingEnabled();
  if (!v4)
  {
    if (v8)
    {
      id v20 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        LOWORD(v22) = 0;
        _os_log_impl(&dword_1A4AF7000, v20, OS_LOG_TYPE_INFO, "Empty destination passed in.", (uint8_t *)&v22, 2u);
      }
LABEL_19:

      goto LABEL_20;
    }
    goto LABEL_20;
  }
  if (v8)
  {
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      LOWORD(v22) = 0;
      _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "Setting the chat cap only", (uint8_t *)&v22, 2u);
    }
  }
  sub_1A4BC09C8(v8, v9, v10, v11);
  if (IMOSLoggingEnabled())
  {
    id v16 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      int v22 = 138412546;
      id v23 = v3;
      __int16 v24 = 2112;
      id v25 = v4;
      _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, "Cancel scheduled message with GUID: %@, destination: %@", (uint8_t *)&v22, 0x16u);
    }
  }
  uint64_t v17 = objc_msgSend_sharedInstance(IMDaemonController, v13, v14, v15);
  objc_msgSend_cancelScheduledMessageWithGUID_destination_(v17, v18, (uint64_t)v3, (uint64_t)v4);

  uint64_t v19 = 1;
LABEL_21:

  return v19;
}

uint64_t IMSPICancelScheduledMessageWithGUIDAndDestinations(void *a1, void *a2)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (!objc_msgSend_length(v3, v5, v6, v7))
  {
    if (IMOSLoggingEnabled())
    {
      id v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        LOWORD(v25) = 0;
        _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Empty message GUID passed in.", (uint8_t *)&v25, 2u);
      }
      goto LABEL_20;
    }
LABEL_21:
    uint64_t v22 = 0;
    goto LABEL_22;
  }
  if (!v4 || !objc_msgSend_count(v4, v8, v9, v10))
  {
    if (IMOSLoggingEnabled())
    {
      id v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        LOWORD(v25) = 0;
        _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Empty destinations passed in.", (uint8_t *)&v25, 2u);
      }
LABEL_20:

      goto LABEL_21;
    }
    goto LABEL_21;
  }
  uint64_t v11 = IMOSLoggingEnabled();
  if (v11)
  {
    uint64_t v15 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      LOWORD(v25) = 0;
      _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Setting the chat cap only", (uint8_t *)&v25, 2u);
    }
  }
  sub_1A4BC09C8(v11, v12, v13, v14);
  if (IMOSLoggingEnabled())
  {
    uint64_t v19 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      int v25 = 138412546;
      id v26 = v3;
      __int16 v27 = 2112;
      id v28 = v4;
      _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "Cancel scheduled message with GUID: %@, destinations: %@", (uint8_t *)&v25, 0x16u);
    }
  }
  id v20 = objc_msgSend_sharedInstance(IMDaemonController, v16, v17, v18);
  objc_msgSend_cancelScheduledMessageWithGUID_destinations_cancelType_(v20, v21, (uint64_t)v3, (uint64_t)v4, 0);

  uint64_t v22 = 1;
LABEL_22:

  return v22;
}

uint64_t IMSPIScheduleSendMSMessagePayloadReturningGUID(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v13 = (void *)*MEMORY[0x1E4F6CBE8];
  id v14 = a7;
  id v15 = a6;
  id v16 = a5;
  id v17 = a4;
  id v18 = a2;
  id v19 = a1;
  uint64_t v22 = objc_msgSend_stringByAppendingFormat_(v13, v20, @":0000000000:%@", v21, a3);
  id v23 = sub_1A4C782EC(v19);
  uint64_t v24 = sub_1A4C77050(@"iMessage", v18, v17, 0, v23, 0, 0, v15, v22, v19, 0, v16, v14);

  return v24;
}

id sub_1A4C782EC(void *a1)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = IMExtensionPayloadUnarchivingClasses();
    if (objc_opt_respondsToSelector())
    {
      id v19 = 0;
      id v4 = objc_msgSend__strictlyUnarchivedObjectOfClasses_fromData_error_(MEMORY[0x1E4F28DC0], v3, (uint64_t)v2, (uint64_t)v1, &v19);
      id v5 = v19;
      if (IMOSLoggingEnabled())
      {
        uint64_t v6 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          id v23 = v5;
          _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Finished _strictlyUnarchivedObjectOfClasses for payloadData. Error: [%@]", buf, 0xCu);
        }
      }
    }
    else
    {
      id v18 = 0;
      id v4 = objc_msgSend_unarchivedObjectOfClasses_fromData_error_(MEMORY[0x1E4F28DC0], v3, (uint64_t)v2, (uint64_t)v1, &v18);
      id v5 = v18;
      if (IMOSLoggingEnabled())
      {
        uint64_t v8 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          id v23 = v5;
          _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Finished unarchivedObjectOfClasses for payloadData. Error: [%@]", buf, 0xCu);
        }
      }
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v11 = objc_msgSend_objectForKey_(v4, v9, *MEMORY[0x1E4F6D318], v10);
      if (v11 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        uint64_t v13 = *MEMORY[0x1E4F6C140];
        v20[0] = *MEMORY[0x1E4F6C138];
        v20[1] = v13;
        v21[0] = v11;
        v21[1] = &unk_1EF9145F0;
        id v14 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v12, (uint64_t)v21, (uint64_t)v20, 2);
        id v15 = objc_alloc(MEMORY[0x1E4F28B18]);
        uint64_t v7 = objc_msgSend_initWithString_attributes_(v15, v16, *MEMORY[0x1E4F6C130], (uint64_t)v14);
      }
      else
      {
        uint64_t v7 = 0;
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

uint64_t IMSPIScheduleSendMSMessagePayloadWithSummaryTextReturningGUID(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15 = (void *)*MEMORY[0x1E4F6CBE8];
  id v16 = a8;
  id v17 = a7;
  id v18 = a6;
  id v19 = a5;
  id v20 = a4;
  id v21 = a2;
  id v22 = a1;
  int v25 = objc_msgSend_stringByAppendingFormat_(v15, v23, @":0000000000:%@", v24, a3);
  id v26 = sub_1A4C782EC(v22);
  uint64_t v27 = sub_1A4C77050(@"iMessage", v21, v20, 0, v26, 0, v18, v17, v25, v22, 0, v19, v16);

  return v27;
}

uint64_t IMSPIScheduleSendMSMessagePayloadWithSummaryTextAndGUID(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15 = a6;
  id v16 = (void *)*MEMORY[0x1E4F6CBE8];
  id v17 = a8;
  id v18 = a7;
  id v19 = a5;
  id v20 = a4;
  id v21 = a2;
  id v22 = a1;
  int v25 = objc_msgSend_stringByAppendingFormat_(v16, v23, @":0000000000:%@", v24, a3);
  id v26 = sub_1A4C782EC(v22);
  v30[0] = MEMORY[0x1E4F143A8];
  v30[1] = 3221225472;
  void v30[2] = sub_1A4C78878;
  v30[3] = &unk_1E5B7D550;
  id v31 = v15;
  id v27 = v15;
  uint64_t v28 = sub_1A4C77050(@"iMessage", v21, v20, 0, v26, v27, v18, v17, v25, v22, 0, v19, v30);

  return v28;
}

void sub_1A4C78878(uint64_t a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  char isEqualToString = objc_msgSend_isEqualToString_(v3, v4, *(void *)(a1 + 32), v5);
  int v7 = IMOSLoggingEnabled();
  if (isEqualToString)
  {
    if (v7)
    {
      uint64_t v8 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        uint64_t v9 = *(void **)(a1 + 32);
        int v11 = 138412290;
        id v12 = v9;
        _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Returned GUID matches %@.", (uint8_t *)&v11, 0xCu);
      }
LABEL_9:
    }
  }
  else if (v7)
  {
    uint64_t v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = 138412546;
      id v12 = v3;
      __int16 v13 = 2112;
      uint64_t v14 = v10;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "IMCoreSPI: Returned GUID (%@) does not match requested GUID (%@).", (uint8_t *)&v11, 0x16u);
    }
    goto LABEL_9;
  }
}

uint64_t IMSPISendMSMessagePayload(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  id v17 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v14, v15, v16);
  if (objc_msgSend_isWaldoEnabled(v17, v18, v19, v20))
  {

LABEL_9:
    uint64_t v25 = IMSPISendMSMessagePayloadReturningGUID(v9, v10, v11, v12, 0, v13, 0);
    goto LABEL_10;
  }
  int v23 = objc_msgSend_containsString_(v11, v21, *MEMORY[0x1E4F6CB30], v22);

  if (!v23) {
    goto LABEL_9;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v24 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v27 = 0;
      _os_log_impl(&dword_1A4AF7000, v24, OS_LOG_TYPE_INFO, "IMCoreSPI: Waldo is disabled, and client attempted to send a waldo plugin message. Aborting.", v27, 2u);
    }
  }
  uint64_t v25 = 0;
LABEL_10:

  return v25;
}

uint64_t IMSPISendMSMessagePayloadReturningGUID(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  id v19 = a7;
  int v23 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v20, v21, v22);
  if (objc_msgSend_isWaldoEnabled(v23, v24, v25, v26))
  {

LABEL_9:
    uint64_t v34 = objc_msgSend_stringByAppendingFormat_((void *)*MEMORY[0x1E4F6CBE8], v29, @":0000000000:%@", v30, v15);
    uint64_t v35 = sub_1A4C782EC(v13);
    uint64_t v33 = sub_1A4C77050(@"iMessage", v14, v16, 0, v35, v17, 0, v18, v34, v13, 0, 0, v19);

    goto LABEL_10;
  }
  int v31 = objc_msgSend_containsString_(v15, v27, *MEMORY[0x1E4F6CB30], v28);

  if (!v31) {
    goto LABEL_9;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v32 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v32, OS_LOG_TYPE_INFO, "IMCoreSPI: Waldo is disabled, and client attempted to send a waldo plugin message. Aborting.", buf, 2u);
    }
  }
  uint64_t v33 = 0;
LABEL_10:

  return v33;
}

uint64_t IMSPISendMSMessagePayloadWithSummaryTextReturningGUID(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  id v14 = (void *)*MEMORY[0x1E4F6CBE8];
  id v15 = a8;
  id v16 = a7;
  id v17 = a6;
  id v18 = a4;
  id v19 = a2;
  id v20 = a1;
  int v23 = objc_msgSend_stringByAppendingFormat_(v14, v21, @":0000000000:%@", v22, a3);
  uint64_t v24 = sub_1A4C782EC(v20);
  uint64_t v25 = sub_1A4C77050(@"iMessage", v19, v18, 0, v24, 0, v17, v16, v23, v20, 0, 0, v15);

  return v25;
}

uint64_t IMSPIReceiveMSMessagePayload(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  id v21 = a7;
  id v22 = a8;
  uint64_t v26 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v23, v24, v25);
  if (objc_msgSend_isWaldoEnabled(v26, v27, v28, v29))
  {

LABEL_9:
    uint64_t v37 = objc_msgSend_stringByAppendingFormat_((void *)*MEMORY[0x1E4F6CBE8], v32, @":0000000000:%@", v33, v19);
    sub_1A4BC0970((uint64_t)v37, v38, v39, v40);
    uint64_t v36 = sub_1A4C7901C(v16, v17, v20, v21, v18, v22, v37, v15, 0);

    goto LABEL_10;
  }
  int v34 = objc_msgSend_containsString_(v19, v30, *MEMORY[0x1E4F6CB30], v31);

  if (!v34) {
    goto LABEL_9;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v35 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v35, OS_LOG_TYPE_INFO, "IMCoreSPI: Waldo is disabled, and client attempted to receive a waldo plugin message. Aborting.", buf, 2u);
    }
  }
  uint64_t v36 = 0;
LABEL_10:

  return v36;
}

uint64_t sub_1A4C7901C(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  id v16 = a1;
  id v49 = a2;
  id v50 = a3;
  id v51 = a4;
  id v52 = a5;
  id v54 = a6;
  id v53 = a7;
  id v55 = a8;
  id v17 = a9;
  if (IMOSLoggingEnabled())
  {
    id v21 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v75 = 0;
      _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_INFO, "Trying to send message with attachments for subscription identifier %@", buf, 0xCu);
    }
  }
  id v22 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v18, v19, v20);
  long long v71 = 0u;
  long long v72 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  id v23 = v16;
  uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v24, (uint64_t)&v69, (uint64_t)v73, 16);
  if (v28)
  {
    uint64_t v29 = *(void *)v70;
    do
    {
      for (uint64_t i = 0; i != v28; ++i)
      {
        if (*(void *)v70 != v29) {
          objc_enumerationMutation(v23);
        }
        uint64_t v31 = *(void **)(*((void *)&v69 + 1) + 8 * i);
        if (objc_msgSend_length(v31, v25, v26, v27))
        {
          objc_msgSend_addObject_(v22, v32, (uint64_t)v31, v33);
        }
        else if (IMOSLoggingEnabled())
        {
          int v34 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "Receive participants contain empty string", buf, 2u);
          }
        }
      }
      uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v25, (uint64_t)&v69, (uint64_t)v73, 16);
    }
    while (v28);
  }

  if (!objc_msgSend_count(v22, v35, v36, v37))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v45 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v75 = v23;
        _os_log_impl(&dword_1A4AF7000, v45, OS_LOG_TYPE_INFO, "Invalid participants specified to receive from: %@", buf, 0xCu);
      }
    }
    if (!v17) {
      goto LABEL_35;
    }
LABEL_34:
    v17[2](v17, 0);
LABEL_35:
    uint64_t v44 = 0;
    goto LABEL_36;
  }
  if (!objc_msgSend_length(0, v38, v39, v40))
  {
    uint64_t v46 = objc_msgSend_count(v54, v41, v42, v43);
    if (!v55 && !v46)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v47 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v47, OS_LOG_TYPE_INFO, "Empty message specified to receive with no attachments or payloadData, ignoring", buf, 2u);
        }
      }
      if (!v17) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
  }
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C84804;
  block[3] = &unk_1E5B7F878;
  id v57 = v54;
  id v58 = v55;
  id v59 = @"iMessage";
  id v60 = v22;
  id v61 = v50;
  id v62 = 0;
  id v68 = v17;
  id v63 = v49;
  id v64 = 0;
  id v65 = v51;
  id v66 = v52;
  id v67 = v53;
  dispatch_async(MEMORY[0x1E4F14428], block);

  uint64_t v44 = 1;
LABEL_36:

  return v44;
}

void IMSPIReceiveMSMessagePayloadWithCallback(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9)
{
  id v42 = a1;
  id v16 = a2;
  id v17 = a3;
  id v18 = a4;
  id v19 = a5;
  id v20 = a6;
  id v21 = a7;
  id v22 = a8;
  id v23 = a9;
  uint64_t v27 = objc_msgSend_sharedFeatureFlags(MEMORY[0x1E4F6E778], v24, v25, v26);
  if (objc_msgSend_isWaldoEnabled(v27, v28, v29, v30))
  {

LABEL_10:
    int v38 = objc_msgSend_stringByAppendingFormat_((void *)*MEMORY[0x1E4F6CBE8], v33, @":0000000000:%@", v34, v19);
    sub_1A4BC0970((uint64_t)v38, v39, v40, v41);
    sub_1A4C7901C(v16, v17, v20, v21, v18, v22, v38, v42, v23);

    uint64_t v36 = v42;
    goto LABEL_11;
  }
  int v35 = objc_msgSend_containsString_(v19, v31, *MEMORY[0x1E4F6CB30], v32);

  if (!v35) {
    goto LABEL_10;
  }
  uint64_t v36 = v42;
  if (IMOSLoggingEnabled())
  {
    uint64_t v37 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v37, OS_LOG_TYPE_INFO, "IMCoreSPI: Waldo is disabled, and client attempted to receive a waldo plugin message. Aborting.", buf, 2u);
    }
  }
  if (v23) {
    (*((void (**)(id, void))v23 + 2))(v23, 0);
  }
LABEL_11:
}

id IMSPIRetrieveLocalizedServiceStringByServiceName(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v4 = objc_msgSend_serviceWithName_(IMService, a2, a1, a4);
  uint64_t v8 = objc_msgSend__displayName(v4, v5, v6, v7);

  return v8;
}

void IMSPICalculateSendingServiceByDestinationsAndChatGUID(void *a1, void *a2, void *a3)
{
  uint64_t v88 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v70 = a2;
  id v69 = a3;
  if (IMOSLoggingEnabled())
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      id v85 = v70;
      __int16 v86 = 2112;
      id v87 = v5;
      _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Get sending service by guid: %@, destinations: %@", buf, 0x16u);
    }
  }
  id v10 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v6, v7, v8);
  long long v80 = 0u;
  long long v81 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  id v11 = v5;
  uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v12, (uint64_t)&v78, (uint64_t)v83, 16);
  if (v16)
  {
    uint64_t v17 = *(void *)v79;
    do
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        if (*(void *)v79 != v17) {
          objc_enumerationMutation(v11);
        }
        id v19 = *(void **)(*((void *)&v78 + 1) + 8 * i);
        if (objc_msgSend_length(v19, v13, v14, v15))
        {
          objc_msgSend_addObject_(v10, v20, (uint64_t)v19, v21);
        }
        else if (IMOSLoggingEnabled())
        {
          id v22 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl(&dword_1A4AF7000, v22, OS_LOG_TYPE_INFO, "Destinations contain empty string when calculating sending service.", buf, 2u);
          }
        }
      }
      uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v13, (uint64_t)&v78, (uint64_t)v83, 16);
    }
    while (v16);
  }

  uint64_t v26 = objc_msgSend_count(v10, v23, v24, v25);
  if (v26)
  {
    sub_1A4BC0970(v26, v27, v28, v29);
    uint64_t v30 = sub_1A4C765FC(0, v10, v70, 0, 0);
    sub_1A4BC0A78((uint64_t)v30, v31, v32, v33);
    if (IMOSLoggingEnabled())
    {
      uint64_t v36 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v85 = v30;
        _os_log_impl(&dword_1A4AF7000, v36, OS_LOG_TYPE_INFO, "IMSPIGetIMChat returns %@", buf, 0xCu);
      }
    }
    objc_msgSend___imArrayByApplyingBlock_(v10, v34, (uint64_t)&unk_1EF8E6788, v35);
    long long v76 = 0u;
    long long v77 = 0u;
    long long v74 = 0u;
    long long v75 = 0u;
    id v37 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v38, (uint64_t)&v74, (uint64_t)v82, 16);
    if (v39)
    {
      uint64_t v40 = *(void *)v75;
      while (2)
      {
        for (uint64_t j = 0; j != v39; ++j)
        {
          if (*(void *)v75 != v40) {
            objc_enumerationMutation(v37);
          }
          if (IMStringIsEmail())
          {
            char v68 = 1;
            goto LABEL_33;
          }
        }
        uint64_t v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v42, (uint64_t)&v74, (uint64_t)v82, 16);
        if (v39) {
          continue;
        }
        break;
      }
    }
    char v68 = 0;
LABEL_33:

    unsigned int shouldForceServerStatusRefresh = objc_msgSend_shouldForceServerStatusRefresh(v30, v43, v44, v45);
    id v49 = objc_msgSend_lastAddressedHandleID(v30, v46, v47, v48);
    id v53 = objc_msgSend_lastAddressedSIMID(v30, v50, v51, v52);
    unsigned __int8 v57 = objc_msgSend_repliedToChat(v30, v54, v55, v56);
    uint64_t v61 = objc_msgSend_forceMMS(v30, v58, v59, v60);
    unsigned __int8 isDowngraded = objc_msgSend_isDowngraded(v30, v62, v63, v64);
    v71[0] = MEMORY[0x1E4F143A8];
    v71[1] = 3221225472;
    v71[2] = sub_1A4C79D10;
    v71[3] = &unk_1E5B7F500;
    id v73 = v69;
    id v72 = v11;
    IMChatCalculateServiceForSendingNewComposeMaybeForce(v37, v30, v49, v53, v61, v68, shouldForceServerStatusRefresh, isDowngraded, v57, 0, v71);
  }
  else if (IMOSLoggingEnabled())
  {
    id v66 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v66, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v85 = v11;
      _os_log_impl(&dword_1A4AF7000, v66, OS_LOG_TYPE_INFO, "Invalid destination when calculating sending service: %@", buf, 0xCu);
    }
  }
}

uint64_t sub_1A4C79D08()
{
  return IMChatCanonicalIDSIDsForAddress();
}

void sub_1A4C79D10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    objc_msgSend_name(a2, (const char *)a2, a3, a4);
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id, void))(v4 + 16))(v4, v6, *(void *)(a1 + 32));
  }
}

uint64_t IMSPISendMessageWithAttachmentObjectsSynchronously(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  return sub_1A4C79D98(a1, a2, a3, a4, a5, 0, 0);
}

uint64_t sub_1A4C79D98(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v74 = *MEMORY[0x1E4F143B8];
  id v63 = a1;
  id v13 = a2;
  id v64 = a3;
  id v65 = a4;
  id v66 = a5;
  id v62 = a6;
  id v14 = a7;
  id v18 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v15, v16, v17);
  long long v69 = 0u;
  long long v70 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  id v19 = v13;
  uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v19, v20, (uint64_t)&v67, (uint64_t)v73, 16);
  if (v24)
  {
    uint64_t v25 = *(void *)v68;
    do
    {
      for (uint64_t i = 0; i != v24; ++i)
      {
        if (*(void *)v68 != v25) {
          objc_enumerationMutation(v19);
        }
        uint64_t v27 = *(void **)(*((void *)&v67 + 1) + 8 * i);
        if (objc_msgSend_length(v27, v21, v22, v23))
        {
          objc_msgSend_addObject_(v18, v28, (uint64_t)v27, v29);
        }
        else if (IMOSLoggingEnabled())
        {
          uint64_t v30 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl(&dword_1A4AF7000, v30, OS_LOG_TYPE_INFO, "Sending destinations contain empty string", buf, 2u);
          }
        }
      }
      uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v19, v21, (uint64_t)&v67, (uint64_t)v73, 16);
    }
    while (v24);
  }

  if (!objc_msgSend_count(v18, v31, v32, v33))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v46 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v72 = v19;
        _os_log_impl(&dword_1A4AF7000, v46, OS_LOG_TYPE_INFO, "Invalid destination specified to send to: %@", buf, 0xCu);
      }
      goto LABEL_33;
    }
LABEL_34:
    uint64_t v48 = 0;
    goto LABEL_48;
  }
  if (!objc_msgSend_length(v65, v34, v35, v36))
  {
    uint64_t v47 = objc_msgSend_count(v66, v37, v38, v39);
    if (!v14 && !v47)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v46 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_1A4AF7000, v46, OS_LOG_TYPE_INFO, "Empty message specified to send with no attachments or payloadData, ignoring", buf, 2u);
        }
LABEL_33:

        goto LABEL_34;
      }
      goto LABEL_34;
    }
  }
  uint64_t v40 = objc_msgSend_count(v66, v37, v38, v39);
  if (v14 || v40 || IMIsRunningInGameCenter())
  {
    uint64_t v41 = IMOSLoggingEnabled();
    if (v41)
    {
      uint64_t v45 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v45, OS_LOG_TYPE_INFO, "Have non-zero attachments to send, ensuring we have transfer capability", buf, 2u);
      }
    }
    sub_1A4BC0A20(v41, v42, v43, v44);
  }
  else
  {
    uint64_t v49 = IMOSLoggingEnabled();
    if (v49)
    {
      id v53 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v53, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
      }
    }
    sub_1A4BC09C8(v49, v50, v51, v52);
  }
  id v54 = sub_1A4C765FC(v63, v18, v64, 0, 1);
  uint64_t v55 = v54;
  if (v54)
  {
    uint64_t v56 = sub_1A4C83E44(v54, v65, 0, 0, 0, v66, v62, v14, 0, 0);
    uint64_t v48 = v56;
  }
  else
  {
    uint64_t v56 = IMOSLoggingEnabled();
    if (v56)
    {
      uint64_t v60 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v60, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v60, OS_LOG_TYPE_INFO, "Cannot send message without chat", buf, 2u);
      }
    }
    uint64_t v48 = 0;
  }
  sub_1A4BC0A78(v56, v57, v58, v59);

LABEL_48:
  return v48;
}

uint64_t IMSPISendMessageWithAttachmentsSynchronously(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a3;
  id v11 = a2;
  id v12 = a1;
  id v13 = sub_1A4C7A31C(a5);
  uint64_t v14 = sub_1A4C79D98(v12, v11, v10, v9, v13, 0, 0);

  return v14;
}

id sub_1A4C7A31C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_opt_new();
  id v6 = v2;
  if (v1)
  {
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = sub_1A4C85414;
    v18[3] = &unk_1E5B7E0A8;
    id v7 = v2;
    id v19 = v7;
    objc_msgSend_enumerateObjectsUsingBlock_(v1, v8, (uint64_t)v18, v9);

    objc_msgSend_count(v7, v10, v11, v12);
LABEL_4:
    uint64_t v16 = objc_msgSend_copy(v6, v13, v14, v15);
    goto LABEL_5;
  }
  if (objc_msgSend_count(v2, v3, v4, v5)) {
    goto LABEL_4;
  }
  uint64_t v16 = 0;
LABEL_5:

  return v16;
}

uint64_t IMSPISendRichLinkSynchronously(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = a6;
  if (v14 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    uint64_t v17 = IMSharedHelperCombinedPluginPayloadDictionaryData();
    uint64_t v21 = objc_msgSend_absoluteString(v14, v18, v19, v20);
    uint64_t v22 = sub_1A4C79D98(v11, v12, v13, v21, 0, (void *)*MEMORY[0x1E4F6CC10], v17);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        int v25 = 138412290;
        id v26 = v14;
        _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "IMCoreSPI: url is not an NSURL %@", (uint8_t *)&v25, 0xCu);
      }
    }
    uint64_t v22 = 0;
  }

  return v22;
}

void IMSPIRemapChatsWithLastAddressedLabelIDToNewLabelID(void *a1, void *a2)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (objc_msgSend_length(v3, v5, v6, v7) && objc_msgSend_length(v4, v8, v9, v10))
  {
    if ((IMSharedHelperDeviceHasMultipleSubscriptions() & 1) != 0 || IMIsRunningInDebugMode())
    {
      id v14 = objc_msgSend_sharedInstance(MEMORY[0x1E4F6E668], v11, v12, v13);
      id v18 = objc_msgSend_ctSubscriptionInfo(v14, v15, v16, v17);
      uint64_t v21 = objc_msgSend___im_subscriptionContextForForSimID_(v18, v19, (uint64_t)v4, v20);

      int v25 = objc_msgSend_labelID(v21, v22, v23, v24);
      if (objc_msgSend_length(v25, v26, v27, v28))
      {

LABEL_12:
        objc_msgSend_phoneNumber(v21, v32, v33, v34);
        uint64_t v41 = (__CFString *)objc_claimAutoreleasedReturnValue();
        if (IMOSLoggingEnabled())
        {
          id v42 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
          {
            int v46 = 138412290;
            id v47 = v21;
            _os_log_impl(&dword_1A4AF7000, v42, OS_LOG_TYPE_INFO, "Found subscription to remap chats with: %@", (uint8_t *)&v46, 0xCu);
          }
        }
        if (IMOSLoggingEnabled())
        {
          uint64_t v43 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
          {
            int v46 = 138412802;
            id v47 = v3;
            __int16 v48 = 2112;
            id v49 = v4;
            __int16 v50 = 2112;
            uint64_t v51 = v41;
            _os_log_impl(&dword_1A4AF7000, v43, OS_LOG_TYPE_INFO, "Remapping chats with old labelID %@ to new labelID %@ and new phone number %@.", (uint8_t *)&v46, 0x20u);
          }
        }
        IMDChatRemapChatsWithLastAddressedSIMIDToNewLastAddressedIDs();
LABEL_31:

        goto LABEL_32;
      }
      uint64_t v36 = objc_msgSend_phoneNumber(v21, v29, v30, v31);
      uint64_t v40 = objc_msgSend_length(v36, v37, v38, v39);

      if (v40) {
        goto LABEL_12;
      }
      if (IMOSLoggingEnabled())
      {
        uint64_t v44 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
        {
          int v46 = 138412546;
          id v47 = v4;
          __int16 v48 = 2112;
          id v49 = v21;
          _os_log_impl(&dword_1A4AF7000, v44, OS_LOG_TYPE_INFO, "No valid subscription found with new labelID %@, not remapping chats. Subscription %@", (uint8_t *)&v46, 0x16u);
        }
      }
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v45 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
      {
        LOWORD(v46) = 0;
        _os_log_impl(&dword_1A4AF7000, v45, OS_LOG_TYPE_INFO, "Remapping chats' lastAddressedIDs not supported.", (uint8_t *)&v46, 2u);
      }
    }
    uint64_t v41 = &stru_1EF8E78C8;
    goto LABEL_31;
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v35 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
    {
      int v46 = 138412546;
      id v47 = v3;
      __int16 v48 = 2112;
      id v49 = v4;
      _os_log_impl(&dword_1A4AF7000, v35, OS_LOG_TYPE_INFO, "Cannot remap chats because invalid arguments: oldLabelID %@ newLabelID %@", (uint8_t *)&v46, 0x16u);
    }
  }
LABEL_32:
}

id IMSPIGetDisplayNameAndParticipantsForChatWithGUID(void *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v26 = v1;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Request to get display name and participants for chat GUID: %@", buf, 0xCu);
    }
  }
  id v3 = (void *)IMDChatRecordCopyChatForGUID();
  uint64_t v7 = v3;
  if (v3)
  {
    uint64_t v8 = objc_msgSend_handleRecords(v3, v4, v5, v6);
    id v11 = objc_msgSend___imArrayByApplyingBlock_(v8, v9, (uint64_t)&unk_1EF8E67A8, v10);

    uint64_t v12 = [IMSPISuggestionsObject alloc];
    uint64_t v16 = objc_msgSend_groupName(v7, v13, v14, v15);
    id v18 = objc_msgSend_initWithChatGuid_displayName_participants_(v12, v17, (uint64_t)v1, (uint64_t)v16, v11);

    if (IMOSLoggingEnabled())
    {
      uint64_t v20 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v26 = v18;
        _os_log_impl(&dword_1A4AF7000, v20, OS_LOG_TYPE_INFO, "Results for fetching chat group name and participants: %@", buf, 0xCu);
      }
    }
    uint64_t v24 = v18;
    uint64_t v21 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E4F1C978], v19, (uint64_t)&v24, 1);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v22 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v26 = v1;
        _os_log_impl(&dword_1A4AF7000, v22, OS_LOG_TYPE_INFO, "Failed to find chat for guid: %@", buf, 0xCu);
      }
    }
    uint64_t v21 = 0;
  }

  return v21;
}

id sub_1A4C7AC24(uint64_t a1, void *a2)
{
  return sub_1A4C6FD20(a2);
}

id IMSPIGetMostRecentContacts(int a1)
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = a1;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Request to get most recent contacts used by messages: %d", buf, 8u);
    }
  }
  uint64_t v3 = IMOSLoggingEnabled();
  if (v3)
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
    }
  }
  sub_1A4BC0970(v3, v4, v5, v6);
  *(void *)long long buf = 0;
  uint64_t v45 = buf;
  uint64_t v46 = 0x3032000000;
  id v47 = sub_1A4B3461C;
  __int16 v48 = sub_1A4B343F4;
  id v49 = 0;
  id v11 = objc_msgSend_sharedRegistry(IMChatRegistry, v8, v9, v10);
  v42[0] = MEMORY[0x1E4F143A8];
  v42[1] = 3221225472;
  void v42[2] = sub_1A4C7AFA4;
  v42[3] = &unk_1E5B7F548;
  void v42[4] = buf;
  objc_msgSend__loadChatsFilteredUsingPredicate_lastMessageOlderThan_limit_waitForReply_completionHandler_(v11, v12, 0, 0, a1, 1, v42);

  objc_msgSend_sortUsingComparator_(*((void **)v45 + 5), v13, (uint64_t)&unk_1EF8E67C8, v14);
  uint64_t v17 = objc_msgSend_arrayWithCapacity_(MEMORY[0x1E4F1CA48], v15, a1, v16);
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v18 = *((id *)v45 + 5);
  uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v19, (uint64_t)&v38, (uint64_t)v43, 16);
  if (v20)
  {
    uint64_t v21 = *(void *)v39;
LABEL_11:
    uint64_t v22 = 0;
    while (1)
    {
      if (*(void *)v39 != v21) {
        objc_enumerationMutation(v18);
      }
      id v26 = sub_1A4C7AFF4(*(void **)(*((void *)&v38 + 1) + 8 * v22));
      if (v26) {
        objc_msgSend_addObject_(v17, v23, (uint64_t)v26, v25, (void)v38);
      }
      BOOL v27 = objc_msgSend_count(v17, v23, v24, v25, (void)v38) < (unint64_t)a1;

      if (!v27) {
        break;
      }
      if (v20 == ++v22)
      {
        uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v28, (uint64_t)&v38, (uint64_t)v43, 16);
        if (v20) {
          goto LABEL_11;
        }
        break;
      }
    }
  }

  sub_1A4BC0A78(v29, v30, v31, v32);
  uint64_t v36 = objc_msgSend_copy(v17, v33, v34, v35);

  _Block_object_dispose(buf, 8);

  return v36;
}

uint64_t sub_1A4C7AFA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_mutableCopy(a2, (const char *)a2, a3, a4);
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v7 = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  return MEMORY[0x1F41817F8](v5, v7);
}

uint64_t sub_1A4C7AFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F4181798](a2, sel_compareChatByLastFinishedMessageDate_, a3, a4);
}

id sub_1A4C7AFF4(void *a1)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = (void *)MEMORY[0x1E4F1CA80];
  uint64_t v6 = objc_msgSend_participants(v1, v3, v4, v5);
  uint64_t v10 = objc_msgSend_count(v6, v7, v8, v9);
  uint64_t v13 = objc_msgSend_setWithCapacity_(v2, v11, v10, v12);

  uint64_t v14 = (void *)MEMORY[0x1E4F1CA48];
  id v18 = objc_msgSend_participants(v1, v15, v16, v17);
  uint64_t v22 = objc_msgSend_count(v18, v19, v20, v21);
  uint64_t v25 = objc_msgSend_arrayWithCapacity_(v14, v23, v22, v24);

  long long v73 = 0u;
  long long v74 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  uint64_t v29 = objc_msgSend_participants(v1, v26, v27, v28, 0);
  uint64_t v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v29, v30, (uint64_t)&v71, (uint64_t)v75, 16);
  if (v31)
  {
    uint64_t v35 = v31;
    uint64_t v36 = *(void *)v72;
    do
    {
      for (uint64_t i = 0; i != v35; ++i)
      {
        if (*(void *)v72 != v36) {
          objc_enumerationMutation(v29);
        }
        long long v38 = *(void **)(*((void *)&v71 + 1) + 8 * i);
        long long v39 = objc_msgSend_ID(v38, v32, v33, v34);
        char v42 = objc_msgSend_containsObject_(v13, v40, (uint64_t)v39, v41);

        if ((v42 & 1) == 0)
        {
          uint64_t v43 = objc_msgSend_ID(v38, v32, v33, v34);
          objc_msgSend_addObject_(v13, v44, (uint64_t)v43, v45);

          objc_msgSend_addObject_(v25, v46, (uint64_t)v38, v47);
        }
      }
      uint64_t v35 = objc_msgSend_countByEnumeratingWithState_objects_count_(v29, v32, (uint64_t)&v71, (uint64_t)v75, 16);
    }
    while (v35);
  }

  uint64_t v51 = objc_msgSend_displayName(v1, v48, v49, v50);
  uint64_t v55 = v51;
  if (!v51 || !objc_msgSend_length(v51, v52, v53, v54))
  {
    uint64_t isSpamFilteringOn = objc_msgSend_isSpamFilteringOn(MEMORY[0x1E4F6BF70], v52, v53, v54);
    uint64_t v58 = objc_msgSend_displayNameWithRawAddress_isSpamFilteringEnabled_(v1, v57, 0, isSpamFilteringOn);

    uint64_t v55 = (void *)v58;
  }
  if (objc_msgSend_count(v25, v52, v53, v54))
  {
    uint64_t v59 = [IMSPISuggestionsObject alloc];
    id v63 = objc_msgSend_guid(v1, v60, v61, v62);
    long long v67 = objc_msgSend_copy(v25, v64, v65, v66);
    long long v69 = objc_msgSend_initWithChatGuid_displayName_participants_(v59, v68, (uint64_t)v63, (uint64_t)v55, v67);
  }
  else
  {
    long long v69 = 0;
  }

  return v69;
}

id IMSPIGetContactsByChatGUID(void *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v23 = 138412290;
      id v24 = v1;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Request to get contacts used by existing chatGUID: %@", (uint8_t *)&v23, 0xCu);
    }
  }
  uint64_t v3 = IMOSLoggingEnabled();
  if (v3)
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      LOWORD(v23) = 0;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Setting the chat cap only", (uint8_t *)&v23, 2u);
    }
  }
  sub_1A4BC0970(v3, v4, v5, v6);
  id v11 = objc_msgSend_sharedRegistry(IMChatRegistry, v8, v9, v10);
  uint64_t v14 = objc_msgSend_existingChatWithGUID_(v11, v12, (uint64_t)v1, v13);

  uint64_t v15 = IMOSLoggingEnabled();
  if (v14)
  {
    if (v15)
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        int v23 = 138412546;
        id v24 = v1;
        __int16 v25 = 2112;
        id v26 = v14;
        _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "For existing chatGUID: %@, found chat: %@", (uint8_t *)&v23, 0x16u);
      }
    }
    uint64_t v15 = sub_1A4C7AFF4(v14);
    uint64_t v20 = (void *)v15;
  }
  else
  {
    if (v15)
    {
      uint64_t v21 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        int v23 = 138412290;
        id v24 = v1;
        _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_INFO, "Did not find existing chat for chatGUID: %@", (uint8_t *)&v23, 0xCu);
      }
    }
    uint64_t v20 = 0;
  }
  sub_1A4BC0A78(v15, v16, v17, v18);

  return v20;
}

id IMSPIGetAllChatsContainingParticipantWithHandle(void *a1)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v44 = a1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v4 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v52 = v44;
      _os_log_impl(&dword_1A4AF7000, v4, OS_LOG_TYPE_INFO, "Request to get all chat guid, display name and all participatns for  %@", buf, 0xCu);
    }
  }
  uint64_t v5 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v1, v2, v3, v44);
  long long v49 = 0u;
  long long v50 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  id obj = (id)IMDChatGetChatsThatContainRecipient();
  uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v6, (uint64_t)&v47, (uint64_t)v55, 16);
  if (v9)
  {
    uint64_t v10 = *(void *)v48;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v48 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void **)(*((void *)&v47 + 1) + 8 * i);
        uint64_t v13 = objc_msgSend_valueForKey_(v12, v7, @"handles", v8);
        uint64_t v17 = objc_msgSend_array(MEMORY[0x1E4F1CA48], v14, v15, v16);
        if (objc_msgSend_count(v13, v18, v19, v20))
        {
          unint64_t v23 = 0;
          do
          {
            id v24 = objc_msgSend_objectAtIndex_(v13, v21, v23, v22);
            uint64_t v27 = sub_1A4C6FD20(v24);
            if (v27) {
              objc_msgSend_addObject_(v17, v25, (uint64_t)v27, v26);
            }

            ++v23;
          }
          while (objc_msgSend_count(v13, v28, v29, v30) > v23);
        }
        uint64_t v31 = [IMSPISuggestionsObject alloc];
        uint64_t v34 = objc_msgSend_valueForKey_(v12, v32, @"chatGUID", v33);
        id v37 = objc_msgSend_valueForKey_(v12, v35, @"displayName", v36);
        long long v39 = objc_msgSend_initWithChatGuid_displayName_participants_(v31, v38, (uint64_t)v34, (uint64_t)v37, v17);

        objc_msgSend_addObject_(v5, v40, (uint64_t)v39, v41);
      }
      uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v7, (uint64_t)&v47, (uint64_t)v55, 16);
    }
    while (v9);
  }

  if (IMOSLoggingEnabled())
  {
    char v42 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      id v52 = v45;
      __int16 v53 = 2112;
      id v54 = obj;
      _os_log_impl(&dword_1A4AF7000, v42, OS_LOG_TYPE_INFO, "Results for chats with participant %@ = %@", buf, 0x16u);
    }
  }

  return v5;
}

id IMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDs(void *a1, void *a2)
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v56 = 138412546;
      id v57 = v3;
      __int16 v58 = 2112;
      id v59 = v4;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Request to get message date and last addressed labelID from chat ids %@ and last addressed handles %@", (uint8_t *)&v56, 0x16u);
    }
  }
  uint64_t v8 = objc_msgSend___imSetByApplyingBlock_(v3, v5, (uint64_t)&unk_1EF8E67E8, v6);
  uint64_t v12 = objc_msgSend_allObjects(v8, v9, v10, v11);
  uint64_t v16 = objc_msgSend_allObjects(v4, v13, v14, v15);
  if (IMOSLoggingEnabled())
  {
    uint64_t v20 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      int v56 = 138412546;
      id v57 = v12;
      __int16 v58 = 2112;
      id v59 = v16;
      _os_log_impl(&dword_1A4AF7000, v20, OS_LOG_TYPE_INFO, "Searching with canonicalized chat ids %@ and last addressed labelIDs %@", (uint8_t *)&v56, 0x16u);
    }
  }
  if (objc_msgSend_count(v12, v17, v18, v19) && objc_msgSend_count(v16, v21, v22, v23))
  {
    MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs = (void *)IMDChatGetMessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs();
    if (IMOSLoggingEnabled())
    {
      uint64_t v27 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        int v56 = 138412290;
        id v57 = MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs;
        _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, "Got results %@", (uint8_t *)&v56, 0xCu);
      }
    }
    uint64_t v28 = objc_msgSend_objectForKeyedSubscript_(MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs, v25, @"labelID", v26);
    BOOL v32 = objc_msgSend_length(v28, v29, v30, v31) == 0;

    if (v32)
    {
      long long v48 = 0;
    }
    else
    {
      uint64_t v35 = objc_msgSend_objectForKeyedSubscript_(MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs, v33, @"date", v34);

      if (v35)
      {
        long long v38 = objc_msgSend_objectForKeyedSubscript_(MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs, v36, @"date", v37);
        uint64_t v42 = objc_msgSend_integerValue(v38, v39, v40, v41);

        uint64_t v46 = objc_msgSend___im_dateWithNanosecondTimeIntervalSinceReferenceDate_(MEMORY[0x1E4F1C9C8], v43, v44, v45, (double)v42);
      }
      else
      {
        uint64_t v46 = 0;
      }
      long long v49 = [IMSPIRecentEvent alloc];
      id v52 = objc_msgSend_objectForKeyedSubscript_(MessageDateAndLastAddressedLabelIDFromChatIdentifiersAndLastAddressedLabelIDs, v50, @"labelID", v51);
      long long v48 = objc_msgSend_initWithLabelID_date_(v49, v53, (uint64_t)v52, (uint64_t)v46);
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      long long v47 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
      {
        LOWORD(v56) = 0;
        _os_log_impl(&dword_1A4AF7000, v47, OS_LOG_TYPE_INFO, "Could not retrieve last address labelID/last message date because received invalid arguments!", (uint8_t *)&v56, 2u);
      }
    }
    long long v48 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    id v54 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO))
    {
      int v56 = 138412290;
      id v57 = v48;
      _os_log_impl(&dword_1A4AF7000, v54, OS_LOG_TYPE_INFO, "Returning recent event %@", (uint8_t *)&v56, 0xCu);
    }
  }

  return v48;
}

id sub_1A4C7BC9C(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!v2)
  {
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  id v3 = IMStripFormattingFromAddress();

  if (MEMORY[0x1A62639B0](v3))
  {
    uint64_t v4 = IMInternationalForPhoneNumberWithOptions();
  }
  else
  {
    if (!IMStringIsEmail())
    {
      uint64_t v5 = 0;
      goto LABEL_9;
    }
    uint64_t v4 = objc_msgSend_lowercaseString(v3, v6, v7, v8);
  }
  uint64_t v5 = (void *)v4;
LABEL_9:

LABEL_10:

  return v5;
}

id IMSPIGetMostRecentIMEventForContactHandlesAndLocalPhoneHandles(void *a1, void *a2)
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v59 = 138412546;
      id v60 = v3;
      __int16 v61 = 2112;
      id v62 = v4;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Request to get message date and last addressed handle from chat ids %@ and last addressed handles %@", (uint8_t *)&v59, 0x16u);
    }
  }
  uint64_t v8 = objc_msgSend___imSetByApplyingBlock_(v3, v5, (uint64_t)&unk_1EF8E6808, v6);
  uint64_t v11 = objc_msgSend___imSetByApplyingBlock_(v4, v9, (uint64_t)&unk_1EF8E6828, v10);
  uint64_t v15 = objc_msgSend_allObjects(v8, v12, v13, v14);
  uint64_t v19 = objc_msgSend_allObjects(v11, v16, v17, v18);
  if (IMOSLoggingEnabled())
  {
    uint64_t v23 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      int v59 = 138412546;
      id v60 = v15;
      __int16 v61 = 2112;
      id v62 = v19;
      _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Searching with canonicalized chat ids %@ and last addressed handles %@", (uint8_t *)&v59, 0x16u);
    }
  }
  if (objc_msgSend_count(v15, v20, v21, v22) && objc_msgSend_count(v19, v24, v25, v26))
  {
    MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles = (void *)IMDChatGetMessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles();
    if (IMOSLoggingEnabled())
    {
      uint64_t v30 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        int v59 = 138412290;
        id v60 = MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles;
        _os_log_impl(&dword_1A4AF7000, v30, OS_LOG_TYPE_INFO, "Got results %@", (uint8_t *)&v59, 0xCu);
      }
    }
    uint64_t v31 = objc_msgSend_objectForKeyedSubscript_(MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles, v28, @"handle", v29);
    BOOL v35 = objc_msgSend_length(v31, v32, v33, v34) == 0;

    if (v35)
    {
      uint64_t v51 = 0;
    }
    else
    {
      long long v38 = objc_msgSend_objectForKeyedSubscript_(MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles, v36, @"date", v37);

      if (v38)
      {
        uint64_t v41 = objc_msgSend_objectForKeyedSubscript_(MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles, v39, @"date", v40);
        uint64_t v45 = objc_msgSend_integerValue(v41, v42, v43, v44);

        long long v49 = objc_msgSend___im_dateWithNanosecondTimeIntervalSinceReferenceDate_(MEMORY[0x1E4F1C9C8], v46, v47, v48, (double)v45);
      }
      else
      {
        long long v49 = 0;
      }
      id v52 = [IMSPIRecentEvent alloc];
      uint64_t v55 = objc_msgSend_objectForKeyedSubscript_(MessageDateAndLastAddressedHandleFromChatIdentifiersAndLastAddressedHandles, v53, @"handle", v54);
      uint64_t v51 = objc_msgSend_initWithHandle_date_(v52, v56, (uint64_t)v55, (uint64_t)v49);
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      long long v50 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO))
      {
        LOWORD(v59) = 0;
        _os_log_impl(&dword_1A4AF7000, v50, OS_LOG_TYPE_INFO, "Could not retrieve last address handle/last message date because received invalid arguments!", (uint8_t *)&v59, 2u);
      }
    }
    uint64_t v51 = 0;
  }
  if (IMOSLoggingEnabled())
  {
    id v57 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v57, OS_LOG_TYPE_INFO))
    {
      int v59 = 138412290;
      id v60 = v51;
      _os_log_impl(&dword_1A4AF7000, v57, OS_LOG_TYPE_INFO, "Returning recent event %@", (uint8_t *)&v59, 0xCu);
    }
  }

  return v51;
}

id sub_1A4C7C1B4(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!v2)
  {
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  id v3 = IMStripFormattingFromAddress();

  if (MEMORY[0x1A62639B0](v3))
  {
    uint64_t v4 = IMInternationalForPhoneNumberWithOptions();
  }
  else
  {
    if (!IMStringIsEmail())
    {
      uint64_t v5 = 0;
      goto LABEL_9;
    }
    uint64_t v4 = objc_msgSend_lowercaseString(v3, v6, v7, v8);
  }
  uint64_t v5 = (void *)v4;
LABEL_9:

LABEL_10:

  return v5;
}

id sub_1A4C7C268(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!v2)
  {
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  id v3 = IMStripFormattingFromAddress();

  if (MEMORY[0x1A62639B0](v3))
  {
    uint64_t v4 = IMInternationalForPhoneNumberWithOptions();
  }
  else
  {
    if (!IMStringIsEmail())
    {
      uint64_t v5 = 0;
      goto LABEL_9;
    }
    uint64_t v4 = objc_msgSend_lowercaseString(v3, v6, v7, v8);
  }
  uint64_t v5 = (void *)v4;
LABEL_9:

LABEL_10:

  return v5;
}

BOOL IMSPIMarkSPIMessagesAsRead(void *a1)
{
  id v1 = a1;
  uint64_t v5 = objc_msgSend_count(v1, v2, v3, v4);
  if (v5)
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C7C440;
    block[3] = &unk_1E5B7ACD0;
    id v9 = v1;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Empty messages to be marked as read, failing", buf, 2u);
    }
  }
  return v5 != 0;
}

void sub_1A4C7C440(uint64_t a1)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v36 = v3;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Marking messages as read: %@", buf, 0xCu);
    }
  }
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v4 = *(id *)(a1 + 32);
  uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v4, v5, (uint64_t)&v30, (uint64_t)v34, 16);
  if (v6)
  {
    uint64_t v8 = *(void *)v31;
    *(void *)&long long v7 = 138412290;
    long long v29 = v7;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v31 != v8) {
          objc_enumerationMutation(v4);
        }
        uint64_t v10 = *(void **)(*((void *)&v30 + 1) + 8 * v9);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v14 = objc_msgSend_guid(v10, v11, v12, v13);
          uint64_t v18 = objc_msgSend_length(v14, v15, v16, v17, v29, (void)v30);
        }
        else
        {
          uint64_t v14 = 0;
          uint64_t v18 = objc_msgSend_length(0, v11, v12, v13, v29, (void)v30);
        }
        BOOL v19 = v18 == 0;
        int v20 = IMOSLoggingEnabled();
        if (v19)
        {
          if (v20)
          {
            uint64_t v27 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = v29;
              uint64_t v36 = v10;
              _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, "Missing message guid for message: %@, not marking as read", buf, 0xCu);
            }
          }
        }
        else
        {
          if (v20)
          {
            id v24 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = v29;
              uint64_t v36 = v14;
              _os_log_impl(&dword_1A4AF7000, v24, OS_LOG_TYPE_INFO, " => Message guid: %@", buf, 0xCu);
            }
          }
          uint64_t v25 = objc_msgSend_sharedInstance(IMDaemonController, v21, v22, v23);
          objc_msgSend_markMessageAsReadWithGUID_callerOrigin_reply_(v25, v26, (uint64_t)v14, 1, &unk_1EF8E6848);
        }
        ++v9;
      }
      while (v6 != v9);
      uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v4, v28, (uint64_t)&v30, (uint64_t)v34, 16);
    }
    while (v6);
  }
}

void sub_1A4C7C72C(uint64_t a1, int a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = @"NO";
      if (a2) {
        id v4 = @"YES";
      }
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Marked message as read: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

BOOL IMSPIMarkSPIMessagesAsPlayed(void *a1)
{
  id v1 = a1;
  uint64_t v5 = objc_msgSend_count(v1, v2, v3, v4);
  if (v5)
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C7C964;
    block[3] = &unk_1E5B7ACD0;
    id v9 = v1;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Empty messages to be marked as played, failing", buf, 2u);
    }
  }
  return v5 != 0;
}

void sub_1A4C7C964(uint64_t a1)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v37 = v3;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Marking messages as played: %@", buf, 0xCu);
    }
  }
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v4 = *(id *)(a1 + 32);
  uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v4, v5, (uint64_t)&v31, (uint64_t)v35, 16);
  if (v6)
  {
    uint64_t v8 = *(void *)v32;
    *(void *)&long long v7 = 138412290;
    long long v30 = v7;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v32 != v8) {
          objc_enumerationMutation(v4);
        }
        uint64_t v10 = *(void **)(*((void *)&v31 + 1) + 8 * v9);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v14 = objc_msgSend_guid(v10, v11, v12, v13);
          uint64_t v18 = objc_msgSend_length(v14, v15, v16, v17, v30, (void)v31);
        }
        else
        {
          uint64_t v14 = 0;
          uint64_t v18 = objc_msgSend_length(0, v11, v12, v13, v30, (void)v31);
        }
        BOOL v19 = v18 == 0;
        int v20 = IMOSLoggingEnabled();
        if (v19)
        {
          if (v20)
          {
            uint64_t v28 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = v30;
              uint64_t v37 = v10;
              _os_log_impl(&dword_1A4AF7000, v28, OS_LOG_TYPE_INFO, "Missing message guid for message: %@, not marking as read", buf, 0xCu);
            }
          }
        }
        else
        {
          if (v20)
          {
            id v24 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = v30;
              uint64_t v37 = v14;
              _os_log_impl(&dword_1A4AF7000, v24, OS_LOG_TYPE_INFO, " => Message guid: %@", buf, 0xCu);
            }
          }
          uint64_t v25 = objc_msgSend_sharedInstance(IMDaemonController, v21, v22, v23);
          objc_msgSend_markPlayedForMessageGUID_(v25, v26, (uint64_t)v14, v27);
        }
        ++v9;
      }
      while (v6 != v9);
      uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v4, v29, (uint64_t)&v31, (uint64_t)v35, 16);
    }
    while (v6);
  }
}

BOOL IMSPIMarkSPIMessagesAsSaved(void *a1)
{
  id v1 = a1;
  uint64_t v5 = objc_msgSend_count(v1, v2, v3, v4);
  if (v5)
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C7CD68;
    block[3] = &unk_1E5B7ACD0;
    id v9 = v1;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Empty messages to be marked as saved, failing", buf, 2u);
    }
  }
  return v5 != 0;
}

void sub_1A4C7CD68(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  sub_1A4BC0970(a1, a2, a3, a4);
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v44 = v6;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Marking messages as saved: %@", buf, 0xCu);
    }
  }
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v38, (uint64_t)v42, 16);
  if (v9)
  {
    uint64_t v11 = *(void *)v39;
    *(void *)&long long v10 = 138412290;
    long long v37 = v10;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v39 != v11) {
          objc_enumerationMutation(v7);
        }
        uint64_t v13 = *(void **)(*((void *)&v38 + 1) + 8 * v12);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v17 = objc_msgSend_guid(v13, v14, v15, v16);
          uint64_t v21 = objc_msgSend_length(v17, v18, v19, v20, v37, (void)v38);
        }
        else
        {
          uint64_t v17 = 0;
          uint64_t v21 = objc_msgSend_length(0, v14, v15, v16, v37, (void)v38);
        }
        BOOL v22 = v21 == 0;
        int v23 = IMOSLoggingEnabled();
        if (v22)
        {
          if (v23)
          {
            long long v31 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = v37;
              uint64_t v44 = v13;
              _os_log_impl(&dword_1A4AF7000, v31, OS_LOG_TYPE_INFO, "Missing message guid for message: %@, not marking as saved", buf, 0xCu);
            }
          }
        }
        else
        {
          if (v23)
          {
            uint64_t v27 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = v37;
              uint64_t v44 = v17;
              _os_log_impl(&dword_1A4AF7000, v27, OS_LOG_TYPE_INFO, " => Message guid: %@", buf, 0xCu);
            }
          }
          uint64_t v28 = objc_msgSend_sharedInstance(IMDaemonController, v24, v25, v26);
          objc_msgSend_markSavedForMessageGUID_(v28, v29, (uint64_t)v17, v30);
        }
        ++v12;
      }
      while (v9 != v12);
      uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v32, (uint64_t)&v38, (uint64_t)v42, 16);
    }
    while (v9);
  }

  sub_1A4BC0A78(v33, v34, v35, v36);
}

uint64_t IMSPIQueryMessageWithRowID(uint64_t a1, void *a2, void *a3)
{
  return IMSPIQueryMessageWithRowIDAndQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryMessageWithRowIDAndQOS(uint64_t a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  id v8 = a4;
  id v12 = v8;
  if (v7) {
    BOOL v13 = v8 == 0;
  }
  else {
    BOOL v13 = 1;
  }
  uint64_t v14 = !v13;
  if (v13)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 136315138;
        uint64_t v25 = "BOOL IMSPIQueryMessageWithRowIDAndQOS(int64_t, dispatch_qos_class_t, __strong dispatch_queue_t, __strong I"
              "MSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v15 = objc_msgSend_copy(v8, v9, v10, v11);

    uint64_t v16 = sub_1A4C70D74(a2);
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    void v19[2] = sub_1A4C7D228;
    v19[3] = &unk_1E5B7F590;
    uint64_t v22 = a1;
    dispatch_qos_class_t v23 = a2;
    id v20 = v7;
    id v12 = v15;
    id v21 = v12;
    dispatch_async(v16, v19);
  }
  return v14;
}

void sub_1A4C7D228(uint64_t a1)
{
  if (qword_1E965EC30 != -1) {
    dispatch_once(&qword_1E965EC30, &unk_1EF8E41B0);
  }
  id v2 = (const void *)off_1E965EC28(*(void *)(a1 + 48));
  id v3 = objc_alloc_init(MEMORY[0x1E4F1C998]);
  uint64_t v22 = 0;
  dispatch_qos_class_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = sub_1A4B3461C;
  uint64_t v26 = sub_1A4B343F4;
  id v27 = 0;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C7D464;
  block[3] = &unk_1E5B7F488;
  uint64_t v19 = &v22;
  id v20 = v2;
  id v4 = v3;
  id v18 = v4;
  int v21 = *(_DWORD *)(a1 + 56);
  dispatch_sync(MEMORY[0x1E4F14428], block);
  id v8 = (void *)v23[5];
  if (v8)
  {
    uint64_t v9 = objc_msgSend_service(v8, v5, v6, v7);
    int isEqualToString = objc_msgSend_isEqualToString_(v9, v10, *MEMORY[0x1E4F6E1A0], v11);

    if (isEqualToString) {
      IMGreenTeaMessageReadLog();
    }
  }
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = sub_1A4C7D4C0;
  v14[3] = &unk_1E5B7F4B0;
  uint64_t v16 = &v22;
  BOOL v13 = *(NSObject **)(a1 + 32);
  id v15 = *(id *)(a1 + 40);
  dispatch_async(v13, v14);
  if (v2) {
    CFRelease(v2);
  }

  _Block_object_dispose(&v22, 8);
}

void sub_1A4C7D41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_1A4C7D434()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessageForRowID", @"IMDPersistence");
  off_1E965EC28 = result;
  return result;
}

uint64_t sub_1A4C7D464(uint64_t a1)
{
  uint64_t v2 = _IMSPIMessageFromRecord(*(void *)(a1 + 48), 1, 0, *(void **)(a1 + 32), *(dispatch_qos_class_t *)(a1 + 56));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return MEMORY[0x1F41817F8](v2, v4);
}

void sub_1A4C7D4C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v5) {
    objc_msgSend_arrayWithObject_(MEMORY[0x1E4F1C978], a2, v5, a4);
  }
  else {
    objc_msgSend_array(MEMORY[0x1E4F1C978], a2, 0, a4);
  }
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t IMSPIQueryMessagesWithRowIDs(void *a1, void *a2, void *a3)
{
  return IMSPIQueryMessagesWithRowIDsAndQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryMessagesWithRowIDsAndQOS(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v13 = v9;
  if (v8) {
    BOOL v14 = v9 == 0;
  }
  else {
    BOOL v14 = 1;
  }
  uint64_t v15 = !v14;
  if (v14)
  {
    if (IMOSLoggingEnabled())
    {
      id v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 136315138;
        uint64_t v26 = "BOOL IMSPIQueryMessagesWithRowIDsAndQOS(NSArray<NSNumber *> *__strong, dispatch_qos_class_t, __strong disp"
              "atch_queue_t, __strong IMSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v16 = objc_msgSend_copy(v9, v10, v11, v12);

    uint64_t v17 = sub_1A4C70D74(a2);
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    void v20[2] = sub_1A4C7D734;
    void v20[3] = &unk_1E5B7F5B8;
    id v21 = v7;
    dispatch_qos_class_t v24 = a2;
    id v22 = v8;
    id v13 = v16;
    id v23 = v13;
    dispatch_async(v17, v20);
  }
  return v15;
}

void sub_1A4C7D734(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (qword_1E965EC40 != -1) {
    dispatch_once(&qword_1E965EC40, &unk_1EF8E6868);
  }
  uint64_t v2 = (void *)off_1E965EC38(*(void *)(a1 + 32));
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = objc_msgSend_count(v2, v4, v5, v6);
      uint64_t v11 = objc_msgSend_count(*(void **)(a1 + 32), v8, v9, v10);
      *(_DWORD *)long long buf = 134218240;
      uint64_t v20 = v7;
      __int16 v21 = 2048;
      uint64_t v22 = v11;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Got back %lu messages for %lu row IDs", buf, 0x16u);
    }
  }
  uint64_t v12 = sub_1A4C7D938(v2, *(_DWORD *)(a1 + 56));
  sub_1A4C7DF08(v12);
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = sub_1A4C7E030;
  v16[3] = &unk_1E5B7B220;
  id v13 = *(NSObject **)(a1 + 40);
  id v14 = *(id *)(a1 + 48);
  id v17 = v12;
  id v18 = v14;
  id v15 = v12;
  dispatch_async(v13, v16);
}

void *sub_1A4C7D908()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessagesForRowIDs", @"IMDPersistence");
  off_1E965EC38 = result;
  return result;
}

id sub_1A4C7D938(void *a1, int a2)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  id v2 = a1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 134217984;
      *(void *)((char *)&buf + 4) = objc_msgSend_count(v2, v4, v5, v6);
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Beginning _IMSPIMessagesFromMessageRecords with %ld records", (uint8_t *)&buf, 0xCu);
    }
  }
  id v57 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v58 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v61 = objc_alloc_init(MEMORY[0x1E4F1C998]);
  long long v68 = 0u;
  long long v69 = 0u;
  long long v66 = 0u;
  long long v67 = 0u;
  id obj = v2;
  uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v7, (uint64_t)&v66, (uint64_t)v79, 16);
  if (v8)
  {
    uint64_t v10 = *(void *)v67;
    *(void *)&long long v9 = 138412546;
    long long v56 = v9;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v67 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void *)(*((void *)&v66 + 1) + 8 * v11);
        *(void *)&long long buf = 0;
        *((void *)&buf + 1) = &buf;
        uint64_t v75 = 0x3032000000;
        uint64_t v76 = sub_1A4B3461C;
        long long v77 = sub_1A4B343F4;
        id v78 = 0;
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = sub_1A4C85490;
        block[3] = &unk_1E5B7F8A0;
        p_long long buf = &buf;
        void block[4] = v12;
        id v63 = v61;
        int v65 = a2;
        dispatch_sync(MEMORY[0x1E4F14428], block);
        uint64_t v16 = *(void **)(*((void *)&buf + 1) + 40);
        if (v16)
        {
          if (!objc_msgSend_itemType(v16, v13, v14, v15))
          {
            long long v34 = objc_msgSend_chatGuids(*(void **)(*((void *)&buf + 1) + 40), v17, v18, v19);
            long long v38 = objc_msgSend_firstObject(v34, v35, v36, v37);

            uint64_t v43 = objc_msgSend_objectForKey_(v58, v39, (uint64_t)v38, v40);
            if (v43) {
              goto LABEL_23;
            }
            uint64_t v43 = sub_1A4C750A4(v12);
            if (v43)
            {
              objc_msgSend_setObject_forKey_(v58, v44, (uint64_t)v43, (uint64_t)v38);
LABEL_23:
              objc_msgSend_setDateForLastReadMessageInChat_(*(void **)(*((void *)&buf + 1) + 40), v41, (uint64_t)v43, v42, v56);
            }
            else
            {
              if (IMOSLoggingEnabled())
              {
                uint64_t v48 = OSLogHandleForIMFoundationCategory();
                if (os_log_type_enabled(v48, OS_LOG_TYPE_INFO))
                {
                  *(_WORD *)long long v70 = 0;
                  _os_log_impl(&dword_1A4AF7000, v48, OS_LOG_TYPE_INFO, "Unable to set last read date for ", v70, 2u);
                }
              }
              uint64_t v43 = 0;
            }
            objc_msgSend_addObject_(v57, v45, *(void *)(*((void *)&buf + 1) + 40), v46, v56);

            goto LABEL_25;
          }
          if (IMOSLoggingEnabled())
          {
            uint64_t v20 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
            {
              objc_msgSend_guid(*(void **)(*((void *)&buf + 1) + 40), v21, v22, v23);
              id v24 = (id)objc_claimAutoreleasedReturnValue();
              uint64_t v25 = NSNumber;
              uint64_t v29 = objc_msgSend_itemType(*(void **)(*((void *)&buf + 1) + 40), v26, v27, v28);
              long long v32 = objc_msgSend_numberWithLongLong_(v25, v30, v29, v31);
              *(_DWORD *)long long v70 = v56;
              id v71 = v24;
              __int16 v72 = 2112;
              long long v73 = v32;
              _os_log_impl(&dword_1A4AF7000, v20, OS_LOG_TYPE_INFO, "Dropping message with guid %@ and item type %@ as it is not a valid message.", v70, 0x16u);
            }
          }
        }
        else if (IMOSLoggingEnabled())
        {
          uint64_t v33 = OSLogHandleForIMFoundationCategory();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long v70 = 0;
            _os_log_impl(&dword_1A4AF7000, v33, OS_LOG_TYPE_INFO, "Could not create IMSPIMessage from message record", v70, 2u);
          }
        }
LABEL_25:

        _Block_object_dispose(&buf, 8);
        ++v11;
      }
      while (v8 != v11);
      uint64_t v49 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v47, (uint64_t)&v66, (uint64_t)v79, 16);
      uint64_t v8 = v49;
    }
    while (v49);
  }

  if (IMOSLoggingEnabled())
  {
    long long v50 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO))
    {
      uint64_t v54 = objc_msgSend_count(v57, v51, v52, v53);
      LODWORD(buf) = 134217984;
      *(void *)((char *)&buf + 4) = v54;
      _os_log_impl(&dword_1A4AF7000, v50, OS_LOG_TYPE_INFO, "Completed _IMSPIMessagesFromMessageRecords with %ld IMSPIMessages", (uint8_t *)&buf, 0xCu);
    }
  }

  return v57;
}

void sub_1A4C7DEA0(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    objc_end_catch();
    JUMPOUT(0x1A4C7DE34);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1A4C7DEE0()
{
}

void sub_1A4C7DF08(void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v1 = a1;
  uint64_t v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v2, (uint64_t)&v15, (uint64_t)v19, 16);
  if (v3)
  {
    uint64_t v7 = v3;
    uint64_t v8 = *(void *)v16;
    long long v9 = (uint64_t *)MEMORY[0x1E4F6E1A0];
    while (2)
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v16 != v8) {
          objc_enumerationMutation(v1);
        }
        uint64_t v11 = objc_msgSend_service(*(void **)(*((void *)&v15 + 1) + 8 * v10), v4, v5, v6, (void)v15);
        char isEqualToString = objc_msgSend_isEqualToString_(v11, v12, *v9, v13);

        if (isEqualToString)
        {

          IMGreenTeaMessageReadLog();
          goto LABEL_11;
        }
        ++v10;
      }
      while (v7 != v10);
      uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(v1, v4, (uint64_t)&v15, (uint64_t)v19, 16);
      if (v7) {
        continue;
      }
      break;
    }
  }

LABEL_11:
}

uint64_t sub_1A4C7E030(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t IMSPIQueryMessageWithGUID(void *a1, void *a2, void *a3)
{
  return sub_1A4C7E06C(a1, 0, 21, a3, a2);
}

uint64_t IMSPIQueryMessageWithGUIDAndQOS(void *a1, int a2, void *a3, void *a4)
{
  return sub_1A4C7E06C(a1, 0, a2, a3, a4);
}

uint64_t sub_1A4C7E06C(void *a1, char a2, int a3, void *a4, void *a5)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  id v10 = a4;
  id v11 = a5;
  id v15 = v11;
  if (v10) {
    BOOL v16 = v11 == 0;
  }
  else {
    BOOL v16 = 1;
  }
  uint64_t v17 = !v16;
  if (v16)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v22 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 136315138;
        long long v32 = "BOOL _IMSPIQueryMessageWithGUIDAndLoadAttachments(NSString *__strong, BOOL, dispatch_qos_class_t, __strong"
              " dispatch_queue_t, __strong IMSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A4AF7000, v22, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }
    }
  }
  else
  {
    long long v18 = objc_msgSend_copy(v11, v12, v13, v14);

    if (qword_1E965ED90 != -1) {
      dispatch_once(&qword_1E965ED90, &unk_1EF8E6A88);
    }
    uint64_t v19 = off_1E965ED88(v9);
    id v20 = objc_alloc_init(MEMORY[0x1E4F1C998]);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C8551C;
    block[3] = &unk_1E5B7F8C8;
    char v30 = a2;
    uint64_t v28 = v19;
    id v25 = v20;
    int v29 = a3;
    id v26 = v10;
    id v15 = v18;
    id v27 = v15;
    id v21 = v20;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
  return v17;
}

uint64_t IMSPIQueryMessageWithGUIDAndLoadAttachments(void *a1, void *a2, void *a3)
{
  return sub_1A4C7E06C(a1, 1, 21, a3, a2);
}

uint64_t IMSPIQueryMessageWithGUIDAndLoadAttachmentsWithQOS(void *a1, int a2, void *a3, void *a4)
{
  return sub_1A4C7E06C(a1, 1, a2, a3, a4);
}

uint64_t IMSPIQueryMessagesWithGUIDs(void *a1, void *a2, void *a3)
{
  return IMSPIQueryMessagesWithGUIDsAndQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryMessagesWithGUIDsAndQOS(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v13 = v9;
  if (v8) {
    BOOL v14 = v9 == 0;
  }
  else {
    BOOL v14 = 1;
  }
  uint64_t v15 = !v14;
  if (v14)
  {
    if (IMOSLoggingEnabled())
    {
      long long v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 136315138;
        id v26 = "BOOL IMSPIQueryMessagesWithGUIDsAndQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, __strong dispa"
              "tch_queue_t, __strong IMSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }
    }
  }
  else
  {
    BOOL v16 = objc_msgSend_copy(v9, v10, v11, v12);

    uint64_t v17 = sub_1A4C70D74(a2);
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    void v20[2] = sub_1A4C7E4C4;
    void v20[3] = &unk_1E5B7F5B8;
    id v21 = v7;
    dispatch_qos_class_t v24 = a2;
    id v22 = v8;
    id v13 = v16;
    id v23 = v13;
    dispatch_async(v17, v20);
  }
  return v15;
}

void sub_1A4C7E4C4(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (qword_1E965EC50 != -1) {
    dispatch_once(&qword_1E965EC50, &unk_1EF8E6888);
  }
  id v2 = (void *)off_1E965EC48(*(void *)(a1 + 32));
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = objc_msgSend_count(v2, v4, v5, v6);
      uint64_t v11 = objc_msgSend_count(*(void **)(a1 + 32), v8, v9, v10);
      *(_DWORD *)long long buf = 134218240;
      uint64_t v20 = v7;
      __int16 v21 = 2048;
      uint64_t v22 = v11;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Got back %lu messages for %lu GUIDs", buf, 0x16u);
    }
  }
  uint64_t v12 = sub_1A4C7D938(v2, *(_DWORD *)(a1 + 56));
  sub_1A4C7DF08(v12);
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = sub_1A4C7E6C8;
  v16[3] = &unk_1E5B7B220;
  id v13 = *(NSObject **)(a1 + 40);
  id v14 = *(id *)(a1 + 48);
  id v17 = v12;
  id v18 = v14;
  id v15 = v12;
  dispatch_async(v13, v16);
}

void *sub_1A4C7E698()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessagesForGUIDs", @"IMDPersistence");
  off_1E965EC48 = result;
  return result;
}

uint64_t sub_1A4C7E6C8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t IMSPIGetAttachmentPathsForTransferGUIDs(void *a1, void *a2, void *a3)
{
  return IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v13 = v9;
  if (v8) {
    BOOL v14 = v9 == 0;
  }
  else {
    BOOL v14 = 1;
  }
  uint64_t v15 = !v14;
  if (v14)
  {
    if (IMOSLoggingEnabled())
    {
      id v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 136315138;
        id v25 = "BOOL IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, _"
              "_strong dispatch_queue_t, __strong IMSPITransferPathsCallback)";
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }
    }
  }
  else
  {
    BOOL v16 = objc_msgSend_copy(v9, v10, v11, v12);

    id v17 = sub_1A4C70D74(a2);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C7E8CC;
    block[3] = &unk_1E5B7B180;
    id v21 = v7;
    id v22 = v8;
    id v13 = v16;
    id v23 = v13;
    dispatch_async(v17, block);
  }
  return v15;
}

void sub_1A4C7E8CC(uint64_t a1)
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  if (qword_1E965EC60 != -1) {
    dispatch_once(&qword_1E965EC60, &unk_1EF8E68A8);
  }
  if (qword_1E965EC70 != -1) {
    dispatch_once(&qword_1E965EC70, &unk_1EF8E68C8);
  }
  id v2 = objc_alloc(MEMORY[0x1E4F1CA60]);
  uint64_t v6 = objc_msgSend_count(*(void **)(a1 + 32), v3, v4, v5);
  id v9 = objc_msgSend_initWithCapacity_(v2, v7, v6, v8);
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  uint64_t v52 = a1;
  id v10 = *(id *)(a1 + 32);
  uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v59, (uint64_t)v63, 16);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v60;
    uint64_t v53 = *(void *)v60;
    do
    {
      uint64_t v15 = 0;
      uint64_t v54 = v13;
      do
      {
        if (*(void *)v60 != v14) {
          objc_enumerationMutation(v10);
        }
        uint64_t v16 = *(void *)(*((void *)&v59 + 1) + 8 * v15);
        uint64_t v17 = IMDAttachmentRecordCopyAttachmentForGUID();
        if (v17)
        {
          uint64_t v19 = (const void *)v17;
          CFTypeRef cf = 0;
          off_1E965EC58(v17, 0, 0, 0, 0, &cf, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0,
            0,
            0,
            0);
          if (cf)
          {
            uint64_t v20 = (id)cf;
            dispatch_qos_class_t v24 = objc_msgSend_copy((void *)cf, v21, v22, v23);
            uint64_t v27 = objc_msgSend_componentsSeparatedByString_(v24, v25, @"/Attachments/", v26);

            if ((unint64_t)objc_msgSend_count(v27, v28, v29, v30) >= 2)
            {
              uint64_t v33 = objc_msgSend_objectAtIndexedSubscript_(v27, v31, 1, v32);
              uint64_t v37 = sub_1A4C7EC54((uint64_t)v33, v34, v35, v36);
              objc_msgSend_path(v37, v38, v39, v40);
              id v41 = v10;
              uint64_t v43 = v42 = v9;

              uint64_t v20 = (void *)v43;
              id v9 = v42;
              id v10 = v41;
              uint64_t v14 = v53;
            }

            uint64_t v47 = objc_msgSend_copy(v20, v44, v45, v46);
            objc_msgSend_setObject_forKey_(v9, v48, (uint64_t)v47, v16);

            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }

            uint64_t v13 = v54;
          }
          CFRelease(v19);
        }
        ++v15;
      }
      while (v13 != v15);
      uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v18, (uint64_t)&v59, (uint64_t)v63, 16);
    }
    while (v13);
  }

  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C7ECD8;
  block[3] = &unk_1E5B7B220;
  uint64_t v49 = *(NSObject **)(v52 + 40);
  id v50 = *(id *)(v52 + 48);
  id v56 = v9;
  id v57 = v50;
  id v51 = v9;
  dispatch_async(v49, block);
}

void *sub_1A4C7EBF4()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("_IMDAttachmentRecordBulkCopy", @"IMDPersistence");
  off_1E965EC58 = result;
  return result;
}

uint64_t sub_1A4C7EC24()
{
  uint64_t result = MEMORY[0x1A6263B50]("IMDAttachmentRecordCopyAttachmentForGUID", @"IMDPersistence");
  qword_1E965EC68 = result;
  return result;
}

id sub_1A4C7EC54(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = objc_msgSend_stringWithFormat_(NSString, a2, @"%@/%@", a4, @"/var/mobile/Library/SMS/Attachments", a1);
  uint64_t v6 = objc_msgSend_fileURLWithPath_isDirectory_(MEMORY[0x1E4F1CB10], v5, (uint64_t)v4, 0);

  return v6;
}

uint64_t sub_1A4C7ECD8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id IMSPIGetGroupPhotosForChatsWithGroupIDs(void *a1)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v27 = 0;
  uint64_t v28 = &v27;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = sub_1A4B3461C;
  uint64_t v31 = sub_1A4B343F4;
  id v32 = 0;
  id v2 = objc_alloc(MEMORY[0x1E4F1CA60]);
  uint64_t v6 = objc_msgSend_count(v1, v3, v4, v5);
  id v32 = (id)objc_msgSend_initWithCapacity_(v2, v7, v6, v8);
  if (IMOSLoggingEnabled())
  {
    uint64_t v12 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v34 = v1;
      _os_log_impl(&dword_1A4AF7000, v12, OS_LOG_TYPE_INFO, "Attempting to lookup group photos for chats with groupIDs: %@", buf, 0xCu);
    }
  }
  uint64_t v13 = objc_msgSend_sharedInstance(IMDaemonController, v9, v10, v11);
  uint64_t v17 = objc_msgSend_synchronousRemoteDaemon(v13, v14, v15, v16);
  v26[0] = MEMORY[0x1E4F143A8];
  v26[1] = 3221225472;
  v26[2] = sub_1A4C7EF9C;
  v26[3] = &unk_1E5B7F630;
  v26[4] = &v27;
  objc_msgSend_fetchGroupPhotoPathsForChatsWithGroupIDs_completionHandler_(v17, v18, (uint64_t)v1, (uint64_t)v26);

  if (IMOSLoggingEnabled())
  {
    uint64_t v22 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      uint64_t v23 = (void *)v28[5];
      *(_DWORD *)long long buf = 138412546;
      id v34 = v23;
      __int16 v35 = 2112;
      id v36 = v1;
      _os_log_impl(&dword_1A4AF7000, v22, OS_LOG_TYPE_INFO, "Finished fetching group photos data: '%@', for groups: '%@'.", buf, 0x16u);
    }
  }
  dispatch_qos_class_t v24 = objc_msgSend_copy((void *)v28[5], v19, v20, v21);
  _Block_object_dispose(&v27, 8);

  return v24;
}

void sub_1A4C7EF9C(uint64_t a1, void *a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = IMLogHandleForCategory();
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v10 = v3;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Received group photos: %@", buf, 0xCu);
    }

    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    void v8[2] = sub_1A4C7F0D8;
    v8[3] = &unk_1E5B7F608;
    void v8[4] = *(void *)(a1 + 32);
    objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v3, v6, (uint64_t)v8, v7);
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1A4CBA410(v5);
    }
  }
}

void sub_1A4C7F0D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = sub_1A4C7F1CC;
  v11[3] = &unk_1E5B7F5E0;
  uint64_t v13 = *(void *)(a1 + 32);
  id v7 = v5;
  id v12 = v7;
  if ((objc_msgSend_accessResourceByConsumingSandboxExtensionWithBlock_(v6, v8, (uint64_t)v11, v9) & 1) == 0)
  {
    id v10 = IMLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1A4CBA454((uint64_t)v7, (uint64_t)v6, v10);
    }
  }
}

void sub_1A4C7F1CC(uint64_t a1, const char *a2)
{
  if (a2)
  {
    id v11 = 0;
    id v3 = objc_msgSend_dataWithContentsOfURL_options_error_(MEMORY[0x1E4F1C9B8], a2, (uint64_t)a2, 0, &v11);
    uint64_t v4 = v11;
    id v6 = v4;
    if (v3) {
      BOOL v7 = v4 == 0;
    }
    else {
      BOOL v7 = 0;
    }
    if (v7)
    {
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v5, (uint64_t)v3, *(void *)(a1 + 32));
    }
    else
    {
      IMLogHandleForCategory();
      uint64_t v8 = (char *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_ERROR)) {
        sub_1A4CBA520(v6, v8, v9, v10);
      }
    }
  }
  else
  {
    id v6 = IMLogHandleForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1A4CBA4DC(v6);
    }
  }
}

uint64_t IMSPIHasActiveAliasForSendingOnService(void *a1, void *a2)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v8 = v4;
  if (v3 && v4)
  {
    uint64_t v9 = objc_msgSend_sharedController(IMDaemonController, v5, v6, v7);
    id v11 = objc_msgSend_multiplexedConnectionWithLabel_capabilities_context_(v9, v10, @"IMCoreSPI_HasActiveAlias", 512, 0);

    objc_msgSend_waitForSetup(v11, v12, v13, v14);
    id v18 = objc_msgSend_sharedInstance(IMAccountController, v15, v16, v17);
    uint64_t v22 = objc_msgSend_activeAccounts(v18, v19, v20, v21);

    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    id v23 = v22;
    uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v24, (uint64_t)&v47, (uint64_t)v52, 16);
    if (v28)
    {
      uint64_t v29 = *(void *)v48;
      do
      {
        for (uint64_t i = 0; i != v28; ++i)
        {
          if (*(void *)v48 != v29) {
            objc_enumerationMutation(v23);
          }
          uint64_t v31 = *(void **)(*((void *)&v47 + 1) + 8 * i);
          id v32 = objc_msgSend_serviceName(v31, v25, v26, v27, (void)v47);
          if (objc_msgSend_isEqualToString_(v32, v33, (uint64_t)v8, v34))
          {
            long long v38 = objc_msgSend_aliases(v31, v35, v36, v37);
            char v41 = objc_msgSend_containsObject_(v38, v39, (uint64_t)v3, v40);

            if (v41)
            {
              uint64_t v28 = 1;
              goto LABEL_20;
            }
          }
          else
          {
          }
        }
        uint64_t v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v25, (uint64_t)&v47, (uint64_t)v52, 16);
      }
      while (v28);
    }
LABEL_20:

    objc_msgSend_invalidate(v11, v43, v44, v45);
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v42 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v42, OS_LOG_TYPE_INFO, "Invalid input to IMSPIHasActiveAliasForSendingOnService", buf, 2u);
      }
    }
    uint64_t v28 = 0;
  }

  return v28;
}

uint64_t IMSPIQueryIMMessageItemsWithGUIDs(void *a1, void *a2, void *a3)
{
  return IMSPIQueryIMMessageItemsWithGUIDsAndQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryIMMessageItemsWithGUIDsAndQOS(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v13 = v9;
  if (v8) {
    BOOL v14 = v9 == 0;
  }
  else {
    BOOL v14 = 1;
  }
  uint64_t v15 = !v14;
  if (v14)
  {
    if (IMOSLoggingEnabled())
    {
      id v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 136315138;
        id v25 = "BOOL IMSPIQueryIMMessageItemsWithGUIDsAndQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, __strong"
              " dispatch_queue_t, __strong IMSPIMessageQueryCallback)";
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to %s", buf, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v16 = objc_msgSend_copy(v9, v10, v11, v12);

    uint64_t v17 = sub_1A4C70D74(a2);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C7F700;
    block[3] = &unk_1E5B7B180;
    id v21 = v7;
    id v22 = v8;
    id v13 = v16;
    id v23 = v13;
    dispatch_async(v17, block);
  }
  return v15;
}

void sub_1A4C7F700(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  if (qword_1E965EC80 != -1) {
    dispatch_once(&qword_1E965EC80, &unk_1EF8E68E8);
  }
  id v2 = (void *)off_1E965EC78(*(void *)(a1 + 32));
  if (IMOSLoggingEnabled())
  {
    id v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = objc_msgSend_count(v2, v4, v5, v6);
      uint64_t v11 = objc_msgSend_count(*(void **)(a1 + 32), v8, v9, v10);
      *(_DWORD *)long long buf = 134218240;
      uint64_t v39 = v7;
      __int16 v40 = 2048;
      uint64_t v41 = v11;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "Got back %lu messages for %lu GUIDs", buf, 0x16u);
    }
  }
  id v12 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v13 = v2;
  uint64_t v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v33, (uint64_t)v37, 16);
  if (v15)
  {
    uint64_t v16 = *(void *)v34;
    do
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v34 != v16) {
          objc_enumerationMutation(v13);
        }
        uint64_t v20 = sub_1A4C747F4(*(void *)(*((void *)&v33 + 1) + 8 * i));
        if (v20) {
          objc_msgSend_addObject_(v12, v18, (uint64_t)v20, v19);
        }
      }
      uint64_t v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v21, (uint64_t)&v33, (uint64_t)v37, 16);
    }
    while (v15);
  }

  if (IMOSLoggingEnabled())
  {
    id v22 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      uint64_t v26 = objc_msgSend_count(v12, v23, v24, v25);
      *(_DWORD *)long long buf = 134217984;
      uint64_t v39 = v26;
      _os_log_impl(&dword_1A4AF7000, v22, OS_LOG_TYPE_INFO, "Converted records into items %lu items", buf, 0xCu);
    }
  }
  v30[0] = MEMORY[0x1E4F143A8];
  v30[1] = 3221225472;
  void v30[2] = sub_1A4C7FA34;
  v30[3] = &unk_1E5B7B220;
  uint64_t v27 = *(NSObject **)(a1 + 40);
  id v28 = *(id *)(a1 + 48);
  id v31 = v12;
  id v32 = v28;
  id v29 = v12;
  dispatch_async(v27, v30);
}

void *sub_1A4C7FA04()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessagesForGUIDs", @"IMDPersistence");
  off_1E965EC78 = result;
  return result;
}

uint64_t sub_1A4C7FA34(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t IMSPIQueryUnreadMessages(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return IMSPIQueryUnreadMessagesWithQOS(a1, a2, QOS_CLASS_DEFAULT, a4, a3);
}

uint64_t IMSPIQueryUnreadMessagesWithQOS(uint64_t a1, uint64_t a2, dispatch_qos_class_t a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  id v14 = v10;
  if (!v9 || !v10)
  {
    if (IMOSLoggingEnabled())
    {
      id v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        uint64_t v19 = "Empty results block or queue supplied to IMSPIQueryUnreadMessages";
LABEL_11:
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, v19, buf, 2u);
      }
LABEL_12:
    }
LABEL_13:
    uint64_t v17 = 0;
    goto LABEL_14;
  }
  if (!a1)
  {
    if (IMOSLoggingEnabled())
    {
      id v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        uint64_t v19 = "0 limit supplied, no query issued to IMSPIQueryUnreadMessages";
        goto LABEL_11;
      }
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  uint64_t v15 = objc_msgSend_copy(v10, v11, v12, v13);

  uint64_t v16 = sub_1A4C70D74(a3);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C7FC24;
  block[3] = &unk_1E5B7F658;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  dispatch_qos_class_t v26 = a3;
  id v22 = v9;
  id v14 = v15;
  id v23 = v14;
  dispatch_async(v16, block);

  uint64_t v17 = 1;
LABEL_14:

  return v17;
}

void sub_1A4C7FC24(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (qword_1E965EC90 != -1) {
    dispatch_once(&qword_1E965EC90, &unk_1EF8E3548);
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 48);
      uint64_t v4 = *(void *)(a1 + 56);
      *(_DWORD *)long long buf = 134218240;
      uint64_t v19 = v3;
      __int16 v20 = 2048;
      uint64_t v21 = v4;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Querying for unread messages with limit: %lld, from row id: %lld", buf, 0x16u);
    }
  }
  uint64_t v5 = (void *)off_1E965EC88(*(void *)(a1 + 48), *(void *)(a1 + 56));
  if (IMOSLoggingEnabled())
  {
    uint64_t v6 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = objc_msgSend_count(v5, v7, v8, v9);
      *(_DWORD *)long long buf = 134217984;
      uint64_t v19 = v10;
      _os_log_impl(&dword_1A4AF7000, v6, OS_LOG_TYPE_INFO, "Got back %lu unread messages", buf, 0xCu);
    }
  }
  uint64_t v11 = sub_1A4C7D938(v5, *(_DWORD *)(a1 + 64));
  sub_1A4C7DF08(v11);
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  v15[2] = sub_1A4C7FE94;
  v15[3] = &unk_1E5B7B220;
  uint64_t v12 = *(NSObject **)(a1 + 32);
  id v13 = *(id *)(a1 + 40);
  id v16 = v11;
  id v17 = v13;
  id v14 = v11;
  dispatch_async(v12, v15);
}

void *sub_1A4C7FE64()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID", @"IMDPersistence");
  off_1E965EC88 = result;
  return result;
}

uint64_t sub_1A4C7FE94(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 40);
  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4)) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);

  return v7(v5, v6);
}

uint64_t IMSPIQueryUnreadMessagesWithIDs(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return IMSPIQueryUnreadMessagesWithIDsAndQOS(a1, a2, a3, QOS_CLASS_DEFAULT, a5, a4);
}

uint64_t IMSPIQueryUnreadMessagesWithIDsAndQOS(void *a1, void *a2, uint64_t a3, dispatch_qos_class_t a4, void *a5, void *a6)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v11 = a1;
  id v12 = a2;
  id v13 = a5;
  id v14 = a6;
  id v18 = v14;
  if (!v13 || !v14)
  {
    if (IMOSLoggingEnabled())
    {
      id v32 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v32, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to IMSPIQueryUnreadMessagesWithIDs", buf, 2u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  uint64_t v19 = objc_msgSend_count(v11, v15, v16, v17);
  if (v19 != objc_msgSend_count(v12, v20, v21, v22))
  {
    if (IMOSLoggingEnabled())
    {
      id v32 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v42 = v11;
        __int16 v43 = 2112;
        id v44 = v12;
        _os_log_impl(&dword_1A4AF7000, v32, OS_LOG_TYPE_INFO, "Services is not matched with IDs: [%@] [%@] to IMSPIQueryUnreadMessagesWithIDs", buf, 0x16u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  if (!objc_msgSend_count(v11, v23, v24, v25))
  {
    if (IMOSLoggingEnabled())
    {
      id v32 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v32, OS_LOG_TYPE_INFO, "Empty services or IDs supplied to IMSPIQueryUnreadMessagesWithIDs", buf, 2u);
      }
      goto LABEL_22;
    }
LABEL_23:
    uint64_t v31 = 0;
    goto LABEL_24;
  }
  if (!a3)
  {
    if (IMOSLoggingEnabled())
    {
      id v32 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v32, OS_LOG_TYPE_INFO, "0 limit supplied, no query issued to IMSPIQueryUnreadMessagesWithIDs", buf, 2u);
      }
LABEL_22:

      goto LABEL_23;
    }
    goto LABEL_23;
  }
  id v29 = objc_msgSend_copy(v18, v26, v27, v28);

  uint64_t v30 = sub_1A4C70D74(a4);
  v34[0] = MEMORY[0x1E4F143A8];
  v34[1] = 3221225472;
  v34[2] = sub_1A4C80254;
  v34[3] = &unk_1E5B7F680;
  id v35 = v12;
  id v36 = v11;
  uint64_t v39 = a3;
  dispatch_qos_class_t v40 = a4;
  id v37 = v13;
  id v18 = v29;
  id v38 = v18;
  dispatch_async(v30, v34);

  uint64_t v31 = 1;
LABEL_24:

  return v31;
}

void sub_1A4C80230(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C801DCLL);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C80254(uint64_t a1)
{
  if (qword_1E965ECA0 != -1) {
    dispatch_once(&qword_1E965ECA0, &unk_1EF8E6908);
  }
  id v2 = (void *)off_1E965EC98(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 64));
  uint64_t v3 = sub_1A4C7D938(v2, *(_DWORD *)(a1 + 72));
  uint64_t v6 = objc_msgSend___imArrayByFilteringWithBlock_(v3, v4, (uint64_t)&unk_1EF8E6AA8, v5);
  sub_1A4C7DF08(v6);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = sub_1A4C803A4;
  v10[3] = &unk_1E5B7B220;
  uint64_t v7 = *(NSObject **)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  id v11 = v6;
  id v12 = v8;
  id v9 = v6;
  dispatch_async(v7, v10);
}

void *sub_1A4C80374()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessagesWithHandlesOnServicesLimit", @"IMDPersistence");
  off_1E965EC98 = result;
  return result;
}

uint64_t sub_1A4C803A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 40);
  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4)) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);

  return v7(v5, v6);
}

uint64_t IMSPIQueryMessagesWithIDs(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return IMSPIQueryMessagesWithIDsWithOnlyUnreadAndQOS(a1, a2, a3 != 0, 1, 0, QOS_CLASS_DEFAULT, a5, a4);
}

uint64_t IMSPIQueryMessagesWithIDsAndQOS(void *a1, void *a2, uint64_t a3, dispatch_qos_class_t a4, void *a5, void *a6)
{
  return IMSPIQueryMessagesWithIDsWithOnlyUnreadAndQOS(a1, a2, a3 != 0, 1, 0, a4, a5, a6);
}

uint64_t IMSPIQueryMessagesWithIDsWithOnlyUnreadAndQOS(void *a1, void *a2, char a3, char a4, uint64_t a5, dispatch_qos_class_t a6, void *a7, void *a8)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v15 = a1;
  id v16 = a2;
  id v17 = a7;
  id v18 = a8;
  id v22 = v18;
  if (!v17 || !v18)
  {
    if (IMOSLoggingEnabled())
    {
      id v35 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v35, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to IMSPIQueryMessagesWithIDs", buf, 2u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  uint64_t v23 = objc_msgSend_count(v15, v19, v20, v21);
  if (v23 != objc_msgSend_count(v16, v24, v25, v26))
  {
    if (IMOSLoggingEnabled())
    {
      id v35 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v48 = v15;
        __int16 v49 = 2112;
        id v50 = v16;
        _os_log_impl(&dword_1A4AF7000, v35, OS_LOG_TYPE_INFO, "Services is not matched with IDs: [%@] [%@] to IMSPIQueryMessagesWithIDs", buf, 0x16u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  if (!objc_msgSend_count(v15, v27, v28, v29))
  {
    if (IMOSLoggingEnabled())
    {
      id v35 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v35, OS_LOG_TYPE_INFO, "Empty services or IDs supplied to IMSPIQueryMessagesWithIDs", buf, 2u);
      }
      goto LABEL_22;
    }
LABEL_23:
    uint64_t v34 = 0;
    goto LABEL_24;
  }
  if (!a5)
  {
    if (IMOSLoggingEnabled())
    {
      id v35 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v35, OS_LOG_TYPE_INFO, "0 limit supplied, no query issued to IMSPIQueryMessagesWithIDs", buf, 2u);
      }
LABEL_22:

      goto LABEL_23;
    }
    goto LABEL_23;
  }
  id v37 = objc_msgSend_copy(v22, v30, v31, v32);

  long long v33 = sub_1A4C70D74(a6);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C807B8;
  block[3] = &unk_1E5B7F6A8;
  id v39 = v16;
  char v45 = a3;
  char v46 = a4;
  id v40 = v15;
  uint64_t v43 = a5;
  dispatch_qos_class_t v44 = a6;
  id v41 = v17;
  id v22 = v37;
  id v42 = v22;
  dispatch_async(v33, block);

  uint64_t v34 = 1;
LABEL_24:

  return v34;
}

void sub_1A4C80788(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C80734);
  }
  _Unwind_Resume(a1);
}

uint64_t IMSPIQueryMessagesWithIDsWithOnlyUnread(void *a1, void *a2, char a3, char a4, uint64_t a5, void *a6, void *a7)
{
  return IMSPIQueryMessagesWithIDsWithOnlyUnreadAndQOS(a1, a2, a3, a4, a5, QOS_CLASS_DEFAULT, a7, a6);
}

void sub_1A4C807B8(uint64_t a1)
{
  if (qword_1E965ECB0 != -1) {
    dispatch_once(&qword_1E965ECB0, &unk_1EF8E6928);
  }
  id v2 = (void *)off_1E965ECA8(*(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 76), *(unsigned __int8 *)(a1 + 77), *(void *)(a1 + 64));
  uint64_t v3 = sub_1A4C7D938(v2, *(_DWORD *)(a1 + 72));
  sub_1A4C7DF08(v3);
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A4C808F0;
  v7[3] = &unk_1E5B7B220;
  uint64_t v4 = *(NSObject **)(a1 + 48);
  id v5 = *(id *)(a1 + 56);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

void *sub_1A4C808C0()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesWithOnlyUnreadAndLimit", @"IMDPersistence");
  off_1E965ECA8 = result;
  return result;
}

uint64_t sub_1A4C808F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 40);
  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4)) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);

  return v7(v5, v6);
}

uint64_t IMSPIQueryMessages(uint64_t a1, void *a2, void *a3)
{
  return IMSPIQueryMessagesWithQOS(a1, QOS_CLASS_DEFAULT, a3, a2);
}

uint64_t IMSPIQueryMessagesWithQOS(uint64_t a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v12 = v8;
  if (!v7 || !v8)
  {
    if (IMOSLoggingEnabled())
    {
      id v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        id v17 = "Empty results block or queue supplied to IMSPIQueryMessages";
LABEL_11:
        _os_log_impl(&dword_1A4AF7000, v16, OS_LOG_TYPE_INFO, v17, buf, 2u);
      }
LABEL_12:
    }
LABEL_13:
    uint64_t v15 = 0;
    goto LABEL_14;
  }
  if (!a1)
  {
    if (IMOSLoggingEnabled())
    {
      id v16 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        id v17 = "0 limit supplied, no query issued to IMSPIQueryMessages";
        goto LABEL_11;
      }
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  id v13 = objc_msgSend_copy(v8, v9, v10, v11);

  id v14 = sub_1A4C70D74(a2);
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  void v19[2] = sub_1A4C80B14;
  v19[3] = &unk_1E5B7F590;
  uint64_t v22 = a1;
  dispatch_qos_class_t v23 = a2;
  id v20 = v7;
  id v12 = v13;
  id v21 = v12;
  dispatch_async(v14, v19);

  uint64_t v15 = 1;
LABEL_14:

  return v15;
}

void sub_1A4C80B14(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (qword_1E965ECC0 != -1) {
    dispatch_once(&qword_1E965ECC0, &unk_1EF8E6948);
  }
  if (IMOSLoggingEnabled())
  {
    id v2 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 48);
      *(_DWORD *)long long buf = 134217984;
      uint64_t v18 = v3;
      _os_log_impl(&dword_1A4AF7000, v2, OS_LOG_TYPE_INFO, "Querying for messages with limit: %lld", buf, 0xCu);
    }
  }
  uint64_t v4 = (void *)off_1E965ECB8(*(void *)(a1 + 48));
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = objc_msgSend_count(v4, v6, v7, v8);
      *(_DWORD *)long long buf = 134217984;
      uint64_t v18 = v9;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Got back %lu messages", buf, 0xCu);
    }
  }
  uint64_t v10 = sub_1A4C7D938(v4, *(_DWORD *)(a1 + 56));
  sub_1A4C7DF08(v10);
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = sub_1A4C80D78;
  v14[3] = &unk_1E5B7B220;
  uint64_t v11 = *(NSObject **)(a1 + 32);
  id v12 = *(id *)(a1 + 40);
  id v15 = v10;
  id v16 = v12;
  id v13 = v10;
  dispatch_async(v11, v14);
}

void *sub_1A4C80D48()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyLastReceivedMessageLimit", @"IMDPersistence");
  off_1E965ECB8 = result;
  return result;
}

uint64_t sub_1A4C80D78(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 40);
  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4)) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);

  return v7(v5, v6);
}

BOOL _IMSPIShouldFilterOutSPIMessage(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_itemType(a1, a2, a3, a4) != 0;
}

uint64_t IMSPIQueryMessagesWithChatIdentifiers(void *a1, void *a2, char a3, uint64_t a4, void *a5, void *a6)
{
  return IMSPIQueryMessagesWithChatIdentifiersAndQOS(a1, a2, a3, a4, QOS_CLASS_DEFAULT, a6, a5);
}

uint64_t IMSPIQueryMessagesWithChatIdentifiersAndQOS(void *a1, void *a2, char a3, uint64_t a4, dispatch_qos_class_t a5, void *a6, void *a7)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v13 = a1;
  id v14 = a2;
  id v15 = a6;
  id v16 = a7;
  id v20 = v16;
  if (!v15 || !v16)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v34 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "Empty results block or queue supplied to IMSPIQueryMessagesWithChatIdentifiers", buf, 2u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  uint64_t v21 = objc_msgSend_count(v13, v17, v18, v19);
  if (v21 != objc_msgSend_count(v14, v22, v23, v24))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v34 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412546;
        id v45 = v13;
        __int16 v46 = 2112;
        id v47 = v14;
        _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "Services is not matched with chatIdentifiers: [%@] [%@] to IMSPIQueryMessagesWithIDs", buf, 0x16u);
      }
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  if (!objc_msgSend_count(v13, v25, v26, v27))
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v34 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "Empty services or chatIdentifiers supplied to IMSPIQueryMessagesWithChatIdentifiers", buf, 2u);
      }
      goto LABEL_22;
    }
LABEL_23:
    uint64_t v33 = 0;
    goto LABEL_24;
  }
  if (!a4)
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v34 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v34, OS_LOG_TYPE_INFO, "0 limit supplied, no query issued to IMSPIQueryMessagesWithChatIdentifiers", buf, 2u);
      }
LABEL_22:

      goto LABEL_23;
    }
    goto LABEL_23;
  }
  uint64_t v31 = objc_msgSend_copy(v20, v28, v29, v30);

  uint64_t v32 = sub_1A4C70D74(a5);
  v36[0] = MEMORY[0x1E4F143A8];
  v36[1] = 3221225472;
  v36[2] = sub_1A4C81160;
  v36[3] = &unk_1E5B7F6D0;
  id v37 = v14;
  char v43 = a3;
  id v38 = v13;
  uint64_t v41 = a4;
  dispatch_qos_class_t v42 = a5;
  id v39 = v15;
  id v20 = v31;
  id v40 = v20;
  dispatch_async(v32, v36);

  uint64_t v33 = 1;
LABEL_24:

  return v33;
}

void sub_1A4C8113C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C810E8);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C81160(uint64_t a1)
{
  if (qword_1E965ECD0 != -1) {
    dispatch_once(&qword_1E965ECD0, &unk_1EF8E5E98);
  }
  id v2 = (void *)off_1E965ECC8(*(void *)(a1 + 32), *(void *)(a1 + 40), 0, *(unsigned __int8 *)(a1 + 76), *(void *)(a1 + 64));
  uint64_t v3 = sub_1A4C7D938(v2, *(_DWORD *)(a1 + 72));
  sub_1A4C7DF08(v3);
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sub_1A4C81298;
  v7[3] = &unk_1E5B7B220;
  uint64_t v4 = *(NSObject **)(a1 + 48);
  id v5 = *(id *)(a1 + 56);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

void *sub_1A4C81268()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesWithOnlyUnreadAndLimit", @"IMDPersistence");
  off_1E965ECC8 = result;
  return result;
}

uint64_t sub_1A4C81298(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 40);
  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4)) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);

  return v7(v5, v6);
}

uint64_t IMSPIQueryHasConversationWithID(void *a1, void *a2, void *a3, void *a4)
{
  return IMSPIQueryHasConversationWithIDAndQOS(a1, a2, QOS_CLASS_DEFAULT, a4, a3);
}

uint64_t IMSPIQueryHasConversationWithIDAndQOS(void *a1, void *a2, dispatch_qos_class_t a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a4;
  id v12 = a5;
  id v16 = v12;
  if (!v11 || !v12)
  {
    if (IMOSLoggingEnabled())
    {
      id v40 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        uint64_t v41 = "Empty results block or queue supplied to IMSPIQueryHasConversationWithID";
LABEL_16:
        _os_log_impl(&dword_1A4AF7000, v40, OS_LOG_TYPE_INFO, v41, buf, 2u);
      }
LABEL_17:
    }
LABEL_18:
    uint64_t v39 = 0;
    goto LABEL_19;
  }
  if (!objc_msgSend_length(v9, v13, v14, v15))
  {
    if (IMOSLoggingEnabled())
    {
      id v40 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        uint64_t v41 = "Empty ID passed into IMSPIQueryHasConversationWithID";
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  id v17 = IMSingleObjectArray();
  if (!objc_msgSend_count(v17, v18, v19, v20))
  {
    uint64_t v23 = objc_msgSend_arrayWithObjects_(MEMORY[0x1E4F1C978], v21, @"iMessage", v22, @"SMS", 0);

    id v17 = (void *)v23;
  }
  id v24 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  if (objc_msgSend_count(v17, v25, v26, v27))
  {
    unint64_t v31 = 0;
    do
    {
      objc_msgSend_addObject_(v24, v28, (uint64_t)v9, v30);
      ++v31;
    }
    while (v31 < objc_msgSend_count(v17, v32, v33, v34));
  }
  id v35 = objc_msgSend_copy(v16, v28, v29, v30);

  id v36 = sub_1A4C70D74(a3);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C81594;
  block[3] = &unk_1E5B7BCE0;
  id v44 = v24;
  id v45 = v17;
  id v46 = v11;
  id v16 = v35;
  id v47 = v16;
  id v37 = v17;
  id v38 = v24;
  dispatch_async(v36, block);

  uint64_t v39 = 1;
LABEL_19:

  return v39;
}

void sub_1A4C81594(uint64_t a1)
{
  if (qword_1E965ECE0 != -1) {
    dispatch_once(&qword_1E965ECE0, &unk_1EF8E6968);
  }
  id v2 = (void *)off_1E965ECD8(*(void *)(a1 + 32), *(void *)(a1 + 40), 1);
  BOOL v6 = objc_msgSend_count(v2, v3, v4, v5) != 0;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = sub_1A4C816AC;
  v8[3] = &unk_1E5B7D690;
  uint64_t v7 = *(NSObject **)(a1 + 48);
  id v9 = *(id *)(a1 + 56);
  BOOL v10 = v6;
  dispatch_async(v7, v8);
}

void *sub_1A4C8167C()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessagesWithHandlesOnServicesLimit", @"IMDPersistence");
  off_1E965ECD8 = result;
  return result;
}

uint64_t sub_1A4C816AC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

BOOL IMSPIQueryChatsWithUnplayedAudioMessages(void *a1)
{
  id v1 = a1;
  id v2 = (void *)MEMORY[0x1E4F14428];
  id v3 = MEMORY[0x1E4F14428];
  if (v1)
  {
    uint64_t v7 = objc_msgSend_copy(v1, v4, v5, v6);

    id v8 = sub_1A4C70D74(QOS_CLASS_DEFAULT);
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    v12[2] = sub_1A4C81824;
    uint64_t v12[3] = &unk_1E5B7F310;
    id v9 = v2;
    id v13 = v2;
    id v14 = v7;
    BOOL v10 = v7;
    dispatch_async(v8, v12);
  }
  else
  {
    if (!IMOSLoggingEnabled()) {
      goto LABEL_4;
    }
    BOOL v10 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Empty results block supplied to IMSPIQueryChatsWithUnplayedAudioMessages", buf, 2u);
    }
  }

LABEL_4:
  return v1 != 0;
}

void sub_1A4C81824(uint64_t a1)
{
  if (qword_1E965ECF0 != -1) {
    dispatch_once(&qword_1E965ECF0, &unk_1EF8E6988);
  }
  id v2 = (void *)off_1E965ECE8();
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_1A4C81934;
  void v6[3] = &unk_1E5B7B220;
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  id v7 = v2;
  id v8 = v4;
  id v5 = v2;
  dispatch_async(v3, v6);
}

void *sub_1A4C81904()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDChatRecordCopyChatGUIDsWithUnplayedAudioMessages", @"IMDPersistence");
  off_1E965ECE8 = result;
  return result;
}

uint64_t sub_1A4C81934(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void IMSPIBatchFetchMessageGUIDsWithBalloonBundleID(void *a1, uint64_t a2, void *a3)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v48 = a1;
  id v5 = a3;
  if (IMOSLoggingEnabled())
  {
    id v9 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v55 = v48;
      _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Received request to get message GUIDs for balloon bundle ID %@", buf, 0xCu);
    }
  }
  BOOL v10 = (unsigned int (**)(void, void, void))objc_msgSend_copy(v5, v6, v7, v8);

  id v11 = objc_alloc_init(MEMORY[0x1E4F6BF60]);
  objc_msgSend_setBatchSize_(v11, v12, a2, v13);
  id v16 = objc_msgSend_predicateWithFormat_(MEMORY[0x1E4F28F60], v14, @"%K = %@", v15, *MEMORY[0x1E4F6D580], v48);
  objc_msgSend_setPredicate_(v11, v17, (uint64_t)v16, v18);

  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id v19 = v11;
  uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v19, v20, (uint64_t)&v49, (uint64_t)v53, 16);
  if (v24)
  {
    uint64_t v25 = *(void *)v50;
    while (2)
    {
      for (uint64_t i = 0; i != v24; ++i)
      {
        if (*(void *)v50 != v25) {
          objc_enumerationMutation(v19);
        }
        uint64_t v27 = *(void **)(*((void *)&v49 + 1) + 8 * i);
        uint64_t v28 = objc_msgSend_guid(v27, v21, v22, v23);
        uint64_t v32 = objc_msgSend_copy(v28, v29, v30, v31);

        id v36 = objc_msgSend_iMessageAppData(v27, v33, v34, v35);
        id v40 = objc_msgSend_copy(v36, v37, v38, v39);

        uint64_t v41 = _IMSPIExtractPayloadURLFromPayloadNSData(v40);
        id v45 = objc_msgSend_copy(v41, v42, v43, v44);

        if (((unsigned int (**)(void, void *, void *))v10)[2](v10, v32, v45))
        {
          if (IMOSLoggingEnabled())
          {
            id v46 = OSLogHandleForIMFoundationCategory();
            if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = 138412290;
              id v55 = v48;
              _os_log_impl(&dword_1A4AF7000, v46, OS_LOG_TYPE_INFO, "Stopping early for batch fetch of message records with balloon bundle ID %@", buf, 0xCu);
            }
          }
          goto LABEL_19;
        }
      }
      uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v19, v21, (uint64_t)&v49, (uint64_t)v53, 16);
      if (v24) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  if (IMOSLoggingEnabled())
  {
    id v47 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v55 = v48;
      _os_log_impl(&dword_1A4AF7000, v47, OS_LOG_TYPE_INFO, "Finished batch fetch of message records with balloon bundle ID %@", buf, 0xCu);
    }
  }
}

void sub_1A4C81CD0(uint64_t a1)
{
  if (qword_1E965ED00 != -1) {
    dispatch_once(&qword_1E965ED00, &unk_1EF8E3568);
  }
  id v2 = (const void *)off_1E965ECF8(*(void *)(a1 + 32));
  if (v2)
  {
    id v3 = [IMSPIChat alloc];
    uint64_t v6 = objc_msgSend_initWithChatRecord_(v3, v4, (uint64_t)v2, v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = sub_1A4C81E14;
  v10[3] = &unk_1E5B7B220;
  uint64_t v7 = *(NSObject **)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  id v11 = v6;
  id v12 = v8;
  id v9 = v6;
  dispatch_async(v7, v10);
  if (v2) {
    CFRelease(v2);
  }
}

void *sub_1A4C81DE4()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDChatRecordCopyChatForGUID", @"IMDPersistence");
  off_1E965ECF8 = result;
  return result;
}

uint64_t sub_1A4C81E14(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

BOOL IMSPIQueryChatWithGroupID(void *a1, dispatch_qos_class_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  uint64_t v13 = v9;
  if (v9)
  {
    id v14 = objc_msgSend_copy(v9, v10, v11, v12);

    uint64_t v15 = sub_1A4C70D74(a2);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C81FB0;
    block[3] = &unk_1E5B7B180;
    id v20 = v7;
    id v21 = v8;
    id v22 = v14;
    id v16 = v14;
    dispatch_async(v15, block);
  }
  else if (IMOSLoggingEnabled())
  {
    id v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Empty result block supplied to IMSPIQueryChatWithGuid", buf, 2u);
    }
  }
  return v13 != 0;
}

void sub_1A4C81FB0(uint64_t a1)
{
  if (qword_1E965ED10 != -1) {
    dispatch_once(&qword_1E965ED10, &unk_1EF8E69A8);
  }
  CFArrayRef v2 = (const __CFArray *)off_1E965ED08(*(void *)(a1 + 32));
  CFArrayRef v3 = v2;
  if (v2 && CFArrayGetCount(v2) >= 1)
  {
    CFIndex Count = CFArrayGetCount(v3);
    ValueAtIndex = (void *)CFArrayGetValueAtIndex(v3, Count - 1);
    if (ValueAtIndex)
    {
      uint64_t v6 = [IMSPIChat alloc];
      ValueAtIndex = objc_msgSend_initWithChatRecord_(v6, v7, (uint64_t)ValueAtIndex, v8);
    }
  }
  else
  {
    ValueAtIndex = 0;
  }
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = sub_1A4C82120;
  uint64_t v12[3] = &unk_1E5B7B220;
  id v9 = *(NSObject **)(a1 + 40);
  id v10 = *(id *)(a1 + 48);
  id v13 = ValueAtIndex;
  id v14 = v10;
  id v11 = ValueAtIndex;
  dispatch_async(v9, v12);
  if (v3) {
    CFRelease(v3);
  }
}

void *sub_1A4C820F0()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDChatRecordCopyChatsWithGroupID", @"IMDPersistence");
  off_1E965ED08 = result;
  return result;
}

uint64_t sub_1A4C82120(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t IMSPIQueryMessagesWithAttributes(int a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  return IMSPIQueryMessagesWithAttributesAndQOS(a1, a2, a3, QOS_CLASS_DEFAULT, a5, a4);
}

uint64_t IMSPIQueryMessagesWithAttributesAndQOS(int a1, uint64_t a2, uint64_t a3, dispatch_qos_class_t a4, void *a5, void *a6)
{
  id v11 = a5;
  id v12 = a6;
  id v16 = v12;
  if (!v11 || !v12)
  {
    if (IMOSLoggingEnabled())
    {
      id v20 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        id v21 = "Empty results block or queue supplied to IMSPIQueryUnreadMessagesWithIDs";
LABEL_11:
        _os_log_impl(&dword_1A4AF7000, v20, OS_LOG_TYPE_INFO, v21, buf, 2u);
      }
LABEL_12:
    }
LABEL_13:
    uint64_t v19 = 0;
    goto LABEL_14;
  }
  if (!a2)
  {
    if (IMOSLoggingEnabled())
    {
      id v20 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        id v21 = "0 limit supplied, no query issued to IMSPIQueryUnreadMessagesWithIDs";
        goto LABEL_11;
      }
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  id v17 = objc_msgSend_copy(v12, v13, v14, v15);

  uint64_t v18 = sub_1A4C70D74(a4);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C82314;
  block[3] = &unk_1E5B7F718;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  dispatch_qos_class_t v28 = a4;
  int v29 = a1;
  id v24 = v11;
  id v16 = v17;
  id v25 = v16;
  dispatch_async(v18, block);

  uint64_t v19 = 1;
LABEL_14:

  return v19;
}

void sub_1A4C82314(uint64_t a1)
{
  if (qword_1E965ED20 != -1) {
    dispatch_once(&qword_1E965ED20, &unk_1EF8E3588);
  }
  CFArrayRef v2 = (void *)off_1E965ED18(*(void *)(a1 + 48), *(void *)(a1 + 56));
  CFArrayRef v3 = sub_1A4C7D938(v2, *(_DWORD *)(a1 + 64));
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  v13[2] = sub_1A4C824A4;
  v13[3] = &unk_1E5B7F6F0;
  int v14 = *(_DWORD *)(a1 + 68);
  uint64_t v6 = objc_msgSend___imArrayByFilteringWithBlock_(v3, v4, (uint64_t)v13, v5);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C82600;
  block[3] = &unk_1E5B7B220;
  id v7 = *(NSObject **)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v11 = v6;
  id v12 = v8;
  id v9 = v6;
  dispatch_async(v7, block);
}

void *sub_1A4C82474()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessagesDataDetectionResults", @"IMDPersistence");
  off_1E965ED18 = result;
  return result;
}

uint64_t sub_1A4C824A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_attributedText(a2, (const char *)a2, a3, a4);
  id v9 = v5;
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    uint64_t v12 = *MEMORY[0x1E4F6C1D0];
    uint64_t v13 = objc_msgSend_length(v5, v6, v7, v8);
    uint64_t v11 = objc_msgSend_attribute_existsInRange_(v9, v14, v12, 0, v13);
    int v10 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v15 = (uint64_t *)MEMORY[0x1E4F6C100];
  if ((v10 & 4) != 0)
  {
    uint64_t v20 = *MEMORY[0x1E4F6C100];
    uint64_t v21 = objc_msgSend_length(v9, v6, v7, v8);
    uint64_t v11 = v11 | objc_msgSend_attribute_existsInRange_(v9, v22, v20, 0, v21);
    int v10 = *(_DWORD *)(a1 + 32);
    if ((v10 & 2) == 0)
    {
LABEL_6:
      if ((v10 & 8) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v26 = *MEMORY[0x1E4F6C148];
      uint64_t v27 = objc_msgSend_length(v9, v6, v7, v8);
      uint64_t v11 = v11 | objc_msgSend_attribute_existsInRange_(v9, v28, v26, 0, v27);
      if ((*(_DWORD *)(a1 + 32) & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v23 = *v15;
  uint64_t v24 = objc_msgSend_length(v9, v6, v7, v8);
  uint64_t v11 = v11 | objc_msgSend_attribute_existsInRange_(v9, v25, v23, 0, v24);
  int v10 = *(_DWORD *)(a1 + 32);
  if ((v10 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v10 & 0x10) != 0)
  {
LABEL_8:
    uint64_t v16 = *MEMORY[0x1E4F6C160];
    uint64_t v17 = objc_msgSend_length(v9, v6, v7, v8);
    uint64_t v11 = v11 | objc_msgSend_attribute_existsInRange_(v9, v18, v16, 0, v17);
  }
LABEL_9:

  return v11;
}

uint64_t sub_1A4C82600(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 40);
  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4)) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);

  return v7(v5, v6);
}

void IMSPIRemoveAttachmentGUIDFromSyndication(void *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v8 = 138412290;
      id v9 = v1;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Received request to hide syndication for attachment GUID %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v6 = objc_msgSend_synchronousDatabase(MEMORY[0x1E4F6BF40], v2, v3, v4);
  objc_msgSend_updateAttachmentSyndicationRanges_shouldHideFromSyndication_(v6, v7, (uint64_t)v1, 1);
}

void IMSPIUnhideSyndicationForAttachmentGUID(void *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v8 = 138412290;
      id v9 = v1;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Received request to unhide syndication for attachment GUID %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v6 = objc_msgSend_synchronousDatabase(MEMORY[0x1E4F6BF40], v2, v3, v4);
  objc_msgSend_updateAttachmentSyndicationRanges_shouldHideFromSyndication_(v6, v7, (uint64_t)v1, 0);
}

void IMSPIRemoveMessageGUIDFromSyndication(void *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v8 = 138412290;
      id v9 = v1;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Received request to hide syndication for message GUID: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v6 = objc_msgSend_database(MEMORY[0x1E4F6BF40], v2, v3, v4);
  objc_msgSend_updateMessageSyndicationRanges_shouldHideFromSyndication_(v6, v7, (uint64_t)v1, 1);
}

void IMSPIUnhideSyndicationForMessageGUID(void *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (IMOSLoggingEnabled())
  {
    uint64_t v5 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v8 = 138412290;
      id v9 = v1;
      _os_log_impl(&dword_1A4AF7000, v5, OS_LOG_TYPE_INFO, "Received request to hide syndication for message GUID: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v6 = objc_msgSend_database(MEMORY[0x1E4F6BF40], v2, v3, v4);
  objc_msgSend_updateMessageSyndicationRanges_shouldHideFromSyndication_(v6, v7, (uint64_t)v1, 0);
}

void IMSPIUpdatePluginMessageWithGUID(void *a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (IMOSLoggingEnabled())
  {
    int v8 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      id v26 = v3;
      _os_log_impl(&dword_1A4AF7000, v8, OS_LOG_TYPE_INFO, "Received request to update plugin payload data for message GUID: %@", buf, 0xCu);
    }
  }
  id v9 = objc_msgSend_sharedController(IMDaemonController, v5, v6, v7);
  uint64_t v11 = objc_msgSend_multiplexedConnectionWithLabel_capabilities_context_(v9, v10, @"IMCoreSPI_UpdatePluginMessageWithGUID", 8708, 0);

  objc_msgSend_waitForSetup(v11, v12, v13, v14);
  uint64_t v18 = objc_msgSend_synchronousRemoteProxy(v11, v15, v16, v17);
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  void v22[2] = sub_1A4C82C00;
  v22[3] = &unk_1E5B7F740;
  id v23 = v3;
  id v24 = v11;
  id v19 = v11;
  id v20 = v3;
  objc_msgSend_updatePluginMessageWithGUID_newPayloadData_completion_(v18, v21, (uint64_t)v20, (uint64_t)v4, v22);
}

uint64_t sub_1A4C82C00(uint64_t a1, int a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (IMOSLoggingEnabled())
  {
    uint64_t v7 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v8 = @"NO";
      uint64_t v9 = *(void *)(a1 + 32);
      if (a2) {
        int v8 = @"YES";
      }
      int v11 = 138412546;
      uint64_t v12 = v9;
      __int16 v13 = 2112;
      uint64_t v14 = v8;
      _os_log_impl(&dword_1A4AF7000, v7, OS_LOG_TYPE_INFO, "Finished updating plugin payload data for message with GUID %@. success: %@", (uint8_t *)&v11, 0x16u);
    }
  }
  return objc_msgSend_invalidate(*(void **)(a1 + 40), v4, v5, v6);
}

id IMSPILastAddressedHandleForChatWithGUID(void *a1)
{
  id v1 = a1;
  uint64_t v5 = objc_msgSend_sharedController(IMDaemonController, v2, v3, v4);
  uint64_t v7 = objc_msgSend_multiplexedConnectionWithLabel_capabilities_context_(v5, v6, @"IMCoreSPI_LastAddressedHandleForChatWithGUID", 516, 0);

  objc_msgSend_waitForSetup(v7, v8, v9, v10);
  if (v1)
  {
    uint64_t v14 = objc_msgSend_sharedRegistry(IMChatRegistry, v11, v12, v13);
    uint64_t v17 = objc_msgSend_existingChatWithGUID_(v14, v15, (uint64_t)v1, v16);

    if (v17)
    {
      uint64_t v18 = objc_msgSend_lastAddressedHandleID(v17, v11, v12, v13);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v18 = 0;
LABEL_6:
  objc_msgSend_invalidate(v7, v11, v12, v13);

  return v18;
}

void IMSPIResetChatRegistry()
{
  if (IMOSLoggingEnabled())
  {
    uint64_t v3 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v8 = 0;
      _os_log_impl(&dword_1A4AF7000, v3, OS_LOG_TYPE_INFO, "IMSPIResetChatRegistry", v8, 2u);
    }
  }
  uint64_t v4 = objc_msgSend_sharedRegistry(IMChatRegistry, v0, v1, v2);
  objc_msgSend__resetChatRegistry(v4, v5, v6, v7);
}

uint64_t IMCopyIDForPhoneNumber(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (objc_msgSend_length(v3, v5, v6, v7))
  {
    uint64_t v8 = IMInternationalForPhoneNumberWithOptions();
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

uint64_t IMCopyIDForEmailAddress(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_claimAutoreleasedReturnValue();
}

uint64_t IMSPIMessageSummary()
{
  return IMSharedMessageSummaryCreate();
}

BOOL sub_1A4C82F34(uint64_t a1, void *a2, void *a3, void *a4, BOOL *a5, BOOL *a6, void *a7)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v12 = a2;
  uint64_t v13 = (const void *)IMDAttachmentRecordCopyAttachmentForGUID();
  if (v13)
  {
    if (a7) {
      *a7 = 0;
    }
    if (a3)
    {
      CFStringRef v14 = (const __CFString *)IMDAttachmentRecordCopyFilename();
      if (CFStringGetLength(v14) < 1)
      {
        id v16 = 0;
      }
      else
      {
        objc_msgSend_fileURLWithPath_isDirectory_(MEMORY[0x1E4F1CB10], v15, (uint64_t)v14, 0);
        id v16 = (id)objc_claimAutoreleasedReturnValue();
      }
      *a3 = v16;
      if (v14) {
        CFRelease(v14);
      }
    }
    if (a4)
    {
      id v18 = (id) IMDAttachmentRecordCopyUTIType();
      *a4 = v18;
      if (v18) {
        CFRelease(v18);
      }
    }
    if (a5) {
      *a5 = IMDAttachmentRecordIsSticker() != 0;
    }
    if (a6) {
      *a6 = IMDAttachmentRecordGetIsOutgoing() != 0;
    }
    CFRelease(v13);
  }
  else if (IMOSLoggingEnabled())
  {
    uint64_t v17 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      int v20 = 138412290;
      id v21 = v12;
      _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Couldn't find attachment with guid %@", (uint8_t *)&v20, 0xCu);
    }
  }
  return v13 != 0;
}

uint64_t IMSPISimulateMessageReceive(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  id v10 = a1;
  sub_1A4BC0970((uint64_t)v10, v11, v12, v13);
  uint64_t v17 = objc_msgSend_sharedInstance(IMDaemonController, v14, v15, v16);
  objc_msgSend_simulateMessageReceive_serviceName_groupID_handles_sender_(v17, v18, (uint64_t)v10, (uint64_t)v8, 0, v9, v7);

  return 1;
}

void sub_1A4C831B0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v11 = objc_msgSend_length(a1, v8, v9, v10);
  uint64_t v12 = *MEMORY[0x1E4F6C188];
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 3221225472;
  v16[2] = sub_1A4C832A0;
  v16[3] = &unk_1E5B7F788;
  id v17 = v6;
  id v18 = v7;
  id v13 = v7;
  id v14 = v6;
  objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(a1, v15, v12, 0, v11, 0, v16);
}

void sub_1A4C832A0(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  id v7 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v8 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    if (objc_msgSend_isAdaptiveImageGlyph(v8, v9, v10, v11)) {
      BOOL v12 = a3 >= a3 + a4;
    }
    else {
      BOOL v12 = 1;
    }
    if (!v12)
    {
      do
      {
        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
        ++a3;
        --a4;
      }
      while (a4);
    }
  }
}

id sub_1A4C83384(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v12 = objc_msgSend_length(a1, v9, v10, v11);
  id v13 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v15 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  uint64_t v16 = *MEMORY[0x1E4F6C188];
  v68[0] = MEMORY[0x1E4F143A8];
  v68[1] = 3221225472;
  v68[2] = sub_1A4C8363C;
  v68[3] = &unk_1E5B7F7B0;
  id v65 = v7;
  id v72 = v65;
  id v62 = v15;
  id v69 = v62;
  id v17 = v8;
  id v18 = a1;
  id v64 = v17;
  id v73 = v17;
  id v19 = v13;
  id v70 = v19;
  id v20 = v14;
  id v71 = v20;
  objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(a1, v21, v16, 0, v12, 0, v68);
  long long v67 = objc_msgSend_mutableCopy(a1, v22, v23, v24);
  uint64_t v31 = objc_msgSend_count(v19, v25, v26, v27) - 1;
  if (v31 >= 0)
  {
    do
    {
      uint64_t v32 = objc_msgSend_objectAtIndexedSubscript_(v19, v28, v31, v30, v62, v64, v65);
      uint64_t v36 = objc_msgSend_integerValue(v32, v33, v34, v35);

      uint64_t v39 = objc_msgSend_objectAtIndexedSubscript_(v20, v37, v31, v38);
      objc_msgSend_attributesAtIndex_effectiveRange_(v18, v40, v36, 0);
      v42 = uint64_t v41 = v18;
      id v46 = v19;
      id v47 = objc_msgSend_mutableCopy(v42, v43, v44, v45);
      objc_msgSend_removeObjectForKey_(v47, v48, v16, v49);
      id v50 = objc_alloc(MEMORY[0x1E4F28B18]);
      uint64_t v52 = v16;
      uint64_t v53 = objc_msgSend_initWithString_attributes_(v50, v51, (uint64_t)v39, (uint64_t)v47);
      objc_msgSend_replaceCharactersInRange_withAttributedString_(v67, v54, v36, 1, v53);

      uint64_t v16 = v52;
      id v19 = v46;

      id v18 = v41;
      --v31;
    }
    while (v31 != -1);
  }
  id v55 = objc_msgSend_copy(v67, v28, v29, v30, v62);
  long long v59 = objc_msgSend_allObjects(v63, v56, v57, v58);
  long long v60 = v59;
  if (a5) {
    *a5 = v59;
  }

  return v55;
}

uint64_t sub_1A4C8363C(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  id v26 = a2;
  objc_opt_class();
  uint64_t isKindOfClass = objc_opt_isKindOfClass();
  id v8 = v26;
  if (isKindOfClass)
  {
    id v9 = v26;
    uint64_t v10 = (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    if (objc_msgSend_isAdaptiveImageGlyph(v10, v11, v12, v13))
    {
      objc_msgSend_addObject_(*(void **)(a1 + 32), v14, (uint64_t)v9, v15);
      id v18 = (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
      if (a3 < a3 + a4)
      {
        do
        {
          id v19 = *(void **)(a1 + 40);
          id v20 = objc_msgSend_numberWithInteger_(NSNumber, v16, a3, v17);
          objc_msgSend_addObject_(v19, v21, (uint64_t)v20, v22);

          objc_msgSend_addObject_(*(void **)(a1 + 48), v23, (uint64_t)v18, v24);
          ++a3;
          --a4;
        }
        while (a4);
      }
    }
    id v8 = v26;
  }

  return MEMORY[0x1F41817F8](isKindOfClass, v8);
}

void *sub_1A4C83778()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDHandleRecordBulkCopy", @"IMDPersistence");
  off_1E965E4F8 = result;
  return result;
}

void *sub_1A4C837A8()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("_IMDAttachmentRecordBulkCopy", @"IMDPersistence");
  off_1E965ED28 = result;
  return result;
}

void *sub_1A4C837D8()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDCreateIMItemFromIMDMessageRecordRefWithAccountLookup", @"IMDPersistence");
  off_1E965ED38 = result;
  return result;
}

void *sub_1A4C83808()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyChats", @"IMDPersistence");
  off_1E965ED48 = result;
  return result;
}

void *sub_1A4C83838()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("_IMDChatRecordBulkCopy", @"IMDPersistence");
  off_1E965ED58 = result;
  return result;
}

void *sub_1A4C83868()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyLastReadMessageForChatIdentifier", @"IMDPersistence");
  off_1E965ED68 = result;
  return result;
}

void *sub_1A4C83898()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordBulkCopy", @"IMDPersistence");
  off_1E965ED78 = result;
  return result;
}

void sub_1A4C838C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_allValuesSortedByGUIDKeyWithBackupOrder_(a2, (const char *)a2, *(void *)(a1 + 32), a4);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addAttachmentsFromFilePaths_(*(void **)(a1 + 40), v5, (uint64_t)v7, v6);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_1A4C8392C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_sharedInstance(IMBalloonPluginManager, a2, a3, a4);
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = objc_msgSend_dataSourceForPluginPayload_(v10, v5, *(void *)(a1 + 32), v6);
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_1A4C8399C(void **a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  if (objc_msgSend_count(a1[4], a2, a3, a4) || a1[5] || IMIsRunningInGameCenter())
  {
    uint64_t v5 = IMOSLoggingEnabled();
    if (v5)
    {
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Have non-zero attachments to send, ensuring we have transfer capability", buf, 2u);
      }
    }
    sub_1A4BC0A20(v5, v6, v7, v8);
  }
  else
  {
    uint64_t v29 = IMOSLoggingEnabled();
    if (v29)
    {
      uint64_t v33 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v33, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
      }
    }
    sub_1A4BC09C8(v29, v30, v31, v32);
  }
  uint64_t v13 = sub_1A4C765FC(a1[6], a1[7], a1[8], a1[9], 1);
  if (v13)
  {
    if (objc_msgSend_length(a1[6], v10, v11, v12))
    {
      uint64_t v17 = objc_msgSend_serviceWithInternalName_(IMServiceImpl, v14, (uint64_t)a1[6], v16);
      objc_msgSend__targetToService_newComposition_(v13, v18, (uint64_t)v17, 1);
    }
    else
    {
      objc_msgSend_refreshServiceForSending(v13, v14, v15, v16);
    }
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = sub_1A4C83DD4;
    aBlock[3] = &unk_1E5B7F800;
    id v39 = a1[4];
    id v25 = v13;
    id v40 = v25;
    id v41 = a1[10];
    id v42 = a1[11];
    id v43 = a1[12];
    id v44 = a1[13];
    id v45 = a1[14];
    id v46 = a1[5];
    id v47 = a1[15];
    id v48 = a1[16];
    id v26 = _Block_copy(aBlock);
    dispatch_time_t v27 = dispatch_time(0, 100000000);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C84674;
    block[3] = &unk_1E5B7B180;
    id v35 = v25;
    id v36 = a1[6];
    id v37 = v26;
    id v28 = v26;
    dispatch_after(v27, MEMORY[0x1E4F14428], block);
  }
  else
  {
    uint64_t v19 = IMOSLoggingEnabled();
    if (v19)
    {
      uint64_t v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        uint64_t v24 = a1[7];
        *(_DWORD *)long long buf = 138412290;
        id v50 = v24;
        _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Cannot get chat for destinations: %@", buf, 0xCu);
      }
    }
    sub_1A4BC0A78(v19, v20, v21, v22);
  }
}

void sub_1A4C83DD4(void **a1)
{
  sub_1A4C7A31C(a1[4]);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  BOOL v2 = sub_1A4C83E44(a1[5], a1[6], a1[7], a1[8], a1[9], v6, a1[10], a1[11], a1[12], a1[13]);
  sub_1A4BC0A78(v2, v3, v4, v5);
}

BOOL sub_1A4C83E44(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10)
{
  uint64_t v163 = *MEMORY[0x1E4F143B8];
  id v17 = a1;
  id v148 = a2;
  id v146 = a3;
  id v140 = a4;
  id v147 = a5;
  id v143 = a6;
  id v141 = a7;
  id v142 = a8;
  id v144 = a9;
  long long v145 = a10;
  int v18 = IMOSLoggingEnabled();
  uint64_t v149 = v17;
  if (v17)
  {
    if (v18)
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        if (v144) {
          objc_msgSend_timeIntervalSinceNow(v144, v20, v21, v22);
        }
        else {
          uint64_t v23 = 0;
        }
        *(_DWORD *)long long buf = 138412802;
        id v158 = v17;
        __int16 v159 = 2048;
        uint64_t v160 = v23;
        __int16 v161 = 2112;
        id v162 = v147;
        _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "About to send message for chat: %@ time delay: %lf associatedMessageGUID: %@", buf, 0x20u);
      }
    }
    if (IMOSLoggingEnabled())
    {
      id v25 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        uint64_t v29 = objc_msgSend_participants(v17, v26, v27, v28);
        *(_DWORD *)long long buf = 138412290;
        id v158 = v29;
        _os_log_impl(&dword_1A4AF7000, v25, OS_LOG_TYPE_INFO, "About to send message to: %@", buf, 0xCu);
      }
    }
    id v151 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v154 = 0u;
    long long v155 = 0u;
    long long v152 = 0u;
    long long v153 = 0u;
    id obj = v143;
    uint64_t v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v30, (uint64_t)&v152, (uint64_t)v156, 16);
    if (v34)
    {
      uint64_t v35 = *(void *)v153;
      do
      {
        for (uint64_t i = 0; i != v34; ++i)
        {
          if (*(void *)v153 != v35) {
            objc_enumerationMutation(obj);
          }
          id v37 = *(void **)(*((void *)&v152 + 1) + 8 * i);
          uint64_t v38 = objc_msgSend_fileURL(v37, v31, v32, v33);
          id v41 = objc_msgSend_fileURLWithPath_(MEMORY[0x1E4F1CB10], v39, (uint64_t)v38, v40);
          id v45 = objc_msgSend_sharedInstance(IMFileTransferCenter, v42, v43, v44);
          objc_msgSend_setIssueSandboxEstensionsForTransfers_(v45, v46, 1, v47);

          uint64_t v51 = objc_msgSend_sharedInstance(IMFileTransferCenter, v48, v49, v50);
          uint64_t v54 = objc_msgSend_createNewOutgoingTransferWithLocalFileURL_(v51, v52, (uint64_t)v41, v53);

          uint64_t v58 = objc_msgSend_sharedInstance(IMFileTransferCenter, v55, v56, v57);
          objc_msgSend_setIssueSandboxEstensionsForTransfers_(v58, v59, 0, v60);

          id v64 = objc_msgSend_sharedInstance(IMFileTransferCenter, v61, v62, v63);
          long long v67 = objc_msgSend_transferForGUID_(v64, v65, (uint64_t)v54, v66);

          if (objc_msgSend_isSensitive(v37, v68, v69, v70)) {
            objc_msgSend_setCommSafetySensitive_(v67, v71, 2, v72);
          }
          objc_msgSend_addObject_(v151, v71, (uint64_t)v54, v72);
          uint64_t v76 = objc_msgSend_sharedInstance(IMFileTransferCenter, v73, v74, v75);
          objc_msgSend_registerTransferWithDaemon_(v76, v77, (uint64_t)v54, v78);
        }
        uint64_t v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v31, (uint64_t)&v152, (uint64_t)v156, 16);
      }
      while (v34);
    }

    id v79 = objc_alloc(MEMORY[0x1E4F28B18]);
    if (objc_msgSend_length(v148, v80, v81, v82)) {
      id v85 = objc_msgSend_initWithString_(v79, v83, (uint64_t)v148, v84);
    }
    else {
      id v85 = objc_msgSend_initWithString_(v79, v83, (uint64_t)&stru_1EF8E78C8, v84);
    }
    uint64_t v88 = v85;
    long long v89 = objc_msgSend___im_attributedStringByAppendingFileTransfers_(v85, v86, (uint64_t)v151, v87);
    uint64_t v93 = objc_msgSend___im_attributedStringByAssigningMessagePartNumbers(v89, v90, v91, v92);
    uint64_t v97 = v93;
    if (v146)
    {
      uint64_t v98 = objc_msgSend_mutableCopy(v93, v94, v95, v96);
      objc_msgSend_appendAttributedString_(v98, v99, (uint64_t)v146, v100);
      uint64_t v104 = objc_msgSend_copy(v98, v101, v102, v103);

      uint64_t v97 = (void *)v104;
    }
    BOOL v105 = objc_msgSend_length(v147, v94, v95, v96) == 0;
    uint64_t v106 = [IMMessage alloc];
    uint64_t v109 = v106;
    if (v105)
    {
      if (!v144)
      {
        uint64_t v117 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v107, v108, 0);
        timeDelivered_timePlayed_plainText_text_messageSubject_fileTransferGUIDs_flags_error_guid_messageID_subject_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_dateEdited_scheduleType_scheduleState = objc_msgSend_initWithSender_time_text_messageSubject_fileTransferGUIDs_flags_error_guid_subject_balloonBundleID_payloadData_expressiveSendStyleID_threadIdentifier_scheduleType_scheduleState_(v109, v118, 0, (uint64_t)v117, v97, 0, v151, 5, 0, v140, 0, v141, v142, 0, 0, 0, 0);

        goto LABEL_39;
      }
      uint64_t v110 = objc_msgSend_initWithSender_time_text_messageSubject_fileTransferGUIDs_flags_error_guid_subject_balloonBundleID_payloadData_expressiveSendStyleID_threadIdentifier_scheduleType_scheduleState_(v106, v107, 0, (uint64_t)v144, v97, 0, v151, 5, 0, v140, 0, v141, v142, 0, 0, 1, 2);
    }
    else
    {
      if (!v144)
      {
        uint64_t v115 = objc_msgSend_date(MEMORY[0x1E4F1C9C8], v107, v108, 0);
        timeDelivered_timePlayed_plainText_text_messageSubject_fileTransferGUIDs_flags_error_guid_messageID_subject_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_dateEdited_scheduleType_scheduleState = objc_msgSend__initWithSender_time_timeRead_timeDelivered_timePlayed_plainText_text_messageSubject_fileTransferGUIDs_flags_error_guid_messageID_subject_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_dateEdited_scheduleType_scheduleState_(v109, v116, 0, (uint64_t)v115, 0, 0, 0, 0, v97, 0, v151, 5, 0, v140, 0, 0, v141, v142, 0, 0, v147, 2, 0, 0x7FFFFFFFFFFFFFFFLL, 0, 0, 0, 0, 0, 0);

        goto LABEL_39;
      }
      uint64_t v110 = objc_msgSend__initWithSender_time_timeRead_timeDelivered_timePlayed_plainText_text_messageSubject_fileTransferGUIDs_flags_error_guid_messageID_subject_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_dateEdited_scheduleType_scheduleState_(v106, v107, 0, (uint64_t)v144, 0, 0, 0, 0, v97, 0, v151, 5, 0, v140, 0, 0, v141, v142, 0,
               0,
               v147,
               2,
               0,
               0x7FFFFFFFFFFFFFFFLL,
               0,
               0,
               0,
               0,
               1,
               2);
    }
    timeDelivered_timePlayed_plainText_text_messageSubject_fileTransferGUIDs_flags_error_guid_messageID_subject_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_dateEdited_scheduleType_scheduleState = (void *)v110;
LABEL_39:
    long long v119 = objc_msgSend_sharedInstance(IMFileTransferCenter, v111, v112, v113);
    objc_msgSend_setIssueSandboxEstensionsForTransfers_(v119, v120, 1, v121);

    objc_msgSend_sendMessage_(v149, v122, (uint64_t)timeDelivered_timePlayed_plainText_text_messageSubject_fileTransferGUIDs_flags_error_guid_messageID_subject_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_dateEdited_scheduleType_scheduleState, v123);
    id v127 = objc_msgSend_sharedInstance(IMFileTransferCenter, v124, v125, v126);
    objc_msgSend_setIssueSandboxEstensionsForTransfers_(v127, v128, 0, v129);

    if (IMOSLoggingEnabled())
    {
      uint64_t v133 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v133, OS_LOG_TYPE_INFO))
      {
        id v137 = objc_msgSend_guid(timeDelivered_timePlayed_plainText_text_messageSubject_fileTransferGUIDs_flags_error_guid_messageID_subject_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_dateEdited_scheduleType_scheduleState, v134, v135, v136);
        *(_DWORD *)long long buf = 138412546;
        id v158 = v137;
        __int16 v159 = 2112;
        uint64_t v160 = v149;
        _os_log_impl(&dword_1A4AF7000, v133, OS_LOG_TYPE_INFO, "Sent message with guid: %@ to chat: %@", buf, 0x16u);
      }
    }
    if (v145)
    {
      __int16 v138 = objc_msgSend_guid(timeDelivered_timePlayed_plainText_text_messageSubject_fileTransferGUIDs_flags_error_guid_messageID_subject_balloonBundleID_payloadData_expressiveSendStyleID_timeExpressiveSendPlayed_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_dateEdited_scheduleType_scheduleState, v130, v131, v132);
      v145[2](v145, v138);
    }
    goto LABEL_46;
  }
  if (v18)
  {
    uint64_t v24 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v24, OS_LOG_TYPE_INFO, "Cannot send message without chat", buf, 2u);
    }
  }
LABEL_46:

  return v149 != 0;
}

void sub_1A4C84614(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1A4C83FE4);
  }
  _Unwind_Resume(a1);
}

void sub_1A4C84674(void **a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_account(a1[4], a2, a3, a4);
  id v9 = objc_msgSend_service(v5, v6, v7, v8);

  uint64_t v13 = objc_msgSend_iMessageService(IMServiceImpl, v10, v11, v12);
  if (v9 == (void *)v13)
  {
  }
  else
  {
    id v17 = (void *)v13;
    uint64_t v18 = objc_msgSend_length(a1[5], v14, v15, v16);

    if (!v18)
    {
      if (IMOSLoggingEnabled())
      {
        uint64_t v19 = OSLogHandleForIMFoundationCategory();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "Waiting for registration check before sending", v22, 2u);
        }
      }
      dispatch_time_t v20 = dispatch_time(0, 4000000000);
      dispatch_after(v20, MEMORY[0x1E4F14428], a1[6]);
      goto LABEL_14;
    }
  }
  if (IMOSLoggingEnabled())
  {
    uint64_t v21 = OSLogHandleForIMFoundationCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_INFO, "Cache hit, send now", buf, 2u);
    }
  }
  (*((void (**)(void))a1[6] + 2))();
LABEL_14:
}

void sub_1A4C84804(void **a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  if (objc_msgSend_count(a1[4], a2, a3, a4) || a1[5] || IMIsRunningInGameCenter())
  {
    uint64_t v5 = IMOSLoggingEnabled();
    if (v5)
    {
      id v9 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v9, OS_LOG_TYPE_INFO, "Have non-zero attachments to receive, ensuring we have transfer capability", buf, 2u);
      }
    }
    sub_1A4BC0A20(v5, v6, v7, v8);
  }
  else
  {
    uint64_t v26 = IMOSLoggingEnabled();
    if (v26)
    {
      uint64_t v30 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v30, OS_LOG_TYPE_INFO, "Setting the chat cap only", buf, 2u);
      }
    }
    sub_1A4BC09C8(v26, v27, v28, v29);
  }
  id v10 = sub_1A4C765FC(a1[6], a1[7], a1[8], a1[9], 1);
  id v14 = v10;
  if (v10)
  {
    objc_msgSend_refreshServiceForSending(v10, v11, v12, v13);
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = sub_1A4C84BE8;
    aBlock[3] = &unk_1E5B7F850;
    id v35 = a1[4];
    id v15 = v14;
    id v36 = v15;
    id v37 = a1[10];
    id v38 = a1[11];
    id v39 = a1[12];
    id v40 = a1[13];
    id v41 = a1[14];
    id v42 = a1[5];
    id v43 = a1[15];
    uint64_t v16 = _Block_copy(aBlock);
    dispatch_time_t v17 = dispatch_time(0, 100000000);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = sub_1A4C8529C;
    block[3] = &unk_1E5B7F310;
    id v32 = v15;
    id v33 = v16;
    id v18 = v16;
    dispatch_after(v17, MEMORY[0x1E4F14428], block);
  }
  else
  {
    uint64_t v19 = IMOSLoggingEnabled();
    if (v19)
    {
      uint64_t v23 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        uint64_t v24 = a1[7];
        *(_DWORD *)long long buf = 138412290;
        id v45 = v24;
        _os_log_impl(&dword_1A4AF7000, v23, OS_LOG_TYPE_INFO, "Cannot get chat for destinations: %@", buf, 0xCu);
      }
    }
    sub_1A4BC0A78(v19, v20, v21, v22);
    id v25 = (void (**)(void *, void))a1[15];
    if (v25) {
      v25[2](v25, 0);
    }
  }
}

void sub_1A4C84BE8(uint64_t a1)
{
  uint64_t v157 = *MEMORY[0x1E4F143B8];
  BOOL v2 = sub_1A4C7A31C(*(void **)(a1 + 32));
  id v3 = *(void **)(a1 + 40);
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a1 + 56);
  id v6 = *(void **)(a1 + 64);
  uint64_t v7 = *(void **)(a1 + 72);
  uint64_t v8 = *(void **)(a1 + 80);
  id v10 = *(void **)(a1 + 88);
  id v9 = *(void **)(a1 + 96);
  id v11 = v3;
  id v140 = v4;
  id v141 = v5;
  id v136 = v6;
  id v137 = v7;
  id v144 = v2;
  id v138 = v8;
  id v139 = v10;
  id v142 = v11;
  id v143 = v9;
  if (v11)
  {
    id v15 = objc_msgSend_account(v11, v12, v13, v14);
    uint64_t v135 = objc_msgSend_imHandleWithID_(v15, v16, (uint64_t)v140, v17);

    if (IMOSLoggingEnabled())
    {
      id v18 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v156 = v11;
        _os_log_impl(&dword_1A4AF7000, v18, OS_LOG_TYPE_INFO, "About to insert a received message for chat: %@", buf, 0xCu);
      }
    }
    if (IMOSLoggingEnabled())
    {
      uint64_t v19 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        id v156 = v135;
        _os_log_impl(&dword_1A4AF7000, v19, OS_LOG_TYPE_INFO, "About to insert a received message from handle: %@", buf, 0xCu);
      }
    }
    id v146 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v149 = 0u;
    long long v150 = 0u;
    long long v147 = 0u;
    long long v148 = 0u;
    id obj = v144;
    uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v20, (uint64_t)&v147, (uint64_t)buf, 16);
    if (v24)
    {
      uint64_t v25 = *(void *)v148;
      do
      {
        for (uint64_t i = 0; i != v24; ++i)
        {
          if (*(void *)v148 != v25) {
            objc_enumerationMutation(obj);
          }
          uint64_t v27 = *(void **)(*((void *)&v147 + 1) + 8 * i);
          uint64_t v28 = objc_msgSend_fileURL(v27, v21, v22, v23);
          uint64_t v31 = objc_msgSend_fileURLWithPath_(MEMORY[0x1E4F1CB10], v29, (uint64_t)v28, v30);
          id v35 = objc_msgSend_sharedInstance(IMFileTransferCenter, v32, v33, v34);
          objc_msgSend_setIssueSandboxEstensionsForTransfers_(v35, v36, 1, v37);

          id v41 = objc_msgSend_sharedInstance(IMFileTransferCenter, v38, v39, v40);
          uint64_t v44 = objc_msgSend_createNewOutgoingTransferWithLocalFileURL_(v41, v42, (uint64_t)v31, v43);

          id v48 = objc_msgSend_sharedInstance(IMFileTransferCenter, v45, v46, v47);
          objc_msgSend_setIssueSandboxEstensionsForTransfers_(v48, v49, 0, v50);

          uint64_t v54 = objc_msgSend_sharedInstance(IMFileTransferCenter, v51, v52, v53);
          uint64_t v57 = objc_msgSend_transferForGUID_(v54, v55, (uint64_t)v44, v56);

          if (objc_msgSend_isSensitive(v27, v58, v59, v60)) {
            objc_msgSend_setCommSafetySensitive_(v57, v61, 2, v62);
          }
          objc_msgSend_addObject_(v146, v61, (uint64_t)v44, v62);
          uint64_t v66 = objc_msgSend_sharedInstance(IMFileTransferCenter, v63, v64, v65);
          objc_msgSend_registerTransferWithDaemon_(v66, v67, (uint64_t)v44, v68);
        }
        uint64_t v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v21, (uint64_t)&v147, (uint64_t)buf, 16);
      }
      while (v24);
    }

    id v69 = objc_alloc(MEMORY[0x1E4F28B18]);
    if (objc_msgSend_length(v141, v70, v71, v72)) {
      uint64_t v75 = objc_msgSend_initWithString_(v69, v73, (uint64_t)v141, v74);
    }
    else {
      uint64_t v75 = objc_msgSend_initWithString_(v69, v73, (uint64_t)&stru_1EF8E78C8, v74);
    }
    uint64_t v78 = v75;
    id v79 = objc_msgSend___im_attributedStringByAppendingFileTransfers_(v75, v76, (uint64_t)v146, v77);
    __int16 v86 = objc_msgSend___im_attributedStringByAssigningMessagePartNumbers(v79, v80, v81, v82);
    if (v137)
    {
      id v87 = v137;
    }
    else
    {
      objc_msgSend_date(MEMORY[0x1E4F1C9C8], v83, v84, v85);
      id v87 = (id)objc_claimAutoreleasedReturnValue();
    }
    long long v89 = v87;
    id v90 = [IMMessage alloc];
    uint64_t v92 = objc_msgSend_initWithSender_time_text_messageSubject_fileTransferGUIDs_flags_error_guid_subject_balloonBundleID_payloadData_expressiveSendStyleID_threadIdentifier_(v90, v91, (uint64_t)v135, (uint64_t)v89, v86, 0, v146, 1, 0, v136, 0, v138, v139, 0, 0);
    uint64_t v96 = objc_msgSend_sharedInstance(IMFileTransferCenter, v93, v94, v95);
    objc_msgSend_setIssueSandboxEstensionsForTransfers_(v96, v97, 1, v98);

    uint64_t v102 = objc_msgSend_sharedInstance(IMDaemonController, v99, v100, v101);
    uint64_t v106 = objc_msgSend__imMessageItem(v92, v103, v104, v105);
    uint64_t v110 = objc_msgSend_chatIdentifier(v142, v107, v108, v109);
    uint64_t v114 = objc_msgSend_chatStyle(v142, v111, v112, v113);
    objc_msgSend_insertReceivedMessage_forChat_style_serviceName_(v102, v115, (uint64_t)v106, (uint64_t)v110, v114, @"iMessage");

    long long v119 = objc_msgSend_sharedInstance(IMFileTransferCenter, v116, v117, v118);
    objc_msgSend_setIssueSandboxEstensionsForTransfers_(v119, v120, 0, v121);

    if (IMOSLoggingEnabled())
    {
      uint64_t v125 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v125, OS_LOG_TYPE_INFO))
      {
        uint64_t v129 = objc_msgSend_guid(v92, v126, v127, v128);
        *(_DWORD *)id v151 = 138412546;
        long long v152 = v129;
        __int16 v153 = 2112;
        long long v154 = v142;
        _os_log_impl(&dword_1A4AF7000, v125, OS_LOG_TYPE_INFO, "Inserted received message with guid: %@ to chat: %@", v151, 0x16u);
      }
    }
    if (v143)
    {
      long long v130 = objc_msgSend_guid(v92, v122, v123, v124);
      v143[2](v143, v130);
    }
  }
  else
  {
    if (IMOSLoggingEnabled())
    {
      uint64_t v88 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v88, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v88, OS_LOG_TYPE_INFO, "Cannot receive message without chat", buf, 2u);
      }
    }
    if (v143) {
      v143[2](v143, 0);
    }
  }

  sub_1A4BC0A78(v131, v132, v133, v134);
}

void sub_1A4C8529C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_account(*(void **)(a1 + 32), a2, a3, a4);
  id v9 = objc_msgSend_service(v5, v6, v7, v8);

  uint64_t v13 = objc_msgSend_iMessageService(IMServiceImpl, v10, v11, v12);

  int v14 = IMOSLoggingEnabled();
  if (v9 == v13)
  {
    if (v14)
    {
      uint64_t v17 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_1A4AF7000, v17, OS_LOG_TYPE_INFO, "Cache hit, send now", buf, 2u);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    if (v14)
    {
      id v15 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v18 = 0;
        _os_log_impl(&dword_1A4AF7000, v15, OS_LOG_TYPE_INFO, "Waiting for registration check before sending", v18, 2u);
      }
    }
    dispatch_time_t v16 = dispatch_time(0, 4000000000);
    dispatch_after(v16, MEMORY[0x1E4F14428], *(dispatch_block_t *)(a1 + 40));
  }
}

void sub_1A4C85414(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [IMSPIOutgoingAttachmentObject alloc];
  id isSensitive = (id)objc_msgSend_initWithFileURL_isSensitive_(v4, v5, (uint64_t)v3, 0);

  objc_msgSend_addObject_(v2, v6, (uint64_t)isSensitive, v7);
}

uint64_t sub_1A4C85490(uint64_t a1)
{
  uint64_t v2 = _IMSPIMessageFromRecord(*(void *)(a1 + 32), 0, 0, *(void **)(a1 + 40), *(dispatch_qos_class_t *)(a1 + 56));
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return MEMORY[0x1F41817F8](v2, v4);
}

void *sub_1A4C854EC()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("IMDMessageRecordCopyMessageForGUID", @"IMDPersistence");
  off_1E965ED88 = result;
  return result;
}

void sub_1A4C8551C(uint64_t a1)
{
  uint64_t v2 = _IMSPIMessageFromRecord(*(void *)(a1 + 56), 1, *(unsigned __int8 *)(a1 + 68), *(void **)(a1 + 32), *(dispatch_qos_class_t *)(a1 + 64));
  uint64_t v3 = *(NSObject **)(a1 + 40);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_1A4C855F4;
  void v6[3] = &unk_1E5B7F310;
  id v4 = v2;
  id v7 = v4;
  id v8 = *(id *)(a1 + 48);
  dispatch_async(v3, v6);
  uint64_t v5 = *(const void **)(a1 + 56);
  if (v5) {
    CFRelease(v5);
  }
}

void sub_1A4C855F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    objc_msgSend_arrayWithObject_(MEMORY[0x1E4F1C978], a2, v5, a4);
  }
  else {
    objc_msgSend_array(MEMORY[0x1E4F1C978], a2, 0, a4);
  }
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_1A4C8566C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_isRead(a2, (const char *)a2, a3, a4) ^ 1;
}

BOOL IMMomentShareCacheErrorIsPermanent(void *a1)
{
  id v1 = a1;
  uint64_t v5 = v1;
  if (v1)
  {
    id v6 = objc_msgSend_domain(v1, v2, v3, v4);
    if (objc_msgSend_isEqualToString_(v6, v7, @"IMMomentShareCacheErrorDomain", v8)) {
      BOOL v12 = objc_msgSend_code(v5, v9, v10, v11) == -1001;
    }
    else {
      BOOL v12 = 0;
    }
  }
  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

void sub_1A4C85800(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  id v5 = sub_1A4C858AC(a1, a2, a3, a4);
  id v9 = objc_msgSend_sharedMomentSharePhotoLibrary(v5, v6, v7, v8);
  objc_msgSend_registerChangeObserver_(v9, v10, *(void *)(a1 + 32), v11);

  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C85990;
  block[3] = &unk_1E5B7ACD0;
  id v13 = *(id *)(a1 + 32);
  dispatch_async(MEMORY[0x1E4F14428], block);
}

id sub_1A4C858AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  id v9 = &v8;
  uint64_t v10 = 0x2050000000;
  uint64_t v4 = (void *)qword_1E965E598;
  uint64_t v11 = qword_1E965E598;
  if (!qword_1E965E598)
  {
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = sub_1A4C86F10;
    v7[3] = &unk_1E5B7C7B8;
    void v7[4] = &v8;
    sub_1A4C86F10((uint64_t)v7, a2, a3, a4);
    uint64_t v4 = (void *)v9[3];
  }
  id v5 = v4;
  _Block_object_dispose(&v8, 8);

  return v5;
}

void sub_1A4C85978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1A4C85990(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 32) = 1;
  return result;
}

void sub_1A4C859F4()
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if ((IMIsRunningInImagent() & 1) != 0
    || (IMIsRunningInIMDPersistenceAgent() & 1) != 0
    || IMIsRunningInMessagesUIProcess())
  {
    uint64_t v3 = objc_alloc_init(IMMomentShareCache);
    uint64_t v4 = qword_1EB3F2490;
    qword_1EB3F2490 = (uint64_t)v3;
    MEMORY[0x1F41817F8](v3, v4);
  }
  else
  {
    id v5 = objc_msgSend_mainBundle(MEMORY[0x1E4F28B50], v0, v1, v2);
    id v9 = objc_msgSend_bundleIdentifier(v5, v6, v7, v8);

    if (IMOSLoggingEnabled())
    {
      uint64_t v10 = OSLogHandleForIMFoundationCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        int v11 = 138412290;
        BOOL v12 = v9;
        _os_log_impl(&dword_1A4AF7000, v10, OS_LOG_TYPE_INFO, "Not allowing IMMomentShareCache to be created because we're running in %@.", (uint8_t *)&v11, 0xCu);
      }
    }
  }
}

id sub_1A4C85DE4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  id v9 = &v8;
  uint64_t v10 = 0x2050000000;
  uint64_t v4 = (void *)qword_1E965ED98;
  uint64_t v11 = qword_1E965ED98;
  if (!qword_1E965ED98)
  {
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = sub_1A4C870D0;
    v7[3] = &unk_1E5B7C7B8;
    void v7[4] = &v8;
    sub_1A4C870D0((uint64_t)v7, a2, a3, a4);
    uint64_t v4 = (void *)v9[3];
  }
  id v5 = v4;
  _Block_object_dispose(&v8, 8);

  return v5;
}

void sub_1A4C85EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C85EC8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = sub_1A4C85FB8;
  block[3] = &unk_1E5B7D730;
  uint64_t v7 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v11 = v7;
  id v12 = v5;
  id v13 = v6;
  id v14 = *(id *)(a1 + 48);
  id v8 = v6;
  id v9 = v5;
  dispatch_async(MEMORY[0x1E4F14428], block);
}

uint64_t sub_1A4C85FB8(void *a1, const char *a2)
{
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1[4] + 8), a2, 0, a1[5]);
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v8 = a1[8];

  return objc_msgSend__processFetchedMomentShare_forURLString_error_completionHandlers_(v4, v3, v6, v5, v7, v8);
}

id sub_1A4C86120(uint64_t a1, void *a2)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v5 = v3;
  if (v3)
  {
    uint64_t v10 = *MEMORY[0x1E4F28A50];
    v11[0] = v3;
    uint64_t v6 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v4, (uint64_t)v11, (uint64_t)&v10, 1);
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x1E4F28C58], v7, @"IMMomentShareCacheErrorDomain", a1, v6);
  }
  else
  {
    uint64_t v6 = 0;
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x1E4F28C58], v4, @"IMMomentShareCacheErrorDomain", a1, 0);
  uint64_t v8 = };

  return v8;
}

void sub_1A4C86644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1A4C86698(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1A4C869D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1A4C869EC(void *a1)
{
  id v1 = a1;
  id v5 = objc_alloc((Class)sub_1A4C872E4((uint64_t)v1, v2, v3, v4));
  second = objc_msgSend_initWithFirst_second_(v5, v6, (uint64_t)v1, 0);

  return second;
}

id sub_1A4C86A40(void *a1)
{
  id v1 = a1;
  id v5 = objc_alloc((Class)sub_1A4C872E4((uint64_t)v1, v2, v3, v4));
  second = objc_msgSend_initWithFirst_second_(v5, v6, 0, (uint64_t)v1);

  return second;
}

uint64_t sub_1A4C86A94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void))(a2 + 16))(a2, *(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_1A4C86B44(uint64_t a1)
{
  v31[1] = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v6 = objc_msgSend_allKeys(*(void **)(*(void *)(a1 + 32) + 16), v3, v4, v5);
  uint64_t v23 = MEMORY[0x1E4F143A8];
  uint64_t v24 = 3221225472;
  uint64_t v25 = sub_1A4C86CEC;
  uint64_t v26 = &unk_1E5B7F9A0;
  uint64_t v7 = *(void **)(a1 + 40);
  uint64_t v27 = *(void *)(a1 + 32);
  id v28 = v7;
  id v8 = v2;
  id v29 = v8;
  objc_msgSend_enumerateObjectsUsingBlock_(v6, v9, (uint64_t)&v23, v10);

  if (objc_msgSend_count(v8, v11, v12, v13, v23, v24, v25, v26, v27))
  {
    uint64_t v14 = IMLogHandleForCategory();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
      sub_1A4CBA94C(v14);
    }

    id v18 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v15, v16, v17);
    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v30 = @"IMMomentShareCacheNotificationURLStringsUserInfoKey";
    v31[0] = v8;
    uint64_t v21 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v20, (uint64_t)v31, (uint64_t)&v30, 1);
    objc_msgSend_postNotificationName_object_userInfo_(v18, v22, @"IMMomentShareCacheDidChangeNotification", v19, v21);
  }
}

void sub_1A4C86CEC(uint64_t a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = a2;
  id v6 = objc_msgSend_objectForKeyedSubscript_(*(void **)(*(void *)(a1 + 32) + 16), v4, (uint64_t)v3, v5);
  uint64_t v12 = objc_msgSend_first(v6, v7, v8, v9);
  if (v12)
  {
    uint64_t v15 = objc_msgSend_changeDetailsForObject_(*(void **)(a1 + 40), v10, (uint64_t)v12, v11);
    if (v15)
    {
      objc_msgSend_addObject_(*(void **)(a1 + 48), v13, (uint64_t)v3, v14);
      int v19 = objc_msgSend_objectWasDeleted(v15, v16, v17, v18);
      dispatch_time_t v20 = IMLogHandleForCategory();
      uint64_t v21 = v20;
      if (v19)
      {
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v25 = objc_msgSend_uuid(v12, v22, v23, v24);
          int v34 = 138543618;
          id v35 = v25;
          __int16 v36 = 2112;
          uint64_t v37 = v3;
          _os_log_impl(&dword_1A4AF7000, v21, OS_LOG_TYPE_DEFAULT, "Moment share was deleted: %{public}@, URL: %@", (uint8_t *)&v34, 0x16u);
        }
        uint64_t v26 = sub_1A4C86120(-1001, 0);
        uint64_t v27 = sub_1A4C86A40(v26);
      }
      else
      {
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG)) {
          sub_1A4CBA990(v12, v3, (uint64_t)v21, v29);
        }

        uint64_t v26 = objc_msgSend_objectAfterChanges(v15, v30, v31, v32);
        uint64_t v27 = sub_1A4C869EC(v26);
      }
      uint64_t v33 = (void *)v27;
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(*(void *)(a1 + 32) + 16), v28, v27, (uint64_t)v3);
    }
  }
}

Class sub_1A4C86F10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  sub_1A4C86F68(a1, a2, a3, a4);
  Class result = objc_getClass("PHPhotoLibrary");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1A4CBAA24((uint64_t)result, v6, v7, v8);
  }
  qword_1E965E598 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A4C86F68(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!qword_1E965E5A8)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    v4[2] = (void *)3221225472;
    v4[3] = sub_1A4C8705C;
    void v4[4] = &unk_1E5B7B2A8;
    void v4[5] = v4;
    long long v5 = xmmword_1E5B7F9C0;
    uint64_t v6 = 0;
    qword_1E965E5A8 = _sl_dlopen();
  }
  if (!qword_1E965E5A8) {
    sub_1A4CBAAA0(v4, a2, a3, a4);
  }
  if (v4[0]) {
    free(v4[0]);
  }
}

uint64_t sub_1A4C8705C()
{
  uint64_t result = _sl_dlopen();
  qword_1E965E5A8 = result;
  return result;
}

Class sub_1A4C870D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  sub_1A4C86F68(a1, a2, a3, a4);
  Class result = objc_getClass("PHMomentShare");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1A4CBAB20((uint64_t)result, v6, v7, v8);
  }
  qword_1E965ED98 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_1A4C87128(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  long long v5 = (void *)sub_1A4C87178(a1, a2, a3, a4);
  Class result = dlsym(v5, "PXIsMomentShareErrorPermanent");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_1E965EDA0 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1A4C87178(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!qword_1E965EDA8)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    _DWORD v6[2] = (void *)3221225472;
    void v6[3] = sub_1A4C87270;
    void v6[4] = &unk_1E5B7B2A8;
    void v6[5] = v6;
    long long v7 = xmmword_1E5B7F9D8;
    uint64_t v8 = 0;
    qword_1E965EDA8 = _sl_dlopen();
  }
  uint64_t v4 = qword_1E965EDA8;
  if (!qword_1E965EDA8) {
    sub_1A4CBAB9C(v6, a2, a3, a4);
  }
  if (v6[0]) {
    free(v6[0]);
  }
  return v4;
}

uint64_t sub_1A4C87270()
{
  uint64_t result = _sl_dlopen();
  qword_1E965EDA8 = result;
  return result;
}

id sub_1A4C872E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2050000000;
  uint64_t v4 = (void *)qword_1E965EDB0;
  uint64_t v11 = qword_1E965EDB0;
  if (!qword_1E965EDB0)
  {
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = sub_1A4C873C8;
    v7[3] = &unk_1E5B7C7B8;
    void v7[4] = &v8;
    sub_1A4C873C8((uint64_t)v7, a2, a3, a4);
    uint64_t v4 = (void *)v9[3];
  }
  id v5 = v4;
  _Block_object_dispose(&v8, 8);

  return v5;
}

void sub_1A4C873B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1A4C873C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  sub_1A4C87178(a1, a2, a3, a4);
  Class result = objc_getClass("PXTwoTuple");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_1A4CBAC1C((uint64_t)result, v6, v7, v8);
  }
  qword_1E965EDB0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A4C87420(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1A4C87450(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void _IMIntentsApiInit()
{
  if (qword_1E965E710 != -1) {
    dispatch_once(&qword_1E965E710, &unk_1EF8E5938);
  }
}

uint64_t sub_1A4C88AA0()
{
  qword_1E965E6C8 = MEMORY[0x1A6263B40](@"INInteraction", @"Intents");
  qword_1E965E6E8 = MEMORY[0x1A6263B40](@"INSendMessageIntent", @"Intents");
  qword_1E965E6F0 = MEMORY[0x1A6263B40](@"INSendMessageIntentResponse", @"Intents");
  qword_1E965DDE8 = MEMORY[0x1A6263B40](@"INUnsendMessagesIntent", @"Intents");
  qword_1E965DDF0 = MEMORY[0x1A6263B40](@"INUnsendMessagesIntentResponse", @"Intents");
  qword_1E965E6D8 = MEMORY[0x1A6263B40](@"INPerson", @"Intents");
  qword_1E965E6E0 = MEMORY[0x1A6263B40](@"INPersonHandle", @"Intents");
  qword_1E965E6D0 = MEMORY[0x1A6263B40](@"INMessage", @"Intents");
  qword_1E965E6F8 = MEMORY[0x1A6263B40](@"INSpeakableString", @"Intents");
  uint64_t result = MEMORY[0x1A6263B40](@"INImage", @"Intents");
  qword_1E965E6C0 = result;
  return result;
}

void *sub_1A4C88F4C()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("INPersonHandleLabelForCNLabeledValue", @"Intents");
  off_1E965DE10 = result;
  return result;
}

void *sub_1A4C88F7C()
{
  uint64_t result = (void *)MEMORY[0x1A6263B50]("INPersonHandleLabelForCNLabeledValue", @"Intents");
  off_1E965E4E0 = result;
  return result;
}

void sub_1A4C89238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1A4C89250(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = objc_msgSend_copy(a2, (const char *)a2, a3, a4);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v8 = *(NSObject **)(a1 + 32);

  return dispatch_semaphore_signal(v8);
}

void sub_1A4C8B6D8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  v16[2] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  v15[0] = @"ResultSuccess";
  uint64_t v8 = objc_msgSend_numberWithBool_(NSNumber, v6, *(unsigned __int8 *)(a1 + 32), v7);
  v15[1] = @"ResultKeyNewState";
  v16[0] = v8;
  uint64_t v11 = objc_msgSend_numberWithBool_(NSNumber, v9, *(unsigned __int8 *)(a1 + 33), v10);
  v16[1] = v11;
  uint64_t v13 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v12, (uint64_t)v16, (uint64_t)v15, 2);
  objc_msgSend_postNotificationName_object_userInfo_(v5, v14, @"com.apple.IMCore.IMCloudKitHooks.SetEnabledReturned", 0, v13);
}

void sub_1A4C8BABC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend_dictionary(MEMORY[0x1E4F1CA60], a2, a3, a4);
  id v17 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = objc_msgSend_numberWithBool_(NSNumber, v5, *(unsigned __int8 *)(a1 + 56), v6);
  objc_msgSend_setObject_forKey_(v17, v8, (uint64_t)v7, @"ResultSuccess");

  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v11 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v9, *(void *)(a1 + 48), v10);
    objc_msgSend_setObject_forKey_(v17, v12, (uint64_t)v11, @"ResultAdditionalStorageRequired");

    uint64_t v13 = *(void *)(a1 + 32);
    if (v13) {
      objc_msgSend_setObject_forKey_(v17, v9, v13, @"ResultiCloudAccountId");
    }
  }
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14) {
    objc_msgSend_setObject_forKey_(v17, v9, v14, @"Error");
  }
  uint64_t v15 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], v9, v14, v10);
  objc_msgSend_postNotificationName_object_userInfo_(v15, v16, @"com.apple.IMCore.IMCloudKitHooks.AdditionalStorageCheckReturned", 0, v17);
}

void sub_1A4C8BE18(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = objc_msgSend_defaultCenter(MEMORY[0x1E4F28EB8], a2, a3, a4);
  uint64_t v12 = @"ResultSuccess";
  uint64_t v8 = objc_msgSend_numberWithBool_(NSNumber, v6, *(unsigned __int8 *)(a1 + 32), v7);
  v13[0] = v8;
  uint64_t v10 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v9, (uint64_t)v13, (uint64_t)&v12, 1);
  objc_msgSend_postNotificationName_object_userInfo_(v5, v11, @"com.apple.IMCore.IMCloudKitHooks.tryToDisableAllDevicesReturned", 0, v10);
}

id sub_1A4C8CC58(void *a1)
{
  id v1 = a1;
  id v2 = sub_1A4C8CCB4();

  return v2;
}

void type metadata accessor for IMCloudKitSyncProgressType(uint64_t a1)
{
}

void type metadata accessor for MessagesClientCapabilities(uint64_t a1)
{
}

id sub_1A4C8CCB4()
{
  id v1 = objc_msgSend(v0, sel_transferGUID);
  if (!v1)
  {
    sub_1A4CBB0CC();
    id v1 = (id)sub_1A4CBB0BC();
    swift_bridgeObjectRelease();
  }
  id v2 = objc_msgSend(self, sel_sharedInstance);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_transferForGUID_, v1);

    if (v4)
    {
      id v5 = objc_msgSend(v4, sel_commSafetySensitive);

      id v1 = v4;
    }
    else
    {
      id v5 = 0;
      id v1 = v3;
    }
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_1A4C8CD94(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1A4C8CD9C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1A4C8CDB0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1A4C8CDC4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x10D0], 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A4C8CDF0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x10D0], 8) = v5 == 0;
  return result;
}

void *sub_1A4C8CE14(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1A4C8CE28@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A4C8CE3C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A4C8CE50(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1A4C8CE64(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A4C8CE78()
{
  return *v0 == 0;
}

uint64_t sub_1A4C8CE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1A4C8CEA0(void *result)
{
  *v1 &= ~*result;
  return result;
}

BOOL sub_1A4C8CEB4(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_1A4C8CEC8(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1A4C8CED4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1A4C8CEE8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1A4C8CF18(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1A4C8CF2C(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_1A4C8CF40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A4C8D0B0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_1A4C8CF80@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x10D0], 8) = 0;
  return result;
}

uint64_t sub_1A4C8CF90()
{
  return sub_1A4C8CFF8(&qword_1E965CA20);
}

uint64_t sub_1A4C8CFC4()
{
  return sub_1A4C8CFF8(&qword_1E965CA28);
}

uint64_t sub_1A4C8CFF8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MessagesClientCapabilities(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4C8D03C()
{
  return sub_1A4C8CFF8(&qword_1E965CA30);
}

uint64_t sub_1A4C8D070()
{
  return sub_1A4C8CFF8(&qword_1E965CA38);
}

void *sub_1A4C8D0A4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A4C8D0B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id DaemonConnection.__allocating_init(listener:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1A4B01C70(a1);
  swift_unknownObjectRelease();
  return v4;
}

id DaemonConnection.init(listener:)(uint64_t a1)
{
  id v1 = sub_1A4B01C70(a1);
  swift_unknownObjectRelease();
  return v1;
}

id DaemonConnection.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DaemonConnection.init()()
{
}

id DaemonConnection.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A4C8D2F4(void *a1)
{
}

void sub_1A4C8D300(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1A4C8D368(uint64_t a1)
{
  uint64_t v2 = sub_1A4CBB07C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v5 = sub_1A4CBAFCC();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v6 = sub_1A4CBB08C();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_1EB3F20D0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v7, (uint64_t)qword_1EB3F2588);
  uint64_t v8 = sub_1A4CBB01C();
  os_log_type_t v9 = sub_1A4CBB24C();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1A4AF7000, v8, v9, "Disconnecting from daemon", v10, 2u);
    MEMORY[0x1A6264920](v10, -1, -1);
  }

  id v11 = *(id *)a1;
  objc_msgSend(*(id *)a1, sel_invalidate);

  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 1;
}

void sub_1A4C8D554(void *a1)
{
}

void sub_1A4C8D560(void *a1)
{
}

void sub_1A4C8D56C(void *a1, const char *a2)
{
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v4, (uint64_t)qword_1EB3F2588);
  id v5 = a1;
  id v6 = a1;
  oslog = sub_1A4CBB01C();
  os_log_type_t v7 = sub_1A4CBB26C();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v13 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_1A4CBB62C();
    sub_1A4B0BCCC(v10, v11, &v13);
    sub_1A4CBB36C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A4AF7000, oslog, v7, a2, v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v9, -1, -1);
    MEMORY[0x1A6264920](v8, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1A4C8D760(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v9, (uint64_t)qword_1EB3F2588);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1A4CBB01C();
  os_log_type_t v11 = sub_1A4CBB24C();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v15 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A4B0BCCC(a1, a2, &v15);
    sub_1A4CBB36C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A4AF7000, v10, v11, "Completing deferred invocation of %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v13, -1, -1);
    MEMORY[0x1A6264920](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a3(a5);
}

void sub_1A4C8D944(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v6, (uint64_t)qword_1EB3F2588);
  swift_bridgeObjectRetain_n();
  os_log_type_t v7 = sub_1A4CBB01C();
  os_log_type_t v8 = sub_1A4CBB24C();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A4B0BCCC(a2, a3, &v11);
    sub_1A4CBB36C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A4AF7000, v7, v8, "Setup has not been requested at time of proxy invocation, deferring invocation of %s to after setup complete", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v10, -1, -1);
    MEMORY[0x1A6264920](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A4B07B7C(a1);
}

uint64_t sub_1A4C8DB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A4CBB04C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  os_log_type_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A4CBB06C();
  uint64_t v9 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4B0C510(0, (unint64_t *)&qword_1EB3F20E8);
  uint64_t v12 = (void *)sub_1A4CBB30C();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  void aBlock[4] = sub_1A4B35360;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A4B02D48;
  aBlock[3] = &unk_1EF8E71A0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1A4CBB05C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1A4B0C59C((unint64_t *)&qword_1EB3F20F0, MEMORY[0x1E4FBCB00]);
  sub_1A4B0E048(&qword_1EB3F20F8);
  sub_1A4B0C54C((unint64_t *)&qword_1EB3F2100, &qword_1EB3F20F8);
  sub_1A4CBB3BC();
  MEMORY[0x1A6262830](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

uint64_t sub_1A4C8DDDC(void *a1)
{
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v2, (uint64_t)qword_1EB3F2588);
  id v3 = a1;
  uint64_t v4 = sub_1A4CBB01C();
  os_log_type_t v5 = sub_1A4CBB24C();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    objc_msgSend(v3, sel_processIdentifier);
    sub_1A4CBB36C();

    _os_log_impl(&dword_1A4AF7000, v4, v5, "Connection to PID %d was interrupted", v6, 8u);
    MEMORY[0x1A6264920](v6, -1, -1);
  }
  else
  {
  }
  return sub_1A4CBAFEC();
}

uint64_t sub_1A4C8DF58(uint64_t result)
{
  *(unsigned char *)(result + 24) = 1;
  return result;
}

uint64_t sub_1A4C8DF64(void *a1, void *a2)
{
  if (qword_1EB3F20D0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v4, (uint64_t)qword_1EB3F2588);
  id v5 = a1;
  uint64_t v6 = sub_1A4CBB01C();
  os_log_type_t v7 = sub_1A4CBB24C();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v8 = 67109120;
    objc_msgSend(v5, sel_processIdentifier);
    sub_1A4CBB36C();

    _os_log_impl(&dword_1A4AF7000, v6, v7, "Connection to PID %d was invalidated", v8, 8u);
    MEMORY[0x1A6264920](v8, -1, -1);
  }
  else
  {
  }
  *(void *)(swift_allocObject() + 16) = a2;
  id v9 = a2;
  sub_1A4CBAFEC();
  return swift_release();
}

Swift::Void __swiftcall DaemonConnection.disconnect()()
{
}

uint64_t DaemonConnection.isConnected.getter()
{
  sub_1A4CBAFDC();
  return v1;
}

uint64_t DaemonConnection.remoteObjectProxy.getter()
{
  return sub_1A4C8E1CC();
}

uint64_t DaemonConnection.synchronousRemoteObjectProxy.getter()
{
  return sub_1A4C8E1CC();
}

uint64_t sub_1A4C8E1CC()
{
  sub_1A4B0E048(&qword_1EB3F20E0);
  sub_1A4CBAFDC();
  return v1;
}

uint64_t (*DaemonConnection.onSetupComplete.getter())(uint64_t a1)
{
  sub_1A4B0E048(&qword_1E965D238);
  sub_1A4CBAFDC();
  if (!v2) {
    return 0;
  }
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  return sub_1A4C8F940;
}

uint64_t sub_1A4C8E40C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_1A4CBB0AC();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t DaemonConnection.onSetupComplete.setter(uint64_t a1)
{
  return sub_1A4B35388(a1);
}

double sub_1A4C8E508@<D0>(_OWORD *a1@<X8>)
{
  sub_1A4B0E048(&qword_1E965D238);
  sub_1A4CBAFDC();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1A4C8E578(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    a1 = (uint64_t *)swift_allocObject();
    a1[2] = v1;
    a1[3] = v2;
    long long v3 = sub_1A4C908D8;
  }
  else
  {
    long long v3 = 0;
  }
  MEMORY[0x1F4188790](a1);
  sub_1A4B08658(v1);
  sub_1A4CBAFDC();
  return sub_1A4B35388((uint64_t)v3);
}

uint64_t sub_1A4C8E664@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1A4C90860;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;

  return sub_1A4B08658(v3);
}

void (*DaemonConnection.onSetupComplete.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = *(void *)(v1 + OBJC_IVAR___IMDaemonConnection_queue);
  sub_1A4B0E048(&qword_1E965D238);
  sub_1A4CBAFDC();
  uint64_t v4 = v3[2];
  if (v4)
  {
    uint64_t v5 = v3[3];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    os_log_type_t v7 = sub_1A4C908D8;
  }
  else
  {
    os_log_type_t v7 = 0;
    uint64_t v6 = 0;
  }
  *uint64_t v3 = v7;
  v3[1] = v6;
  return sub_1A4C8E7C0;
}

void sub_1A4C8E7C0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  if (a2)
  {
    sub_1A4B08658(v3);
    sub_1A4CBAFDC();
    sub_1A4B35388(v3);
    sub_1A4B35388(*v2);
  }
  else
  {
    sub_1A4CBAFDC();
    sub_1A4B35388(v3);
  }
  free(v2);
}

uint64_t DaemonConnection.connect(capabilities:context:contextChanged:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(unsigned char *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = v3;
  swift_bridgeObjectRetain();
  id v8 = v3;
  sub_1A4CBAFEC();

  return swift_release();
}

uint64_t sub_1A4C8E964(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

Swift::Void __swiftcall DaemonConnection.requestSetup()()
{
}

uint64_t sub_1A4C8E9AC()
{
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  sub_1A4CBAFEC();

  return swift_release();
}

uint64_t sub_1A4C8EA3C(void *a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  id v2 = a1;
  sub_1A4CBAFEC();

  return swift_release();
}

uint64_t DaemonConnection.requestSetupIfNeeded()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A4C8EADC, 0, 0);
}

uint64_t sub_1A4C8EADC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A4C8EBC8;
  return MEMORY[0x1F41880D8]();
}

uint64_t sub_1A4C8EBC8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A4C8ECE0, 0, 0);
}

uint64_t sub_1A4C8ECE0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A4C8ECF4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1A4B0E048(&qword_1EB3F2028);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  id v9 = a2;
  sub_1A4CBAFEC();
  return swift_release();
}

uint64_t sub_1A4C8EE48(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A4B0E048(&qword_1EB3F2028);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  sub_1A4B07B7C(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v10 + ((v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  id v11 = a2;
  sub_1A4CBAFEC();
  return swift_release();
}

uint64_t sub_1A4C8EFB8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_1A4CBB04C();
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A4CBB06C();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A4B0E048(&qword_1EB3F2028);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  if (*a1)
  {
    sub_1A4B0C510(0, (unint64_t *)&qword_1EB3F20E8);
    uint64_t v28 = sub_1A4CBB30C();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v11);
    uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v29 = v8;
    uint64_t v15 = (v14 + 24) & ~v14;
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = v7;
    uint64_t v18 = v5;
    int v19 = v30;
    *(void *)(v16 + 16) = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    void aBlock[4] = sub_1A4C90534;
    void aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A4B02D48;
    aBlock[3] = &unk_1EF8E6E08;
    dispatch_time_t v20 = _Block_copy(aBlock);
    id v21 = v19;
    sub_1A4CBB05C();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1A4B0C59C((unint64_t *)&qword_1EB3F20F0, MEMORY[0x1E4FBCB00]);
    sub_1A4B0E048(&qword_1EB3F20F8);
    sub_1A4B0C54C((unint64_t *)&qword_1EB3F2100, &qword_1EB3F20F8);
    sub_1A4CBB3BC();
    uint64_t v22 = (void *)v28;
    MEMORY[0x1A6262830](0, v10, v17, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v18);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v29);
    return swift_release();
  }
  else
  {
    if (qword_1EB3F20D0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v24, (uint64_t)qword_1EB3F2588);
    uint64_t v25 = sub_1A4CBB01C();
    os_log_type_t v26 = sub_1A4CBB24C();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_1A4AF7000, v25, v26, "Setup request should be complete, resuming continuation", v27, 2u);
      MEMORY[0x1A6264920](v27, -1, -1);
    }

    return sub_1A4CBB1BC();
  }
}

uint64_t sub_1A4C8F434()
{
  return sub_1A4CBB1BC();
}

uint64_t sub_1A4C8F5DC(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x1F4188298](sub_1A4C8F654, 0, 0);
}

uint64_t sub_1A4C8F654()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A4C8F740;
  return MEMORY[0x1F41880D8]();
}

uint64_t sub_1A4C8F740()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A4C8F858, 0, 0);
}

uint64_t sub_1A4C8F858()
{
  uint64_t v1 = *(void (***)(void))(v0 + 24);

  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A4C8F8D0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A4C8F908()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1A4C8F918(uint64_t a1)
{
}

uint64_t sub_1A4C8F940(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

void sub_1A4C8F97C(uint64_t a1)
{
  *(unsigned char *)(a1 + 24) = 1;
  sub_1A4B07B7C(a1);
}

uint64_t sub_1A4C8F9A8(uint64_t a1)
{
  return sub_1A4C8ECF4(a1, *(void **)(v1 + 16));
}

uint64_t method lookup function for DaemonConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DaemonConnection);
}

uint64_t dispatch thunk of DaemonConnection.__allocating_init(listener:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *destroy for DaemonConnection.SetupState(void *result)
{
  if (*result) {
    return (void *)swift_release();
  }
  return result;
}

void *_s6IMCore16DaemonConnectionC10SetupStateVwCP_0(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for DaemonConnection.SetupState(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for DaemonConnection.SetupState(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DaemonConnection.SetupState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DaemonConnection.SetupState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)double result = a2 - 0x7FFFFFFF;
    *(void *)(result + _Block_object_dispose(&STACK[0x10D0], 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)double result = a2;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DaemonConnection.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DaemonConnection.State(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for DaemonConnection.State(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x10D0], 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 48);
  id v9 = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 4_Block_object_dispose(&STACK[0x10D0], 8) = v7;
    *(void *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x10D0], 8) = *v8;
  }
  return a1;
}

uint64_t assignWithCopy for DaemonConnection.State(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + _Block_object_dispose(&STACK[0x10D0], 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 56);
      *(void *)(a1 + 4_Block_object_dispose(&STACK[0x10D0], 8) = v7;
      *(void *)(a1 + 56) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x10D0], 8) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x10D0], 8) = v7;
  *(void *)(a1 + 56) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DaemonConnection.State(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 4_Block_object_dispose(&STACK[0x10D0], 8) = v5;
      *(void *)(a1 + 56) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x10D0], 8) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x10D0], 8) = v5;
  *(void *)(a1 + 56) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DaemonConnection.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DaemonConnection.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1A4C8FF58()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A4C8FF98()
{
  unint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1A4C90044;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1E965D248 + dword_1E965D248);
  return v5(v2, v3);
}

uint64_t sub_1A4C90044()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A4C90140()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A4C90180(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1A4C90918;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E965DCF0 + dword_1E965DCF0);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1A4C90250@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1A4B08264((void **)a1);
  *a2 = *(void *)(a1 + 16);

  return swift_unknownObjectRetain();
}

uint64_t sub_1A4C902A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1A4B0E048(&qword_1EB3F2028) - 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1A4C8EE48(a1, v4, v5);
}

uint64_t sub_1A4C90318()
{
  uint64_t v1 = sub_1A4B0E048(&qword_1EB3F2028);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1A4C903C0(void *a1)
{
  uint64_t v3 = *(void *)(sub_1A4B0E048(&qword_1EB3F2028) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1A4C8EFB8(a1, v1 + v4, v5);
}

uint64_t sub_1A4C90464()
{
  uint64_t v1 = sub_1A4B0E048(&qword_1EB3F2028);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A4C90534()
{
  sub_1A4B0E048(&qword_1EB3F2028);

  return sub_1A4C8F434();
}

uint64_t sub_1A4C9059C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1A4C905F4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1A4C90604()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A4C9063C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A4C9067C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A4C906BC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A4C906F4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A4C90734()
{
  return sub_1A4C8DDDC(*(void **)(v0 + 16));
}

uint64_t sub_1A4C9073C()
{
  return sub_1A4C8DF64(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1A4C90744()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A4C9077C()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A4B0BDA0(v0 + 48);

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1A4C907C4()
{
  return sub_1A4C8D760(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), v0 + 48);
}

void sub_1A4C907D4(uint64_t a1)
{
  sub_1A4C8D944(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A4C907E0(uint64_t a1)
{
  return sub_1A4C8DB08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A4C907E8()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A4C90820()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A4C90860(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

IMCore::CountStatistics::RootKeys_optional __swiftcall CountStatistics.RootKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1A4CBB5FC();
  result.id value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 5;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      char v5 = 1;
      goto LABEL_7;
    case 2:
      char v5 = 2;
      goto LABEL_7;
    case 3:
      char v5 = 3;
      goto LABEL_7;
    case 4:
      char v5 = 4;
LABEL_7:
      char v6 = v5;
      break;
    case 5:
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    default:
      char v6 = 23;
      break;
  }
  char *v2 = v6;
  return result;
}

IMCore::CountStatistics::RootKeys_optional __swiftcall CountStatistics.RootKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.id value = CountStatistics.RootKeys.init(rawValue:)(stringValue).value;
  unsigned char *v2 = v4;
  return result;
}

IMCore::CountStatistics::RootKeys_optional __swiftcall CountStatistics.RootKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 23;
  return (IMCore::CountStatistics::RootKeys_optional)intValue;
}

uint64_t CountStatistics.RootKeys.intValue.getter()
{
  return 0;
}

unint64_t CountStatistics.RootKeys.rawValue.getter()
{
  unint64_t result = 0x756F436C61746F74;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65636E79536C6C61;
      break;
    case 2:
    case 8:
      unint64_t result = 0x766C6F7365726E75;
      break;
    case 3:
      unint64_t result = 0x6F43726576726573;
      break;
    case 4:
      unint64_t result = 0x726F7453636E7973;
      break;
    case 5:
      unint64_t result = 0x6168436C61746F74;
      break;
    case 6:
      unint64_t result = 0x68436465636E7973;
      break;
    case 7:
      unint64_t result = 0x43646574656C6564;
      break;
    case 9:
      unint64_t result = 0x73654D6C61746F74;
      break;
    case 0xA:
      unint64_t result = 0x654D6465636E7973;
      break;
    case 0xB:
      unint64_t result = 0x4D646574656C6564;
      break;
    case 0xC:
    case 0xF:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x13:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x14:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 0x15:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x16:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t CountStatistics.RootKeys.stringValue.getter()
{
  return CountStatistics.RootKeys.rawValue.getter();
}

uint64_t sub_1A4C90E40()
{
  return sub_1A4CA3844();
}

uint64_t sub_1A4C90E4C()
{
  return sub_1A4CBB65C();
}

uint64_t sub_1A4C90EB4()
{
  return sub_1A4CBB65C();
}

uint64_t sub_1A4C90FC4()
{
  return sub_1A4CBB65C();
}

uint64_t sub_1A4C910D0()
{
  CountStatistics.RootKeys.rawValue.getter();
  sub_1A4CBB0EC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4C91134()
{
  sub_1A4CBB0EC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4C91230()
{
  sub_1A4CBB0EC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4C91374()
{
  return sub_1A4CBB65C();
}

uint64_t sub_1A4C913D8()
{
  return sub_1A4CBB65C();
}

uint64_t sub_1A4C914E0()
{
  return sub_1A4CBB65C();
}

IMCore::CountStatistics::RootKeys_optional sub_1A4C915EC(Swift::String *a1)
{
  return CountStatistics.RootKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A4C915F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CountStatistics.RootKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1A4C91620()
{
  return CountStatistics.RootKeys.rawValue.getter();
}

IMCore::CountStatistics::RootKeys_optional sub_1A4C91654@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.id value = CountStatistics.RootKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_1A4C9168C()
{
  return 0;
}

void sub_1A4C91698(unsigned char *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_1A4C916A4(uint64_t a1)
{
  unint64_t v2 = sub_1A4C93C14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A4C916E0(uint64_t a1)
{
  unint64_t v2 = sub_1A4C93C14();

  return MEMORY[0x1F41862B0](a1, v2);
}

IMCore::CountStatistics::SyncStoreCountKeys_optional __swiftcall CountStatistics.SyncStoreCountKeys.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1A4CBB52C();
  result.id value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

IMCore::CountStatistics::SyncStoreCountKeys_optional __swiftcall CountStatistics.SyncStoreCountKeys.init(stringValue:)(Swift::String stringValue)
{
  unint64_t v2 = v1;
  result.id value = CountStatistics.SyncStoreCountKeys.init(rawValue:)(stringValue).value;
  unsigned char *v2 = v4;
  return result;
}

IMCore::CountStatistics::SyncStoreCountKeys_optional __swiftcall CountStatistics.SyncStoreCountKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 10;
  return (IMCore::CountStatistics::SyncStoreCountKeys_optional)intValue;
}

uint64_t CountStatistics.SyncStoreCountKeys.intValue.getter()
{
  return 0;
}

unint64_t CountStatistics.SyncStoreCountKeys.rawValue.getter()
{
  unint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000023;
      break;
    case 9:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t CountStatistics.SyncStoreCountKeys.stringValue.getter()
{
  unint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000023;
      break;
    case 9:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A4C919E0(char *a1, char *a2)
{
  return sub_1A4CA3A9C(*a1, *a2);
}

uint64_t sub_1A4C919EC()
{
  return sub_1A4CBB65C();
}

uint64_t sub_1A4C91A34()
{
  return sub_1A4C91230();
}

uint64_t sub_1A4C91A3C()
{
  return sub_1A4CBB65C();
}

IMCore::CountStatistics::SyncStoreCountKeys_optional sub_1A4C91A80(Swift::String *a1)
{
  return CountStatistics.SyncStoreCountKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A4C91A8C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CountStatistics.SyncStoreCountKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

IMCore::CountStatistics::SyncStoreCountKeys_optional sub_1A4C91AB8@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.id value = CountStatistics.SyncStoreCountKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A4C91AF0(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1A4C91AFC(uint64_t a1)
{
  unint64_t v2 = sub_1A4C93C68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A4C91B38(uint64_t a1)
{
  unint64_t v2 = sub_1A4C93C68();

  return MEMORY[0x1F41862B0](a1, v2);
}

IMCore::CountStatistics::ServerZoneKeys_optional __swiftcall CountStatistics.ServerZoneKeys.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1A4CBB52C();
  result.id value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

IMCore::CountStatistics::ServerZoneKeys_optional __swiftcall CountStatistics.ServerZoneKeys.init(stringValue:)(Swift::String stringValue)
{
  unint64_t v2 = v1;
  result.id value = CountStatistics.ServerZoneKeys.init(rawValue:)(stringValue).value;
  unsigned char *v2 = v4;
  return result;
}

IMCore::CountStatistics::ServerZoneKeys_optional __swiftcall CountStatistics.ServerZoneKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 5;
  return (IMCore::CountStatistics::ServerZoneKeys_optional)intValue;
}

uint64_t CountStatistics.ServerZoneKeys.intValue.getter()
{
  return 0;
}

unint64_t CountStatistics.ServerZoneKeys.rawValue.getter()
{
  unint64_t result = 0x616E614D74616863;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t CountStatistics.ServerZoneKeys.stringValue.getter()
{
  unint64_t result = 0x616E614D74616863;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A4C91DA8(unsigned __int8 *a1, char *a2)
{
  return sub_1A4CA38DC(*a1, *a2);
}

uint64_t sub_1A4C91DB4()
{
  return sub_1A4C90EB4();
}

uint64_t sub_1A4C91DBC()
{
  return sub_1A4C91134();
}

uint64_t sub_1A4C91DC4()
{
  return sub_1A4C914E0();
}

IMCore::CountStatistics::ServerZoneKeys_optional sub_1A4C91DCC(Swift::String *a1)
{
  return CountStatistics.ServerZoneKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A4C91DD8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CountStatistics.ServerZoneKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

IMCore::CountStatistics::ServerZoneKeys_optional sub_1A4C91E04@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  result.id value = CountStatistics.ServerZoneKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A4C91E3C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A4C91E48(uint64_t a1)
{
  unint64_t v2 = sub_1A4C93CBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A4C91E84(uint64_t a1)
{
  unint64_t v2 = sub_1A4C93CBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

IMCore::CountStatistics::ServerCountKeys_optional __swiftcall CountStatistics.ServerCountKeys.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1A4CBB52C();
  result.id value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

IMCore::CountStatistics::ServerCountKeys_optional __swiftcall CountStatistics.ServerCountKeys.init(stringValue:)(Swift::String stringValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1A4CBB52C();
  result.id value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1) {
      char v5 = 1;
    }
    else {
      char v5 = 2;
    }
  }
  else
  {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

IMCore::CountStatistics::ServerCountKeys_optional __swiftcall CountStatistics.ServerCountKeys.init(intValue:)(Swift::Int intValue)
{
  unsigned char *v1 = 2;
  return (IMCore::CountStatistics::ServerCountKeys_optional)intValue;
}

uint64_t CountStatistics.ServerCountKeys.intValue.getter()
{
  return 0;
}

uint64_t CountStatistics.ServerCountKeys.rawValue.getter()
{
  if (*v0) {
    return 0x6365725F6576696CLL;
  }
  else {
    return 0x65725F6C61746F74;
  }
}

uint64_t CountStatistics.ServerCountKeys.stringValue.getter()
{
  if (*v0) {
    return 0x6365725F6576696CLL;
  }
  else {
    return 0x65725F6C61746F74;
  }
}

uint64_t sub_1A4C9204C(char *a1, char *a2)
{
  return sub_1A4CA3D04(*a1, *a2);
}

uint64_t sub_1A4C92058()
{
  return sub_1A4CBB65C();
}

uint64_t sub_1A4C920F0()
{
  sub_1A4CBB0EC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4C92174()
{
  return sub_1A4CBB65C();
}

IMCore::CountStatistics::ServerCountKeys_optional sub_1A4C92208(Swift::String *a1)
{
  return CountStatistics.ServerCountKeys.init(rawValue:)(*a1);
}

void sub_1A4C92214(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65725F6C61746F74;
  if (*v1) {
    uint64_t v2 = 0x6365725F6576696CLL;
  }
  unint64_t v3 = 0xED00007364726F63;
  if (*v1) {
    unint64_t v3 = 0xEC0000007364726FLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A4C92268()
{
  if (*v0) {
    return 0x6365725F6576696CLL;
  }
  else {
    return 0x65725F6C61746F74;
  }
}

void sub_1A4C922BC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A4C922C8(uint64_t a1)
{
  unint64_t v2 = sub_1A4C94138();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A4C92304(uint64_t a1)
{
  unint64_t v2 = sub_1A4C94138();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CountStatistics.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v263 = a2;
  uint64_t v3 = sub_1A4B0E048(&qword_1E965B538);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v258 = (char *)&v212 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v256 = (uint64_t)&v212 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v254 = (uint64_t)&v212 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v252 = (uint64_t)&v212 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v250 = (char *)&v212 - v12;
  uint64_t v262 = sub_1A4B0E048(&qword_1E965B530);
  uint64_t v248 = *(void *)(v262 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v262);
  v259 = (char *)&v212 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  *(void *)&long long v257 = (char *)&v212 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v255 = (uint64_t)&v212 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v253 = (uint64_t)&v212 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v251 = (char *)&v212 - v21;
  uint64_t v22 = sub_1A4B0E048(&qword_1E965B558);
  MEMORY[0x1F4188790](v22 - 8);
  v249 = (char *)&v212 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = sub_1A4B0E048(&qword_1E965B550);
  uint64_t v260 = *(void *)(v264 - 8);
  MEMORY[0x1F4188790](v264);
  uint64_t v261 = (char *)&v212 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1A4B0E048(&qword_1E965B548);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v212 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1A4B0E048(&qword_1E965B540);
  v265 = *(unsigned char **)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v212 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1A4B0E048(&qword_1E965B560);
  uint64_t v266 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v212 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1[3];
  v318 = a1;
  sub_1A4B0BC88(a1, v34);
  sub_1A4C93C14();
  uint64_t v35 = v267;
  sub_1A4CBB66C();
  if (v35) {
    return sub_1A4B0BDA0((uint64_t)v318);
  }
  __int16 v36 = v27;
  uint64_t v267 = v28;
  uint64_t v37 = v265;
  char v268 = 0;
  uint64_t v38 = v33;
  uint64_t v39 = sub_1A4CBB54C();
  if (v40) {
    uint64_t v41 = 0;
  }
  else {
    uint64_t v41 = v39;
  }
  char v268 = 1;
  uint64_t v42 = sub_1A4CBB54C();
  if (v44) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = v42;
  }
  char v268 = 2;
  uint64_t v46 = sub_1A4CBB54C();
  uint64_t v247 = v45;
  if (v47) {
    uint64_t v48 = 0;
  }
  else {
    uint64_t v48 = v46;
  }
  if (v41 < 0 || v247 < 0 || (uint64_t v246 = v48, v48 < 0))
  {
    sub_1A4CBB4BC();
    __break(1u);
    goto LABEL_101;
  }
  char v268 = 5;
  uint64_t v49 = sub_1A4CBB54C();
  uint64_t v245 = v41;
  if (v50) {
    uint64_t v51 = 0;
  }
  else {
    uint64_t v51 = v49;
  }
  char v268 = 6;
  uint64_t v52 = sub_1A4CBB54C();
  uint64_t v244 = v51;
  if (v53) {
    uint64_t v54 = 0;
  }
  else {
    uint64_t v54 = v52;
  }
  char v268 = 7;
  uint64_t v55 = sub_1A4CBB54C();
  uint64_t v243 = v54;
  if (v56) {
    uint64_t v57 = 0;
  }
  else {
    uint64_t v57 = v55;
  }
  char v268 = 8;
  uint64_t v58 = sub_1A4CBB54C();
  uint64_t v242 = v57;
  if (v59) {
    uint64_t v41 = 0;
  }
  else {
    uint64_t v41 = v58;
  }
  char v268 = 9;
  uint64_t v60 = sub_1A4CBB54C();
  if (v61) {
    uint64_t v62 = 0;
  }
  else {
    uint64_t v62 = v60;
  }
  uint64_t v241 = v62;
  char v268 = 10;
  uint64_t v63 = sub_1A4CBB54C();
  if (v64) {
    uint64_t v65 = 0;
  }
  else {
    uint64_t v65 = v63;
  }
  uint64_t v239 = v65;
  uint64_t v240 = v31;
  char v268 = 11;
  uint64_t v31 = (uint64_t)v38;
  uint64_t v66 = sub_1A4CBB54C();
  if (v67) {
    uint64_t v68 = 0;
  }
  else {
    uint64_t v68 = v66;
  }
  uint64_t v238 = v68;
  char v268 = 12;
  uint64_t v69 = sub_1A4CBB54C();
  if (v70) {
    uint64_t v71 = 0;
  }
  else {
    uint64_t v71 = v69;
  }
  uint64_t v237 = v71;
  char v268 = 13;
  uint64_t v72 = sub_1A4CBB54C();
  if (v73) {
    uint64_t v74 = 0;
  }
  else {
    uint64_t v74 = v72;
  }
  uint64_t v236 = v74;
  char v268 = 14;
  uint64_t v75 = sub_1A4CBB54C();
  if (v76) {
    uint64_t v77 = 0;
  }
  else {
    uint64_t v77 = v75;
  }
  uint64_t v235 = v77;
  char v268 = 15;
  uint64_t v78 = sub_1A4CBB54C();
  if (v79) {
    uint64_t v80 = 0;
  }
  else {
    uint64_t v80 = v78;
  }
  uint64_t v234 = v80;
  char v268 = 16;
  uint64_t v81 = sub_1A4CBB54C();
  if (v82) {
    uint64_t v83 = 0;
  }
  else {
    uint64_t v83 = v81;
  }
  uint64_t v233 = v83;
  char v268 = 17;
  uint64_t v84 = sub_1A4CBB54C();
  if (v85) {
    uint64_t v86 = 0;
  }
  else {
    uint64_t v86 = v84;
  }
  uint64_t v232 = v86;
  char v268 = 18;
  uint64_t v87 = sub_1A4CBB54C();
  if (v88) {
    uint64_t v89 = 0;
  }
  else {
    uint64_t v89 = v87;
  }
  uint64_t v231 = v89;
  char v268 = 19;
  uint64_t v90 = sub_1A4CBB54C();
  if (v91) {
    uint64_t v92 = 0;
  }
  else {
    uint64_t v92 = v90;
  }
  uint64_t v230 = v92;
  char v268 = 20;
  uint64_t v93 = sub_1A4CBB54C();
  if (v94) {
    uint64_t v95 = 0;
  }
  else {
    uint64_t v95 = v93;
  }
  uint64_t v229 = v95;
  char v268 = 21;
  uint64_t v96 = sub_1A4CBB54C();
  if (v97) {
    uint64_t v98 = 0;
  }
  else {
    uint64_t v98 = v96;
  }
  uint64_t v228 = v98;
  char v268 = 22;
  uint64_t v99 = sub_1A4CBB54C();
  if (v100) {
    uint64_t v101 = 0;
  }
  else {
    uint64_t v101 = v99;
  }
  uint64_t v227 = v101;
  char v268 = 4;
  sub_1A4C93C68();
  sub_1A4CBB53C();
  uint64_t v130 = v267;
  (*((void (**)(char *, void, uint64_t, uint64_t))v37 + 7))(v27, 0, 1, v267);
  (*((void (**)(char *, char *, uint64_t))v37 + 4))(v30, v27, v130);
  char v268 = 0;
  uint64_t v131 = sub_1A4CBB54C();
  if (v132) {
    uint64_t v133 = 0;
  }
  else {
    uint64_t v133 = v131;
  }
  uint64_t v226 = v133;
  char v268 = 1;
  uint64_t v134 = sub_1A4CBB54C();
  if (v135) {
    uint64_t v136 = 0;
  }
  else {
    uint64_t v136 = v134;
  }
  uint64_t v225 = v136;
  char v268 = 2;
  uint64_t v137 = sub_1A4CBB54C();
  if (v138) {
    uint64_t v139 = 0;
  }
  else {
    uint64_t v139 = v137;
  }
  *(void *)&long long v224 = v139;
  char v268 = 3;
  uint64_t v140 = sub_1A4CBB54C();
  if (v141) {
    uint64_t v142 = 0;
  }
  else {
    uint64_t v142 = v140;
  }
  uint64_t v223 = v142;
  char v268 = 4;
  uint64_t v143 = sub_1A4CBB54C();
  if (v144) {
    uint64_t v145 = 0;
  }
  else {
    uint64_t v145 = v143;
  }
  uint64_t v222 = v145;
  char v268 = 5;
  uint64_t v146 = sub_1A4CBB54C();
  if (v147) {
    uint64_t v148 = 0;
  }
  else {
    uint64_t v148 = v146;
  }
  uint64_t v221 = v148;
  char v268 = 6;
  uint64_t v149 = sub_1A4CBB54C();
  if (v150) {
    uint64_t v151 = 0;
  }
  else {
    uint64_t v151 = v149;
  }
  uint64_t v220 = v151;
  char v268 = 7;
  uint64_t v152 = sub_1A4CBB54C();
  if (v153) {
    uint64_t v154 = 0;
  }
  else {
    uint64_t v154 = v152;
  }
  uint64_t v219 = v154;
  char v268 = 8;
  uint64_t v104 = sub_1A4CBB54C();
  char v103 = v155;
  char v268 = 9;
  uint64_t v217 = sub_1A4CBB54C();
  id v156 = 0;
  while (1)
  {
    char v209 = v105;
    if (v103) {
      uint64_t v210 = 0;
    }
    else {
      uint64_t v210 = v104;
    }
    uint64_t v218 = v210;
    (*((void (**)(char *, uint64_t))v37 + 1))(v30, v267);
    uint64_t v211 = v217;
    if (v209) {
      uint64_t v211 = 0;
    }
    uint64_t v267 = v211;
    char v268 = 3;
    sub_1A4C93CBC();
    sub_1A4CBB53C();
    if (v156)
    {

      uint64_t v102 = (uint64_t)v249;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v260 + 56))(v249, 1, 1, v264);
      char v103 = v266 + 8;
      (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v31, v240);
      sub_1A4B0E2A4(v102, &qword_1E965B558);
      uint64_t v216 = 0;
      uint64_t v217 = 0;
      uint64_t v256 = 0;
      *(void *)&long long v257 = 0;
      uint64_t v254 = 0;
      uint64_t v255 = 0;
      uint64_t v252 = 0;
      uint64_t v253 = 0;
      v265 = 0;
      uint64_t v30 = 0;
      uint64_t v104 = 0;
    }
    else
    {
      uint64_t v157 = v260;
      id v158 = v249;
      uint64_t v159 = v264;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v260 + 56))(v249, 0, 1, v264);
      (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v261, v158, v159);
      char v268 = 0;
      v249 = (char *)sub_1A4C94138();
      sub_1A4CBB53C();
      uint64_t v160 = v248;
      __int16 v36 = *(char **)(v248 + 56);
      __int16 v161 = v250;
      uint64_t v162 = v262;
      ((void (*)(char *, void, uint64_t, uint64_t))v36)(v250, 0, 1, v262);
      (*(void (**)(char *, char *, uint64_t))(v160 + 32))(v251, v161, v162);
      char v268 = 0;
      uint64_t v163 = sub_1A4CBB54C();
      char v165 = v164;
      char v268 = 1;
      v265 = (unsigned char *)sub_1A4CBB54C();
      char v191 = v190;
      if (v165) {
        uint64_t v30 = 0;
      }
      else {
        uint64_t v30 = (char *)v163;
      }
      (*(void (**)(char *, uint64_t))(v248 + 8))(v251, v262);
      uint64_t v192 = (uint64_t)v265;
      if (v191) {
        uint64_t v192 = 0;
      }
      v265 = (unsigned char *)v192;
      char v268 = 1;
      sub_1A4CBB53C();
LABEL_101:
      uint64_t v166 = v248;
      uint64_t v167 = v252;
      uint64_t v168 = v262;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v36)(v252, 0, 1, v262);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 32))(v253, v167, v168);
      char v268 = 0;
      uint64_t v169 = sub_1A4CBB54C();
      char v171 = v170;
      char v268 = 1;
      uint64_t v251 = (char *)sub_1A4CBB54C();
      char v194 = v193;
      if (v171) {
        uint64_t v195 = 0;
      }
      else {
        uint64_t v195 = v169;
      }
      uint64_t v252 = v195;
      (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v253, v262);
      uint64_t v196 = (uint64_t)v251;
      if (v194) {
        uint64_t v196 = 0;
      }
      uint64_t v253 = v196;
      char v268 = 2;
      sub_1A4CBB53C();
      uint64_t v172 = v248;
      uint64_t v173 = v254;
      uint64_t v174 = v262;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v36)(v254, 0, 1, v262);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v172 + 32))(v255, v173, v174);
      char v268 = 0;
      uint64_t v175 = sub_1A4CBB54C();
      char v177 = v176;
      char v268 = 1;
      uint64_t v251 = (char *)sub_1A4CBB54C();
      char v198 = v197;
      if (v177) {
        uint64_t v199 = 0;
      }
      else {
        uint64_t v199 = v175;
      }
      uint64_t v254 = v199;
      (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v255, v262);
      uint64_t v200 = (uint64_t)v251;
      if (v198) {
        uint64_t v200 = 0;
      }
      uint64_t v255 = v200;
      char v268 = 3;
      sub_1A4CBB53C();
      uint64_t v178 = v248;
      uint64_t v179 = v256;
      uint64_t v180 = v262;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v36)(v256, 0, 1, v262);
      (*(void (**)(void, uint64_t, uint64_t))(v178 + 32))(v257, v179, v180);
      char v268 = 0;
      uint64_t v181 = sub_1A4CBB54C();
      char v183 = v182;
      char v268 = 1;
      uint64_t v251 = (char *)sub_1A4CBB54C();
      char v202 = v201;
      if (v183) {
        uint64_t v203 = 0;
      }
      else {
        uint64_t v203 = v181;
      }
      uint64_t v256 = v203;
      (*(void (**)(void, uint64_t))(v248 + 8))(v257, v262);
      uint64_t v204 = v251;
      if (v202) {
        uint64_t v204 = 0;
      }
      *(void *)&long long v257 = v204;
      char v268 = 4;
      sub_1A4CBB53C();
      uint64_t v184 = v248;
      uint64_t v185 = v258;
      uint64_t v186 = v262;
      ((void (*)(char *, void, uint64_t, uint64_t))v36)(v258, 0, 1, v262);
      (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v259, v185, v186);
      char v268 = 0;
      uint64_t v187 = sub_1A4CBB54C();
      char v189 = v188;
      char v268 = 1;
      uint64_t v104 = 0;
      uint64_t v205 = sub_1A4CBB54C();
      id v156 = v206;
      uint64_t v207 = (v189 & 1) != 0 ? 0 : v187;
      uint64_t v217 = v207;
      (*(void (**)(char *, uint64_t))(v248 + 8))(v259, v262);
      (*(void (**)(char *, uint64_t))(v260 + 8))(v261, v264);
      char v103 = v266 + 8;
      (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v31, v240);
      uint64_t v208 = (v156 & 1) != 0 ? 0 : v205;
      uint64_t v216 = v208;
    }
    uint64_t v37 = v280;
    sub_1A4CA4490(0, v243, v244, v242, v41, (uint64_t)v30, (uint64_t)v265, v226, (uint64_t)v269, v225);
    LODWORD(v266) = v269[0];
    LODWORD(v265) = v269[8];
    uint64_t v264 = v270;
    uint64_t v261 = v272;
    uint64_t v262 = v271;
    uint64_t v260 = v273;
    LODWORD(v259) = v274;
    uint64_t v258 = v275;
    uint64_t v251 = v276;
    LODWORD(v250) = v277;
    uint64_t v248 = v279;
    v249 = v278;
    sub_1A4CA4490(1, v239, v241, v238, v237, v252, v253, v224, (uint64_t)v280, v223);
    LODWORD(v240) = v280[0];
    LODWORD(v239) = v280[8];
    uint64_t v237 = v282;
    uint64_t v238 = v281;
    uint64_t v225 = v284;
    uint64_t v226 = v283;
    LODWORD(v253) = v285;
    uint64_t v252 = v286;
    uint64_t v244 = v287;
    LODWORD(v243) = v288;
    uint64_t v241 = v290;
    uint64_t v242 = v289;
    sub_1A4CA4490(2, v235, v236, v234, v233, v254, v255, v222, (uint64_t)v291, v221);
    uint64_t v106 = v228 + v227;
    if (!__OFADD__(v228, v227)) {
      break;
    }
    __break(1u);
  }
  uint64_t v107 = v263;
  uint64_t v108 = (_OWORD *)(v263 + 424);
  uint64_t v254 = v299;
  uint64_t v255 = v300;
  LODWORD(v236) = v298;
  uint64_t v234 = v296;
  uint64_t v235 = v297;
  LODWORD(v233) = v295;
  uint64_t v227 = v293;
  uint64_t v228 = v294;
  long long v224 = v292;
  LODWORD(v223) = v291[8];
  LODWORD(v222) = v291[0];
  sub_1A4CA4490(3, 0, v106, 0, 0, v256, v257, v220, (uint64_t)v301, v219);
  char v109 = v301[0];
  char v110 = v301[8];
  long long v257 = v302;
  uint64_t v256 = v303;
  char v111 = v305;
  uint64_t v220 = v306;
  uint64_t v221 = v304;
  uint64_t v219 = v307;
  int v215 = v308;
  uint64_t v213 = v310;
  uint64_t v214 = v309;
  sub_1A4CA4490(4, v231, v232, v230, v229, v217, v216, v218, (uint64_t)v311, v267);
  uint64_t v112 = v247;
  *(void *)uint64_t v107 = v245;
  *(void *)(v107 + _Block_object_dispose(&STACK[0x10D0], 8) = v112;
  *(void *)(v107 + 16) = v246;
  *(unsigned char *)(v107 + 24) = v266;
  *(unsigned char *)(v107 + 32) = (_BYTE)v265;
  uint64_t v113 = v262;
  *(void *)(v107 + 40) = v264;
  *(void *)(v107 + 4_Block_object_dispose(&STACK[0x10D0], 8) = v113;
  uint64_t v114 = v260;
  *(void *)(v107 + 56) = v261;
  *(void *)(v107 + 64) = v114;
  *(unsigned char *)(v107 + 72) = (_BYTE)v259;
  uint64_t v115 = v251;
  *(void *)(v107 + 80) = v258;
  *(void *)(v107 + 8_Block_object_dispose(&STACK[0x10D0], 8) = v115;
  *(unsigned char *)(v107 + 96) = (_BYTE)v250;
  uint64_t v116 = v248;
  *(void *)(v107 + 104) = v249;
  *(void *)(v107 + 112) = v116;
  *(unsigned char *)(v107 + 120) = v240;
  *(unsigned char *)(v107 + 12_Block_object_dispose(&STACK[0x10D0], 8) = v239;
  uint64_t v117 = v237;
  *(void *)(v107 + 136) = v238;
  *(void *)(v107 + 144) = v117;
  uint64_t v118 = v225;
  *(void *)(v107 + 152) = v226;
  *(void *)(v107 + 160) = v118;
  LOBYTE(v11_Block_object_dispose(&STACK[0x10D0], 8) = v311[0];
  *(unsigned char *)(v107 + 16_Block_object_dispose(&STACK[0x10D0], 8) = v253;
  char v119 = v311[8];
  *(void *)(v107 + 176) = v252;
  char v120 = v314;
  *(void *)(v107 + 184) = v244;
  char v121 = v316;
  *(unsigned char *)(v107 + 192) = v243;
  uint64_t v122 = v241;
  *(void *)(v107 + 200) = v242;
  *(void *)(v107 + 20_Block_object_dispose(&STACK[0x10D0], 8) = v122;
  *(unsigned char *)(v107 + 216) = v222;
  *(unsigned char *)(v107 + 224) = v223;
  *(_OWORD *)(v107 + 232) = v224;
  uint64_t v123 = v228;
  *(void *)(v107 + 24_Block_object_dispose(&STACK[0x10D0], 8) = v227;
  *(void *)(v107 + 256) = v123;
  *(unsigned char *)(v107 + 264) = v233;
  uint64_t v124 = v235;
  *(void *)(v107 + 272) = v234;
  *(void *)(v107 + 280) = v124;
  *(unsigned char *)(v107 + 28_Block_object_dispose(&STACK[0x10D0], 8) = v236;
  uint64_t v125 = v255;
  *(void *)(v107 + 296) = v254;
  *(void *)(v107 + 304) = v125;
  *(unsigned char *)(v107 + 312) = v109;
  *(unsigned char *)(v107 + 320) = v110;
  *(_OWORD *)(v107 + 32_Block_object_dispose(&STACK[0x10D0], 8) = v257;
  uint64_t v126 = v221;
  *(void *)(v107 + 344) = v256;
  *(void *)(v107 + 352) = v126;
  *(unsigned char *)(v107 + 360) = v111;
  uint64_t v127 = v219;
  *(void *)(v107 + 36_Block_object_dispose(&STACK[0x10D0], 8) = v220;
  *(void *)(v107 + 376) = v127;
  *(unsigned char *)(v107 + 384) = v215;
  uint64_t v128 = v213;
  *(void *)(v107 + 392) = v214;
  *(void *)(v107 + 400) = v128;
  *(unsigned char *)(v107 + 40_Block_object_dispose(&STACK[0x10D0], 8) = v118;
  *(unsigned char *)(v107 + 416) = v119;
  long long v129 = v313;
  *uint64_t v108 = v312;
  *(_OWORD *)(v107 + 440) = v129;
  *(unsigned char *)(v107 + 456) = v120;
  *(_OWORD *)(v107 + 464) = v315;
  *(unsigned char *)(v107 + 480) = v121;
  *(_OWORD *)(v107 + 48_Block_object_dispose(&STACK[0x10D0], 8) = v317;
  return sub_1A4B0BDA0((uint64_t)v318);
}

unint64_t sub_1A4C93C14()
{
  unint64_t result = qword_1E965B518;
  if (!qword_1E965B518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B518);
  }
  return result;
}

unint64_t sub_1A4C93C68()
{
  unint64_t result = qword_1E965B4E8;
  if (!qword_1E965B4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B4E8);
  }
  return result;
}

unint64_t sub_1A4C93CBC()
{
  unint64_t result = qword_1E965B500;
  if (!qword_1E965B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B500);
  }
  return result;
}

uint64_t CountStatistics.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  unint64_t v2 = *(void *)(v0 + 88);
  char v3 = *(unsigned char *)(v0 + 96);
  char v4 = *(unsigned char *)(v0 + 72);
  unint64_t v8 = *(void *)(v0 + 184);
  uint64_t v9 = *(void *)(v0 + 176);
  char v5 = *(unsigned char *)(v0 + 192);
  char v7 = *(unsigned char *)(v0 + 168);
  unint64_t v12 = *(void *)(v0 + 280);
  uint64_t v13 = *(void *)(v0 + 272);
  char v10 = *(unsigned char *)(v0 + 288);
  char v11 = *(unsigned char *)(v0 + 264);
  unint64_t v16 = *(void *)(v0 + 376);
  uint64_t v17 = *(void *)(v0 + 368);
  char v14 = *(unsigned char *)(v0 + 384);
  char v15 = *(unsigned char *)(v0 + 360);
  unint64_t v20 = *(void *)(v0 + 472);
  uint64_t v21 = *(void *)(v0 + 464);
  char v18 = *(unsigned char *)(v0 + 480);
  char v19 = *(unsigned char *)(v0 + 456);
  uint64_t v22 = sub_1A4CA0568();
  sub_1A4CBB0FC();
  sub_1A4CA1C50(v3);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA8A18(v4, v1, v2);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA0568();
  sub_1A4CBB0FC();
  sub_1A4CA1C50(v5);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA8A18(v7, v9, v8);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA0568();
  sub_1A4CBB0FC();
  sub_1A4CA1C50(v10);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA8A18(v11, v13, v12);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA0568();
  sub_1A4CBB0FC();
  sub_1A4CA1C50(v14);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA8A18(v15, v17, v16);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA0568();
  sub_1A4CBB0FC();
  sub_1A4CA1C50(v18);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CA8A18(v19, v21, v20);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1A4C9411C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CountStatistics.init(from:)(a1, a2);
}

unint64_t sub_1A4C94138()
{
  unint64_t result = qword_1E965B4D0;
  if (!qword_1E965B4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B4D0);
  }
  return result;
}

unint64_t sub_1A4C94190()
{
  unint64_t result = qword_1E965D870;
  if (!qword_1E965D870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965D870);
  }
  return result;
}

unint64_t sub_1A4C941E8()
{
  unint64_t result = qword_1E965B510;
  if (!qword_1E965B510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B510);
  }
  return result;
}

unint64_t sub_1A4C94240()
{
  unint64_t result = qword_1E965B508;
  if (!qword_1E965B508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B508);
  }
  return result;
}

unint64_t sub_1A4C94298()
{
  unint64_t result = qword_1E965D878;
  if (!qword_1E965D878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965D878);
  }
  return result;
}

unint64_t sub_1A4C942F0()
{
  unint64_t result = qword_1E965B4E0;
  if (!qword_1E965B4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B4E0);
  }
  return result;
}

unint64_t sub_1A4C94348()
{
  unint64_t result = qword_1E965B4D8;
  if (!qword_1E965B4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B4D8);
  }
  return result;
}

unint64_t sub_1A4C943A0()
{
  unint64_t result = qword_1E965D880;
  if (!qword_1E965D880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965D880);
  }
  return result;
}

unint64_t sub_1A4C943F8()
{
  unint64_t result = qword_1E965B4F8;
  if (!qword_1E965B4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B4F8);
  }
  return result;
}

unint64_t sub_1A4C94450()
{
  unint64_t result = qword_1E965B4F0;
  if (!qword_1E965B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B4F0);
  }
  return result;
}

unint64_t sub_1A4C944A8()
{
  unint64_t result = qword_1E965D888;
  if (!qword_1E965D888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965D888);
  }
  return result;
}

unint64_t sub_1A4C94500()
{
  unint64_t result = qword_1E965B4C8;
  if (!qword_1E965B4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B4C8);
  }
  return result;
}

unint64_t sub_1A4C94558()
{
  unint64_t result = qword_1E965B4C0;
  if (!qword_1E965B4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B4C0);
  }
  return result;
}

void *initializeWithCopy for CountStatistics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F8uLL);
}

uint64_t getEnumTagSinglePayload for CountStatistics(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 504)) {
    return (*(_DWORD *)a1 + 251);
  }
  if (*(unsigned __int8 *)(a1 + 24) <= 5u) {
    int v3 = 5;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 24);
  }
  int v4 = v3 - 6;
  if (*(unsigned __int8 *)(a1 + 24) < 5u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CountStatistics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 24_Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 16_Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 8_Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(_OWORD *)(result + 48_Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 40_Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 32_Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 504) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 504) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics()
{
  return &type metadata for CountStatistics;
}

unsigned char *initializeBufferWithCopyOfBuffer for SyncCountType(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CountStatistics.RootKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CountStatistics.RootKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A4C94848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics.RootKeys()
{
  return &type metadata for CountStatistics.RootKeys;
}

uint64_t getEnumTagSinglePayload for CountStatistics.SyncStoreCountKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CountStatistics.SyncStoreCountKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A4C949E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_1A4C94A08(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1A4C94A10(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics.SyncStoreCountKeys()
{
  return &type metadata for CountStatistics.SyncStoreCountKeys;
}

uint64_t getEnumTagSinglePayload for SyncCountType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CountStatistics.ServerZoneKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A4C94B84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics.ServerZoneKeys()
{
  return &type metadata for CountStatistics.ServerZoneKeys;
}

uint64_t getEnumTagSinglePayload for CountStatistics.ServerCountKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CountStatistics.ServerCountKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A4C94D18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1A4C94D40(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CountStatistics.ServerCountKeys()
{
  return &type metadata for CountStatistics.ServerCountKeys;
}

id sub_1A4C94EC0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1A4B0E048(&qword_1E965B568);
  MEMORY[0x1F4188790](v5 - 8);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = a1;
  sub_1A4C95004(a3, (uint64_t)v7);

  uint64_t v9 = sub_1A4CBAEAC();
  uint64_t v10 = *(void *)(v9 - 8);
  char v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
  {
    char v11 = (void *)sub_1A4CBAE6C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }

  return v11;
}

uint64_t sub_1A4C95004@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A4B0E048(&qword_1E965B568);
  MEMORY[0x1F4188790](v5 - 8);
  BOOL v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + *a1))
  {
    uint64_t v8 = sub_1A4CBAEAC();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(v7, 1, 1, v8);
    sub_1A4C97534();
    sub_1A4CBB51C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      uint64_t v11 = a2;
      uint64_t v12 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
      uint64_t v11 = a2;
      uint64_t v12 = 0;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10)(v11, v12, 1, v8);
  }
  else
  {
    uint64_t v13 = sub_1A4CBAEAC();
    char v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a2, 1, 1, v13);
  }
}

uint64_t sub_1A4C95228()
{
  id v1 = objc_msgSend(self, sel_sharedFeatureFlags);
  unsigned int v2 = objc_msgSend(v1, sel_isMessagesIniCloudVersion2);

  if (v2)
  {
    if (objc_msgSend(v0, sel_syncStatus) == (id)1) {
      return objc_msgSend(v0, sel_syncingFailed) ^ 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    switch(*((unsigned char *)v0 + OBJC_IVAR___IMCloudKitSyncState_syncState))
    {
      case 5:
        swift_bridgeObjectRelease();
        uint64_t result = 1;
        break;
      default:
        char v4 = sub_1A4CBB5EC();
        swift_bridgeObjectRelease();
        if (v4)
        {
          uint64_t result = 1;
        }
        else
        {
          uint64_t result = (uint64_t)objc_msgSend(v0, sel_syncControllerSyncState);
          if (result) {
            return objc_msgSend(v0, sel_syncingFailed) ^ 1;
          }
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1A4C953F8()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___IMCloudKitSyncState_syncState);
  char v2 = 1;
  switch(v1)
  {
    case 4:
      break;
    default:
      char v2 = sub_1A4CBB5EC();
      break;
  }
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A4C9552C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___IMCloudKitSyncState_syncState);
  char v2 = 1;
  switch(v1)
  {
    case 3:
LABEL_8:
      swift_bridgeObjectRelease();
      break;
    default:
      char v3 = sub_1A4CBB5EC();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0)
      {
        char v2 = 1;
        switch((int)v1)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 5:
            char v4 = sub_1A4CBB5EC();
            swift_bridgeObjectRelease();
            if ((v4 & 1) == 0)
            {
              char v2 = 1;
              switch((int)v1)
              {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                  char v2 = sub_1A4CBB5EC();
                  goto LABEL_8;
                case 5:
                  goto LABEL_8;
                default:
                  goto LABEL_10;
              }
            }
            break;
          case 4:
            goto LABEL_8;
          default:
LABEL_10:
            JUMPOUT(0);
        }
      }
      char v2 = 1;
      break;
  }
  return v2 & 1;
}

uint64_t sub_1A4C95838()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR___IMCloudKitSyncState_syncState);
  char v2 = 1;
  switch(v1)
  {
    case 2:
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    default:
      char v3 = sub_1A4CBB5EC();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0)
      {
        char v2 = 1;
        switch((int)v1)
        {
          case 0:
          case 1:
          case 2:
          case 4:
          case 5:
            char v4 = sub_1A4CBB5EC();
            swift_bridgeObjectRelease();
            if ((v4 & 1) == 0)
            {
              char v2 = 1;
              switch((int)v1)
              {
                case 0:
                case 1:
                case 2:
                case 3:
                case 5:
                  char v5 = sub_1A4CBB5EC();
                  swift_bridgeObjectRelease();
                  if ((v5 & 1) == 0)
                  {
                    char v2 = 1;
                    switch((int)v1)
                    {
                      case 0:
                      case 1:
                      case 2:
                      case 3:
                      case 4:
                        char v2 = sub_1A4CBB5EC();
                        goto LABEL_10;
                      case 5:
                        goto LABEL_10;
                      default:
                        goto LABEL_12;
                    }
                  }
                  goto LABEL_7;
                case 4:
                  goto LABEL_10;
                default:
                  goto LABEL_12;
              }
            }
            break;
          case 3:
            goto LABEL_10;
          default:
LABEL_12:
            JUMPOUT(0);
        }
      }
LABEL_7:
      char v2 = 1;
      break;
  }
  return v2 & 1;
}

id sub_1A4C95C74()
{
  id result = objc_msgSend(v0, sel_isSyncingAvailable);
  if (result)
  {
    if ((objc_msgSend(v0, sel_isSyncingEnabled) & 1) != 0
      || objc_msgSend(v0, sel_changingEnabledState) == (id)1)
    {
      return 0;
    }
    else
    {
      return (id)(objc_msgSend(v0, sel_changingEnabledState) != (id)2);
    }
  }
  return result;
}

id sub_1A4C95D20()
{
  id result = objc_msgSend(v0, sel_isSyncingEnabled);
  if (result)
  {
    if ((objc_msgSend(v0, sel_isSyncing) & 1) != 0
      || objc_msgSend(v0, sel_changingEnabledState) == (id)1
      || objc_msgSend(v0, sel_changingEnabledState) == (id)2)
    {
      return 0;
    }
    else
    {
      return (id)(objc_msgSend(v0, sel_isDisablingDevices) ^ 1);
    }
  }
  return result;
}

uint64_t sub_1A4C95E54()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_changingEnabledState);
  if (v2 != (id)2)
  {
    if (v2 == (id)1)
    {
      unsigned int v3 = 1;
      unsigned __int8 v20 = 1;
      goto LABEL_13;
    }
    if (v2)
    {
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v4, (uint64_t)qword_1E9660AD0);
      char v5 = sub_1A4CBB01C();
      os_log_type_t v6 = sub_1A4CBB26C();
      if (os_log_type_enabled(v5, v6))
      {
        BOOL v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v7 = 0;
        _os_log_impl(&dword_1A4AF7000, v5, v6, "Encountered unnknown changing enabled state setting enabled to false", v7, 2u);
        MEMORY[0x1A6264920](v7, -1, -1);
      }
    }
    else if (!objc_msgSend(v0, sel_isDisablingDevices))
    {
      unsigned int v3 = objc_msgSend(v0, sel_isSyncingEnabled);
      unsigned __int8 v20 = v3;
      goto LABEL_13;
    }
  }
  unsigned int v3 = 0;
  unsigned __int8 v20 = 0;
LABEL_13:
  if (qword_1E965B478 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v8, (uint64_t)qword_1E9660AD0);
  id v9 = v1;
  uint64_t v10 = sub_1A4CBB01C();
  os_log_type_t v11 = sub_1A4CBB28C();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v19[0] = v14;
    *(_DWORD *)uint64_t v12 = 136315394;
    if (v3) {
      uint64_t v15 = 5457241;
    }
    else {
      uint64_t v15 = 20302;
    }
    if (v3) {
      unint64_t v16 = 0xE300000000000000;
    }
    else {
      unint64_t v16 = 0xE200000000000000;
    }
    sub_1A4B0BCCC(v15, v16, v19);
    sub_1A4CBB36C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    id v17 = v9;
    sub_1A4CBB36C();
    *uint64_t v13 = v9;

    _os_log_impl(&dword_1A4AF7000, v10, v11, "isSyncEnabledForDisplayOnly = %s, State: %@", (uint8_t *)v12, 0x16u);
    sub_1A4B0E048(&qword_1E965B5C0);
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A6264920](v14, -1, -1);
    MEMORY[0x1A6264920](v12, -1, -1);
  }
  else
  {
  }
  swift_beginAccess();
  return v20;
}

void sub_1A4C96228()
{
  uint64_t v1 = (char *)objc_msgSend(v0, sel_syncJobState);
  if ((unint64_t)(v1 - 1) < 3)
  {
LABEL_5:
    char v5 = (void *)sub_1A4CBB0BC();
    os_log_type_t v6 = (void *)sub_1A4CBB0BC();
    BOOL v7 = (void *)sub_1A4CBB0BC();
    id v8 = IMCoreLocalizedString(v5, v6);

    if (v8)
    {
      sub_1A4CBB0CC();
    }
    return;
  }
  if ((unint64_t)(v1 - 4) >= 2)
  {
    if (v1
      || (objc_msgSend(v0, sel_isBetweenInitialAndFullSync) & 1) == 0
      && (!objc_msgSend(v0, sel_hasNotSyncedInLastSevenDays)
       || objc_msgSend(v0, sel_accountStatus) != (id)2 && !objc_msgSend(v0, sel_accountNeedsRepair)))
    {
      return;
    }
    goto LABEL_5;
  }
  id v2 = objc_msgSend(v0, sel_statistics);
  if (v2)
  {
    unsigned int v3 = v2;
    uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_remainingMessagesCount);
  }
  else
  {
    uint64_t v4 = 0;
  }
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v4);
  id v10 = objc_msgSend(self, sel___ck_defaultNumberFormatter);
  id v11 = objc_msgSend(v10, sel_stringFromNumber_, v9);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_1A4CBB0CC();
    uint64_t v15 = v14;

    if (v4 >= 1)
    {
      unint64_t v16 = (void *)sub_1A4CBB0BC();
      id v17 = (void *)sub_1A4CBB0BC();
      char v18 = (void *)sub_1A4CBB0BC();
      id v19 = IMCoreLocalizedString(v16, v17);

      if (v19)
      {
        sub_1A4CBB0CC();

        sub_1A4B0E048(&qword_1E965D940);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1A4CD16B0;
        uint64_t v21 = MEMORY[0x1E4FBB5C8];
        *(void *)(v20 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v20 + 64) = v21;
        *(void *)(v20 + 32) = v4;
        *(void *)(v20 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v20 + 104) = sub_1A4C974E0();
        *(void *)(v20 + 72) = v13;
        *(void *)(v20 + 80) = v15;
        sub_1A4CBB0DC();

        swift_bridgeObjectRelease();
      }
      else
      {
        __break(1u);
      }
      return;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = (void *)sub_1A4CBB0BC();
  uint64_t v23 = (void *)sub_1A4CBB0BC();
  uint64_t v24 = (void *)sub_1A4CBB0BC();
  id v25 = IMCoreLocalizedString(v22, v23);

  if (v25)
  {
    sub_1A4CBB0CC();
  }
  else
  {
  }
}

id sub_1A4C96720(uint64_t a1, uint64_t a2, id a3)
{
  uint64_t v4 = v3;
  id v7 = objc_msgSend(v4, sel_errors);
  if (v7)
  {
    sub_1A4B0E048(&qword_1E965B4A8);
    uint64_t v8 = sub_1A4CBB15C();

    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      for (uint64_t i = 0; v9 != i; ++i)
      {
        id v7 = *(id *)(v8 + 8 * i + 32);
        id v11 = v7;
        uint64_t v12 = (void *)sub_1A4CBAE1C();
        id v13 = objc_msgSend(v12, sel_domain);
        uint64_t v14 = sub_1A4CBB0CC();
        uint64_t v16 = v15;

        if (v14 == a1 && v16 == a2)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v18 = sub_1A4CBB5EC();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {

            continue;
          }
        }
        id v19 = objc_msgSend(v12, sel_code);

        if (v19 == a3)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

uint64_t IMCloudKitSyncState.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = 7104878;
  uint64_t v3 = sub_1A4B0E048(&qword_1E965B568);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  os_log_type_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v54 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v54 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v54 - v13;
  objc_msgSend(v1, sel_changingEnabledState);
  id v15 = (id)IMStringFromCloudKitChangingSettingState();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v66 = sub_1A4CBB0CC();
    unint64_t v67 = v17;
  }
  else
  {
    uint64_t v66 = 7104878;
    unint64_t v67 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncType);
  id v18 = (id)IMStringFromIMCloudKitSyncType();
  if (v18)
  {
    id v19 = v18;
    uint64_t v72 = sub_1A4CBB0CC();
    unint64_t v73 = v20;
  }
  else
  {
    uint64_t v72 = 7104878;
    unint64_t v73 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncStatus);
  id v21 = (id)IMStringFromIMCloudKitSyncStatus();
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v70 = sub_1A4CBB0CC();
    unint64_t v71 = v23;
  }
  else
  {
    uint64_t v70 = 7104878;
    unint64_t v71 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncJobState);
  id v24 = (id)IMStringFromIMCloudKitSyncJobState();
  if (v24)
  {
    id v25 = v24;
    uint64_t v68 = sub_1A4CBB0CC();
    unint64_t v69 = v26;
  }
  else
  {
    uint64_t v68 = 7104878;
    unint64_t v69 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_accountStatus);
  id v27 = (id)IMStringFromIMCloudKitAccountStatus();
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v64 = sub_1A4CBB0CC();
    unint64_t v65 = v29;
  }
  else
  {
    uint64_t v64 = 7104878;
    unint64_t v65 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncControllerSyncState);
  id v30 = (id)IMStringFromIMCloudKitSyncControllerSyncState();
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v62 = sub_1A4CBB0CC();
    unint64_t v63 = v32;
  }
  else
  {
    uint64_t v62 = 7104878;
    unint64_t v63 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncControllerSyncType);
  id v33 = (id)IMStringFromIMCloudKitSyncControllerSyncType();
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v60 = sub_1A4CBB0CC();
    unint64_t v61 = v35;
  }
  else
  {
    uint64_t v60 = 7104878;
    unint64_t v61 = 0xE300000000000000;
  }
  objc_msgSend(v1, sel_syncControllerRecordType);
  id v36 = (id)IMStringFromIMCloudKitSyncControllerSyncRecordType();
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v58 = sub_1A4CBB0CC();
    unint64_t v59 = v38;
  }
  else
  {
    uint64_t v58 = 7104878;
    unint64_t v59 = 0xE300000000000000;
  }
  id v39 = objc_msgSend(v1, sel_exitDate);
  if (v39)
  {
    char v40 = v39;
    sub_1A4CBAE8C();

    uint64_t v41 = sub_1A4CBAEAC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v12, 0, 1, v41);
  }
  else
  {
    uint64_t v41 = sub_1A4CBAEAC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v12, 1, 1, v41);
  }
  sub_1A4C97390((uint64_t)v12, (uint64_t)v14);
  sub_1A4CBAEAC();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  if (v43(v14, 1, v41) == 1)
  {
    sub_1A4B0E2A4((uint64_t)v14, &qword_1E965B568);
    unint64_t v56 = 0xE300000000000000;
    uint64_t v55 = 7104878;
  }
  else
  {
    uint64_t v55 = sub_1A4CBAE4C();
    unint64_t v56 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v41);
  }
  id v45 = objc_msgSend(v1, sel_lastSyncDate);
  if (v45)
  {
    uint64_t v46 = v45;
    sub_1A4CBAE8C();

    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v47 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v6, v47, 1, v41);
  sub_1A4C97390((uint64_t)v6, (uint64_t)v9);
  if (v43(v9, 1, v41) == 1)
  {
    sub_1A4B0E2A4((uint64_t)v9, &qword_1E965B568);
    uint64_t v54 = 7104878;
  }
  else
  {
    uint64_t v54 = sub_1A4CBAE4C();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v41);
  }
  id v48 = objc_msgSend(v1, sel_errors, v54, v55, v56);
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = sub_1A4B0E048(&qword_1E965B4A8);
    uint64_t v51 = sub_1A4CBB15C();

    uint64_t v2 = MEMORY[0x1A6262680](v51, v50);
    unint64_t v57 = v52;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v57 = 0xE300000000000000;
  }
  uint64_t v75 = 0;
  unint64_t v76 = 0xE000000000000000;
  sub_1A4CBB43C();
  sub_1A4CBB0FC();
  uint64_t v74 = v2;
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  objc_msgSend(v1, sel_isDisablingDevices);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  objc_msgSend(v1, sel_hasExited);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  return v75;
}

uint64_t sub_1A4C97390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4B0E048(&qword_1E965B568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void __swiftcall IMCloudKitSyncState.init()(IMCloudKitSyncState *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMCloudKitSyncState.init()()
{
}

unint64_t type metadata accessor for IMCloudKitSyncState()
{
  unint64_t result = qword_1E965D938;
  if (!qword_1E965D938)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E965D938);
  }
  return result;
}

uint64_t sub_1A4C974D0(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A4C974E0()
{
  unint64_t result = qword_1E965D948;
  if (!qword_1E965D948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965D948);
  }
  return result;
}

unint64_t sub_1A4C97534()
{
  unint64_t result = qword_1E965B470;
  if (!qword_1E965B470)
  {
    sub_1A4CBAEAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965B470);
  }
  return result;
}

uint64_t sub_1A4C9758C(void *a1)
{
  if (objc_msgSend(a1, sel_accountNeedsRepair) && objc_msgSend(a1, sel_accountStatus) != (id)4
    || objc_msgSend(a1, sel_accountStatus) == (id)2)
  {

    return 0;
  }
  else if (objc_msgSend(a1, sel_isSyncingEnabled))
  {
    if (objc_msgSend(a1, sel_isSyncingPaused))
    {

      return 2;
    }
    else
    {
      sub_1A4CBB0CC();
      uint64_t v3 = (void *)sub_1A4CBB0BC();
      id v4 = objc_msgSend(a1, sel_syncErrorWithDomain_code_, v3, 4);

      if (v4)
      {

        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1A4CBB0CC();
        uint64_t v5 = (void *)sub_1A4CBB0BC();
        id v6 = objc_msgSend(a1, sel_syncErrorWithDomain_code_, v5, 5);

        if (v6)
        {

          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1A4CBB0CC();
          uint64_t v7 = (void *)sub_1A4CBB0BC();
          id v8 = objc_msgSend(a1, sel_syncErrorWithDomain_code_, v7, 6);

          if (v8)
          {

            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            swift_bridgeObjectRelease();
            if (objc_msgSend(a1, sel_syncingFailed)
              || (objc_msgSend(a1, sel_isSyncing) & 1) == 0)
            {

              return 6;
            }
            else
            {
              unsigned int v9 = objc_msgSend(a1, sel_hasNotSyncedInLastSevenDays);

              if (v9) {
                return 8;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
  else
  {

    return 1;
  }
}

id sub_1A4C977C0(char a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 1:
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v21, (uint64_t)qword_1E9660AD0);
      uint64_t v7 = sub_1A4CBB01C();
      os_log_type_t v22 = sub_1A4CBB28C();
      if (!os_log_type_enabled(v7, v22)) {
        goto LABEL_22;
      }
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v55 = v24;
      *(_DWORD *)unint64_t v23 = 136315138;
      uint64_t v54 = sub_1A4B0BCCC(0x44676E69636E7973, 0xEF64656C62617369, &v55);
      sub_1A4CBB36C();
      _os_log_impl(&dword_1A4AF7000, v7, v22, "Creating Hidden SyncProgress: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6264920](v24, -1, -1);
      uint64_t v13 = v23;
      goto LABEL_21;
    case 2:
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v26, (uint64_t)qword_1E9660AD0);
      id v27 = sub_1A4CBB01C();
      os_log_type_t v28 = sub_1A4CBB28C();
      if (os_log_type_enabled(v27, v28))
      {
        unint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v29 = 0;
        _os_log_impl(&dword_1A4AF7000, v27, v28, "Creating Paused SyncProgress", v29, 2u);
        MEMORY[0x1A6264920](v29, -1, -1);
      }

      id v30 = objc_allocWithZone((Class)IMCloudKitSyncProgress);
      uint64_t v31 = 1;
      goto LABEL_48;
    case 3:
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v32, (uint64_t)qword_1E9660AD0);
      id v33 = sub_1A4CBB01C();
      os_log_type_t v34 = sub_1A4CBB28C();
      if (os_log_type_enabled(v33, v34))
      {
        unint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v55 = v36;
        *(_DWORD *)unint64_t v35 = 136315138;
        uint64_t v54 = sub_1A4B0BCCC(0xD000000000000013, 0x80000001A4CF71E0, &v55);
        sub_1A4CBB36C();
        _os_log_impl(&dword_1A4AF7000, v33, v34, "Creating Error SyncProgress %s", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6264920](v36, -1, -1);
        MEMORY[0x1A6264920](v35, -1, -1);
      }

      id v37 = objc_allocWithZone((Class)IMCloudKitSyncProgress);
      return objc_msgSend(v37, sel_initWithType_syncState_syncStatistics_, 5, a2, a3, v54, v55);
    case 4:
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v38, (uint64_t)qword_1E9660AD0);
      id v39 = sub_1A4CBB01C();
      os_log_type_t v40 = sub_1A4CBB28C();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v55 = v42;
        *(_DWORD *)uint64_t v41 = 136315138;
        uint64_t v54 = sub_1A4B0BCCC(0xD000000000000015, 0x80000001A4CF71C0, &v55);
        sub_1A4CBB36C();
        _os_log_impl(&dword_1A4AF7000, v39, v40, "Creating Error SyncProgress %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6264920](v42, -1, -1);
        MEMORY[0x1A6264920](v41, -1, -1);
      }

      id v43 = objc_allocWithZone((Class)IMCloudKitSyncProgress);
      return objc_msgSend(v43, sel_initWithType_syncState_syncStatistics_, 4, a2, a3, v54, v55);
    case 5:
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v44, (uint64_t)qword_1E9660AD0);
      id v45 = sub_1A4CBB01C();
      os_log_type_t v46 = sub_1A4CBB28C();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        uint64_t v55 = v48;
        *(_DWORD *)uint64_t v47 = 136315138;
        uint64_t v54 = sub_1A4B0BCCC(0x4B676E69646E6570, 0xEE006C6C6F527965, &v55);
        sub_1A4CBB36C();
        _os_log_impl(&dword_1A4AF7000, v45, v46, "Creating Error SyncProgress %s", v47, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6264920](v48, -1, -1);
        MEMORY[0x1A6264920](v47, -1, -1);
      }

      id v49 = objc_allocWithZone((Class)IMCloudKitSyncProgress);
      return objc_msgSend(v49, sel_initWithType_syncState_syncStatistics_, 6, a2, a3, v54, v55);
    case 6:
    case 7:
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v6, (uint64_t)qword_1E9660AD0);
      uint64_t v7 = sub_1A4CBB01C();
      os_log_type_t v8 = sub_1A4CBB28C();
      if (os_log_type_enabled(v7, v8))
      {
        unsigned int v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v10 = swift_slowAlloc();
        *(_DWORD *)unsigned int v9 = 136315138;
        uint64_t v55 = v10;
        if (a1 == 7) {
          uint64_t v11 = 0xD000000000000012;
        }
        else {
          uint64_t v11 = 0x6C696146636E7973;
        }
        if (a1 == 7) {
          unint64_t v12 = 0x80000001A4CF71A0;
        }
        else {
          unint64_t v12 = 0xEA00000000006465;
        }
        uint64_t v54 = sub_1A4B0BCCC(v11, v12, &v55);
        sub_1A4CBB36C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A4AF7000, v7, v8, "Creating Hidden SyncProgress %s", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6264920](v10, -1, -1);
        uint64_t v13 = v9;
LABEL_21:
        MEMORY[0x1A6264920](v13, -1, -1);
      }
LABEL_22:

      id v25 = objc_allocWithZone((Class)IMCloudKitSyncProgress);
      return objc_msgSend(v25, sel_initWithType_syncState_syncStatistics_, 2, a2, a3, v54, v55);
    case 8:
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v50, (uint64_t)qword_1E9660AD0);
      uint64_t v51 = sub_1A4CBB01C();
      os_log_type_t v52 = sub_1A4CBB28C();
      if (os_log_type_enabled(v51, v52))
      {
        char v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v53 = 0;
        _os_log_impl(&dword_1A4AF7000, v51, v52, "Creating Sync SyncProgress", v53, 2u);
        MEMORY[0x1A6264920](v53, -1, -1);
      }

      id v30 = objc_allocWithZone((Class)IMCloudKitSyncProgress);
      uint64_t v31 = 0;
LABEL_48:
      id result = objc_msgSend(v30, sel_initWithType_syncState_syncStatistics_, v31, a2, a3);
      break;
    default:
      if (qword_1E965B478 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1A4CBB03C();
      sub_1A4B0C4D8(v14, (uint64_t)qword_1E9660AD0);
      id v15 = sub_1A4CBB01C();
      os_log_type_t v16 = sub_1A4CBB28C();
      if (os_log_type_enabled(v15, v16))
      {
        unint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v55 = v18;
        *(_DWORD *)unint64_t v17 = 136315138;
        uint64_t v54 = sub_1A4B0BCCC(0xD000000000000012, 0x80000001A4CF70E0, &v55);
        sub_1A4CBB36C();
        _os_log_impl(&dword_1A4AF7000, v15, v16, "Creating Error SyncProgress: %s", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A6264920](v18, -1, -1);
        MEMORY[0x1A6264920](v17, -1, -1);
      }

      id v19 = objc_allocWithZone((Class)IMCloudKitSyncProgress);
      id result = objc_msgSend(v19, sel_initWithType_syncState_syncStatistics_, 3, a2, a3, v54, v55);
      break;
  }
  return result;
}

void *sub_1A4C98280(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1A4CBB4CC())
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A6262970](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_serviceName);
      if (v8)
      {
        unsigned int v9 = v8;
        uint64_t v10 = sub_1A4CBB0CC();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1A4CAB59C(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1A4CAB59C((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        id v15 = &v3[2 * v14];
        void v15[4] = v10;
        void v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A4C98768()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for IMServiceReachabilityControllerLiveDelegate()
{
  return self;
}

void *sub_1A4C9879C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1A4B0E048((uint64_t *)&unk_1EB3F1EF0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1A4C98884((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A4C990AC();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1A4C98884(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    id result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

id sub_1A4C98A84()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_1A4CBB0BC();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_serviceWithName_, v0);

  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return (id)v2;
  }
  uint64_t v14 = sub_1A4CBB0CC();
  swift_bridgeObjectRetain();
  sub_1A4CBB3FC();
  id result = objc_msgSend(v1, sel_serviceProperties);
  if (result)
  {
    int64_t v4 = result;
    uint64_t v5 = sub_1A4CBB0AC();
    swift_bridgeObjectRelease();

    if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1A4B0E08C((uint64_t)v15), (v7 & 1) != 0))
    {
      sub_1A4B0E248(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v16);
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1A4B0E198((uint64_t)v15);
    if (*((void *)&v17 + 1))
    {
      sub_1A4B0E048((uint64_t *)&unk_1E965B578);
      if (swift_dynamicCast())
      {
        v15[0] = v2;
        uint64_t v8 = *(void *)(v14 + 16);
        if (v8)
        {
          id v13 = v1;
          unint64_t v9 = self;
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v8; ++i)
          {
            swift_bridgeObjectRetain();
            uint64_t v11 = (void *)sub_1A4CBB09C();
            swift_bridgeObjectRelease();
            id v12 = objc_msgSend(v9, sel_preconditionWithDictionary_, v11);

            if (v12)
            {
              MEMORY[0x1A6262650]();
              if (*(void *)((v15[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15[0] & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
                sub_1A4CBB18C();
              sub_1A4CBB19C();
              sub_1A4CBB17C();
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v2 = v15[0];
          id v1 = v13;
        }
        swift_bridgeObjectRelease();
      }
    }
    else
    {

      sub_1A4B0C5F4((uint64_t)&v16);
    }
    return (id)v2;
  }
  __break(1u);
  return result;
}

void *sub_1A4C98D50()
{
  uint64_t v0 = self;
  id v1 = (void *)sub_1A4CBB0BC();
  id v2 = objc_msgSend(v0, sel_serviceWithInternalName_, v1);

  if (!v2) {
    return 0;
  }
  id v3 = IMPreferredAccountForService(v2);
  int64_t v4 = v3;
  if (!v3)
  {

    return v4;
  }
  id v5 = objc_msgSend(v3, sel_uniqueID);

  if (!v5)
  {

    return 0;
  }
  int64_t v4 = (void *)sub_1A4CBB0CC();

  return v4;
}

uint64_t sub_1A4C98E38(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x1A6262970](v3, a1);
LABEL_9:
        unint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        if (objc_msgSend(v5, sel__isUsableForSending))
        {
          sub_1A4CBB47C();
          sub_1A4CBB49C();
          sub_1A4CBB4AC();
          sub_1A4CBB48C();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {
        }
        ++v3;
        if (v7 == v2) {
          return v9;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_1A4CBB4CC();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1A4C98FA0()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  if (v0)
  {
    id v1 = v0;
    id v2 = objc_msgSend(v0, sel_accountsWithServiceCapability_, *MEMORY[0x1E4F6E080]);

    if (v2)
    {
      sub_1A4B0C510(0, &qword_1E965B678);
      unint64_t v3 = sub_1A4CBB15C();

      unint64_t v4 = sub_1A4C98E38(v3);
      swift_bridgeObjectRelease();
      id v5 = sub_1A4C98280(v4);
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_1A4CB4824((uint64_t)v5);
      swift_bridgeObjectRelease();
      sub_1A4C9879C(v6);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1A4C990AC()
{
  return swift_release();
}

id sub_1A4C990B8()
{
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    id v1 = result;
    id v2 = (void *)sub_1A4CBB0BC();
    id v3 = objc_msgSend(v1, sel_transferForGUID_, v2);

    if (v3)
    {
      id v4 = objc_msgSend(v3, sel_commSafetySensitive);

      return (id)(v4 == (id)1);
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1A4C99178()
{
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    id v1 = result;
    id v2 = (void *)sub_1A4CBB0BC();
    id v3 = objc_msgSend(v1, sel_transferForGUID_, v2);

    if (v3)
    {
      id v4 = objc_msgSend(v3, sel_isAdaptiveImageGlyph);

      id v1 = v3;
    }
    else
    {
      id v4 = 0;
    }

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A4C99238(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_1A4CBB0CC();
  char v3 = v1(v2);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

id sub_1A4C99284(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v13 = sub_1A4CBB0CC();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1A4CBB0AC();
  if (a8)
  {
    uint64_t v17 = sub_1A4CBB0CC();
    a8 = v18;
  }
  else
  {
    uint64_t v17 = 0;
  }
  id v19 = a3;
  id v20 = a1;
  uint64_t v21 = (void *)sub_1A4C99398(v13, v15, a5, a6, v16, v17, a8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v21;
}

uint64_t sub_1A4C99398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v8 = v7;
  uint64_t v11 = (void *)sub_1A4CBB09C();
  id v12 = objc_msgSend(v8, sel_adjustMessageSummaryInfoForSending_, v11);

  sub_1A4CBB0AC();
  uint64_t v13 = (void *)sub_1A4CBB09C();
  os_log_type_t v28 = sub_1A4C99178;
  uint64_t v29 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1A4C99238;
  id v27 = &unk_1EF8E6100;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_release();
  os_log_type_t v28 = sub_1A4C99234;
  uint64_t v29 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1A4C99238;
  id v27 = &unk_1EF8E6240;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_release();
  id v16 = objc_msgSend(v8, sel_backwardCompatibilityStringWithMessageSummaryInfo_isAdaptiveImageGlyphProvider_isCommSafetySensitiveProvider_, v13, v14, v15);
  _Block_release(v14);

  _Block_release(v15);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  unint64_t v18 = (void *)IMCreateSuperFormatStringFromPlainTextString();

  id v19 = (void *)sub_1A4CBB0BC();
  id v20 = objc_msgSend(v8, sel_associatedMessageType);
  uint64_t v21 = (void *)sub_1A4CBB09C();
  swift_bridgeObjectRelease();
  if (a7) {
    a7 = (void *)sub_1A4CBB0BC();
  }
  id v22 = objc_msgSend(self, sel_instantMessageWithAssociatedMessageContent_associatedMessageGUID_associatedMessageType_associatedMessageRange_associatedMessageEmoji_messageSummaryInfo_threadIdentifier_, v18, v19, v20, a3, a4, 0, v21, a7);

  return (uint64_t)v22;
}

unint64_t sub_1A4C996B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A4B0E048(&qword_1E965B680);
  uint64_t v2 = (void *)sub_1A4CBB4FC();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A4AFB26C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    id v12 = (void *)(v2[7] + 16 * result);
    *id v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A4C997D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A4B0E048(&qword_1E965B6C0);
  uint64_t v2 = sub_1A4CBB4FC();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A4C9D904(v6, (uint64_t)v15, &qword_1E965DA48);
    unint64_t result = sub_1A4B0E08C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1A4B0C5E4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A4C99918(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A4B0E048(&qword_1E965B688);
  uint64_t v2 = (void *)sub_1A4CBB4FC();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A4AFB26C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A4C99A34(uint64_t a1)
{
  return sub_1A4B032BC(a1, &qword_1E965DA38);
}

uint64_t sub_1A4C99A40()
{
  uint64_t v0 = sub_1A4CBB03C();
  sub_1A4AFFB14(v0, qword_1E9660AE8);
  sub_1A4B0C4D8(v0, (uint64_t)qword_1E9660AE8);
  sub_1A4CBB00C();
  return sub_1A4CBB02C();
}

uint64_t sub_1A4C99AAC()
{
  type metadata accessor for IMServiceReachabilityControllerLiveDelegate();
  id v0 = objc_msgSend(objc_allocWithZone((Class)IMServiceReachabilityController), sel_initWithDelegate_, swift_allocObject());
  uint64_t result = swift_release();
  qword_1E965B658 = (uint64_t)v0;
  return result;
}

void sub_1A4C99C74(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_msgSend(a1, sel_participants);
  sub_1A4B0C510(0, (unint64_t *)&qword_1E965B670);
  unint64_t v8 = sub_1A4CBB15C();

  sub_1A4C99DEC(v8);
  swift_bridgeObjectRelease();
  char v9 = (void *)sub_1A4CBB14C();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v3, sel_reachabilityContextForChat_, a1);
  void v12[4] = a2;
  v12[5] = a3;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1A4CA66EC;
  uint64_t v12[3] = &unk_1EF8E44C8;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_calculateServiceForSendingToHandles_withContext_completionBlock_, v9, v10, v11);
  _Block_release(v11);
}

uint64_t sub_1A4C99DEC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1A4C9B0CC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v15;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1A6262970](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      id v7 = v6;
      id v8 = [v6 ID];
      uint64_t v9 = sub_1A4CBB0CC();
      uint64_t v11 = v10;

      unint64_t v13 = *(void *)(v15 + 16);
      unint64_t v12 = *(void *)(v15 + 24);
      if (v13 >= v12 >> 1) {
        sub_1A4C9B0CC(v12 > 1, v13 + 1, 1);
      }
      ++v5;
      *(void *)(v15 + 16) = v13 + 1;
      uint64_t v14 = v15 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1A4CBB4CC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t IMServiceReachabilityController.accountsForQuerying.getter()
{
  id v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR___IMServiceReachabilityController_delegate], sel_serviceNamesForSending);
  uint64_t v2 = sub_1A4CBB15C();

  uint64_t v3 = v0;
  uint64_t v4 = sub_1A4C9C234(v2, (uint64_t)v3);
  swift_bridgeObjectRelease();

  return v4;
}

void IMServiceReachabilityController.calculateServiceForSending(toHandles:servicesToAccountIDs:withContext:completionBlock:)(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id), uint64_t a5)
{
  uint64_t v81 = a1;
  uint64_t v82 = a2;
  uint64_t v80 = sub_1A4CBAEDC();
  uint64_t v9 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  char v79 = (char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v85 = a3;
  if (objc_msgSend(a3, sel_shouldForceServerStatusRefresh))
  {
    id v11 = objc_msgSend(v85, sel_chatIdentifier);
    if (v11)
    {
      unint64_t v12 = v11;
      id v13 = objc_msgSend(self, sel_sharedRegistry);
      id v14 = objc_msgSend(v13, sel_existingChatWithChatIdentifier_, v12);

      if (v14)
      {
        unsigned int v15 = objc_msgSend(v14, sel_chatStyle);
        if (v15 == objc_msgSend(v85, sel_chatStyle)) {
          objc_msgSend(v14, sel__resetForceServerStatusRefresh);
        }
      }
    }
  }
  if (!*(void *)(v82 + 16) || !*(void *)(v81 + 16))
  {
    uint64_t v66 = (void *)sub_1A4B032BC(MEMORY[0x1E4FBC860], &qword_1E965B4B8);
    swift_bridgeObjectRetain();
    sub_1A4C9C674(v66, v82);
    swift_bridgeObjectRelease();
    id v67 = objc_allocWithZone(MEMORY[0x1E4F6E960]);
    sub_1A4B0C510(0, &qword_1E965B650);
    uint64_t v68 = (void *)sub_1A4CBB09C();
    swift_bridgeObjectRelease();
    id v85 = objc_msgSend(v67, sel_initAsFinalResult_bestResult_resultsByAccountID_, 1, 0, v68);

    a4(v85);
    id v69 = v85;

    return;
  }
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1A4CBB34C();
  long long v17 = *(void **)&v5[OBJC_IVAR___IMServiceReachabilityController_delegate];
  swift_getObjectType();
  unint64_t v18 = (void *)swift_allocObject();
  v18[2] = v16;
  v18[3] = v5;
  void v18[4] = a4;
  void v18[5] = a5;
  swift_unknownObjectRetain();
  v71[1] = v16;
  swift_retain();
  id v19 = v5;
  swift_retain();
  id v73 = v17;
  id v20 = sub_1A4C9C160((uint64_t)v17, (uint64_t)sub_1A4C9C3A0, (uint64_t)v18);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  id v21 = objc_msgSend(v20, sel_taskID);
  uint64_t v22 = sub_1A4CBB0CC();
  uint64_t v24 = v23;

  uint64_t v77 = v19;
  uint64_t v25 = &v19[OBJC_IVAR___IMServiceReachabilityController_taskIDToTask];
  swift_beginAccess();
  id v26 = v20;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v88 = *(void *)v25;
  *(void *)uint64_t v25 = 0x8000000000000000;
  id v78 = v26;
  sub_1A4C9BFC0((uint64_t)v26, v22, v24, isUniquelyReferenced_nonNull_native, &qword_1E965B6A8);
  *(void *)uint64_t v25 = v88;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v28 = *(void *)(v82 + 64);
  uint64_t v72 = v82 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(v82 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v31 = v30 & v28;
  int64_t v74 = (unint64_t)(v29 + 63) >> 6;
  unint64_t v76 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v75 = v87;
  swift_bridgeObjectRetain();
  int64_t v32 = 0;
  while (v31)
  {
    unint64_t v47 = __clz(__rbit64(v31));
    v31 &= v31 - 1;
    int64_t v84 = v32;
    unint64_t v48 = v47 | (v32 << 6);
LABEL_30:
    uint64_t v53 = 16 * v48;
    uint64_t v54 = (uint64_t *)(*(void *)(v82 + 48) + v53);
    uint64_t v56 = *v54;
    uint64_t v55 = v54[1];
    unint64_t v57 = (uint64_t *)(*(void *)(v82 + 56) + v53);
    uint64_t v58 = v57[1];
    uint64_t v83 = *v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v59 = v79;
    sub_1A4CBAECC();
    uint64_t v60 = sub_1A4CBAEBC();
    uint64_t v62 = v61;
    (*v76)(v59, v80);
    id v63 = objc_msgSend(v85, sel_preconditionsIgnoredForServices);
    if (!v63
      || (uint64_t v64 = v63,
          uint64_t v65 = sub_1A4CBB20C(),
          v64,
          LOBYTE(v64) = sub_1A4C9ABB0(v56, v55, v65),
          swift_bridgeObjectRelease(),
          (v64 & 1) == 0))
    {
      id v33 = (void *)sub_1A4CBB0BC();
      id v34 = objc_msgSend(v73, sel_preconditionsForServiceName_, v33);

      sub_1A4B0C510(0, &qword_1E965B588);
      sub_1A4CBB15C();
    }
    unint64_t v35 = (void *)sub_1A4CBB0BC();
    uint64_t v36 = (void *)sub_1A4CBB0BC();
    sub_1A4B0C510(0, &qword_1E965B588);
    id v37 = (void *)sub_1A4CBB14C();
    swift_bridgeObjectRelease();
    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = v81;
    v38[3] = v60;
    void v38[4] = v62;
    v38[5] = v56;
    uint64_t v39 = v83;
    v38[6] = v55;
    v38[7] = v39;
    id v40 = v85;
    v38[8] = v58;
    v38[9] = v40;
    uint64_t v41 = v77;
    id v42 = v78;
    v38[10] = v77;
    v38[11] = v42;
    v87[2] = sub_1A4C9C3B0;
    v87[3] = v38;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    v87[0] = sub_1A4B02D48;
    v87[1] = &unk_1EF8E6128;
    id v43 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v44 = v41;
    id v45 = v42;
    id v46 = v40;
    swift_release();
    objc_msgSend(v45, sel_submitRequestWithID_serviceName_preconditions_clearanceHandler_, v35, v36, v37, v43);
    _Block_release(v43);

    int64_t v32 = v84;
  }
  int64_t v49 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v49 >= v74) {
    goto LABEL_36;
  }
  unint64_t v50 = *(void *)(v72 + 8 * v49);
  int64_t v51 = v32 + 1;
  if (v50) {
    goto LABEL_29;
  }
  int64_t v51 = v32 + 2;
  if (v32 + 2 >= v74) {
    goto LABEL_36;
  }
  unint64_t v50 = *(void *)(v72 + 8 * v51);
  if (v50) {
    goto LABEL_29;
  }
  int64_t v51 = v32 + 3;
  if (v32 + 3 >= v74) {
    goto LABEL_36;
  }
  unint64_t v50 = *(void *)(v72 + 8 * v51);
  if (v50)
  {
LABEL_29:
    unint64_t v31 = (v50 - 1) & v50;
    int64_t v84 = v51;
    unint64_t v48 = __clz(__rbit64(v50)) + (v51 << 6);
    goto LABEL_30;
  }
  uint64_t v52 = v32 + 4;
  if (v32 + 4 >= v74)
  {
LABEL_36:
    swift_release();
    id v70 = v78;
    objc_msgSend(v78, sel_allRequestsSubmitted);
    swift_release();

    return;
  }
  unint64_t v50 = *(void *)(v72 + 8 * v52);
  if (v50)
  {
    int64_t v51 = v32 + 4;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v51 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      break;
    }
    if (v51 >= v74) {
      goto LABEL_36;
    }
    unint64_t v50 = *(void *)(v72 + 8 * v51);
    ++v52;
    if (v50) {
      goto LABEL_29;
    }
  }
LABEL_38:
  __break(1u);
}

void __swiftcall IMServiceReachabilityController.init()(IMServiceReachabilityController *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMServiceReachabilityController.init()()
{
}

uint64_t sub_1A4C9AAA8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *))
{
  if (objc_msgSend(a1, sel_isFinal))
  {
    swift_beginAccess();
    id v7 = (void *)MEMORY[0x1A62649D0](a2 + 16);
    if (v7)
    {
      id v8 = v7;
      id v9 = objc_msgSend(v7, sel_taskID);
      uint64_t v10 = sub_1A4CBB0CC();
      uint64_t v12 = v11;

      swift_beginAccess();
      id v13 = (void *)sub_1A4CB4754(v10, v12);
      swift_endAccess();

      swift_bridgeObjectRelease();
    }
  }
  return a4(a1);
}

uint64_t sub_1A4C9ABB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1A4CBB63C();
    sub_1A4CBB0EC();
    uint64_t v6 = sub_1A4CBB65C();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1A4CBB5EC() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1A4CBB5EC() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_1A4C9ACE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  id v11 = objc_allocWithZone(MEMORY[0x1E4F6E988]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = a8;
  id v13 = (void *)sub_1A4CBB14C();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1A4CBB0BC();
  swift_bridgeObjectRelease();
  unint64_t v15 = (void *)sub_1A4CBB0BC();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_1A4CBB0BC();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v11, sel_initWithHandleIDs_requestID_serviceName_accountID_context_, v13, v14, v15, v16, v12);

  objc_msgSend(*(id *)(a9 + OBJC_IVAR___IMServiceReachabilityController_delegate), sel_calculateReachabilityWithRequest_responseHandler_, v17, a10);
}

void sub_1A4C9AE68(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR___IMServiceReachabilityController_delegate);
  uint64_t v7 = (void *)sub_1A4CBB0BC();
  id v8 = objc_msgSend(v6, sel_preferredAccountIDForServiceName_, v7);

  if (!v8)
  {
    if (qword_1E965C810 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v12, (uint64_t)qword_1E9660AE8);
    swift_bridgeObjectRetain_n();
    id v13 = sub_1A4CBB01C();
    os_log_type_t v14 = sub_1A4CBB27C();
    if (os_log_type_enabled(v13, v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = v16;
      *(_DWORD *)unint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A4B0BCCC(v5, v4, &v17);
      sub_1A4CBB36C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A4AF7000, v13, v14, "Couldn't find an account for service %s but attempted to check reachability over it!", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A6264920](v16, -1, -1);
      MEMORY[0x1A6264920](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v11 = 0;
    goto LABEL_10;
  }
  id v9 = objc_msgSend(self, sel_sharedInstance);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_accountForUniqueID_, v8);

LABEL_10:
    *a3 = v11;
    return;
  }

  __break(1u);
}

uint64_t sub_1A4C9B0CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A4C9B0EC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A4C9B0EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A4B0E048((uint64_t *)&unk_1EB3F1EF0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v13 = v10 + 32;
  os_log_type_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A4CBB50C();
  __break(1u);
  return result;
}

uint64_t sub_1A4C9B258(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A4B0E048(&qword_1E965B680);
  char v42 = a2;
  uint64_t v6 = sub_1A4CBB4EC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    int64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A4CBB63C();
    sub_1A4CBB0EC();
    uint64_t result = sub_1A4CBB65C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    id v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    id v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A4C9B580(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1A4B0E048(a3);
  char v39 = a2;
  uint64_t v7 = sub_1A4CBB4EC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          unint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_1A4CBB63C();
    sub_1A4CBB0EC();
    uint64_t result = sub_1A4CBB65C();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    id v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v1_Block_object_dispose(&STACK[0x10D0], 8) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v4 = v36;
  int64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

unint64_t sub_1A4C9B890(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A4CBB3CC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A4CBB63C();
        swift_bridgeObjectRetain();
        sub_1A4CBB0EC();
        uint64_t v9 = sub_1A4CBB65C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          unint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A4C9BA68(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1A4CBB3CC();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1A4CBB63C();
        swift_bridgeObjectRetain();
        sub_1A4CBB0EC();
        uint64_t v9 = sub_1A4CBB65C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1A4C9BC40()
{
  return sub_1A4C9BE08(&qword_1E965B6A8);
}

void *sub_1A4C9BC4C()
{
  id v1 = v0;
  sub_1A4B0E048(&qword_1E965B680);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A4CBB4DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A4C9BE08(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1A4B0E048(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1A4CBB4DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1A4C9BFB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1A4C9BFC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1A4AFB26C(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1A4C9BE08(a5);
LABEL_7:
    uint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1A4C9B580(v17, a4 & 1, a5);
  unint64_t v22 = sub_1A4AFB26C(a2, a3);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    sub_1A4CBB61C();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v24 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v24 = a2;
  v24[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v27;

  swift_bridgeObjectRetain();
}

void sub_1A4C9C148(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1A4C9C154(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

id sub_1A4C9C160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  void v10[4] = a2;
  void v10[5] = a3;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1A4CA66EC;
  v10[3] = &unk_1EF8E4518;
  uint64_t v7 = _Block_copy(v10);
  id v8 = objc_msgSend(v6, sel_initWithDelegate_updateHandler_, a1, v7);
  swift_unknownObjectRelease();
  _Block_release(v7);
  swift_release();
  return v8;
}

uint64_t sub_1A4C9C234(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *v7;
      v11[0] = *(v7 - 1);
      v11[1] = v8;
      swift_bridgeObjectRetain();
      sub_1A4C9AE68(v11, a2, &v10);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v9 = swift_bridgeObjectRelease();
      if (v10)
      {
        MEMORY[0x1A6262650](v9);
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1A4CBB18C();
        }
        sub_1A4CBB19C();
        sub_1A4CBB17C();
      }
      v7 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1A4C9C364()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A4C9C3A0(void *a1)
{
  return sub_1A4C9AAA8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(void *))(v1 + 32));
}

id sub_1A4C9C3B4(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F6E970]), sel_init);
  id v3 = objc_msgSend(a1, sel_chatIdentifier);
  objc_msgSend(v2, sel_setChatIdentifier_, v3);

  objc_msgSend(v2, sel_setChatStyle_, objc_msgSend(a1, sel_chatStyle));
  id v4 = objc_msgSend(a1, sel_lastAddressedHandleID);
  objc_msgSend(v2, sel_setSenderLastAddressedHandle_, v4);

  id v5 = objc_msgSend(a1, sel_lastAddressedSIMID);
  objc_msgSend(v2, sel_setSenderLastAddressedSIMID_, v5);

  id v6 = objc_msgSend(a1, sel_account);
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = objc_msgSend(v6, sel_serviceName);

    if (v8)
    {
      sub_1A4CBB0CC();

      uint64_t v7 = (void *)sub_1A4CBB0BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  objc_msgSend(v2, sel_setLastUsedServiceName_, v7);

  id v9 = objc_msgSend(a1, sel__lastMessage);
  uint64_t v10 = v9;
  if (v9)
  {
    id v11 = objc_msgSend(v9, sel_service);

    if (v11)
    {
      sub_1A4CBB0CC();

      uint64_t v10 = (void *)sub_1A4CBB0BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  objc_msgSend(v2, sel_setServiceOfLastMessage_, v10);

  objc_msgSend(v2, sel_setConversationWasDowngraded_, objc_msgSend(a1, sel_isDowngraded));
  objc_msgSend(v2, sel_setHasConversationHistory_, objc_msgSend(a1, sel_receivedResponseForChat));
  objc_msgSend(v2, sel_setShouldForceServerStatusRefresh_, objc_msgSend(a1, sel_shouldForceServerStatusRefresh));
  objc_msgSend(v2, sel_setForceMMS_, objc_msgSend(a1, sel_forceMMS));
  return v2;
}

uint64_t sub_1A4C9C674(void *a1, uint64_t a2)
{
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v41 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (v5) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v9 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v9 < v41)
    {
      unint64_t v10 = *(void *)(v40 + 8 * v9);
      int64_t v11 = v6 + 1;
      if (v10) {
        goto LABEL_22;
      }
      int64_t v11 = v6 + 2;
      if (v6 + 2 >= v41) {
        goto LABEL_42;
      }
      unint64_t v10 = *(void *)(v40 + 8 * v11);
      if (v10) {
        goto LABEL_22;
      }
      int64_t v11 = v6 + 3;
      if (v6 + 3 >= v41) {
        goto LABEL_42;
      }
      unint64_t v10 = *(void *)(v40 + 8 * v11);
      if (v10) {
        goto LABEL_22;
      }
      int64_t v11 = v6 + 4;
      if (v6 + 4 >= v41) {
        goto LABEL_42;
      }
      unint64_t v10 = *(void *)(v40 + 8 * v11);
      if (v10)
      {
LABEL_22:
        unint64_t v5 = (v10 - 1) & v10;
        int64_t v43 = v11;
        for (unint64_t i = __clz(__rbit64(v10)) + (v11 << 6); ; unint64_t i = v7 | (v6 << 6))
        {
          char v13 = (uint64_t *)(*(void *)(a2 + 56) + 16 * i);
          uint64_t v15 = *v13;
          uint64_t v14 = v13[1];
          BOOL v16 = self;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v17 = (void *)sub_1A4CBB0BC();
          char v18 = (void *)sub_1A4CBB14C();
          id v19 = objc_msgSend(v16, sel_finalResultForService_handleIDs_allAreReachable_checkedServer_error_, v17, v18, 0, 0, 0);

          if (v19) {
            break;
          }
          swift_bridgeObjectRetain();
          unint64_t v20 = sub_1A4AFB26C(v15, v14);
          char v22 = v21;
          swift_bridgeObjectRelease();
          if ((v22 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            int64_t v6 = v43;
            if (!v5) {
              goto LABEL_7;
            }
            goto LABEL_6;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1A4C9BE08(&qword_1E965B4B8);
          }
          swift_bridgeObjectRelease();
          char v23 = *(void **)(a1[7] + 8 * v20);
          sub_1A4C9BA68(v20, (uint64_t)a1);
          swift_bridgeObjectRelease();

LABEL_40:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          int64_t v6 = v43;
          if (!v5) {
            goto LABEL_7;
          }
LABEL_6:
          unint64_t v7 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
          int64_t v43 = v6;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v26 = sub_1A4AFB26C(v15, v14);
        uint64_t v27 = a1[2];
        BOOL v28 = (v25 & 1) == 0;
        uint64_t v29 = v27 + v28;
        if (__OFADD__(v27, v28)) {
          goto LABEL_45;
        }
        char v30 = v25;
        if (a1[3] < v29)
        {
          sub_1A4C9B580(v29, isUniquelyReferenced_nonNull_native, &qword_1E965B4B8);
          unint64_t v31 = sub_1A4AFB26C(v15, v14);
          if ((v30 & 1) != (v32 & 1)) {
            goto LABEL_47;
          }
          unint64_t v26 = v31;
          if ((v30 & 1) == 0) {
            goto LABEL_37;
          }
LABEL_35:
          uint64_t v33 = a1[7];
          uint64_t v34 = 8 * v26;

          *(void *)(v33 + v34) = v19;
LABEL_39:
          swift_bridgeObjectRelease();
          goto LABEL_40;
        }
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v25) {
            goto LABEL_35;
          }
        }
        else
        {
          sub_1A4C9BE08(&qword_1E965B4B8);
          if (v30) {
            goto LABEL_35;
          }
        }
LABEL_37:
        a1[(v26 >> 6) + 8] |= 1 << v26;
        uint64_t v35 = (uint64_t *)(a1[6] + 16 * v26);
        *uint64_t v35 = v15;
        v35[1] = v14;
        *(void *)(a1[7] + 8 * v26) = v19;
        uint64_t v36 = a1[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37) {
          goto LABEL_46;
        }
        a1[2] = v38;
        swift_bridgeObjectRetain();
        goto LABEL_39;
      }
      uint64_t v12 = v6 + 5;
      if (v6 + 5 < v41)
      {
        unint64_t v10 = *(void *)(v40 + 8 * v12);
        if (v10)
        {
          int64_t v11 = v6 + 5;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v11 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            goto LABEL_44;
          }
          if (v11 >= v41) {
            break;
          }
          unint64_t v10 = *(void *)(v40 + 8 * v11);
          ++v12;
          if (v10) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_42:
    swift_release();
    return (uint64_t)a1;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_1A4CBB61C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for IMServiceReachabilityController(uint64_t a1)
{
  return sub_1A4B0C510(a1, &qword_1E965DA30);
}

void sub_1A4C9CAB4(uint64_t a1, uint64_t a2, void *a3, char *a4, void (**a5)(void, void))
{
  uint64_t v82 = a1;
  uint64_t v83 = a2;
  uint64_t v81 = sub_1A4CBAEDC();
  uint64_t v8 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v80 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = a5;
  _Block_copy(a5);
  id v86 = a3;
  if (objc_msgSend(a3, sel_shouldForceServerStatusRefresh))
  {
    id v10 = objc_msgSend(v86, sel_chatIdentifier);
    if (v10)
    {
      int64_t v11 = v10;
      id v12 = objc_msgSend(self, sel_sharedRegistry);
      id v13 = objc_msgSend(v12, sel_existingChatWithChatIdentifier_, v11);

      if (v13)
      {
        unsigned int v14 = objc_msgSend(v13, sel_chatStyle);
        if (v14 == objc_msgSend(v86, sel_chatStyle)) {
          objc_msgSend(v13, sel__resetForceServerStatusRefresh);
        }
      }
    }
  }
  if (!*(void *)(v83 + 16) || !*(void *)(v82 + 16))
  {
    uint64_t v66 = (void *)sub_1A4B032BC(MEMORY[0x1E4FBC860], &qword_1E965B4B8);
    swift_bridgeObjectRetain();
    sub_1A4C9C674(v66, v83);
    swift_bridgeObjectRelease();
    id v67 = objc_allocWithZone(MEMORY[0x1E4F6E960]);
    sub_1A4B0C510(0, &qword_1E965B650);
    uint64_t v68 = (void *)sub_1A4CBB09C();
    swift_bridgeObjectRelease();
    id v86 = objc_msgSend(v67, sel_initAsFinalResult_bestResult_resultsByAccountID_, 1, 0, v68);

    ((void (**)(void, id))a5)[2](a5, v86);
    swift_release();
    id v69 = v86;

    return;
  }
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1A4CBB34C();
  BOOL v16 = *(void **)&a4[OBJC_IVAR___IMServiceReachabilityController_delegate];
  swift_getObjectType();
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v15;
  v17[3] = a4;
  uint64_t v18 = v72;
  void v17[4] = sub_1A4C9D7C8;
  void v17[5] = v18;
  swift_unknownObjectRetain();
  uint64_t v71 = v15;
  swift_retain();
  id v19 = a4;
  swift_retain();
  id v74 = v16;
  id v20 = sub_1A4C9C160((uint64_t)v16, (uint64_t)sub_1A4C9D96C, (uint64_t)v17);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  id v21 = objc_msgSend(v20, sel_taskID);
  uint64_t v22 = sub_1A4CBB0CC();
  uint64_t v24 = v23;

  id v78 = v19;
  char v25 = &v19[OBJC_IVAR___IMServiceReachabilityController_taskIDToTask];
  swift_beginAccess();
  id v26 = v20;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v89 = *(void *)v25;
  *(void *)char v25 = 0x8000000000000000;
  id v79 = v26;
  sub_1A4C9BFC0((uint64_t)v26, v22, v24, isUniquelyReferenced_nonNull_native, &qword_1E965B6A8);
  *(void *)char v25 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v28 = *(void *)(v83 + 64);
  uint64_t v73 = v83 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(v83 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v31 = v30 & v28;
  int64_t v75 = (unint64_t)(v29 + 63) >> 6;
  uint64_t v77 = (void (**)(char *, uint64_t))(v8 + 8);
  unint64_t v76 = v88;
  swift_bridgeObjectRetain();
  int64_t v32 = 0;
  while (v31)
  {
    unint64_t v47 = __clz(__rbit64(v31));
    v31 &= v31 - 1;
    int64_t v85 = v32;
    unint64_t v48 = v47 | (v32 << 6);
LABEL_30:
    uint64_t v53 = 16 * v48;
    uint64_t v54 = (uint64_t *)(*(void *)(v83 + 48) + v53);
    uint64_t v56 = *v54;
    uint64_t v55 = v54[1];
    unint64_t v57 = (uint64_t *)(*(void *)(v83 + 56) + v53);
    uint64_t v58 = v57[1];
    uint64_t v84 = *v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v59 = v80;
    sub_1A4CBAECC();
    uint64_t v60 = sub_1A4CBAEBC();
    uint64_t v62 = v61;
    (*v77)(v59, v81);
    id v63 = objc_msgSend(v86, sel_preconditionsIgnoredForServices);
    if (!v63
      || (uint64_t v64 = v63,
          uint64_t v65 = sub_1A4CBB20C(),
          v64,
          LOBYTE(v64) = sub_1A4C9ABB0(v56, v55, v65),
          swift_bridgeObjectRelease(),
          (v64 & 1) == 0))
    {
      uint64_t v33 = (void *)sub_1A4CBB0BC();
      id v34 = objc_msgSend(v74, sel_preconditionsForServiceName_, v33);

      sub_1A4B0C510(0, &qword_1E965B588);
      sub_1A4CBB15C();
    }
    uint64_t v35 = (void *)sub_1A4CBB0BC();
    uint64_t v36 = (void *)sub_1A4CBB0BC();
    sub_1A4B0C510(0, &qword_1E965B588);
    BOOL v37 = (void *)sub_1A4CBB14C();
    swift_bridgeObjectRelease();
    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = v82;
    v38[3] = v60;
    void v38[4] = v62;
    v38[5] = v56;
    uint64_t v39 = v84;
    v38[6] = v55;
    v38[7] = v39;
    v38[8] = v58;
    id v40 = v86;
    int64_t v41 = v78;
    v38[9] = v86;
    v38[10] = v41;
    id v42 = v79;
    v38[11] = v79;
    v88[2] = sub_1A4C9C3B0;
    v88[3] = v38;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    v88[0] = sub_1A4B02D48;
    v88[1] = &unk_1EF8E4428;
    int64_t v43 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v44 = v41;
    id v45 = v42;
    id v46 = v40;
    swift_release();
    objc_msgSend(v45, sel_submitRequestWithID_serviceName_preconditions_clearanceHandler_, v35, v36, v37, v43);
    _Block_release(v43);

    int64_t v32 = v85;
  }
  int64_t v49 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v49 >= v75) {
    goto LABEL_36;
  }
  unint64_t v50 = *(void *)(v73 + 8 * v49);
  int64_t v51 = v32 + 1;
  if (v50) {
    goto LABEL_29;
  }
  int64_t v51 = v32 + 2;
  if (v32 + 2 >= v75) {
    goto LABEL_36;
  }
  unint64_t v50 = *(void *)(v73 + 8 * v51);
  if (v50) {
    goto LABEL_29;
  }
  int64_t v51 = v32 + 3;
  if (v32 + 3 >= v75) {
    goto LABEL_36;
  }
  unint64_t v50 = *(void *)(v73 + 8 * v51);
  if (v50)
  {
LABEL_29:
    unint64_t v31 = (v50 - 1) & v50;
    int64_t v85 = v51;
    unint64_t v48 = __clz(__rbit64(v50)) + (v51 << 6);
    goto LABEL_30;
  }
  uint64_t v52 = v32 + 4;
  if (v32 + 4 >= v75)
  {
LABEL_36:
    swift_release();
    id v70 = v79;
    objc_msgSend(v79, sel_allRequestsSubmitted);
    swift_release();
    swift_release();

    return;
  }
  unint64_t v50 = *(void *)(v73 + 8 * v52);
  if (v50)
  {
    int64_t v51 = v32 + 4;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v51 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      break;
    }
    if (v51 >= v75) {
      goto LABEL_36;
    }
    unint64_t v50 = *(void *)(v73 + 8 * v51);
    ++v52;
    if (v50) {
      goto LABEL_29;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1A4C9D398(uint64_t a1, void *a2, char *a3, void *aBlock)
{
  uint64_t v44 = a1;
  id v45 = a2;
  unint64_t v5 = *(void **)&a3[OBJC_IVAR___IMServiceReachabilityController_delegate];
  _Block_copy(aBlock);
  id v6 = objc_msgSend(v5, sel_serviceNamesForSending);
  uint64_t v7 = sub_1A4CBB15C();

  uint64_t v8 = a3;
  unint64_t v9 = sub_1A4C9C234(v7, (uint64_t)v8);
  swift_bridgeObjectRelease();
  int64_t v43 = v8;

  id v10 = (void *)sub_1A4C996B0(MEMORY[0x1E4FBC860]);
  if (v9 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_1A4CBB4CC();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_33:
    swift_bridgeObjectRelease_n();
    _Block_copy(aBlock);
    sub_1A4C9CAB4(v44, (uint64_t)v10, v45, v43, (void (**)(void, void))aBlock);
    _Block_release(aBlock);
    swift_bridgeObjectRelease();
    _Block_release(aBlock);
    return;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_33;
  }
LABEL_3:
  uint64_t v48 = v11;
  unint64_t v49 = v9 & 0xC000000000000001;
  uint64_t v12 = 4;
  unint64_t v47 = v9;
  while (1)
  {
    if (v49) {
      id v15 = (id)MEMORY[0x1A6262970](v12 - 4, v9);
    }
    else {
      id v15 = *(id *)(v9 + 8 * v12);
    }
    BOOL v16 = v15;
    uint64_t v14 = v12 - 3;
    if (__OFADD__(v12 - 4, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    id v17 = objc_msgSend(v15, sel_serviceName, v43, v44, v45);
    if (!v17) {
      break;
    }
    uint64_t v18 = v17;
    uint64_t v19 = sub_1A4CBB0CC();
    uint64_t v21 = v20;

    id v22 = objc_msgSend(v16, sel_uniqueID);
    if (!v22)
    {
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_1A4AFB26C(v19, v21);
      char v37 = v36;
      swift_bridgeObjectRelease();
      if (v37)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1A4C9BC4C();
        }
        swift_bridgeObjectRelease();
        sub_1A4C9B890(v35, (uint64_t)v10);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      goto LABEL_6;
    }
    uint64_t v23 = v22;
    unint64_t v9 = sub_1A4CBB0CC();
    unint64_t v25 = v24;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1A4AFB26C(v19, v21);
    uint64_t v29 = v10[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      goto LABEL_30;
    }
    char v32 = v27;
    if (v10[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v27 & 1) == 0) {
          goto LABEL_24;
        }
      }
      else
      {
        sub_1A4C9BC4C();
        if ((v32 & 1) == 0) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      sub_1A4C9B258(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_1A4AFB26C(v19, v21);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_37;
      }
      unint64_t v28 = v33;
      if ((v32 & 1) == 0)
      {
LABEL_24:
        v10[(v28 >> 6) + 8] |= 1 << v28;
        uint64_t v38 = (uint64_t *)(v10[6] + 16 * v28);
        uint64_t *v38 = v19;
        v38[1] = v21;
        uint64_t v39 = (unint64_t *)(v10[7] + 16 * v28);
        *uint64_t v39 = v9;
        v39[1] = v25;
        uint64_t v40 = v10[2];
        BOOL v41 = __OFADD__(v40, 1);
        uint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_31;
        }
        void v10[2] = v42;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
    id v13 = (unint64_t *)(v10[7] + 16 * v28);
    swift_bridgeObjectRelease();
    *id v13 = v9;
    v13[1] = v25;
LABEL_5:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v9 = v47;
    uint64_t v11 = v48;
    uint64_t v14 = v12 - 3;
LABEL_6:
    ++v12;
    if (v14 == v11) {
      goto LABEL_33;
    }
  }
  _Block_release(aBlock);
  _Block_release(aBlock);
  __break(1u);
LABEL_37:
  _Block_release(aBlock);
  _Block_release(aBlock);
  sub_1A4CBB61C();
  __break(1u);
}

uint64_t sub_1A4C9D7C8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1A4C9D7E0()
{
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A4C9D82C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 96, 7);
}

void sub_1A4C9D894()
{
  sub_1A4C9ACE8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_1A4C9D8CC()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A4C9D904(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1A4B0E048(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *SyncedSettingsManager.__allocating_init(daemonController:connection:notificationCenter:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = objc_allocWithZone(v3);
  return SyncedSettingsManager.init(daemonController:connection:notificationCenter:)(a1, a2, a3);
}

char *SyncedSettingsManager.init(daemonController:connection:notificationCenter:)(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR___IMSyncedSettingsManager_Impl_daemonController] = a1;
  *(void *)&v3[OBJC_IVAR___IMSyncedSettingsManager_Impl_connection] = a2;
  *(void *)&v3[OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter] = a3;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for SyncedSettingsManager();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v5 = a3;
  id v6 = (char *)objc_msgSendSuper2(&v12, sel_init);
  id v7 = *(void **)&v6[OBJC_IVAR___IMSyncedSettingsManager_Impl_daemonController];
  uint64_t v8 = v6;
  id v9 = objc_msgSend(v7, sel_listener, v12.receiver, v12.super_class);
  id v10 = v8;
  objc_msgSend(v9, sel_addHandler_, v10);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v10;
}

uint64_t type metadata accessor for SyncedSettingsManager()
{
  return self;
}

uint64_t sub_1A4C9DB5C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1A4CBB04C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1A4CBB06C();
  uint64_t v8 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E965C818 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v11, (uint64_t)qword_1E9660B00);
  objc_super v12 = sub_1A4CBB01C();
  os_log_type_t v13 = sub_1A4CBB28C();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1A4AF7000, v12, v13, "didUpdateSettingsKeys", v14, 2u);
    MEMORY[0x1A6264920](v14, -1, -1);
  }

  sub_1A4C9EA24();
  id v15 = (void *)sub_1A4CBB30C();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = v2;
  void aBlock[4] = sub_1A4C9EAA4;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1A4B02D48;
  aBlock[3] = &unk_1EF8E6150;
  id v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v18 = v2;
  swift_release();
  sub_1A4CBB05C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1A4C9EAAC();
  sub_1A4B0E048(&qword_1EB3F20F8);
  sub_1A4C9EB04();
  sub_1A4CBB3BC();
  MEMORY[0x1A6262830](0, v10, v7, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v21);
}

uint64_t sub_1A4C9DE98(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter;
    uint64_t v5 = swift_bridgeObjectRetain() + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A4CBB32C();
      if ((v6 & 1) == 0)
      {
        id v7 = *(void **)(a2 + v4);
        uint64_t v8 = (void *)sub_1A4CBB33C();
        objc_msgSend(v7, sel_postNotificationName_object_, v8, 0);
      }
      v5 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id SyncedSettingsManager.__deallocating_deinit()
{
  id v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR___IMSyncedSettingsManager_Impl_daemonController], sel_listener);
  objc_msgSend(v1, sel_removeHandler_, v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SyncedSettingsManager();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1A4C9E124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = *(void **)(v3 + OBJC_IVAR___IMSyncedSettingsManager_Impl_connection);
  objc_msgSend(v7, sel_waitForSetup);
  id v8 = objc_msgSend(v7, sel_synchronousRemoteProxy);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  void v12[4] = sub_1A4C9EB98;
  v12[5] = v9;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1A4C9E254;
  uint64_t v12[3] = &unk_1EF8E62E0;
  id v10 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_fetchSettingValueForKey_reply_, a1, v10);
  _Block_release(v10);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A4C9E254(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(long long *))(a1 + 32);
  if (a2)
  {
    *((void *)&v6 + 1) = swift_getObjectType();
    *(void *)&long long v5 = a2;
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v3(&v5);
  swift_release();
  return sub_1A4B0C5F4((uint64_t)&v5);
}

uint64_t sub_1A4C9E368(uint64_t a1, uint64_t a2)
{
  sub_1A4B0C654(a1, (uint64_t)v10);
  uint64_t v3 = v11;
  if (v11)
  {
    uint64_t v4 = sub_1A4B0BC88(v10, v11);
    uint64_t v5 = *(void *)(v3 - 8);
    MEMORY[0x1F4188790](v4);
    id v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = sub_1A4CBB5DC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    sub_1A4B0BDA0((uint64_t)v10);
  }
  else
  {
    uint64_t v8 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, v8);
  return swift_unknownObjectRelease();
}

void sub_1A4C9E4A4(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR___IMSyncedSettingsManager_Impl_connection);
  objc_msgSend(v5, sel_waitForSetup);
  id v6 = objc_msgSend(v5, sel_remoteProxy);
  sub_1A4B0BC88(a1, a1[3]);
  objc_msgSend(v6, sel_setSettingValue_forKey_, sub_1A4CBB5DC(), a2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id v7 = *(void **)(v2 + OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter);
  uint64_t v8 = (void *)sub_1A4CBB33C();
  sub_1A4B0E048(&qword_1E965DA68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4CD16F0;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  sub_1A4CBB3FC();
  *(void *)(inited + 96) = v10;
  *(void *)(inited + 72) = 0x53796C6C61636F4CLL;
  *(void *)(inited + 80) = 0xEA00000000007465;
  sub_1A4C997D4(inited);
  uint64_t v11 = (void *)sub_1A4CBB09C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_postNotificationName_object_userInfo_, v8, 0, v11);
}

void sub_1A4C9E6C0(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter);
  sub_1A4B0BC88(a1, a1[3]);
  uint64_t v5 = sub_1A4CBB5DC();
  id v6 = (id)sub_1A4CBB33C();
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v5, a2, v6, 0);
  swift_unknownObjectRelease();
}

void sub_1A4C9E834(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___IMSyncedSettingsManager_Impl_notificationCenter);
  sub_1A4B0BC88(a1, a1[3]);
  uint64_t v3 = sub_1A4CBB5DC();
  id v4 = (id)sub_1A4CBB33C();
  objc_msgSend(v2, sel_removeObserver_name_object_, v3, v4, 0);
  swift_unknownObjectRelease();
}

id SyncedSettingsManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SyncedSettingsManager.init()()
{
}

unint64_t sub_1A4C9EA24()
{
  unint64_t result = qword_1EB3F20E8;
  if (!qword_1EB3F20E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB3F20E8);
  }
  return result;
}

uint64_t sub_1A4C9EA64()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A4C9EAA4()
{
  return sub_1A4C9DE98(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1A4C9EAAC()
{
  unint64_t result = qword_1EB3F20F0;
  if (!qword_1EB3F20F0)
  {
    sub_1A4CBB04C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB3F20F0);
  }
  return result;
}

unint64_t sub_1A4C9EB04()
{
  unint64_t result = qword_1EB3F2100;
  if (!qword_1EB3F2100)
  {
    sub_1A4B0E364(&qword_1EB3F20F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB3F2100);
  }
  return result;
}

uint64_t sub_1A4C9EB60()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A4C9EB98()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t method lookup function for SyncedSettingsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SyncedSettingsManager);
}

uint64_t dispatch thunk of SyncedSettingsManager.__allocating_init(daemonController:connection:notificationCenter:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SyncedSettingsManager.didUpdate(settingsKeys:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SyncedSettingsManager.settingValue(for:reply:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SyncedSettingsManager.setSetting(value:key:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SyncedSettingsManager.addObserver(observer:selector:key:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SyncedSettingsManager.removeObserver(observer:key:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t sub_1A4C9ECF0()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A4C9ED28(uint64_t a1)
{
  return sub_1A4C9E368(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A4C9EE00()
{
  if (!*(void *)&v0[OBJC_IVAR___IMCloudKitSyncProgress_descriptor + 8]) {
    return 0;
  }
  uint64_t v1 = *(void *)&v0[OBJC_IVAR___IMCloudKitSyncProgress_descriptor];
  uint64_t v2 = qword_1E965B478;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1A4CBB03C();
  sub_1A4B0C4D8(v3, (uint64_t)qword_1E9660AD0);
  id v4 = v0;
  uint64_t v5 = sub_1A4CBB01C();
  os_log_type_t v6 = sub_1A4CBB26C();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v7 = 134217984;
    objc_msgSend(v4, sel_type);
    sub_1A4CBB36C();

    _os_log_impl(&dword_1A4AF7000, v5, v6, "Progress label is null for %ld", v7, 0xCu);
    MEMORY[0x1A6264920](v7, -1, -1);
  }
  else
  {
  }
  return v1;
}

id sub_1A4C9F2EC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_1A4CBB0BC();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t IMCloudKitSyncProgress.description.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_percentCompleteString);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1A4CBB0CC();
  }
  id v4 = objc_msgSend(v0, sel_userMessageLabel);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1A4CBB0CC();
  }
  id v6 = objc_msgSend(v0, sel_actionLabel);
  if (v6)
  {
    id v7 = v6;
    sub_1A4CBB0CC();
  }
  sub_1A4B0C510(0, (unint64_t *)&qword_1E965DA70);
  uint64_t v8 = (void *)sub_1A4CBB2BC();
  objc_msgSend(v0, sel_progressBarValue);
  uint64_t v9 = (void *)sub_1A4CBB1EC();
  id v10 = objc_msgSend(v8, sel_stringFromNumber_, v9);

  if (v10)
  {
    sub_1A4CBB0CC();
  }
  uint64_t v11 = (void *)sub_1A4CBB2BC();
  objc_msgSend(v0, sel_progressBarMax);
  objc_super v12 = (void *)sub_1A4CBB1EC();
  id v13 = objc_msgSend(v11, sel_stringFromNumber_, v12);

  if (v13)
  {
    sub_1A4CBB0CC();
  }
  uint64_t v14 = (void *)sub_1A4CBB2BC();
  objc_msgSend(v0, sel_remainingItems);
  id v15 = (void *)sub_1A4CBB1EC();
  id v16 = objc_msgSend(v14, sel_stringFromNumber_, v15);

  if (v16)
  {
    sub_1A4CBB0CC();
  }
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1A4CBB43C();
  v23.receiver = v1;
  v23.super_class = (Class)IMCloudKitSyncProgress;
  id v17 = objc_msgSendSuper2(&v23, sel_description);
  sub_1A4CBB0CC();

  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  objc_msgSend(v1, sel_type);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  id v18 = objc_msgSend(v1, sel_progressLabel);
  sub_1A4CBB0CC();

  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  objc_msgSend(v1, sel_isHidden);
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  id v19 = objc_msgSend(v1, sel_syncState);
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = objc_msgSend(v19, sel_description);

    sub_1A4CBB0CC();
  }
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  return v24;
}

void __swiftcall IMCloudKitSyncProgress.init()(IMCloudKitSyncProgress *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void IMCloudKitSyncProgress.init()()
{
}

uint64_t IMCloudKitSyncProgressType.description.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1A4C9FCBC()
{
  return IMCloudKitSyncProgressType.description.getter();
}

uint64_t type metadata accessor for IMCloudKitSyncProgress(uint64_t a1)
{
  return sub_1A4B0C510(a1, &qword_1E965DAA8);
}

id sub_1A4C9FCD8(uint64_t a1, void *a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_type] = a1;
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_syncState] = a2;
  *(void *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_syncStatistics] = a3;
  if (a3)
  {
    id v7 = a2;
    id v8 = a3;
    uint64_t v9 = v3;
    id v10 = objc_msgSend(v8, sel_syncedRecordCount);
    *(double *)&v9[OBJC_IVAR___IMCloudKitSyncProgress_progressBarValue] = (double)(uint64_t)v10;
    double v11 = (double)(uint64_t)objc_msgSend(v8, sel_totalRecordCount);
  }
  else
  {
    *(void *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_progressBarValue] = 0;
    objc_super v12 = v3;
    id v13 = a2;
    double v11 = 0.0;
  }
  *(double *)&v3[OBJC_IVAR___IMCloudKitSyncProgress_progressBarMax] = v11;
  sub_1A4CAE250(a1, a2, (uint64_t)v19);
  uint64_t v14 = &v3[OBJC_IVAR___IMCloudKitSyncProgress_descriptor];
  long long v15 = v19[1];
  *(_OWORD *)uint64_t v14 = v19[0];
  *((_OWORD *)v14 + 1) = v15;
  long long v16 = v19[3];
  *((_OWORD *)v14 + 2) = v19[2];
  *((_OWORD *)v14 + 3) = v16;

  v18.receiver = v3;
  v18.super_class = (Class)IMCloudKitSyncProgress;
  return objc_msgSendSuper2(&v18, sel_init);
}

id sub_1A4C9FE00()
{
  id v1 = objc_msgSend(self, sel_sharedFeatureFlags);
  unsigned int v2 = objc_msgSend(v1, sel_isMessagesIniCloudVersion2);

  if (v2)
  {
    if (objc_msgSend(v0, sel_syncStatus) == (id)1) {
      return objc_msgSend(v0, sel_hasNotSyncedInLastSevenDays);
    }
    else {
      return 0;
    }
  }
  else
  {
    id result = objc_msgSend(v0, sel_isSyncing);
    if (result)
    {
      id result = objc_msgSend(v0, sel_hasNotSyncedInLastSevenDays);
      if (result) {
        return (id)(objc_msgSend(v0, sel_syncingFailed) ^ 1);
      }
    }
  }
  return result;
}

id sub_1A4C9FF04()
{
  id v1 = objc_msgSend(self, sel_sharedFeatureFlags);
  unsigned int v2 = objc_msgSend(v1, sel_isMessagesIniCloudVersion2);

  id result = objc_msgSend(v0, sel_shouldSendSyncProgress);
  if (result)
  {
    id v4 = &selRef_syncJobState;
    if (!v2) {
      id v4 = &selRef_syncControllerSyncState;
    }
    return (id)([v0 *v4] == (id)4);
  }
  return result;
}

BOOL sub_1A4C9FFD4()
{
  id v1 = v0;
  uint64_t v2 = sub_1A4CBAEAC();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v37 = (char *)&v36 - v7;
  uint64_t v8 = sub_1A4B0E048(&qword_1E965B568);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  double v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  id v17 = (char *)&v36 - v16;
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v36 - v18;
  id v20 = objc_msgSend(self, sel_sharedFeatureFlags);
  unsigned int v21 = objc_msgSend(v20, sel_isMessagesIniCloudVersion2);

  if (v21)
  {
    id v22 = objc_msgSend(v1, sel_lastFullSyncDate);
    if (v22)
    {
      objc_super v23 = v22;
      sub_1A4CBAE8C();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v17, 0, 1, v2);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v17, 1, 1, v2);
    }
  }
  else
  {
    id v24 = objc_msgSend(v1, sel_lastSyncDate);
    if (v24)
    {
      unint64_t v25 = v24;
      sub_1A4CBAE8C();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, 1, 1, v2);
    }
    id v17 = v14;
  }
  sub_1A4C97390((uint64_t)v17, (uint64_t)v19);
  sub_1A4CA04A0((uint64_t)v19, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    sub_1A4CA0508((uint64_t)v11);
    if (qword_1E965B478 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1A4CBB03C();
    sub_1A4B0C4D8(v26, (uint64_t)qword_1E9660AD0);
    char v27 = sub_1A4CBB01C();
    os_log_type_t v28 = sub_1A4CBB28C();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1A4AF7000, v27, v28, "No last sync date so we obviously haven't synced in the last week.", v29, 2u);
      MEMORY[0x1A6264920](v29, -1, -1);
    }

    BOOL v30 = 1;
  }
  else
  {
    uint64_t v31 = v37;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v37, v11, v2);
    sub_1A4CBAE9C();
    sub_1A4CBAE5C();
    double v33 = v32;
    char v34 = *(void (**)(char *, uint64_t))(v3 + 8);
    v34(v6, v2);
    BOOL v30 = v33 >= 604800.0;
    v34(v31, v2);
  }
  sub_1A4CA0508((uint64_t)v19);
  return v30;
}

uint64_t sub_1A4CA04A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4B0E048(&qword_1E965B568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A4CA0508(uint64_t a1)
{
  uint64_t v2 = sub_1A4B0E048(&qword_1E965B568);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A4CA0568()
{
  sub_1A4CA08A0(v0, (uint64_t)&v4);
  sub_1A4CA08A0((uint64_t)&v4, (uint64_t)&v5);
  if (v5 == 5) {
    return 0;
  }
  sub_1A4CA0908();
  unint64_t v3 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_1A4CBB2DC();
  sub_1A4CBB43C();
  sub_1A4CA0948();
  sub_1A4CBB38C();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB5BC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB5BC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  if (v2 < v3)
  {
    __break(1u);
    JUMPOUT(0x1A4CA088CLL);
  }
  sub_1A4CBB5BC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  sub_1A4CBB5BC();
  sub_1A4CBB0FC();
  swift_bridgeObjectRelease();
  sub_1A4CBB0FC();
  return 0;
}

uint64_t sub_1A4CA08A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A4B0E048(&qword_1E965DAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A4CA0908()
{
  unint64_t result = qword_1E965DA70;
  if (!qword_1E965DA70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E965DA70);
  }
  return result;
}

unint64_t sub_1A4CA0948()
{
  unint64_t result = qword_1E965DAB8;
  if (!qword_1E965DAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E965DAB8);
  }
  return result;
}

__n128 initializeWithCopy for LiveDatabaseCounts(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for LiveDatabaseCounts(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && a1[40]) {
    return (*(_DWORD *)a1 + 251);
  }
  if (*a1 <= 5u) {
    int v3 = 5;
  }
  else {
    int v3 = *a1;
  }
  int v4 = v3 - 6;
  if (*a1 < 5u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveDatabaseCounts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x10D0], 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveDatabaseCounts()
{
  return &type metadata for LiveDatabaseCounts;
}